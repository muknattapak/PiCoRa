

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Oct 31 11:02:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1
   130                           	psect	text113,global,reloc=2,class=CODE,delta=1
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1
   132                           	psect	text115,global,reloc=2,class=CODE,delta=1
   133                           	psect	text116,global,reloc=2,class=CODE,delta=1
   134                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text118,global,reloc=2,class=CODE,delta=1
   136                           	psect	text119,global,reloc=2,class=CODE,delta=1
   137                           	psect	text120,global,reloc=2,class=CODE,delta=1
   138                           	psect	text121,global,reloc=2,class=CODE,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	text123,global,reloc=2,class=CODE,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144                           	dabs	1,0x400,48,_BDT
   145                           	dabs	1,0x500,64,_cdc_data_tx
   146                           	dabs	1,0x438,8,_CtrlTrfData
   147                           	dabs	1,0x430,8,_SetupPkt
   148                           	dabs	1,0x540,64,_cdc_data_rx
   149  0000                     
   150                           ; Version 1.45
   151                           ; Generated 16/11/2017 GMT
   152                           ; 
   153                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18LF25K50 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     
   185                           	psect	idataCOMRAM
   186  004AC4                     __pidataCOMRAM:
   187                           	opt stack 0
   188                           
   189                           ;initializer for _dataRateSelection
   190  004AC4  02                 	db	2
   191                           
   192                           	psect	idataBANK0
   193  004A86                     __pidataBANK0:
   194                           	opt stack 0
   195                           
   196                           ;initializer for _selectedFont
   197  004A86  5B                 	db	low _OledFont0
   198  004A87  76                 	db	high _OledFont0
   199                           
   200                           ;initializer for _exitUSB
   201  004A88  01                 	db	1
   202                           
   203                           ;initializer for _periodicState
   204  004A89  03                 	db	3
   205                           
   206                           ;initializer for _menuTimeout
   207  004A8A  01                 	db	1
   208                           
   209                           ;initializer for _dataRateValue
   210  004A8B  02                 	db	2
   211                           
   212                           ;initializer for _periodicTimerValue
   213  004A8C  03                 	db	3
   214                           
   215                           ;initializer for _periodicUpValue
   216  004A8D  03                 	db	3
   217                           
   218                           ;initializer for _moteState
   219  004A8E  01                 	db	1
   220                           
   221                           	psect	mediumconst
   222  007652                     __pmediumconst:
   223                           	opt stack 0
   224  007652  00                 	db	0
   225  007653                     _USB_SD_Ptr:
   226                           	opt stack 0
   227  007653  18                 	db	low _sd000
   228  007654  7A                 	db	high _sd000
   229  007655  D2                 	db	low _sd001
   230  007656  79                 	db	high _sd001
   231  007657  9E                 	db	low _sd002
   232  007658  79                 	db	high _sd002
   233  007659                     __end_of_USB_SD_Ptr:
   234                           	opt stack 0
   235  007659                     _USB_CD_Ptr:
   236                           	opt stack 0
   237  007659  5B                 	db	low _configDescriptor1
   238  00765A  79                 	db	high _configDescriptor1
   239  00765B                     __end_of_USB_CD_Ptr:
   240                           	opt stack 0
   241  00765B                     _OledFont0:
   242                           	opt stack 0
   243  00765B  00                 	db	0
   244  00765C  00                 	db	0
   245  00765D  00                 	db	0
   246  00765E  00                 	db	0
   247  00765F  00                 	db	0
   248  007660  00                 	db	0
   249  007661  00                 	db	0
   250  007662  00                 	db	0
   251  007663  00                 	db	0
   252  007664  00                 	db	0
   253  007665  00                 	db	0
   254  007666  5F                 	db	95
   255  007667  00                 	db	0
   256  007668  00                 	db	0
   257  007669  00                 	db	0
   258  00766A  00                 	db	0
   259  00766B  00                 	db	0
   260  00766C  00                 	db	0
   261  00766D  03                 	db	3
   262  00766E  00                 	db	0
   263  00766F  03                 	db	3
   264  007670  00                 	db	0
   265  007671  00                 	db	0
   266  007672  00                 	db	0
   267  007673  64                 	db	100
   268  007674  3C                 	db	60
   269  007675  26                 	db	38
   270  007676  64                 	db	100
   271  007677  3C                 	db	60
   272  007678  26                 	db	38
   273  007679  24                 	db	36
   274  00767A  00                 	db	0
   275  00767B  26                 	db	38
   276  00767C  49                 	db	73
   277  00767D  49                 	db	73
   278  00767E  7F                 	db	127
   279  00767F  49                 	db	73
   280  007680  49                 	db	73
   281  007681  32                 	db	50
   282  007682  00                 	db	0
   283  007683  42                 	db	66
   284  007684  25                 	db	37
   285  007685  12                 	db	18
   286  007686  08                 	db	8
   287  007687  24                 	db	36
   288  007688  52                 	db	82
   289  007689  21                 	db	33
   290  00768A  00                 	db	0
   291  00768B  20                 	db	32
   292  00768C  50                 	db	80
   293  00768D  4E                 	db	78
   294  00768E  55                 	db	85
   295  00768F  22                 	db	34
   296  007690  58                 	db	88
   297  007691  28                 	db	40
   298  007692  00                 	db	0
   299  007693  00                 	db	0
   300  007694  00                 	db	0
   301  007695  00                 	db	0
   302  007696  03                 	db	3
   303  007697  00                 	db	0
   304  007698  00                 	db	0
   305  007699  00                 	db	0
   306  00769A  00                 	db	0
   307  00769B  00                 	db	0
   308  00769C  00                 	db	0
   309  00769D  1C                 	db	28
   310  00769E  22                 	db	34
   311  00769F  41                 	db	65
   312  0076A0  00                 	db	0
   313  0076A1  00                 	db	0
   314  0076A2  00                 	db	0
   315  0076A3  00                 	db	0
   316  0076A4  00                 	db	0
   317  0076A5  00                 	db	0
   318  0076A6  41                 	db	65
   319  0076A7  22                 	db	34
   320  0076A8  1C                 	db	28
   321  0076A9  00                 	db	0
   322  0076AA  00                 	db	0
   323  0076AB  00                 	db	0
   324  0076AC  15                 	db	21
   325  0076AD  15                 	db	21
   326  0076AE  0E                 	db	14
   327  0076AF  0E                 	db	14
   328  0076B0  15                 	db	21
   329  0076B1  15                 	db	21
   330  0076B2  00                 	db	0
   331  0076B3  00                 	db	0
   332  0076B4  08                 	db	8
   333  0076B5  08                 	db	8
   334  0076B6  3E                 	db	62
   335  0076B7  08                 	db	8
   336  0076B8  08                 	db	8
   337  0076B9  00                 	db	0
   338  0076BA  00                 	db	0
   339  0076BB  00                 	db	0
   340  0076BC  00                 	db	0
   341  0076BD  00                 	db	0
   342  0076BE  50                 	db	80
   343  0076BF  30                 	db	48
   344  0076C0  00                 	db	0
   345  0076C1  00                 	db	0
   346  0076C2  00                 	db	0
   347  0076C3  00                 	db	0
   348  0076C4  08                 	db	8
   349  0076C5  08                 	db	8
   350  0076C6  08                 	db	8
   351  0076C7  08                 	db	8
   352  0076C8  08                 	db	8
   353  0076C9  00                 	db	0
   354  0076CA  00                 	db	0
   355  0076CB  00                 	db	0
   356  0076CC  00                 	db	0
   357  0076CD  00                 	db	0
   358  0076CE  40                 	db	64
   359  0076CF  00                 	db	0
   360  0076D0  00                 	db	0
   361  0076D1  00                 	db	0
   362  0076D2  00                 	db	0
   363  0076D3  40                 	db	64
   364  0076D4  20                 	db	32
   365  0076D5  10                 	db	16
   366  0076D6  08                 	db	8
   367  0076D7  04                 	db	4
   368  0076D8  02                 	db	2
   369  0076D9  01                 	db	1
   370  0076DA  00                 	db	0
   371  0076DB  00                 	db	0
   372  0076DC  3E                 	db	62
   373  0076DD  41                 	db	65
   374  0076DE  41                 	db	65
   375  0076DF  41                 	db	65
   376  0076E0  3E                 	db	62
   377  0076E1  00                 	db	0
   378  0076E2  00                 	db	0
   379  0076E3  00                 	db	0
   380  0076E4  00                 	db	0
   381  0076E5  41                 	db	65
   382  0076E6  7F                 	db	127
   383  0076E7  40                 	db	64
   384  0076E8  00                 	db	0
   385  0076E9  00                 	db	0
   386  0076EA  00                 	db	0
   387  0076EB  00                 	db	0
   388  0076EC  42                 	db	66
   389  0076ED  61                 	db	97
   390  0076EE  51                 	db	81
   391  0076EF  49                 	db	73
   392  0076F0  6E                 	db	110
   393  0076F1  00                 	db	0
   394  0076F2  00                 	db	0
   395  0076F3  00                 	db	0
   396  0076F4  22                 	db	34
   397  0076F5  41                 	db	65
   398  0076F6  49                 	db	73
   399  0076F7  49                 	db	73
   400  0076F8  36                 	db	54
   401  0076F9  00                 	db	0
   402  0076FA  00                 	db	0
   403  0076FB  00                 	db	0
   404  0076FC  18                 	db	24
   405  0076FD  14                 	db	20
   406  0076FE  12                 	db	18
   407  0076FF  7F                 	db	127
   408  007700  10                 	db	16
   409  007701  00                 	db	0
   410  007702  00                 	db	0
   411  007703  00                 	db	0
   412  007704  27                 	db	39
   413  007705  49                 	db	73
   414  007706  49                 	db	73
   415  007707  49                 	db	73
   416  007708  71                 	db	113
   417  007709  00                 	db	0
   418  00770A  00                 	db	0
   419  00770B  00                 	db	0
   420  00770C  3C                 	db	60
   421  00770D  4A                 	db	74
   422  00770E  49                 	db	73
   423  00770F  48                 	db	72
   424  007710  70                 	db	112
   425  007711  00                 	db	0
   426  007712  00                 	db	0
   427  007713  00                 	db	0
   428  007714  43                 	db	67
   429  007715  21                 	db	33
   430  007716  11                 	db	17
   431  007717  0D                 	db	13
   432  007718  03                 	db	3
   433  007719  00                 	db	0
   434  00771A  00                 	db	0
   435  00771B  00                 	db	0
   436  00771C  36                 	db	54
   437  00771D  49                 	db	73
   438  00771E  49                 	db	73
   439  00771F  49                 	db	73
   440  007720  36                 	db	54
   441  007721  00                 	db	0
   442  007722  00                 	db	0
   443  007723  00                 	db	0
   444  007724  06                 	db	6
   445  007725  09                 	db	9
   446  007726  49                 	db	73
   447  007727  29                 	db	41
   448  007728  1E                 	db	30
   449  007729  00                 	db	0
   450  00772A  00                 	db	0
   451  00772B  00                 	db	0
   452  00772C  00                 	db	0
   453  00772D  00                 	db	0
   454  00772E  12                 	db	18
   455  00772F  00                 	db	0
   456  007730  00                 	db	0
   457  007731  00                 	db	0
   458  007732  00                 	db	0
   459  007733  00                 	db	0
   460  007734  00                 	db	0
   461  007735  00                 	db	0
   462  007736  52                 	db	82
   463  007737  30                 	db	48
   464  007738  00                 	db	0
   465  007739  00                 	db	0
   466  00773A  00                 	db	0
   467  00773B  00                 	db	0
   468  00773C  00                 	db	0
   469  00773D  08                 	db	8
   470  00773E  14                 	db	20
   471  00773F  14                 	db	20
   472  007740  22                 	db	34
   473  007741  00                 	db	0
   474  007742  00                 	db	0
   475  007743  00                 	db	0
   476  007744  14                 	db	20
   477  007745  14                 	db	20
   478  007746  14                 	db	20
   479  007747  14                 	db	20
   480  007748  14                 	db	20
   481  007749  14                 	db	20
   482  00774A  00                 	db	0
   483  00774B  00                 	db	0
   484  00774C  00                 	db	0
   485  00774D  22                 	db	34
   486  00774E  14                 	db	20
   487  00774F  14                 	db	20
   488  007750  08                 	db	8
   489  007751  00                 	db	0
   490  007752  00                 	db	0
   491  007753  00                 	db	0
   492  007754  02                 	db	2
   493  007755  01                 	db	1
   494  007756  59                 	db	89
   495  007757  05                 	db	5
   496  007758  02                 	db	2
   497  007759  00                 	db	0
   498  00775A  00                 	db	0
   499  00775B  3E                 	db	62
   500  00775C  41                 	db	65
   501  00775D  5D                 	db	93
   502  00775E  55                 	db	85
   503  00775F  4D                 	db	77
   504  007760  51                 	db	81
   505  007761  2E                 	db	46
   506  007762  00                 	db	0
   507  007763  40                 	db	64
   508  007764  7C                 	db	124
   509  007765  4A                 	db	74
   510  007766  09                 	db	9
   511  007767  4A                 	db	74
   512  007768  7C                 	db	124
   513  007769  40                 	db	64
   514  00776A  00                 	db	0
   515  00776B  41                 	db	65
   516  00776C  7F                 	db	127
   517  00776D  49                 	db	73
   518  00776E  49                 	db	73
   519  00776F  49                 	db	73
   520  007770  49                 	db	73
   521  007771  36                 	db	54
   522  007772  00                 	db	0
   523  007773  1C                 	db	28
   524  007774  22                 	db	34
   525  007775  41                 	db	65
   526  007776  41                 	db	65
   527  007777  41                 	db	65
   528  007778  41                 	db	65
   529  007779  22                 	db	34
   530  00777A  00                 	db	0
   531  00777B  41                 	db	65
   532  00777C  7F                 	db	127
   533  00777D  41                 	db	65
   534  00777E  41                 	db	65
   535  00777F  41                 	db	65
   536  007780  22                 	db	34
   537  007781  1C                 	db	28
   538  007782  00                 	db	0
   539  007783  41                 	db	65
   540  007784  7F                 	db	127
   541  007785  49                 	db	73
   542  007786  49                 	db	73
   543  007787  5D                 	db	93
   544  007788  41                 	db	65
   545  007789  63                 	db	99
   546  00778A  00                 	db	0
   547  00778B  41                 	db	65
   548  00778C  7F                 	db	127
   549  00778D  49                 	db	73
   550  00778E  09                 	db	9
   551  00778F  1D                 	db	29
   552  007790  01                 	db	1
   553  007791  03                 	db	3
   554  007792  00                 	db	0
   555  007793  1C                 	db	28
   556  007794  22                 	db	34
   557  007795  41                 	db	65
   558  007796  49                 	db	73
   559  007797  49                 	db	73
   560  007798  3A                 	db	58
   561  007799  08                 	db	8
   562  00779A  00                 	db	0
   563  00779B  41                 	db	65
   564  00779C  7F                 	db	127
   565  00779D  08                 	db	8
   566  00779E  08                 	db	8
   567  00779F  08                 	db	8
   568  0077A0  7F                 	db	127
   569  0077A1  41                 	db	65
   570  0077A2  00                 	db	0
   571  0077A3  00                 	db	0
   572  0077A4  41                 	db	65
   573  0077A5  41                 	db	65
   574  0077A6  7F                 	db	127
   575  0077A7  41                 	db	65
   576  0077A8  41                 	db	65
   577  0077A9  00                 	db	0
   578  0077AA  00                 	db	0
   579  0077AB  30                 	db	48
   580  0077AC  40                 	db	64
   581  0077AD  41                 	db	65
   582  0077AE  41                 	db	65
   583  0077AF  3F                 	db	63
   584  0077B0  01                 	db	1
   585  0077B1  01                 	db	1
   586  0077B2  00                 	db	0
   587  0077B3  41                 	db	65
   588  0077B4  7F                 	db	127
   589  0077B5  08                 	db	8
   590  0077B6  0C                 	db	12
   591  0077B7  12                 	db	18
   592  0077B8  61                 	db	97
   593  0077B9  41                 	db	65
   594  0077BA  00                 	db	0
   595  0077BB  41                 	db	65
   596  0077BC  7F                 	db	127
   597  0077BD  41                 	db	65
   598  0077BE  40                 	db	64
   599  0077BF  40                 	db	64
   600  0077C0  40                 	db	64
   601  0077C1  60                 	db	96
   602  0077C2  00                 	db	0
   603  0077C3  41                 	db	65
   604  0077C4  7F                 	db	127
   605  0077C5  42                 	db	66
   606  0077C6  0C                 	db	12
   607  0077C7  42                 	db	66
   608  0077C8  7F                 	db	127
   609  0077C9  41                 	db	65
   610  0077CA  00                 	db	0
   611  0077CB  41                 	db	65
   612  0077CC  7F                 	db	127
   613  0077CD  42                 	db	66
   614  0077CE  0C                 	db	12
   615  0077CF  11                 	db	17
   616  0077D0  7F                 	db	127
   617  0077D1  01                 	db	1
   618  0077D2  00                 	db	0
   619  0077D3  1C                 	db	28
   620  0077D4  22                 	db	34
   621  0077D5  41                 	db	65
   622  0077D6  41                 	db	65
   623  0077D7  41                 	db	65
   624  0077D8  22                 	db	34
   625  0077D9  1C                 	db	28
   626  0077DA  00                 	db	0
   627  0077DB  41                 	db	65
   628  0077DC  7F                 	db	127
   629  0077DD  49                 	db	73
   630  0077DE  09                 	db	9
   631  0077DF  09                 	db	9
   632  0077E0  09                 	db	9
   633  0077E1  06                 	db	6
   634  0077E2  00                 	db	0
   635  0077E3  0C                 	db	12
   636  0077E4  12                 	db	18
   637  0077E5  21                 	db	33
   638  0077E6  21                 	db	33
   639  0077E7  61                 	db	97
   640  0077E8  52                 	db	82
   641  0077E9  4C                 	db	76
   642  0077EA  00                 	db	0
   643  0077EB  41                 	db	65
   644  0077EC  7F                 	db	127
   645  0077ED  09                 	db	9
   646  0077EE  09                 	db	9
   647  0077EF  19                 	db	25
   648  0077F0  69                 	db	105
   649  0077F1  46                 	db	70
   650  0077F2  00                 	db	0
   651  0077F3  66                 	db	102
   652  0077F4  49                 	db	73
   653  0077F5  49                 	db	73
   654  0077F6  49                 	db	73
   655  0077F7  49                 	db	73
   656  0077F8  49                 	db	73
   657  0077F9  33                 	db	51
   658  0077FA  00                 	db	0
   659  0077FB  03                 	db	3
   660  0077FC  01                 	db	1
   661  0077FD  41                 	db	65
   662  0077FE  7F                 	db	127
   663  0077FF  41                 	db	65
   664  007800  01                 	db	1
   665  007801  03                 	db	3
   666  007802  00                 	db	0
   667  007803  01                 	db	1
   668  007804  3F                 	db	63
   669  007805  41                 	db	65
   670  007806  40                 	db	64
   671  007807  41                 	db	65
   672  007808  3F                 	db	63
   673  007809  01                 	db	1
   674  00780A  00                 	db	0
   675  00780B  01                 	db	1
   676  00780C  0F                 	db	15
   677  00780D  31                 	db	49
   678  00780E  40                 	db	64
   679  00780F  31                 	db	49
   680  007810  0F                 	db	15
   681  007811  01                 	db	1
   682  007812  00                 	db	0
   683  007813  01                 	db	1
   684  007814  1F                 	db	31
   685  007815  61                 	db	97
   686  007816  14                 	db	20
   687  007817  61                 	db	97
   688  007818  1F                 	db	31
   689  007819  01                 	db	1
   690  00781A  00                 	db	0
   691  00781B  41                 	db	65
   692  00781C  41                 	db	65
   693  00781D  36                 	db	54
   694  00781E  08                 	db	8
   695  00781F  36                 	db	54
   696  007820  41                 	db	65
   697  007821  41                 	db	65
   698  007822  00                 	db	0
   699  007823  01                 	db	1
   700  007824  03                 	db	3
   701  007825  44                 	db	68
   702  007826  78                 	db	120
   703  007827  44                 	db	68
   704  007828  03                 	db	3
   705  007829  01                 	db	1
   706  00782A  00                 	db	0
   707  00782B  43                 	db	67
   708  00782C  61                 	db	97
   709  00782D  51                 	db	81
   710  00782E  49                 	db	73
   711  00782F  45                 	db	69
   712  007830  43                 	db	67
   713  007831  61                 	db	97
   714  007832  00                 	db	0
   715  007833  00                 	db	0
   716  007834  00                 	db	0
   717  007835  7F                 	db	127
   718  007836  41                 	db	65
   719  007837  41                 	db	65
   720  007838  00                 	db	0
   721  007839  00                 	db	0
   722  00783A  00                 	db	0
   723  00783B  01                 	db	1
   724  00783C  02                 	db	2
   725  00783D  04                 	db	4
   726  00783E  08                 	db	8
   727  00783F  10                 	db	16
   728  007840  20                 	db	32
   729  007841  40                 	db	64
   730  007842  00                 	db	0
   731  007843  00                 	db	0
   732  007844  00                 	db	0
   733  007845  41                 	db	65
   734  007846  41                 	db	65
   735  007847  7F                 	db	127
   736  007848  00                 	db	0
   737  007849  00                 	db	0
   738  00784A  00                 	db	0
   739  00784B  00                 	db	0
   740  00784C  04                 	db	4
   741  00784D  02                 	db	2
   742  00784E  01                 	db	1
   743  00784F  01                 	db	1
   744  007850  02                 	db	2
   745  007851  04                 	db	4
   746  007852  00                 	db	0
   747  007853  00                 	db	0
   748  007854  40                 	db	64
   749  007855  40                 	db	64
   750  007856  40                 	db	64
   751  007857  40                 	db	64
   752  007858  40                 	db	64
   753  007859  40                 	db	64
   754  00785A  00                 	db	0
   755  00785B  00                 	db	0
   756  00785C  01                 	db	1
   757  00785D  02                 	db	2
   758  00785E  00                 	db	0
   759  00785F  00                 	db	0
   760  007860  00                 	db	0
   761  007861  00                 	db	0
   762  007862  00                 	db	0
   763  007863  00                 	db	0
   764  007864  34                 	db	52
   765  007865  4A                 	db	74
   766  007866  4A                 	db	74
   767  007867  4A                 	db	74
   768  007868  3C                 	db	60
   769  007869  40                 	db	64
   770  00786A  00                 	db	0
   771  00786B  00                 	db	0
   772  00786C  41                 	db	65
   773  00786D  3F                 	db	63
   774  00786E  48                 	db	72
   775  00786F  48                 	db	72
   776  007870  48                 	db	72
   777  007871  30                 	db	48
   778  007872  00                 	db	0
   779  007873  00                 	db	0
   780  007874  3C                 	db	60
   781  007875  42                 	db	66
   782  007876  42                 	db	66
   783  007877  42                 	db	66
   784  007878  24                 	db	36
   785  007879  00                 	db	0
   786  00787A  00                 	db	0
   787  00787B  00                 	db	0
   788  00787C  30                 	db	48
   789  00787D  48                 	db	72
   790  00787E  48                 	db	72
   791  00787F  49                 	db	73
   792  007880  3F                 	db	63
   793  007881  40                 	db	64
   794  007882  00                 	db	0
   795  007883  00                 	db	0
   796  007884  3C                 	db	60
   797  007885  4A                 	db	74
   798  007886  4A                 	db	74
   799  007887  4A                 	db	74
   800  007888  2C                 	db	44
   801  007889  00                 	db	0
   802  00788A  00                 	db	0
   803  00788B  00                 	db	0
   804  00788C  00                 	db	0
   805  00788D  48                 	db	72
   806  00788E  7E                 	db	126
   807  00788F  49                 	db	73
   808  007890  09                 	db	9
   809  007891  00                 	db	0
   810  007892  00                 	db	0
   811  007893  00                 	db	0
   812  007894  26                 	db	38
   813  007895  49                 	db	73
   814  007896  49                 	db	73
   815  007897  49                 	db	73
   816  007898  3F                 	db	63
   817  007899  01                 	db	1
   818  00789A  00                 	db	0
   819  00789B  41                 	db	65
   820  00789C  7F                 	db	127
   821  00789D  48                 	db	72
   822  00789E  04                 	db	4
   823  00789F  44                 	db	68
   824  0078A0  78                 	db	120
   825  0078A1  40                 	db	64
   826  0078A2  00                 	db	0
   827  0078A3  00                 	db	0
   828  0078A4  00                 	db	0
   829  0078A5  44                 	db	68
   830  0078A6  7D                 	db	125
   831  0078A7  40                 	db	64
   832  0078A8  00                 	db	0
   833  0078A9  00                 	db	0
   834  0078AA  00                 	db	0
   835  0078AB  00                 	db	0
   836  0078AC  00                 	db	0
   837  0078AD  40                 	db	64
   838  0078AE  44                 	db	68
   839  0078AF  3D                 	db	61
   840  0078B0  00                 	db	0
   841  0078B1  00                 	db	0
   842  0078B2  00                 	db	0
   843  0078B3  41                 	db	65
   844  0078B4  7F                 	db	127
   845  0078B5  10                 	db	16
   846  0078B6  18                 	db	24
   847  0078B7  24                 	db	36
   848  0078B8  42                 	db	66
   849  0078B9  42                 	db	66
   850  0078BA  00                 	db	0
   851  0078BB  00                 	db	0
   852  0078BC  40                 	db	64
   853  0078BD  41                 	db	65
   854  0078BE  7F                 	db	127
   855  0078BF  40                 	db	64
   856  0078C0  40                 	db	64
   857  0078C1  00                 	db	0
   858  0078C2  00                 	db	0
   859  0078C3  42                 	db	66
   860  0078C4  7E                 	db	126
   861  0078C5  02                 	db	2
   862  0078C6  7C                 	db	124
   863  0078C7  02                 	db	2
   864  0078C8  7E                 	db	126
   865  0078C9  40                 	db	64
   866  0078CA  00                 	db	0
   867  0078CB  42                 	db	66
   868  0078CC  7E                 	db	126
   869  0078CD  44                 	db	68
   870  0078CE  02                 	db	2
   871  0078CF  42                 	db	66
   872  0078D0  7C                 	db	124
   873  0078D1  40                 	db	64
   874  0078D2  00                 	db	0
   875  0078D3  00                 	db	0
   876  0078D4  3C                 	db	60
   877  0078D5  42                 	db	66
   878  0078D6  42                 	db	66
   879  0078D7  42                 	db	66
   880  0078D8  3C                 	db	60
   881  0078D9  00                 	db	0
   882  0078DA  00                 	db	0
   883  0078DB  00                 	db	0
   884  0078DC  41                 	db	65
   885  0078DD  7F                 	db	127
   886  0078DE  49                 	db	73
   887  0078DF  09                 	db	9
   888  0078E0  09                 	db	9
   889  0078E1  06                 	db	6
   890  0078E2  00                 	db	0
   891  0078E3  00                 	db	0
   892  0078E4  06                 	db	6
   893  0078E5  09                 	db	9
   894  0078E6  09                 	db	9
   895  0078E7  49                 	db	73
   896  0078E8  7F                 	db	127
   897  0078E9  41                 	db	65
   898  0078EA  00                 	db	0
   899  0078EB  00                 	db	0
   900  0078EC  42                 	db	66
   901  0078ED  7E                 	db	126
   902  0078EE  44                 	db	68
   903  0078EF  02                 	db	2
   904  0078F0  02                 	db	2
   905  0078F1  04                 	db	4
   906  0078F2  00                 	db	0
   907  0078F3  00                 	db	0
   908  0078F4  64                 	db	100
   909  0078F5  4A                 	db	74
   910  0078F6  4A                 	db	74
   911  0078F7  4A                 	db	74
   912  0078F8  36                 	db	54
   913  0078F9  00                 	db	0
   914  0078FA  00                 	db	0
   915  0078FB  00                 	db	0
   916  0078FC  04                 	db	4
   917  0078FD  3F                 	db	63
   918  0078FE  44                 	db	68
   919  0078FF  44                 	db	68
   920  007900  20                 	db	32
   921  007901  00                 	db	0
   922  007902  00                 	db	0
   923  007903  00                 	db	0
   924  007904  02                 	db	2
   925  007905  3E                 	db	62
   926  007906  40                 	db	64
   927  007907  40                 	db	64
   928  007908  22                 	db	34
   929  007909  7E                 	db	126
   930  00790A  40                 	db	64
   931  00790B  02                 	db	2
   932  00790C  0E                 	db	14
   933  00790D  32                 	db	50
   934  00790E  40                 	db	64
   935  00790F  32                 	db	50
   936  007910  0E                 	db	14
   937  007911  02                 	db	2
   938  007912  00                 	db	0
   939  007913  02                 	db	2
   940  007914  1E                 	db	30
   941  007915  62                 	db	98
   942  007916  18                 	db	24
   943  007917  62                 	db	98
   944  007918  1E                 	db	30
   945  007919  02                 	db	2
   946  00791A  00                 	db	0
   947  00791B  42                 	db	66
   948  00791C  62                 	db	98
   949  00791D  14                 	db	20
   950  00791E  08                 	db	8
   951  00791F  14                 	db	20
   952  007920  62                 	db	98
   953  007921  42                 	db	66
   954  007922  00                 	db	0
   955  007923  01                 	db	1
   956  007924  43                 	db	67
   957  007925  45                 	db	69
   958  007926  38                 	db	56
   959  007927  05                 	db	5
   960  007928  03                 	db	3
   961  007929  01                 	db	1
   962  00792A  00                 	db	0
   963  00792B  00                 	db	0
   964  00792C  46                 	db	70
   965  00792D  62                 	db	98
   966  00792E  52                 	db	82
   967  00792F  4A                 	db	74
   968  007930  46                 	db	70
   969  007931  62                 	db	98
   970  007932  00                 	db	0
   971  007933  00                 	db	0
   972  007934  00                 	db	0
   973  007935  08                 	db	8
   974  007936  36                 	db	54
   975  007937  41                 	db	65
   976  007938  00                 	db	0
   977  007939  00                 	db	0
   978  00793A  00                 	db	0
   979  00793B  00                 	db	0
   980  00793C  00                 	db	0
   981  00793D  00                 	db	0
   982  00793E  7F                 	db	127
   983  00793F  00                 	db	0
   984  007940  00                 	db	0
   985  007941  00                 	db	0
   986  007942  00                 	db	0
   987  007943  00                 	db	0
   988  007944  00                 	db	0
   989  007945  00                 	db	0
   990  007946  41                 	db	65
   991  007947  36                 	db	54
   992  007948  08                 	db	8
   993  007949  00                 	db	0
   994  00794A  00                 	db	0
   995  00794B  00                 	db	0
   996  00794C  18                 	db	24
   997  00794D  08                 	db	8
   998  00794E  08                 	db	8
   999  00794F  10                 	db	16
  1000  007950  10                 	db	16
  1001  007951  18                 	db	24
  1002  007952  00                 	db	0
  1003  007953  AA                 	db	170
  1004  007954  55                 	db	85
  1005  007955  AA                 	db	170
  1006  007956  55                 	db	85
  1007  007957  AA                 	db	170
  1008  007958  55                 	db	85
  1009  007959  AA                 	db	170
  1010  00795A  55                 	db	85
  1011  00795B                     __end_of_OledFont0:
  1012                           	opt stack 0
  1013  00795B                     _configDescriptor1:
  1014                           	opt stack 0
  1015  00795B  09                 	db	9
  1016  00795C  02                 	db	2
  1017  00795D  43                 	db	67
  1018  00795E  00                 	db	0
  1019  00795F  02                 	db	2
  1020  007960  01                 	db	1
  1021  007961  00                 	db	0
  1022  007962  C0                 	db	192
  1023  007963  32                 	db	50
  1024  007964  09                 	db	9
  1025  007965  04                 	db	4
  1026  007966  00                 	db	0
  1027  007967  00                 	db	0
  1028  007968  01                 	db	1
  1029  007969  02                 	db	2
  1030  00796A  02                 	db	2
  1031  00796B  01                 	db	1
  1032  00796C  00                 	db	0
  1033  00796D  05                 	db	5
  1034  00796E  24                 	db	36
  1035  00796F  00                 	db	0
  1036  007970  10                 	db	16
  1037  007971  01                 	db	1
  1038  007972  04                 	db	4
  1039  007973  24                 	db	36
  1040  007974  02                 	db	2
  1041  007975  02                 	db	2
  1042  007976  05                 	db	5
  1043  007977  24                 	db	36
  1044  007978  06                 	db	6
  1045  007979  00                 	db	0
  1046  00797A  01                 	db	1
  1047  00797B  05                 	db	5
  1048  00797C  24                 	db	36
  1049  00797D  01                 	db	1
  1050  00797E  00                 	db	0
  1051  00797F  01                 	db	1
  1052  007980  07                 	db	7
  1053  007981  05                 	db	5
  1054  007982  81                 	db	129
  1055  007983  03                 	db	3
  1056  007984  08                 	db	8
  1057  007985  00                 	db	0
  1058  007986  02                 	db	2
  1059  007987  09                 	db	9
  1060  007988  04                 	db	4
  1061  007989  01                 	db	1
  1062  00798A  00                 	db	0
  1063  00798B  02                 	db	2
  1064  00798C  0A                 	db	10
  1065  00798D  00                 	db	0
  1066  00798E  00                 	db	0
  1067  00798F  00                 	db	0
  1068  007990  07                 	db	7
  1069  007991  05                 	db	5
  1070  007992  02                 	db	2
  1071  007993  02                 	db	2
  1072  007994  40                 	db	64
  1073  007995  00                 	db	0
  1074  007996  00                 	db	0
  1075  007997  07                 	db	7
  1076  007998  05                 	db	5
  1077  007999  82                 	db	130
  1078  00799A  02                 	db	2
  1079  00799B  40                 	db	64
  1080  00799C  00                 	db	0
  1081  00799D  00                 	db	0
  1082  00799E                     __end_of_configDescriptor1:
  1083                           	opt stack 0
  1084  00799E                     _sd002:
  1085                           	opt stack 0
  1086  00799E  34                 	db	52
  1087  00799F  03                 	db	3
  1088  0079A0  0043               	dw	67
  1089  0079A2  0044               	dw	68
  1090  0079A4  0043               	dw	67
  1091  0079A6  0020               	dw	32
  1092  0079A8  0052               	dw	82
  1093  0079AA  0053               	dw	83
  1094  0079AC  002D               	dw	45
  1095  0079AE  0032               	dw	50
  1096  0079B0  0033               	dw	51
  1097  0079B2  0032               	dw	50
  1098  0079B4  0020               	dw	32
  1099  0079B6  0045               	dw	69
  1100  0079B8  006D               	dw	109
  1101  0079BA  0075               	dw	117
  1102  0079BC  006C               	dw	108
  1103  0079BE  0061               	dw	97
  1104  0079C0  0074               	dw	116
  1105  0079C2  0069               	dw	105
  1106  0079C4  006F               	dw	111
  1107  0079C6  006E               	dw	110
  1108  0079C8  0020               	dw	32
  1109  0079CA  0044               	dw	68
  1110  0079CC  0065               	dw	101
  1111  0079CE  006D               	dw	109
  1112  0079D0  006F               	dw	111
  1113  0079D2                     __end_of_sd002:
  1114                           	opt stack 0
  1115  0079D2                     _sd001:
  1116                           	opt stack 0
  1117  0079D2  34                 	db	52
  1118  0079D3  03                 	db	3
  1119  0079D4  004D               	dw	77
  1120  0079D6  0069               	dw	105
  1121  0079D8  0063               	dw	99
  1122  0079DA  0072               	dw	114
  1123  0079DC  006F               	dw	111
  1124  0079DE  0063               	dw	99
  1125  0079E0  0068               	dw	104
  1126  0079E2  0069               	dw	105
  1127  0079E4  0070               	dw	112
  1128  0079E6  0020               	dw	32
  1129  0079E8  0054               	dw	84
  1130  0079EA  0065               	dw	101
  1131  0079EC  0063               	dw	99
  1132  0079EE  0068               	dw	104
  1133  0079F0  006E               	dw	110
  1134  0079F2  006F               	dw	111
  1135  0079F4  006C               	dw	108
  1136  0079F6  006F               	dw	111
  1137  0079F8  0067               	dw	103
  1138  0079FA  0079               	dw	121
  1139  0079FC  0020               	dw	32
  1140  0079FE  0049               	dw	73
  1141  007A00  006E               	dw	110
  1142  007A02  0063               	dw	99
  1143  007A04  002E               	dw	46
  1144  007A06                     __end_of_sd001:
  1145                           	opt stack 0
  1146  007A06                     _device_dsc:
  1147                           	opt stack 0
  1148  007A06  12                 	db	18
  1149  007A07  01                 	db	1
  1150  007A08  0200               	dw	512
  1151  007A0A  02                 	db	2
  1152  007A0B  00                 	db	0
  1153  007A0C  00                 	db	0
  1154  007A0D  08                 	db	8
  1155  007A0E  04D8               	dw	1240
  1156  007A10  000A               	dw	10
  1157  007A12  0100               	dw	256
  1158  007A14  01                 	db	1
  1159  007A15  02                 	db	2
  1160  007A16  00                 	db	0
  1161  007A17  01                 	db	1
  1162  007A18                     __end_of_device_dsc:
  1163                           	opt stack 0
  1164  007A18                     _sd000:
  1165                           	opt stack 0
  1166  007A18  04                 	db	4
  1167  007A19  03                 	db	3
  1168  007A1A  0409               	dw	1033
  1169  007A1C                     __end_of_sd000:
  1170                           	opt stack 0
  1171  0000                     _ANSELCbits	set	3933
  1172  0000                     _ANSELAbits	set	3931
  1173  0000                     _UEP0bits	set	3946
  1174  0000                     _IPR3bits	set	4005
  1175  0000                     _RCONbits	set	4048
  1176  0000                     _UCON	set	3936
  1177  0000                     _USTAT	set	3937
  1178  0000                     _PIR3bits	set	4004
  1179  0000                     _UIEbits	set	3940
  1180  0000                     _UIRbits	set	3941
  1181  0000                     _UADDR	set	3939
  1182  0000                     _UIE	set	3940
  1183  0000                     _UEIE	set	3942
  1184  0000                     _UCFG	set	3938
  1185  0000                     _UIR	set	3941
  1186  0000                     _UEIR	set	3943
  1187  0000                     _PIE3bits	set	4003
  1188  0000                     _T2CONbits	set	4026
  1189  0000                     _TMR2	set	4028
  1190  0000                     _PR2	set	4027
  1191  0000                     _T2CON	set	4026
  1192  0000                     _VREFCON0bits	set	3965
  1193  0000                     _CM1CON0bits	set	3992
  1194  0000                     _CM2CON1bits	set	3994
  1195  0000                     _CM1CON0	set	3992
  1196  0000                     _EEDATA	set	4008
  1197  0000                     _EEADR	set	4009
  1198  0000                     _EECON2	set	4007
  1199  0000                     _EECON1bits	set	4006
  1200  0000                     _TABLAT	set	4085
  1201  0000                     _TBLPTRL	set	4086
  1202  0000                     _TBLPTRH	set	4087
  1203  0000                     _TBLPTRU	set	4088
  1204  0000                     _TRISCbits	set	3988
  1205  0000                     _TRISAbits	set	3986
  1206  0000                     _T1GCONbits	set	4044
  1207  0000                     _T1CONbits	set	4045
  1208  0000                     _TMR1L	set	4046
  1209  0000                     _TMR1H	set	4047
  1210  0000                     _T1GCON	set	4044
  1211  0000                     _T1CON	set	4045
  1212  0000                     _SSP1STATbits	set	4039
  1213  0000                     _SSPBUF	set	4041
  1214  0000                     _SSP1CON1bits	set	4038
  1215  0000                     _SSP1ADD	set	4040
  1216  0000                     _SSP1CON1	set	4038
  1217  0000                     _SSP1STAT	set	4039
  1218  0000                     _ADRESH	set	4036
  1219  0000                     _ADRESL	set	4035
  1220  0000                     _ADCON2	set	4032
  1221  0000                     _ADCON1	set	4033
  1222  0000                     _ADCON0	set	4034
  1223  0000                     _VREFCON0	set	3965
  1224  0000                     _ACTCON	set	4021
  1225  0000                     _OSCCON2bits	set	4050
  1226  0000                     _OSCCON2	set	4050
  1227  0000                     _OSCCON	set	4051
  1228  0000                     _OSCTUNE	set	3995
  1229  0000                     _PIR1bits	set	3998
  1230  0000                     _RCREG	set	4014
  1231  0000                     _RCSTAbits	set	4011
  1232  0000                     _TXSTA	set	4012
  1233  0000                     _RCSTA	set	4011
  1234  0000                     _BAUDCON	set	4024
  1235  0000                     _TRISBbits	set	3987
  1236  0000                     _LATBbits	set	3978
  1237  0000                     _SPBRGH	set	4016
  1238  0000                     _SPBRG	set	4015
  1239  0000                     _UCONbits	set	3936
  1240  0000                     _PIR2bits	set	4001
  1241  0000                     _WDTCONbits	set	4049
  1242  0000                     _IOCCbits	set	3975
  1243  0000                     _PIE2bits	set	4000
  1244  0000                     _INTCONbits	set	4082
  1245  0000                     _ADCON0bits	set	4034
  1246  0000                     _PORTAbits	set	3968
  1247  0000                     _PIE1bits	set	3997
  1248  0000                     _TXREG	set	4013
  1249  0000                     _LATCbits	set	3979
  1250  0000                     _TXSTAbits	set	4012
  1251  0000                     _LATAbits	set	3977
  1252  0000                     _PORTCbits	set	3970
  1253  0000                     _UEP1	set	3947
  1254  0000                     _UEP0	set	3946
  1255  0000                     _CKE	set	32318
  1256  0000                     _CKP	set	32308
  1257  0000                     _GIE	set	32663
  1258  0000                     _PEIE	set	32662
  1259  007A1C                     STR_177:
  1260  007A1C  73                 	db	115	;'s'
  1261  007A1D  79                 	db	121	;'y'
  1262  007A1E  73                 	db	115	;'s'
  1263  007A1F  20                 	db	32
  1264  007A20  73                 	db	115	;'s'
  1265  007A21  65                 	db	101	;'e'
  1266  007A22  74                 	db	116	;'t'
  1267  007A23  20                 	db	32
  1268  007A24  70                 	db	112	;'p'
  1269  007A25  69                 	db	105	;'i'
  1270  007A26  6E                 	db	110	;'n'
  1271  007A27  64                 	db	100	;'d'
  1272  007A28  69                 	db	105	;'i'
  1273  007A29  67                 	db	103	;'g'
  1274  007A2A  20                 	db	32
  1275  007A2B  47                 	db	71	;'G'
  1276  007A2C  50                 	db	80	;'P'
  1277  007A2D  49                 	db	73	;'I'
  1278  007A2E  4F                 	db	79	;'O'
  1279  007A2F  31                 	db	49	;'1'
  1280  007A30  30                 	db	48	;'0'
  1281  007A31  20                 	db	32
  1282  007A32  30                 	db	48	;'0'
  1283  007A33  0D                 	db	13
  1284  007A34  0A                 	db	10
  1285  007A35  00                 	db	0
  1286  007A36                     STR_178:
  1287  007A36  73                 	db	115	;'s'
  1288  007A37  79                 	db	121	;'y'
  1289  007A38  73                 	db	115	;'s'
  1290  007A39  20                 	db	32
  1291  007A3A  73                 	db	115	;'s'
  1292  007A3B  65                 	db	101	;'e'
  1293  007A3C  74                 	db	116	;'t'
  1294  007A3D  20                 	db	32
  1295  007A3E  70                 	db	112	;'p'
  1296  007A3F  69                 	db	105	;'i'
  1297  007A40  6E                 	db	110	;'n'
  1298  007A41  64                 	db	100	;'d'
  1299  007A42  69                 	db	105	;'i'
  1300  007A43  67                 	db	103	;'g'
  1301  007A44  20                 	db	32
  1302  007A45  47                 	db	71	;'G'
  1303  007A46  50                 	db	80	;'P'
  1304  007A47  49                 	db	73	;'I'
  1305  007A48  4F                 	db	79	;'O'
  1306  007A49  31                 	db	49	;'1'
  1307  007A4A  31                 	db	49	;'1'
  1308  007A4B  20                 	db	32
  1309  007A4C  30                 	db	48	;'0'
  1310  007A4D  0D                 	db	13
  1311  007A4E  0A                 	db	10
  1312  007A4F  00                 	db	0
  1313  007A50                     STR_175:
  1314  007A50  73                 	db	115	;'s'
  1315  007A51  79                 	db	121	;'y'
  1316  007A52  73                 	db	115	;'s'
  1317  007A53  20                 	db	32
  1318  007A54  73                 	db	115	;'s'
  1319  007A55  65                 	db	101	;'e'
  1320  007A56  74                 	db	116	;'t'
  1321  007A57  20                 	db	32
  1322  007A58  70                 	db	112	;'p'
  1323  007A59  69                 	db	105	;'i'
  1324  007A5A  6E                 	db	110	;'n'
  1325  007A5B  64                 	db	100	;'d'
  1326  007A5C  69                 	db	105	;'i'
  1327  007A5D  67                 	db	103	;'g'
  1328  007A5E  20                 	db	32
  1329  007A5F  47                 	db	71	;'G'
  1330  007A60  50                 	db	80	;'P'
  1331  007A61  49                 	db	73	;'I'
  1332  007A62  4F                 	db	79	;'O'
  1333  007A63  31                 	db	49	;'1'
  1334  007A64  30                 	db	48	;'0'
  1335  007A65  20                 	db	32
  1336  007A66  31                 	db	49	;'1'
  1337  007A67  0D                 	db	13
  1338  007A68  0A                 	db	10
  1339  007A69  00                 	db	0
  1340  007A6A                     STR_176:
  1341  007A6A  73                 	db	115	;'s'
  1342  007A6B  79                 	db	121	;'y'
  1343  007A6C  73                 	db	115	;'s'
  1344  007A6D  20                 	db	32
  1345  007A6E  73                 	db	115	;'s'
  1346  007A6F  65                 	db	101	;'e'
  1347  007A70  74                 	db	116	;'t'
  1348  007A71  20                 	db	32
  1349  007A72  70                 	db	112	;'p'
  1350  007A73  69                 	db	105	;'i'
  1351  007A74  6E                 	db	110	;'n'
  1352  007A75  64                 	db	100	;'d'
  1353  007A76  69                 	db	105	;'i'
  1354  007A77  67                 	db	103	;'g'
  1355  007A78  20                 	db	32
  1356  007A79  47                 	db	71	;'G'
  1357  007A7A  50                 	db	80	;'P'
  1358  007A7B  49                 	db	73	;'I'
  1359  007A7C  4F                 	db	79	;'O'
  1360  007A7D  31                 	db	49	;'1'
  1361  007A7E  31                 	db	49	;'1'
  1362  007A7F  20                 	db	32
  1363  007A80  31                 	db	49	;'1'
  1364  007A81  0D                 	db	13
  1365  007A82  0A                 	db	10
  1366  007A83  00                 	db	0
  1367  007A84                     STR_22:
  1368  007A84  73                 	db	115	;'s'
  1369  007A85  79                 	db	121	;'y'
  1370  007A86  73                 	db	115	;'s'
  1371  007A87  20                 	db	32
  1372  007A88  73                 	db	115	;'s'
  1373  007A89  6C                 	db	108	;'l'
  1374  007A8A  65                 	db	101	;'e'
  1375  007A8B  65                 	db	101	;'e'
  1376  007A8C  70                 	db	112	;'p'
  1377  007A8D  20                 	db	32
  1378  007A8E  39                 	db	57	;'9'
  1379  007A8F  39                 	db	57	;'9'
  1380  007A90  39                 	db	57	;'9'
  1381  007A91  39                 	db	57	;'9'
  1382  007A92  39                 	db	57	;'9'
  1383  007A93  39                 	db	57	;'9'
  1384  007A94  39                 	db	57	;'9'
  1385  007A95  39                 	db	57	;'9'
  1386  007A96  39                 	db	57	;'9'
  1387  007A97  00                 	db	0
  1388  007A98                     STR_83:
  1389  007A98  28                 	db	40
  1390  007A99  55                 	db	85	;'U'
  1391  007A9A  4E                 	db	78	;'N'
  1392  007A9B  43                 	db	67	;'C'
  1393  007A9C  4E                 	db	78	;'N'
  1394  007A9D  46                 	db	70	;'F'
  1395  007A9E  29                 	db	41
  1396  007A9F  20                 	db	32
  1397  007AA0  20                 	db	32
  1398  007AA1  20                 	db	32
  1399  007AA2  20                 	db	32
  1400  007AA3  28                 	db	40
  1401  007AA4  43                 	db	67	;'C'
  1402  007AA5  4E                 	db	78	;'N'
  1403  007AA6  46                 	db	70	;'F'
  1404  007AA7  29                 	db	41
  1405  007AA8  20                 	db	32
  1406  007AA9  00                 	db	0
  1407  007AAA                     STR_96:
  1408  007AAA  4D                 	db	77	;'M'
  1409  007AAB  61                 	db	97	;'a'
  1410  007AAC  63                 	db	99	;'c'
  1411  007AAD  20                 	db	32
  1412  007AAE  45                 	db	69	;'E'
  1413  007AAF  72                 	db	114	;'r'
  1414  007AB0  72                 	db	114	;'r'
  1415  007AB1  6F                 	db	111	;'o'
  1416  007AB2  72                 	db	114	;'r'
  1417  007AB3  20                 	db	32
  1418  007AB4  4F                 	db	79	;'O'
  1419  007AB5  63                 	db	99	;'c'
  1420  007AB6  63                 	db	99	;'c'
  1421  007AB7  75                 	db	117	;'u'
  1422  007AB8  72                 	db	114	;'r'
  1423  007AB9  65                 	db	101	;'e'
  1424  007ABA  64                 	db	100	;'d'
  1425  007ABB  00                 	db	0
  1426  007ABC                     STR_39:
  1427  007ABC  20                 	db	32
  1428  007ABD  20                 	db	32
  1429  007ABE  28                 	db	40
  1430  007ABF  53                 	db	83	;'S'
  1431  007AC0  32                 	db	50	;'2'
  1432  007AC1  29                 	db	41
  1433  007AC2  20                 	db	32
  1434  007AC3  20                 	db	32
  1435  007AC4  20                 	db	32
  1436  007AC5  20                 	db	32
  1437  007AC6  20                 	db	32
  1438  007AC7  20                 	db	32
  1439  007AC8  20                 	db	32
  1440  007AC9  20                 	db	32
  1441  007ACA  20                 	db	32
  1442  007ACB  20                 	db	32
  1443  007ACC  00                 	db	0
  1444  007ACD                     STR_92:
  1445  007ACD  20                 	db	32
  1446  007ACE  20                 	db	32
  1447  007ACF  20                 	db	32
  1448  007AD0  20                 	db	32
  1449  007AD1  52                 	db	82	;'R'
  1450  007AD2  65                 	db	101	;'e'
  1451  007AD3  63                 	db	99	;'c'
  1452  007AD4  65                 	db	101	;'e'
  1453  007AD5  69                 	db	105	;'i'
  1454  007AD6  76                 	db	118	;'v'
  1455  007AD7  65                 	db	101	;'e'
  1456  007AD8  64                 	db	100	;'d'
  1457  007AD9  20                 	db	32
  1458  007ADA  20                 	db	32
  1459  007ADB  20                 	db	32
  1460  007ADC  20                 	db	32
  1461  007ADD  00                 	db	0
  1462  007ADE                     STR_41:
  1463  007ADE  20                 	db	32
  1464  007ADF  20                 	db	32
  1465  007AE0  20                 	db	32
  1466  007AE1  20                 	db	32
  1467  007AE2  20                 	db	32
  1468  007AE3  20                 	db	32
  1469  007AE4  20                 	db	32
  1470  007AE5  20                 	db	32
  1471  007AE6  20                 	db	32
  1472  007AE7  28                 	db	40
  1473  007AE8  53                 	db	83	;'S'
  1474  007AE9  33                 	db	51	;'3'
  1475  007AEA  29                 	db	41
  1476  007AEB  20                 	db	32
  1477  007AEC  20                 	db	32
  1478  007AED  20                 	db	32
  1479  007AEE  00                 	db	0
  1480  007AEF                     STR_33:
  1481  007AEF  20                 	db	32
  1482  007AF0  20                 	db	32
  1483  007AF1  28                 	db	40
  1484  007AF2  53                 	db	83	;'S'
  1485  007AF3  32                 	db	50	;'2'
  1486  007AF4  29                 	db	41
  1487  007AF5  20                 	db	32
  1488  007AF6  20                 	db	32
  1489  007AF7  20                 	db	32
  1490  007AF8  28                 	db	40
  1491  007AF9  53                 	db	83	;'S'
  1492  007AFA  33                 	db	51	;'3'
  1493  007AFB  29                 	db	41
  1494  007AFC  20                 	db	32
  1495  007AFD  20                 	db	32
  1496  007AFE  20                 	db	32
  1497  007AFF  00                 	db	0
  1498  007B00                     STR_79:
  1499  007B00  20                 	db	32
  1500  007B01  20                 	db	32
  1501  007B02  4C                 	db	76	;'L'
  1502  007B03  61                 	db	97	;'a'
  1503  007B04  73                 	db	115	;'s'
  1504  007B05  74                 	db	116	;'t'
  1505  007B06  20                 	db	32
  1506  007B07  4D                 	db	77	;'M'
  1507  007B08  65                 	db	101	;'e'
  1508  007B09  73                 	db	115	;'s'
  1509  007B0A  73                 	db	115	;'s'
  1510  007B0B  61                 	db	97	;'a'
  1511  007B0C  67                 	db	103	;'g'
  1512  007B0D  65                 	db	101	;'e'
  1513  007B0E  20                 	db	32
  1514  007B0F  20                 	db	32
  1515  007B10  00                 	db	0
  1516  007B11                     STR_78:
  1517  007B11  20                 	db	32
  1518  007B12  56                 	db	86	;'V'
  1519  007B13  69                 	db	105	;'i'
  1520  007B14  65                 	db	101	;'e'
  1521  007B15  77                 	db	119	;'w'
  1522  007B16  20                 	db	32
  1523  007B17  44                 	db	68	;'D'
  1524  007B18  6F                 	db	111	;'o'
  1525  007B19  77                 	db	119	;'w'
  1526  007B1A  6E                 	db	110	;'n'
  1527  007B1B  6C                 	db	108	;'l'
  1528  007B1C  69                 	db	105	;'i'
  1529  007B1D  6E                 	db	110	;'n'
  1530  007B1E  6B                 	db	107	;'k'
  1531  007B1F  20                 	db	32
  1532  007B20  20                 	db	32
  1533  007B21  00                 	db	0
  1534  007B22                     STR_75:
  1535  007B22  20                 	db	32
  1536  007B23  20                 	db	32
  1537  007B24  49                 	db	73	;'I'
  1538  007B25  73                 	db	115	;'s'
  1539  007B26  73                 	db	115	;'s'
  1540  007B27  75                 	db	117	;'u'
  1541  007B28  65                 	db	101	;'e'
  1542  007B29  20                 	db	32
  1543  007B2A  55                 	db	85	;'U'
  1544  007B2B  70                 	db	112	;'p'
  1545  007B2C  6C                 	db	108	;'l'
  1546  007B2D  69                 	db	105	;'i'
  1547  007B2E  6E                 	db	110	;'n'
  1548  007B2F  6B                 	db	107	;'k'
  1549  007B30  20                 	db	32
  1550  007B31  20                 	db	32
  1551  007B32  00                 	db	0
  1552  007B33                     STR_28:
  1553  007B33  20                 	db	32
  1554  007B34  28                 	db	40
  1555  007B35  53                 	db	83	;'S'
  1556  007B36  31                 	db	49	;'1'
  1557  007B37  29                 	db	41
  1558  007B38  20                 	db	32
  1559  007B39  20                 	db	32
  1560  007B3A  20                 	db	32
  1561  007B3B  20                 	db	32
  1562  007B3C  20                 	db	32
  1563  007B3D  20                 	db	32
  1564  007B3E  28                 	db	40
  1565  007B3F  53                 	db	83	;'S'
  1566  007B40  32                 	db	50	;'2'
  1567  007B41  29                 	db	41
  1568  007B42  20                 	db	32
  1569  007B43  00                 	db	0
  1570  007B44                     STR_31:
  1571  007B44  20                 	db	32
  1572  007B45  4A                 	db	74	;'J'
  1573  007B46  6F                 	db	111	;'o'
  1574  007B47  69                 	db	105	;'i'
  1575  007B48  6E                 	db	110	;'n'
  1576  007B49  69                 	db	105	;'i'
  1577  007B4A  6E                 	db	110	;'n'
  1578  007B4B  67                 	db	103	;'g'
  1579  007B4C  20                 	db	32
  1580  007B4D  4D                 	db	77	;'M'
  1581  007B4E  65                 	db	101	;'e'
  1582  007B4F  74                 	db	116	;'t'
  1583  007B50  68                 	db	104	;'h'
  1584  007B51  6F                 	db	111	;'o'
  1585  007B52  64                 	db	100	;'d'
  1586  007B53  20                 	db	32
  1587  007B54  00                 	db	0
  1588  007B55                     STR_91:
  1589  007B55  53                 	db	83	;'S'
  1590  007B56  65                 	db	101	;'e'
  1591  007B57  72                 	db	114	;'r'
  1592  007B58  76                 	db	118	;'v'
  1593  007B59  65                 	db	101	;'e'
  1594  007B5A  72                 	db	114	;'r'
  1595  007B5B  20                 	db	32
  1596  007B5C  52                 	db	82	;'R'
  1597  007B5D  65                 	db	101	;'e'
  1598  007B5E  73                 	db	115	;'s'
  1599  007B5F  70                 	db	112	;'p'
  1600  007B60  6F                 	db	111	;'o'
  1601  007B61  6E                 	db	110	;'n'
  1602  007B62  73                 	db	115	;'s'
  1603  007B63  65                 	db	101	;'e'
  1604  007B64  20                 	db	32
  1605  007B65  00                 	db	0
  1606  007B66                     STR_120:
  1607  007B66  54                 	db	84	;'T'
  1608  007B67  78                 	db	120	;'x'
  1609  007B68  20                 	db	32
  1610  007B69  45                 	db	69	;'E'
  1611  007B6A  76                 	db	118	;'v'
  1612  007B6B  65                 	db	101	;'e'
  1613  007B6C  6E                 	db	110	;'n'
  1614  007B6D  74                 	db	116	;'t'
  1615  007B6E  20                 	db	32
  1616  007B6F  54                 	db	84	;'T'
  1617  007B70  69                 	db	105	;'i'
  1618  007B71  6D                 	db	109	;'m'
  1619  007B72  69                 	db	105	;'i'
  1620  007B73  6E                 	db	110	;'n'
  1621  007B74  67                 	db	103	;'g'
  1622  007B75  20                 	db	32
  1623  007B76  00                 	db	0
  1624  007B77                     STR_119:
  1625  007B77  50                 	db	80	;'P'
  1626  007B78  65                 	db	101	;'e'
  1627  007B79  72                 	db	114	;'r'
  1628  007B7A  69                 	db	105	;'i'
  1629  007B7B  6F                 	db	111	;'o'
  1630  007B7C  64                 	db	100	;'d'
  1631  007B7D  69                 	db	105	;'i'
  1632  007B7E  63                 	db	99	;'c'
  1633  007B7F  20                 	db	32
  1634  007B80  55                 	db	85	;'U'
  1635  007B81  70                 	db	112	;'p'
  1636  007B82  6C                 	db	108	;'l'
  1637  007B83  69                 	db	105	;'i'
  1638  007B84  6E                 	db	110	;'n'
  1639  007B85  6B                 	db	107	;'k'
  1640  007B86  20                 	db	32
  1641  007B87  00                 	db	0
  1642  007B88                     STR_76:
  1643  007B88  20                 	db	32
  1644  007B89  4C                 	db	76	;'L'
  1645  007B8A  6F                 	db	111	;'o'
  1646  007B8B  52                 	db	82	;'R'
  1647  007B8C  61                 	db	97	;'a'
  1648  007B8D  57                 	db	87	;'W'
  1649  007B8E  41                 	db	65	;'A'
  1650  007B8F  4E                 	db	78	;'N'
  1651  007B90  20                 	db	32
  1652  007B91  50                 	db	80	;'P'
  1653  007B92  61                 	db	97	;'a'
  1654  007B93  63                 	db	99	;'c'
  1655  007B94  6B                 	db	107	;'k'
  1656  007B95  65                 	db	101	;'e'
  1657  007B96  74                 	db	116	;'t'
  1658  007B97  20                 	db	32
  1659  007B98  00                 	db	0
  1660  007B99                     STR_32:
  1661  007B99  3C                 	db	60	;'<'
  1662  007B9A  2D                 	db	45
  1663  007B9B  20                 	db	32
  1664  007B9C  41                 	db	65	;'A'
  1665  007B9D  42                 	db	66	;'B'
  1666  007B9E  50                 	db	80	;'P'
  1667  007B9F  20                 	db	32
  1668  007BA0  20                 	db	32
  1669  007BA1  20                 	db	32
  1670  007BA2  4F                 	db	79	;'O'
  1671  007BA3  54                 	db	84	;'T'
  1672  007BA4  41                 	db	65	;'A'
  1673  007BA5  41                 	db	65	;'A'
  1674  007BA6  20                 	db	32
  1675  007BA7  2D                 	db	45
  1676  007BA8  3E                 	db	62	;'>'
  1677  007BA9  00                 	db	0
  1678  007BAA                     STR_25:
  1679  007BAA  52                 	db	82	;'R'
  1680  007BAB  65                 	db	101	;'e'
  1681  007BAC  52                 	db	82	;'R'
  1682  007BAD  75                 	db	117	;'u'
  1683  007BAE  6E                 	db	110	;'n'
  1684  007BAF  20                 	db	32
  1685  007BB0  50                 	db	80	;'P'
  1686  007BB1  77                 	db	119	;'w'
  1687  007BB2  72                 	db	114	;'r'
  1688  007BB3  54                 	db	84	;'T'
  1689  007BB4  73                 	db	115	;'s'
  1690  007BB5  74                 	db	116	;'t'
  1691  007BB6  3C                 	db	60	;'<'
  1692  007BB7  53                 	db	83	;'S'
  1693  007BB8  32                 	db	50	;'2'
  1694  007BB9  3E                 	db	62	;'>'
  1695  007BBA  00                 	db	0
  1696  007BBB                     STR_70:
  1697  007BBB  49                 	db	73	;'I'
  1698  007BBC  73                 	db	115	;'s'
  1699  007BBD  73                 	db	115	;'s'
  1700  007BBE  75                 	db	117	;'u'
  1701  007BBF  65                 	db	101	;'e'
  1702  007BC0  20                 	db	32
  1703  007BC1  50                 	db	80	;'P'
  1704  007BC2  65                 	db	101	;'e'
  1705  007BC3  72                 	db	114	;'r'
  1706  007BC4  6F                 	db	111	;'o'
  1707  007BC5  64                 	db	100	;'d'
  1708  007BC6  69                 	db	105	;'i'
  1709  007BC7  63                 	db	99	;'c'
  1710  007BC8  20                 	db	32
  1711  007BC9  54                 	db	84	;'T'
  1712  007BCA  58                 	db	88	;'X'
  1713  007BCB  00                 	db	0
  1714  007BCC                     STR_94:
  1715  007BCC  44                 	db	68	;'D'
  1716  007BCD  61                 	db	97	;'a'
  1717  007BCE  74                 	db	116	;'t'
  1718  007BCF  61                 	db	97	;'a'
  1719  007BD0  20                 	db	32
  1720  007BD1  54                 	db	84	;'T'
  1721  007BD2  72                 	db	114	;'r'
  1722  007BD3  61                 	db	97	;'a'
  1723  007BD4  6E                 	db	110	;'n'
  1724  007BD5  73                 	db	115	;'s'
  1725  007BD6  6D                 	db	109	;'m'
  1726  007BD7  69                 	db	105	;'i'
  1727  007BD8  74                 	db	116	;'t'
  1728  007BD9  74                 	db	116	;'t'
  1729  007BDA  65                 	db	101	;'e'
  1730  007BDB  64                 	db	100	;'d'
  1731  007BDC  00                 	db	0
  1732  007BDD                     STR_151:
  1733  007BDD  45                 	db	69	;'E'
  1734  007BDE  6E                 	db	110	;'n'
  1735  007BDF  74                 	db	116	;'t'
  1736  007BE0  65                 	db	101	;'e'
  1737  007BE1  72                 	db	114	;'r'
  1738  007BE2  20                 	db	32
  1739  007BE3  53                 	db	83	;'S'
  1740  007BE4  6C                 	db	108	;'l'
  1741  007BE5  65                 	db	101	;'e'
  1742  007BE6  65                 	db	101	;'e'
  1743  007BE7  70                 	db	112	;'p'
  1744  007BE8  20                 	db	32
  1745  007BE9  4D                 	db	77	;'M'
  1746  007BEA  6F                 	db	111	;'o'
  1747  007BEB  64                 	db	100	;'d'
  1748  007BEC  65                 	db	101	;'e'
  1749  007BED  00                 	db	0
  1750  007BEE                     STR_81:
  1751  007BEE  55                 	db	85	;'U'
  1752  007BEF  70                 	db	112	;'p'
  1753  007BF0  6C                 	db	108	;'l'
  1754  007BF1  69                 	db	105	;'i'
  1755  007BF2  6E                 	db	110	;'n'
  1756  007BF3  6B                 	db	107	;'k'
  1757  007BF4  20                 	db	32
  1758  007BF5  50                 	db	80	;'P'
  1759  007BF6  63                 	db	99	;'c'
  1760  007BF7  6B                 	db	107	;'k'
  1761  007BF8  74                 	db	116	;'t'
  1762  007BF9  20                 	db	32
  1763  007BFA  54                 	db	84	;'T'
  1764  007BFB  79                 	db	121	;'y'
  1765  007BFC  70                 	db	112	;'p'
  1766  007BFD  65                 	db	101	;'e'
  1767  007BFE  00                 	db	0
  1768  007BFF                     STR_135:
  1769  007BFF  53                 	db	83	;'S'
  1770  007C00  65                 	db	101	;'e'
  1771  007C01  6C                 	db	108	;'l'
  1772  007C02  65                 	db	101	;'e'
  1773  007C03  63                 	db	99	;'c'
  1774  007C04  74                 	db	116	;'t'
  1775  007C05  20                 	db	32
  1776  007C06  44                 	db	68	;'D'
  1777  007C07  61                 	db	97	;'a'
  1778  007C08  74                 	db	116	;'t'
  1779  007C09  61                 	db	97	;'a'
  1780  007C0A  20                 	db	32
  1781  007C0B  52                 	db	82	;'R'
  1782  007C0C  61                 	db	97	;'a'
  1783  007C0D  74                 	db	116	;'t'
  1784  007C0E  65                 	db	101	;'e'
  1785  007C0F  00                 	db	0
  1786  007C10                     STR_26:
  1787  007C10  4D                 	db	77	;'M'
  1788  007C11  6F                 	db	111	;'o'
  1789  007C12  62                 	db	98	;'b'
  1790  007C13  69                 	db	105	;'i'
  1791  007C14  6C                 	db	108	;'l'
  1792  007C15  65                 	db	101	;'e'
  1793  007C16  20                 	db	32
  1794  007C17  4D                 	db	77	;'M'
  1795  007C18  6F                 	db	111	;'o'
  1796  007C19  74                 	db	116	;'t'
  1797  007C1A  65                 	db	101	;'e'
  1798  007C1B  20                 	db	32
  1799  007C1C  2D                 	db	45
  1800  007C1D  41                 	db	65	;'A'
  1801  007C1E  70                 	db	112	;'p'
  1802  007C1F  70                 	db	112	;'p'
  1803  007C20  00                 	db	0
  1804  007C21                     STR_27:
  1805  007C21  4E                 	db	78	;'N'
  1806  007C22  61                 	db	97	;'a'
  1807  007C23  76                 	db	118	;'v'
  1808  007C24  69                 	db	105	;'i'
  1809  007C25  67                 	db	103	;'g'
  1810  007C26  61                 	db	97	;'a'
  1811  007C27  74                 	db	116	;'t'
  1812  007C28  65                 	db	101	;'e'
  1813  007C29  20                 	db	32
  1814  007C2A  20                 	db	32
  1815  007C2B  53                 	db	83	;'S'
  1816  007C2C  65                 	db	101	;'e'
  1817  007C2D  6C                 	db	108	;'l'
  1818  007C2E  65                 	db	101	;'e'
  1819  007C2F  63                 	db	99	;'c'
  1820  007C30  74                 	db	116	;'t'
  1821  007C31  00                 	db	0
  1822  007C32                     STR_111:
  1823  007C32  4D                 	db	77	;'M'
  1824  007C33  65                 	db	101	;'e'
  1825  007C34  6E                 	db	110	;'n'
  1826  007C35  75                 	db	117	;'u'
  1827  007C36  20                 	db	32
  1828  007C37  48                 	db	72	;'H'
  1829  007C38  61                 	db	97	;'a'
  1830  007C39  73                 	db	115	;'s'
  1831  007C3A  20                 	db	32
  1832  007C3B  54                 	db	84	;'T'
  1833  007C3C  69                 	db	105	;'i'
  1834  007C3D  6D                 	db	109	;'m'
  1835  007C3E  65                 	db	101	;'e'
  1836  007C3F  6F                 	db	111	;'o'
  1837  007C40  75                 	db	117	;'u'
  1838  007C41  74                 	db	116	;'t'
  1839  007C42  00                 	db	0
  1840  007C43                     STR_105:
  1841  007C43  44                 	db	68	;'D'
  1842  007C44  6F                 	db	111	;'o'
  1843  007C45  77                 	db	119	;'w'
  1844  007C46  6E                 	db	110	;'n'
  1845  007C47  6C                 	db	108	;'l'
  1846  007C48  69                 	db	105	;'i'
  1847  007C49  6E                 	db	110	;'n'
  1848  007C4A  6B                 	db	107	;'k'
  1849  007C4B  20                 	db	32
  1850  007C4C  44                 	db	68	;'D'
  1851  007C4D  69                 	db	105	;'i'
  1852  007C4E  73                 	db	115	;'s'
  1853  007C4F  70                 	db	112	;'p'
  1854  007C50  6C                 	db	108	;'l'
  1855  007C51  61                 	db	97	;'a'
  1856  007C52  79                 	db	121	;'y'
  1857  007C53  00                 	db	0
  1858  007C54                     STR_103:
  1859  007C54  20                 	db	32
  1860  007C55  20                 	db	32
  1861  007C56  20                 	db	32
  1862  007C57  20                 	db	32
  1863  007C58  44                 	db	68	;'D'
  1864  007C59  69                 	db	105	;'i'
  1865  007C5A  73                 	db	115	;'s'
  1866  007C5B  70                 	db	112	;'p'
  1867  007C5C  6C                 	db	108	;'l'
  1868  007C5D  61                 	db	97	;'a'
  1869  007C5E  79                 	db	121	;'y'
  1870  007C5F  20                 	db	32
  1871  007C60  20                 	db	32
  1872  007C61  20                 	db	32
  1873  007C62  20                 	db	32
  1874  007C63  00                 	db	0
  1875  007C64                     STR_102:
  1876  007C64  20                 	db	32
  1877  007C65  20                 	db	32
  1878  007C66  53                 	db	83	;'S'
  1879  007C67  65                 	db	101	;'e'
  1880  007C68  6E                 	db	110	;'n'
  1881  007C69  73                 	db	115	;'s'
  1882  007C6A  6F                 	db	111	;'o'
  1883  007C6B  72                 	db	114	;'r'
  1884  007C6C  20                 	db	32
  1885  007C6D  44                 	db	68	;'D'
  1886  007C6E  61                 	db	97	;'a'
  1887  007C6F  74                 	db	116	;'t'
  1888  007C70  61                 	db	97	;'a'
  1889  007C71  20                 	db	32
  1890  007C72  20                 	db	32
  1891  007C73  00                 	db	0
  1892  007C74                     STR_114:
  1893  007C74  28                 	db	40
  1894  007C75  4E                 	db	78	;'N'
  1895  007C76  41                 	db	65	;'A'
  1896  007C77  56                 	db	86	;'V'
  1897  007C78  29                 	db	41
  1898  007C79  20                 	db	32
  1899  007C7A  20                 	db	32
  1900  007C7B  20                 	db	32
  1901  007C7C  20                 	db	32
  1902  007C7D  28                 	db	40
  1903  007C7E  43                 	db	67	;'C'
  1904  007C7F  4E                 	db	78	;'N'
  1905  007C80  47                 	db	71	;'G'
  1906  007C81  29                 	db	41
  1907  007C82  20                 	db	32
  1908  007C83  00                 	db	0
  1909  007C84                     STR_73:
  1910  007C84  28                 	db	40
  1911  007C85  4E                 	db	78	;'N'
  1912  007C86  41                 	db	65	;'A'
  1913  007C87  56                 	db	86	;'V'
  1914  007C88  29                 	db	41
  1915  007C89  20                 	db	32
  1916  007C8A  20                 	db	32
  1917  007C8B  20                 	db	32
  1918  007C8C  20                 	db	32
  1919  007C8D  28                 	db	40
  1920  007C8E  53                 	db	83	;'S'
  1921  007C8F  45                 	db	69	;'E'
  1922  007C90  4C                 	db	76	;'L'
  1923  007C91  29                 	db	41
  1924  007C92  20                 	db	32
  1925  007C93  00                 	db	0
  1926  007C94                     STR_152:
  1927  007C94  28                 	db	40
  1928  007C95  4E                 	db	78	;'N'
  1929  007C96  41                 	db	65	;'A'
  1930  007C97  56                 	db	86	;'V'
  1931  007C98  29                 	db	41
  1932  007C99  20                 	db	32
  1933  007C9A  20                 	db	32
  1934  007C9B  20                 	db	32
  1935  007C9C  20                 	db	32
  1936  007C9D  28                 	db	40
  1937  007C9E  53                 	db	83	;'S'
  1938  007C9F  4C                 	db	76	;'L'
  1939  007CA0  50                 	db	80	;'P'
  1940  007CA1  29                 	db	41
  1941  007CA2  20                 	db	32
  1942  007CA3  00                 	db	0
  1943  007CA4                     STR_163:
  1944  007CA4  6D                 	db	109	;'m'
  1945  007CA5  61                 	db	97	;'a'
  1946  007CA6  63                 	db	99	;'c'
  1947  007CA7  20                 	db	32
  1948  007CA8  73                 	db	115	;'s'
  1949  007CA9  65                 	db	101	;'e'
  1950  007CAA  74                 	db	116	;'t'
  1951  007CAB  20                 	db	32
  1952  007CAC  61                 	db	97	;'a'
  1953  007CAD  64                 	db	100	;'d'
  1954  007CAE  72                 	db	114	;'r'
  1955  007CAF  20                 	db	32
  1956  007CB0  6F                 	db	111	;'o'
  1957  007CB1  66                 	db	102	;'f'
  1958  007CB2  66                 	db	102	;'f'
  1959  007CB3  00                 	db	0
  1960  007CB4                     STR_98:
  1961  007CB4  4E                 	db	78	;'N'
  1962  007CB5  6F                 	db	111	;'o'
  1963  007CB6  20                 	db	32
  1964  007CB7  46                 	db	70	;'F'
  1965  007CB8  72                 	db	114	;'r'
  1966  007CB9  65                 	db	101	;'e'
  1967  007CBA  65                 	db	101	;'e'
  1968  007CBB  20                 	db	32
  1969  007CBC  43                 	db	67	;'C'
  1970  007CBD  68                 	db	104	;'h'
  1971  007CBE  61                 	db	97	;'a'
  1972  007CBF  6E                 	db	110	;'n'
  1973  007CC0  6E                 	db	110	;'n'
  1974  007CC1  65                 	db	101	;'e'
  1975  007CC2  6C                 	db	108	;'l'
  1976  007CC3  00                 	db	0
  1977  007CC4                     STR_7:
  1978  007CC4  42                 	db	66	;'B'
  1979  007CC5  75                 	db	117	;'u'
  1980  007CC6  69                 	db	105	;'i'
  1981  007CC7  6C                 	db	108	;'l'
  1982  007CC8  64                 	db	100	;'d'
  1983  007CC9  20                 	db	32
  1984  007CCA  44                 	db	68	;'D'
  1985  007CCB  61                 	db	97	;'a'
  1986  007CCC  74                 	db	116	;'t'
  1987  007CCD  65                 	db	101	;'e'
  1988  007CCE  2F                 	db	47
  1989  007CCF  54                 	db	84	;'T'
  1990  007CD0  69                 	db	105	;'i'
  1991  007CD1  6D                 	db	109	;'m'
  1992  007CD2  65                 	db	101	;'e'
  1993  007CD3  00                 	db	0
  1994  007CD4                     STR_112:
  1995  007CD4  20                 	db	32
  1996  007CD5  20                 	db	32
  1997  007CD6  20                 	db	32
  1998  007CD7  20                 	db	32
  1999  007CD8  45                 	db	69	;'E'
  2000  007CD9  6E                 	db	110	;'n'
  2001  007CDA  61                 	db	97	;'a'
  2002  007CDB  62                 	db	98	;'b'
  2003  007CDC  6C                 	db	108	;'l'
  2004  007CDD  65                 	db	101	;'e'
  2005  007CDE  64                 	db	100	;'d'
  2006  007CDF  20                 	db	32
  2007  007CE0  20                 	db	32
  2008  007CE1  20                 	db	32
  2009  007CE2  00                 	db	0
  2010  007CE3                     STR_113:
  2011  007CE3  20                 	db	32
  2012  007CE4  20                 	db	32
  2013  007CE5  20                 	db	32
  2014  007CE6  20                 	db	32
  2015  007CE7  44                 	db	68	;'D'
  2016  007CE8  69                 	db	105	;'i'
  2017  007CE9  73                 	db	115	;'s'
  2018  007CEA  61                 	db	97	;'a'
  2019  007CEB  62                 	db	98	;'b'
  2020  007CEC  6C                 	db	108	;'l'
  2021  007CED  65                 	db	101	;'e'
  2022  007CEE  64                 	db	100	;'d'
  2023  007CEF  20                 	db	32
  2024  007CF0  20                 	db	32
  2025  007CF1  00                 	db	0
  2026  007CF2                     STR_172:
  2027  007CF2  6D                 	db	109	;'m'
  2028  007CF3  61                 	db	97	;'a'
  2029  007CF4  63                 	db	99	;'c'
  2030  007CF5  20                 	db	32
  2031  007CF6  73                 	db	115	;'s'
  2032  007CF7  65                 	db	101	;'e'
  2033  007CF8  74                 	db	116	;'t'
  2034  007CF9  20                 	db	32
  2035  007CFA  61                 	db	97	;'a'
  2036  007CFB  64                 	db	100	;'d'
  2037  007CFC  72                 	db	114	;'r'
  2038  007CFD  20                 	db	32
  2039  007CFE  6F                 	db	111	;'o'
  2040  007CFF  6E                 	db	110	;'n'
  2041  007D00  00                 	db	0
  2042  007D01                     STR_2:
  2043  007D01  20                 	db	32
  2044  007D02  20                 	db	32
  2045  007D03  20                 	db	32
  2046  007D04  4C                 	db	76	;'L'
  2047  007D05  6F                 	db	111	;'o'
  2048  007D06  52                 	db	82	;'R'
  2049  007D07  61                 	db	97	;'a'
  2050  007D08  20                 	db	32
  2051  007D09  44                 	db	68	;'D'
  2052  007D0A  65                 	db	101	;'e'
  2053  007D0B  6D                 	db	109	;'m'
  2054  007D0C  6F                 	db	111	;'o'
  2055  007D0D  20                 	db	32
  2056  007D0E  20                 	db	32
  2057  007D0F  00                 	db	0
  2058  007D10                     STR_3:
  2059  007D10  20                 	db	32
  2060  007D11  56                 	db	86	;'V'
  2061  007D12  20                 	db	32
  2062  007D13  31                 	db	49	;'1'
  2063  007D14  2E                 	db	46
  2064  007D15  30                 	db	48	;'0'
  2065  007D16  2E                 	db	46
  2066  007D17  30                 	db	48	;'0'
  2067  007D18  4C                 	db	76	;'L'
  2068  007D19  20                 	db	32
  2069  007D1A  43                 	db	67	;'C'
  2070  007D1B  6F                 	db	111	;'o'
  2071  007D1C  64                 	db	100	;'d'
  2072  007D1D  65                 	db	101	;'e'
  2073  007D1E  00                 	db	0
  2074  007D1F                     STR_1:
  2075  007D1F  4D                 	db	77	;'M'
  2076  007D20  69                 	db	105	;'i'
  2077  007D21  63                 	db	99	;'c'
  2078  007D22  72                 	db	114	;'r'
  2079  007D23  6F                 	db	111	;'o'
  2080  007D24  63                 	db	99	;'c'
  2081  007D25  68                 	db	104	;'h'
  2082  007D26  69                 	db	105	;'i'
  2083  007D27  70                 	db	112	;'p'
  2084  007D28  20                 	db	32
  2085  007D29  4D                 	db	77	;'M'
  2086  007D2A  6F                 	db	111	;'o'
  2087  007D2B  74                 	db	116	;'t'
  2088  007D2C  65                 	db	101	;'e'
  2089  007D2D  00                 	db	0
  2090  007D2E                     STR_74:
  2091  007D2E  6D                 	db	109	;'m'
  2092  007D2F  61                 	db	97	;'a'
  2093  007D30  63                 	db	99	;'c'
  2094  007D31  20                 	db	32
  2095  007D32  74                 	db	116	;'t'
  2096  007D33  78                 	db	120	;'x'
  2097  007D34  20                 	db	32
  2098  007D35  75                 	db	117	;'u'
  2099  007D36  6E                 	db	110	;'n'
  2100  007D37  63                 	db	99	;'c'
  2101  007D38  6E                 	db	110	;'n'
  2102  007D39  66                 	db	102	;'f'
  2103  007D3A  20                 	db	32
  2104  007D3B  00                 	db	0
  2105  007D3C                     STR_42:
  2106  007D3C  6D                 	db	109	;'m'
  2107  007D3D  61                 	db	97	;'a'
  2108  007D3E  63                 	db	99	;'c'
  2109  007D3F  20                 	db	32
  2110  007D40  6A                 	db	106	;'j'
  2111  007D41  6F                 	db	111	;'o'
  2112  007D42  69                 	db	105	;'i'
  2113  007D43  6E                 	db	110	;'n'
  2114  007D44  20                 	db	32
  2115  007D45  6F                 	db	111	;'o'
  2116  007D46  74                 	db	116	;'t'
  2117  007D47  61                 	db	97	;'a'
  2118  007D48  61                 	db	97	;'a'
  2119  007D49  00                 	db	0
  2120  007D4A                     STR_56:
  2121  007D4A  69                 	db	105	;'i'
  2122  007D4B  6E                 	db	110	;'n'
  2123  007D4C  76                 	db	118	;'v'
  2124  007D4D  61                 	db	97	;'a'
  2125  007D4E  6C                 	db	108	;'l'
  2126  007D4F  69                 	db	105	;'i'
  2127  007D50  64                 	db	100	;'d'
  2128  007D51  5F                 	db	95	;'_'
  2129  007D52  70                 	db	112	;'p'
  2130  007D53  61                 	db	97	;'a'
  2131  007D54  72                 	db	114	;'r'
  2132  007D55  61                 	db	97	;'a'
  2133  007D56  6D                 	db	109	;'m'
  2134  007D57  00                 	db	0
  2135  007D58                     STR_44:
  2136  007D58  6B                 	db	107	;'k'
  2137  007D59  65                 	db	101	;'e'
  2138  007D5A  79                 	db	121	;'y'
  2139  007D5B  73                 	db	115	;'s'
  2140  007D5C  5F                 	db	95	;'_'
  2141  007D5D  6E                 	db	110	;'n'
  2142  007D5E  6F                 	db	111	;'o'
  2143  007D5F  74                 	db	116	;'t'
  2144  007D60  5F                 	db	95	;'_'
  2145  007D61  69                 	db	105	;'i'
  2146  007D62  6E                 	db	110	;'n'
  2147  007D63  69                 	db	105	;'i'
  2148  007D64  74                 	db	116	;'t'
  2149  007D65  00                 	db	0
  2150  007D66                     STR_82:
  2151  007D66  54                 	db	84	;'T'
  2152  007D67  68                 	db	104	;'h'
  2153  007D68  72                 	db	114	;'r'
  2154  007D69  6F                 	db	111	;'o'
  2155  007D6A  75                 	db	117	;'u'
  2156  007D6B  20                 	db	32
  2157  007D6C  50                 	db	80	;'P'
  2158  007D6D  6F                 	db	111	;'o'
  2159  007D6E  72                 	db	114	;'r'
  2160  007D6F  74                 	db	116	;'t'
  2161  007D70  23                 	db	35
  2162  007D71  20                 	db	32
  2163  007D72  00                 	db	0
  2164  007D73                     STR_72:
  2165  007D73  4C                 	db	76	;'L'
  2166  007D74  3A                 	db	58	;':'
  2167  007D75  20                 	db	32
  2168  007D76  20                 	db	32
  2169  007D77  20                 	db	32
  2170  007D78  20                 	db	32
  2171  007D79  20                 	db	32
  2172  007D7A  20                 	db	32
  2173  007D7B  20                 	db	32
  2174  007D7C  54                 	db	84	;'T'
  2175  007D7D  3A                 	db	58	;':'
  2176  007D7E  20                 	db	32
  2177  007D7F  00                 	db	0
  2178  007D80                     STR_164:
  2179  007D80  6D                 	db	109	;'m'
  2180  007D81  61                 	db	97	;'a'
  2181  007D82  63                 	db	99	;'c'
  2182  007D83  20                 	db	32
  2183  007D84  73                 	db	115	;'s'
  2184  007D85  65                 	db	101	;'e'
  2185  007D86  74                 	db	116	;'t'
  2186  007D87  20                 	db	32
  2187  007D88  64                 	db	100	;'d'
  2188  007D89  72                 	db	114	;'r'
  2189  007D8A  20                 	db	32
  2190  007D8B  30                 	db	48	;'0'
  2191  007D8C  00                 	db	0
  2192  007D8D                     STR_165:
  2193  007D8D  6D                 	db	109	;'m'
  2194  007D8E  61                 	db	97	;'a'
  2195  007D8F  63                 	db	99	;'c'
  2196  007D90  20                 	db	32
  2197  007D91  73                 	db	115	;'s'
  2198  007D92  65                 	db	101	;'e'
  2199  007D93  74                 	db	116	;'t'
  2200  007D94  20                 	db	32
  2201  007D95  64                 	db	100	;'d'
  2202  007D96  72                 	db	114	;'r'
  2203  007D97  20                 	db	32
  2204  007D98  31                 	db	49	;'1'
  2205  007D99  00                 	db	0
  2206  007D9A                     STR_166:
  2207  007D9A  6D                 	db	109	;'m'
  2208  007D9B  61                 	db	97	;'a'
  2209  007D9C  63                 	db	99	;'c'
  2210  007D9D  20                 	db	32
  2211  007D9E  73                 	db	115	;'s'
  2212  007D9F  65                 	db	101	;'e'
  2213  007DA0  74                 	db	116	;'t'
  2214  007DA1  20                 	db	32
  2215  007DA2  64                 	db	100	;'d'
  2216  007DA3  72                 	db	114	;'r'
  2217  007DA4  20                 	db	32
  2218  007DA5  32                 	db	50	;'2'
  2219  007DA6  00                 	db	0
  2220  007DA7                     STR_167:
  2221  007DA7  6D                 	db	109	;'m'
  2222  007DA8  61                 	db	97	;'a'
  2223  007DA9  63                 	db	99	;'c'
  2224  007DAA  20                 	db	32
  2225  007DAB  73                 	db	115	;'s'
  2226  007DAC  65                 	db	101	;'e'
  2227  007DAD  74                 	db	116	;'t'
  2228  007DAE  20                 	db	32
  2229  007DAF  64                 	db	100	;'d'
  2230  007DB0  72                 	db	114	;'r'
  2231  007DB1  20                 	db	32
  2232  007DB2  33                 	db	51	;'3'
  2233  007DB3  00                 	db	0
  2234  007DB4                     STR_168:
  2235  007DB4  6D                 	db	109	;'m'
  2236  007DB5  61                 	db	97	;'a'
  2237  007DB6  63                 	db	99	;'c'
  2238  007DB7  20                 	db	32
  2239  007DB8  73                 	db	115	;'s'
  2240  007DB9  65                 	db	101	;'e'
  2241  007DBA  74                 	db	116	;'t'
  2242  007DBB  20                 	db	32
  2243  007DBC  64                 	db	100	;'d'
  2244  007DBD  72                 	db	114	;'r'
  2245  007DBE  20                 	db	32
  2246  007DBF  34                 	db	52	;'4'
  2247  007DC0  00                 	db	0
  2248  007DC1                     STR_169:
  2249  007DC1  6D                 	db	109	;'m'
  2250  007DC2  61                 	db	97	;'a'
  2251  007DC3  63                 	db	99	;'c'
  2252  007DC4  20                 	db	32
  2253  007DC5  73                 	db	115	;'s'
  2254  007DC6  65                 	db	101	;'e'
  2255  007DC7  74                 	db	116	;'t'
  2256  007DC8  20                 	db	32
  2257  007DC9  64                 	db	100	;'d'
  2258  007DCA  72                 	db	114	;'r'
  2259  007DCB  20                 	db	32
  2260  007DCC  35                 	db	53	;'5'
  2261  007DCD  00                 	db	0
  2262  007DCE                     STR_170:
  2263  007DCE  6D                 	db	109	;'m'
  2264  007DCF  61                 	db	97	;'a'
  2265  007DD0  63                 	db	99	;'c'
  2266  007DD1  20                 	db	32
  2267  007DD2  73                 	db	115	;'s'
  2268  007DD3  65                 	db	101	;'e'
  2269  007DD4  74                 	db	116	;'t'
  2270  007DD5  20                 	db	32
  2271  007DD6  64                 	db	100	;'d'
  2272  007DD7  72                 	db	114	;'r'
  2273  007DD8  20                 	db	32
  2274  007DD9  36                 	db	54	;'6'
  2275  007DDA  00                 	db	0
  2276  007DDB                     STR_171:
  2277  007DDB  6D                 	db	109	;'m'
  2278  007DDC  61                 	db	97	;'a'
  2279  007DDD  63                 	db	99	;'c'
  2280  007DDE  20                 	db	32
  2281  007DDF  73                 	db	115	;'s'
  2282  007DE0  65                 	db	101	;'e'
  2283  007DE1  74                 	db	116	;'t'
  2284  007DE2  20                 	db	32
  2285  007DE3  64                 	db	100	;'d'
  2286  007DE4  72                 	db	114	;'r'
  2287  007DE5  20                 	db	32
  2288  007DE6  37                 	db	55	;'7'
  2289  007DE7  00                 	db	0
  2290  007DE8                     STR_40:
  2291  007DE8  6D                 	db	109	;'m'
  2292  007DE9  61                 	db	97	;'a'
  2293  007DEA  63                 	db	99	;'c'
  2294  007DEB  20                 	db	32
  2295  007DEC  6A                 	db	106	;'j'
  2296  007DED  6F                 	db	111	;'o'
  2297  007DEE  69                 	db	105	;'i'
  2298  007DEF  6E                 	db	110	;'n'
  2299  007DF0  20                 	db	32
  2300  007DF1  61                 	db	97	;'a'
  2301  007DF2  62                 	db	98	;'b'
  2302  007DF3  70                 	db	112	;'p'
  2303  007DF4  00                 	db	0
  2304  007DF5                     STR_10:
  2305  007DF5  42                 	db	66	;'B'
  2306  007DF6  75                 	db	117	;'u'
  2307  007DF7  74                 	db	116	;'t'
  2308  007DF8  74                 	db	116	;'t'
  2309  007DF9  6F                 	db	111	;'o'
  2310  007DFA  6E                 	db	110	;'n'
  2311  007DFB  20                 	db	32
  2312  007DFC  54                 	db	84	;'T'
  2313  007DFD  65                 	db	101	;'e'
  2314  007DFE  73                 	db	115	;'s'
  2315  007DFF  74                 	db	116	;'t'
  2316  007E00  3A                 	db	58	;':'
  2317  007E01  00                 	db	0
  2318  007E02                     STR_13:
  2319  007E02  42                 	db	66	;'B'
  2320  007E03  75                 	db	117	;'u'
  2321  007E04  74                 	db	116	;'t'
  2322  007E05  74                 	db	116	;'t'
  2323  007E06  6F                 	db	111	;'o'
  2324  007E07  6E                 	db	110	;'n'
  2325  007E08  31                 	db	49	;'1'
  2326  007E09  20                 	db	32
  2327  007E0A  50                 	db	80	;'P'
  2328  007E0B  41                 	db	65	;'A'
  2329  007E0C  53                 	db	83	;'S'
  2330  007E0D  53                 	db	83	;'S'
  2331  007E0E  00                 	db	0
  2332  007E0F                     STR_14:
  2333  007E0F  42                 	db	66	;'B'
  2334  007E10  75                 	db	117	;'u'
  2335  007E11  74                 	db	116	;'t'
  2336  007E12  74                 	db	116	;'t'
  2337  007E13  6F                 	db	111	;'o'
  2338  007E14  6E                 	db	110	;'n'
  2339  007E15  32                 	db	50	;'2'
  2340  007E16  20                 	db	32
  2341  007E17  50                 	db	80	;'P'
  2342  007E18  41                 	db	65	;'A'
  2343  007E19  53                 	db	83	;'S'
  2344  007E1A  53                 	db	83	;'S'
  2345  007E1B  00                 	db	0
  2346  007E1C                     STR_12:
  2347  007E1C  50                 	db	80	;'P'
  2348  007E1D  72                 	db	114	;'r'
  2349  007E1E  65                 	db	101	;'e'
  2350  007E1F  73                 	db	115	;'s'
  2351  007E20  73                 	db	115	;'s'
  2352  007E21  20                 	db	32
  2353  007E22  42                 	db	66	;'B'
  2354  007E23  75                 	db	117	;'u'
  2355  007E24  74                 	db	116	;'t'
  2356  007E25  74                 	db	116	;'t'
  2357  007E26  6F                 	db	111	;'o'
  2358  007E27  6E                 	db	110	;'n'
  2359  007E28  00                 	db	0
  2360  007E29                     STR_181:
  2361  007E29  55                 	db	85	;'U'
  2362  007E2A  53                 	db	83	;'S'
  2363  007E2B  42                 	db	66	;'B'
  2364  007E2C  20                 	db	32
  2365  007E2D  48                 	db	72	;'H'
  2366  007E2E  61                 	db	97	;'a'
  2367  007E2F  6E                 	db	110	;'n'
  2368  007E30  64                 	db	100	;'d'
  2369  007E31  6C                 	db	108	;'l'
  2370  007E32  65                 	db	101	;'e'
  2371  007E33  72                 	db	114	;'r'
  2372  007E34  00                 	db	0
  2373  007E35                     STR_71:
  2374  007E35  4F                 	db	79	;'O'
  2375  007E36  6E                 	db	110	;'n'
  2376  007E37  20                 	db	32
  2377  007E38  50                 	db	80	;'P'
  2378  007E39  6F                 	db	111	;'o'
  2379  007E3A  72                 	db	114	;'r'
  2380  007E3B  74                 	db	116	;'t'
  2381  007E3C  20                 	db	32
  2382  007E3D  23                 	db	35
  2383  007E3E  3A                 	db	58	;':'
  2384  007E3F  20                 	db	32
  2385  007E40  00                 	db	0
  2386  007E41                     STR_88:
  2387  007E41  54                 	db	84	;'T'
  2388  007E42  78                 	db	120	;'x'
  2389  007E43  20                 	db	32
  2390  007E44  50                 	db	80	;'P'
  2391  007E45  6F                 	db	111	;'o'
  2392  007E46  72                 	db	114	;'r'
  2393  007E47  74                 	db	116	;'t'
  2394  007E48  20                 	db	32
  2395  007E49  23                 	db	35
  2396  007E4A  3A                 	db	58	;':'
  2397  007E4B  20                 	db	32
  2398  007E4C  00                 	db	0
  2399  007E4D                     STR_86:
  2400  007E4D  53                 	db	83	;'S'
  2401  007E4E  65                 	db	101	;'e'
  2402  007E4F  6E                 	db	110	;'n'
  2403  007E50  74                 	db	116	;'t'
  2404  007E51  20                 	db	32
  2405  007E52  44                 	db	68	;'D'
  2406  007E53  61                 	db	97	;'a'
  2407  007E54  74                 	db	116	;'t'
  2408  007E55  61                 	db	97	;'a'
  2409  007E56  3A                 	db	58	;':'
  2410  007E57  20                 	db	32
  2411  007E58  00                 	db	0
  2412  007E59                     STR_136:
  2413  007E59  44                 	db	68	;'D'
  2414  007E5A  61                 	db	97	;'a'
  2415  007E5B  74                 	db	116	;'t'
  2416  007E5C  61                 	db	97	;'a'
  2417  007E5D  20                 	db	32
  2418  007E5E  52                 	db	82	;'R'
  2419  007E5F  61                 	db	97	;'a'
  2420  007E60  74                 	db	116	;'t'
  2421  007E61  65                 	db	101	;'e'
  2422  007E62  3A                 	db	58	;':'
  2423  007E63  20                 	db	32
  2424  007E64  00                 	db	0
  2425  007E65                     STR_85:
  2426  007E65  6D                 	db	109	;'m'
  2427  007E66  61                 	db	97	;'a'
  2428  007E67  63                 	db	99	;'c'
  2429  007E68  20                 	db	32
  2430  007E69  74                 	db	116	;'t'
  2431  007E6A  78                 	db	120	;'x'
  2432  007E6B  20                 	db	32
  2433  007E6C  63                 	db	99	;'c'
  2434  007E6D  6E                 	db	110	;'n'
  2435  007E6E  66                 	db	102	;'f'
  2436  007E6F  20                 	db	32
  2437  007E70  00                 	db	0
  2438  007E71                     STR_8:
  2439  007E71  4F                 	db	79	;'O'
  2440  007E72  63                 	db	99	;'c'
  2441  007E73  74                 	db	116	;'t'
  2442  007E74  20                 	db	32
  2443  007E75  33                 	db	51	;'3'
  2444  007E76  31                 	db	49	;'1'
  2445  007E77  20                 	db	32
  2446  007E78  32                 	db	50	;'2'
  2447  007E79  30                 	db	48	;'0'
  2448  007E7A  31                 	db	49	;'1'
  2449  007E7B  38                 	db	56	;'8'
  2450  007E7C  00                 	db	0
  2451  007E7D                     STR_11:
  2452  007E7D  42                 	db	66	;'B'
  2453  007E7E  75                 	db	117	;'u'
  2454  007E7F  74                 	db	116	;'t'
  2455  007E80  74                 	db	116	;'t'
  2456  007E81  6F                 	db	111	;'o'
  2457  007E82  6E                 	db	110	;'n'
  2458  007E83  20                 	db	32
  2459  007E84  46                 	db	70	;'F'
  2460  007E85  41                 	db	65	;'A'
  2461  007E86  49                 	db	73	;'I'
  2462  007E87  4C                 	db	76	;'L'
  2463  007E88  00                 	db	0
  2464  007E89                     STR_60:
  2465  007E89  4F                 	db	79	;'O'
  2466  007E8A  54                 	db	84	;'T'
  2467  007E8B  41                 	db	65	;'A'
  2468  007E8C  41                 	db	65	;'A'
  2469  007E8D  20                 	db	32
  2470  007E8E  4A                 	db	74	;'J'
  2471  007E8F  6F                 	db	111	;'o'
  2472  007E90  69                 	db	105	;'i'
  2473  007E91  6E                 	db	110	;'n'
  2474  007E92  20                 	db	32
  2475  007E93  00                 	db	0
  2476  007E94                     STR_58:
  2477  007E94  6E                 	db	110	;'n'
  2478  007E95  6F                 	db	111	;'o'
  2479  007E96  5F                 	db	95	;'_'
  2480  007E97  66                 	db	102	;'f'
  2481  007E98  72                 	db	114	;'r'
  2482  007E99  65                 	db	101	;'e'
  2483  007E9A  65                 	db	101	;'e'
  2484  007E9B  5F                 	db	95	;'_'
  2485  007E9C  63                 	db	99	;'c'
  2486  007E9D  68                 	db	104	;'h'
  2487  007E9E  00                 	db	0
  2488  007E9F                     STR_50:
  2489  007E9F  53                 	db	83	;'S'
  2490  007EA0  75                 	db	117	;'u'
  2491  007EA1  63                 	db	99	;'c'
  2492  007EA2  63                 	db	99	;'c'
  2493  007EA3  65                 	db	101	;'e'
  2494  007EA4  73                 	db	115	;'s'
  2495  007EA5  73                 	db	115	;'s'
  2496  007EA6  66                 	db	102	;'f'
  2497  007EA7  75                 	db	117	;'u'
  2498  007EA8  6C                 	db	108	;'l'
  2499  007EA9  00                 	db	0
  2500  007EAA                     STR_67:
  2501  007EAA  6D                 	db	109	;'m'
  2502  007EAB  61                 	db	97	;'a'
  2503  007EAC  63                 	db	99	;'c'
  2504  007EAD  20                 	db	32
  2505  007EAE  67                 	db	103	;'g'
  2506  007EAF  65                 	db	101	;'e'
  2507  007EB0  74                 	db	116	;'t'
  2508  007EB1  20                 	db	32
  2509  007EB2  64                 	db	100	;'d'
  2510  007EB3  72                 	db	114	;'r'
  2511  007EB4  00                 	db	0
  2512  007EB5                     STR_45:
  2513  007EB5  56                 	db	86	;'V'
  2514  007EB6  61                 	db	97	;'a'
  2515  007EB7  6C                 	db	108	;'l'
  2516  007EB8  69                 	db	105	;'i'
  2517  007EB9  64                 	db	100	;'d'
  2518  007EBA  20                 	db	32
  2519  007EBB  4B                 	db	75	;'K'
  2520  007EBC  65                 	db	101	;'e'
  2521  007EBD  79                 	db	121	;'y'
  2522  007EBE  73                 	db	115	;'s'
  2523  007EBF  00                 	db	0
  2524  007EC0                     STR_15:
  2525  007EC0  43                 	db	67	;'C'
  2526  007EC1  6F                 	db	111	;'o'
  2527  007EC2  6D                 	db	109	;'m'
  2528  007EC3  6D                 	db	109	;'m'
  2529  007EC4  20                 	db	32
  2530  007EC5  54                 	db	84	;'T'
  2531  007EC6  65                 	db	101	;'e'
  2532  007EC7  73                 	db	115	;'s'
  2533  007EC8  74                 	db	116	;'t'
  2534  007EC9  3A                 	db	58	;':'
  2535  007ECA  00                 	db	0
  2536  007ECB                     STR_106:
  2537  007ECB  52                 	db	82	;'R'
  2538  007ECC  78                 	db	120	;'x'
  2539  007ECD  20                 	db	32
  2540  007ECE  50                 	db	80	;'P'
  2541  007ECF  6F                 	db	111	;'o'
  2542  007ED0  72                 	db	114	;'r'
  2543  007ED1  74                 	db	116	;'t'
  2544  007ED2  23                 	db	35
  2545  007ED3  20                 	db	32
  2546  007ED4  00                 	db	0
  2547  007ED5                     STR_49:
  2548  007ED5  41                 	db	65	;'A'
  2549  007ED6  42                 	db	66	;'B'
  2550  007ED7  50                 	db	80	;'P'
  2551  007ED8  20                 	db	32
  2552  007ED9  4A                 	db	74	;'J'
  2553  007EDA  6F                 	db	111	;'o'
  2554  007EDB  69                 	db	105	;'i'
  2555  007EDC  6E                 	db	110	;'n'
  2556  007EDD  20                 	db	32
  2557  007EDE  00                 	db	0
  2558  007EDF                     STR_23:
  2559  007EDF  4D                 	db	77	;'M'
  2560  007EE0  4F                 	db	79	;'O'
  2561  007EE1  54                 	db	84	;'T'
  2562  007EE2  45                 	db	69	;'E'
  2563  007EE3  20                 	db	32
  2564  007EE4  4D                 	db	77	;'M'
  2565  007EE5  6F                 	db	111	;'o'
  2566  007EE6  64                 	db	100	;'d'
  2567  007EE7  65                 	db	101	;'e'
  2568  007EE8  00                 	db	0
  2569  007EE9                     STR_63:
  2570  007EE9  4F                 	db	79	;'O'
  2571  007EEA  54                 	db	84	;'T'
  2572  007EEB  41                 	db	65	;'A'
  2573  007EEC  41                 	db	65	;'A'
  2574  007EED  20                 	db	32
  2575  007EEE  4A                 	db	74	;'J'
  2576  007EEF  6F                 	db	111	;'o'
  2577  007EF0  69                 	db	105	;'i'
  2578  007EF1  6E                 	db	110	;'n'
  2579  007EF2  00                 	db	0
  2580  007EF3                     STR_51:
  2581  007EF3  6D                 	db	109	;'m'
  2582  007EF4  61                 	db	97	;'a'
  2583  007EF5  63                 	db	99	;'c'
  2584  007EF6  20                 	db	32
  2585  007EF7  72                 	db	114	;'r'
  2586  007EF8  65                 	db	101	;'e'
  2587  007EF9  73                 	db	115	;'s'
  2588  007EFA  65                 	db	101	;'e'
  2589  007EFB  74                 	db	116	;'t'
  2590  007EFC  00                 	db	0
  2591  007EFD                     STR_29:
  2592  007EFD  73                 	db	115	;'s'
  2593  007EFE  79                 	db	121	;'y'
  2594  007EFF  73                 	db	115	;'s'
  2595  007F00  20                 	db	32
  2596  007F01  72                 	db	114	;'r'
  2597  007F02  65                 	db	101	;'e'
  2598  007F03  73                 	db	115	;'s'
  2599  007F04  65                 	db	101	;'e'
  2600  007F05  74                 	db	116	;'t'
  2601  007F06  00                 	db	0
  2602  007F07                     STR_16:
  2603  007F07  4C                 	db	76	;'L'
  2604  007F08  45                 	db	69	;'E'
  2605  007F09  44                 	db	68	;'D'
  2606  007F0A  20                 	db	32
  2607  007F0B  54                 	db	84	;'T'
  2608  007F0C  65                 	db	101	;'e'
  2609  007F0D  73                 	db	115	;'s'
  2610  007F0E  74                 	db	116	;'t'
  2611  007F0F  3A                 	db	58	;':'
  2612  007F10  00                 	db	0
  2613  007F11                     STR_179:
  2614  007F11  43                 	db	67	;'C'
  2615  007F12  44                 	db	68	;'D'
  2616  007F13  43                 	db	67	;'C'
  2617  007F14  20                 	db	32
  2618  007F15  4D                 	db	77	;'M'
  2619  007F16  6F                 	db	111	;'o'
  2620  007F17  64                 	db	100	;'d'
  2621  007F18  65                 	db	101	;'e'
  2622  007F19  00                 	db	0
  2623  007F1A                     STR_46:
  2624  007F1A  52                 	db	82	;'R'
  2625  007F1B  65                 	db	101	;'e'
  2626  007F1C  71                 	db	113	;'q'
  2627  007F1D  75                 	db	117	;'u'
  2628  007F1E  69                 	db	105	;'i'
  2629  007F1F  72                 	db	114	;'r'
  2630  007F20  65                 	db	101	;'e'
  2631  007F21  64                 	db	100	;'d'
  2632  007F22  00                 	db	0
  2633  007F23                     STR_48:
  2634  007F23  61                 	db	97	;'a'
  2635  007F24  63                 	db	99	;'c'
  2636  007F25  63                 	db	99	;'c'
  2637  007F26  65                 	db	101	;'e'
  2638  007F27  70                 	db	112	;'p'
  2639  007F28  74                 	db	116	;'t'
  2640  007F29  65                 	db	101	;'e'
  2641  007F2A  64                 	db	100	;'d'
  2642  007F2B  00                 	db	0
  2643  007F2C                     STR_173:
  2644  007F2C  6D                 	db	109	;'m'
  2645  007F2D  61                 	db	97	;'a'
  2646  007F2E  63                 	db	99	;'c'
  2647  007F2F  20                 	db	32
  2648  007F30  73                 	db	115	;'s'
  2649  007F31  61                 	db	97	;'a'
  2650  007F32  76                 	db	118	;'v'
  2651  007F33  65                 	db	101	;'e'
  2652  007F34  00                 	db	0
  2653  007F35                     STR_24:
  2654  007F35  53                 	db	83	;'S'
  2655  007F36  74                 	db	116	;'t'
  2656  007F37  61                 	db	97	;'a'
  2657  007F38  72                 	db	114	;'r'
  2658  007F39  74                 	db	116	;'t'
  2659  007F3A  69                 	db	105	;'i'
  2660  007F3B  6E                 	db	110	;'n'
  2661  007F3C  67                 	db	103	;'g'
  2662  007F3D  00                 	db	0
  2663  007F3E                     STR_4:
  2664  007F3E  4D                 	db	77	;'M'
  2665  007F3F  6F                 	db	111	;'o'
  2666  007F40  54                 	db	84	;'T'
  2667  007F41  65                 	db	101	;'e'
  2668  007F42  20                 	db	32
  2669  007F43  76                 	db	118	;'v'
  2670  007F44  20                 	db	32
  2671  007F45  2E                 	db	46
  2672  007F46  00                 	db	0
  2673  007F47                     STR_9:
  2674  007F47  31                 	db	49	;'1'
  2675  007F48  31                 	db	49	;'1'
  2676  007F49  3A                 	db	58	;':'
  2677  007F4A  30                 	db	48	;'0'
  2678  007F4B  31                 	db	49	;'1'
  2679  007F4C  3A                 	db	58	;':'
  2680  007F4D  35                 	db	53	;'5'
  2681  007F4E  33                 	db	51	;'3'
  2682  007F4F  00                 	db	0
  2683  007F50  52                 	db	82	;'R'
  2684  007F51  46                 	db	70	;'F'
  2685  007F52  20                 	db	32
  2686  007F53  54                 	db	84	;'T'
  2687  007F54  65                 	db	101	;'e'
  2688  007F55  73                 	db	115	;'s'
  2689  007F56  74                 	db	116	;'t'
  2690  007F57  3A                 	db	58	;':'
  2691  007F58  00                 	db	0
  2692  007F59                     STR_17:
  2693  007F59  41                 	db	65	;'A'
  2694  007F5A  44                 	db	68	;'D'
  2695  007F5B  43                 	db	67	;'C'
  2696  007F5C  20                 	db	32
  2697  007F5D  54                 	db	84	;'T'
  2698  007F5E  65                 	db	101	;'e'
  2699  007F5F  73                 	db	115	;'s'
  2700  007F60  74                 	db	116	;'t'
  2701  007F61  00                 	db	0
  2702  007F62                     STR_180:
  2703  007F62  43                 	db	67	;'C'
  2704  007F63  6F                 	db	111	;'o'
  2705  007F64  6D                 	db	109	;'m'
  2706  007F65  6D                 	db	109	;'m'
  2707  007F66  61                 	db	97	;'a'
  2708  007F67  6E                 	db	110	;'n'
  2709  007F68  64                 	db	100	;'d'
  2710  007F69  00                 	db	0
  2711  007F6A                     STR_18:
  2712  007F6A  54                 	db	84	;'T'
  2713  007F6B  65                 	db	101	;'e'
  2714  007F6C  6D                 	db	109	;'m'
  2715  007F6D  70                 	db	112	;'p'
  2716  007F6E  20                 	db	32
  2717  007F6F  20                 	db	32
  2718  007F70  3D                 	db	61	;'='
  2719  007F71  00                 	db	0
  2720  007F72                     STR_19:
  2721  007F72  4C                 	db	76	;'L'
  2722  007F73  69                 	db	105	;'i'
  2723  007F74  67                 	db	103	;'g'
  2724  007F75  68                 	db	104	;'h'
  2725  007F76  74                 	db	116	;'t'
  2726  007F77  20                 	db	32
  2727  007F78  3D                 	db	61	;'='
  2728  007F79  00                 	db	0
  2729  007F7A                     STR_117:
  2730  007F7A  54                 	db	84	;'T'
  2731  007F7B  65                 	db	101	;'e'
  2732  007F7C  6D                 	db	109	;'m'
  2733  007F7D  70                 	db	112	;'p'
  2734  007F7E  20                 	db	32
  2735  007F7F  3A                 	db	58	;':'
  2736  007F80  00                 	db	0
  2737  007F81                     STR_116:
  2738  007F81  4C                 	db	76	;'L'
  2739  007F82  69                 	db	105	;'i'
  2740  007F83  67                 	db	103	;'g'
  2741  007F84  68                 	db	104	;'h'
  2742  007F85  74                 	db	116	;'t'
  2743  007F86  3A                 	db	58	;':'
  2744  007F87  00                 	db	0
  2745  007F88                     STR_121:
  2746  007F88  45                 	db	69	;'E'
  2747  007F89  76                 	db	118	;'v'
  2748  007F8A  65                 	db	101	;'e'
  2749  007F8B  72                 	db	114	;'r'
  2750  007F8C  79                 	db	121	;'y'
  2751  007F8D  3A                 	db	58	;':'
  2752  007F8E  00                 	db	0
  2753  007F8F                     STR_64:
  2754  007F8F  44                 	db	68	;'D'
  2755  007F90  65                 	db	101	;'e'
  2756  007F91  6E                 	db	110	;'n'
  2757  007F92  69                 	db	105	;'i'
  2758  007F93  65                 	db	101	;'e'
  2759  007F94  64                 	db	100	;'d'
  2760  007F95  00                 	db	0
  2761  007F96                     STR_62:
  2762  007F96  64                 	db	100	;'d'
  2763  007F97  65                 	db	101	;'e'
  2764  007F98  6E                 	db	110	;'n'
  2765  007F99  69                 	db	105	;'i'
  2766  007F9A  65                 	db	101	;'e'
  2767  007F9B  64                 	db	100	;'d'
  2768  007F9C  00                 	db	0
  2769  007F9D                     STR_97:
  2770  007F9D  6E                 	db	110	;'n'
  2771  007F9E  6F                 	db	111	;'o'
  2772  007F9F  5F                 	db	95	;'_'
  2773  007FA0  66                 	db	102	;'f'
  2774  007FA1  72                 	db	114	;'r'
  2775  007FA2  65                 	db	101	;'e'
  2776  007FA3  00                 	db	0
  2777  007FA4                     STR_95:
  2778  007FA4  6D                 	db	109	;'m'
  2779  007FA5  61                 	db	97	;'a'
  2780  007FA6  63                 	db	99	;'c'
  2781  007FA7  5F                 	db	95	;'_'
  2782  007FA8  65                 	db	101	;'e'
  2783  007FA9  72                 	db	114	;'r'
  2784  007FAA  00                 	db	0
  2785  007FAB                     STR_90:
  2786  007FAB  6D                 	db	109	;'m'
  2787  007FAC  61                 	db	97	;'a'
  2788  007FAD  63                 	db	99	;'c'
  2789  007FAE  5F                 	db	95	;'_'
  2790  007FAF  72                 	db	114	;'r'
  2791  007FB0  78                 	db	120	;'x'
  2792  007FB1  00                 	db	0
  2793  007FB2                     STR_93:
  2794  007FB2  6D                 	db	109	;'m'
  2795  007FB3  61                 	db	97	;'a'
  2796  007FB4  63                 	db	99	;'c'
  2797  007FB5  5F                 	db	95	;'_'
  2798  007FB6  74                 	db	116	;'t'
  2799  007FB7  78                 	db	120	;'x'
  2800  007FB8  00                 	db	0
  2801  007FB9                     STR_30:
  2802  007FB9  52                 	db	82	;'R'
  2803  007FBA  4E                 	db	78	;'N'
  2804  007FBB  32                 	db	50	;'2'
  2805  007FBC  34                 	db	52	;'4'
  2806  007FBD  00                 	db	0
  2807  007FBE                     STR_34:
  2808  007FBE  52                 	db	82	;'R'
  2809  007FBF  4E                 	db	78	;'N'
  2810  007FC0  32                 	db	50	;'2'
  2811  007FC1  39                 	db	57	;'9'
  2812  007FC2  00                 	db	0
  2813  007FC3                     STR_122:
  2814  007FC3  4D                 	db	77	;'M'
  2815  007FC4  69                 	db	105	;'i'
  2816  007FC5  6E                 	db	110	;'n'
  2817  007FC6  73                 	db	115	;'s'
  2818  007FC7  00                 	db	0
  2819  007FC8                     STR_138:
  2820  007FC8  20                 	db	32
  2821  007FC9  30                 	db	48	;'0'
  2822  007FCA  20                 	db	32
  2823  007FCB  00                 	db	0
  2824  007FCC                     STR_139:
  2825  007FCC  20                 	db	32
  2826  007FCD  31                 	db	49	;'1'
  2827  007FCE  20                 	db	32
  2828  007FCF  00                 	db	0
  2829  007FD0                     STR_140:
  2830  007FD0  20                 	db	32
  2831  007FD1  32                 	db	50	;'2'
  2832  007FD2  20                 	db	32
  2833  007FD3  00                 	db	0
  2834  007FD4                     STR_141:
  2835  007FD4  20                 	db	32
  2836  007FD5  33                 	db	51	;'3'
  2837  007FD6  20                 	db	32
  2838  007FD7  00                 	db	0
  2839  007FD8                     STR_142:
  2840  007FD8  20                 	db	32
  2841  007FD9  34                 	db	52	;'4'
  2842  007FDA  20                 	db	32
  2843  007FDB  00                 	db	0
  2844  007FDC                     STR_143:
  2845  007FDC  20                 	db	32
  2846  007FDD  35                 	db	53	;'5'
  2847  007FDE  20                 	db	32
  2848  007FDF  00                 	db	0
  2849  007FE0                     STR_146:
  2850  007FE0  20                 	db	32
  2851  007FE1  31                 	db	49	;'1'
  2852  007FE2  30                 	db	48	;'0'
  2853  007FE3  00                 	db	0
  2854  007FE4                     STR_148:
  2855  007FE4  20                 	db	32
  2856  007FE5  33                 	db	51	;'3'
  2857  007FE6  30                 	db	48	;'0'
  2858  007FE7  00                 	db	0
  2859  007FE8                     STR_149:
  2860  007FE8  20                 	db	32
  2861  007FE9  36                 	db	54	;'6'
  2862  007FEA  30                 	db	48	;'0'
  2863  007FEB  00                 	db	0
  2864  007FEC                     STR_147:
  2865  007FEC  20                 	db	32
  2866  007FED  31                 	db	49	;'1'
  2867  007FEE  35                 	db	53	;'5'
  2868  007FEF  00                 	db	0
  2869  007FF0                     STR_128:
  2870  007FF0  4F                 	db	79	;'O'
  2871  007FF1  46                 	db	70	;'F'
  2872  007FF2  46                 	db	70	;'F'
  2873  007FF3  00                 	db	0
  2874  007FF4                     STR_144:
  2875  007FF4  41                 	db	65	;'A'
  2876  007FF5  44                 	db	68	;'D'
  2877  007FF6  52                 	db	82	;'R'
  2878  007FF7  00                 	db	0
  2879  007FF8                     STR_43:
  2880  007FF8  6F                 	db	111	;'o'
  2881  007FF9  6B                 	db	107	;'k'
  2882  007FFA  00                 	db	0
  2883  007FFB                     STR_118:
  2884  007FFB  43                 	db	67	;'C'
  2885  007FFC  00                 	db	0
  2886  007FFD                     STR_21:
  2887  007FFD  7A                 	db	122	;'z'
  2888  007FFE  00                 	db	0
  2889  0000                     
  2890                           ; #config settings
  2891  007FFF  00                 	db	0	; dummy byte at the end
  2892  0000                     
  2893                           	psect	cinit
  2894  003DEC                     __pcinit:
  2895                           	opt stack 0
  2896  003DEC                     start_initialization:
  2897                           	opt stack 0
  2898  003DEC                     __initialization:
  2899                           	opt stack 0
  2900                           
  2901                           ; Initialize objects allocated to BANK0 (9 bytes)
  2902                           ; load TBLPTR registers with __pidataBANK0
  2903  003DEC  0E86               	movlw	low __pidataBANK0
  2904  003DEE  6EF6               	movwf	tblptrl,c
  2905  003DF0  0E4A               	movlw	high __pidataBANK0
  2906  003DF2  6EF7               	movwf	tblptrh,c
  2907  003DF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2908  003DF6  6EF8               	movwf	tblptru,c
  2909  003DF8  EE00  F0F2         	lfsr	0,__pdataBANK0
  2910  003DFC  EE10 F009          	lfsr	1,9
  2911  003E00                     copy_data0:
  2912  003E00  0009               	tblrd		*+
  2913  003E02  CFF5 FFEE          	movff	tablat,postinc0
  2914  003E06  50E5               	movf	postdec1,w,c
  2915  003E08  50E1               	movf	fsr1l,w,c
  2916  003E0A  E1FA               	bnz	copy_data0
  2917                           
  2918                           ; Initialize objects allocated to COMRAM (1 bytes)
  2919                           ; load TBLPTR registers with __pidataCOMRAM
  2920  003E0C  0EC4               	movlw	low __pidataCOMRAM
  2921  003E0E  6EF6               	movwf	tblptrl,c
  2922  003E10  0E4A               	movlw	high __pidataCOMRAM
  2923  003E12  6EF7               	movwf	tblptrh,c
  2924  003E14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2925  003E16  6EF8               	movwf	tblptru,c
  2926  003E18  0009               	tblrd		*+	;fetch initializer
  2927  003E1A  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  2928                           
  2929                           ; Clear objects allocated to BANK2 (160 bytes)
  2930  003E1E  EE02  F000         	lfsr	0,__pbssBANK2
  2931  003E22  0EA0               	movlw	160
  2932  003E24                     clear_0:
  2933  003E24  6AEE               	clrf	postinc0,c
  2934  003E26  06E8               	decf	wreg,f,c
  2935  003E28  E1FD               	bnz	clear_0
  2936                           
  2937                           ; Clear objects allocated to BANK1 (226 bytes)
  2938  003E2A  EE01  F000         	lfsr	0,__pbssBANK1
  2939  003E2E  0EE2               	movlw	226
  2940  003E30                     clear_1:
  2941  003E30  6AEE               	clrf	postinc0,c
  2942  003E32  06E8               	decf	wreg,f,c
  2943  003E34  E1FD               	bnz	clear_1
  2944                           
  2945                           ; Clear objects allocated to BANK0 (94 bytes)
  2946  003E36  EE00  F060         	lfsr	0,__pbssBANK0
  2947  003E3A  0E5E               	movlw	94
  2948  003E3C                     clear_2:
  2949  003E3C  6AEE               	clrf	postinc0,c
  2950  003E3E  06E8               	decf	wreg,f,c
  2951  003E40  E1FD               	bnz	clear_2
  2952                           
  2953                           ; Clear objects allocated to COMRAM (41 bytes)
  2954  003E42  EE00  F032         	lfsr	0,__pbssCOMRAM
  2955  003E46  0E29               	movlw	41
  2956  003E48                     clear_3:
  2957  003E48  6AEE               	clrf	postinc0,c
  2958  003E4A  06E8               	decf	wreg,f,c
  2959  003E4C  E1FD               	bnz	clear_3
  2960  003E4E                     end_of_initialization:
  2961                           	opt stack 0
  2962  003E4E                     __end_of__initialization:
  2963                           	opt stack 0
  2964  003E4E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2965  003E50  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2966  003E52  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2967  003E54  6EF8               	movwf	tblptru,c
  2968  003E56  0100               	movlb	0
  2969  003E58  EFE0  F012         	goto	_main	;jump to C main() function
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1l	equ	0xFE1
  2978                           
  2979                           	psect	bssCOMRAM
  2980  000032                     __pbssCOMRAM:
  2981                           	opt stack 0
  2982  000032                     _BaudRateGen:
  2983                           	opt stack 0
  2984  000032                     	ds	4
  2985  000036                     _pDst:
  2986                           	opt stack 0
  2987  000036                     	ds	2
  2988  000038                     _pBDTEntryEP0OutNext:
  2989                           	opt stack 0
  2990  000038                     	ds	2
  2991  00003A                     _pBDTEntryEP0OutCurrent:
  2992                           	opt stack 0
  2993  00003A                     	ds	2
  2994  00003C                     _timer1ReloadVal:
  2995                           	opt stack 0
  2996  00003C                     	ds	2
  2997  00003E                     USBapp_LEDUpdateStatus@ledCount:
  2998                           	opt stack 0
  2999  00003E                     	ds	2
  3000  000040                     _control_signal_bitmap:
  3001                           	opt stack 0
  3002  000040                     	ds	1
  3003  000041                     _USBDeferOUTDataStagePackets:
  3004                           	opt stack 0
  3005  000041                     	ds	1
  3006  000042                     _USBDeferINDataStagePackets:
  3007                           	opt stack 0
  3008  000042                     	ds	1
  3009  000043                     _USBStatusStageEnabledFlag2:
  3010                           	opt stack 0
  3011  000043                     	ds	1
  3012  000044                     _USBStatusStageEnabledFlag1:
  3013                           	opt stack 0
  3014  000044                     	ds	1
  3015  000045                     _USBDeferStatusStagePacket:
  3016                           	opt stack 0
  3017  000045                     	ds	1
  3018  000046                     _USBStatusStageTimeoutCounter:
  3019                           	opt stack 0
  3020  000046                     	ds	1
  3021  000047                     _BothEP0OutUOWNsSet:
  3022                           	opt stack 0
  3023  000047                     	ds	1
  3024  000048                     _endpoint_number:
  3025                           	opt stack 0
  3026  000048                     	ds	1
  3027  000049                     _USBBusIsSuspended:
  3028                           	opt stack 0
  3029  000049                     	ds	1
  3030  00004A                     _RemoteWakeup:
  3031                           	opt stack 0
  3032  00004A                     	ds	1
  3033  00004B                     _controlTransferState:
  3034                           	opt stack 0
  3035  00004B                     	ds	1
  3036  00004C                     _shortPacketStatus:
  3037                           	opt stack 0
  3038  00004C                     	ds	1
  3039  00004D                     	ds	1
  3040  00004E                     	ds	1
  3041  00004F                     _minTicker:
  3042                           	opt stack 0
  3043  00004F                     	ds	1
  3044  000050                     	ds	1
  3045  000051                     	ds	1
  3046  000052                     _responseReady:
  3047                           	opt stack 0
  3048  000052                     	ds	1
  3049  000053                     	ds	1
  3050  000054                     _moteModeState:
  3051                           	opt stack 0
  3052  000054                     	ds	1
  3053  000055                     _appState:
  3054                           	opt stack 0
  3055  000055                     	ds	1
  3056  000056                     _mainState:
  3057                           	opt stack 0
  3058  000056                     	ds	1
  3059  000057                     _USBAlternateInterface:
  3060                           	opt stack 0
  3061  000057                     	ds	2
  3062  000059                     _USTATcopy:
  3063                           	opt stack 0
  3064  000059                     	ds	1
  3065  00005A                     _USBActiveConfiguration:
  3066                           	opt stack 0
  3067  00005A                     	ds	1
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1l	equ	0xFE1
  3076                           
  3077                           	psect	dataCOMRAM
  3078  00005B                     __pdataCOMRAM:
  3079                           	opt stack 0
  3080  00005B                     	ds	1
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           postinc0	equ	0xFEE
  3086                           wreg	equ	0xFE8
  3087                           postdec1	equ	0xFE5
  3088                           fsr1l	equ	0xFE1
  3089                           
  3090                           	psect	bssBANK0
  3091  000060                     __pbssBANK0:
  3092                           	opt stack 0
  3093  000060                     _outPipes:
  3094                           	opt stack 0
  3095  000060                     	ds	8
  3096  000068                     _inPipes:
  3097                           	opt stack 0
  3098  000068                     	ds	6
  3099  00006E                     _pBDTEntryIn:
  3100                           	opt stack 0
  3101  00006E                     	ds	6
  3102  000074                     _pBDTEntryOut:
  3103                           	opt stack 0
  3104  000074                     	ds	6
  3105  00007A                     service_pushbutton@PB_Timer:
  3106                           	opt stack 0
  3107  00007A                     	ds	4
  3108  00007E                     _pCDCDst:
  3109                           	opt stack 0
  3110  00007E                     	ds	3
  3111  000081                     _pCDCSrc:
  3112                           	opt stack 0
  3113  000081                     	ds	3
  3114  000084                     _ep_data_out:
  3115                           	opt stack 0
  3116  000084                     	ds	3
  3117  000087                     _ep_data_in:
  3118                           	opt stack 0
  3119  000087                     	ds	3
  3120  00008A                     _CDCDataInHandle:
  3121                           	opt stack 0
  3122  00008A                     	ds	2
  3123  00008C                     _CDCDataOutHandle:
  3124                           	opt stack 0
  3125  00008C                     	ds	2
  3126  00008E                     _timerMinTickCount:
  3127                           	opt stack 0
  3128  00008E                     	ds	2
  3129  000090                     _timerMsTickCount:
  3130                           	opt stack 0
  3131  000090                     	ds	2
  3132  000092                     _m10SecTicker:
  3133                           	opt stack 0
  3134  000092                     	ds	2
  3135  000094                     _temperature:
  3136                           	opt stack 0
  3137  000094                     	ds	2
  3138  000096                     _light:
  3139                           	opt stack 0
  3140  000096                     	ds	2
  3141  000098                     _cdc_mem_type:
  3142                           	opt stack 0
  3143  000098                     	ds	1
  3144  000099                     _cdc_tx_len:
  3145                           	opt stack 0
  3146  000099                     	ds	1
  3147  00009A                     _cdc_rx_len:
  3148                           	opt stack 0
  3149  00009A                     	ds	1
  3150  00009B                     _eusartRxTail:
  3151                           	opt stack 0
  3152  00009B                     	ds	1
  3153  00009C                     _eusartRxHead:
  3154                           	opt stack 0
  3155  00009C                     	ds	1
  3156  00009D                     _eusartTxBufferRemaining:
  3157                           	opt stack 0
  3158  00009D                     	ds	1
  3159  00009E                     _eusartTxTail:
  3160                           	opt stack 0
  3161  00009E                     	ds	1
  3162  00009F                     _eusartTxHead:
  3163                           	opt stack 0
  3164  00009F                     	ds	1
  3165  0000A0                     service_pushbutton@Release_Timer:
  3166                           	opt stack 0
  3167  0000A0                     	ds	1
  3168  0000A1                     _RS232cp:
  3169                           	opt stack 0
  3170  0000A1                     	ds	1
  3171  0000A2                     _LastRS232Out:
  3172                           	opt stack 0
  3173  0000A2                     	ds	1
  3174  0000A3                     _RS232_Out_Data_Rdy:
  3175                           	opt stack 0
  3176  0000A3                     	ds	1
  3177  0000A4                     _NextUSBOut:
  3178                           	opt stack 0
  3179  0000A4                     	ds	1
  3180  0000A5                     _rxByteFlag:
  3181                           	opt stack 0
  3182  0000A5                     	ds	1
  3183  0000A6                     _usbState:
  3184                           	opt stack 0
  3185  0000A6                     	ds	1
  3186  0000A7                     _cdc_trf_state:
  3187                           	opt stack 0
  3188  0000A7                     	ds	1
  3189  0000A8                     _USBDeviceState:
  3190                           	opt stack 0
  3191  0000A8                     	ds	1
  3192  0000A9                     _rnModule:
  3193                           	opt stack 0
  3194  0000A9                     	ds	1
  3195  0000AA                     _sleepTicker:
  3196                           	opt stack 0
  3197  0000AA                     	ds	1
  3198  0000AB                     _secTicker:
  3199                           	opt stack 0
  3200  0000AB                     	ds	1
  3201  0000AC                     _randomPortNum:
  3202                           	opt stack 0
  3203  0000AC                     	ds	1
  3204  0000AD                     _moduleBufferIndex:
  3205                           	opt stack 0
  3206  0000AD                     	ds	1
  3207  0000AE                     _runningState:
  3208                           	opt stack 0
  3209  0000AE                     	ds	1
  3210  0000AF                     _activeState:
  3211                           	opt stack 0
  3212  0000AF                     	ds	1
  3213  0000B0                     _eusartRxCount:
  3214                           	opt stack 0
  3215  0000B0                     	ds	1
  3216  0000B1                     _powerOnStatus:
  3217                           	opt stack 0
  3218  0000B1                     	ds	1
  3219  0000B2                     _operationType:
  3220                           	opt stack 0
  3221  0000B2                     	ds	1
  3222  0000B3                     _appTimer:
  3223                           	opt stack 0
  3224  0000B3                     	ds	1
  3225  0000B4                     _line_coding:
  3226                           	opt stack 0
  3227  0000B4                     	ds	7
  3228  0000BB                     _responsePortNum:
  3229                           	opt stack 0
  3230  0000BB                     	ds	3
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           postdec1	equ	0xFE5
  3238                           fsr1l	equ	0xFE1
  3239                           
  3240                           	psect	dataBANK0
  3241  0000F2                     __pdataBANK0:
  3242                           	opt stack 0
  3243  0000F2                     _selectedFont:
  3244                           	opt stack 0
  3245  0000F2                     	ds	2
  3246  0000F4                     _exitUSB:
  3247                           	opt stack 0
  3248  0000F4                     	ds	1
  3249  0000F5                     _periodicState:
  3250                           	opt stack 0
  3251  0000F5                     	ds	1
  3252  0000F6                     _menuTimeout:
  3253                           	opt stack 0
  3254  0000F6                     	ds	1
  3255  0000F7                     _dataRateValue:
  3256                           	opt stack 0
  3257  0000F7                     	ds	1
  3258  0000F8                     _periodicTimerValue:
  3259                           	opt stack 0
  3260  0000F8                     	ds	1
  3261  0000F9                     _periodicUpValue:
  3262                           	opt stack 0
  3263  0000F9                     	ds	1
  3264  0000FA                     _moteState:
  3265                           	opt stack 0
  3266  0000FA                     	ds	1
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           postdec1	equ	0xFE5
  3274                           fsr1l	equ	0xFE1
  3275                           
  3276                           	psect	bssBANK1
  3277  000100                     __pbssBANK1:
  3278                           	opt stack 0
  3279  000100                     	ds	16
  3280  000110                     _responseId:
  3281                           	opt stack 0
  3282  000110                     	ds	16
  3283  000120                     _USB_Buffer:
  3284                           	opt stack 0
  3285  000120                     	ds	64
  3286  000160                     _moduleResonseBuffer:
  3287                           	opt stack 0
  3288  000160                     	ds	64
  3289  0001A0                     _responseData:
  3290                           	opt stack 0
  3291  0001A0                     	ds	32
  3292  0001C0                     _dataBuffer:
  3293                           	opt stack 0
  3294  0001C0                     	ds	16
  3295  0001D0                     _cdc_notice:
  3296                           	opt stack 0
  3297  0001D0                     	ds	10
  3298  0001DA                     _dummy_encapsulated_cmd_response:
  3299                           	opt stack 0
  3300  0001DA                     	ds	8
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1l	equ	0xFE1
  3309                           
  3310                           	psect	bssBANK2
  3311  000200                     __pbssBANK2:
  3312                           	opt stack 0
  3313  000200                     _eusartRxBuffer:
  3314                           	opt stack 0
  3315  000200                     	ds	64
  3316  000240                     _eusartTxBuffer:
  3317                           	opt stack 0
  3318  000240                     	ds	64
  3319  000280                     	ds	32
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           postdec1	equ	0xFE5
  3327                           fsr1l	equ	0xFE1
  3328                           
  3329                           	psect	cstackBANK0
  3330  0000BE                     __pcstackBANK0:
  3331                           	opt stack 0
  3332  0000BE                     ??_TMR1_Initialize:
  3333  0000BE                     ?_ADC_GetConversion:
  3334                           	opt stack 0
  3335  0000BE                     ?_strncmp:
  3336                           	opt stack 0
  3337  0000BE                     ?_strcmp:
  3338                           	opt stack 0
  3339  0000BE                     ?_USBTransferOnePacket:
  3340                           	opt stack 0
  3341  0000BE                     ?___awmod:
  3342                           	opt stack 0
  3343  0000BE                     ?___lwdiv:
  3344                           	opt stack 0
  3345  0000BE                     ?___lwmod:
  3346                           	opt stack 0
  3347  0000BE                     ?___almod:
  3348                           	opt stack 0
  3349  0000BE                     MOTEapp_handlerState@state:
  3350                           	opt stack 0
  3351  0000BE                     MOTEapp_TimerBasedTask@timerTask:
  3352                           	opt stack 0
  3353  0000BE                     hexToStr@character:
  3354                           	opt stack 0
  3355  0000BE                     moteApp_clearBuffers@counter:
  3356                           	opt stack 0
  3357  0000BE                     USBapp_handlerState@state:
  3358                           	opt stack 0
  3359  0000BE                     USBapp_exitCDCState@usbState:
  3360                           	opt stack 0
  3361  0000BE                     service_pushbutton@bs:
  3362                           	opt stack 0
  3363  0000BE                     EUSART_Read@readValue:
  3364                           	opt stack 0
  3365  0000BE                     EUSART_Write@txData:
  3366                           	opt stack 0
  3367  0000BE                     EUSART_FlushBuffer@index:
  3368                           	opt stack 0
  3369  0000BE                     SPI_Exchange8bit@data:
  3370                           	opt stack 0
  3371  0000BE                     DATAEE_WriteByte@bData:
  3372                           	opt stack 0
  3373  0000BE                     DATAEE_ReadByte@bAdd:
  3374                           	opt stack 0
  3375  0000BE                     TMR2_ReadTimer@readVal:
  3376                           	opt stack 0
  3377  0000BE                     USBTransferOnePacket@dir:
  3378                           	opt stack 0
  3379  0000BE                     ___lbdiv@divisor:
  3380                           	opt stack 0
  3381  0000BE                     moteApp_delayms@length:
  3382                           	opt stack 0
  3383  0000BE                     oled_setFont@font:
  3384                           	opt stack 0
  3385  0000BE                     putUSBUSART@data:
  3386                           	opt stack 0
  3387  0000BE                     ___awmod@dividend:
  3388                           	opt stack 0
  3389  0000BE                     ___lwdiv@dividend:
  3390                           	opt stack 0
  3391  0000BE                     ___lwmod@dividend:
  3392                           	opt stack 0
  3393  0000BE                     memset@p1:
  3394                           	opt stack 0
  3395  0000BE                     strcmp@s1:
  3396                           	opt stack 0
  3397  0000BE                     strncmp@s1:
  3398                           	opt stack 0
  3399  0000BE                     ___almod@dividend:
  3400                           	opt stack 0
  3401                           
  3402                           ; 4 bytes @ 0x0
  3403  0000BE                     	ds	1
  3404  0000BF                     MOTEapp_getModuleResponse@terminatorReceived:
  3405                           	opt stack 0
  3406  0000BF                     moteApp_clearBuffers@counter_1511:
  3407                           	opt stack 0
  3408  0000BF                     oled_writeCommand@command:
  3409                           	opt stack 0
  3410  0000BF                     oled_writeData@data:
  3411                           	opt stack 0
  3412  0000BF                     DATAEE_WriteByte@bAdd:
  3413                           	opt stack 0
  3414  0000BF                     ___lbdiv@dividend:
  3415                           	opt stack 0
  3416  0000BF                     sendCommand@string:
  3417                           	opt stack 0
  3418  0000BF                     sendDataCommand@string:
  3419                           	opt stack 0
  3420  0000BF                     USBTransferOnePacket@data:
  3421                           	opt stack 0
  3422                           
  3423                           ; 2 bytes @ 0x1
  3424  0000BF                     	ds	1
  3425  0000C0                     ??_moteApp_delayms:
  3426  0000C0                     ??_ADC_GetConversion:
  3427  0000C0                     ??_oled_devInit:
  3428  0000C0                     MOTEapp_getModuleResponse@bufferByte:
  3429                           	opt stack 0
  3430  0000C0                     moteApp_clearBuffers@counter_1512:
  3431                           	opt stack 0
  3432  0000C0                     Set_Page_Address@address:
  3433                           	opt stack 0
  3434  0000C0                     Set_Column_Address@address:
  3435                           	opt stack 0
  3436  0000C0                     oled_setDisplay@displayType:
  3437                           	opt stack 0
  3438  0000C0                     oled_displayOff@state:
  3439                           	opt stack 0
  3440  0000C0                     DATAEE_WriteByte@GIEBitValue:
  3441                           	opt stack 0
  3442  0000C0                     putUSBUSART@length:
  3443                           	opt stack 0
  3444  0000C0                     ___lbdiv@counter:
  3445                           	opt stack 0
  3446  0000C0                     ___awmod@divisor:
  3447                           	opt stack 0
  3448  0000C0                     ___lwdiv@divisor:
  3449                           	opt stack 0
  3450  0000C0                     ___lwmod@divisor:
  3451                           	opt stack 0
  3452  0000C0                     memset@c:
  3453                           	opt stack 0
  3454  0000C0                     strcmp@s2:
  3455                           	opt stack 0
  3456  0000C0                     strncmp@s2:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x2
  3460  0000C0                     	ds	1
  3461  0000C1                     ??_moteApp_toggleLeds:
  3462  0000C1                     ??_MOTEapp_SetDataRateSetting:
  3463  0000C1                     ??_moduleSleep:
  3464  0000C1                     moteApp_clearBuffers@counter_1513:
  3465                           	opt stack 0
  3466  0000C1                     oled_putChar@station_dot:
  3467                           	opt stack 0
  3468  0000C1                     USBTransferOnePacket@len:
  3469                           	opt stack 0
  3470  0000C1                     ___lbdiv@quotient:
  3471                           	opt stack 0
  3472  0000C1                     moteApp_delayms@counter:
  3473                           	opt stack 0
  3474  0000C1                     sendDataCommand@appData:
  3475                           	opt stack 0
  3476                           
  3477                           ; 2 bytes @ 0x3
  3478  0000C1                     	ds	1
  3479  0000C2                     ??_strcmp:
  3480  0000C2                     MOTEapp_SetDataRateSetting@dr:
  3481                           	opt stack 0
  3482  0000C2                     moteApp_toggleLeds@state:
  3483                           	opt stack 0
  3484  0000C2                     oled_putChar@start_page:
  3485                           	opt stack 0
  3486  0000C2                     ADC_GetConversion@channel:
  3487                           	opt stack 0
  3488  0000C2                     USBTransferOnePacket@ep:
  3489                           	opt stack 0
  3490  0000C2                     ___awmod@counter:
  3491                           	opt stack 0
  3492  0000C2                     ___lwmod@counter:
  3493                           	opt stack 0
  3494  0000C2                     ___lwdiv@quotient:
  3495                           	opt stack 0
  3496  0000C2                     memset@n:
  3497                           	opt stack 0
  3498  0000C2                     strncmp@len:
  3499                           	opt stack 0
  3500  0000C2                     ___almod@divisor:
  3501                           	opt stack 0
  3502                           
  3503                           ; 4 bytes @ 0x4
  3504  0000C2                     	ds	1
  3505  0000C3                     ??_oled_putChar:
  3506  0000C3                     sendDataCommand@dataLength:
  3507                           	opt stack 0
  3508  0000C3                     ___awmod@sign:
  3509                           	opt stack 0
  3510  0000C3                     strcmp@r:
  3511                           	opt stack 0
  3512  0000C3                     moduleResync@escapeCounter:
  3513                           	opt stack 0
  3514  0000C3                     USBTransferOnePacket@handle:
  3515                           	opt stack 0
  3516                           
  3517                           ; 2 bytes @ 0x5
  3518  0000C3                     	ds	1
  3519  0000C4                     ??_strncmp:
  3520  0000C4                     ??_sendDataCommand:
  3521  0000C4                     moteApp_add8bToDataBuffer@bufferLocation:
  3522                           	opt stack 0
  3523  0000C4                     ___lwdiv@counter:
  3524                           	opt stack 0
  3525  0000C4                     memset@p:
  3526                           	opt stack 0
  3527                           
  3528                           ; 2 bytes @ 0x6
  3529  0000C4                     	ds	1
  3530  0000C5                     ??_moteApp_add8bToDataBuffer:
  3531  0000C5                     ??_CDCTxService:
  3532  0000C5                     moduleResync@escapeEvent:
  3533                           	opt stack 0
  3534  0000C5                     sendDataCommand@byteCount:
  3535                           	opt stack 0
  3536  0000C5                     ADC_TempConversion@tempRaw:
  3537                           	opt stack 0
  3538  0000C5                     moteApp_add16bToDataBuffer@number:
  3539                           	opt stack 0
  3540  0000C5                     getsUSBUSART@buffer:
  3541                           	opt stack 0
  3542                           
  3543                           ; 2 bytes @ 0x7
  3544  0000C5                     	ds	1
  3545  0000C6                     sendDataCommand@byteCount_1443:
  3546                           	opt stack 0
  3547  0000C6                     ADC_TempConversion@temp:
  3548                           	opt stack 0
  3549  0000C6                     USBDeviceInit@i:
  3550                           	opt stack 0
  3551  0000C6                     ___almod@counter:
  3552                           	opt stack 0
  3553  0000C6                     _CDCTxService$5710:
  3554                           	opt stack 0
  3555                           
  3556                           ; 2 bytes @ 0x8
  3557  0000C6                     	ds	1
  3558  0000C7                     moteApp_add8bToDataBuffer@number:
  3559                           	opt stack 0
  3560  0000C7                     moteApp_add16bToDataBuffer@bufferLocation:
  3561                           	opt stack 0
  3562  0000C7                     getsUSBUSART@len:
  3563                           	opt stack 0
  3564  0000C7                     ___almod@sign:
  3565                           	opt stack 0
  3566                           
  3567                           ; 1 bytes @ 0x9
  3568  0000C7                     	ds	1
  3569  0000C8                     ??_moteApp_add16bToDataBuffer:
  3570  0000C8                     ??_getsUSBUSART:
  3571  0000C8                     CDCTxService@i:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0xA
  3575  0000C8                     	ds	1
  3576  0000C9                     oled_putChar@k:
  3577                           	opt stack 0
  3578  0000C9                     CDCTxService@byte_to_send:
  3579                           	opt stack 0
  3580  0000C9                     _getsUSBUSART$5662:
  3581                           	opt stack 0
  3582                           
  3583                           ; 2 bytes @ 0xB
  3584  0000C9                     	ds	1
  3585  0000CA                     oled_putChar@index:
  3586                           	opt stack 0
  3587                           
  3588                           ; 1 bytes @ 0xC
  3589  0000CA                     	ds	1
  3590  0000CB                     ??_USBapp_DeviceCdcEmulatorHandler:
  3591  0000CB                     oled_clearRow@page:
  3592                           	opt stack 0
  3593  0000CB                     oled_putString@string:
  3594                           	opt stack 0
  3595                           
  3596                           ; 2 bytes @ 0xD
  3597  0000CB                     	ds	1
  3598  0000CC                     oled_clearRow@index:
  3599                           	opt stack 0
  3600                           
  3601                           ; 1 bytes @ 0xE
  3602  0000CC                     	ds	1
  3603  0000CD                     moteApp_GoToSleep@status:
  3604                           	opt stack 0
  3605  0000CD                     oled_putString@station_dot:
  3606                           	opt stack 0
  3607                           
  3608                           ; 1 bytes @ 0xF
  3609  0000CD                     	ds	1
  3610  0000CE                     oled_putString@start_page:
  3611                           	opt stack 0
  3612                           
  3613                           ; 1 bytes @ 0x10
  3614  0000CE                     	ds	1
  3615  0000CF                     oled_putString@index:
  3616                           	opt stack 0
  3617                           
  3618                           ; 1 bytes @ 0x11
  3619  0000CF                     	ds	1
  3620  0000D0                     moteJoiningProcess@changeStates:
  3621                           	opt stack 0
  3622  0000D0                     USBapp_Handler@buttonPress:
  3623                           	opt stack 0
  3624  0000D0                     oled_putUint8@station_dot:
  3625                           	opt stack 0
  3626  0000D0                     test_switch@timeout:
  3627                           	opt stack 0
  3628  0000D0                     oled_putUint16@number:
  3629                           	opt stack 0
  3630                           
  3631                           ; 2 bytes @ 0x12
  3632  0000D0                     	ds	1
  3633  0000D1                     moteJoiningProcess@selectButton:
  3634                           	opt stack 0
  3635  0000D1                     oled_putUint8@start_page:
  3636                           	opt stack 0
  3637                           
  3638                           ; 1 bytes @ 0x13
  3639  0000D1                     	ds	1
  3640  0000D2                     ??_moteJoiningProcess:
  3641  0000D2                     test_switch@buttonCheck:
  3642                           	opt stack 0
  3643  0000D2                     oled_putUint8@number:
  3644                           	opt stack 0
  3645  0000D2                     oled_putUint16@station_dot:
  3646                           	opt stack 0
  3647                           
  3648                           ; 1 bytes @ 0x14
  3649  0000D2                     	ds	1
  3650  0000D3                     moteJoiningProcess@readDataRate:
  3651                           	opt stack 0
  3652  0000D3                     oled_putUint16@start_page:
  3653                           	opt stack 0
  3654  0000D3                     oled_putUint8@numData:
  3655                           	opt stack 0
  3656                           
  3657                           ; 6 bytes @ 0x15
  3658  0000D3                     	ds	1
  3659  0000D4                     moteJoiningProcess@joiningComplete:
  3660                           	opt stack 0
  3661  0000D4                     oled_putUint16@numData:
  3662                           	opt stack 0
  3663                           
  3664                           ; 6 bytes @ 0x16
  3665  0000D4                     	ds	1
  3666  0000D5                     moteJoiningProcess@messageReady:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x17
  3670  0000D5                     	ds	5
  3671  0000DA                     moteRunningProcess@selectButton:
  3672                           	opt stack 0
  3673  0000DA                     test_adc@L:
  3674                           	opt stack 0
  3675                           
  3676                           ; 2 bytes @ 0x1C
  3677  0000DA                     	ds	1
  3678  0000DB                     moteRunningProcess@messageReady:
  3679                           	opt stack 0
  3680                           
  3681                           ; 1 bytes @ 0x1D
  3682  0000DB                     	ds	1
  3683  0000DC                     moteRunningProcess@sleepEvent:
  3684                           	opt stack 0
  3685  0000DC                     test_adc@Traw:
  3686                           	opt stack 0
  3687                           
  3688                           ; 2 bytes @ 0x1E
  3689  0000DC                     	ds	1
  3690  0000DD                     ??_moteRunningProcess:
  3691                           
  3692                           ; 1 bytes @ 0x1F
  3693  0000DD                     	ds	1
  3694  0000DE                     test_adc@T:
  3695                           	opt stack 0
  3696                           
  3697                           ; 1 bytes @ 0x20
  3698  0000DE                     	ds	1
  3699  0000DF                     test_adc@count:
  3700                           	opt stack 0
  3701  0000DF                     moteRunningProcess@readByte:
  3702                           	opt stack 0
  3703                           
  3704                           ; 1 bytes @ 0x21
  3705  0000DF                     	ds	1
  3706  0000E0                     moteRunningProcess@Traw:
  3707                           	opt stack 0
  3708                           
  3709                           ; 2 bytes @ 0x22
  3710  0000E0                     	ds	2
  3711  0000E2                     moteRunningProcess@i:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x24
  3715  0000E2                     	ds	1
  3716  0000E3                     moteRunningProcess@i_1299:
  3717                           	opt stack 0
  3718                           
  3719                           ; 1 bytes @ 0x25
  3720  0000E3                     	ds	1
  3721  0000E4                     moteRunningProcess@counter:
  3722                           	opt stack 0
  3723                           
  3724                           ; 1 bytes @ 0x26
  3725  0000E4                     	ds	1
  3726  0000E5                     moteRunningProcess@bufferReadPos:
  3727                           	opt stack 0
  3728                           
  3729                           ; 1 bytes @ 0x27
  3730  0000E5                     	ds	1
  3731  0000E6                     moteRunningProcess@changeStates:
  3732                           	opt stack 0
  3733                           
  3734                           ; 1 bytes @ 0x28
  3735  0000E6                     	ds	1
  3736  0000E7                     ??_moteHandler:
  3737                           
  3738                           ; 1 bytes @ 0x29
  3739  0000E7                     	ds	2
  3740  0000E9                     moteHandler@gotoSleep:
  3741                           	opt stack 0
  3742                           
  3743                           ; 1 bytes @ 0x2B
  3744  0000E9                     	ds	1
  3745  0000EA                     moteHandler@Traw:
  3746                           	opt stack 0
  3747                           
  3748                           ; 2 bytes @ 0x2C
  3749  0000EA                     	ds	2
  3750  0000EC                     moteHandler@gotoNextState:
  3751                           	opt stack 0
  3752                           
  3753                           ; 1 bytes @ 0x2E
  3754  0000EC                     	ds	1
  3755  0000ED                     moteHandler@s2Button:
  3756                           	opt stack 0
  3757                           
  3758                           ; 1 bytes @ 0x2F
  3759  0000ED                     	ds	1
  3760  0000EE                     moteHandler@buttonPress:
  3761                           	opt stack 0
  3762                           
  3763                           ; 1 bytes @ 0x30
  3764  0000EE                     	ds	1
  3765  0000EF                     moteHandler@i:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x31
  3769  0000EF                     	ds	1
  3770  0000F0                     moteHandler@i_1233:
  3771                           	opt stack 0
  3772                           
  3773                           ; 1 bytes @ 0x32
  3774  0000F0                     	ds	1
  3775  0000F1                     moteHandler@readMessage:
  3776                           	opt stack 0
  3777                           
  3778                           ; 1 bytes @ 0x33
  3779  0000F1                     	ds	1
  3780  0000F2                     tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           postinc0	equ	0xFEE
  3785                           wreg	equ	0xFE8
  3786                           postdec1	equ	0xFE5
  3787                           fsr1l	equ	0xFE1
  3788                           
  3789                           ; 1 bytes @ 0x34
  3790                           
  3791                           	psect	cstackCOMRAM
  3792  000001                     __pcstackCOMRAM:
  3793                           	opt stack 0
  3794  000001                     ??_USBStdGetDscHandler:
  3795  000001                     ??_USBStdGetStatusHandler:
  3796  000001                     ?i2_USBTransferOnePacket:
  3797                           	opt stack 0
  3798  000001                     ?___lldiv:
  3799                           	opt stack 0
  3800  000001                     USBConfigureEndpoint@direction:
  3801                           	opt stack 0
  3802  000001                     USBCtrlTrfTxService@byteToSend:
  3803                           	opt stack 0
  3804  000001                     i2USBTransferOnePacket@dir:
  3805                           	opt stack 0
  3806  000001                     i2memset@p1:
  3807                           	opt stack 0
  3808  000001                     ___lldiv@dividend:
  3809                           	opt stack 0
  3810                           
  3811                           ; 4 bytes @ 0x0
  3812  000001                     	ds	1
  3813  000002                     ??_USBConfigureEndpoint:
  3814  000002                     USBStdGetStatusHandler@p:
  3815                           	opt stack 0
  3816  000002                     i2USBTransferOnePacket@data:
  3817                           	opt stack 0
  3818                           
  3819                           ; 2 bytes @ 0x1
  3820  000002                     	ds	1
  3821  000003                     i2memset@c:
  3822                           	opt stack 0
  3823                           
  3824                           ; 2 bytes @ 0x2
  3825  000003                     	ds	1
  3826  000004                     i2USBTransferOnePacket@len:
  3827                           	opt stack 0
  3828                           
  3829                           ; 1 bytes @ 0x3
  3830  000004                     	ds	1
  3831  000005                     i2USBTransferOnePacket@ep:
  3832                           	opt stack 0
  3833  000005                     i2memset@n:
  3834                           	opt stack 0
  3835  000005                     ___lldiv@divisor:
  3836                           	opt stack 0
  3837                           
  3838                           ; 4 bytes @ 0x4
  3839  000005                     	ds	1
  3840  000006                     USBConfigureEndpoint@EPNum:
  3841                           	opt stack 0
  3842  000006                     i2USBTransferOnePacket@handle:
  3843                           	opt stack 0
  3844                           
  3845                           ; 2 bytes @ 0x5
  3846  000006                     	ds	1
  3847  000007                     USBConfigureEndpoint@handle:
  3848                           	opt stack 0
  3849  000007                     i2memset@p:
  3850                           	opt stack 0
  3851                           
  3852                           ; 2 bytes @ 0x6
  3853  000007                     	ds	2
  3854  000009                     USBEnableEndpoint@options:
  3855                           	opt stack 0
  3856  000009                     i2USBDeviceInit@i:
  3857                           	opt stack 0
  3858  000009                     ___lldiv@quotient:
  3859                           	opt stack 0
  3860                           
  3861                           ; 4 bytes @ 0x8
  3862  000009                     	ds	1
  3863  00000A                     USBEnableEndpoint@p:
  3864                           	opt stack 0
  3865                           
  3866                           ; 2 bytes @ 0x9
  3867  00000A                     	ds	2
  3868  00000C                     USBEnableEndpoint@ep:
  3869                           	opt stack 0
  3870                           
  3871                           ; 1 bytes @ 0xB
  3872  00000C                     	ds	1
  3873  00000D                     USBapp_CdcEmulatorInitialize@i:
  3874                           	opt stack 0
  3875  00000D                     ___lldiv@counter:
  3876                           	opt stack 0
  3877                           
  3878                           ; 1 bytes @ 0xC
  3879  00000D                     	ds	1
  3880  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3881                           	opt stack 0
  3882  00000E                     USART_mySetLineCodingHandler@dwBaud:
  3883                           	opt stack 0
  3884                           
  3885                           ; 4 bytes @ 0xD
  3886  00000E                     	ds	2
  3887  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3888                           	opt stack 0
  3889                           
  3890                           ; 2 bytes @ 0xF
  3891  000010                     	ds	2
  3892  000012                     USBCtrlTrfRxService@i:
  3893                           	opt stack 0
  3894  000012                     USBCtrlTrfInHandler@lastDTS:
  3895                           	opt stack 0
  3896  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3897                           	opt stack 0
  3898                           
  3899                           ; 2 bytes @ 0x11
  3900  000012                     	ds	1
  3901  000013                     USBCtrlTrfRxService@byteToRead:
  3902                           	opt stack 0
  3903                           
  3904                           ; 1 bytes @ 0x12
  3905  000013                     	ds	1
  3906  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3907                           
  3908                           ; 1 bytes @ 0x13
  3909  000014                     	ds	2
  3910  000016                     ??_USBStdFeatureReqHandler:
  3911  000016                     USBStdSetCfgHandler@i:
  3912                           	opt stack 0
  3913                           
  3914                           ; 1 bytes @ 0x15
  3915  000016                     	ds	1
  3916  000017                     USBStdFeatureReqHandler@pUEP:
  3917                           	opt stack 0
  3918                           
  3919                           ; 2 bytes @ 0x16
  3920  000017                     	ds	2
  3921  000019                     USBStdFeatureReqHandler@current_ep_data:
  3922                           	opt stack 0
  3923                           
  3924                           ; 1 bytes @ 0x18
  3925  000019                     	ds	1
  3926  00001A                     USBStdFeatureReqHandler@p:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0x19
  3930  00001A                     	ds	2
  3931  00001C                     ??_USBCtrlEPService:
  3932  00001C                     
  3933                           ; 1 bytes @ 0x1B
  3934  00001C                     	ds	2
  3935  00001E                     USBCtrlEPService@setup_cnt:
  3936                           	opt stack 0
  3937                           
  3938                           ; 1 bytes @ 0x1D
  3939  00001E                     	ds	1
  3940  00001F                     USBDeviceTasks@i:
  3941                           	opt stack 0
  3942                           
  3943                           ; 1 bytes @ 0x1E
  3944  00001F                     	ds	1
  3945  000020                     ??_INTERRUPT_InterruptManager:
  3946                           
  3947                           ; 1 bytes @ 0x1F
  3948  000020                     	ds	18
  3949                           tblptru	equ	0xFF8
  3950                           tblptrh	equ	0xFF7
  3951                           tblptrl	equ	0xFF6
  3952                           tablat	equ	0xFF5
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           postdec1	equ	0xFE5
  3956                           fsr1l	equ	0xFE1
  3957                           
  3958 ;;
  3959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3960 ;;
  3961 ;; *************** function _main *****************
  3962 ;; Defined at:
  3963 ;;		line 68 in file "main.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels required when called:   21
  3983 ;; This function calls:
  3984 ;;		_DATAEE_ReadByte
  3985 ;;		_DATAEE_WriteByte
  3986 ;;		_MOTEapp_handlerState
  3987 ;;		_SYSTEM_Initialize
  3988 ;;		_USBDeviceAttach
  3989 ;;		_USBDeviceInit
  3990 ;;		_USBapp_Handler
  3991 ;;		_USBapp_handlerState
  3992 ;;		_moduleResync
  3993 ;;		_moteApp_clearCommand
  3994 ;;		_moteApp_delayms
  3995 ;;		_moteHandler
  3996 ;;		_oled_clear
  3997 ;;		_oled_init
  3998 ;;		_oled_putString
  3999 ;;		_test_powerup
  4000 ;; This function is called by:
  4001 ;;		Startup code after reset
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text0
  4006  0025C0                     __ptext0:
  4007                           	opt stack 0
  4008  0025C0                     _main:
  4009                           	opt stack 10
  4010                           
  4011                           ;main.c: 71: SYSTEM_Initialize();
  4012                           
  4013                           ;incstack = 0
  4014  0025C0  EC5A  F024         	call	_SYSTEM_Initialize	;wreg free
  4015                           
  4016                           ;main.c: 73: oled_init();
  4017  0025C4  EC37  F024         	call	_oled_init	;wreg free
  4018                           
  4019                           ;main.c: 74: USBDeviceInit();
  4020  0025C8  EC9E  F010         	call	_USBDeviceInit	;wreg free
  4021                           
  4022                           ;main.c: 76: USBDeviceAttach();
  4023  0025CC  ECF9  F022         	call	_USBDeviceAttach	;wreg free
  4024                           
  4025                           ;main.c: 78: PEIE = 1;
  4026  0025D0  8CF2               	bsf	intcon,6,c	;volatile
  4027                           
  4028                           ;main.c: 79: GIE = 1;
  4029  0025D2  8EF2               	bsf	intcon,7,c	;volatile
  4030                           
  4031                           ;main.c: 81: moteApp_delayms(300);
  4032  0025D4  0E01               	movlw	1
  4033  0025D6  0100               	movlb	0	; () banked
  4034  0025D8  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4035  0025DA  0E2C               	movlw	44
  4036  0025DC  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4037  0025DE  EC13  F023         	call	_moteApp_delayms	;wreg free
  4038                           
  4039                           ;main.c: 82: moduleResync();
  4040  0025E2  ECF8  F01D         	call	_moduleResync	;wreg free
  4041                           
  4042                           ;main.c: 83: moteApp_delayms(300);
  4043  0025E6  0E01               	movlw	1
  4044  0025E8  0100               	movlb	0	; () banked
  4045  0025EA  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4046  0025EC  0E2C               	movlw	44
  4047  0025EE  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4048  0025F0  EC13  F023         	call	_moteApp_delayms	;wreg free
  4049                           
  4050                           ;main.c: 84: moteApp_clearCommand();
  4051  0025F4  EC0A  F025         	call	_moteApp_clearCommand	;wreg free
  4052                           
  4053                           ;main.c: 85: moteApp_delayms(100);
  4054  0025F8  0E00               	movlw	0
  4055  0025FA  0100               	movlb	0	; () banked
  4056  0025FC  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4057  0025FE  0E64               	movlw	100
  4058  002600  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4059  002602  EC13  F023         	call	_moteApp_delayms	;wreg free
  4060                           
  4061                           ;main.c: 87: powerOnStatus = DATAEE_ReadByte(0x00);
  4062  002606  0E00               	movlw	0
  4063  002608  ECD0  F024         	call	_DATAEE_ReadByte
  4064  00260C  0100               	movlb	0	; () banked
  4065  00260E  6FB1               	movwf	_powerOnStatus& (0+255),b
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;main.c: 88: if ( powerOnStatus != 0x55)
  4069  002610  0E55               	movlw	85
  4070  002612  19B1               	xorwf	_powerOnStatus& (0+255),w,b
  4071  002614  B4D8               	btfsc	status,2,c
  4072  002616  D008               	goto	l55
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;main.c: 89: {
  4076                           ;main.c: 90: test_powerup();
  4077  002618  EC86  F021         	call	_test_powerup	;wreg free
  4078                           
  4079                           ;main.c: 91: DATAEE_WriteByte(0x00, 0x55);
  4080  00261C  0E55               	movlw	85
  4081  00261E  0100               	movlb	0	; () banked
  4082  002620  6FBE               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4083  002622  0E00               	movlw	0
  4084  002624  EC68  F022         	call	_DATAEE_WriteByte
  4085  002628                     l55:
  4086                           
  4087                           ;main.c: 92: }
  4088                           ;main.c: 95: operationType = USB;
  4089  002628  0E00               	movlw	0
  4090  00262A  0100               	movlb	0	; () banked
  4091  00262C  6FB2               	movwf	_operationType& (0+255),b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4095  00262E  0E00               	movlw	0
  4096  002630  EC39  F025         	call	_USBapp_handlerState
  4097                           
  4098                           ;main.c: 98: oled_clear();
  4099  002634  EC88  F024         	call	_oled_clear	;wreg free
  4100                           
  4101                           ;main.c: 99: oled_putString("Microchip Mote",0,0);
  4102  002638  0E1F               	movlw	low STR_1
  4103  00263A  0100               	movlb	0	; () banked
  4104  00263C  6FCB               	movwf	oled_putString@string& (0+255),b
  4105  00263E  0E7D               	movlw	high STR_1
  4106  002640  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4107  002642  0E00               	movlw	0
  4108  002644  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4109  002646  0E00               	movlw	0
  4110  002648  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4111  00264A  EC2E  F01F         	call	_oled_putString	;wreg free
  4112                           
  4113                           ;main.c: 100: oled_putString("   LoRa Demo  ",0,1);
  4114  00264E  0E01               	movlw	low STR_2
  4115  002650  0100               	movlb	0	; () banked
  4116  002652  6FCB               	movwf	oled_putString@string& (0+255),b
  4117  002654  0E7D               	movlw	high STR_2
  4118  002656  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4119  002658  0E00               	movlw	0
  4120  00265A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4121  00265C  0E01               	movlw	1
  4122  00265E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4123  002660  EC2E  F01F         	call	_oled_putString	;wreg free
  4124                           
  4125                           ;main.c: 101: oled_putString(" V 1.0.0L Code",0,3);
  4126  002664  0E10               	movlw	low STR_3
  4127  002666  0100               	movlb	0	; () banked
  4128  002668  6FCB               	movwf	oled_putString@string& (0+255),b
  4129  00266A  0E7D               	movlw	high STR_3
  4130  00266C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4131  00266E  0E00               	movlw	0
  4132  002670  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4133  002672  0E03               	movlw	3
  4134  002674  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4135  002676  EC2E  F01F         	call	_oled_putString	;wreg free
  4136                           
  4137                           ;main.c: 102: moteApp_delayms(1000);
  4138  00267A  0E03               	movlw	3
  4139  00267C  0100               	movlb	0	; () banked
  4140  00267E  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4141  002680  0EE8               	movlw	232
  4142  002682  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4143  002684  EC13  F023         	call	_moteApp_delayms	;wreg free
  4144                           
  4145                           ;main.c: 106: {
  4146                           ;main.c: 108: switch (operationType)
  4147                           
  4148                           ;main.c: 105: while(1)
  4149  002688  D015               	goto	l65
  4150  00268A                     
  4151                           ;main.c: 111: while(1);
  4152  00268A  D7FF               	goto	l58
  4153  00268C                     
  4154                           ;main.c: 114: USBapp_Handler();
  4155  00268C  ECA8  F01A         	call	_USBapp_Handler	;wreg free
  4156                           
  4157                           ;main.c: 116: operationType = MOTE;
  4158  002690  0E01               	movlw	1
  4159  002692  0100               	movlb	0	; () banked
  4160  002694  6FB2               	movwf	_operationType& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 117: MOTEapp_handlerState(MOTE_STARTUP);
  4164  002696  0E01               	movlw	1
  4165  002698  EC3E  F025         	call	_MOTEapp_handlerState
  4166                           
  4167                           ;main.c: 118: break;
  4168  00269C  D00B               	goto	l65
  4169  00269E                     
  4170                           ;main.c: 120: if (moteHandler() == MOTE_SWAP)
  4171  00269E  ECA9  F00B         	call	_moteHandler	;wreg free
  4172  0026A2  0A04               	xorlw	4
  4173  0026A4  A4D8               	btfss	status,2,c
  4174  0026A6  D006               	goto	l65
  4175                           
  4176                           ;main.c: 121: {
  4177                           ;main.c: 123: operationType = USB;
  4178  0026A8  0E00               	movlw	0
  4179  0026AA  0100               	movlb	0	; () banked
  4180  0026AC  6FB2               	movwf	_operationType& (0+255),b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;main.c: 124: USBapp_handlerState(USB_STARTUP);
  4184  0026AE  0E00               	movlw	0
  4185  0026B0  EC39  F025         	call	_USBapp_handlerState
  4186  0026B4                     l65:
  4187                           
  4188                           ;main.c: 127: }
  4189                           
  4190                           ;main.c: 125: }
  4191                           ;main.c: 126: break;
  4192  0026B4  0100               	movlb	0	; () banked
  4193  0026B6  51B2               	movf	_operationType& (0+255),w,b
  4194                           
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 2, Range of values is 0 to 1
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            7     4 (average)
  4200                           ;	Chosen strategy is simple_byte
  4201  0026B8  0A00               	xorlw	0	; case 0
  4202  0026BA  B4D8               	btfsc	status,2,c
  4203  0026BC  D7E7               	goto	l63
  4204  0026BE  0A01               	xorlw	1	; case 1
  4205  0026C0  B4D8               	btfsc	status,2,c
  4206  0026C2  D7ED               	goto	l64
  4207  0026C4  D7E2               	goto	l58
  4208  0026C6                     __end_of_main:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           intcon	equ	0xFF2
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           fsr1l	equ	0xFE1
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _test_powerup *****************
  4222 ;; Defined at:
  4223 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:   18
  4244 ;; This function calls:
  4245 ;;		_moteApp_delayms
  4246 ;;		_oled_clear
  4247 ;;		_test_adc
  4248 ;;		_test_comms
  4249 ;;		_test_leds
  4250 ;;		_test_oled
  4251 ;;		_test_switch
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text1
  4258  00430C                     __ptext1:
  4259                           	opt stack 0
  4260  00430C                     _test_powerup:
  4261                           	opt stack 12
  4262                           
  4263                           ;poweruptest.c: 65: test_oled();
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;incstack = 0
  4267  00430C  ECE7  F01C         	call	_test_oled	;wreg free
  4268                           
  4269                           ;poweruptest.c: 66: moteApp_delayms(20);
  4270  004310  0E00               	movlw	0
  4271  004312  0100               	movlb	0	; () banked
  4272  004314  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4273  004316  0E14               	movlw	20
  4274  004318  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4275  00431A  EC13  F023         	call	_moteApp_delayms	;wreg free
  4276                           
  4277                           ;poweruptest.c: 68: test_switch();
  4278  00431E  ECB4  F017         	call	_test_switch	;wreg free
  4279                           
  4280                           ;poweruptest.c: 70: oled_clear();
  4281  004322  EC88  F024         	call	_oled_clear	;wreg free
  4282                           
  4283                           ;poweruptest.c: 71: moteApp_delayms(20);
  4284  004326  0E00               	movlw	0
  4285  004328  0100               	movlb	0	; () banked
  4286  00432A  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4287  00432C  0E14               	movlw	20
  4288  00432E  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4289  004330  EC13  F023         	call	_moteApp_delayms	;wreg free
  4290                           
  4291                           ;poweruptest.c: 72: test_comms();
  4292  004334  EC64  F01F         	call	_test_comms	;wreg free
  4293                           
  4294                           ;poweruptest.c: 74: test_leds();
  4295  004338  EC2F  F020         	call	_test_leds	;wreg free
  4296                           
  4297                           ;poweruptest.c: 76: test_adc();
  4298  00433C  EC7F  F016         	call	_test_adc	;wreg free
  4299                           
  4300                           ;poweruptest.c: 77: moteApp_delayms(20);
  4301  004340  0E00               	movlw	0
  4302  004342  0100               	movlb	0	; () banked
  4303  004344  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4304  004346  0E14               	movlw	20
  4305  004348  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4306  00434A  EC13  F023         	call	_moteApp_delayms	;wreg free
  4307  00434E  0012               	return		;funcret
  4308  004350                     __end_of_test_powerup:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           tblptrh	equ	0xFF7
  4312                           tblptrl	equ	0xFF6
  4313                           tablat	equ	0xFF5
  4314                           intcon	equ	0xFF2
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           postdec1	equ	0xFE5
  4318                           fsr1l	equ	0xFE1
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function _test_switch *****************
  4322 ;; Defined at:
  4323 ;;		line 92 in file "../Includes/Board/poweruptest.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  timeout         2   18[BANK0 ] unsigned int 
  4328 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0
  4339 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4341 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4342 ;;Total ram usage:        3 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:   17
  4345 ;; This function calls:
  4346 ;;		_moteApp_delayms
  4347 ;;		_oled_clear
  4348 ;;		_oled_putString
  4349 ;; This function is called by:
  4350 ;;		_test_powerup
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text2
  4355  002F68                     __ptext2:
  4356                           	opt stack 0
  4357  002F68                     _test_switch:
  4358                           	opt stack 12
  4359                           
  4360                           ;poweruptest.c: 94: uint16_t timeout = 500;
  4361                           
  4362                           ;incstack = 0
  4363  002F68  0E01               	movlw	1
  4364  002F6A  0100               	movlb	0	; () banked
  4365  002F6C  6FD1               	movwf	(test_switch@timeout+1)& (0+255),b
  4366  002F6E  0EF4               	movlw	244
  4367  002F70  6FD0               	movwf	test_switch@timeout& (0+255),b
  4368                           
  4369                           ;poweruptest.c: 95: uint8_t buttonCheck = 0x00;
  4370  002F72  0E00               	movlw	0
  4371  002F74  6FD2               	movwf	test_switch@buttonCheck& (0+255),b
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;poweruptest.c: 96: oled_clear();
  4375  002F76  EC88  F024         	call	_oled_clear	;wreg free
  4376                           
  4377                           ;poweruptest.c: 97: oled_putString("Button Test:",0,0);
  4378  002F7A  0EF5               	movlw	low STR_10
  4379  002F7C  0100               	movlb	0	; () banked
  4380  002F7E  6FCB               	movwf	oled_putString@string& (0+255),b
  4381  002F80  0E7D               	movlw	high STR_10
  4382  002F82  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4383  002F84  0E00               	movlw	0
  4384  002F86  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4385  002F88  0E00               	movlw	0
  4386  002F8A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4387  002F8C  EC2E  F01F         	call	_oled_putString	;wreg free
  4388                           
  4389                           ;poweruptest.c: 99: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4390  002F90  A082               	btfss	3970,0,c	;volatile
  4391  002F92  D002               	goto	u6150
  4392  002F94  B282               	btfsc	3970,1,c	;volatile
  4393  002F96  D00C               	goto	l119
  4394  002F98                     u6150:
  4395                           
  4396                           ;poweruptest.c: 100: {
  4397                           ;poweruptest.c: 101: oled_putString("Button FAIL",0,3);
  4398  002F98  0E7D               	movlw	low STR_11
  4399  002F9A  0100               	movlb	0	; () banked
  4400  002F9C  6FCB               	movwf	oled_putString@string& (0+255),b
  4401  002F9E  0E7E               	movlw	high STR_11
  4402  002FA0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4403  002FA2  0E00               	movlw	0
  4404  002FA4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4405  002FA6  0E03               	movlw	3
  4406  002FA8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4407  002FAA  EC2E  F01F         	call	_oled_putString	;wreg free
  4408                           
  4409                           ;poweruptest.c: 102: }
  4410  002FAE  D036               	goto	l123
  4411  002FB0                     l119:
  4412                           
  4413                           ;poweruptest.c: 103: else
  4414                           ;poweruptest.c: 104: {
  4415                           ;poweruptest.c: 105: oled_putString("Press Button",0,1);
  4416  002FB0  0E1C               	movlw	low STR_12
  4417  002FB2  0100               	movlb	0	; () banked
  4418  002FB4  6FCB               	movwf	oled_putString@string& (0+255),b
  4419  002FB6  0E7E               	movlw	high STR_12
  4420  002FB8  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4421  002FBA  0E00               	movlw	0
  4422  002FBC  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4423  002FBE  0E01               	movlw	1
  4424  002FC0  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4425  002FC2  EC2E  F01F         	call	_oled_putString	;wreg free
  4426                           
  4427                           ;poweruptest.c: 106: }
  4428                           ;poweruptest.c: 107: while(timeout--)
  4429  002FC6  D02A               	goto	l123
  4430  002FC8                     l124:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;poweruptest.c: 108: {
  4434                           ;poweruptest.c: 109: if(PORTCbits.RC0 == 0)
  4435  002FC8  B082               	btfsc	3970,0,c	;volatile
  4436  002FCA  D00E               	goto	l125
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;poweruptest.c: 110: {
  4440                           ;poweruptest.c: 111: oled_putString("Button1 PASS",0,2);
  4441  002FCC  0E02               	movlw	low STR_13
  4442  002FCE  6FCB               	movwf	oled_putString@string& (0+255),b
  4443  002FD0  0E7E               	movlw	high STR_13
  4444  002FD2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4445  002FD4  0E00               	movlw	0
  4446  002FD6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4447  002FD8  0E02               	movlw	2
  4448  002FDA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4449  002FDC  EC2E  F01F         	call	_oled_putString	;wreg free
  4450                           
  4451                           ;poweruptest.c: 112: buttonCheck = buttonCheck + 0x08;
  4452  002FE0  0100               	movlb	0	; () banked
  4453  002FE2  51D2               	movf	test_switch@buttonCheck& (0+255),w,b
  4454  002FE4  0F08               	addlw	8
  4455  002FE6  6FD2               	movwf	test_switch@buttonCheck& (0+255),b
  4456  002FE8                     l125:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;poweruptest.c: 113: }
  4460                           ;poweruptest.c: 114: if(PORTCbits.RC1 == 0)
  4461                           
  4462                           ; BSR set to: 0
  4463  002FE8  B282               	btfsc	3970,1,c	;volatile
  4464  002FEA  D00E               	goto	l126
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;poweruptest.c: 115: {
  4468                           ;poweruptest.c: 116: oled_putString("Button2 PASS",0,3);
  4469  002FEC  0E0F               	movlw	low STR_14
  4470  002FEE  6FCB               	movwf	oled_putString@string& (0+255),b
  4471  002FF0  0E7E               	movlw	high STR_14
  4472  002FF2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4473  002FF4  0E00               	movlw	0
  4474  002FF6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4475  002FF8  0E03               	movlw	3
  4476  002FFA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4477  002FFC  EC2E  F01F         	call	_oled_putString	;wreg free
  4478                           
  4479                           ;poweruptest.c: 117: buttonCheck = buttonCheck + 0x80;
  4480  003000  0100               	movlb	0	; () banked
  4481  003002  51D2               	movf	test_switch@buttonCheck& (0+255),w,b
  4482  003004  0F80               	addlw	128
  4483  003006  6FD2               	movwf	test_switch@buttonCheck& (0+255),b
  4484  003008                     l126:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;poweruptest.c: 118: }
  4488                           ;poweruptest.c: 119: if (buttonCheck == 0x88)
  4489                           
  4490                           ; BSR set to: 0
  4491  003008  0E88               	movlw	136
  4492  00300A  19D2               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4493  00300C  B4D8               	btfsc	status,2,c
  4494  00300E  0012               	return	
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;poweruptest.c: 122: }
  4498                           ;poweruptest.c: 123: moteApp_delayms(10);
  4499                           
  4500                           ; BSR set to: 0
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;poweruptest.c: 120: {
  4504                           ;poweruptest.c: 121: break;
  4505  003010  0E00               	movlw	0
  4506  003012  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4507  003014  0E0A               	movlw	10
  4508  003016  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4509  003018  EC13  F023         	call	_moteApp_delayms	;wreg free
  4510  00301C                     l123:
  4511  00301C  0100               	movlb	0	; () banked
  4512  00301E  07D0               	decf	test_switch@timeout& (0+255),f,b
  4513  003020  A0D8               	btfss	status,0,c
  4514  003022  07D1               	decf	(test_switch@timeout+1)& (0+255),f,b
  4515  003024  29D0               	incf	test_switch@timeout& (0+255),w,b
  4516  003026  E1D0               	bnz	l124
  4517  003028  29D1               	incf	(test_switch@timeout+1)& (0+255),w,b
  4518  00302A  B4D8               	btfsc	status,2,c
  4519  00302C  0012               	return	
  4520  00302E  D7CC               	goto	l124
  4521  003030                     __end_of_test_switch:
  4522                           	opt stack 0
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           intcon	equ	0xFF2
  4528                           postinc0	equ	0xFEE
  4529                           wreg	equ	0xFE8
  4530                           postdec1	equ	0xFE5
  4531                           fsr1l	equ	0xFE1
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _test_oled *****************
  4535 ;; Defined at:
  4536 ;;		line 80 in file "../Includes/Board/poweruptest.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4550 ;;      Params:         0       0       0       0       0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4554 ;;Total ram usage:        0 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:   17
  4557 ;; This function calls:
  4558 ;;		_oled_clear
  4559 ;;		_oled_putString
  4560 ;; This function is called by:
  4561 ;;		_test_powerup
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text3
  4566  0039CE                     __ptext3:
  4567                           	opt stack 0
  4568  0039CE                     _test_oled:
  4569                           	opt stack 12
  4570                           
  4571                           ;poweruptest.c: 82: oled_clear();
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;incstack = 0
  4575  0039CE  EC88  F024         	call	_oled_clear	;wreg free
  4576                           
  4577                           ;poweruptest.c: 84: oled_putString("MoTe v .",0,0);
  4578  0039D2  0E3E               	movlw	low STR_4
  4579  0039D4  0100               	movlb	0	; () banked
  4580  0039D6  6FCB               	movwf	oled_putString@string& (0+255),b
  4581  0039D8  0E7F               	movlw	high STR_4
  4582  0039DA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4583  0039DC  0E00               	movlw	0
  4584  0039DE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4585  0039E0  0E00               	movlw	0
  4586  0039E2  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4587  0039E4  EC2E  F01F         	call	_oled_putString	;wreg free
  4588                           
  4589                           ;poweruptest.c: 85: oled_putString("1",0,6);
  4590  0039E8  0E98               	movlw	low (STR_165+11)
  4591  0039EA  0100               	movlb	0	; () banked
  4592  0039EC  6FCB               	movwf	oled_putString@string& (0+255),b
  4593  0039EE  0E7D               	movlw	high (STR_165+11)
  4594  0039F0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4595  0039F2  0E00               	movlw	0
  4596  0039F4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4597  0039F6  0E06               	movlw	6
  4598  0039F8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4599  0039FA  EC2E  F01F         	call	_oled_putString	;wreg free
  4600                           
  4601                           ;poweruptest.c: 86: oled_putString("0",0,8);
  4602  0039FE  0E8B               	movlw	low (STR_164+11)
  4603  003A00  0100               	movlb	0	; () banked
  4604  003A02  6FCB               	movwf	oled_putString@string& (0+255),b
  4605  003A04  0E7D               	movlw	high (STR_164+11)
  4606  003A06  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4607  003A08  0E00               	movlw	0
  4608  003A0A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4609  003A0C  0E08               	movlw	8
  4610  003A0E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4611  003A10  EC2E  F01F         	call	_oled_putString	;wreg free
  4612                           
  4613                           ;poweruptest.c: 87: oled_putString("Build Date/Time",0,1);
  4614  003A14  0EC4               	movlw	low STR_7
  4615  003A16  0100               	movlb	0	; () banked
  4616  003A18  6FCB               	movwf	oled_putString@string& (0+255),b
  4617  003A1A  0E7C               	movlw	high STR_7
  4618  003A1C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4619  003A1E  0E00               	movlw	0
  4620  003A20  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4621  003A22  0E01               	movlw	1
  4622  003A24  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4623  003A26  EC2E  F01F         	call	_oled_putString	;wreg free
  4624                           
  4625                           ;poweruptest.c: 88: oled_putString("Oct 31 2018",0,2);
  4626  003A2A  0E71               	movlw	low STR_8
  4627  003A2C  0100               	movlb	0	; () banked
  4628  003A2E  6FCB               	movwf	oled_putString@string& (0+255),b
  4629  003A30  0E7E               	movlw	high STR_8
  4630  003A32  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4631  003A34  0E00               	movlw	0
  4632  003A36  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4633  003A38  0E02               	movlw	2
  4634  003A3A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4635  003A3C  EC2E  F01F         	call	_oled_putString	;wreg free
  4636                           
  4637                           ;poweruptest.c: 89: oled_putString("11:01:53",0,3);
  4638  003A40  0E47               	movlw	low STR_9
  4639  003A42  0100               	movlb	0	; () banked
  4640  003A44  6FCB               	movwf	oled_putString@string& (0+255),b
  4641  003A46  0E7F               	movlw	high STR_9
  4642  003A48  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4643  003A4A  0E00               	movlw	0
  4644  003A4C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4645  003A4E  0E03               	movlw	3
  4646  003A50  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4647  003A52  EC2E  F01F         	call	_oled_putString	;wreg free
  4648  003A56  0012               	return		;funcret
  4649  003A58                     __end_of_test_oled:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           intcon	equ	0xFF2
  4656                           postinc0	equ	0xFEE
  4657                           wreg	equ	0xFE8
  4658                           postdec1	equ	0xFE5
  4659                           fsr1l	equ	0xFE1
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _test_leds *****************
  4663 ;; Defined at:
  4664 ;;		line 140 in file "../Includes/Board/poweruptest.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:   16
  4685 ;; This function calls:
  4686 ;;		_moteApp_delayms
  4687 ;;		_oled_putString
  4688 ;; This function is called by:
  4689 ;;		_test_powerup
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text4
  4694  00405E                     __ptext4:
  4695                           	opt stack 0
  4696  00405E                     _test_leds:
  4697                           	opt stack 13
  4698                           
  4699                           ;poweruptest.c: 142: oled_putString("LED Test:",0,1);
  4700                           
  4701                           ;incstack = 0
  4702  00405E  0E07               	movlw	low STR_16
  4703  004060  0100               	movlb	0	; () banked
  4704  004062  6FCB               	movwf	oled_putString@string& (0+255),b
  4705  004064  0E7F               	movlw	high STR_16
  4706  004066  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4707  004068  0E00               	movlw	0
  4708  00406A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4709  00406C  0E01               	movlw	1
  4710  00406E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4711  004070  EC2E  F01F         	call	_oled_putString	;wreg free
  4712                           
  4713                           ;poweruptest.c: 143: LATAbits.LATA6 = 1;
  4714  004074  8C89               	bsf	3977,6,c	;volatile
  4715                           
  4716                           ;poweruptest.c: 144: LATAbits.LATA7 = 1;
  4717  004076  8E89               	bsf	3977,7,c	;volatile
  4718                           
  4719                           ;poweruptest.c: 145: moteApp_delayms(500);
  4720  004078  0E01               	movlw	1
  4721  00407A  0100               	movlb	0	; () banked
  4722  00407C  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4723  00407E  0EF4               	movlw	244
  4724  004080  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4725  004082  EC13  F023         	call	_moteApp_delayms	;wreg free
  4726                           
  4727                           ;poweruptest.c: 146: LATAbits.LATA6 = 0;
  4728  004086  9C89               	bcf	3977,6,c	;volatile
  4729                           
  4730                           ;poweruptest.c: 147: LATAbits.LATA7 = 0;
  4731  004088  9E89               	bcf	3977,7,c	;volatile
  4732                           
  4733                           ;poweruptest.c: 148: moteApp_delayms(500);
  4734  00408A  0E01               	movlw	1
  4735  00408C  0100               	movlb	0	; () banked
  4736  00408E  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4737  004090  0EF4               	movlw	244
  4738  004092  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4739  004094  EC13  F023         	call	_moteApp_delayms	;wreg free
  4740                           
  4741                           ;poweruptest.c: 149: LATAbits.LATA6 = 1;
  4742  004098  8C89               	bsf	3977,6,c	;volatile
  4743                           
  4744                           ;poweruptest.c: 150: LATAbits.LATA7 = 1;
  4745  00409A  8E89               	bsf	3977,7,c	;volatile
  4746                           
  4747                           ;poweruptest.c: 151: moteApp_delayms(500);
  4748  00409C  0E01               	movlw	1
  4749  00409E  0100               	movlb	0	; () banked
  4750  0040A0  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4751  0040A2  0EF4               	movlw	244
  4752  0040A4  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4753  0040A6  EC13  F023         	call	_moteApp_delayms	;wreg free
  4754                           
  4755                           ;poweruptest.c: 152: LATAbits.LATA6 = 0;
  4756  0040AA  9C89               	bcf	3977,6,c	;volatile
  4757                           
  4758                           ;poweruptest.c: 153: LATAbits.LATA7 = 0;
  4759  0040AC  9E89               	bcf	3977,7,c	;volatile
  4760                           
  4761                           ;poweruptest.c: 154: moteApp_delayms(500);
  4762  0040AE  0E01               	movlw	1
  4763  0040B0  0100               	movlb	0	; () banked
  4764  0040B2  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4765  0040B4  0EF4               	movlw	244
  4766  0040B6  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4767  0040B8  EC13  F023         	call	_moteApp_delayms	;wreg free
  4768  0040BC  0012               	return		;funcret
  4769  0040BE                     __end_of_test_leds:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           intcon	equ	0xFF2
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postdec1	equ	0xFE5
  4779                           fsr1l	equ	0xFE1
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function _test_comms *****************
  4783 ;; Defined at:
  4784 ;;		line 127 in file "../Includes/Board/poweruptest.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:        0 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:   16
  4805 ;; This function calls:
  4806 ;;		_moteApp_delayms
  4807 ;;		_moteApp_toggleLeds
  4808 ;;		_oled_putString
  4809 ;; This function is called by:
  4810 ;;		_test_powerup
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text5
  4815  003EC8                     __ptext5:
  4816                           	opt stack 0
  4817  003EC8                     _test_comms:
  4818                           	opt stack 13
  4819                           
  4820                           ;poweruptest.c: 129: oled_putString("Comm Test:",0,0);
  4821                           
  4822                           ;incstack = 0
  4823  003EC8  0EC0               	movlw	low STR_15
  4824  003ECA  0100               	movlb	0	; () banked
  4825  003ECC  6FCB               	movwf	oled_putString@string& (0+255),b
  4826  003ECE  0E7E               	movlw	high STR_15
  4827  003ED0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  4828  003ED2  0E00               	movlw	0
  4829  003ED4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  4830  003ED6  0E00               	movlw	0
  4831  003ED8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  4832  003EDA  EC2E  F01F         	call	_oled_putString	;wreg free
  4833                           
  4834                           ;poweruptest.c: 130: moteApp_toggleLeds(1);
  4835  003EDE  0E01               	movlw	1
  4836  003EE0  ECDC  F013         	call	_moteApp_toggleLeds
  4837                           
  4838                           ;poweruptest.c: 131: moteApp_delayms(500);
  4839  003EE4  0E01               	movlw	1
  4840  003EE6  0100               	movlb	0	; () banked
  4841  003EE8  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4842  003EEA  0EF4               	movlw	244
  4843  003EEC  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4844  003EEE  EC13  F023         	call	_moteApp_delayms	;wreg free
  4845                           
  4846                           ;poweruptest.c: 132: moteApp_toggleLeds(0);
  4847  003EF2  0E00               	movlw	0
  4848  003EF4  ECDC  F013         	call	_moteApp_toggleLeds
  4849                           
  4850                           ;poweruptest.c: 133: moteApp_delayms(500);
  4851  003EF8  0E01               	movlw	1
  4852  003EFA  0100               	movlb	0	; () banked
  4853  003EFC  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4854  003EFE  0EF4               	movlw	244
  4855  003F00  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4856  003F02  EC13  F023         	call	_moteApp_delayms	;wreg free
  4857                           
  4858                           ;poweruptest.c: 134: moteApp_toggleLeds(1);
  4859  003F06  0E01               	movlw	1
  4860  003F08  ECDC  F013         	call	_moteApp_toggleLeds
  4861                           
  4862                           ;poweruptest.c: 135: moteApp_delayms(500);
  4863  003F0C  0E01               	movlw	1
  4864  003F0E  0100               	movlb	0	; () banked
  4865  003F10  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4866  003F12  0EF4               	movlw	244
  4867  003F14  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4868  003F16  EC13  F023         	call	_moteApp_delayms	;wreg free
  4869                           
  4870                           ;poweruptest.c: 136: moteApp_toggleLeds(0);
  4871  003F1A  0E00               	movlw	0
  4872  003F1C  ECDC  F013         	call	_moteApp_toggleLeds
  4873                           
  4874                           ;poweruptest.c: 137: moteApp_delayms(500);
  4875  003F20  0E01               	movlw	1
  4876  003F22  0100               	movlb	0	; () banked
  4877  003F24  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4878  003F26  0EF4               	movlw	244
  4879  003F28  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  4880  003F2A  EC13  F023         	call	_moteApp_delayms	;wreg free
  4881  003F2E  0012               	return		;funcret
  4882  003F30                     __end_of_test_comms:
  4883                           	opt stack 0
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           intcon	equ	0xFF2
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           postdec1	equ	0xFE5
  4892                           fsr1l	equ	0xFE1
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _moteApp_toggleLeds *****************
  4896 ;; Defined at:
  4897 ;;		line 1227 in file "../Includes/Board/MOTEapp.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  state           1    wreg     unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  state           1    4[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0
  4912 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4913 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4914 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:   14
  4918 ;; This function calls:
  4919 ;;		_sendCommand
  4920 ;; This function is called by:
  4921 ;;		_test_comms
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text6
  4926  0027B8                     __ptext6:
  4927                           	opt stack 0
  4928  0027B8                     _moteApp_toggleLeds:
  4929                           	opt stack 14
  4930                           
  4931                           ;incstack = 0
  4932                           ;moteApp_toggleLeds@state stored from wreg
  4933  0027B8  0100               	movlb	0	; () banked
  4934  0027BA  6FC2               	movwf	moteApp_toggleLeds@state& (0+255),b
  4935                           
  4936                           ;MOTEapp.c: 1229: _delay((unsigned long)((16)*(48000000/4000.0)));
  4937  0027BC  0EFA               	movlw	250
  4938  0027BE  0100               	movlb	0	; () banked
  4939  0027C0  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  4940  0027C2  0E58               	movlw	88
  4941  0027C4                     u8427:
  4942  0027C4  2EE8               	decfsz	wreg,f,c
  4943  0027C6  D7FE               	bra	u8427
  4944  0027C8  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  4945  0027CA  D7FC               	bra	u8427
  4946  0027CC  F000               	nop	
  4947                           
  4948                           ;MOTEapp.c: 1230: _delay((unsigned long)((16)*(48000000/4000.0)));
  4949  0027CE  0EFA               	movlw	250
  4950  0027D0  0100               	movlb	0	; () banked
  4951  0027D2  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  4952  0027D4  0E58               	movlw	88
  4953  0027D6                     u8437:
  4954  0027D6  2EE8               	decfsz	wreg,f,c
  4955  0027D8  D7FE               	bra	u8437
  4956  0027DA  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  4957  0027DC  D7FC               	bra	u8437
  4958  0027DE  F000               	nop	
  4959                           
  4960                           ;MOTEapp.c: 1231: _delay((unsigned long)((16)*(48000000/4000.0)));
  4961  0027E0  0EFA               	movlw	250
  4962  0027E2  0100               	movlb	0	; () banked
  4963  0027E4  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  4964  0027E6  0E58               	movlw	88
  4965  0027E8                     u8447:
  4966  0027E8  2EE8               	decfsz	wreg,f,c
  4967  0027EA  D7FE               	bra	u8447
  4968  0027EC  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  4969  0027EE  D7FC               	bra	u8447
  4970  0027F0  F000               	nop	
  4971                           
  4972                           ;MOTEapp.c: 1232: if (state)
  4973  0027F2  0100               	movlb	0	; () banked
  4974  0027F4  51C2               	movf	moteApp_toggleLeds@state& (0+255),w,b
  4975  0027F6  B4D8               	btfsc	status,2,c
  4976  0027F8  D029               	goto	l658
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;MOTEapp.c: 1233: {
  4980                           ;MOTEapp.c: 1234: sendCommand("sys set pindig GPIO10 1\r\n");
  4981  0027FA  0E50               	movlw	low STR_175
  4982  0027FC  6FBF               	movwf	sendCommand@string& (0+255),b
  4983  0027FE  0E7A               	movlw	high STR_175
  4984  002800  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
  4985  002802  EC45  F023         	call	_sendCommand	;wreg free
  4986                           
  4987                           ;MOTEapp.c: 1235: _delay((unsigned long)((16)*(48000000/4000.0)));
  4988  002806  0EFA               	movlw	250
  4989  002808  0100               	movlb	0	; () banked
  4990  00280A  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  4991  00280C  0E58               	movlw	88
  4992  00280E                     u8457:
  4993  00280E  2EE8               	decfsz	wreg,f,c
  4994  002810  D7FE               	bra	u8457
  4995  002812  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  4996  002814  D7FC               	bra	u8457
  4997  002816  F000               	nop	
  4998                           
  4999                           ;MOTEapp.c: 1236: _delay((unsigned long)((16)*(48000000/4000.0)));
  5000  002818  0EFA               	movlw	250
  5001  00281A  0100               	movlb	0	; () banked
  5002  00281C  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  5003  00281E  0E58               	movlw	88
  5004  002820                     u8467:
  5005  002820  2EE8               	decfsz	wreg,f,c
  5006  002822  D7FE               	bra	u8467
  5007  002824  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5008  002826  D7FC               	bra	u8467
  5009  002828  F000               	nop	
  5010                           
  5011                           ;MOTEapp.c: 1237: _delay((unsigned long)((16)*(48000000/4000.0)));
  5012  00282A  0EFA               	movlw	250
  5013  00282C  0100               	movlb	0	; () banked
  5014  00282E  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  5015  002830  0E58               	movlw	88
  5016  002832                     u8477:
  5017  002832  2EE8               	decfsz	wreg,f,c
  5018  002834  D7FE               	bra	u8477
  5019  002836  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5020  002838  D7FC               	bra	u8477
  5021  00283A  F000               	nop	
  5022                           
  5023                           ;MOTEapp.c: 1238: sendCommand("sys set pindig GPIO11 1\r\n");
  5024  00283C  0E6A               	movlw	low STR_176
  5025  00283E  0100               	movlb	0	; () banked
  5026  002840  6FBF               	movwf	sendCommand@string& (0+255),b
  5027  002842  0E7A               	movlw	high STR_176
  5028  002844  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
  5029  002846  EC45  F023         	call	_sendCommand	;wreg free
  5030                           
  5031                           ;MOTEapp.c: 1239: }
  5032  00284A  0012               	return	
  5033  00284C                     l658:
  5034                           
  5035                           ;MOTEapp.c: 1240: else
  5036                           ;MOTEapp.c: 1241: {
  5037                           ;MOTEapp.c: 1242: sendCommand("sys set pindig GPIO10 0\r\n");
  5038  00284C  0E1C               	movlw	low STR_177
  5039  00284E  0100               	movlb	0	; () banked
  5040  002850  6FBF               	movwf	sendCommand@string& (0+255),b
  5041  002852  0E7A               	movlw	high STR_177
  5042  002854  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
  5043  002856  EC45  F023         	call	_sendCommand	;wreg free
  5044                           
  5045                           ;MOTEapp.c: 1243: _delay((unsigned long)((16)*(48000000/4000.0)));
  5046  00285A  0EFA               	movlw	250
  5047  00285C  0100               	movlb	0	; () banked
  5048  00285E  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  5049  002860  0E58               	movlw	88
  5050  002862                     u8487:
  5051  002862  2EE8               	decfsz	wreg,f,c
  5052  002864  D7FE               	bra	u8487
  5053  002866  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5054  002868  D7FC               	bra	u8487
  5055  00286A  F000               	nop	
  5056                           
  5057                           ;MOTEapp.c: 1244: _delay((unsigned long)((16)*(48000000/4000.0)));
  5058  00286C  0EFA               	movlw	250
  5059  00286E  0100               	movlb	0	; () banked
  5060  002870  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  5061  002872  0E58               	movlw	88
  5062  002874                     u8497:
  5063  002874  2EE8               	decfsz	wreg,f,c
  5064  002876  D7FE               	bra	u8497
  5065  002878  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5066  00287A  D7FC               	bra	u8497
  5067  00287C  F000               	nop	
  5068                           
  5069                           ;MOTEapp.c: 1245: _delay((unsigned long)((16)*(48000000/4000.0)));
  5070  00287E  0EFA               	movlw	250
  5071  002880  0100               	movlb	0	; () banked
  5072  002882  6FC1               	movwf	??_moteApp_toggleLeds& (0+255),b
  5073  002884  0E58               	movlw	88
  5074  002886                     u8507:
  5075  002886  2EE8               	decfsz	wreg,f,c
  5076  002888  D7FE               	bra	u8507
  5077  00288A  2FC1               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5078  00288C  D7FC               	bra	u8507
  5079  00288E  F000               	nop	
  5080                           
  5081                           ;MOTEapp.c: 1246: sendCommand("sys set pindig GPIO11 0\r\n");
  5082  002890  0E36               	movlw	low STR_178
  5083  002892  0100               	movlb	0	; () banked
  5084  002894  6FBF               	movwf	sendCommand@string& (0+255),b
  5085  002896  0E7A               	movlw	high STR_178
  5086  002898  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
  5087  00289A  EC45  F023         	call	_sendCommand	;wreg free
  5088  00289E  0012               	return	
  5089  0028A0                     __end_of_moteApp_toggleLeds:
  5090                           	opt stack 0
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           intcon	equ	0xFF2
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           postdec1	equ	0xFE5
  5099                           fsr1l	equ	0xFE1
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _test_adc *****************
  5103 ;; Defined at:
  5104 ;;		line 157 in file "../Includes/Board/poweruptest.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  Traw            2   30[BANK0 ] unsigned int 
  5109 ;;  L               2   28[BANK0 ] unsigned int 
  5110 ;;  F               2    0        unsigned int 
  5111 ;;  count           1   33[BANK0 ] unsigned char 
  5112 ;;  T               1   32[BANK0 ] unsigned char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0
  5123 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5125 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5126 ;;Total ram usage:        6 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:   17
  5129 ;; This function calls:
  5130 ;;		_ADC_GetConversion
  5131 ;;		_ADC_TempConversion
  5132 ;;		_moteApp_delayms
  5133 ;;		_oled_clear
  5134 ;;		_oled_putChar
  5135 ;;		_oled_putString
  5136 ;;		_oled_putUint16
  5137 ;;		_oled_putUint8
  5138 ;; This function is called by:
  5139 ;;		_test_powerup
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text7
  5144  002CFE                     __ptext7:
  5145                           	opt stack 0
  5146  002CFE                     _test_adc:
  5147                           	opt stack 12
  5148                           
  5149                           ;poweruptest.c: 159: uint16_t L,Traw,F;
  5150                           ;poweruptest.c: 160: uint8_t count, T;
  5151                           ;poweruptest.c: 162: oled_clear();
  5152                           
  5153                           ;incstack = 0
  5154  002CFE  EC88  F024         	call	_oled_clear	;wreg free
  5155                           
  5156                           ;poweruptest.c: 163: oled_putString("ADC Test",0,0);
  5157  002D02  0E59               	movlw	low STR_17
  5158  002D04  0100               	movlb	0	; () banked
  5159  002D06  6FCB               	movwf	oled_putString@string& (0+255),b
  5160  002D08  0E7F               	movlw	high STR_17
  5161  002D0A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5162  002D0C  0E00               	movlw	0
  5163  002D0E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5164  002D10  0E00               	movlw	0
  5165  002D12  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5166  002D14  EC2E  F01F         	call	_oled_putString	;wreg free
  5167                           
  5168                           ;poweruptest.c: 164: oled_putString("Temp  =",0,1);
  5169  002D18  0E6A               	movlw	low STR_18
  5170  002D1A  0100               	movlb	0	; () banked
  5171  002D1C  6FCB               	movwf	oled_putString@string& (0+255),b
  5172  002D1E  0E7F               	movlw	high STR_18
  5173  002D20  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5174  002D22  0E00               	movlw	0
  5175  002D24  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5176  002D26  0E01               	movlw	1
  5177  002D28  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5178  002D2A  EC2E  F01F         	call	_oled_putString	;wreg free
  5179                           
  5180                           ;poweruptest.c: 165: oled_putChar('C',14,1);
  5181  002D2E  0E0E               	movlw	14
  5182  002D30  0100               	movlb	0	; () banked
  5183  002D32  6FC1               	movwf	oled_putChar@station_dot& (0+255),b
  5184  002D34  0E01               	movlw	1
  5185  002D36  6FC2               	movwf	oled_putChar@start_page& (0+255),b
  5186  002D38  0E43               	movlw	67
  5187  002D3A  ECB5  F01D         	call	_oled_putChar
  5188                           
  5189                           ;poweruptest.c: 166: oled_putString("Light =",0,2);
  5190  002D3E  0E72               	movlw	low STR_19
  5191  002D40  0100               	movlb	0	; () banked
  5192  002D42  6FCB               	movwf	oled_putString@string& (0+255),b
  5193  002D44  0E7F               	movlw	high STR_19
  5194  002D46  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5195  002D48  0E00               	movlw	0
  5196  002D4A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5197  002D4C  0E02               	movlw	2
  5198  002D4E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5199  002D50  EC2E  F01F         	call	_oled_putString	;wreg free
  5200                           
  5201                           ;poweruptest.c: 168: for(count=0;count< 50;count++)
  5202  002D54  0E00               	movlw	0
  5203  002D56  0100               	movlb	0	; () banked
  5204  002D58  6FDF               	movwf	test_adc@count& (0+255),b
  5205  002D5A                     l8097:
  5206                           
  5207                           ; BSR set to: 0
  5208  002D5A  0E31               	movlw	49
  5209  002D5C  65DF               	cpfsgt	test_adc@count& (0+255),b
  5210  002D5E  D001               	goto	l138
  5211  002D60  0012               	return	
  5212  002D62                     l138:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;poweruptest.c: 169: {
  5216                           ;poweruptest.c: 170: moteApp_delayms(50);
  5217                           
  5218                           ; BSR set to: 0
  5219  002D62  0E00               	movlw	0
  5220  002D64  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5221  002D66  0E32               	movlw	50
  5222  002D68  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  5223  002D6A  EC13  F023         	call	_moteApp_delayms	;wreg free
  5224                           
  5225                           ;poweruptest.c: 171: Traw = ADC_GetConversion(Temp_channel);
  5226  002D6E  0E02               	movlw	2
  5227  002D70  EC4A  F022         	call	_ADC_GetConversion
  5228  002D74  C0BE  F0DC         	movff	?_ADC_GetConversion,test_adc@Traw
  5229  002D78  C0BF  F0DD         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  5230                           
  5231                           ;poweruptest.c: 172: T = ADC_TempConversion(Traw);
  5232  002D7C  0100               	movlb	0	; () banked
  5233  002D7E  51DC               	movf	test_adc@Traw& (0+255),w,b
  5234  002D80  ECE9  F023         	call	_ADC_TempConversion
  5235  002D84  0100               	movlb	0	; () banked
  5236  002D86  6FDE               	movwf	test_adc@T& (0+255),b
  5237                           
  5238                           ;poweruptest.c: 174: moteApp_delayms(50);
  5239  002D88  0E00               	movlw	0
  5240  002D8A  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5241  002D8C  0E32               	movlw	50
  5242  002D8E  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  5243  002D90  EC13  F023         	call	_moteApp_delayms	;wreg free
  5244                           
  5245                           ;poweruptest.c: 175: L = ADC_GetConversion(Light_channel);
  5246  002D94  0E03               	movlw	3
  5247  002D96  EC4A  F022         	call	_ADC_GetConversion
  5248  002D9A  C0BE  F0DA         	movff	?_ADC_GetConversion,test_adc@L
  5249  002D9E  C0BF  F0DB         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5250                           
  5251                           ;poweruptest.c: 177: oled_putUint8(T,10,1);
  5252  002DA2  0E0A               	movlw	10
  5253  002DA4  0100               	movlb	0	; () banked
  5254  002DA6  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  5255  002DA8  0E01               	movlw	1
  5256  002DAA  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  5257  002DAC  51DE               	movf	test_adc@T& (0+255),w,b
  5258  002DAE  EC2C  F01D         	call	_oled_putUint8
  5259                           
  5260                           ;poweruptest.c: 178: oled_putUint16(L,10,2);
  5261  002DB2  C0DA  F0D0         	movff	test_adc@L,oled_putUint16@number
  5262  002DB6  C0DB  F0D1         	movff	test_adc@L+1,oled_putUint16@number+1
  5263  002DBA  0E0A               	movlw	10
  5264  002DBC  0100               	movlb	0	; () banked
  5265  002DBE  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  5266  002DC0  0E02               	movlw	2
  5267  002DC2  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  5268  002DC4  ECCA  F011         	call	_oled_putUint16	;wreg free
  5269  002DC8  0100               	movlb	0	; () banked
  5270  002DCA  2BDF               	incf	test_adc@count& (0+255),f,b
  5271  002DCC  D7C6               	goto	l8097
  5272  002DCE                     __end_of_test_adc:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           intcon	equ	0xFF2
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           postdec1	equ	0xFE5
  5282                           fsr1l	equ	0xFE1
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function _moteHandler *****************
  5286 ;; Defined at:
  5287 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  i               1   50[BANK0 ] unsigned char 
  5292 ;;  i               1   49[BANK0 ] unsigned char 
  5293 ;;  Traw            2   44[BANK0 ] unsigned int 
  5294 ;;  readMessage     1   51[BANK0 ] unsigned char 
  5295 ;;  buttonPress     1   48[BANK0 ] enum E5518
  5296 ;;  s2Button        1   47[BANK0 ] unsigned char 
  5297 ;;  gotoNextStat    1   46[BANK0 ] unsigned char 
  5298 ;;  gotoSleep       1   43[BANK0 ] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      enum E6493
  5301 ;; Registers used:
  5302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0
  5309 ;;      Locals:         0       9       0       0       0       0       0       0       0
  5310 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5311 ;;      Totals:         0      11       0       0       0       0       0       0       0
  5312 ;;Total ram usage:       11 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:   20
  5315 ;; This function calls:
  5316 ;;		_ADC_GetConversion
  5317 ;;		_ADC_TempConversion
  5318 ;;		_MOTEapp_TimerBasedTask
  5319 ;;		_MOTEapp_getModuleResponse
  5320 ;;		_TMRapp_ClearBitFlags
  5321 ;;		_TMRapp_Handler
  5322 ;;		_USBapp_exitCDC
  5323 ;;		_USBapp_exitCDCState
  5324 ;;		_moteApp_delayms
  5325 ;;		_moteJoiningProcess
  5326 ;;		_moteRunningProcess
  5327 ;;		_oled_clear
  5328 ;;		_oled_putString
  5329 ;;		_service_pushbutton
  5330 ;; This function is called by:
  5331 ;;		_main
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text8
  5336  001752                     __ptext8:
  5337                           	opt stack 0
  5338  001752                     _moteHandler:
  5339                           	opt stack 10
  5340                           
  5341                           ;MOTEapp.c: 177: bool gotoSleep = 0;
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;incstack = 0
  5345  001752  0E00               	movlw	0
  5346  001754  0100               	movlb	0	; () banked
  5347  001756  6FE9               	movwf	moteHandler@gotoSleep& (0+255),b
  5348                           
  5349                           ;MOTEapp.c: 178: bool gotoNextState = 0;
  5350  001758  0E00               	movlw	0
  5351  00175A  6FEC               	movwf	moteHandler@gotoNextState& (0+255),b
  5352                           
  5353                           ;MOTEapp.c: 179: bool s2Button = 0;
  5354  00175C  0E00               	movlw	0
  5355  00175E  6FED               	movwf	moteHandler@s2Button& (0+255),b
  5356                           
  5357                           ;MOTEapp.c: 180: bool readMessage = 0;
  5358  001760  0E00               	movlw	0
  5359  001762  6FF1               	movwf	moteHandler@readMessage& (0+255),b
  5360                           
  5361                           ;MOTEapp.c: 181: buttonStates_t buttonPress = Released;
  5362  001764  0E03               	movlw	3
  5363  001766  6FEE               	movwf	moteHandler@buttonPress& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;MOTEapp.c: 184: if (PORTAbits.RA0)
  5367  001768  A080               	btfss	3968,0,c	;volatile
  5368  00176A  D009               	goto	l333
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;MOTEapp.c: 185: {
  5372                           ;MOTEapp.c: 186: if (USBapp_exitCDC() == NO_USB)
  5373  00176C  EC50  F025         	call	_USBapp_exitCDC	;wreg free
  5374  001770  0900               	iorlw	0
  5375  001772  A4D8               	btfss	status,2,c
  5376  001774  D007               	goto	l335
  5377                           
  5378                           ;MOTEapp.c: 187: moteState = MOTE_SWAP;
  5379  001776  0E04               	movlw	4
  5380  001778  0100               	movlb	0	; () banked
  5381  00177A  6FFA               	movwf	_moteState& (0+255),b
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;MOTEapp.c: 188: } else {
  5385  00177C  D003               	goto	l335
  5386  00177E                     l333:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;MOTEapp.c: 189: USBapp_exitCDCState(NO_USB);
  5390                           
  5391                           ; BSR set to: 0
  5392  00177E  0E00               	movlw	0
  5393  001780  EC34  F025         	call	_USBapp_exitCDCState
  5394  001784                     l335:
  5395                           
  5396                           ;MOTEapp.c: 190: }
  5397                           ;MOTEapp.c: 193: if ( appTimer.mSecTick )
  5398  001784  0100               	movlb	0	; () banked
  5399  001786  A1B3               	btfss	_appTimer& (0+255),0,b
  5400  001788  D008               	goto	l336
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;MOTEapp.c: 194: {
  5404                           ;MOTEapp.c: 196: TMRapp_ClearBitFlags();
  5405  00178A  EC48  F025         	call	_TMRapp_ClearBitFlags	;wreg free
  5406                           
  5407                           ;MOTEapp.c: 198: TMRapp_Handler();
  5408  00178E  EC5A  F012         	call	_TMRapp_Handler	;wreg free
  5409                           
  5410                           ;MOTEapp.c: 199: MOTEapp_TimerBasedTask(appTimer);
  5411  001792  0100               	movlb	0	; () banked
  5412  001794  51B3               	movf	_appTimer& (0+255),w,b
  5413  001796  EC7B  F024         	call	_MOTEapp_TimerBasedTask
  5414  00179A                     l336:
  5415                           
  5416                           ;MOTEapp.c: 200: }
  5417                           ;MOTEapp.c: 203: buttonPress = service_pushbutton();
  5418  00179A  ECCB  F01F         	call	_service_pushbutton	;wreg free
  5419  00179E  0100               	movlb	0	; () banked
  5420  0017A0  6FEE               	movwf	moteHandler@buttonPress& (0+255),b
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;MOTEapp.c: 204: if (buttonPress == ShortPress1)
  5424  0017A2  05EE               	decf	moteHandler@buttonPress& (0+255),w,b
  5425  0017A4  A4D8               	btfss	status,2,c
  5426  0017A6  D005               	goto	l337
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;MOTEapp.c: 205: {
  5430                           ;MOTEapp.c: 206: secTicker = 0;
  5431  0017A8  0E00               	movlw	0
  5432  0017AA  6FAB               	movwf	_secTicker& (0+255),b
  5433                           
  5434                           ;MOTEapp.c: 207: gotoNextState = 1;
  5435  0017AC  0E01               	movlw	1
  5436  0017AE  6FEC               	movwf	moteHandler@gotoNextState& (0+255),b
  5437                           
  5438                           ;MOTEapp.c: 208: }
  5439  0017B0  D008               	goto	l339
  5440  0017B2                     l337:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;MOTEapp.c: 209: else if (buttonPress == ShortPress2)
  5444                           
  5445                           ; BSR set to: 0
  5446  0017B2  0E02               	movlw	2
  5447  0017B4  19EE               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5448  0017B6  A4D8               	btfss	status,2,c
  5449  0017B8  D004               	goto	l339
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;MOTEapp.c: 210: {
  5453                           ;MOTEapp.c: 211: secTicker = 0;
  5454  0017BA  0E00               	movlw	0
  5455  0017BC  6FAB               	movwf	_secTicker& (0+255),b
  5456                           
  5457                           ;MOTEapp.c: 212: s2Button = 1;
  5458  0017BE  0E01               	movlw	1
  5459  0017C0  6FED               	movwf	moteHandler@s2Button& (0+255),b
  5460  0017C2                     l339:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;MOTEapp.c: 213: }
  5464                           ;MOTEapp.c: 216: if ( MOTEapp_getModuleResponse() )
  5465                           
  5466                           ; BSR set to: 0
  5467                           
  5468                           ; BSR set to: 0
  5469  0017C2  EC98  F01F         	call	_MOTEapp_getModuleResponse	;wreg free
  5470  0017C6  0900               	iorlw	0
  5471  0017C8  B4D8               	btfsc	status,2,c
  5472  0017CA  D002               	goto	l340
  5473                           
  5474                           ;MOTEapp.c: 217: readMessage = 1;
  5475  0017CC  0E01               	movlw	1
  5476  0017CE  D001               	goto	L1
  5477  0017D0                     l340:
  5478                           
  5479                           ;MOTEapp.c: 218: else
  5480                           ;MOTEapp.c: 219: readMessage = 0;
  5481                           
  5482                           ; BSR set to: 0
  5483  0017D0  0E00               	movlw	0
  5484  0017D2                     L1:
  5485  0017D2  0100               	movlb	0	; () banked
  5486  0017D4  6FF1               	movwf	moteHandler@readMessage& (0+255),b
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;MOTEapp.c: 222: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5490                           
  5491                           ; BSR set to: 0
  5492  0017D6  0E06               	movlw	6
  5493  0017D8  19AE               	xorwf	_runningState& (0+255),w,b
  5494  0017DA  B4D8               	btfsc	status,2,c
  5495  0017DC  D004               	goto	u7660
  5496                           
  5497                           ; BSR set to: 0
  5498  0017DE  0E02               	movlw	2
  5499  0017E0  19AE               	xorwf	_runningState& (0+255),w,b
  5500  0017E2  A4D8               	btfss	status,2,c
  5501  0017E4  D050               	goto	l345
  5502  0017E6                     u7660:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;MOTEapp.c: 223: {
  5506                           ;MOTEapp.c: 225: if (m10SecTicker >= 5)
  5507                           
  5508                           ; BSR set to: 0
  5509  0017E6  5193               	movf	(_m10SecTicker+1)& (0+255),w,b
  5510  0017E8  E104               	bnz	u7670
  5511  0017EA  0E05               	movlw	5
  5512  0017EC  5D92               	subwf	_m10SecTicker& (0+255),w,b
  5513  0017EE  A0D8               	btfss	status,0,c
  5514  0017F0  D04A               	goto	l345
  5515  0017F2                     u7670:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;MOTEapp.c: 226: {
  5519                           ;MOTEapp.c: 227: uint16_t Traw = 0;
  5520  0017F2  0E00               	movlw	0
  5521  0017F4  6FEB               	movwf	(moteHandler@Traw+1)& (0+255),b
  5522  0017F6  0E00               	movlw	0
  5523  0017F8  6FEA               	movwf	moteHandler@Traw& (0+255),b
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;MOTEapp.c: 228: moteApp_delayms(10);
  5527  0017FA  0E00               	movlw	0
  5528  0017FC  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5529  0017FE  0E0A               	movlw	10
  5530  001800  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  5531  001802  EC13  F023         	call	_moteApp_delayms	;wreg free
  5532                           
  5533                           ;MOTEapp.c: 229: for(uint8_t i = 32; i>0; i--)
  5534  001806  0E20               	movlw	32
  5535  001808  0100               	movlb	0	; () banked
  5536  00180A  6FEF               	movwf	moteHandler@i& (0+255),b
  5537  00180C                     l9397:
  5538                           
  5539                           ; BSR set to: 0
  5540  00180C  51EF               	movf	moteHandler@i& (0+255),w,b
  5541  00180E  B4D8               	btfsc	status,2,c
  5542  001810  D011               	goto	u7690
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;MOTEapp.c: 230: {
  5546                           ;MOTEapp.c: 231: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5547                           
  5548                           ; BSR set to: 0
  5549                           
  5550                           ; BSR set to: 0
  5551  001812  0E03               	movlw	3
  5552  001814  EC4A  F022         	call	_ADC_GetConversion
  5553  001818  0100               	movlb	0	; () banked
  5554  00181A  5196               	movf	_light& (0+255),w,b
  5555  00181C  27BE               	addwf	?_ADC_GetConversion& (0+255),f,b
  5556  00181E  5197               	movf	(_light+1)& (0+255),w,b
  5557  001820  23BF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5558  001822  90D8               	bcf	status,0,c
  5559  001824  31BF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5560  001826  6FE7               	movwf	??_moteHandler& (0+255),b
  5561  001828  31BE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5562  00182A  6F96               	movwf	_light& (0+255),b
  5563  00182C  C0E7  F097         	movff	??_moteHandler,_light+1
  5564                           
  5565                           ; BSR set to: 0
  5566  001830  07EF               	decf	moteHandler@i& (0+255),f,b
  5567  001832  D7EC               	goto	l9397
  5568  001834                     u7690:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;MOTEapp.c: 232: }
  5572                           ;MOTEapp.c: 233: moteApp_delayms(10);
  5573                           
  5574                           ; BSR set to: 0
  5575  001834  0E00               	movlw	0
  5576  001836  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5577  001838  0E0A               	movlw	10
  5578  00183A  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  5579  00183C  EC13  F023         	call	_moteApp_delayms	;wreg free
  5580                           
  5581                           ;MOTEapp.c: 234: for(uint8_t i = 32; i>0; i--)
  5582  001840  0E20               	movlw	32
  5583  001842  0100               	movlb	0	; () banked
  5584  001844  6FF0               	movwf	moteHandler@i_1233& (0+255),b
  5585  001846                     l9411:
  5586                           
  5587                           ; BSR set to: 0
  5588  001846  51F0               	movf	moteHandler@i_1233& (0+255),w,b
  5589  001848  B4D8               	btfsc	status,2,c
  5590  00184A  D011               	goto	u7710
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;MOTEapp.c: 235: {
  5594                           ;MOTEapp.c: 236: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5595                           
  5596                           ; BSR set to: 0
  5597                           
  5598                           ; BSR set to: 0
  5599  00184C  0E02               	movlw	2
  5600  00184E  EC4A  F022         	call	_ADC_GetConversion
  5601  001852  0100               	movlb	0	; () banked
  5602  001854  51EA               	movf	moteHandler@Traw& (0+255),w,b
  5603  001856  27BE               	addwf	?_ADC_GetConversion& (0+255),f,b
  5604  001858  51EB               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5605  00185A  23BF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5606  00185C  90D8               	bcf	status,0,c
  5607  00185E  31BF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5608  001860  6FE7               	movwf	??_moteHandler& (0+255),b
  5609  001862  31BE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5610  001864  6FEA               	movwf	moteHandler@Traw& (0+255),b
  5611  001866  C0E7  F0EB         	movff	??_moteHandler,moteHandler@Traw+1
  5612                           
  5613                           ; BSR set to: 0
  5614  00186A  07F0               	decf	moteHandler@i_1233& (0+255),f,b
  5615  00186C  D7EC               	goto	l9411
  5616  00186E                     u7710:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;MOTEapp.c: 237: }
  5620                           ;MOTEapp.c: 238: temperature = ADC_TempConversion(Traw);
  5621                           
  5622                           ; BSR set to: 0
  5623  00186E  51EA               	movf	moteHandler@Traw& (0+255),w,b
  5624  001870  ECE9  F023         	call	_ADC_TempConversion
  5625  001874  0100               	movlb	0	; () banked
  5626  001876  6FE7               	movwf	??_moteHandler& (0+255),b
  5627  001878  51E7               	movf	??_moteHandler& (0+255),w,b
  5628  00187A  6F94               	movwf	_temperature& (0+255),b
  5629  00187C  6B95               	clrf	(_temperature+1)& (0+255),b
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;MOTEapp.c: 239: m10SecTicker = 0;
  5633  00187E  0E00               	movlw	0
  5634  001880  6F93               	movwf	(_m10SecTicker+1)& (0+255),b
  5635  001882  0E00               	movlw	0
  5636  001884  6F92               	movwf	_m10SecTicker& (0+255),b
  5637  001886                     l345:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;MOTEapp.c: 240: }
  5641                           ;MOTEapp.c: 241: }
  5642                           ;MOTEapp.c: 243: if ((secTicker >= 10) && (menuTimeout))
  5643                           
  5644                           ; BSR set to: 0
  5645                           
  5646                           ; BSR set to: 0
  5647  001886  0E09               	movlw	9
  5648  001888  65AB               	cpfsgt	_secTicker& (0+255),b
  5649  00188A  D071               	goto	l352
  5650                           
  5651                           ; BSR set to: 0
  5652  00188C  51F6               	movf	_menuTimeout& (0+255),w,b
  5653  00188E  B4D8               	btfsc	status,2,c
  5654  001890  D06E               	goto	l352
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;MOTEapp.c: 244: {
  5658                           ;MOTEapp.c: 245: if (secTicker >= 10)
  5659  001892  0E09               	movlw	9
  5660  001894  65AB               	cpfsgt	_secTicker& (0+255),b
  5661  001896  D06B               	goto	l352
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;MOTEapp.c: 246: {
  5665                           ;MOTEapp.c: 247: gotoSleep = 1;
  5666  001898  0E01               	movlw	1
  5667  00189A  6FE9               	movwf	moteHandler@gotoSleep& (0+255),b
  5668                           
  5669                           ;MOTEapp.c: 248: secTicker = 0;
  5670  00189C  0E00               	movlw	0
  5671  00189E  6FAB               	movwf	_secTicker& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;MOTEapp.c: 249: }
  5675                           ;MOTEapp.c: 250: }
  5676                           ;MOTEapp.c: 252: switch(moteState)
  5677                           
  5678                           ; BSR set to: 0
  5679  0018A0  D066               	goto	l352
  5680  0018A2                     
  5681                           ; BSR set to: 0
  5682                           ;MOTEapp.c: 255: while(1);
  5683  0018A2  D7FF               	goto	l353
  5684  0018A4                     
  5685                           ;MOTEapp.c: 258: oled_clear();
  5686  0018A4  EC88  F024         	call	_oled_clear	;wreg free
  5687                           
  5688                           ;MOTEapp.c: 259: oled_putString("MOTE Mode",1,0);
  5689  0018A8  0EDF               	movlw	low STR_23
  5690  0018AA  0100               	movlb	0	; () banked
  5691  0018AC  6FCB               	movwf	oled_putString@string& (0+255),b
  5692  0018AE  0E7E               	movlw	high STR_23
  5693  0018B0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5694  0018B2  0E01               	movlw	1
  5695  0018B4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5696  0018B6  0E00               	movlw	0
  5697  0018B8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5698  0018BA  EC2E  F01F         	call	_oled_putString	;wreg free
  5699                           
  5700                           ;MOTEapp.c: 260: oled_putString("Starting",2,1);
  5701  0018BE  0E35               	movlw	low STR_24
  5702  0018C0  0100               	movlb	0	; () banked
  5703  0018C2  6FCB               	movwf	oled_putString@string& (0+255),b
  5704  0018C4  0E7F               	movlw	high STR_24
  5705  0018C6  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5706  0018C8  0E02               	movlw	2
  5707  0018CA  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5708  0018CC  0E01               	movlw	1
  5709  0018CE  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5710  0018D0  EC2E  F01F         	call	_oled_putString	;wreg free
  5711                           
  5712                           ;MOTEapp.c: 261: oled_putString("ReRun PwrTst<S2>",0,3);
  5713  0018D4  0EAA               	movlw	low STR_25
  5714  0018D6  0100               	movlb	0	; () banked
  5715  0018D8  6FCB               	movwf	oled_putString@string& (0+255),b
  5716  0018DA  0E7B               	movlw	high STR_25
  5717  0018DC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5718  0018DE  0E00               	movlw	0
  5719  0018E0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5720  0018E2  0E03               	movlw	3
  5721  0018E4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5722  0018E6  EC2E  F01F         	call	_oled_putString	;wreg free
  5723                           
  5724                           ;MOTEapp.c: 262: activeState = moteStartup;
  5725  0018EA  0E00               	movlw	0
  5726  0018EC  0100               	movlb	0	; () banked
  5727  0018EE  6FAF               	movwf	_activeState& (0+255),b
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;MOTEapp.c: 263: moteState = MOTE_JOINING;
  5731  0018F0  0E02               	movlw	2
  5732  0018F2  D031               	goto	L2
  5733  0018F4                     
  5734                           ; BSR set to: 0
  5735                           ;MOTEapp.c: 266: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  5736                           
  5737                           ; BSR set to: 0
  5738  0018F4  C0EC  F0D0         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  5739  0018F8  C0ED  F0D1         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  5740  0018FC  51F1               	movf	moteHandler@readMessage& (0+255),w,b
  5741  0018FE  ECDD  F007         	call	_moteJoiningProcess
  5742  001902  0900               	iorlw	0
  5743  001904  B4D8               	btfsc	status,2,c
  5744  001906  D041               	goto	l357
  5745                           
  5746                           ;MOTEapp.c: 267: {
  5747                           ;MOTEapp.c: 268: oled_clear();
  5748  001908  EC88  F024         	call	_oled_clear	;wreg free
  5749                           
  5750                           ;MOTEapp.c: 269: oled_putString("Mobile Mote -App",0,0);
  5751  00190C  0E10               	movlw	low STR_26
  5752  00190E  0100               	movlb	0	; () banked
  5753  001910  6FCB               	movwf	oled_putString@string& (0+255),b
  5754  001912  0E7C               	movlw	high STR_26
  5755  001914  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5756  001916  0E00               	movlw	0
  5757  001918  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5758  00191A  0E00               	movlw	0
  5759  00191C  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5760  00191E  EC2E  F01F         	call	_oled_putString	;wreg free
  5761                           
  5762                           ;MOTEapp.c: 270: oled_putString("Navigate  Select", 0,2);
  5763  001922  0E21               	movlw	low STR_27
  5764  001924  0100               	movlb	0	; () banked
  5765  001926  6FCB               	movwf	oled_putString@string& (0+255),b
  5766  001928  0E7C               	movlw	high STR_27
  5767  00192A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5768  00192C  0E00               	movlw	0
  5769  00192E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5770  001930  0E02               	movlw	2
  5771  001932  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5772  001934  EC2E  F01F         	call	_oled_putString	;wreg free
  5773                           
  5774                           ;MOTEapp.c: 271: oled_putString(" (S1)      (S2) ", 0,3);
  5775  001938  0E33               	movlw	low STR_28
  5776  00193A  0100               	movlb	0	; () banked
  5777  00193C  6FCB               	movwf	oled_putString@string& (0+255),b
  5778  00193E  0E7B               	movlw	high STR_28
  5779  001940  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  5780  001942  0E00               	movlw	0
  5781  001944  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  5782  001946  0E03               	movlw	3
  5783  001948  6FCE               	movwf	oled_putString@start_page& (0+255),b
  5784  00194A  EC2E  F01F         	call	_oled_putString	;wreg free
  5785                           
  5786                           ;MOTEapp.c: 272: runningState = runningEnter;
  5787  00194E  0E00               	movlw	0
  5788  001950  0100               	movlb	0	; () banked
  5789  001952  6FAE               	movwf	_runningState& (0+255),b
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;MOTEapp.c: 273: moteState = MOTE_RUNNING;
  5793  001954  0E03               	movlw	3
  5794  001956                     L2:
  5795  001956  6FFA               	movwf	_moteState& (0+255),b
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;MOTEapp.c: 274: }
  5799                           ;MOTEapp.c: 275: break;
  5800  001958  D018               	goto	l357
  5801  00195A                     
  5802                           ; BSR set to: 0
  5803                           ;MOTEapp.c: 277: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5804                           
  5805                           ; BSR set to: 0
  5806  00195A  C0ED  F0DA         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5807  00195E  C0F1  F0DB         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5808  001962  C0E9  F0DC         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5809  001966  51EC               	movf	moteHandler@gotoNextState& (0+255),w,b
  5810  001968  EC6F  F000         	call	_moteRunningProcess
  5811                           
  5812                           ;MOTEapp.c: 282: }
  5813                           
  5814                           ;MOTEapp.c: 281: break;
  5815                           
  5816                           ;MOTEapp.c: 279: case MOTE_SWAP:
  5817                           
  5818                           ;MOTEapp.c: 278: break;
  5819  00196C  D00E               	goto	l357
  5820  00196E                     l352:
  5821  00196E  0100               	movlb	0	; () banked
  5822  001970  51FA               	movf	_moteState& (0+255),w,b
  5823                           
  5824                           ; Switch size 1, requested type "space"
  5825                           ; Number of cases is 4, Range of values is 1 to 4
  5826                           ; switch strategies available:
  5827                           ; Name         Instructions Cycles
  5828                           ; simple_byte           13     7 (average)
  5829                           ;	Chosen strategy is simple_byte
  5830  001972  0A01               	xorlw	1	; case 1
  5831  001974  B4D8               	btfsc	status,2,c
  5832  001976  D796               	goto	l358
  5833  001978  0A03               	xorlw	3	; case 2
  5834  00197A  B4D8               	btfsc	status,2,c
  5835  00197C  D7BB               	goto	l359
  5836  00197E  0A01               	xorlw	1	; case 3
  5837  001980  B4D8               	btfsc	status,2,c
  5838  001982  D7EB               	goto	l361
  5839  001984  0A07               	xorlw	7	; case 4
  5840  001986  A4D8               	btfss	status,2,c
  5841  001988  D78C               	goto	l353
  5842  00198A                     l357:
  5843                           
  5844                           ;MOTEapp.c: 283: return moteState;
  5845                           
  5846                           ; BSR set to: 0
  5847  00198A  0100               	movlb	0	; () banked
  5848  00198C  51FA               	movf	_moteState& (0+255),w,b
  5849  00198E  0012               	return	
  5850  001990                     __end_of_moteHandler:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           intcon	equ	0xFF2
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1l	equ	0xFE1
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _moteRunningProcess *****************
  5864 ;; Defined at:
  5865 ;;		line 481 in file "../Includes/Board/MOTEapp.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  changeStates    1    wreg     unsigned char 
  5868 ;;  selectButton    1   28[BANK0 ] unsigned char 
  5869 ;;  messageReady    1   29[BANK0 ] unsigned char 
  5870 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  changeStates    1   40[BANK0 ] unsigned char 
  5873 ;;  counter         1   38[BANK0 ] unsigned char 
  5874 ;;  bufferReadPo    1   39[BANK0 ] unsigned char 
  5875 ;;  i               1   37[BANK0 ] unsigned char 
  5876 ;;  i               1   36[BANK0 ] unsigned char 
  5877 ;;  Traw            2   34[BANK0 ] unsigned int 
  5878 ;;  readByte        1   33[BANK0 ] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      enum E5762
  5881 ;; Registers used:
  5882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5888 ;;      Params:         0       3       0       0       0       0       0       0       0
  5889 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5890 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5891 ;;      Totals:         0      13       0       0       0       0       0       0       0
  5892 ;;Total ram usage:       13 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:   19
  5895 ;; This function calls:
  5896 ;;		_ADC_GetConversion
  5897 ;;		_ADC_TempConversion
  5898 ;;		_MOTEapp_SetDataRateSetting
  5899 ;;		_TMR2_ReadTimer
  5900 ;;		_moteApp_GoToSleep
  5901 ;;		_moteApp_add16bToDataBuffer
  5902 ;;		_moteApp_add8bToDataBuffer
  5903 ;;		_moteApp_clearBuffers
  5904 ;;		_moteApp_delayms
  5905 ;;		_oled_clear
  5906 ;;		_oled_putString
  5907 ;;		_oled_putUint16
  5908 ;;		_oled_putUint8
  5909 ;;		_sendDataCommand
  5910 ;;		_strcmp
  5911 ;;		_strncmp
  5912 ;; This function is called by:
  5913 ;;		_moteHandler
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text9
  5918  0000DE                     __ptext9:
  5919                           	opt stack 0
  5920  0000DE                     _moteRunningProcess:
  5921                           	opt stack 10
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;incstack = 0
  5925                           ;moteRunningProcess@changeStates stored from wreg
  5926  0000DE  0100               	movlb	0	; () banked
  5927  0000E0  6FE6               	movwf	moteRunningProcess@changeStates& (0+255),b
  5928                           
  5929                           ;MOTEapp.c: 483: uint8_t readByte = 0;
  5930  0000E2  0E00               	movlw	0
  5931  0000E4  0100               	movlb	0	; () banked
  5932  0000E6  6FDF               	movwf	moteRunningProcess@readByte& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;MOTEapp.c: 485: if ((sleepEvent) && (periodicState))
  5936  0000E8  51DC               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5937  0000EA  B4D8               	btfsc	status,2,c
  5938  0000EC  EFB1  F007         	goto	l446
  5939                           
  5940                           ; BSR set to: 0
  5941  0000F0  51F5               	movf	_periodicState& (0+255),w,b
  5942  0000F2  B4D8               	btfsc	status,2,c
  5943  0000F4  EFB1  F007         	goto	l446
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;MOTEapp.c: 486: {
  5947                           ;MOTEapp.c: 487: if (sleepTicker >= periodicTimerValue)
  5948  0000F8  51F8               	movf	_periodicTimerValue& (0+255),w,b
  5949  0000FA  5DAA               	subwf	_sleepTicker& (0+255),w,b
  5950  0000FC  A0D8               	btfss	status,0,c
  5951  0000FE  D0CE               	goto	l435
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;MOTEapp.c: 488: {
  5955                           ;MOTEapp.c: 490: uint16_t Traw = 0;
  5956  000100  0E00               	movlw	0
  5957  000102  6FE1               	movwf	(moteRunningProcess@Traw+1)& (0+255),b
  5958  000104  0E00               	movlw	0
  5959  000106  6FE0               	movwf	moteRunningProcess@Traw& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;MOTEapp.c: 491: moteApp_delayms(10);
  5963  000108  0E00               	movlw	0
  5964  00010A  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5965  00010C  0E0A               	movlw	10
  5966  00010E  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  5967  000110  EC13  F023         	call	_moteApp_delayms	;wreg free
  5968                           
  5969                           ;MOTEapp.c: 492: for(uint8_t i = 32; i>0; i--)
  5970  000114  0E20               	movlw	32
  5971  000116  0100               	movlb	0	; () banked
  5972  000118  6FE2               	movwf	moteRunningProcess@i& (0+255),b
  5973  00011A                     l8409:
  5974                           
  5975                           ; BSR set to: 0
  5976  00011A  51E2               	movf	moteRunningProcess@i& (0+255),w,b
  5977  00011C  B4D8               	btfsc	status,2,c
  5978  00011E  D011               	goto	u6660
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;MOTEapp.c: 493: {
  5982                           ;MOTEapp.c: 494: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5983                           
  5984                           ; BSR set to: 0
  5985                           
  5986                           ; BSR set to: 0
  5987  000120  0E03               	movlw	3
  5988  000122  EC4A  F022         	call	_ADC_GetConversion
  5989  000126  0100               	movlb	0	; () banked
  5990  000128  5196               	movf	_light& (0+255),w,b
  5991  00012A  27BE               	addwf	?_ADC_GetConversion& (0+255),f,b
  5992  00012C  5197               	movf	(_light+1)& (0+255),w,b
  5993  00012E  23BF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5994  000130  90D8               	bcf	status,0,c
  5995  000132  31BF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5996  000134  6FDD               	movwf	??_moteRunningProcess& (0+255),b
  5997  000136  31BE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5998  000138  6F96               	movwf	_light& (0+255),b
  5999  00013A  C0DD  F097         	movff	??_moteRunningProcess,_light+1
  6000                           
  6001                           ; BSR set to: 0
  6002  00013E  07E2               	decf	moteRunningProcess@i& (0+255),f,b
  6003  000140  D7EC               	goto	l8409
  6004  000142                     u6660:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;MOTEapp.c: 495: }
  6008                           ;MOTEapp.c: 496: moteApp_delayms(10);
  6009                           
  6010                           ; BSR set to: 0
  6011  000142  0E00               	movlw	0
  6012  000144  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6013  000146  0E0A               	movlw	10
  6014  000148  6FBE               	movwf	moteApp_delayms@length& (0+255),b
  6015  00014A  EC13  F023         	call	_moteApp_delayms	;wreg free
  6016                           
  6017                           ;MOTEapp.c: 497: for(uint8_t i = 32; i>0; i--)
  6018  00014E  0E20               	movlw	32
  6019  000150  0100               	movlb	0	; () banked
  6020  000152  6FE3               	movwf	moteRunningProcess@i_1299& (0+255),b
  6021  000154                     l8423:
  6022                           
  6023                           ; BSR set to: 0
  6024  000154  51E3               	movf	moteRunningProcess@i_1299& (0+255),w,b
  6025  000156  B4D8               	btfsc	status,2,c
  6026  000158  D011               	goto	u6680
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;MOTEapp.c: 498: {
  6030                           ;MOTEapp.c: 499: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  6031                           
  6032                           ; BSR set to: 0
  6033                           
  6034                           ; BSR set to: 0
  6035  00015A  0E02               	movlw	2
  6036  00015C  EC4A  F022         	call	_ADC_GetConversion
  6037  000160  0100               	movlb	0	; () banked
  6038  000162  51E0               	movf	moteRunningProcess@Traw& (0+255),w,b
  6039  000164  27BE               	addwf	?_ADC_GetConversion& (0+255),f,b
  6040  000166  51E1               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  6041  000168  23BF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  6042  00016A  90D8               	bcf	status,0,c
  6043  00016C  31BF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  6044  00016E  6FDD               	movwf	??_moteRunningProcess& (0+255),b
  6045  000170  31BE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  6046  000172  6FE0               	movwf	moteRunningProcess@Traw& (0+255),b
  6047  000174  C0DD  F0E1         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  6048                           
  6049                           ; BSR set to: 0
  6050  000178  07E3               	decf	moteRunningProcess@i_1299& (0+255),f,b
  6051  00017A  D7EC               	goto	l8423
  6052  00017C                     u6680:
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;MOTEapp.c: 500: }
  6056                           ;MOTEapp.c: 501: temperature = ADC_TempConversion(Traw);
  6057                           
  6058                           ; BSR set to: 0
  6059  00017C  51E0               	movf	moteRunningProcess@Traw& (0+255),w,b
  6060  00017E  ECE9  F023         	call	_ADC_TempConversion
  6061  000182  0100               	movlb	0	; () banked
  6062  000184  6FDD               	movwf	??_moteRunningProcess& (0+255),b
  6063  000186  51DD               	movf	??_moteRunningProcess& (0+255),w,b
  6064  000188  6F94               	movwf	_temperature& (0+255),b
  6065  00018A  6B95               	clrf	(_temperature+1)& (0+255),b
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;MOTEapp.c: 503: sleepTicker = 0;
  6069  00018C  0E00               	movlw	0
  6070  00018E  6FAA               	movwf	_sleepTicker& (0+255),b
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;MOTEapp.c: 504: oled_clear();
  6074  000190  EC88  F024         	call	_oled_clear	;wreg free
  6075                           
  6076                           ;MOTEapp.c: 505: oled_putString("Issue Perodic TX",0,0);
  6077  000194  0EBB               	movlw	low STR_70
  6078  000196  0100               	movlb	0	; () banked
  6079  000198  6FCB               	movwf	oled_putString@string& (0+255),b
  6080  00019A  0E7B               	movlw	high STR_70
  6081  00019C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6082  00019E  0E00               	movlw	0
  6083  0001A0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6084  0001A2  0E00               	movlw	0
  6085  0001A4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6086  0001A6  EC2E  F01F         	call	_oled_putString	;wreg free
  6087                           
  6088                           ;MOTEapp.c: 506: oled_putString("On Port #: ",0,1);
  6089  0001AA  0E35               	movlw	low STR_71
  6090  0001AC  0100               	movlb	0	; () banked
  6091  0001AE  6FCB               	movwf	oled_putString@string& (0+255),b
  6092  0001B0  0E7E               	movlw	high STR_71
  6093  0001B2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6094  0001B4  0E00               	movlw	0
  6095  0001B6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6096  0001B8  0E01               	movlw	1
  6097  0001BA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6098  0001BC  EC2E  F01F         	call	_oled_putString	;wreg free
  6099                           
  6100                           ;MOTEapp.c: 507: oled_putUint8(randomPortNum,10,1);
  6101  0001C0  0E0A               	movlw	10
  6102  0001C2  0100               	movlb	0	; () banked
  6103  0001C4  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  6104  0001C6  0E01               	movlw	1
  6105  0001C8  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  6106  0001CA  51AC               	movf	_randomPortNum& (0+255),w,b
  6107  0001CC  EC2C  F01D         	call	_oled_putUint8
  6108                           
  6109                           ;MOTEapp.c: 508: oled_putString("L:       T: ",0,2);
  6110  0001D0  0E73               	movlw	low STR_72
  6111  0001D2  0100               	movlb	0	; () banked
  6112  0001D4  6FCB               	movwf	oled_putString@string& (0+255),b
  6113  0001D6  0E7D               	movlw	high STR_72
  6114  0001D8  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6115  0001DA  0E00               	movlw	0
  6116  0001DC  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6117  0001DE  0E02               	movlw	2
  6118  0001E0  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6119  0001E2  EC2E  F01F         	call	_oled_putString	;wreg free
  6120                           
  6121                           ;MOTEapp.c: 509: oled_putUint16(light,3,2);
  6122  0001E6  C096  F0D0         	movff	_light,oled_putUint16@number
  6123  0001EA  C097  F0D1         	movff	_light+1,oled_putUint16@number+1
  6124  0001EE  0E03               	movlw	3
  6125  0001F0  0100               	movlb	0	; () banked
  6126  0001F2  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  6127  0001F4  0E02               	movlw	2
  6128  0001F6  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  6129  0001F8  ECCA  F011         	call	_oled_putUint16	;wreg free
  6130                           
  6131                           ;MOTEapp.c: 510: oled_putUint8(temperature,12,2);
  6132  0001FC  0E0C               	movlw	12
  6133  0001FE  0100               	movlb	0	; () banked
  6134  000200  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  6135  000202  0E02               	movlw	2
  6136  000204  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  6137  000206  5194               	movf	_temperature& (0+255),w,b
  6138  000208  EC2C  F01D         	call	_oled_putUint8
  6139                           
  6140                           ;MOTEapp.c: 511: oled_putString("(NAV)    (SEL) ",0,3);
  6141  00020C  0E84               	movlw	low STR_73
  6142  00020E  0100               	movlb	0	; () banked
  6143  000210  6FCB               	movwf	oled_putString@string& (0+255),b
  6144  000212  0E7C               	movlw	high STR_73
  6145  000214  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6146  000216  0E00               	movlw	0
  6147  000218  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6148  00021A  0E03               	movlw	3
  6149  00021C  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6150  00021E  EC2E  F01F         	call	_oled_putString	;wreg free
  6151                           
  6152                           ;MOTEapp.c: 513: moteApp_clearBuffers();
  6153  000222  EC9E  F01C         	call	_moteApp_clearBuffers	;wreg free
  6154                           
  6155                           ;MOTEapp.c: 514: randomPortNum = TMR2_ReadTimer();
  6156  000226  EC2F  F025         	call	_TMR2_ReadTimer	;wreg free
  6157  00022A  0100               	movlb	0	; () banked
  6158  00022C  6FAC               	movwf	_randomPortNum& (0+255),b
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;MOTEapp.c: 516: if (!randomPortNum)
  6162  00022E  51AC               	movf	_randomPortNum& (0+255),w,b
  6163  000230  A4D8               	btfss	status,2,c
  6164  000232  D002               	goto	l440
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 517: randomPortNum = 5;
  6168  000234  0E05               	movlw	5
  6169  000236  D005               	goto	L3
  6170  000238                     l440:
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;MOTEapp.c: 518: else if (randomPortNum > 223)
  6174                           
  6175                           ; BSR set to: 0
  6176  000238  0EDF               	movlw	223
  6177  00023A  65AC               	cpfsgt	_randomPortNum& (0+255),b
  6178  00023C  D003               	goto	l442
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;MOTEapp.c: 519: randomPortNum = randomPortNum - 50;
  6182  00023E  51AC               	movf	_randomPortNum& (0+255),w,b
  6183  000240  0FCE               	addlw	206
  6184  000242                     L3:
  6185  000242  6FAC               	movwf	_randomPortNum& (0+255),b
  6186  000244                     l442:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;MOTEapp.c: 521: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6190                           
  6191                           ; BSR set to: 0
  6192                           
  6193                           ; BSR set to: 0
  6194  000244  0E00               	movlw	0
  6195  000246  6FC4               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6196  000248  51AC               	movf	_randomPortNum& (0+255),w,b
  6197  00024A  EC4D  F01A         	call	_moteApp_add8bToDataBuffer
  6198                           
  6199                           ;MOTEapp.c: 522: dataBuffer[3] = 0x20;
  6200  00024E  0E20               	movlw	32
  6201  000250  0101               	movlb	1	; () banked
  6202  000252  6FC3               	movwf	(_dataBuffer+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;MOTEapp.c: 523: moteApp_add16bToDataBuffer(light, 4);
  6206  000254  C096  F0C5         	movff	_light,moteApp_add16bToDataBuffer@number
  6207  000258  C097  F0C6         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6208  00025C  0E04               	movlw	4
  6209  00025E  0100               	movlb	0	; () banked
  6210  000260  6FC7               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6211  000262  ECC8  F00C         	call	_moteApp_add16bToDataBuffer	;wreg free
  6212                           
  6213                           ;MOTEapp.c: 524: moteApp_add8bToDataBuffer(temperature, 9);
  6214  000266  0E09               	movlw	9
  6215  000268  0100               	movlb	0	; () banked
  6216  00026A  6FC4               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6217  00026C  5194               	movf	_temperature& (0+255),w,b
  6218  00026E  EC4D  F01A         	call	_moteApp_add8bToDataBuffer
  6219                           
  6220                           ;MOTEapp.c: 525: __nop();
  6221  000272  F000               	nop	
  6222                           
  6223                           ;MOTEapp.c: 527: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6224  000274  0E2E               	movlw	low STR_74
  6225  000276  0100               	movlb	0	; () banked
  6226  000278  6FBF               	movwf	sendDataCommand@string& (0+255),b
  6227  00027A  0E7D               	movlw	high STR_74
  6228  00027C  6FC0               	movwf	(sendDataCommand@string+1)& (0+255),b
  6229  00027E  0EC0               	movlw	low _dataBuffer
  6230  000280  6FC1               	movwf	sendDataCommand@appData& (0+255),b
  6231  000282  0E01               	movlw	high _dataBuffer
  6232  000284  6FC2               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6233  000286  0E0C               	movlw	12
  6234  000288  6FC3               	movwf	sendDataCommand@dataLength& (0+255),b
  6235  00028A  EC7A  F018         	call	_sendDataCommand	;wreg free
  6236                           
  6237                           ;MOTEapp.c: 528: secTicker = 10 - (10 / 3);
  6238  00028E  0E07               	movlw	7
  6239  000290  0100               	movlb	0	; () banked
  6240  000292  6FAB               	movwf	_secTicker& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;MOTEapp.c: 529: runningState = runningUplinkTransmit;
  6244  000294  0E08               	movlw	8
  6245  000296  6FAE               	movwf	_runningState& (0+255),b
  6246                           
  6247                           ;MOTEapp.c: 530: }
  6248  000298  EFB1  F007         	goto	l446
  6249  00029C                     l435:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;MOTEapp.c: 531: else
  6253                           ;MOTEapp.c: 532: {
  6254                           ;MOTEapp.c: 533: if (menuTimeout)
  6255                           
  6256                           ; BSR set to: 0
  6257  00029C  51F6               	movf	_menuTimeout& (0+255),w,b
  6258  00029E  B4D8               	btfsc	status,2,c
  6259  0002A0  D007               	goto	l444
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;MOTEapp.c: 534: {
  6263                           ;MOTEapp.c: 535: sleepTicker++;
  6264  0002A2  2BAA               	incf	_sleepTicker& (0+255),f,b
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;MOTEapp.c: 536: runningState = runningSleep;
  6268  0002A4  0E0F               	movlw	15
  6269  0002A6  6FAE               	movwf	_runningState& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;MOTEapp.c: 537: selectButton = 1;
  6273  0002A8  0E01               	movlw	1
  6274  0002AA  6FDA               	movwf	moteRunningProcess@selectButton& (0+255),b
  6275                           
  6276                           ;MOTEapp.c: 538: } else {
  6277  0002AC  EFB1  F007         	goto	l446
  6278  0002B0                     l444:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;MOTEapp.c: 539: sleepTicker = 0;
  6282                           
  6283                           ; BSR set to: 0
  6284  0002B0  0E00               	movlw	0
  6285  0002B2  6FAA               	movwf	_sleepTicker& (0+255),b
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;MOTEapp.c: 540: }
  6289                           ;MOTEapp.c: 541: }
  6290                           ;MOTEapp.c: 542: }
  6291                           ;MOTEapp.c: 545: switch(runningState)
  6292                           
  6293                           ; BSR set to: 0
  6294                           
  6295                           ; BSR set to: 0
  6296  0002B4  EFB1  F007         	goto	l446
  6297  0002B8                     
  6298                           ; BSR set to: 0
  6299                           ;MOTEapp.c: 548: while(1);
  6300  0002B8  D7FF               	goto	l447
  6301  0002BA                     
  6302                           ;MOTEapp.c: 551: if ( (changeStates) || (selectButton) )
  6303  0002BA  0100               	movlb	0	; () banked
  6304  0002BC  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6305  0002BE  A4D8               	btfss	status,2,c
  6306  0002C0  D003               	goto	u6730
  6307                           
  6308                           ; BSR set to: 0
  6309  0002C2  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6310  0002C4  B4D8               	btfsc	status,2,c
  6311  0002C6  0012               	return	
  6312  0002C8                     u6730:
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;MOTEapp.c: 552: {
  6316                           ;MOTEapp.c: 553: oled_clear();
  6317                           
  6318                           ; BSR set to: 0
  6319  0002C8  EC88  F024         	call	_oled_clear	;wreg free
  6320                           
  6321                           ;MOTEapp.c: 554: oled_putString("  Issue Uplink  ",0,0);
  6322  0002CC  0E22               	movlw	low STR_75
  6323  0002CE  0100               	movlb	0	; () banked
  6324  0002D0  6FCB               	movwf	oled_putString@string& (0+255),b
  6325  0002D2  0E7B               	movlw	high STR_75
  6326  0002D4  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6327  0002D6  0E00               	movlw	0
  6328  0002D8  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6329  0002DA  0E00               	movlw	0
  6330  0002DC  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6331  0002DE  EC2E  F01F         	call	_oled_putString	;wreg free
  6332                           
  6333                           ;MOTEapp.c: 555: oled_putString(" LoRaWAN Packet ",0,1);
  6334  0002E2  0E88               	movlw	low STR_76
  6335  0002E4  0100               	movlb	0	; () banked
  6336  0002E6  6FCB               	movwf	oled_putString@string& (0+255),b
  6337  0002E8  0E7B               	movlw	high STR_76
  6338  0002EA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6339  0002EC  0E00               	movlw	0
  6340  0002EE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6341  0002F0  0E01               	movlw	1
  6342  0002F2  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6343  0002F4  EC2E  F01F         	call	_oled_putString	;wreg free
  6344                           
  6345                           ;MOTEapp.c: 556: oled_putString("(NAV)    (SEL) ",0,3);
  6346  0002F8  0E84               	movlw	low STR_73
  6347  0002FA  0100               	movlb	0	; () banked
  6348  0002FC  6FCB               	movwf	oled_putString@string& (0+255),b
  6349  0002FE  0E7C               	movlw	high STR_73
  6350  000300  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6351  000302  0E00               	movlw	0
  6352  000304  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6353  000306  0E03               	movlw	3
  6354  000308  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6355  00030A  EC2E  F01F         	call	_oled_putString	;wreg free
  6356                           
  6357                           ;MOTEapp.c: 557: runningState = runningUplink;
  6358  00030E  0E06               	movlw	6
  6359  000310  0100               	movlb	0	; () banked
  6360  000312  6FAE               	movwf	_runningState& (0+255),b
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;MOTEapp.c: 558: }
  6364                           ;MOTEapp.c: 559: break;
  6365  000314  0012               	return	
  6366  000316                     
  6367                           ; BSR set to: 0
  6368                           ;MOTEapp.c: 561: if (changeStates)
  6369                           
  6370                           ; BSR set to: 0
  6371  000316  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6372  000318  B4D8               	btfsc	status,2,c
  6373  00031A  D027               	goto	l457
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;MOTEapp.c: 562: {
  6377                           ;MOTEapp.c: 563: oled_clear();
  6378  00031C  EC88  F024         	call	_oled_clear	;wreg free
  6379                           
  6380                           ;MOTEapp.c: 564: oled_putString(" View Downlink  ",0,0);
  6381  000320  0E11               	movlw	low STR_78
  6382  000322  0100               	movlb	0	; () banked
  6383  000324  6FCB               	movwf	oled_putString@string& (0+255),b
  6384  000326  0E7B               	movlw	high STR_78
  6385  000328  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6386  00032A  0E00               	movlw	0
  6387  00032C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6388  00032E  0E00               	movlw	0
  6389  000330  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6390  000332  EC2E  F01F         	call	_oled_putString	;wreg free
  6391                           
  6392                           ;MOTEapp.c: 565: oled_putString("  Last Message  ",0,1);
  6393  000336  0E00               	movlw	low STR_79
  6394  000338  0100               	movlb	0	; () banked
  6395  00033A  6FCB               	movwf	oled_putString@string& (0+255),b
  6396  00033C  0E7B               	movlw	high STR_79
  6397  00033E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6398  000340  0E00               	movlw	0
  6399  000342  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6400  000344  0E01               	movlw	1
  6401  000346  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6402  000348  EC2E  F01F         	call	_oled_putString	;wreg free
  6403                           
  6404                           ;MOTEapp.c: 566: oled_putString("(NAV)    (SEL) ",0,3);
  6405  00034C  0E84               	movlw	low STR_73
  6406  00034E  0100               	movlb	0	; () banked
  6407  000350  6FCB               	movwf	oled_putString@string& (0+255),b
  6408  000352  0E7C               	movlw	high STR_73
  6409  000354  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6410  000356  0E00               	movlw	0
  6411  000358  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6412  00035A  0E03               	movlw	3
  6413  00035C  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6414  00035E  EC2E  F01F         	call	_oled_putString	;wreg free
  6415                           
  6416                           ;MOTEapp.c: 567: runningState = runningDownlink;
  6417  000362  0E0A               	movlw	10
  6418  000364  0100               	movlb	0	; () banked
  6419  000366  6FAE               	movwf	_runningState& (0+255),b
  6420                           
  6421                           ;MOTEapp.c: 568: }
  6422  000368  0012               	return	
  6423  00036A                     l457:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;MOTEapp.c: 569: else if (selectButton)
  6427                           
  6428                           ; BSR set to: 0
  6429  00036A  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6430  00036C  B4D8               	btfsc	status,2,c
  6431  00036E  0012               	return	
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;MOTEapp.c: 570: {
  6435                           ;MOTEapp.c: 571: sleepTicker = 0;
  6436  000370  0E00               	movlw	0
  6437  000372  6FAA               	movwf	_sleepTicker& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;MOTEapp.c: 573: oled_clear();
  6441  000374  EC88  F024         	call	_oled_clear	;wreg free
  6442                           
  6443                           ;MOTEapp.c: 574: oled_putString("Uplink Pckt Type",0,0);
  6444  000378  0EEE               	movlw	low STR_81
  6445  00037A  0100               	movlb	0	; () banked
  6446  00037C  6FCB               	movwf	oled_putString@string& (0+255),b
  6447  00037E  0E7B               	movlw	high STR_81
  6448  000380  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6449  000382  0E00               	movlw	0
  6450  000384  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6451  000386  0E00               	movlw	0
  6452  000388  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6453  00038A  EC2E  F01F         	call	_oled_putString	;wreg free
  6454                           
  6455                           ;MOTEapp.c: 575: oled_putString("Throu Port# ",0,1);
  6456  00038E  0E66               	movlw	low STR_82
  6457  000390  0100               	movlb	0	; () banked
  6458  000392  6FCB               	movwf	oled_putString@string& (0+255),b
  6459  000394  0E7D               	movlw	high STR_82
  6460  000396  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6461  000398  0E00               	movlw	0
  6462  00039A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6463  00039C  0E01               	movlw	1
  6464  00039E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6465  0003A0  EC2E  F01F         	call	_oled_putString	;wreg free
  6466                           
  6467                           ;MOTEapp.c: 576: oled_putString("(UNCNF)    (CNF) ",0,3);
  6468  0003A4  0E98               	movlw	low STR_83
  6469  0003A6  0100               	movlb	0	; () banked
  6470  0003A8  6FCB               	movwf	oled_putString@string& (0+255),b
  6471  0003AA  0E7A               	movlw	high STR_83
  6472  0003AC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6473  0003AE  0E00               	movlw	0
  6474  0003B0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6475  0003B2  0E03               	movlw	3
  6476  0003B4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6477  0003B6  EC2E  F01F         	call	_oled_putString	;wreg free
  6478                           
  6479                           ;MOTEapp.c: 578: moteApp_clearBuffers();
  6480  0003BA  EC9E  F01C         	call	_moteApp_clearBuffers	;wreg free
  6481                           
  6482                           ;MOTEapp.c: 579: randomPortNum = TMR2_ReadTimer();
  6483  0003BE  EC2F  F025         	call	_TMR2_ReadTimer	;wreg free
  6484  0003C2  0100               	movlb	0	; () banked
  6485  0003C4  6FAC               	movwf	_randomPortNum& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;MOTEapp.c: 581: if (!randomPortNum)
  6489  0003C6  51AC               	movf	_randomPortNum& (0+255),w,b
  6490  0003C8  A4D8               	btfss	status,2,c
  6491  0003CA  D002               	goto	l460
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;MOTEapp.c: 582: randomPortNum = 5;
  6495  0003CC  0E05               	movlw	5
  6496  0003CE  D005               	goto	L4
  6497  0003D0                     l460:
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;MOTEapp.c: 583: else if (randomPortNum > 223)
  6501                           
  6502                           ; BSR set to: 0
  6503  0003D0  0EDF               	movlw	223
  6504  0003D2  65AC               	cpfsgt	_randomPortNum& (0+255),b
  6505  0003D4  D003               	goto	l462
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;MOTEapp.c: 584: randomPortNum = randomPortNum - 50;
  6509  0003D6  51AC               	movf	_randomPortNum& (0+255),w,b
  6510  0003D8  0FCE               	addlw	206
  6511  0003DA                     L4:
  6512  0003DA  6FAC               	movwf	_randomPortNum& (0+255),b
  6513  0003DC                     l462:
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;MOTEapp.c: 585: oled_putUint8(randomPortNum,12,1);
  6517                           
  6518                           ; BSR set to: 0
  6519                           
  6520                           ; BSR set to: 0
  6521  0003DC  0E0C               	movlw	12
  6522  0003DE  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  6523  0003E0  0E01               	movlw	1
  6524  0003E2  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  6525  0003E4  51AC               	movf	_randomPortNum& (0+255),w,b
  6526  0003E6  EC2C  F01D         	call	_oled_putUint8
  6527                           
  6528                           ;MOTEapp.c: 587: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6529  0003EA  0E00               	movlw	0
  6530  0003EC  0100               	movlb	0	; () banked
  6531  0003EE  6FC4               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6532  0003F0  51AC               	movf	_randomPortNum& (0+255),w,b
  6533  0003F2  EC4D  F01A         	call	_moteApp_add8bToDataBuffer
  6534                           
  6535                           ;MOTEapp.c: 588: dataBuffer[3] = 0x20;
  6536  0003F6  0E20               	movlw	32
  6537  0003F8  0101               	movlb	1	; () banked
  6538  0003FA  6FC3               	movwf	(_dataBuffer+3)& (0+255),b
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;MOTEapp.c: 589: moteApp_add16bToDataBuffer(light, 4);
  6542  0003FC  C096  F0C5         	movff	_light,moteApp_add16bToDataBuffer@number
  6543  000400  C097  F0C6         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6544  000404  0E04               	movlw	4
  6545  000406  0100               	movlb	0	; () banked
  6546  000408  6FC7               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6547  00040A  ECC8  F00C         	call	_moteApp_add16bToDataBuffer	;wreg free
  6548                           
  6549                           ;MOTEapp.c: 590: moteApp_add8bToDataBuffer(temperature, 9);
  6550  00040E  0E09               	movlw	9
  6551  000410  0100               	movlb	0	; () banked
  6552  000412  6FC4               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6553  000414  5194               	movf	_temperature& (0+255),w,b
  6554  000416  EC4D  F01A         	call	_moteApp_add8bToDataBuffer
  6555                           
  6556                           ;MOTEapp.c: 591: __nop();
  6557  00041A  F000               	nop	
  6558                           
  6559                           ;MOTEapp.c: 593: runningState = runningUplinkSelect;
  6560  00041C  0E07               	movlw	7
  6561  00041E  0100               	movlb	0	; () banked
  6562  000420  6FAE               	movwf	_runningState& (0+255),b
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;MOTEapp.c: 594: }
  6566                           ;MOTEapp.c: 595: break;
  6567                           
  6568                           ; BSR set to: 0
  6569  000422  0012               	return	
  6570  000424                     
  6571                           ; BSR set to: 0
  6572                           ;MOTEapp.c: 597: if (changeStates)
  6573                           
  6574                           ; BSR set to: 0
  6575  000424  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6576  000426  B4D8               	btfsc	status,2,c
  6577  000428  D00C               	goto	l464
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 598: {
  6581                           ;MOTEapp.c: 599: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6582  00042A  0E2E               	movlw	low STR_74
  6583  00042C  6FBF               	movwf	sendDataCommand@string& (0+255),b
  6584  00042E  0E7D               	movlw	high STR_74
  6585  000430  6FC0               	movwf	(sendDataCommand@string+1)& (0+255),b
  6586  000432  0EC0               	movlw	low _dataBuffer
  6587  000434  6FC1               	movwf	sendDataCommand@appData& (0+255),b
  6588  000436  0E01               	movlw	high _dataBuffer
  6589  000438  6FC2               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6590  00043A  0E0C               	movlw	12
  6591  00043C  6FC3               	movwf	sendDataCommand@dataLength& (0+255),b
  6592  00043E  EC7A  F018         	call	_sendDataCommand	;wreg free
  6593  000442                     l464:
  6594                           
  6595                           ;MOTEapp.c: 600: }
  6596                           ;MOTEapp.c: 601: if (selectButton)
  6597  000442  0100               	movlb	0	; () banked
  6598  000444  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6599  000446  B4D8               	btfsc	status,2,c
  6600  000448  D00C               	goto	l465
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;MOTEapp.c: 602: {
  6604                           ;MOTEapp.c: 603: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  6605  00044A  0E65               	movlw	low STR_85
  6606  00044C  6FBF               	movwf	sendDataCommand@string& (0+255),b
  6607  00044E  0E7E               	movlw	high STR_85
  6608  000450  6FC0               	movwf	(sendDataCommand@string+1)& (0+255),b
  6609  000452  0EC0               	movlw	low _dataBuffer
  6610  000454  6FC1               	movwf	sendDataCommand@appData& (0+255),b
  6611  000456  0E01               	movlw	high _dataBuffer
  6612  000458  6FC2               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6613  00045A  0E0C               	movlw	12
  6614  00045C  6FC3               	movwf	sendDataCommand@dataLength& (0+255),b
  6615  00045E  EC7A  F018         	call	_sendDataCommand	;wreg free
  6616  000462                     l465:
  6617                           
  6618                           ;MOTEapp.c: 604: }
  6619                           ;MOTEapp.c: 605: if ( (changeStates) || (selectButton) )
  6620  000462  0100               	movlb	0	; () banked
  6621  000464  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6622  000466  A4D8               	btfss	status,2,c
  6623  000468  D003               	goto	u6810
  6624                           
  6625                           ; BSR set to: 0
  6626  00046A  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6627  00046C  B4D8               	btfsc	status,2,c
  6628  00046E  0012               	return	
  6629  000470                     u6810:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;MOTEapp.c: 606: {
  6633                           ;MOTEapp.c: 607: oled_clear();
  6634                           
  6635                           ; BSR set to: 0
  6636  000470  EC88  F024         	call	_oled_clear	;wreg free
  6637                           
  6638                           ;MOTEapp.c: 608: oled_putString("Sent Data: ",0,0);
  6639  000474  0E4D               	movlw	low STR_86
  6640  000476  0100               	movlb	0	; () banked
  6641  000478  6FCB               	movwf	oled_putString@string& (0+255),b
  6642  00047A  0E7E               	movlw	high STR_86
  6643  00047C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6644  00047E  0E00               	movlw	0
  6645  000480  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6646  000482  0E00               	movlw	0
  6647  000484  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6648  000486  EC2E  F01F         	call	_oled_putString	;wreg free
  6649                           
  6650                           ;MOTEapp.c: 609: oled_putString("L:       T: ",0,1);
  6651  00048A  0E73               	movlw	low STR_72
  6652  00048C  0100               	movlb	0	; () banked
  6653  00048E  6FCB               	movwf	oled_putString@string& (0+255),b
  6654  000490  0E7D               	movlw	high STR_72
  6655  000492  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6656  000494  0E00               	movlw	0
  6657  000496  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6658  000498  0E01               	movlw	1
  6659  00049A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6660  00049C  EC2E  F01F         	call	_oled_putString	;wreg free
  6661                           
  6662                           ;MOTEapp.c: 610: oled_putUint16(light,3,2);
  6663  0004A0  C096  F0D0         	movff	_light,oled_putUint16@number
  6664  0004A4  C097  F0D1         	movff	_light+1,oled_putUint16@number+1
  6665  0004A8  0E03               	movlw	3
  6666  0004AA  0100               	movlb	0	; () banked
  6667  0004AC  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  6668  0004AE  0E02               	movlw	2
  6669  0004B0  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  6670  0004B2  ECCA  F011         	call	_oled_putUint16	;wreg free
  6671                           
  6672                           ;MOTEapp.c: 611: oled_putUint8(temperature,12,2);
  6673  0004B6  0E0C               	movlw	12
  6674  0004B8  0100               	movlb	0	; () banked
  6675  0004BA  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  6676  0004BC  0E02               	movlw	2
  6677  0004BE  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  6678  0004C0  5194               	movf	_temperature& (0+255),w,b
  6679  0004C2  EC2C  F01D         	call	_oled_putUint8
  6680                           
  6681                           ;MOTEapp.c: 612: oled_putString("Tx Port #: ",0,1);
  6682  0004C6  0E41               	movlw	low STR_88
  6683  0004C8  0100               	movlb	0	; () banked
  6684  0004CA  6FCB               	movwf	oled_putString@string& (0+255),b
  6685  0004CC  0E7E               	movlw	high STR_88
  6686  0004CE  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6687  0004D0  0E00               	movlw	0
  6688  0004D2  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6689  0004D4  0E01               	movlw	1
  6690  0004D6  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6691  0004D8  EC2E  F01F         	call	_oled_putString	;wreg free
  6692                           
  6693                           ;MOTEapp.c: 613: oled_putUint8(randomPortNum,12,1);
  6694  0004DC  0E0C               	movlw	12
  6695  0004DE  0100               	movlb	0	; () banked
  6696  0004E0  6FD0               	movwf	oled_putUint8@station_dot& (0+255),b
  6697  0004E2  0E01               	movlw	1
  6698  0004E4  6FD1               	movwf	oled_putUint8@start_page& (0+255),b
  6699  0004E6  51AC               	movf	_randomPortNum& (0+255),w,b
  6700  0004E8  EC2C  F01D         	call	_oled_putUint8
  6701                           
  6702                           ;MOTEapp.c: 614: LATAbits.LATA6 = 0;
  6703  0004EC  9C89               	bcf	3977,6,c	;volatile
  6704                           
  6705                           ;MOTEapp.c: 615: runningState = runningUplinkTransmit;
  6706  0004EE  0E08               	movlw	8
  6707  0004F0  0100               	movlb	0	; () banked
  6708  0004F2  6FAE               	movwf	_runningState& (0+255),b
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;MOTEapp.c: 616: }
  6712                           ;MOTEapp.c: 617: break;
  6713  0004F4  0012               	return	
  6714  0004F6                     
  6715                           ; BSR set to: 0
  6716                           ;MOTEapp.c: 619: if ( messageReady )
  6717                           
  6718                           ; BSR set to: 0
  6719  0004F6  51DB               	movf	moteRunningProcess@messageReady& (0+255),w,b
  6720  0004F8  B4D8               	btfsc	status,2,c
  6721  0004FA  D0F8               	goto	l470
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;MOTEapp.c: 620: {
  6725                           ;MOTEapp.c: 621: if(strcmp(moduleResonseBuffer, "ok") == 0)
  6726  0004FC  0E60               	movlw	low _moduleResonseBuffer
  6727  0004FE  6FBE               	movwf	strcmp@s1& (0+255),b
  6728  000500  0E01               	movlw	high _moduleResonseBuffer
  6729  000502  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
  6730  000504  0EF8               	movlw	low STR_43
  6731  000506  6FC0               	movwf	strcmp@s2& (0+255),b
  6732  000508  0E7F               	movlw	high STR_43
  6733  00050A  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
  6734  00050C  EC3D  F021         	call	_strcmp	;wreg free
  6735  000510  0100               	movlb	0	; () banked
  6736  000512  51BE               	movf	?_strcmp& (0+255),w,b
  6737  000514  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
  6738  000516  A4D8               	btfss	status,2,c
  6739  000518  D003               	goto	l471
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;MOTEapp.c: 622: {
  6743                           ;MOTEapp.c: 623: LATAbits.LATA6 = 1;
  6744  00051A  8C89               	bsf	3977,6,c	;volatile
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;MOTEapp.c: 624: runningState = runningUplinkTransmit;
  6748  00051C  0E08               	movlw	8
  6749  00051E  6FAE               	movwf	_runningState& (0+255),b
  6750  000520                     l471:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;MOTEapp.c: 625: }
  6754                           ;MOTEapp.c: 626: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  6755                           
  6756                           ; BSR set to: 0
  6757  000520  0E60               	movlw	low _moduleResonseBuffer
  6758  000522  6FBE               	movwf	strncmp@s1& (0+255),b
  6759  000524  0E01               	movlw	high _moduleResonseBuffer
  6760  000526  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
  6761  000528  0EAB               	movlw	low STR_90
  6762  00052A  6FC0               	movwf	strncmp@s2& (0+255),b
  6763  00052C  0E7F               	movlw	high STR_90
  6764  00052E  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
  6765  000530  0E00               	movlw	0
  6766  000532  6FC3               	movwf	(strncmp@len+1)& (0+255),b
  6767  000534  0E06               	movlw	6
  6768  000536  6FC2               	movwf	strncmp@len& (0+255),b
  6769  000538  EC71  F01D         	call	_strncmp	;wreg free
  6770  00053C  0100               	movlb	0	; () banked
  6771  00053E  51BE               	movf	?_strncmp& (0+255),w,b
  6772  000540  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
  6773  000542  A4D8               	btfss	status,2,c
  6774  000544  D06D               	goto	l472
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;MOTEapp.c: 627: {
  6778                           ;MOTEapp.c: 628: uint8_t bufferReadPos = 7;
  6779  000546  0E07               	movlw	7
  6780  000548  6FE5               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;MOTEapp.c: 631: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  6784  00054A  51E5               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6785  00054C  0D01               	mullw	1
  6786  00054E  0E60               	movlw	low _moduleResonseBuffer
  6787  000550  24F3               	addwf	prodl,w,c
  6788  000552  6ED9               	movwf	fsr2l,c
  6789  000554  0E01               	movlw	high _moduleResonseBuffer
  6790  000556  20F4               	addwfc	prodh,w,c
  6791  000558  6EDA               	movwf	fsr2h,c
  6792  00055A  50DF               	movf	indf2,w,c
  6793  00055C  6FBB               	movwf	_responsePortNum& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796  00055E  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;MOTEapp.c: 632: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  6800  000560  51E5               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6801  000562  0D01               	mullw	1
  6802  000564  0E60               	movlw	low _moduleResonseBuffer
  6803  000566  24F3               	addwf	prodl,w,c
  6804  000568  6ED9               	movwf	fsr2l,c
  6805  00056A  0E01               	movlw	high _moduleResonseBuffer
  6806  00056C  20F4               	addwfc	prodh,w,c
  6807  00056E  6EDA               	movwf	fsr2h,c
  6808  000570  50DF               	movf	indf2,w,c
  6809  000572  6FBC               	movwf	(_responsePortNum+1)& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812  000574  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;MOTEapp.c: 633: if (responsePortNum[1] != ' ')
  6816  000576  0E20               	movlw	32
  6817  000578  19BC               	xorwf	(_responsePortNum+1)& (0+255),w,b
  6818  00057A  B4D8               	btfsc	status,2,c
  6819  00057C  D00F               	goto	l474
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;MOTEapp.c: 634: {
  6823                           ;MOTEapp.c: 635: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  6824  00057E  51E5               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6825  000580  0D01               	mullw	1
  6826  000582  0E60               	movlw	low _moduleResonseBuffer
  6827  000584  24F3               	addwf	prodl,w,c
  6828  000586  6ED9               	movwf	fsr2l,c
  6829  000588  0E01               	movlw	high _moduleResonseBuffer
  6830  00058A  20F4               	addwfc	prodh,w,c
  6831  00058C  6EDA               	movwf	fsr2h,c
  6832  00058E  50DF               	movf	indf2,w,c
  6833  000590  6FBD               	movwf	(_responsePortNum+2)& (0+255),b
  6834                           
  6835                           ; BSR set to: 0
  6836  000592  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;MOTEapp.c: 636: if (responsePortNum[2] != ' ')
  6840  000594  0E20               	movlw	32
  6841  000596  19BD               	xorwf	(_responsePortNum+2)& (0+255),w,b
  6842  000598  A4D8               	btfss	status,2,c
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;MOTEapp.c: 637: {
  6846                           ;MOTEapp.c: 638: bufferReadPos++;
  6847  00059A  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6848  00059C                     l474:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;MOTEapp.c: 639: }
  6852                           ;MOTEapp.c: 640: }
  6853                           ;MOTEapp.c: 642: bufferReadPos++;
  6854                           
  6855                           ; BSR set to: 0
  6856  00059C  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;MOTEapp.c: 644: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  6860  00059E  0E00               	movlw	0
  6861  0005A0  6FE4               	movwf	moteRunningProcess@counter& (0+255),b
  6862  0005A2                     l8617:
  6863                           
  6864                           ; BSR set to: 0
  6865  0005A2  0E3F               	movlw	63
  6866  0005A4  65E4               	cpfsgt	moteRunningProcess@counter& (0+255),b
  6867  0005A6  D001               	goto	l475
  6868  0005A8  D023               	goto	u6890
  6869  0005AA                     l475:
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;MOTEapp.c: 645: {
  6873                           ;MOTEapp.c: 646: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  6874                           
  6875                           ; BSR set to: 0
  6876  0005AA  51E5               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6877  0005AC  0D01               	mullw	1
  6878  0005AE  0E60               	movlw	low _moduleResonseBuffer
  6879  0005B0  24F3               	addwf	prodl,w,c
  6880  0005B2  6ED9               	movwf	fsr2l,c
  6881  0005B4  0E01               	movlw	high _moduleResonseBuffer
  6882  0005B6  20F4               	addwfc	prodh,w,c
  6883  0005B8  6EDA               	movwf	fsr2h,c
  6884  0005BA  51E4               	movf	moteRunningProcess@counter& (0+255),w,b
  6885  0005BC  0D01               	mullw	1
  6886  0005BE  0EA0               	movlw	low _responseData
  6887  0005C0  24F3               	addwf	prodl,w,c
  6888  0005C2  6EE1               	movwf	fsr1l,c
  6889  0005C4  0E01               	movlw	high _responseData
  6890  0005C6  20F4               	addwfc	prodh,w,c
  6891  0005C8  6EE2               	movwf	fsr1h,c
  6892  0005CA  CFDF FFE7          	movff	indf2,indf1
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;MOTEapp.c: 648: if (responseData[counter] != 0x00)
  6896  0005CE  51E4               	movf	moteRunningProcess@counter& (0+255),w,b
  6897  0005D0  0D01               	mullw	1
  6898  0005D2  0EA0               	movlw	low _responseData
  6899  0005D4  24F3               	addwf	prodl,w,c
  6900  0005D6  6ED9               	movwf	fsr2l,c
  6901  0005D8  0E01               	movlw	high _responseData
  6902  0005DA  20F4               	addwfc	prodh,w,c
  6903  0005DC  6EDA               	movwf	fsr2h,c
  6904  0005DE  50DF               	movf	indf2,w,c
  6905  0005E0  B4D8               	btfsc	status,2,c
  6906  0005E2  D002               	goto	l477
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;MOTEapp.c: 649: {
  6910                           ;MOTEapp.c: 650: bufferReadPos++;
  6911  0005E4  2BE5               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6912                           
  6913                           ;MOTEapp.c: 651: } else {
  6914  0005E6  D002               	goto	l478
  6915  0005E8                     l477:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;MOTEapp.c: 652: counter = sizeof(moduleResonseBuffer);
  6919                           
  6920                           ; BSR set to: 0
  6921  0005E8  0E40               	movlw	64
  6922  0005EA  6FE4               	movwf	moteRunningProcess@counter& (0+255),b
  6923  0005EC                     l478:
  6924                           
  6925                           ; BSR set to: 0
  6926                           
  6927                           ; BSR set to: 0
  6928  0005EC  2BE4               	incf	moteRunningProcess@counter& (0+255),f,b
  6929  0005EE  D7D9               	goto	l8617
  6930  0005F0                     u6890:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;MOTEapp.c: 653: }
  6934                           ;MOTEapp.c: 654: }
  6935                           ;MOTEapp.c: 656: LATAbits.LATA7 = 1;
  6936  0005F0  8E89               	bsf	3977,7,c	;volatile
  6937                           
  6938                           ;MOTEapp.c: 657: LATAbits.LATA6 = 0;
  6939  0005F2  9C89               	bcf	3977,6,c	;volatile
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;MOTEapp.c: 659: oled_putString("Server Response ",0,2);
  6943  0005F4  0E55               	movlw	low STR_91
  6944  0005F6  6FCB               	movwf	oled_putString@string& (0+255),b
  6945  0005F8  0E7B               	movlw	high STR_91
  6946  0005FA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6947  0005FC  0E00               	movlw	0
  6948  0005FE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6949  000600  0E02               	movlw	2
  6950  000602  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6951  000604  EC2E  F01F         	call	_oled_putString	;wreg free
  6952                           
  6953                           ;MOTEapp.c: 660: oled_putString("    Received    ",0,3);
  6954  000608  0ECD               	movlw	low STR_92
  6955  00060A  0100               	movlb	0	; () banked
  6956  00060C  6FCB               	movwf	oled_putString@string& (0+255),b
  6957  00060E  0E7A               	movlw	high STR_92
  6958  000610  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  6959  000612  0E00               	movlw	0
  6960  000614  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  6961  000616  0E03               	movlw	3
  6962  000618  6FCE               	movwf	oled_putString@start_page& (0+255),b
  6963  00061A  EC2E  F01F         	call	_oled_putString	;wreg free
  6964                           
  6965                           ;MOTEapp.c: 661: }
  6966  00061E  D05D               	goto	l484
  6967  000620                     l472:
  6968                           
  6969                           ;MOTEapp.c: 662: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  6970  000620  0E60               	movlw	low _moduleResonseBuffer
  6971  000622  0100               	movlb	0	; () banked
  6972  000624  6FBE               	movwf	strncmp@s1& (0+255),b
  6973  000626  0E01               	movlw	high _moduleResonseBuffer
  6974  000628  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
  6975  00062A  0EB2               	movlw	low STR_93
  6976  00062C  6FC0               	movwf	strncmp@s2& (0+255),b
  6977  00062E  0E7F               	movlw	high STR_93
  6978  000630  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
  6979  000632  0E00               	movlw	0
  6980  000634  6FC3               	movwf	(strncmp@len+1)& (0+255),b
  6981  000636  0E06               	movlw	6
  6982  000638  6FC2               	movwf	strncmp@len& (0+255),b
  6983  00063A  EC71  F01D         	call	_strncmp	;wreg free
  6984  00063E  0100               	movlb	0	; () banked
  6985  000640  51BE               	movf	?_strncmp& (0+255),w,b
  6986  000642  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
  6987  000644  A4D8               	btfss	status,2,c
  6988  000646  D00C               	goto	l480
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;MOTEapp.c: 663: {
  6992                           ;MOTEapp.c: 664: LATAbits.LATA6 = 0;
  6993  000648  9C89               	bcf	3977,6,c	;volatile
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;MOTEapp.c: 665: oled_putString("Data Transmitted",0,3);
  6997  00064A  0ECC               	movlw	low STR_94
  6998  00064C  6FCB               	movwf	oled_putString@string& (0+255),b
  6999  00064E  0E7B               	movlw	high STR_94
  7000  000650  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7001  000652  0E00               	movlw	0
  7002  000654  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7003  000656  0E03               	movlw	3
  7004  000658  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7005  00065A  EC2E  F01F         	call	_oled_putString	;wreg free
  7006                           
  7007                           ;MOTEapp.c: 666: }
  7008  00065E  D03D               	goto	l484
  7009  000660                     l480:
  7010                           
  7011                           ;MOTEapp.c: 667: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7012  000660  0E60               	movlw	low _moduleResonseBuffer
  7013  000662  0100               	movlb	0	; () banked
  7014  000664  6FBE               	movwf	strncmp@s1& (0+255),b
  7015  000666  0E01               	movlw	high _moduleResonseBuffer
  7016  000668  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
  7017  00066A  0EA4               	movlw	low STR_95
  7018  00066C  6FC0               	movwf	strncmp@s2& (0+255),b
  7019  00066E  0E7F               	movlw	high STR_95
  7020  000670  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
  7021  000672  0E00               	movlw	0
  7022  000674  6FC3               	movwf	(strncmp@len+1)& (0+255),b
  7023  000676  0E06               	movlw	6
  7024  000678  6FC2               	movwf	strncmp@len& (0+255),b
  7025  00067A  EC71  F01D         	call	_strncmp	;wreg free
  7026  00067E  0100               	movlb	0	; () banked
  7027  000680  51BE               	movf	?_strncmp& (0+255),w,b
  7028  000682  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
  7029  000684  A4D8               	btfss	status,2,c
  7030  000686  D00B               	goto	l482
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;MOTEapp.c: 668: {
  7034                           ;MOTEapp.c: 669: oled_putString("Mac Error Occured",0,3);
  7035  000688  0EAA               	movlw	low STR_96
  7036  00068A  6FCB               	movwf	oled_putString@string& (0+255),b
  7037  00068C  0E7A               	movlw	high STR_96
  7038  00068E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7039  000690  0E00               	movlw	0
  7040  000692  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7041  000694  0E03               	movlw	3
  7042  000696  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7043  000698  EC2E  F01F         	call	_oled_putString	;wreg free
  7044                           
  7045                           ;MOTEapp.c: 670: }
  7046  00069C  D01E               	goto	l484
  7047  00069E                     l482:
  7048                           
  7049                           ;MOTEapp.c: 671: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7050  00069E  0E60               	movlw	low _moduleResonseBuffer
  7051  0006A0  0100               	movlb	0	; () banked
  7052  0006A2  6FBE               	movwf	strncmp@s1& (0+255),b
  7053  0006A4  0E01               	movlw	high _moduleResonseBuffer
  7054  0006A6  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
  7055  0006A8  0E9D               	movlw	low STR_97
  7056  0006AA  6FC0               	movwf	strncmp@s2& (0+255),b
  7057  0006AC  0E7F               	movlw	high STR_97
  7058  0006AE  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
  7059  0006B0  0E00               	movlw	0
  7060  0006B2  6FC3               	movwf	(strncmp@len+1)& (0+255),b
  7061  0006B4  0E06               	movlw	6
  7062  0006B6  6FC2               	movwf	strncmp@len& (0+255),b
  7063  0006B8  EC71  F01D         	call	_strncmp	;wreg free
  7064  0006BC  0100               	movlb	0	; () banked
  7065  0006BE  51BE               	movf	?_strncmp& (0+255),w,b
  7066  0006C0  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
  7067  0006C2  A4D8               	btfss	status,2,c
  7068  0006C4  D00A               	goto	l484
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;MOTEapp.c: 672: {
  7072                           ;MOTEapp.c: 673: oled_putString("No Free Channel",0,3);
  7073  0006C6  0EB4               	movlw	low STR_98
  7074  0006C8  6FCB               	movwf	oled_putString@string& (0+255),b
  7075  0006CA  0E7C               	movlw	high STR_98
  7076  0006CC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7077  0006CE  0E00               	movlw	0
  7078  0006D0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7079  0006D2  0E03               	movlw	3
  7080  0006D4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7081  0006D6  EC2E  F01F         	call	_oled_putString	;wreg free
  7082  0006DA                     l484:
  7083                           
  7084                           ;MOTEapp.c: 674: }
  7085                           ;MOTEapp.c: 675: _delay((unsigned long)((16)*(48000000/4000.0)));
  7086  0006DA  0EFA               	movlw	250
  7087  0006DC  0100               	movlb	0	; () banked
  7088  0006DE  6FDD               	movwf	??_moteRunningProcess& (0+255),b
  7089  0006E0  0E58               	movlw	88
  7090  0006E2                     u8517:
  7091  0006E2  2EE8               	decfsz	wreg,f,c
  7092  0006E4  D7FE               	bra	u8517
  7093  0006E6  2FDD               	decfsz	??_moteRunningProcess& (0+255),f,b
  7094  0006E8  D7FC               	bra	u8517
  7095  0006EA  F000               	nop	
  7096  0006EC                     l470:
  7097                           
  7098                           ;MOTEapp.c: 676: }
  7099                           ;MOTEapp.c: 677: if ( (changeStates) || (selectButton) )
  7100  0006EC  0100               	movlb	0	; () banked
  7101  0006EE  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7102  0006F0  A4D8               	btfss	status,2,c
  7103  0006F2  D003               	goto	u6940
  7104                           
  7105                           ; BSR set to: 0
  7106  0006F4  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7107  0006F6  B4D8               	btfsc	status,2,c
  7108  0006F8  0012               	return	
  7109  0006FA                     u6940:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;MOTEapp.c: 678: {
  7113                           ;MOTEapp.c: 679: oled_clear();
  7114                           
  7115                           ; BSR set to: 0
  7116  0006FA  EC88  F024         	call	_oled_clear	;wreg free
  7117                           
  7118                           ;MOTEapp.c: 680: oled_putString("  Issue Uplink  ",0,0);
  7119  0006FE  0E22               	movlw	low STR_75
  7120  000700  0100               	movlb	0	; () banked
  7121  000702  6FCB               	movwf	oled_putString@string& (0+255),b
  7122  000704  0E7B               	movlw	high STR_75
  7123  000706  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7124  000708  0E00               	movlw	0
  7125  00070A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7126  00070C  0E00               	movlw	0
  7127  00070E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7128  000710  EC2E  F01F         	call	_oled_putString	;wreg free
  7129                           
  7130                           ;MOTEapp.c: 681: oled_putString(" LoRaWAN Packet ",0,1);
  7131  000714  0E88               	movlw	low STR_76
  7132  000716  0100               	movlb	0	; () banked
  7133  000718  6FCB               	movwf	oled_putString@string& (0+255),b
  7134  00071A  0E7B               	movlw	high STR_76
  7135  00071C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7136  00071E  0E00               	movlw	0
  7137  000720  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7138  000722  0E01               	movlw	1
  7139  000724  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7140  000726  EC2E  F01F         	call	_oled_putString	;wreg free
  7141                           
  7142                           ;MOTEapp.c: 682: oled_putString("(NAV)    (SEL) ",0,3);
  7143  00072A  0E84               	movlw	low STR_73
  7144  00072C  0100               	movlb	0	; () banked
  7145  00072E  6FCB               	movwf	oled_putString@string& (0+255),b
  7146  000730  0E7C               	movlw	high STR_73
  7147  000732  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7148  000734  0E00               	movlw	0
  7149  000736  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7150  000738  0E03               	movlw	3
  7151  00073A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7152  00073C  EC2E  F01F         	call	_oled_putString	;wreg free
  7153                           
  7154                           ;MOTEapp.c: 683: runningState = runningUplink;
  7155  000740  0E06               	movlw	6
  7156  000742  0100               	movlb	0	; () banked
  7157  000744  6FAE               	movwf	_runningState& (0+255),b
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;MOTEapp.c: 684: }
  7161                           ;MOTEapp.c: 685: break;
  7162  000746  0012               	return	
  7163  000748                     
  7164                           ; BSR set to: 0
  7165                           ;MOTEapp.c: 687: if (changeStates)
  7166                           
  7167                           ; BSR set to: 0
  7168  000748  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7169  00074A  B4D8               	btfsc	status,2,c
  7170  00074C  D027               	goto	l489
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;MOTEapp.c: 688: {
  7174                           ;MOTEapp.c: 689: oled_clear();
  7175  00074E  EC88  F024         	call	_oled_clear	;wreg free
  7176                           
  7177                           ;MOTEapp.c: 690: oled_putString("  Sensor Data  ",0,0);
  7178  000752  0E64               	movlw	low STR_102
  7179  000754  0100               	movlb	0	; () banked
  7180  000756  6FCB               	movwf	oled_putString@string& (0+255),b
  7181  000758  0E7C               	movlw	high STR_102
  7182  00075A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7183  00075C  0E00               	movlw	0
  7184  00075E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7185  000760  0E00               	movlw	0
  7186  000762  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7187  000764  EC2E  F01F         	call	_oled_putString	;wreg free
  7188                           
  7189                           ;MOTEapp.c: 691: oled_putString("    Display    ",0,1);
  7190  000768  0E54               	movlw	low STR_103
  7191  00076A  0100               	movlb	0	; () banked
  7192  00076C  6FCB               	movwf	oled_putString@string& (0+255),b
  7193  00076E  0E7C               	movlw	high STR_103
  7194  000770  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7195  000772  0E00               	movlw	0
  7196  000774  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7197  000776  0E01               	movlw	1
  7198  000778  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7199  00077A  EC2E  F01F         	call	_oled_putString	;wreg free
  7200                           
  7201                           ;MOTEapp.c: 692: oled_putString("(NAV)    (SEL) ",0,3);
  7202  00077E  0E84               	movlw	low STR_73
  7203  000780  0100               	movlb	0	; () banked
  7204  000782  6FCB               	movwf	oled_putString@string& (0+255),b
  7205  000784  0E7C               	movlw	high STR_73
  7206  000786  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7207  000788  0E00               	movlw	0
  7208  00078A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7209  00078C  0E03               	movlw	3
  7210  00078E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7211  000790  EC2E  F01F         	call	_oled_putString	;wreg free
  7212                           
  7213                           ;MOTEapp.c: 693: runningState = runningSensor;
  7214  000794  0E01               	movlw	1
  7215  000796  0100               	movlb	0	; () banked
  7216  000798  6FAE               	movwf	_runningState& (0+255),b
  7217                           
  7218                           ;MOTEapp.c: 694: }
  7219  00079A  0012               	return	
  7220  00079C                     l489:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;MOTEapp.c: 695: else if (selectButton)
  7224                           
  7225                           ; BSR set to: 0
  7226  00079C  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7227  00079E  B4D8               	btfsc	status,2,c
  7228  0007A0  0012               	return	
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;MOTEapp.c: 696: {
  7232                           ;MOTEapp.c: 697: oled_clear();
  7233  0007A2  EC88  F024         	call	_oled_clear	;wreg free
  7234                           
  7235                           ;MOTEapp.c: 699: LATAbits.LATA7 = 0;
  7236  0007A6  9E89               	bcf	3977,7,c	;volatile
  7237                           
  7238                           ;MOTEapp.c: 701: oled_putString("Downlink Display",0,0);
  7239  0007A8  0E43               	movlw	low STR_105
  7240  0007AA  0100               	movlb	0	; () banked
  7241  0007AC  6FCB               	movwf	oled_putString@string& (0+255),b
  7242  0007AE  0E7C               	movlw	high STR_105
  7243  0007B0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7244  0007B2  0E00               	movlw	0
  7245  0007B4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7246  0007B6  0E00               	movlw	0
  7247  0007B8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7248  0007BA  EC2E  F01F         	call	_oled_putString	;wreg free
  7249                           
  7250                           ;MOTEapp.c: 703: oled_putString("Rx Port# ",0,1);
  7251  0007BE  0ECB               	movlw	low STR_106
  7252  0007C0  0100               	movlb	0	; () banked
  7253  0007C2  6FCB               	movwf	oled_putString@string& (0+255),b
  7254  0007C4  0E7E               	movlw	high STR_106
  7255  0007C6  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7256  0007C8  0E00               	movlw	0
  7257  0007CA  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7258  0007CC  0E01               	movlw	1
  7259  0007CE  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7260  0007D0  EC2E  F01F         	call	_oled_putString	;wreg free
  7261                           
  7262                           ;MOTEapp.c: 704: oled_putString(&responsePortNum,9,1);
  7263  0007D4  0EBB               	movlw	low _responsePortNum
  7264  0007D6  0100               	movlb	0	; () banked
  7265  0007D8  6FCB               	movwf	oled_putString@string& (0+255),b
  7266  0007DA  0E00               	movlw	high _responsePortNum
  7267  0007DC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7268  0007DE  0E09               	movlw	9
  7269  0007E0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7270  0007E2  0E01               	movlw	1
  7271  0007E4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7272  0007E6  EC2E  F01F         	call	_oled_putString	;wreg free
  7273                           
  7274                           ;MOTEapp.c: 706: oled_putString("Data: ",0,2);
  7275  0007EA  0E52               	movlw	low (STR_86+5)
  7276  0007EC  0100               	movlb	0	; () banked
  7277  0007EE  6FCB               	movwf	oled_putString@string& (0+255),b
  7278  0007F0  0E7E               	movlw	high (STR_86+5)
  7279  0007F2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7280  0007F4  0E00               	movlw	0
  7281  0007F6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7282  0007F8  0E02               	movlw	2
  7283  0007FA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7284  0007FC  EC2E  F01F         	call	_oled_putString	;wreg free
  7285                           
  7286                           ;MOTEapp.c: 707: oled_putString(&responseData[0],6,2);
  7287  000800  0EA0               	movlw	low _responseData
  7288  000802  0100               	movlb	0	; () banked
  7289  000804  6FCB               	movwf	oled_putString@string& (0+255),b
  7290  000806  0E01               	movlw	high _responseData
  7291  000808  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7292  00080A  0E06               	movlw	6
  7293  00080C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7294  00080E  0E02               	movlw	2
  7295  000810  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7296  000812  EC2E  F01F         	call	_oled_putString	;wreg free
  7297                           
  7298                           ;MOTEapp.c: 709: oled_putString(&responseData[10],0,3);
  7299  000816  0EAA               	movlw	low (_responseData+10)
  7300  000818  0100               	movlb	0	; () banked
  7301  00081A  6FCB               	movwf	oled_putString@string& (0+255),b
  7302  00081C  0E01               	movlw	high (_responseData+10)
  7303  00081E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7304  000820  0E00               	movlw	0
  7305  000822  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7306  000824  0E03               	movlw	3
  7307  000826  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7308  000828  EC2E  F01F         	call	_oled_putString	;wreg free
  7309                           
  7310                           ;MOTEapp.c: 711: runningState = runningDownlinkDisplay;
  7311  00082C  0E0B               	movlw	11
  7312  00082E  0100               	movlb	0	; () banked
  7313  000830  6FAE               	movwf	_runningState& (0+255),b
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;MOTEapp.c: 712: }
  7317                           ;MOTEapp.c: 713: break;
  7318                           
  7319                           ; BSR set to: 0
  7320  000832  0012               	return	
  7321  000834                     
  7322                           ; BSR set to: 0
  7323                           ;MOTEapp.c: 715: if ( (changeStates) || (selectButton) )
  7324                           
  7325                           ; BSR set to: 0
  7326  000834  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7327  000836  A4D8               	btfss	status,2,c
  7328  000838  D003               	goto	u6980
  7329                           
  7330                           ; BSR set to: 0
  7331  00083A  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7332  00083C  B4D8               	btfsc	status,2,c
  7333  00083E  0012               	return	
  7334  000840                     u6980:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;MOTEapp.c: 716: {
  7338                           ;MOTEapp.c: 717: oled_clear();
  7339                           
  7340                           ; BSR set to: 0
  7341  000840  EC88  F024         	call	_oled_clear	;wreg free
  7342                           
  7343                           ;MOTEapp.c: 718: oled_putString(" View Downlink  ",0,0);
  7344  000844  0E11               	movlw	low STR_78
  7345  000846  0100               	movlb	0	; () banked
  7346  000848  6FCB               	movwf	oled_putString@string& (0+255),b
  7347  00084A  0E7B               	movlw	high STR_78
  7348  00084C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7349  00084E  0E00               	movlw	0
  7350  000850  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7351  000852  0E00               	movlw	0
  7352  000854  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7353  000856  EC2E  F01F         	call	_oled_putString	;wreg free
  7354                           
  7355                           ;MOTEapp.c: 719: oled_putString("  Last Message  ",0,1);
  7356  00085A  0E00               	movlw	low STR_79
  7357  00085C  0100               	movlb	0	; () banked
  7358  00085E  6FCB               	movwf	oled_putString@string& (0+255),b
  7359  000860  0E7B               	movlw	high STR_79
  7360  000862  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7361  000864  0E00               	movlw	0
  7362  000866  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7363  000868  0E01               	movlw	1
  7364  00086A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7365  00086C  EC2E  F01F         	call	_oled_putString	;wreg free
  7366                           
  7367                           ;MOTEapp.c: 720: oled_putString("(NAV)    (SEL) ",0,3);
  7368  000870  0E84               	movlw	low STR_73
  7369  000872  0100               	movlb	0	; () banked
  7370  000874  6FCB               	movwf	oled_putString@string& (0+255),b
  7371  000876  0E7C               	movlw	high STR_73
  7372  000878  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7373  00087A  0E00               	movlw	0
  7374  00087C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7375  00087E  0E03               	movlw	3
  7376  000880  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7377  000882  EC2E  F01F         	call	_oled_putString	;wreg free
  7378                           
  7379                           ;MOTEapp.c: 721: runningState = runningDownlink;
  7380  000886  0E0A               	movlw	10
  7381  000888  0100               	movlb	0	; () banked
  7382  00088A  6FAE               	movwf	_runningState& (0+255),b
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;MOTEapp.c: 722: }
  7386                           ;MOTEapp.c: 723: break;
  7387  00088C  0012               	return	
  7388  00088E                     
  7389                           ; BSR set to: 0
  7390                           ;MOTEapp.c: 725: if (changeStates)
  7391                           
  7392                           ; BSR set to: 0
  7393  00088E  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7394  000890  B4D8               	btfsc	status,2,c
  7395  000892  D036               	goto	l497
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MOTEapp.c: 726: {
  7399                           ;MOTEapp.c: 727: oled_clear();
  7400  000894  EC88  F024         	call	_oled_clear	;wreg free
  7401                           
  7402                           ;MOTEapp.c: 728: oled_putString("Menu Has Timeout", 0, 0);
  7403  000898  0E32               	movlw	low STR_111
  7404  00089A  0100               	movlb	0	; () banked
  7405  00089C  6FCB               	movwf	oled_putString@string& (0+255),b
  7406  00089E  0E7C               	movlw	high STR_111
  7407  0008A0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7408  0008A2  0E00               	movlw	0
  7409  0008A4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7410  0008A6  0E00               	movlw	0
  7411  0008A8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7412  0008AA  EC2E  F01F         	call	_oled_putString	;wreg free
  7413                           
  7414                           ;MOTEapp.c: 729: if (menuTimeout)
  7415  0008AE  0100               	movlb	0	; () banked
  7416  0008B0  51F6               	movf	_menuTimeout& (0+255),w,b
  7417  0008B2  B4D8               	btfsc	status,2,c
  7418  0008B4  D00B               	goto	l498
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;MOTEapp.c: 730: oled_putString("    Enabled   ", 0,2);
  7422  0008B6  0ED4               	movlw	low STR_112
  7423  0008B8  6FCB               	movwf	oled_putString@string& (0+255),b
  7424  0008BA  0E7C               	movlw	high STR_112
  7425  0008BC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7426  0008BE  0E00               	movlw	0
  7427  0008C0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7428  0008C2  0E02               	movlw	2
  7429  0008C4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7430  0008C6  EC2E  F01F         	call	_oled_putString	;wreg free
  7431  0008CA  D00B               	goto	l499
  7432  0008CC                     l498:
  7433                           
  7434                           ;MOTEapp.c: 731: else
  7435                           ;MOTEapp.c: 732: oled_putString("    Disabled  ", 0,2);
  7436  0008CC  0EE3               	movlw	low STR_113
  7437  0008CE  0100               	movlb	0	; () banked
  7438  0008D0  6FCB               	movwf	oled_putString@string& (0+255),b
  7439  0008D2  0E7C               	movlw	high STR_113
  7440  0008D4  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7441  0008D6  0E00               	movlw	0
  7442  0008D8  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7443  0008DA  0E02               	movlw	2
  7444  0008DC  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7445  0008DE  EC2E  F01F         	call	_oled_putString	;wreg free
  7446  0008E2                     l499:
  7447                           
  7448                           ;MOTEapp.c: 733: oled_putString("(NAV)    (CNG) ",0,3);
  7449  0008E2  0E74               	movlw	low STR_114
  7450  0008E4  0100               	movlb	0	; () banked
  7451  0008E6  6FCB               	movwf	oled_putString@string& (0+255),b
  7452  0008E8  0E7C               	movlw	high STR_114
  7453  0008EA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7454  0008EC  0E00               	movlw	0
  7455  0008EE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7456  0008F0  0E03               	movlw	3
  7457  0008F2  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7458  0008F4  EC2E  F01F         	call	_oled_putString	;wreg free
  7459                           
  7460                           ;MOTEapp.c: 734: runningState = runningMenuTimeout;
  7461  0008F8  0E0C               	movlw	12
  7462  0008FA  0100               	movlb	0	; () banked
  7463  0008FC  6FAE               	movwf	_runningState& (0+255),b
  7464                           
  7465                           ;MOTEapp.c: 735: }
  7466  0008FE  0012               	return	
  7467  000900                     l497:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;MOTEapp.c: 736: else if (selectButton)
  7471                           
  7472                           ; BSR set to: 0
  7473  000900  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7474  000902  B4D8               	btfsc	status,2,c
  7475  000904  0012               	return	
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;MOTEapp.c: 737: {
  7479                           ;MOTEapp.c: 738: oled_clear();
  7480  000906  EC88  F024         	call	_oled_clear	;wreg free
  7481                           
  7482                           ;MOTEapp.c: 739: oled_putString("  Sensor Data  ",0,0);
  7483  00090A  0E64               	movlw	low STR_102
  7484  00090C  0100               	movlb	0	; () banked
  7485  00090E  6FCB               	movwf	oled_putString@string& (0+255),b
  7486  000910  0E7C               	movlw	high STR_102
  7487  000912  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7488  000914  0E00               	movlw	0
  7489  000916  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7490  000918  0E00               	movlw	0
  7491  00091A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7492  00091C  EC2E  F01F         	call	_oled_putString	;wreg free
  7493                           
  7494                           ;MOTEapp.c: 740: oled_putString("Light:",0,1);
  7495  000920  0E81               	movlw	low STR_116
  7496  000922  0100               	movlb	0	; () banked
  7497  000924  6FCB               	movwf	oled_putString@string& (0+255),b
  7498  000926  0E7F               	movlw	high STR_116
  7499  000928  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7500  00092A  0E00               	movlw	0
  7501  00092C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7502  00092E  0E01               	movlw	1
  7503  000930  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7504  000932  EC2E  F01F         	call	_oled_putString	;wreg free
  7505                           
  7506                           ;MOTEapp.c: 741: oled_putString("Temp :",0,2);
  7507  000936  0E7A               	movlw	low STR_117
  7508  000938  0100               	movlb	0	; () banked
  7509  00093A  6FCB               	movwf	oled_putString@string& (0+255),b
  7510  00093C  0E7F               	movlw	high STR_117
  7511  00093E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7512  000940  0E00               	movlw	0
  7513  000942  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7514  000944  0E02               	movlw	2
  7515  000946  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7516  000948  EC2E  F01F         	call	_oled_putString	;wreg free
  7517                           
  7518                           ;MOTEapp.c: 742: oled_putString("C",12,2);
  7519  00094C  0EFB               	movlw	low STR_118
  7520  00094E  0100               	movlb	0	; () banked
  7521  000950  6FCB               	movwf	oled_putString@string& (0+255),b
  7522  000952  0E7F               	movlw	high STR_118
  7523  000954  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7524  000956  0E0C               	movlw	12
  7525  000958  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7526  00095A  0E02               	movlw	2
  7527  00095C  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7528  00095E  EC2E  F01F         	call	_oled_putString	;wreg free
  7529                           
  7530                           ;MOTEapp.c: 743: if (temperature)
  7531  000962  0100               	movlb	0	; () banked
  7532  000964  5194               	movf	_temperature& (0+255),w,b
  7533  000966  1195               	iorwf	(_temperature+1)& (0+255),w,b
  7534  000968  B4D8               	btfsc	status,2,c
  7535  00096A  D015               	goto	l502
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;MOTEapp.c: 744: {
  7539                           ;MOTEapp.c: 745: oled_putUint16(light,6,1);
  7540  00096C  C096  F0D0         	movff	_light,oled_putUint16@number
  7541  000970  C097  F0D1         	movff	_light+1,oled_putUint16@number+1
  7542  000974  0E06               	movlw	6
  7543  000976  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  7544  000978  0E01               	movlw	1
  7545  00097A  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  7546  00097C  ECCA  F011         	call	_oled_putUint16	;wreg free
  7547                           
  7548                           ;MOTEapp.c: 746: oled_putUint16(temperature,6,2);
  7549  000980  C094  F0D0         	movff	_temperature,oled_putUint16@number
  7550  000984  C095  F0D1         	movff	_temperature+1,oled_putUint16@number+1
  7551  000988  0E06               	movlw	6
  7552  00098A  0100               	movlb	0	; () banked
  7553  00098C  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  7554  00098E  0E02               	movlw	2
  7555  000990  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  7556  000992  ECCA  F011         	call	_oled_putUint16	;wreg free
  7557  000996                     l502:
  7558                           
  7559                           ;MOTEapp.c: 747: }
  7560                           ;MOTEapp.c: 748: runningState = runningSensorMenu;
  7561  000996  0E02               	movlw	2
  7562  000998  0100               	movlb	0	; () banked
  7563  00099A  6FAE               	movwf	_runningState& (0+255),b
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;MOTEapp.c: 749: }
  7567                           ;MOTEapp.c: 750: break;
  7568                           
  7569                           ; BSR set to: 0
  7570  00099C  0012               	return	
  7571  00099E                     
  7572                           ; BSR set to: 0
  7573                           ;MOTEapp.c: 752: if (changeStates)
  7574                           
  7575                           ; BSR set to: 0
  7576  00099E  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7577  0009A0  B4D8               	btfsc	status,2,c
  7578  0009A2  D09B               	goto	l504
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;MOTEapp.c: 753: {
  7582                           ;MOTEapp.c: 754: oled_clear();
  7583  0009A4  EC88  F024         	call	_oled_clear	;wreg free
  7584                           
  7585                           ;MOTEapp.c: 755: oled_putString("Periodic Uplink ",0,0);
  7586  0009A8  0E77               	movlw	low STR_119
  7587  0009AA  0100               	movlb	0	; () banked
  7588  0009AC  6FCB               	movwf	oled_putString@string& (0+255),b
  7589  0009AE  0E7B               	movlw	high STR_119
  7590  0009B0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7591  0009B2  0E00               	movlw	0
  7592  0009B4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7593  0009B6  0E00               	movlw	0
  7594  0009B8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7595  0009BA  EC2E  F01F         	call	_oled_putString	;wreg free
  7596                           
  7597                           ;MOTEapp.c: 756: oled_putString("Tx Event Timing ",0,1);
  7598  0009BE  0E66               	movlw	low STR_120
  7599  0009C0  0100               	movlb	0	; () banked
  7600  0009C2  6FCB               	movwf	oled_putString@string& (0+255),b
  7601  0009C4  0E7B               	movlw	high STR_120
  7602  0009C6  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7603  0009C8  0E00               	movlw	0
  7604  0009CA  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7605  0009CC  0E01               	movlw	1
  7606  0009CE  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7607  0009D0  EC2E  F01F         	call	_oled_putString	;wreg free
  7608                           
  7609                           ;MOTEapp.c: 757: oled_putString("Every:",0,2);
  7610  0009D4  0E88               	movlw	low STR_121
  7611  0009D6  0100               	movlb	0	; () banked
  7612  0009D8  6FCB               	movwf	oled_putString@string& (0+255),b
  7613  0009DA  0E7F               	movlw	high STR_121
  7614  0009DC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7615  0009DE  0E00               	movlw	0
  7616  0009E0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7617  0009E2  0E02               	movlw	2
  7618  0009E4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7619  0009E6  EC2E  F01F         	call	_oled_putString	;wreg free
  7620                           
  7621                           ;MOTEapp.c: 758: oled_putString("Mins",12,2);
  7622  0009EA  0EC3               	movlw	low STR_122
  7623  0009EC  0100               	movlb	0	; () banked
  7624  0009EE  6FCB               	movwf	oled_putString@string& (0+255),b
  7625  0009F0  0E7F               	movlw	high STR_122
  7626  0009F2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7627  0009F4  0E0C               	movlw	12
  7628  0009F6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7629  0009F8  0E02               	movlw	2
  7630  0009FA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7631  0009FC  EC2E  F01F         	call	_oled_putString	;wreg free
  7632                           
  7633                           ;MOTEapp.c: 760: switch (periodicUpValue)
  7634  000A00  D048               	goto	l505
  7635  000A02                     
  7636                           ;MOTEapp.c: 764: oled_putString("5",7,2);
  7637                           
  7638                           ;MOTEapp.c: 763: case 0:
  7639  000A02  0ECC               	movlw	low (STR_169+11)
  7640  000A04  0100               	movlb	0	; () banked
  7641  000A06  6FCB               	movwf	oled_putString@string& (0+255),b
  7642  000A08  0E7D               	movlw	high (STR_169+11)
  7643  000A0A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7644  000A0C  0E07               	movlw	7
  7645  000A0E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7646  000A10  0E02               	movlw	2
  7647  000A12  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7648  000A14  EC2E  F01F         	call	_oled_putString	;wreg free
  7649                           
  7650                           ;MOTEapp.c: 765: break;
  7651  000A18  D051               	goto	l508
  7652  000A1A                     
  7653                           ;MOTEapp.c: 767: oled_putString("10",7,2);
  7654  000A1A  0EE1               	movlw	low (STR_146+1)
  7655  000A1C  0100               	movlb	0	; () banked
  7656  000A1E  6FCB               	movwf	oled_putString@string& (0+255),b
  7657  000A20  0E7F               	movlw	high (STR_146+1)
  7658  000A22  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7659  000A24  0E07               	movlw	7
  7660  000A26  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7661  000A28  0E02               	movlw	2
  7662  000A2A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7663  000A2C  EC2E  F01F         	call	_oled_putString	;wreg free
  7664                           
  7665                           ;MOTEapp.c: 768: break;
  7666  000A30  D045               	goto	l508
  7667  000A32                     
  7668                           ;MOTEapp.c: 770: oled_putString("15",7,2);
  7669  000A32  0EED               	movlw	low (STR_147+1)
  7670  000A34  0100               	movlb	0	; () banked
  7671  000A36  6FCB               	movwf	oled_putString@string& (0+255),b
  7672  000A38  0E7F               	movlw	high (STR_147+1)
  7673  000A3A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7674  000A3C  0E07               	movlw	7
  7675  000A3E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7676  000A40  0E02               	movlw	2
  7677  000A42  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7678  000A44  EC2E  F01F         	call	_oled_putString	;wreg free
  7679                           
  7680                           ;MOTEapp.c: 771: break;
  7681  000A48  D039               	goto	l508
  7682  000A4A                     
  7683                           ;MOTEapp.c: 773: oled_putString("30",7,2);
  7684  000A4A  0EE5               	movlw	low (STR_148+1)
  7685  000A4C  0100               	movlb	0	; () banked
  7686  000A4E  6FCB               	movwf	oled_putString@string& (0+255),b
  7687  000A50  0E7F               	movlw	high (STR_148+1)
  7688  000A52  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7689  000A54  0E07               	movlw	7
  7690  000A56  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7691  000A58  0E02               	movlw	2
  7692  000A5A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7693  000A5C  EC2E  F01F         	call	_oled_putString	;wreg free
  7694                           
  7695                           ;MOTEapp.c: 774: break;
  7696  000A60  D02D               	goto	l508
  7697  000A62                     
  7698                           ;MOTEapp.c: 776: oled_putString("60",7,2);
  7699  000A62  0EE9               	movlw	low (STR_149+1)
  7700  000A64  0100               	movlb	0	; () banked
  7701  000A66  6FCB               	movwf	oled_putString@string& (0+255),b
  7702  000A68  0E7F               	movlw	high (STR_149+1)
  7703  000A6A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7704  000A6C  0E07               	movlw	7
  7705  000A6E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7706  000A70  0E02               	movlw	2
  7707  000A72  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7708  000A74  EC2E  F01F         	call	_oled_putString	;wreg free
  7709                           
  7710                           ;MOTEapp.c: 777: break;
  7711  000A78  D021               	goto	l508
  7712  000A7A                     
  7713                           ;MOTEapp.c: 779: oled_putString("OFF",7,2);
  7714  000A7A  0EF0               	movlw	low STR_128
  7715  000A7C  0100               	movlb	0	; () banked
  7716  000A7E  6FCB               	movwf	oled_putString@string& (0+255),b
  7717  000A80  0E7F               	movlw	high STR_128
  7718  000A82  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7719  000A84  0E07               	movlw	7
  7720  000A86  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7721  000A88  0E02               	movlw	2
  7722  000A8A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7723  000A8C  EC2E  F01F         	call	_oled_putString	;wreg free
  7724                           
  7725                           ;MOTEapp.c: 781: }
  7726                           
  7727                           ;MOTEapp.c: 780: break;
  7728  000A90  D015               	goto	l508
  7729  000A92                     l505:
  7730  000A92  0100               	movlb	0	; () banked
  7731  000A94  51F9               	movf	_periodicUpValue& (0+255),w,b
  7732                           
  7733                           ; Switch size 1, requested type "space"
  7734                           ; Number of cases is 6, Range of values is 0 to 5
  7735                           ; switch strategies available:
  7736                           ; Name         Instructions Cycles
  7737                           ; simple_byte           19    10 (average)
  7738                           ;	Chosen strategy is simple_byte
  7739  000A96  0A00               	xorlw	0	; case 0
  7740  000A98  B4D8               	btfsc	status,2,c
  7741  000A9A  D7B3               	goto	l506
  7742  000A9C  0A01               	xorlw	1	; case 1
  7743  000A9E  B4D8               	btfsc	status,2,c
  7744  000AA0  D7BC               	goto	l509
  7745  000AA2  0A03               	xorlw	3	; case 2
  7746  000AA4  B4D8               	btfsc	status,2,c
  7747  000AA6  D7C5               	goto	l510
  7748  000AA8  0A01               	xorlw	1	; case 3
  7749  000AAA  B4D8               	btfsc	status,2,c
  7750  000AAC  D7CE               	goto	l511
  7751  000AAE  0A07               	xorlw	7	; case 4
  7752  000AB0  B4D8               	btfsc	status,2,c
  7753  000AB2  D7D7               	goto	l512
  7754  000AB4  0A01               	xorlw	1	; case 5
  7755  000AB6  B4D8               	btfsc	status,2,c
  7756  000AB8  D7E0               	goto	l513
  7757  000ABA  D7A3               	goto	l506
  7758  000ABC                     l508:
  7759                           
  7760                           ;MOTEapp.c: 782: oled_putString("(NAV)    (CNG) ",0,3);
  7761                           
  7762                           ; BSR set to: 0
  7763  000ABC  0E74               	movlw	low STR_114
  7764  000ABE  0100               	movlb	0	; () banked
  7765  000AC0  6FCB               	movwf	oled_putString@string& (0+255),b
  7766  000AC2  0E7C               	movlw	high STR_114
  7767  000AC4  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7768  000AC6  0E00               	movlw	0
  7769  000AC8  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7770  000ACA  0E03               	movlw	3
  7771  000ACC  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7772  000ACE  EC2E  F01F         	call	_oled_putString	;wreg free
  7773                           
  7774                           ;MOTEapp.c: 783: runningState = runningPeriodicWakeUpLength;
  7775  000AD2  0E0D               	movlw	13
  7776  000AD4  0100               	movlb	0	; () banked
  7777  000AD6  6FAE               	movwf	_runningState& (0+255),b
  7778                           
  7779                           ;MOTEapp.c: 784: }
  7780  000AD8  0012               	return	
  7781  000ADA                     l504:
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;MOTEapp.c: 785: else if (selectButton)
  7785                           
  7786                           ; BSR set to: 0
  7787  000ADA  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7788  000ADC  B4D8               	btfsc	status,2,c
  7789  000ADE  0012               	return	
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;MOTEapp.c: 786: {
  7793                           ;MOTEapp.c: 787: if (menuTimeout)
  7794  000AE0  51F6               	movf	_menuTimeout& (0+255),w,b
  7795  000AE2  B4D8               	btfsc	status,2,c
  7796  000AE4  D00D               	goto	l516
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;MOTEapp.c: 788: {
  7800                           ;MOTEapp.c: 789: menuTimeout = 0;
  7801  000AE6  0E00               	movlw	0
  7802  000AE8  6FF6               	movwf	_menuTimeout& (0+255),b
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;MOTEapp.c: 790: oled_putString("    Disabled  ", 0,2);
  7806  000AEA  0EE3               	movlw	low STR_113
  7807  000AEC  6FCB               	movwf	oled_putString@string& (0+255),b
  7808  000AEE  0E7C               	movlw	high STR_113
  7809  000AF0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7810  000AF2  0E00               	movlw	0
  7811  000AF4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7812  000AF6  0E02               	movlw	2
  7813  000AF8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7814  000AFA  EC2E  F01F         	call	_oled_putString	;wreg free
  7815                           
  7816                           ;MOTEapp.c: 791: }
  7817  000AFE  0012               	return	
  7818  000B00                     l516:
  7819                           
  7820                           ;MOTEapp.c: 792: else
  7821                           ;MOTEapp.c: 793: {
  7822                           ;MOTEapp.c: 794: menuTimeout = 1;
  7823  000B00  0E01               	movlw	1
  7824  000B02  0100               	movlb	0	; () banked
  7825  000B04  6FF6               	movwf	_menuTimeout& (0+255),b
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;MOTEapp.c: 795: oled_putString("    Enabled   ", 0,2);
  7829  000B06  0ED4               	movlw	low STR_112
  7830  000B08  6FCB               	movwf	oled_putString@string& (0+255),b
  7831  000B0A  0E7C               	movlw	high STR_112
  7832  000B0C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7833  000B0E  0E00               	movlw	0
  7834  000B10  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7835  000B12  0E02               	movlw	2
  7836  000B14  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7837  000B16  EC2E  F01F         	call	_oled_putString	;wreg free
  7838                           
  7839                           ;MOTEapp.c: 796: }
  7840                           ;MOTEapp.c: 797: }
  7841                           ;MOTEapp.c: 798: break;
  7842  000B1A  0012               	return	
  7843  000B1C                     
  7844                           ;MOTEapp.c: 800: oled_putUint16(light,6,1);
  7845  000B1C  C096  F0D0         	movff	_light,oled_putUint16@number
  7846  000B20  C097  F0D1         	movff	_light+1,oled_putUint16@number+1
  7847  000B24  0E06               	movlw	6
  7848  000B26  0100               	movlb	0	; () banked
  7849  000B28  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  7850  000B2A  0E01               	movlw	1
  7851  000B2C  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  7852  000B2E  ECCA  F011         	call	_oled_putUint16	;wreg free
  7853                           
  7854                           ;MOTEapp.c: 801: oled_putUint16(temperature,6,2);
  7855  000B32  C094  F0D0         	movff	_temperature,oled_putUint16@number
  7856  000B36  C095  F0D1         	movff	_temperature+1,oled_putUint16@number+1
  7857  000B3A  0E06               	movlw	6
  7858  000B3C  0100               	movlb	0	; () banked
  7859  000B3E  6FD2               	movwf	oled_putUint16@station_dot& (0+255),b
  7860  000B40  0E02               	movlw	2
  7861  000B42  6FD3               	movwf	oled_putUint16@start_page& (0+255),b
  7862  000B44  ECCA  F011         	call	_oled_putUint16	;wreg free
  7863                           
  7864                           ;MOTEapp.c: 802: if ( (changeStates) || (selectButton) )
  7865  000B48  0100               	movlb	0	; () banked
  7866  000B4A  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7867  000B4C  A4D8               	btfss	status,2,c
  7868  000B4E  D003               	goto	u7070
  7869                           
  7870                           ; BSR set to: 0
  7871  000B50  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7872  000B52  B4D8               	btfsc	status,2,c
  7873  000B54  0012               	return	
  7874  000B56                     u7070:
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;MOTEapp.c: 803: {
  7878                           ;MOTEapp.c: 804: oled_clear();
  7879                           
  7880                           ; BSR set to: 0
  7881  000B56  EC88  F024         	call	_oled_clear	;wreg free
  7882                           
  7883                           ;MOTEapp.c: 805: oled_putString("  Sensor Data  ",0,0);
  7884  000B5A  0E64               	movlw	low STR_102
  7885  000B5C  0100               	movlb	0	; () banked
  7886  000B5E  6FCB               	movwf	oled_putString@string& (0+255),b
  7887  000B60  0E7C               	movlw	high STR_102
  7888  000B62  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7889  000B64  0E00               	movlw	0
  7890  000B66  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7891  000B68  0E00               	movlw	0
  7892  000B6A  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7893  000B6C  EC2E  F01F         	call	_oled_putString	;wreg free
  7894                           
  7895                           ;MOTEapp.c: 806: oled_putString("    Display    ",0,1);
  7896  000B70  0E54               	movlw	low STR_103
  7897  000B72  0100               	movlb	0	; () banked
  7898  000B74  6FCB               	movwf	oled_putString@string& (0+255),b
  7899  000B76  0E7C               	movlw	high STR_103
  7900  000B78  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7901  000B7A  0E00               	movlw	0
  7902  000B7C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7903  000B7E  0E01               	movlw	1
  7904  000B80  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7905  000B82  EC2E  F01F         	call	_oled_putString	;wreg free
  7906                           
  7907                           ;MOTEapp.c: 807: oled_putString("(NAV)    (SEL) ",0,3);
  7908  000B86  0E84               	movlw	low STR_73
  7909  000B88  0100               	movlb	0	; () banked
  7910  000B8A  6FCB               	movwf	oled_putString@string& (0+255),b
  7911  000B8C  0E7C               	movlw	high STR_73
  7912  000B8E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7913  000B90  0E00               	movlw	0
  7914  000B92  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7915  000B94  0E03               	movlw	3
  7916  000B96  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7917  000B98  EC2E  F01F         	call	_oled_putString	;wreg free
  7918                           
  7919                           ;MOTEapp.c: 808: runningState = runningSensor;
  7920  000B9C  0E01               	movlw	1
  7921  000B9E  0100               	movlb	0	; () banked
  7922  000BA0  6FAE               	movwf	_runningState& (0+255),b
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;MOTEapp.c: 809: }
  7926                           ;MOTEapp.c: 810: break;
  7927  000BA2  0012               	return	
  7928  000BA4                     
  7929                           ; BSR set to: 0
  7930                           ;MOTEapp.c: 812: if (changeStates)
  7931                           
  7932                           ; BSR set to: 0
  7933  000BA4  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7934  000BA6  B4D8               	btfsc	status,2,c
  7935  000BA8  D092               	goto	l527
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;MOTEapp.c: 813: {
  7939                           ;MOTEapp.c: 814: oled_clear();
  7940  000BAA  EC88  F024         	call	_oled_clear	;wreg free
  7941                           
  7942                           ;MOTEapp.c: 815: oled_putString("Select Data Rate",0,0);
  7943  000BAE  0EFF               	movlw	low STR_135
  7944  000BB0  0100               	movlb	0	; () banked
  7945  000BB2  6FCB               	movwf	oled_putString@string& (0+255),b
  7946  000BB4  0E7B               	movlw	high STR_135
  7947  000BB6  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7948  000BB8  0E00               	movlw	0
  7949  000BBA  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7950  000BBC  0E00               	movlw	0
  7951  000BBE  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7952  000BC0  EC2E  F01F         	call	_oled_putString	;wreg free
  7953                           
  7954                           ;MOTEapp.c: 816: oled_putString("Data Rate: ",0,2);
  7955  000BC4  0E59               	movlw	low STR_136
  7956  000BC6  0100               	movlb	0	; () banked
  7957  000BC8  6FCB               	movwf	oled_putString@string& (0+255),b
  7958  000BCA  0E7E               	movlw	high STR_136
  7959  000BCC  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7960  000BCE  0E00               	movlw	0
  7961  000BD0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7962  000BD2  0E02               	movlw	2
  7963  000BD4  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7964  000BD6  EC2E  F01F         	call	_oled_putString	;wreg free
  7965                           
  7966                           ;MOTEapp.c: 817: oled_putString("(NAV)    (CNG) ",0,3);
  7967  000BDA  0E74               	movlw	low STR_114
  7968  000BDC  0100               	movlb	0	; () banked
  7969  000BDE  6FCB               	movwf	oled_putString@string& (0+255),b
  7970  000BE0  0E7C               	movlw	high STR_114
  7971  000BE2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7972  000BE4  0E00               	movlw	0
  7973  000BE6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  7974  000BE8  0E03               	movlw	3
  7975  000BEA  6FCE               	movwf	oled_putString@start_page& (0+255),b
  7976  000BEC  EC2E  F01F         	call	_oled_putString	;wreg free
  7977                           
  7978                           ;MOTEapp.c: 818: runningState = runningDataRateDisplay;
  7979  000BF0  0E03               	movlw	3
  7980  000BF2  0100               	movlb	0	; () banked
  7981  000BF4  6FAE               	movwf	_runningState& (0+255),b
  7982                           
  7983                           ;MOTEapp.c: 821: switch (dataRateValue)
  7984  000BF6  D053               	goto	l524
  7985  000BF8                     
  7986                           ; BSR set to: 0
  7987                           ;MOTEapp.c: 825: oled_putString(" 0 ",10,2);
  7988                           
  7989                           ; BSR set to: 0
  7990                           
  7991                           ;MOTEapp.c: 824: case 0:
  7992                           
  7993                           ; BSR set to: 0
  7994  000BF8  0EC8               	movlw	low STR_138
  7995  000BFA  6FCB               	movwf	oled_putString@string& (0+255),b
  7996  000BFC  0E7F               	movlw	high STR_138
  7997  000BFE  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  7998  000C00  0E0A               	movlw	10
  7999  000C02  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8000  000C04  0E02               	movlw	2
  8001  000C06  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8002  000C08  EC2E  F01F         	call	_oled_putString	;wreg free
  8003                           
  8004                           ;MOTEapp.c: 826: break;
  8005  000C0C  D060               	goto	l527
  8006  000C0E                     
  8007                           ;MOTEapp.c: 828: oled_putString(" 1 ",10,2);
  8008  000C0E  0ECC               	movlw	low STR_139
  8009  000C10  0100               	movlb	0	; () banked
  8010  000C12  6FCB               	movwf	oled_putString@string& (0+255),b
  8011  000C14  0E7F               	movlw	high STR_139
  8012  000C16  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8013  000C18  0E0A               	movlw	10
  8014  000C1A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8015  000C1C  0E02               	movlw	2
  8016  000C1E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8017  000C20  EC2E  F01F         	call	_oled_putString	;wreg free
  8018                           
  8019                           ;MOTEapp.c: 829: break;
  8020  000C24  D054               	goto	l527
  8021  000C26                     
  8022                           ;MOTEapp.c: 831: oled_putString(" 2 ",10,2);
  8023  000C26  0ED0               	movlw	low STR_140
  8024  000C28  0100               	movlb	0	; () banked
  8025  000C2A  6FCB               	movwf	oled_putString@string& (0+255),b
  8026  000C2C  0E7F               	movlw	high STR_140
  8027  000C2E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8028  000C30  0E0A               	movlw	10
  8029  000C32  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8030  000C34  0E02               	movlw	2
  8031  000C36  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8032  000C38  EC2E  F01F         	call	_oled_putString	;wreg free
  8033                           
  8034                           ;MOTEapp.c: 832: break;
  8035  000C3C  D048               	goto	l527
  8036  000C3E                     
  8037                           ;MOTEapp.c: 834: oled_putString(" 3 ",10,2);
  8038  000C3E  0ED4               	movlw	low STR_141
  8039  000C40  0100               	movlb	0	; () banked
  8040  000C42  6FCB               	movwf	oled_putString@string& (0+255),b
  8041  000C44  0E7F               	movlw	high STR_141
  8042  000C46  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8043  000C48  0E0A               	movlw	10
  8044  000C4A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8045  000C4C  0E02               	movlw	2
  8046  000C4E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8047  000C50  EC2E  F01F         	call	_oled_putString	;wreg free
  8048                           
  8049                           ;MOTEapp.c: 835: break;
  8050  000C54  D03C               	goto	l527
  8051  000C56                     
  8052                           ;MOTEapp.c: 837: oled_putString(" 4 ",10,2);
  8053  000C56  0ED8               	movlw	low STR_142
  8054  000C58  0100               	movlb	0	; () banked
  8055  000C5A  6FCB               	movwf	oled_putString@string& (0+255),b
  8056  000C5C  0E7F               	movlw	high STR_142
  8057  000C5E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8058  000C60  0E0A               	movlw	10
  8059  000C62  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8060  000C64  0E02               	movlw	2
  8061  000C66  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8062  000C68  EC2E  F01F         	call	_oled_putString	;wreg free
  8063                           
  8064                           ;MOTEapp.c: 838: break;
  8065  000C6C  D030               	goto	l527
  8066  000C6E                     
  8067                           ;MOTEapp.c: 840: oled_putString(" 5 ",10,2);
  8068  000C6E  0EDC               	movlw	low STR_143
  8069  000C70  0100               	movlb	0	; () banked
  8070  000C72  6FCB               	movwf	oled_putString@string& (0+255),b
  8071  000C74  0E7F               	movlw	high STR_143
  8072  000C76  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8073  000C78  0E0A               	movlw	10
  8074  000C7A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8075  000C7C  0E02               	movlw	2
  8076  000C7E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8077  000C80  EC2E  F01F         	call	_oled_putString	;wreg free
  8078                           
  8079                           ;MOTEapp.c: 841: break;
  8080  000C84  D024               	goto	l527
  8081  000C86                     
  8082                           ;MOTEapp.c: 843: oled_putString("ADR",10,2);
  8083  000C86  0EF4               	movlw	low STR_144
  8084  000C88  0100               	movlb	0	; () banked
  8085  000C8A  6FCB               	movwf	oled_putString@string& (0+255),b
  8086  000C8C  0E7F               	movlw	high STR_144
  8087  000C8E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8088  000C90  0E0A               	movlw	10
  8089  000C92  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8090  000C94  0E02               	movlw	2
  8091  000C96  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8092  000C98  EC2E  F01F         	call	_oled_putString	;wreg free
  8093                           
  8094                           ;MOTEapp.c: 845: }
  8095                           
  8096                           ;MOTEapp.c: 844: break;
  8097  000C9C  D018               	goto	l527
  8098  000C9E                     l524:
  8099  000C9E  0100               	movlb	0	; () banked
  8100  000CA0  51F7               	movf	_dataRateValue& (0+255),w,b
  8101                           
  8102                           ; Switch size 1, requested type "space"
  8103                           ; Number of cases is 7, Range of values is 0 to 6
  8104                           ; switch strategies available:
  8105                           ; Name         Instructions Cycles
  8106                           ; simple_byte           22    12 (average)
  8107                           ;	Chosen strategy is simple_byte
  8108  000CA2  0A00               	xorlw	0	; case 0
  8109  000CA4  B4D8               	btfsc	status,2,c
  8110  000CA6  D7A8               	goto	l525
  8111  000CA8  0A01               	xorlw	1	; case 1
  8112  000CAA  B4D8               	btfsc	status,2,c
  8113  000CAC  D7B0               	goto	l528
  8114  000CAE  0A03               	xorlw	3	; case 2
  8115  000CB0  B4D8               	btfsc	status,2,c
  8116  000CB2  D7B9               	goto	l529
  8117  000CB4  0A01               	xorlw	1	; case 3
  8118  000CB6  B4D8               	btfsc	status,2,c
  8119  000CB8  D7C2               	goto	l530
  8120  000CBA  0A07               	xorlw	7	; case 4
  8121  000CBC  B4D8               	btfsc	status,2,c
  8122  000CBE  D7CB               	goto	l531
  8123  000CC0  0A01               	xorlw	1	; case 5
  8124  000CC2  B4D8               	btfsc	status,2,c
  8125  000CC4  D7D4               	goto	l532
  8126  000CC6  0A03               	xorlw	3	; case 6
  8127  000CC8  B4D8               	btfsc	status,2,c
  8128  000CCA  D7DD               	goto	l533
  8129  000CCC  D795               	goto	l525
  8130  000CCE                     l527:
  8131                           
  8132                           ;MOTEapp.c: 846: }
  8133                           ;MOTEapp.c: 847: if (selectButton)
  8134                           
  8135                           ; BSR set to: 0
  8136                           
  8137                           ; BSR set to: 0
  8138  000CCE  0100               	movlb	0	; () banked
  8139  000CD0  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8140  000CD2  B4D8               	btfsc	status,2,c
  8141  000CD4  0012               	return	
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;MOTEapp.c: 848: {
  8145                           ;MOTEapp.c: 849: if (periodicUpValue < 5)
  8146  000CD6  0E05               	movlw	5
  8147  000CD8  61F9               	cpfslt	_periodicUpValue& (0+255),b
  8148  000CDA  D002               	goto	l535
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;MOTEapp.c: 850: {
  8152                           ;MOTEapp.c: 851: periodicUpValue++;
  8153  000CDC  2BF9               	incf	_periodicUpValue& (0+255),f,b
  8154                           
  8155                           ;MOTEapp.c: 852: } else {
  8156  000CDE  D054               	goto	l537
  8157  000CE0                     l535:
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;MOTEapp.c: 853: periodicUpValue = 0;
  8161                           
  8162                           ; BSR set to: 0
  8163  000CE0  0E00               	movlw	0
  8164  000CE2  6FF9               	movwf	_periodicUpValue& (0+255),b
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;MOTEapp.c: 854: }
  8168                           ;MOTEapp.c: 856: switch (periodicUpValue)
  8169  000CE4  D051               	goto	l537
  8170  000CE6                     
  8171                           ; BSR set to: 0
  8172                           ;MOTEapp.c: 860: periodicTimerValue = 9;
  8173                           
  8174                           ; BSR set to: 0
  8175                           
  8176                           ;MOTEapp.c: 859: case 0:
  8177                           
  8178                           ; BSR set to: 0
  8179  000CE6  0E09               	movlw	9
  8180  000CE8  6FF8               	movwf	_periodicTimerValue& (0+255),b
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;MOTEapp.c: 861: oled_putString(" 5 ",7,2);
  8184  000CEA  0EDC               	movlw	low STR_143
  8185  000CEC  6FCB               	movwf	oled_putString@string& (0+255),b
  8186  000CEE  0E7F               	movlw	high STR_143
  8187  000CF0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8188  000CF2  0E07               	movlw	7
  8189  000CF4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8190  000CF6  0E02               	movlw	2
  8191  000CF8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8192  000CFA  EC2E  F01F         	call	_oled_putString	;wreg free
  8193                           
  8194                           ;MOTEapp.c: 862: break;
  8195  000CFE  0012               	return	
  8196  000D00                     
  8197                           ;MOTEapp.c: 864: periodicTimerValue = 18;
  8198  000D00  0E12               	movlw	18
  8199  000D02  0100               	movlb	0	; () banked
  8200  000D04  6FF8               	movwf	_periodicTimerValue& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;MOTEapp.c: 865: oled_putString(" 10",7,2);
  8204  000D06  0EE0               	movlw	low STR_146
  8205  000D08  6FCB               	movwf	oled_putString@string& (0+255),b
  8206  000D0A  0E7F               	movlw	high STR_146
  8207  000D0C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8208  000D0E  0E07               	movlw	7
  8209  000D10  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8210  000D12  0E02               	movlw	2
  8211  000D14  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8212  000D16  EC2E  F01F         	call	_oled_putString	;wreg free
  8213                           
  8214                           ;MOTEapp.c: 866: break;
  8215  000D1A  0012               	return	
  8216  000D1C                     
  8217                           ;MOTEapp.c: 868: periodicTimerValue = 27;
  8218  000D1C  0E1B               	movlw	27
  8219  000D1E  0100               	movlb	0	; () banked
  8220  000D20  6FF8               	movwf	_periodicTimerValue& (0+255),b
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;MOTEapp.c: 869: oled_putString(" 15",7,2);
  8224  000D22  0EEC               	movlw	low STR_147
  8225  000D24  6FCB               	movwf	oled_putString@string& (0+255),b
  8226  000D26  0E7F               	movlw	high STR_147
  8227  000D28  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8228  000D2A  0E07               	movlw	7
  8229  000D2C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8230  000D2E  0E02               	movlw	2
  8231  000D30  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8232  000D32  EC2E  F01F         	call	_oled_putString	;wreg free
  8233                           
  8234                           ;MOTEapp.c: 870: break;
  8235  000D36  0012               	return	
  8236  000D38                     
  8237                           ;MOTEapp.c: 872: periodicTimerValue = 54;
  8238  000D38  0E36               	movlw	54
  8239  000D3A  0100               	movlb	0	; () banked
  8240  000D3C  6FF8               	movwf	_periodicTimerValue& (0+255),b
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;MOTEapp.c: 873: oled_putString(" 30",7,2);
  8244  000D3E  0EE4               	movlw	low STR_148
  8245  000D40  6FCB               	movwf	oled_putString@string& (0+255),b
  8246  000D42  0E7F               	movlw	high STR_148
  8247  000D44  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8248  000D46  0E07               	movlw	7
  8249  000D48  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8250  000D4A  0E02               	movlw	2
  8251  000D4C  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8252  000D4E  EC2E  F01F         	call	_oled_putString	;wreg free
  8253                           
  8254                           ;MOTEapp.c: 874: break;
  8255  000D52  0012               	return	
  8256  000D54                     
  8257                           ;MOTEapp.c: 876: periodicTimerValue = 108;
  8258  000D54  0E6C               	movlw	108
  8259  000D56  0100               	movlb	0	; () banked
  8260  000D58  6FF8               	movwf	_periodicTimerValue& (0+255),b
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;MOTEapp.c: 877: oled_putString(" 60",7,2);
  8264  000D5A  0EE8               	movlw	low STR_149
  8265  000D5C  6FCB               	movwf	oled_putString@string& (0+255),b
  8266  000D5E  0E7F               	movlw	high STR_149
  8267  000D60  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8268  000D62  0E07               	movlw	7
  8269  000D64  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8270  000D66  0E02               	movlw	2
  8271  000D68  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8272  000D6A  EC2E  F01F         	call	_oled_putString	;wreg free
  8273                           
  8274                           ;MOTEapp.c: 878: break;
  8275  000D6E  0012               	return	
  8276  000D70                     l545:
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;MOTEapp.c: 880: periodicTimerValue = 255;
  8280  000D70  69F8               	setf	_periodicTimerValue& (0+255),b
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;MOTEapp.c: 881: oled_putString("OFF",7,2);
  8284  000D72  0EF0               	movlw	low STR_128
  8285  000D74  6FCB               	movwf	oled_putString@string& (0+255),b
  8286  000D76  0E7F               	movlw	high STR_128
  8287  000D78  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8288  000D7A  0E07               	movlw	7
  8289  000D7C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8290  000D7E  0E02               	movlw	2
  8291  000D80  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8292  000D82  EC2E  F01F         	call	_oled_putString	;wreg free
  8293                           
  8294                           ;MOTEapp.c: 883: }
  8295                           
  8296                           ;MOTEapp.c: 882: break;
  8297  000D86  0012               	return	
  8298  000D88                     l537:
  8299  000D88  0100               	movlb	0	; () banked
  8300  000D8A  51F9               	movf	_periodicUpValue& (0+255),w,b
  8301                           
  8302                           ; Switch size 1, requested type "space"
  8303                           ; Number of cases is 6, Range of values is 0 to 5
  8304                           ; switch strategies available:
  8305                           ; Name         Instructions Cycles
  8306                           ; simple_byte           19    10 (average)
  8307                           ;	Chosen strategy is simple_byte
  8308  000D8C  0A00               	xorlw	0	; case 0
  8309  000D8E  B4D8               	btfsc	status,2,c
  8310  000D90  D7AA               	goto	l538
  8311  000D92  0A01               	xorlw	1	; case 1
  8312  000D94  B4D8               	btfsc	status,2,c
  8313  000D96  D7B4               	goto	l541
  8314  000D98  0A03               	xorlw	3	; case 2
  8315  000D9A  B4D8               	btfsc	status,2,c
  8316  000D9C  D7BF               	goto	l542
  8317  000D9E  0A01               	xorlw	1	; case 3
  8318  000DA0  B4D8               	btfsc	status,2,c
  8319  000DA2  D7CA               	goto	l543
  8320  000DA4  0A07               	xorlw	7	; case 4
  8321  000DA6  B4D8               	btfsc	status,2,c
  8322  000DA8  D7D5               	goto	l544
  8323  000DAA  0A01               	xorlw	1	; case 5
  8324  000DAC  B4D8               	btfsc	status,2,c
  8325  000DAE  D7E0               	goto	l545
  8326  000DB0  D79A               	goto	l538
  8327  000DB2                     
  8328                           ; BSR set to: 0
  8329                           ;MOTEapp.c: 887: if (changeStates)
  8330                           
  8331                           ; BSR set to: 0
  8332  000DB2  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8333  000DB4  B4D8               	btfsc	status,2,c
  8334  000DB6  D01E               	goto	l547
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;MOTEapp.c: 888: {
  8338                           ;MOTEapp.c: 890: MOTEapp_SetDataRateSetting(dataRateValue);
  8339  000DB8  51F7               	movf	_dataRateValue& (0+255),w,b
  8340  000DBA  EC88  F00D         	call	_MOTEapp_SetDataRateSetting
  8341                           
  8342                           ;MOTEapp.c: 892: oled_clear();
  8343  000DBE  EC88  F024         	call	_oled_clear	;wreg free
  8344                           
  8345                           ;MOTEapp.c: 893: oled_putString("Enter Sleep Mode",0,0);
  8346  000DC2  0EDD               	movlw	low STR_151
  8347  000DC4  0100               	movlb	0	; () banked
  8348  000DC6  6FCB               	movwf	oled_putString@string& (0+255),b
  8349  000DC8  0E7B               	movlw	high STR_151
  8350  000DCA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8351  000DCC  0E00               	movlw	0
  8352  000DCE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8353  000DD0  0E00               	movlw	0
  8354  000DD2  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8355  000DD4  EC2E  F01F         	call	_oled_putString	;wreg free
  8356                           
  8357                           ;MOTEapp.c: 894: oled_putString("(NAV)    (SLP) ",0,3);
  8358  000DD8  0E94               	movlw	low STR_152
  8359  000DDA  0100               	movlb	0	; () banked
  8360  000DDC  6FCB               	movwf	oled_putString@string& (0+255),b
  8361  000DDE  0E7C               	movlw	high STR_152
  8362  000DE0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8363  000DE2  0E00               	movlw	0
  8364  000DE4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8365  000DE6  0E03               	movlw	3
  8366  000DE8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8367  000DEA  EC2E  F01F         	call	_oled_putString	;wreg free
  8368                           
  8369                           ;MOTEapp.c: 895: runningState = runningSleep;
  8370  000DEE  0E0F               	movlw	15
  8371  000DF0  0100               	movlb	0	; () banked
  8372  000DF2  6FAE               	movwf	_runningState& (0+255),b
  8373  000DF4                     l547:
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;MOTEapp.c: 896: }
  8377                           ;MOTEapp.c: 897: if (selectButton)
  8378                           
  8379                           ; BSR set to: 0
  8380  000DF4  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8381  000DF6  B4D8               	btfsc	status,2,c
  8382  000DF8  0012               	return	
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;MOTEapp.c: 898: {
  8386                           ;MOTEapp.c: 899: if (dataRateValue < 6)
  8387  000DFA  0E06               	movlw	6
  8388  000DFC  61F7               	cpfslt	_dataRateValue& (0+255),b
  8389  000DFE  D00A               	goto	l549
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;MOTEapp.c: 900: {
  8393                           ;MOTEapp.c: 901: if ((rnModule == rn2903) && (dataRateValue > 3))
  8394  000E00  05A9               	decf	_rnModule& (0+255),w,b
  8395  000E02  A4D8               	btfss	status,2,c
  8396  000E04  D005               	goto	l550
  8397                           
  8398                           ; BSR set to: 0
  8399  000E06  0E03               	movlw	3
  8400  000E08  65F7               	cpfsgt	_dataRateValue& (0+255),b
  8401  000E0A  D002               	goto	l550
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;MOTEapp.c: 902: dataRateValue = 6;
  8405  000E0C  0E06               	movlw	6
  8406  000E0E  D003               	goto	L5
  8407  000E10                     l550:
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;MOTEapp.c: 903: else
  8411                           ;MOTEapp.c: 904: dataRateValue++;
  8412                           
  8413                           ; BSR set to: 0
  8414  000E10  2BF7               	incf	_dataRateValue& (0+255),f,b
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;MOTEapp.c: 905: }
  8418  000E12  D056               	goto	l553
  8419  000E14                     l549:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;MOTEapp.c: 906: else {
  8423                           ;MOTEapp.c: 907: dataRateValue = 0;
  8424                           
  8425                           ; BSR set to: 0
  8426  000E14  0E00               	movlw	0
  8427  000E16                     L5:
  8428  000E16  6FF7               	movwf	_dataRateValue& (0+255),b
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;MOTEapp.c: 908: }
  8432                           ;MOTEapp.c: 910: switch (dataRateValue)
  8433  000E18  D053               	goto	l553
  8434  000E1A                     
  8435                           ; BSR set to: 0
  8436                           ;MOTEapp.c: 914: oled_putString(" 0 ",10,2);
  8437                           
  8438                           ; BSR set to: 0
  8439                           
  8440                           ;MOTEapp.c: 913: case 0:
  8441                           
  8442                           ; BSR set to: 0
  8443  000E1A  0EC8               	movlw	low STR_138
  8444  000E1C  6FCB               	movwf	oled_putString@string& (0+255),b
  8445  000E1E  0E7F               	movlw	high STR_138
  8446  000E20  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8447  000E22  0E0A               	movlw	10
  8448  000E24  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8449  000E26  0E02               	movlw	2
  8450  000E28  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8451  000E2A  EC2E  F01F         	call	_oled_putString	;wreg free
  8452                           
  8453                           ;MOTEapp.c: 915: break;
  8454  000E2E  0012               	return	
  8455  000E30                     
  8456                           ;MOTEapp.c: 917: oled_putString(" 1 ",10,2);
  8457  000E30  0ECC               	movlw	low STR_139
  8458  000E32  0100               	movlb	0	; () banked
  8459  000E34  6FCB               	movwf	oled_putString@string& (0+255),b
  8460  000E36  0E7F               	movlw	high STR_139
  8461  000E38  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8462  000E3A  0E0A               	movlw	10
  8463  000E3C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8464  000E3E  0E02               	movlw	2
  8465  000E40  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8466  000E42  EC2E  F01F         	call	_oled_putString	;wreg free
  8467                           
  8468                           ;MOTEapp.c: 918: break;
  8469  000E46  0012               	return	
  8470  000E48                     
  8471                           ;MOTEapp.c: 920: oled_putString(" 2 ",10,2);
  8472  000E48  0ED0               	movlw	low STR_140
  8473  000E4A  0100               	movlb	0	; () banked
  8474  000E4C  6FCB               	movwf	oled_putString@string& (0+255),b
  8475  000E4E  0E7F               	movlw	high STR_140
  8476  000E50  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8477  000E52  0E0A               	movlw	10
  8478  000E54  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8479  000E56  0E02               	movlw	2
  8480  000E58  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8481  000E5A  EC2E  F01F         	call	_oled_putString	;wreg free
  8482                           
  8483                           ;MOTEapp.c: 921: break;
  8484  000E5E  0012               	return	
  8485  000E60                     
  8486                           ;MOTEapp.c: 923: oled_putString(" 3 ",10,2);
  8487  000E60  0ED4               	movlw	low STR_141
  8488  000E62  0100               	movlb	0	; () banked
  8489  000E64  6FCB               	movwf	oled_putString@string& (0+255),b
  8490  000E66  0E7F               	movlw	high STR_141
  8491  000E68  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8492  000E6A  0E0A               	movlw	10
  8493  000E6C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8494  000E6E  0E02               	movlw	2
  8495  000E70  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8496  000E72  EC2E  F01F         	call	_oled_putString	;wreg free
  8497                           
  8498                           ;MOTEapp.c: 924: break;
  8499  000E76  0012               	return	
  8500  000E78                     
  8501                           ;MOTEapp.c: 926: oled_putString(" 4 ",10,2);
  8502  000E78  0ED8               	movlw	low STR_142
  8503  000E7A  0100               	movlb	0	; () banked
  8504  000E7C  6FCB               	movwf	oled_putString@string& (0+255),b
  8505  000E7E  0E7F               	movlw	high STR_142
  8506  000E80  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8507  000E82  0E0A               	movlw	10
  8508  000E84  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8509  000E86  0E02               	movlw	2
  8510  000E88  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8511  000E8A  EC2E  F01F         	call	_oled_putString	;wreg free
  8512                           
  8513                           ;MOTEapp.c: 927: break;
  8514  000E8E  0012               	return	
  8515  000E90                     
  8516                           ;MOTEapp.c: 929: oled_putString(" 5 ",10,2);
  8517  000E90  0EDC               	movlw	low STR_143
  8518  000E92  0100               	movlb	0	; () banked
  8519  000E94  6FCB               	movwf	oled_putString@string& (0+255),b
  8520  000E96  0E7F               	movlw	high STR_143
  8521  000E98  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8522  000E9A  0E0A               	movlw	10
  8523  000E9C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8524  000E9E  0E02               	movlw	2
  8525  000EA0  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8526  000EA2  EC2E  F01F         	call	_oled_putString	;wreg free
  8527                           
  8528                           ;MOTEapp.c: 930: break;
  8529  000EA6  0012               	return	
  8530  000EA8                     
  8531                           ;MOTEapp.c: 932: oled_putString("ADR",10,2);
  8532  000EA8  0EF4               	movlw	low STR_144
  8533  000EAA  0100               	movlb	0	; () banked
  8534  000EAC  6FCB               	movwf	oled_putString@string& (0+255),b
  8535  000EAE  0E7F               	movlw	high STR_144
  8536  000EB0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8537  000EB2  0E0A               	movlw	10
  8538  000EB4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8539  000EB6  0E02               	movlw	2
  8540  000EB8  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8541  000EBA  EC2E  F01F         	call	_oled_putString	;wreg free
  8542                           
  8543                           ;MOTEapp.c: 934: }
  8544                           
  8545                           ;MOTEapp.c: 933: break;
  8546  000EBE  0012               	return	
  8547  000EC0                     l553:
  8548  000EC0  0100               	movlb	0	; () banked
  8549  000EC2  51F7               	movf	_dataRateValue& (0+255),w,b
  8550                           
  8551                           ; Switch size 1, requested type "space"
  8552                           ; Number of cases is 7, Range of values is 0 to 6
  8553                           ; switch strategies available:
  8554                           ; Name         Instructions Cycles
  8555                           ; simple_byte           22    12 (average)
  8556                           ;	Chosen strategy is simple_byte
  8557  000EC4  0A00               	xorlw	0	; case 0
  8558  000EC6  B4D8               	btfsc	status,2,c
  8559  000EC8  D7A8               	goto	l554
  8560  000ECA  0A01               	xorlw	1	; case 1
  8561  000ECC  B4D8               	btfsc	status,2,c
  8562  000ECE  D7B0               	goto	l557
  8563  000ED0  0A03               	xorlw	3	; case 2
  8564  000ED2  B4D8               	btfsc	status,2,c
  8565  000ED4  D7B9               	goto	l558
  8566  000ED6  0A01               	xorlw	1	; case 3
  8567  000ED8  B4D8               	btfsc	status,2,c
  8568  000EDA  D7C2               	goto	l559
  8569  000EDC  0A07               	xorlw	7	; case 4
  8570  000EDE  B4D8               	btfsc	status,2,c
  8571  000EE0  D7CB               	goto	l560
  8572  000EE2  0A01               	xorlw	1	; case 5
  8573  000EE4  B4D8               	btfsc	status,2,c
  8574  000EE6  D7D4               	goto	l561
  8575  000EE8  0A03               	xorlw	3	; case 6
  8576  000EEA  B4D8               	btfsc	status,2,c
  8577  000EEC  D7DD               	goto	l562
  8578  000EEE  D795               	goto	l554
  8579  000EF0                     
  8580                           ; BSR set to: 0
  8581                           ;MOTEapp.c: 938: if (selectButton)
  8582                           
  8583                           ; BSR set to: 0
  8584  000EF0  51DA               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8585  000EF2  B4D8               	btfsc	status,2,c
  8586  000EF4  D00C               	goto	l566
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;MOTEapp.c: 939: {
  8590                           ;MOTEapp.c: 940: if( moteApp_GoToSleep() )
  8591  000EF6  EC95  F019         	call	_moteApp_GoToSleep	;wreg free
  8592  000EFA  0900               	iorlw	0
  8593  000EFC  B4D8               	btfsc	status,2,c
  8594  000EFE  D004               	goto	l565
  8595                           
  8596                           ;MOTEapp.c: 941: {
  8597                           ;MOTEapp.c: 942: changeStates = 1;
  8598  000F00  0E01               	movlw	1
  8599  000F02  0100               	movlb	0	; () banked
  8600  000F04  6FE6               	movwf	moteRunningProcess@changeStates& (0+255),b
  8601                           
  8602                           ;MOTEapp.c: 943: }
  8603  000F06  D003               	goto	l566
  8604  000F08                     l565:
  8605                           
  8606                           ;MOTEapp.c: 944: else
  8607                           ;MOTEapp.c: 945: {
  8608                           ;MOTEapp.c: 946: secTicker = 10 - 1;
  8609                           
  8610                           ; BSR set to: 0
  8611  000F08  0E09               	movlw	9
  8612  000F0A  0100               	movlb	0	; () banked
  8613  000F0C  6FAB               	movwf	_secTicker& (0+255),b
  8614  000F0E                     l566:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;MOTEapp.c: 947: }
  8618                           ;MOTEapp.c: 948: }
  8619                           ;MOTEapp.c: 949: if (changeStates)
  8620                           
  8621                           ; BSR set to: 0
  8622  000F0E  51E6               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8623  000F10  B4D8               	btfsc	status,2,c
  8624  000F12  0012               	return	
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;MOTEapp.c: 950: {
  8628                           ;MOTEapp.c: 951: oled_clear();
  8629  000F14  EC88  F024         	call	_oled_clear	;wreg free
  8630                           
  8631                           ;MOTEapp.c: 952: oled_putString("  Issue Uplink  ",0,0);
  8632  000F18  0E22               	movlw	low STR_75
  8633  000F1A  0100               	movlb	0	; () banked
  8634  000F1C  6FCB               	movwf	oled_putString@string& (0+255),b
  8635  000F1E  0E7B               	movlw	high STR_75
  8636  000F20  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8637  000F22  0E00               	movlw	0
  8638  000F24  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8639  000F26  0E00               	movlw	0
  8640  000F28  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8641  000F2A  EC2E  F01F         	call	_oled_putString	;wreg free
  8642                           
  8643                           ;MOTEapp.c: 953: oled_putString(" LoRaWAN Packet ",0,1);
  8644  000F2E  0E88               	movlw	low STR_76
  8645  000F30  0100               	movlb	0	; () banked
  8646  000F32  6FCB               	movwf	oled_putString@string& (0+255),b
  8647  000F34  0E7B               	movlw	high STR_76
  8648  000F36  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8649  000F38  0E00               	movlw	0
  8650  000F3A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8651  000F3C  0E01               	movlw	1
  8652  000F3E  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8653  000F40  EC2E  F01F         	call	_oled_putString	;wreg free
  8654                           
  8655                           ;MOTEapp.c: 954: oled_putString("(NAV)    (SEL) ",0,3);
  8656  000F44  0E84               	movlw	low STR_73
  8657  000F46  0100               	movlb	0	; () banked
  8658  000F48  6FCB               	movwf	oled_putString@string& (0+255),b
  8659  000F4A  0E7C               	movlw	high STR_73
  8660  000F4C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  8661  000F4E  0E00               	movlw	0
  8662  000F50  6FCD               	movwf	oled_putString@station_dot& (0+255),b
  8663  000F52  0E03               	movlw	3
  8664  000F54  6FCE               	movwf	oled_putString@start_page& (0+255),b
  8665  000F56  EC2E  F01F         	call	_oled_putString	;wreg free
  8666                           
  8667                           ;MOTEapp.c: 955: runningState = runningUplink;
  8668  000F5A  0E06               	movlw	6
  8669  000F5C  0100               	movlb	0	; () banked
  8670  000F5E  6FAE               	movwf	_runningState& (0+255),b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;MOTEapp.c: 958: }
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;MOTEapp.c: 956: }
  8677                           ;MOTEapp.c: 957: break;
  8678  000F60  0012               	return	
  8679  000F62                     l446:
  8680                           
  8681                           ; BSR set to: 0
  8682                           
  8683                           ; BSR set to: 0
  8684  000F62  51AE               	movf	_runningState& (0+255),w,b
  8685                           
  8686                           ; Switch size 1, requested type "space"
  8687                           ; Number of cases is 12, Range of values is 0 to 15
  8688                           ; switch strategies available:
  8689                           ; Name         Instructions Cycles
  8690                           ; simple_byte           37    19 (average)
  8691                           ;	Chosen strategy is simple_byte
  8692  000F64  0A00               	xorlw	0	; case 0
  8693  000F66  B4D8               	btfsc	status,2,c
  8694  000F68  EF5D  F001         	goto	l452
  8695  000F6C  0A01               	xorlw	1	; case 1
  8696  000F6E  B4D8               	btfsc	status,2,c
  8697  000F70  D48E               	goto	l496
  8698  000F72  0A03               	xorlw	3	; case 2
  8699  000F74  B4D8               	btfsc	status,2,c
  8700  000F76  D5D2               	goto	l518
  8701  000F78  0A01               	xorlw	1	; case 3
  8702  000F7A  B4D8               	btfsc	status,2,c
  8703  000F7C  D71A               	goto	l546
  8704  000F7E  0A05               	xorlw	5	; case 6
  8705  000F80  B4D8               	btfsc	status,2,c
  8706  000F82  EF8B  F001         	goto	l456
  8707  000F86  0A01               	xorlw	1	; case 7
  8708  000F88  B4D8               	btfsc	status,2,c
  8709  000F8A  EF12  F002         	goto	l463
  8710  000F8E  0A0F               	xorlw	15	; case 8
  8711  000F90  B4D8               	btfsc	status,2,c
  8712  000F92  EF7B  F002         	goto	l469
  8713  000F96  0A02               	xorlw	2	; case 10
  8714  000F98  B4D8               	btfsc	status,2,c
  8715  000F9A  EFA4  F003         	goto	l488
  8716  000F9E  0A01               	xorlw	1	; case 11
  8717  000FA0  B4D8               	btfsc	status,2,c
  8718  000FA2  D448               	goto	l492
  8719  000FA4  0A07               	xorlw	7	; case 12
  8720  000FA6  B4D8               	btfsc	status,2,c
  8721  000FA8  D4FA               	goto	l503
  8722  000FAA  0A01               	xorlw	1	; case 13
  8723  000FAC  B4D8               	btfsc	status,2,c
  8724  000FAE  D5FA               	goto	l522
  8725  000FB0  0A02               	xorlw	2	; case 15
  8726  000FB2  B4D8               	btfsc	status,2,c
  8727  000FB4  D79D               	goto	l563
  8728  000FB6  EF5C  F001         	goto	l447
  8729  000FBA                     __end_of_moteRunningProcess:
  8730                           	opt stack 0
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           postinc0	equ	0xFEE
  8739                           wreg	equ	0xFE8
  8740                           indf1	equ	0xFE7
  8741                           postdec1	equ	0xFE5
  8742                           fsr1h	equ	0xFE2
  8743                           fsr1l	equ	0xFE1
  8744                           indf2	equ	0xFDF
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function _sendDataCommand *****************
  8750 ;; Defined at:
  8751 ;;		line 1104 in file "../Includes/Board/MOTEapp.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  8754 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  8755 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  8756 ;;		 -> dataBuffer(16), 
  8757 ;;  dataLength      1    5[BANK0 ] unsigned char 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  byteCount       1    8[BANK0 ] unsigned char 
  8760 ;;  byteCount       1    7[BANK0 ] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8770 ;;      Params:         0       5       0       0       0       0       0       0       0
  8771 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8772 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8773 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8774 ;;Total ram usage:        8 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:   13
  8777 ;; This function calls:
  8778 ;;		_EUSART_Write
  8779 ;;		_EndLine
  8780 ;;		_hexToStr
  8781 ;; This function is called by:
  8782 ;;		_moteRunningProcess
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text10
  8787  0030F4                     __ptext10:
  8788                           	opt stack 0
  8789  0030F4                     _sendDataCommand:
  8790                           	opt stack 15
  8791                           
  8792                           ;MOTEapp.c: 1107: while (*string)
  8793                           
  8794                           ;incstack = 0
  8795  0030F4  D00B               	goto	l623
  8796  0030F6                     
  8797                           ;MOTEapp.c: 1108: {
  8798                           ;MOTEapp.c: 1109: EUSART_Write(*string++);
  8799  0030F6  C0BF  FFF6         	movff	sendDataCommand@string,tblptrl
  8800  0030FA  C0C0  FFF7         	movff	sendDataCommand@string+1,tblptrh
  8801  0030FE                     	if	0	;tblptru may be non-zero
  8802  0030FE                     	endif
  8803  0030FE                     	if	0	;tblptru may be non-zero
  8804  0030FE                     	endif
  8805  0030FE  0008               	tblrd		*
  8806  003100  50F5               	movf	tablat,w,c
  8807  003102  EC2B  F022         	call	_EUSART_Write
  8808  003106  0100               	movlb	0	; () banked
  8809  003108  4BBF               	infsnz	sendDataCommand@string& (0+255),f,b
  8810  00310A  2BC0               	incf	(sendDataCommand@string+1)& (0+255),f,b
  8811  00310C                     l623:
  8812                           
  8813                           ; BSR set to: 0
  8814  00310C  C0BF  FFF6         	movff	sendDataCommand@string,tblptrl
  8815  003110  C0C0  FFF7         	movff	sendDataCommand@string+1,tblptrh
  8816  003114                     	if	0	;tblptru may be non-zero
  8817  003114                     	endif
  8818  003114                     	if	0	;tblptru may be non-zero
  8819  003114                     	endif
  8820  003114  0008               	tblrd		*
  8821  003116  50F5               	movf	tablat,w,c
  8822  003118  0900               	iorlw	0
  8823  00311A  A4D8               	btfss	status,2,c
  8824  00311C  D7EC               	goto	l624
  8825                           
  8826                           ;MOTEapp.c: 1110: }
  8827                           ;MOTEapp.c: 1112: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  8828  00311E  0E00               	movlw	0
  8829  003120  0100               	movlb	0	; () banked
  8830  003122  6FC5               	movwf	sendDataCommand@byteCount& (0+255),b
  8831  003124                     l7619:
  8832                           
  8833                           ; BSR set to: 0
  8834  003124  0E02               	movlw	2
  8835  003126  65C5               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  8836  003128  D001               	goto	l626
  8837  00312A  D00E               	goto	u5730
  8838  00312C                     l626:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;MOTEapp.c: 1113: {
  8842                           ;MOTEapp.c: 1114: EUSART_Write(appData[byteCount]);
  8843                           
  8844                           ; BSR set to: 0
  8845  00312C  51C5               	movf	sendDataCommand@byteCount& (0+255),w,b
  8846  00312E  0D01               	mullw	1
  8847  003130  50F3               	movf	prodl,w,c
  8848  003132  25C1               	addwf	sendDataCommand@appData& (0+255),w,b
  8849  003134  6ED9               	movwf	fsr2l,c
  8850  003136  50F4               	movf	prodh,w,c
  8851  003138  21C2               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8852  00313A  6EDA               	movwf	fsr2h,c
  8853  00313C  50DF               	movf	indf2,w,c
  8854  00313E  EC2B  F022         	call	_EUSART_Write
  8855  003142  0100               	movlb	0	; () banked
  8856  003144  2BC5               	incf	sendDataCommand@byteCount& (0+255),f,b
  8857  003146  D7EE               	goto	l7619
  8858  003148                     u5730:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;MOTEapp.c: 1115: }
  8862                           ;MOTEapp.c: 1117: EUSART_Write(appData[3]);
  8863                           
  8864                           ; BSR set to: 0
  8865  003148  EE20 F003          	lfsr	2,3
  8866  00314C  51C1               	movf	sendDataCommand@appData& (0+255),w,b
  8867  00314E  26D9               	addwf	fsr2l,f,c
  8868  003150  51C2               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  8869  003152  22DA               	addwfc	fsr2h,f,c
  8870  003154  50DF               	movf	indf2,w,c
  8871  003156  EC2B  F022         	call	_EUSART_Write
  8872                           
  8873                           ;MOTEapp.c: 1119: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  8874  00315A  0E04               	movlw	4
  8875  00315C  0100               	movlb	0	; () banked
  8876  00315E  6FC6               	movwf	sendDataCommand@byteCount_1443& (0+255),b
  8877  003160  D021               	goto	l628
  8878  003162                     
  8879                           ; BSR set to: 0
  8880                           ;MOTEapp.c: 1120: {
  8881                           ;MOTEapp.c: 1121: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  8882                           
  8883                           ; BSR set to: 0
  8884  003162  51C6               	movf	sendDataCommand@byteCount_1443& (0+255),w,b
  8885  003164  0D01               	mullw	1
  8886  003166  50F3               	movf	prodl,w,c
  8887  003168  25C1               	addwf	sendDataCommand@appData& (0+255),w,b
  8888  00316A  6ED9               	movwf	fsr2l,c
  8889  00316C  50F4               	movf	prodh,w,c
  8890  00316E  21C2               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8891  003170  6EDA               	movwf	fsr2h,c
  8892  003172  50DF               	movf	indf2,w,c
  8893  003174  6FC4               	movwf	??_sendDataCommand& (0+255),b
  8894  003176  39C4               	swapf	??_sendDataCommand& (0+255),w,b
  8895  003178  0B0F               	andlw	15
  8896  00317A  ECA5  F023         	call	_hexToStr
  8897  00317E  EC2B  F022         	call	_EUSART_Write
  8898                           
  8899                           ;MOTEapp.c: 1122: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  8900  003182  0100               	movlb	0	; () banked
  8901  003184  51C6               	movf	sendDataCommand@byteCount_1443& (0+255),w,b
  8902  003186  0D01               	mullw	1
  8903  003188  50F3               	movf	prodl,w,c
  8904  00318A  25C1               	addwf	sendDataCommand@appData& (0+255),w,b
  8905  00318C  6ED9               	movwf	fsr2l,c
  8906  00318E  50F4               	movf	prodh,w,c
  8907  003190  21C2               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8908  003192  6EDA               	movwf	fsr2h,c
  8909  003194  50DF               	movf	indf2,w,c
  8910  003196  0B0F               	andlw	15
  8911  003198  ECA5  F023         	call	_hexToStr
  8912  00319C  EC2B  F022         	call	_EUSART_Write
  8913  0031A0  0100               	movlb	0	; () banked
  8914  0031A2  2BC6               	incf	sendDataCommand@byteCount_1443& (0+255),f,b
  8915  0031A4                     l628:
  8916                           
  8917                           ; BSR set to: 0
  8918                           
  8919                           ; BSR set to: 0
  8920  0031A4  51C3               	movf	sendDataCommand@dataLength& (0+255),w,b
  8921  0031A6  5DC6               	subwf	sendDataCommand@byteCount_1443& (0+255),w,b
  8922  0031A8  A0D8               	btfss	status,0,c
  8923  0031AA  D7DB               	goto	l629
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;MOTEapp.c: 1123: }
  8927                           ;MOTEapp.c: 1124: EndLine();
  8928                           
  8929                           ; BSR set to: 0
  8930  0031AC  EC22  F025         	call	_EndLine	;wreg free
  8931  0031B0  0012               	return		;funcret
  8932  0031B2                     __end_of_sendDataCommand:
  8933                           	opt stack 0
  8934                           tblptru	equ	0xFF8
  8935                           tblptrh	equ	0xFF7
  8936                           tblptrl	equ	0xFF6
  8937                           tablat	equ	0xFF5
  8938                           prodh	equ	0xFF4
  8939                           prodl	equ	0xFF3
  8940                           intcon	equ	0xFF2
  8941                           postinc0	equ	0xFEE
  8942                           wreg	equ	0xFE8
  8943                           indf1	equ	0xFE7
  8944                           postdec1	equ	0xFE5
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           indf2	equ	0xFDF
  8948                           fsr2h	equ	0xFDA
  8949                           fsr2l	equ	0xFD9
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function _hexToStr *****************
  8953 ;; Defined at:
  8954 ;;		line 1136 in file "../Includes/Board/MOTEapp.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  character       1    wreg     unsigned char 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  character       1    0[BANK0 ] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8968 ;;      Params:         0       0       0       0       0       0       0       0       0
  8969 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8971 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8972 ;;Total ram usage:        1 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:   11
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_sendDataCommand
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text11
  8983  00474A                     __ptext11:
  8984                           	opt stack 0
  8985  00474A                     _hexToStr:
  8986                           	opt stack 16
  8987                           
  8988                           ;incstack = 0
  8989                           ;hexToStr@character stored from wreg
  8990  00474A  0100               	movlb	0	; () banked
  8991  00474C  6FBE               	movwf	hexToStr@character& (0+255),b
  8992                           
  8993                           ;MOTEapp.c: 1139: character = character & 0x0F;
  8994  00474E  0100               	movlb	0	; () banked
  8995  004750  51BE               	movf	hexToStr@character& (0+255),w,b
  8996  004752  0B0F               	andlw	15
  8997  004754  6FBE               	movwf	hexToStr@character& (0+255),b
  8998                           
  8999                           ;MOTEapp.c: 1141: if (character < 0x0A)
  9000  004756  0E0A               	movlw	10
  9001  004758  61BE               	cpfslt	hexToStr@character& (0+255),b
  9002  00475A  D003               	goto	l639
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;MOTEapp.c: 1142: {
  9006                           ;MOTEapp.c: 1143: return character + '0';
  9007  00475C  51BE               	movf	hexToStr@character& (0+255),w,b
  9008  00475E  0F30               	addlw	48
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;MOTEapp.c: 1144: }
  9012                           
  9013                           ; BSR set to: 0
  9014  004760  0012               	return	
  9015  004762                     l639:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;MOTEapp.c: 1145: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9019                           
  9020                           ; BSR set to: 0
  9021  004762  0E09               	movlw	9
  9022  004764  65BE               	cpfsgt	hexToStr@character& (0+255),b
  9023  004766  D006               	goto	l642
  9024                           
  9025                           ; BSR set to: 0
  9026  004768  0E10               	movlw	16
  9027  00476A  61BE               	cpfslt	hexToStr@character& (0+255),b
  9028  00476C  D003               	goto	l642
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;MOTEapp.c: 1146: {
  9032                           ;MOTEapp.c: 1147: return character + '0' + 7;
  9033  00476E  51BE               	movf	hexToStr@character& (0+255),w,b
  9034  004770  0F37               	addlw	55
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;MOTEapp.c: 1148: }
  9038                           
  9039                           ; BSR set to: 0
  9040  004772  0012               	return	
  9041  004774                     l642:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;MOTEapp.c: 1149: else
  9045                           ;MOTEapp.c: 1150: {
  9046                           ;MOTEapp.c: 1151: return 0;
  9047                           
  9048                           ; BSR set to: 0
  9049  004774  0E00               	movlw	0
  9050                           
  9051                           ; BSR set to: 0
  9052                           
  9053                           ; BSR set to: 0
  9054  004776  0012               	return	
  9055  004778                     __end_of_hexToStr:
  9056                           	opt stack 0
  9057                           tblptru	equ	0xFF8
  9058                           tblptrh	equ	0xFF7
  9059                           tblptrl	equ	0xFF6
  9060                           tablat	equ	0xFF5
  9061                           prodh	equ	0xFF4
  9062                           prodl	equ	0xFF3
  9063                           intcon	equ	0xFF2
  9064                           postinc0	equ	0xFEE
  9065                           wreg	equ	0xFE8
  9066                           indf1	equ	0xFE7
  9067                           postdec1	equ	0xFE5
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           
  9075 ;; *************** function _oled_putUint8 *****************
  9076 ;; Defined at:
  9077 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  number          1    wreg     unsigned char 
  9080 ;;  station_dot     1   18[BANK0 ] unsigned char 
  9081 ;;  start_page      1   19[BANK0 ] unsigned char 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  number          1   20[BANK0 ] unsigned char 
  9084 ;;  numData         6   21[BANK0 ] struct .
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9094 ;;      Params:         0       2       0       0       0       0       0       0       0
  9095 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9097 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9098 ;;Total ram usage:        9 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:   16
  9101 ;; This function calls:
  9102 ;;		___awmod
  9103 ;;		___lbdiv
  9104 ;;		_oled_putString
  9105 ;; This function is called by:
  9106 ;;		_test_adc
  9107 ;;		_moteRunningProcess
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text12
  9112  003A58                     __ptext12:
  9113                           	opt stack 0
  9114  003A58                     _oled_putUint8:
  9115                           	opt stack 12
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;incstack = 0
  9119                           ;oled_putUint8@number stored from wreg
  9120  003A58  0100               	movlb	0	; () banked
  9121  003A5A  6FD2               	movwf	oled_putUint8@number& (0+255),b
  9122                           
  9123                           ;SSD1306oLED.c: 258: display_data_t numData;
  9124                           ;SSD1306oLED.c: 259: numData.d2 = '0' + (number % 10);
  9125  003A5C  C0D2  F0BE         	movff	oled_putUint8@number,___awmod@dividend
  9126  003A60  0100               	movlb	0	; () banked
  9127  003A62  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9128  003A64  0E00               	movlw	0
  9129  003A66  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9130  003A68  0E0A               	movlw	10
  9131  003A6A  6FC0               	movwf	___awmod@divisor& (0+255),b
  9132  003A6C  ECBD  F01E         	call	___awmod	;wreg free
  9133  003A70  0100               	movlb	0	; () banked
  9134  003A72  51BE               	movf	?___awmod& (0+255),w,b
  9135  003A74  0F30               	addlw	48
  9136  003A76  6FD5               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9137                           
  9138                           ;SSD1306oLED.c: 260: number /= 10;
  9139  003A78  0E0A               	movlw	10
  9140  003A7A  6FBE               	movwf	___lbdiv@divisor& (0+255),b
  9141  003A7C  51D2               	movf	oled_putUint8@number& (0+255),w,b
  9142  003A7E  EC0C  F022         	call	___lbdiv
  9143  003A82  0100               	movlb	0	; () banked
  9144  003A84  6FD2               	movwf	oled_putUint8@number& (0+255),b
  9145                           
  9146                           ;SSD1306oLED.c: 261: numData.d1 = '0' + (number % 10);
  9147  003A86  C0D2  F0BE         	movff	oled_putUint8@number,___awmod@dividend
  9148  003A8A  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9149  003A8C  0E00               	movlw	0
  9150  003A8E  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9151  003A90  0E0A               	movlw	10
  9152  003A92  6FC0               	movwf	___awmod@divisor& (0+255),b
  9153  003A94  ECBD  F01E         	call	___awmod	;wreg free
  9154  003A98  0100               	movlb	0	; () banked
  9155  003A9A  51BE               	movf	?___awmod& (0+255),w,b
  9156  003A9C  0F30               	addlw	48
  9157  003A9E  6FD4               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9158                           
  9159                           ;SSD1306oLED.c: 262: number /= 10;
  9160  003AA0  0E0A               	movlw	10
  9161  003AA2  6FBE               	movwf	___lbdiv@divisor& (0+255),b
  9162  003AA4  51D2               	movf	oled_putUint8@number& (0+255),w,b
  9163  003AA6  EC0C  F022         	call	___lbdiv
  9164  003AAA  0100               	movlb	0	; () banked
  9165  003AAC  6FD2               	movwf	oled_putUint8@number& (0+255),b
  9166                           
  9167                           ;SSD1306oLED.c: 263: numData.d0 = '0' + (number % 10);
  9168  003AAE  C0D2  F0BE         	movff	oled_putUint8@number,___awmod@dividend
  9169  003AB2  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9170  003AB4  0E00               	movlw	0
  9171  003AB6  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9172  003AB8  0E0A               	movlw	10
  9173  003ABA  6FC0               	movwf	___awmod@divisor& (0+255),b
  9174  003ABC  ECBD  F01E         	call	___awmod	;wreg free
  9175  003AC0  0100               	movlb	0	; () banked
  9176  003AC2  51BE               	movf	?___awmod& (0+255),w,b
  9177  003AC4  0F30               	addlw	48
  9178  003AC6  6FD3               	movwf	oled_putUint8@numData& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;SSD1306oLED.c: 265: numData.b[3]=0;
  9182  003AC8  0E00               	movlw	0
  9183  003ACA  6FD6               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;SSD1306oLED.c: 267: oled_putString(numData.b,station_dot,start_page);
  9187  003ACC  0ED3               	movlw	low oled_putUint8@numData
  9188  003ACE  6FCB               	movwf	oled_putString@string& (0+255),b
  9189  003AD0  0E00               	movlw	high oled_putUint8@numData
  9190  003AD2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  9191  003AD4  C0D0  F0CD         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9192  003AD8  C0D1  F0CE         	movff	oled_putUint8@start_page,oled_putString@start_page
  9193  003ADC  EC2E  F01F         	call	_oled_putString	;wreg free
  9194  003AE0  0012               	return		;funcret
  9195  003AE2                     __end_of_oled_putUint8:
  9196                           	opt stack 0
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           prodh	equ	0xFF4
  9202                           prodl	equ	0xFF3
  9203                           intcon	equ	0xFF2
  9204                           postinc0	equ	0xFEE
  9205                           wreg	equ	0xFE8
  9206                           indf1	equ	0xFE7
  9207                           postdec1	equ	0xFE5
  9208                           fsr1h	equ	0xFE2
  9209                           fsr1l	equ	0xFE1
  9210                           indf2	equ	0xFDF
  9211                           fsr2h	equ	0xFDA
  9212                           fsr2l	equ	0xFD9
  9213                           status	equ	0xFD8
  9214                           
  9215 ;; *************** function _oled_putUint16 *****************
  9216 ;; Defined at:
  9217 ;;		line 270 in file "../Includes/Drivers/SSD1306oLED.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  number          2   18[BANK0 ] unsigned int 
  9220 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9221 ;;  start_page      1   21[BANK0 ] unsigned char 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;  numData         6   22[BANK0 ] struct .
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9233 ;;      Params:         0       4       0       0       0       0       0       0       0
  9234 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9236 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9237 ;;Total ram usage:       10 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:   16
  9240 ;; This function calls:
  9241 ;;		___lwdiv
  9242 ;;		___lwmod
  9243 ;;		_oled_putString
  9244 ;; This function is called by:
  9245 ;;		_test_adc
  9246 ;;		_moteRunningProcess
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text13
  9251  002394                     __ptext13:
  9252                           	opt stack 0
  9253  002394                     _oled_putUint16:
  9254                           	opt stack 12
  9255                           
  9256                           ;SSD1306oLED.c: 272: display_data_t numData;
  9257                           ;SSD1306oLED.c: 273: numData.d4 = '0' + (number % 10);
  9258                           
  9259                           ;incstack = 0
  9260  002394  C0D0  F0BE         	movff	oled_putUint16@number,___lwmod@dividend
  9261  002398  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9262  00239C  0E00               	movlw	0
  9263  00239E  0100               	movlb	0	; () banked
  9264  0023A0  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9265  0023A2  0E0A               	movlw	10
  9266  0023A4  6FC0               	movwf	___lwmod@divisor& (0+255),b
  9267  0023A6  ECA8  F021         	call	___lwmod	;wreg free
  9268  0023AA  0100               	movlb	0	; () banked
  9269  0023AC  51BE               	movf	?___lwmod& (0+255),w,b
  9270  0023AE  0F30               	addlw	48
  9271  0023B0  6FD8               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9272                           
  9273                           ;SSD1306oLED.c: 274: number /= 10;
  9274  0023B2  C0D0  F0BE         	movff	oled_putUint16@number,___lwdiv@dividend
  9275  0023B6  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9276  0023BA  0E00               	movlw	0
  9277  0023BC  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9278  0023BE  0E0A               	movlw	10
  9279  0023C0  6FC0               	movwf	___lwdiv@divisor& (0+255),b
  9280  0023C2  EC13  F021         	call	___lwdiv	;wreg free
  9281  0023C6  C0BE  F0D0         	movff	?___lwdiv,oled_putUint16@number
  9282  0023CA  C0BF  F0D1         	movff	?___lwdiv+1,oled_putUint16@number+1
  9283                           
  9284                           ;SSD1306oLED.c: 275: numData.d3 = '0' + (number % 10);
  9285  0023CE  C0D0  F0BE         	movff	oled_putUint16@number,___lwmod@dividend
  9286  0023D2  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9287  0023D6  0E00               	movlw	0
  9288  0023D8  0100               	movlb	0	; () banked
  9289  0023DA  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9290  0023DC  0E0A               	movlw	10
  9291  0023DE  6FC0               	movwf	___lwmod@divisor& (0+255),b
  9292  0023E0  ECA8  F021         	call	___lwmod	;wreg free
  9293  0023E4  0100               	movlb	0	; () banked
  9294  0023E6  51BE               	movf	?___lwmod& (0+255),w,b
  9295  0023E8  0F30               	addlw	48
  9296  0023EA  6FD7               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9297                           
  9298                           ;SSD1306oLED.c: 276: number /= 10;
  9299  0023EC  C0D0  F0BE         	movff	oled_putUint16@number,___lwdiv@dividend
  9300  0023F0  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9301  0023F4  0E00               	movlw	0
  9302  0023F6  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9303  0023F8  0E0A               	movlw	10
  9304  0023FA  6FC0               	movwf	___lwdiv@divisor& (0+255),b
  9305  0023FC  EC13  F021         	call	___lwdiv	;wreg free
  9306  002400  C0BE  F0D0         	movff	?___lwdiv,oled_putUint16@number
  9307  002404  C0BF  F0D1         	movff	?___lwdiv+1,oled_putUint16@number+1
  9308                           
  9309                           ;SSD1306oLED.c: 277: numData.d2 = '0' + (number % 10);
  9310  002408  C0D0  F0BE         	movff	oled_putUint16@number,___lwmod@dividend
  9311  00240C  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9312  002410  0E00               	movlw	0
  9313  002412  0100               	movlb	0	; () banked
  9314  002414  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9315  002416  0E0A               	movlw	10
  9316  002418  6FC0               	movwf	___lwmod@divisor& (0+255),b
  9317  00241A  ECA8  F021         	call	___lwmod	;wreg free
  9318  00241E  0100               	movlb	0	; () banked
  9319  002420  51BE               	movf	?___lwmod& (0+255),w,b
  9320  002422  0F30               	addlw	48
  9321  002424  6FD6               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9322                           
  9323                           ;SSD1306oLED.c: 278: number /= 10;
  9324  002426  C0D0  F0BE         	movff	oled_putUint16@number,___lwdiv@dividend
  9325  00242A  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9326  00242E  0E00               	movlw	0
  9327  002430  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9328  002432  0E0A               	movlw	10
  9329  002434  6FC0               	movwf	___lwdiv@divisor& (0+255),b
  9330  002436  EC13  F021         	call	___lwdiv	;wreg free
  9331  00243A  C0BE  F0D0         	movff	?___lwdiv,oled_putUint16@number
  9332  00243E  C0BF  F0D1         	movff	?___lwdiv+1,oled_putUint16@number+1
  9333                           
  9334                           ;SSD1306oLED.c: 279: numData.d1 = '0' + (number % 10);
  9335  002442  C0D0  F0BE         	movff	oled_putUint16@number,___lwmod@dividend
  9336  002446  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9337  00244A  0E00               	movlw	0
  9338  00244C  0100               	movlb	0	; () banked
  9339  00244E  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9340  002450  0E0A               	movlw	10
  9341  002452  6FC0               	movwf	___lwmod@divisor& (0+255),b
  9342  002454  ECA8  F021         	call	___lwmod	;wreg free
  9343  002458  0100               	movlb	0	; () banked
  9344  00245A  51BE               	movf	?___lwmod& (0+255),w,b
  9345  00245C  0F30               	addlw	48
  9346  00245E  6FD5               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9347                           
  9348                           ;SSD1306oLED.c: 280: number /= 10;
  9349  002460  C0D0  F0BE         	movff	oled_putUint16@number,___lwdiv@dividend
  9350  002464  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9351  002468  0E00               	movlw	0
  9352  00246A  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9353  00246C  0E0A               	movlw	10
  9354  00246E  6FC0               	movwf	___lwdiv@divisor& (0+255),b
  9355  002470  EC13  F021         	call	___lwdiv	;wreg free
  9356  002474  C0BE  F0D0         	movff	?___lwdiv,oled_putUint16@number
  9357  002478  C0BF  F0D1         	movff	?___lwdiv+1,oled_putUint16@number+1
  9358                           
  9359                           ;SSD1306oLED.c: 281: numData.d0 = '0' + (number % 10);
  9360  00247C  C0D0  F0BE         	movff	oled_putUint16@number,___lwmod@dividend
  9361  002480  C0D1  F0BF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9362  002484  0E00               	movlw	0
  9363  002486  0100               	movlb	0	; () banked
  9364  002488  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9365  00248A  0E0A               	movlw	10
  9366  00248C  6FC0               	movwf	___lwmod@divisor& (0+255),b
  9367  00248E  ECA8  F021         	call	___lwmod	;wreg free
  9368  002492  0100               	movlb	0	; () banked
  9369  002494  51BE               	movf	?___lwmod& (0+255),w,b
  9370  002496  0F30               	addlw	48
  9371  002498  6FD4               	movwf	oled_putUint16@numData& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;SSD1306oLED.c: 283: numData.b[5]=0;
  9375  00249A  0E00               	movlw	0
  9376  00249C  6FD9               	movwf	(oled_putUint16@numData+5)& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;SSD1306oLED.c: 285: oled_putString(numData.b,station_dot,start_page);
  9380  00249E  0ED4               	movlw	low oled_putUint16@numData
  9381  0024A0  6FCB               	movwf	oled_putString@string& (0+255),b
  9382  0024A2  0E00               	movlw	high oled_putUint16@numData
  9383  0024A4  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
  9384  0024A6  C0D2  F0CD         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9385  0024AA  C0D3  F0CE         	movff	oled_putUint16@start_page,oled_putString@start_page
  9386  0024AE  EC2E  F01F         	call	_oled_putString	;wreg free
  9387  0024B2  0012               	return		;funcret
  9388  0024B4                     __end_of_oled_putUint16:
  9389                           	opt stack 0
  9390                           tblptru	equ	0xFF8
  9391                           tblptrh	equ	0xFF7
  9392                           tblptrl	equ	0xFF6
  9393                           tablat	equ	0xFF5
  9394                           prodh	equ	0xFF4
  9395                           prodl	equ	0xFF3
  9396                           intcon	equ	0xFF2
  9397                           postinc0	equ	0xFEE
  9398                           wreg	equ	0xFE8
  9399                           indf1	equ	0xFE7
  9400                           postdec1	equ	0xFE5
  9401                           fsr1h	equ	0xFE2
  9402                           fsr1l	equ	0xFE1
  9403                           indf2	equ	0xFDF
  9404                           fsr2h	equ	0xFDA
  9405                           fsr2l	equ	0xFD9
  9406                           status	equ	0xFD8
  9407                           
  9408 ;; *************** function _moteApp_clearBuffers *****************
  9409 ;; Defined at:
  9410 ;;		line 1250 in file "../Includes/Board/MOTEapp.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;		None
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;  counter         1    3[BANK0 ] unsigned char 
  9415 ;;  counter         1    2[BANK0 ] unsigned char 
  9416 ;;  counter         1    1[BANK0 ] unsigned char 
  9417 ;;  counter         1    0[BANK0 ] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0
  9428 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9430 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9431 ;;Total ram usage:        4 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:   11
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_moteRunningProcess
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text14
  9442  00393C                     __ptext14:
  9443                           	opt stack 0
  9444  00393C                     _moteApp_clearBuffers:
  9445                           	opt stack 17
  9446                           
  9447                           ;MOTEapp.c: 1252: for (uint8_t counter = 0; counter < 3; counter++)
  9448                           
  9449                           ;incstack = 0
  9450  00393C  0E00               	movlw	0
  9451  00393E  0100               	movlb	0	; () banked
  9452  003940  6FBE               	movwf	moteApp_clearBuffers@counter& (0+255),b
  9453  003942                     l7535:
  9454                           
  9455                           ; BSR set to: 0
  9456  003942  0E02               	movlw	2
  9457  003944  65BE               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  9458  003946  D001               	goto	l663
  9459  003948  D00C               	goto	u5640
  9460  00394A                     l663:
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;MOTEapp.c: 1253: {
  9464                           ;MOTEapp.c: 1254: responsePortNum[counter] = 0;
  9465                           
  9466                           ; BSR set to: 0
  9467  00394A  51BE               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  9468  00394C  0D01               	mullw	1
  9469  00394E  0EBB               	movlw	low _responsePortNum
  9470  003950  24F3               	addwf	prodl,w,c
  9471  003952  6ED9               	movwf	fsr2l,c
  9472  003954  0E00               	movlw	high _responsePortNum
  9473  003956  20F4               	addwfc	prodh,w,c
  9474  003958  6EDA               	movwf	fsr2h,c
  9475  00395A  0E00               	movlw	0
  9476  00395C  6EDF               	movwf	indf2,c
  9477                           
  9478                           ; BSR set to: 0
  9479  00395E  2BBE               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  9480  003960  D7F0               	goto	l7535
  9481  003962                     u5640:
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;MOTEapp.c: 1255: }
  9485                           ;MOTEapp.c: 1256: for (uint8_t counter = 0; counter < 34; counter++)
  9486                           
  9487                           ; BSR set to: 0
  9488  003962  0E00               	movlw	0
  9489  003964  6FBF               	movwf	moteApp_clearBuffers@counter_1511& (0+255),b
  9490  003966                     l7547:
  9491                           
  9492                           ; BSR set to: 0
  9493  003966  0E21               	movlw	33
  9494  003968  65BF               	cpfsgt	moteApp_clearBuffers@counter_1511& (0+255),b
  9495  00396A  D001               	goto	l665
  9496  00396C  D00C               	goto	u5660
  9497  00396E                     l665:
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;MOTEapp.c: 1257: {
  9501                           ;MOTEapp.c: 1258: responseId[counter] = 0;
  9502                           
  9503                           ; BSR set to: 0
  9504  00396E  51BF               	movf	moteApp_clearBuffers@counter_1511& (0+255),w,b
  9505  003970  0D01               	mullw	1
  9506  003972  0E10               	movlw	low _responseId
  9507  003974  24F3               	addwf	prodl,w,c
  9508  003976  6ED9               	movwf	fsr2l,c
  9509  003978  0E01               	movlw	high _responseId
  9510  00397A  20F4               	addwfc	prodh,w,c
  9511  00397C  6EDA               	movwf	fsr2h,c
  9512  00397E  0E00               	movlw	0
  9513  003980  6EDF               	movwf	indf2,c
  9514                           
  9515                           ; BSR set to: 0
  9516  003982  2BBF               	incf	moteApp_clearBuffers@counter_1511& (0+255),f,b
  9517  003984  D7F0               	goto	l7547
  9518  003986                     u5660:
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;MOTEapp.c: 1259: }
  9522                           ;MOTEapp.c: 1260: for (uint8_t counter = 0; counter < 32; counter++)
  9523                           
  9524                           ; BSR set to: 0
  9525  003986  0E00               	movlw	0
  9526  003988  6FC0               	movwf	moteApp_clearBuffers@counter_1512& (0+255),b
  9527  00398A                     l7559:
  9528                           
  9529                           ; BSR set to: 0
  9530  00398A  0E1F               	movlw	31
  9531  00398C  65C0               	cpfsgt	moteApp_clearBuffers@counter_1512& (0+255),b
  9532  00398E  D001               	goto	l667
  9533  003990  D00C               	goto	u5680
  9534  003992                     l667:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;MOTEapp.c: 1261: {
  9538                           ;MOTEapp.c: 1262: responseData[counter] = 0;
  9539                           
  9540                           ; BSR set to: 0
  9541  003992  51C0               	movf	moteApp_clearBuffers@counter_1512& (0+255),w,b
  9542  003994  0D01               	mullw	1
  9543  003996  0EA0               	movlw	low _responseData
  9544  003998  24F3               	addwf	prodl,w,c
  9545  00399A  6ED9               	movwf	fsr2l,c
  9546  00399C  0E01               	movlw	high _responseData
  9547  00399E  20F4               	addwfc	prodh,w,c
  9548  0039A0  6EDA               	movwf	fsr2h,c
  9549  0039A2  0E00               	movlw	0
  9550  0039A4  6EDF               	movwf	indf2,c
  9551                           
  9552                           ; BSR set to: 0
  9553  0039A6  2BC0               	incf	moteApp_clearBuffers@counter_1512& (0+255),f,b
  9554  0039A8  D7F0               	goto	l7559
  9555  0039AA                     u5680:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;MOTEapp.c: 1263: }
  9559                           ;MOTEapp.c: 1264: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
  9560                           
  9561                           ; BSR set to: 0
  9562  0039AA  0E00               	movlw	0
  9563  0039AC  6FC1               	movwf	moteApp_clearBuffers@counter_1513& (0+255),b
  9564  0039AE                     l7571:
  9565                           
  9566                           ; BSR set to: 0
  9567  0039AE  0E0F               	movlw	15
  9568  0039B0  65C1               	cpfsgt	moteApp_clearBuffers@counter_1513& (0+255),b
  9569  0039B2  D001               	goto	l669
  9570  0039B4  0012               	return	
  9571  0039B6                     l669:
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;MOTEapp.c: 1265: {
  9575                           ;MOTEapp.c: 1266: dataBuffer[counter] = 0;
  9576                           
  9577                           ; BSR set to: 0
  9578  0039B6  51C1               	movf	moteApp_clearBuffers@counter_1513& (0+255),w,b
  9579  0039B8  0D01               	mullw	1
  9580  0039BA  0EC0               	movlw	low _dataBuffer
  9581  0039BC  24F3               	addwf	prodl,w,c
  9582  0039BE  6ED9               	movwf	fsr2l,c
  9583  0039C0  0E01               	movlw	high _dataBuffer
  9584  0039C2  20F4               	addwfc	prodh,w,c
  9585  0039C4  6EDA               	movwf	fsr2h,c
  9586  0039C6  0E00               	movlw	0
  9587  0039C8  6EDF               	movwf	indf2,c
  9588                           
  9589                           ; BSR set to: 0
  9590  0039CA  2BC1               	incf	moteApp_clearBuffers@counter_1513& (0+255),f,b
  9591  0039CC  D7F0               	goto	l7571
  9592  0039CE                     __end_of_moteApp_clearBuffers:
  9593                           	opt stack 0
  9594                           tblptru	equ	0xFF8
  9595                           tblptrh	equ	0xFF7
  9596                           tblptrl	equ	0xFF6
  9597                           tablat	equ	0xFF5
  9598                           prodh	equ	0xFF4
  9599                           prodl	equ	0xFF3
  9600                           intcon	equ	0xFF2
  9601                           postinc0	equ	0xFEE
  9602                           wreg	equ	0xFE8
  9603                           indf1	equ	0xFE7
  9604                           postdec1	equ	0xFE5
  9605                           fsr1h	equ	0xFE2
  9606                           fsr1l	equ	0xFE1
  9607                           indf2	equ	0xFDF
  9608                           fsr2h	equ	0xFDA
  9609                           fsr2l	equ	0xFD9
  9610                           status	equ	0xFD8
  9611                           
  9612 ;; *************** function _moteApp_add8bToDataBuffer *****************
  9613 ;; Defined at:
  9614 ;;		line 1270 in file "../Includes/Board/MOTEapp.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  number          1    wreg     unsigned char 
  9617 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  number          1    9[BANK0 ] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9629 ;;      Params:         0       1       0       0       0       0       0       0       0
  9630 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9631 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9632 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9633 ;;Total ram usage:        4 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:   12
  9636 ;; This function calls:
  9637 ;;		___awmod
  9638 ;;		___lbdiv
  9639 ;; This function is called by:
  9640 ;;		_moteRunningProcess
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text15
  9645  00349A                     __ptext15:
  9646                           	opt stack 0
  9647  00349A                     _moteApp_add8bToDataBuffer:
  9648                           	opt stack 16
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;incstack = 0
  9652                           ;moteApp_add8bToDataBuffer@number stored from wreg
  9653  00349A  0100               	movlb	0	; () banked
  9654  00349C  6FC7               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9655                           
  9656                           ;MOTEapp.c: 1272: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  9657  00349E  0100               	movlb	0	; () banked
  9658  0034A0  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9659  0034A2  6FC5               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
  9660  0034A4  6BC6               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
  9661  0034A6  0E02               	movlw	2
  9662  0034A8  27C5               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
  9663  0034AA  0E00               	movlw	0
  9664  0034AC  23C6               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
  9665  0034AE  0EC0               	movlw	low _dataBuffer
  9666  0034B0  25C5               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
  9667  0034B2  6ED9               	movwf	fsr2l,c
  9668  0034B4  0E01               	movlw	high _dataBuffer
  9669  0034B6  21C6               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
  9670  0034B8  6EDA               	movwf	fsr2h,c
  9671  0034BA  C0C7  F0BE         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  9672  0034BE  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9673  0034C0  0E00               	movlw	0
  9674  0034C2  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9675  0034C4  0E0A               	movlw	10
  9676  0034C6  6FC0               	movwf	___awmod@divisor& (0+255),b
  9677  0034C8  ECBD  F01E         	call	___awmod	;wreg free
  9678  0034CC  0100               	movlb	0	; () banked
  9679  0034CE  51BE               	movf	?___awmod& (0+255),w,b
  9680  0034D0  0F30               	addlw	48
  9681  0034D2  6EDF               	movwf	indf2,c
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;MOTEapp.c: 1273: number /= 10;
  9685  0034D4  0E0A               	movlw	10
  9686  0034D6  6FBE               	movwf	___lbdiv@divisor& (0+255),b
  9687  0034D8  51C7               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9688  0034DA  EC0C  F022         	call	___lbdiv
  9689  0034DE  0100               	movlb	0	; () banked
  9690  0034E0  6FC7               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;MOTEapp.c: 1274: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9694  0034E2  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9695  0034E4  6FC5               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
  9696  0034E6  6BC6               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
  9697  0034E8  0E01               	movlw	1
  9698  0034EA  27C5               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
  9699  0034EC  0E00               	movlw	0
  9700  0034EE  23C6               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
  9701  0034F0  0EC0               	movlw	low _dataBuffer
  9702  0034F2  25C5               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
  9703  0034F4  6ED9               	movwf	fsr2l,c
  9704  0034F6  0E01               	movlw	high _dataBuffer
  9705  0034F8  21C6               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
  9706  0034FA  6EDA               	movwf	fsr2h,c
  9707  0034FC  C0C7  F0BE         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  9708  003500  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9709  003502  0E00               	movlw	0
  9710  003504  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9711  003506  0E0A               	movlw	10
  9712  003508  6FC0               	movwf	___awmod@divisor& (0+255),b
  9713  00350A  ECBD  F01E         	call	___awmod	;wreg free
  9714  00350E  0100               	movlb	0	; () banked
  9715  003510  51BE               	movf	?___awmod& (0+255),w,b
  9716  003512  0F30               	addlw	48
  9717  003514  6EDF               	movwf	indf2,c
  9718                           
  9719                           ;MOTEapp.c: 1275: number /= 10;
  9720  003516  0E0A               	movlw	10
  9721  003518  6FBE               	movwf	___lbdiv@divisor& (0+255),b
  9722  00351A  51C7               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9723  00351C  EC0C  F022         	call	___lbdiv
  9724  003520  0100               	movlb	0	; () banked
  9725  003522  6FC7               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;MOTEapp.c: 1276: dataBuffer[bufferLocation] = '0' + (number % 10);
  9729  003524  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9730  003526  0D01               	mullw	1
  9731  003528  0EC0               	movlw	low _dataBuffer
  9732  00352A  24F3               	addwf	prodl,w,c
  9733  00352C  6ED9               	movwf	fsr2l,c
  9734  00352E  0E01               	movlw	high _dataBuffer
  9735  003530  20F4               	addwfc	prodh,w,c
  9736  003532  6EDA               	movwf	fsr2h,c
  9737  003534  C0C7  F0BE         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  9738  003538  6BBF               	clrf	(___awmod@dividend+1)& (0+255),b
  9739  00353A  0E00               	movlw	0
  9740  00353C  6FC1               	movwf	(___awmod@divisor+1)& (0+255),b
  9741  00353E  0E0A               	movlw	10
  9742  003540  6FC0               	movwf	___awmod@divisor& (0+255),b
  9743  003542  ECBD  F01E         	call	___awmod	;wreg free
  9744  003546  0100               	movlb	0	; () banked
  9745  003548  51BE               	movf	?___awmod& (0+255),w,b
  9746  00354A  0F30               	addlw	48
  9747  00354C  6EDF               	movwf	indf2,c
  9748                           
  9749                           ; BSR set to: 0
  9750  00354E  0012               	return		;funcret
  9751  003550                     __end_of_moteApp_add8bToDataBuffer:
  9752                           	opt stack 0
  9753                           tblptru	equ	0xFF8
  9754                           tblptrh	equ	0xFF7
  9755                           tblptrl	equ	0xFF6
  9756                           tablat	equ	0xFF5
  9757                           prodh	equ	0xFF4
  9758                           prodl	equ	0xFF3
  9759                           intcon	equ	0xFF2
  9760                           postinc0	equ	0xFEE
  9761                           wreg	equ	0xFE8
  9762                           indf1	equ	0xFE7
  9763                           postdec1	equ	0xFE5
  9764                           fsr1h	equ	0xFE2
  9765                           fsr1l	equ	0xFE1
  9766                           indf2	equ	0xFDF
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function ___lbdiv *****************
  9772 ;; Defined at:
  9773 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  dividend        1    wreg     unsigned char 
  9776 ;;  divisor         1    0[BANK0 ] unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;  dividend        1    1[BANK0 ] unsigned char 
  9779 ;;  quotient        1    3[BANK0 ] unsigned char 
  9780 ;;  counter         1    2[BANK0 ] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      unsigned char 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9790 ;;      Params:         0       1       0       0       0       0       0       0       0
  9791 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9793 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9794 ;;Total ram usage:        4 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:   11
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_moteApp_add8bToDataBuffer
  9801 ;;		_oled_putUint8
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text16
  9806  004418                     __ptext16:
  9807                           	opt stack 0
  9808  004418                     ___lbdiv:
  9809                           	opt stack 16
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;incstack = 0
  9813                           ;___lbdiv@dividend stored from wreg
  9814  004418  0100               	movlb	0	; () banked
  9815  00441A  6FBF               	movwf	___lbdiv@dividend& (0+255),b
  9816  00441C  0E00               	movlw	0
  9817  00441E  0100               	movlb	0	; () banked
  9818  004420  6FC1               	movwf	___lbdiv@quotient& (0+255),b
  9819                           
  9820                           ; BSR set to: 0
  9821  004422  51BE               	movf	___lbdiv@divisor& (0+255),w,b
  9822  004424  B4D8               	btfsc	status,2,c
  9823  004426  D015               	goto	l2259
  9824                           
  9825                           ; BSR set to: 0
  9826  004428  0E01               	movlw	1
  9827  00442A  6FC0               	movwf	___lbdiv@counter& (0+255),b
  9828  00442C  D003               	goto	l2254
  9829  00442E                     
  9830                           ; BSR set to: 0
  9831                           
  9832                           ; BSR set to: 0
  9833  00442E  90D8               	bcf	status,0,c
  9834  004430  37BE               	rlcf	___lbdiv@divisor& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837  004432  2BC0               	incf	___lbdiv@counter& (0+255),f,b
  9838  004434                     l2254:
  9839                           
  9840                           ; BSR set to: 0
  9841                           
  9842                           ; BSR set to: 0
  9843  004434  AFBE               	btfss	___lbdiv@divisor& (0+255),7,b
  9844  004436  D7FB               	goto	l2255
  9845  004438                     u5460:
  9846                           
  9847                           ; BSR set to: 0
  9848                           
  9849                           ; BSR set to: 0
  9850                           
  9851                           ; BSR set to: 0
  9852  004438  90D8               	bcf	status,0,c
  9853  00443A  37C1               	rlcf	___lbdiv@quotient& (0+255),f,b
  9854  00443C  51BE               	movf	___lbdiv@divisor& (0+255),w,b
  9855  00443E  5DBF               	subwf	___lbdiv@dividend& (0+255),w,b
  9856  004440  A0D8               	btfss	status,0,c
  9857  004442  D003               	goto	l2258
  9858                           
  9859                           ; BSR set to: 0
  9860  004444  51BE               	movf	___lbdiv@divisor& (0+255),w,b
  9861  004446  5FBF               	subwf	___lbdiv@dividend& (0+255),f,b
  9862                           
  9863                           ; BSR set to: 0
  9864  004448  81C1               	bsf	___lbdiv@quotient& (0+255),0,b
  9865  00444A                     l2258:
  9866                           
  9867                           ; BSR set to: 0
  9868                           
  9869                           ; BSR set to: 0
  9870  00444A  90D8               	bcf	status,0,c
  9871  00444C  33BE               	rrcf	___lbdiv@divisor& (0+255),f,b
  9872                           
  9873                           ; BSR set to: 0
  9874  00444E  2FC0               	decfsz	___lbdiv@counter& (0+255),f,b
  9875  004450  D7F3               	goto	u5460
  9876  004452                     l2259:
  9877                           
  9878                           ; BSR set to: 0
  9879                           
  9880                           ; BSR set to: 0
  9881                           
  9882                           ; BSR set to: 0
  9883  004452  51C1               	movf	___lbdiv@quotient& (0+255),w,b
  9884  004454  0012               	return	
  9885  004456                     __end_of___lbdiv:
  9886                           	opt stack 0
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           postinc0	equ	0xFEE
  9895                           wreg	equ	0xFE8
  9896                           indf1	equ	0xFE7
  9897                           postdec1	equ	0xFE5
  9898                           fsr1h	equ	0xFE2
  9899                           fsr1l	equ	0xFE1
  9900                           indf2	equ	0xFDF
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function ___awmod *****************
  9906 ;; Defined at:
  9907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  dividend        2    0[BANK0 ] int 
  9910 ;;  divisor         2    2[BANK0 ] int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  sign            1    5[BANK0 ] unsigned char 
  9913 ;;  counter         1    4[BANK0 ] unsigned char 
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  2    0[BANK0 ] int 
  9916 ;; Registers used:
  9917 ;;		wreg, status,2, status,0
  9918 ;; Tracked objects:
  9919 ;;		On entry : 0/0
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9923 ;;      Params:         0       4       0       0       0       0       0       0       0
  9924 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9926 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9927 ;;Total ram usage:        6 bytes
  9928 ;; Hardware stack levels used:    1
  9929 ;; Hardware stack levels required when called:   11
  9930 ;; This function calls:
  9931 ;;		Nothing
  9932 ;; This function is called by:
  9933 ;;		_moteApp_add8bToDataBuffer
  9934 ;;		_oled_putUint8
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text17
  9939  003D7A                     __ptext17:
  9940                           	opt stack 0
  9941  003D7A                     ___awmod:
  9942                           	opt stack 16
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;incstack = 0
  9946  003D7A  0E00               	movlw	0
  9947  003D7C  0100               	movlb	0	; () banked
  9948  003D7E  6FC3               	movwf	___awmod@sign& (0+255),b
  9949                           
  9950                           ; BSR set to: 0
  9951  003D80  AFBF               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9952  003D82  D006               	goto	l2105
  9953                           
  9954                           ; BSR set to: 0
  9955  003D84  6DBE               	negf	___awmod@dividend& (0+255),b
  9956  003D86  1FBF               	comf	(___awmod@dividend+1)& (0+255),f,b
  9957  003D88  B0D8               	btfsc	status,0,c
  9958  003D8A  2BBF               	incf	(___awmod@dividend+1)& (0+255),f,b
  9959                           
  9960                           ; BSR set to: 0
  9961  003D8C  0E01               	movlw	1
  9962  003D8E  6FC3               	movwf	___awmod@sign& (0+255),b
  9963  003D90                     l2105:
  9964                           
  9965                           ; BSR set to: 0
  9966                           
  9967                           ; BSR set to: 0
  9968  003D90  AFC1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9969  003D92  D004               	goto	l2106
  9970                           
  9971                           ; BSR set to: 0
  9972  003D94  6DC0               	negf	___awmod@divisor& (0+255),b
  9973  003D96  1FC1               	comf	(___awmod@divisor+1)& (0+255),f,b
  9974  003D98  B0D8               	btfsc	status,0,c
  9975  003D9A  2BC1               	incf	(___awmod@divisor+1)& (0+255),f,b
  9976  003D9C                     l2106:
  9977                           
  9978                           ; BSR set to: 0
  9979                           
  9980                           ; BSR set to: 0
  9981  003D9C  51C0               	movf	___awmod@divisor& (0+255),w,b
  9982  003D9E  11C1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9983  003DA0  B4D8               	btfsc	status,2,c
  9984  003DA2  D018               	goto	l2113
  9985                           
  9986                           ; BSR set to: 0
  9987  003DA4  0E01               	movlw	1
  9988  003DA6  6FC2               	movwf	___awmod@counter& (0+255),b
  9989  003DA8  D004               	goto	l2108
  9990  003DAA                     
  9991                           ; BSR set to: 0
  9992                           
  9993                           ; BSR set to: 0
  9994  003DAA  90D8               	bcf	status,0,c
  9995  003DAC  37C0               	rlcf	___awmod@divisor& (0+255),f,b
  9996  003DAE  37C1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9997  003DB0  2BC2               	incf	___awmod@counter& (0+255),f,b
  9998  003DB2                     l2108:
  9999                           
 10000                           ; BSR set to: 0
 10001                           
 10002                           ; BSR set to: 0
 10003  003DB2  AFC1               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10004  003DB4  D7FA               	goto	l2109
 10005  003DB6                     u5420:
 10006                           
 10007                           ; BSR set to: 0
 10008                           
 10009                           ; BSR set to: 0
 10010                           
 10011                           ; BSR set to: 0
 10012  003DB6  51C0               	movf	___awmod@divisor& (0+255),w,b
 10013  003DB8  5DBE               	subwf	___awmod@dividend& (0+255),w,b
 10014  003DBA  51C1               	movf	(___awmod@divisor+1)& (0+255),w,b
 10015  003DBC  59BF               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10016  003DBE  A0D8               	btfss	status,0,c
 10017  003DC0  D004               	goto	l2112
 10018                           
 10019                           ; BSR set to: 0
 10020  003DC2  51C0               	movf	___awmod@divisor& (0+255),w,b
 10021  003DC4  5FBE               	subwf	___awmod@dividend& (0+255),f,b
 10022  003DC6  51C1               	movf	(___awmod@divisor+1)& (0+255),w,b
 10023  003DC8  5BBF               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10024  003DCA                     l2112:
 10025                           
 10026                           ; BSR set to: 0
 10027                           
 10028                           ; BSR set to: 0
 10029  003DCA  90D8               	bcf	status,0,c
 10030  003DCC  33C1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10031  003DCE  33C0               	rrcf	___awmod@divisor& (0+255),f,b
 10032                           
 10033                           ; BSR set to: 0
 10034  003DD0  2FC2               	decfsz	___awmod@counter& (0+255),f,b
 10035  003DD2  D7F1               	goto	u5420
 10036  003DD4                     l2113:
 10037                           
 10038                           ; BSR set to: 0
 10039                           
 10040                           ; BSR set to: 0
 10041                           
 10042                           ; BSR set to: 0
 10043  003DD4  51C3               	movf	___awmod@sign& (0+255),w,b
 10044  003DD6  B4D8               	btfsc	status,2,c
 10045  003DD8  D004               	goto	l2114
 10046                           
 10047                           ; BSR set to: 0
 10048  003DDA  6DBE               	negf	___awmod@dividend& (0+255),b
 10049  003DDC  1FBF               	comf	(___awmod@dividend+1)& (0+255),f,b
 10050  003DDE  B0D8               	btfsc	status,0,c
 10051  003DE0  2BBF               	incf	(___awmod@dividend+1)& (0+255),f,b
 10052  003DE2                     l2114:
 10053                           
 10054                           ; BSR set to: 0
 10055                           
 10056                           ; BSR set to: 0
 10057  003DE2  C0BE  F0BE         	movff	___awmod@dividend,?___awmod
 10058  003DE6  C0BF  F0BF         	movff	___awmod@dividend+1,?___awmod+1
 10059  003DEA  0012               	return	
 10060  003DEC                     __end_of___awmod:
 10061                           	opt stack 0
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           intcon	equ	0xFF2
 10069                           postinc0	equ	0xFEE
 10070                           wreg	equ	0xFE8
 10071                           indf1	equ	0xFE7
 10072                           postdec1	equ	0xFE5
 10073                           fsr1h	equ	0xFE2
 10074                           fsr1l	equ	0xFE1
 10075                           indf2	equ	0xFDF
 10076                           fsr2h	equ	0xFDA
 10077                           fsr2l	equ	0xFD9
 10078                           status	equ	0xFD8
 10079                           
 10080 ;; *************** function _moteApp_add16bToDataBuffer *****************
 10081 ;; Defined at:
 10082 ;;		line 1279 in file "../Includes/Board/MOTEapp.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  number          2    7[BANK0 ] unsigned int 
 10085 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10097 ;;      Params:         0       3       0       0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10099 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10100 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10101 ;;Total ram usage:        5 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:   12
 10104 ;; This function calls:
 10105 ;;		___lwdiv
 10106 ;;		___lwmod
 10107 ;; This function is called by:
 10108 ;;		_moteRunningProcess
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text18
 10113  001990                     __ptext18:
 10114                           	opt stack 0
 10115  001990                     _moteApp_add16bToDataBuffer:
 10116                           	opt stack 16
 10117                           
 10118                           ;MOTEapp.c: 1281: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;incstack = 0
 10122  001990  0100               	movlb	0	; () banked
 10123  001992  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10124  001994  6FC8               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 10125  001996  6BC9               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 10126  001998  0E04               	movlw	4
 10127  00199A  27C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 10128  00199C  0E00               	movlw	0
 10129  00199E  23C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 10130  0019A0  0EC0               	movlw	low _dataBuffer
 10131  0019A2  25C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 10132  0019A4  6ED9               	movwf	fsr2l,c
 10133  0019A6  0E01               	movlw	high _dataBuffer
 10134  0019A8  21C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 10135  0019AA  6EDA               	movwf	fsr2h,c
 10136  0019AC  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10137  0019B0  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10138  0019B4  0E00               	movlw	0
 10139  0019B6  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 10140  0019B8  0E0A               	movlw	10
 10141  0019BA  6FC0               	movwf	___lwmod@divisor& (0+255),b
 10142  0019BC  ECA8  F021         	call	___lwmod	;wreg free
 10143  0019C0  0100               	movlb	0	; () banked
 10144  0019C2  51BE               	movf	?___lwmod& (0+255),w,b
 10145  0019C4  0F30               	addlw	48
 10146  0019C6  6EDF               	movwf	indf2,c
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;MOTEapp.c: 1282: number /= 10;
 10150  0019C8  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10151  0019CC  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10152  0019D0  0E00               	movlw	0
 10153  0019D2  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10154  0019D4  0E0A               	movlw	10
 10155  0019D6  6FC0               	movwf	___lwdiv@divisor& (0+255),b
 10156  0019D8  EC13  F021         	call	___lwdiv	;wreg free
 10157  0019DC  C0BE  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10158  0019E0  C0BF  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10159                           
 10160                           ;MOTEapp.c: 1283: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 10161  0019E4  0100               	movlb	0	; () banked
 10162  0019E6  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10163  0019E8  6FC8               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 10164  0019EA  6BC9               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 10165  0019EC  0E03               	movlw	3
 10166  0019EE  27C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 10167  0019F0  0E00               	movlw	0
 10168  0019F2  23C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 10169  0019F4  0EC0               	movlw	low _dataBuffer
 10170  0019F6  25C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 10171  0019F8  6ED9               	movwf	fsr2l,c
 10172  0019FA  0E01               	movlw	high _dataBuffer
 10173  0019FC  21C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 10174  0019FE  6EDA               	movwf	fsr2h,c
 10175  001A00  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10176  001A04  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10177  001A08  0E00               	movlw	0
 10178  001A0A  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 10179  001A0C  0E0A               	movlw	10
 10180  001A0E  6FC0               	movwf	___lwmod@divisor& (0+255),b
 10181  001A10  ECA8  F021         	call	___lwmod	;wreg free
 10182  001A14  0100               	movlb	0	; () banked
 10183  001A16  51BE               	movf	?___lwmod& (0+255),w,b
 10184  001A18  0F30               	addlw	48
 10185  001A1A  6EDF               	movwf	indf2,c
 10186                           
 10187                           ;MOTEapp.c: 1284: number /= 10;
 10188  001A1C  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10189  001A20  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10190  001A24  0E00               	movlw	0
 10191  001A26  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10192  001A28  0E0A               	movlw	10
 10193  001A2A  6FC0               	movwf	___lwdiv@divisor& (0+255),b
 10194  001A2C  EC13  F021         	call	___lwdiv	;wreg free
 10195  001A30  C0BE  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10196  001A34  C0BF  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10197                           
 10198                           ;MOTEapp.c: 1285: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 10199  001A38  0100               	movlb	0	; () banked
 10200  001A3A  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10201  001A3C  6FC8               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 10202  001A3E  6BC9               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 10203  001A40  0E02               	movlw	2
 10204  001A42  27C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 10205  001A44  0E00               	movlw	0
 10206  001A46  23C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 10207  001A48  0EC0               	movlw	low _dataBuffer
 10208  001A4A  25C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 10209  001A4C  6ED9               	movwf	fsr2l,c
 10210  001A4E  0E01               	movlw	high _dataBuffer
 10211  001A50  21C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 10212  001A52  6EDA               	movwf	fsr2h,c
 10213  001A54  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10214  001A58  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10215  001A5C  0E00               	movlw	0
 10216  001A5E  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 10217  001A60  0E0A               	movlw	10
 10218  001A62  6FC0               	movwf	___lwmod@divisor& (0+255),b
 10219  001A64  ECA8  F021         	call	___lwmod	;wreg free
 10220  001A68  0100               	movlb	0	; () banked
 10221  001A6A  51BE               	movf	?___lwmod& (0+255),w,b
 10222  001A6C  0F30               	addlw	48
 10223  001A6E  6EDF               	movwf	indf2,c
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;MOTEapp.c: 1286: number /= 10;
 10227  001A70  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10228  001A74  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10229  001A78  0E00               	movlw	0
 10230  001A7A  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10231  001A7C  0E0A               	movlw	10
 10232  001A7E  6FC0               	movwf	___lwdiv@divisor& (0+255),b
 10233  001A80  EC13  F021         	call	___lwdiv	;wreg free
 10234  001A84  C0BE  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10235  001A88  C0BF  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10236                           
 10237                           ;MOTEapp.c: 1287: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 10238  001A8C  0100               	movlb	0	; () banked
 10239  001A8E  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10240  001A90  6FC8               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 10241  001A92  6BC9               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 10242  001A94  0E01               	movlw	1
 10243  001A96  27C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 10244  001A98  0E00               	movlw	0
 10245  001A9A  23C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 10246  001A9C  0EC0               	movlw	low _dataBuffer
 10247  001A9E  25C8               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 10248  001AA0  6ED9               	movwf	fsr2l,c
 10249  001AA2  0E01               	movlw	high _dataBuffer
 10250  001AA4  21C9               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 10251  001AA6  6EDA               	movwf	fsr2h,c
 10252  001AA8  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10253  001AAC  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10254  001AB0  0E00               	movlw	0
 10255  001AB2  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 10256  001AB4  0E0A               	movlw	10
 10257  001AB6  6FC0               	movwf	___lwmod@divisor& (0+255),b
 10258  001AB8  ECA8  F021         	call	___lwmod	;wreg free
 10259  001ABC  0100               	movlb	0	; () banked
 10260  001ABE  51BE               	movf	?___lwmod& (0+255),w,b
 10261  001AC0  0F30               	addlw	48
 10262  001AC2  6EDF               	movwf	indf2,c
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;MOTEapp.c: 1288: number /= 10;
 10266  001AC4  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10267  001AC8  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10268  001ACC  0E00               	movlw	0
 10269  001ACE  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10270  001AD0  0E0A               	movlw	10
 10271  001AD2  6FC0               	movwf	___lwdiv@divisor& (0+255),b
 10272  001AD4  EC13  F021         	call	___lwdiv	;wreg free
 10273  001AD8  C0BE  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10274  001ADC  C0BF  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10275                           
 10276                           ;MOTEapp.c: 1289: dataBuffer[bufferLocation] = '0' + (number % 10);
 10277  001AE0  0100               	movlb	0	; () banked
 10278  001AE2  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10279  001AE4  0D01               	mullw	1
 10280  001AE6  0EC0               	movlw	low _dataBuffer
 10281  001AE8  24F3               	addwf	prodl,w,c
 10282  001AEA  6ED9               	movwf	fsr2l,c
 10283  001AEC  0E01               	movlw	high _dataBuffer
 10284  001AEE  20F4               	addwfc	prodh,w,c
 10285  001AF0  6EDA               	movwf	fsr2h,c
 10286  001AF2  C0C5  F0BE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10287  001AF6  C0C6  F0BF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10288  001AFA  0E00               	movlw	0
 10289  001AFC  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 10290  001AFE  0E0A               	movlw	10
 10291  001B00  6FC0               	movwf	___lwmod@divisor& (0+255),b
 10292  001B02  ECA8  F021         	call	___lwmod	;wreg free
 10293  001B06  0100               	movlb	0	; () banked
 10294  001B08  51BE               	movf	?___lwmod& (0+255),w,b
 10295  001B0A  0F30               	addlw	48
 10296  001B0C  6EDF               	movwf	indf2,c
 10297                           
 10298                           ; BSR set to: 0
 10299  001B0E  0012               	return		;funcret
 10300  001B10                     __end_of_moteApp_add16bToDataBuffer:
 10301                           	opt stack 0
 10302                           tblptru	equ	0xFF8
 10303                           tblptrh	equ	0xFF7
 10304                           tblptrl	equ	0xFF6
 10305                           tablat	equ	0xFF5
 10306                           prodh	equ	0xFF4
 10307                           prodl	equ	0xFF3
 10308                           intcon	equ	0xFF2
 10309                           postinc0	equ	0xFEE
 10310                           wreg	equ	0xFE8
 10311                           indf1	equ	0xFE7
 10312                           postdec1	equ	0xFE5
 10313                           fsr1h	equ	0xFE2
 10314                           fsr1l	equ	0xFE1
 10315                           indf2	equ	0xFDF
 10316                           fsr2h	equ	0xFDA
 10317                           fsr2l	equ	0xFD9
 10318                           status	equ	0xFD8
 10319                           
 10320 ;; *************** function _moteApp_GoToSleep *****************
 10321 ;; Defined at:
 10322 ;;		line 1155 in file "../Includes/Board/MOTEapp.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  status          1   15[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0
 10337 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10339 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10340 ;;Total ram usage:        1 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   18
 10343 ;; This function calls:
 10344 ;;		_EUSART_FlushBuffer
 10345 ;;		_PIN_MANAGER_Initialize
 10346 ;;		_moduleResync
 10347 ;;		_moduleSleep
 10348 ;;		_moteApp_delayms
 10349 ;;		_oled_displayOff
 10350 ;;		_oled_init
 10351 ;; This function is called by:
 10352 ;;		_moteRunningProcess
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text19
 10357  00332A                     __ptext19:
 10358                           	opt stack 0
 10359  00332A                     _moteApp_GoToSleep:
 10360                           	opt stack 10
 10361                           
 10362                           ;MOTEapp.c: 1157: uint8_t status = 0;
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;incstack = 0
 10366  00332A  0E00               	movlw	0
 10367  00332C  0100               	movlb	0	; () banked
 10368  00332E  6FCD               	movwf	moteApp_GoToSleep@status& (0+255),b
 10369  003330                     
 10370                           ; BSR set to: 0
 10371  003330  A282               	btfss	3970,1,c	;volatile
 10372  003332  D7FE               	goto	l647
 10373                           
 10374                           ;MOTEapp.c: 1159: moduleSleep();
 10375  003334  EC11  F024         	call	_moduleSleep	;wreg free
 10376                           
 10377                           ;MOTEapp.c: 1160: oled_displayOff(1);
 10378  003338  0E01               	movlw	1
 10379  00333A  ECBA  F024         	call	_oled_displayOff
 10380                           
 10381                           ;MOTEapp.c: 1161: ADCON0bits.ADON = 0;
 10382  00333E  90C2               	bcf	4034,0,c	;volatile
 10383                           
 10384                           ;MOTEapp.c: 1162: INTCONbits.GIE = 0;
 10385  003340  9EF2               	bcf	intcon,7,c	;volatile
 10386                           
 10387                           ;MOTEapp.c: 1163: GIE = 0;
 10388  003342  9EF2               	bcf	intcon,7,c	;volatile
 10389                           
 10390                           ;MOTEapp.c: 1164: PEIE = 0;
 10391  003344  9CF2               	bcf	intcon,6,c	;volatile
 10392                           
 10393                           ;MOTEapp.c: 1166: ANSELAbits.ANSA0 = 1;
 10394  003346  010F               	movlb	15	; () banked
 10395  003348  815B               	bsf	91,0,b	;volatile
 10396                           
 10397                           ; BSR set to: 15
 10398                           ;MOTEapp.c: 1168: PIE2bits.C1IE = 1;
 10399  00334A  8CA0               	bsf	4000,6,c	;volatile
 10400                           
 10401                           ; BSR set to: 15
 10402                           ;MOTEapp.c: 1169: IOCCbits.IOCC0 = 1;
 10403  00334C  8087               	bsf	3975,0,c	;volatile
 10404                           
 10405                           ; BSR set to: 15
 10406                           ;MOTEapp.c: 1170: IOCCbits.IOCC1 = 1;
 10407  00334E  8287               	bsf	3975,1,c	;volatile
 10408                           
 10409                           ; BSR set to: 15
 10410                           ;MOTEapp.c: 1171: IOCCbits.IOCC2 = 1;
 10411  003350  8487               	bsf	3975,2,c	;volatile
 10412                           
 10413                           ; BSR set to: 15
 10414                           ;MOTEapp.c: 1172: INTCONbits.IOCIE = 1;
 10415  003352  86F2               	bsf	intcon,3,c	;volatile
 10416                           
 10417                           ; BSR set to: 15
 10418                           ;MOTEapp.c: 1174: status = PORTCbits.RC0;
 10419  003354  0E00               	movlw	0
 10420  003356  B082               	btfsc	3970,0,c	;volatile
 10421  003358  0E01               	movlw	1
 10422  00335A  0100               	movlb	0	; () banked
 10423  00335C  6FCD               	movwf	moteApp_GoToSleep@status& (0+255),b
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;MOTEapp.c: 1175: status = PORTCbits.RC1;
 10427  00335E  0E00               	movlw	0
 10428  003360  B282               	btfsc	3970,1,c	;volatile
 10429  003362  0E01               	movlw	1
 10430  003364  6FCD               	movwf	moteApp_GoToSleep@status& (0+255),b
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;MOTEapp.c: 1176: status = PORTCbits.RC2;
 10434  003366  0E00               	movlw	0
 10435  003368  B482               	btfsc	3970,2,c	;volatile
 10436  00336A  0E01               	movlw	1
 10437  00336C  6FCD               	movwf	moteApp_GoToSleep@status& (0+255),b
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;MOTEapp.c: 1178: if (periodicState)
 10441  00336E  51F5               	movf	_periodicState& (0+255),w,b
 10442  003370  A4D8               	btfss	status,2,c
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;MOTEapp.c: 1179: {
 10446                           ;MOTEapp.c: 1180: WDTCONbits.SWDTEN = 1;
 10447  003372  80D1               	bsf	4049,0,c	;volatile
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;MOTEapp.c: 1181: }
 10451                           ;MOTEapp.c: 1182: INTCONbits.IOCIF = 0;
 10452  003374  90F2               	bcf	intcon,0,c	;volatile
 10453                           
 10454                           ;MOTEapp.c: 1184: PIR2bits.C1IF = 0;
 10455  003376  9CA1               	bcf	4001,6,c	;volatile
 10456                           
 10457                           ;MOTEapp.c: 1185: __nop();
 10458  003378  F000               	nop	
 10459  00337A  0003               	sleep		;# 
 10460                           
 10461                           ;MOTEapp.c: 1187: __nop();
 10462  00337C  F000               	nop	
 10463                           
 10464                           ;MOTEapp.c: 1189: WDTCONbits.SWDTEN = 0;
 10465  00337E  90D1               	bcf	4049,0,c	;volatile
 10466                           
 10467                           ;MOTEapp.c: 1190: EUSART_FlushBuffer();
 10468  003380  ECCA  F021         	call	_EUSART_FlushBuffer	;wreg free
 10469                           
 10470                           ;MOTEapp.c: 1192: INTCONbits.IOCIE = 0;
 10471  003384  96F2               	bcf	intcon,3,c	;volatile
 10472                           
 10473                           ;MOTEapp.c: 1193: IOCCbits.IOCC0 = 0;
 10474  003386  9087               	bcf	3975,0,c	;volatile
 10475                           
 10476                           ;MOTEapp.c: 1194: IOCCbits.IOCC1 = 0;
 10477  003388  9287               	bcf	3975,1,c	;volatile
 10478                           
 10479                           ;MOTEapp.c: 1195: IOCCbits.IOCC2 = 0;
 10480  00338A  9487               	bcf	3975,2,c	;volatile
 10481                           
 10482                           ;MOTEapp.c: 1196: PIE2bits.C1IE = 0;
 10483  00338C  9CA0               	bcf	4000,6,c	;volatile
 10484                           
 10485                           ;MOTEapp.c: 1197: GIE = 1;
 10486  00338E  8EF2               	bsf	intcon,7,c	;volatile
 10487                           
 10488                           ;MOTEapp.c: 1199: PIN_MANAGER_Initialize();
 10489  003390  EC63  F021         	call	_PIN_MANAGER_Initialize	;wreg free
 10490                           
 10491                           ;MOTEapp.c: 1201: if ((INTCONbits.IOCIF) )
 10492  003394  A0F2               	btfss	intcon,0,c	;volatile
 10493  003396  D004               	goto	l650
 10494                           
 10495                           ;MOTEapp.c: 1202: {
 10496                           ;MOTEapp.c: 1203: INTCONbits.IOCIF = 0;
 10497  003398  90F2               	bcf	intcon,0,c	;volatile
 10498                           
 10499                           ;MOTEapp.c: 1204: status = 1;
 10500  00339A  0E01               	movlw	1
 10501  00339C  0100               	movlb	0	; () banked
 10502  00339E  D004               	goto	L6
 10503  0033A0                     l650:
 10504                           
 10505                           ;MOTEapp.c: 1206: else
 10506                           ;MOTEapp.c: 1207: {
 10507                           ;MOTEapp.c: 1208: secTicker = 10;
 10508                           
 10509                           ; BSR set to: 0
 10510  0033A0  0E0A               	movlw	10
 10511  0033A2  0100               	movlb	0	; () banked
 10512  0033A4  6FAB               	movwf	_secTicker& (0+255),b
 10513                           
 10514                           ;MOTEapp.c: 1209: status = 0;
 10515  0033A6  0E00               	movlw	0
 10516  0033A8                     L6:
 10517  0033A8  6FCD               	movwf	moteApp_GoToSleep@status& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;MOTEapp.c: 1210: }
 10521                           ;MOTEapp.c: 1211: ANSELAbits.ANSA0 = 0;
 10522                           
 10523                           ; BSR set to: 0
 10524  0033AA  010F               	movlb	15	; () banked
 10525  0033AC  915B               	bcf	91,0,b	;volatile
 10526                           
 10527                           ; BSR set to: 15
 10528                           ;MOTEapp.c: 1212: oled_displayOff(0);
 10529  0033AE  0E00               	movlw	0
 10530  0033B0  ECBA  F024         	call	_oled_displayOff
 10531                           
 10532                           ;MOTEapp.c: 1213: oled_init();
 10533  0033B4  EC37  F024         	call	_oled_init	;wreg free
 10534                           
 10535                           ;MOTEapp.c: 1215: moduleResync();
 10536  0033B8  ECF8  F01D         	call	_moduleResync	;wreg free
 10537                           
 10538                           ;MOTEapp.c: 1216: moteApp_delayms(40);
 10539  0033BC  0E00               	movlw	0
 10540  0033BE  0100               	movlb	0	; () banked
 10541  0033C0  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10542  0033C2  0E28               	movlw	40
 10543  0033C4  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 10544  0033C6  EC13  F023         	call	_moteApp_delayms	;wreg free
 10545                           
 10546                           ;MOTEapp.c: 1217: moduleResync();
 10547  0033CA  ECF8  F01D         	call	_moduleResync	;wreg free
 10548                           
 10549                           ;MOTEapp.c: 1218: moteApp_delayms(40);
 10550  0033CE  0E00               	movlw	0
 10551  0033D0  0100               	movlb	0	; () banked
 10552  0033D2  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10553  0033D4  0E28               	movlw	40
 10554  0033D6  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 10555  0033D8  EC13  F023         	call	_moteApp_delayms	;wreg free
 10556                           
 10557                           ;MOTEapp.c: 1219: return status;
 10558  0033DC  0100               	movlb	0	; () banked
 10559  0033DE  51CD               	movf	moteApp_GoToSleep@status& (0+255),w,b
 10560  0033E0  0012               	return	
 10561  0033E2                     __end_of_moteApp_GoToSleep:
 10562                           	opt stack 0
 10563                           tblptru	equ	0xFF8
 10564                           tblptrh	equ	0xFF7
 10565                           tblptrl	equ	0xFF6
 10566                           tablat	equ	0xFF5
 10567                           prodh	equ	0xFF4
 10568                           prodl	equ	0xFF3
 10569                           intcon	equ	0xFF2
 10570                           postinc0	equ	0xFEE
 10571                           wreg	equ	0xFE8
 10572                           indf1	equ	0xFE7
 10573                           postdec1	equ	0xFE5
 10574                           fsr1h	equ	0xFE2
 10575                           fsr1l	equ	0xFE1
 10576                           indf2	equ	0xFDF
 10577                           fsr2h	equ	0xFDA
 10578                           fsr2l	equ	0xFD9
 10579                           status	equ	0xFD8
 10580                           
 10581 ;; *************** function _oled_init *****************
 10582 ;; Defined at:
 10583 ;;		line 338 in file "../Includes/Drivers/SSD1306oLED.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      void 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:   17
 10604 ;; This function calls:
 10605 ;;		_oled_clear
 10606 ;;		_oled_devInit
 10607 ;;		_oled_setDisplay
 10608 ;;		_oled_setFont
 10609 ;; This function is called by:
 10610 ;;		_main
 10611 ;;		_moteApp_GoToSleep
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text20
 10616  00486E                     __ptext20:
 10617                           	opt stack 0
 10618  00486E                     _oled_init:
 10619                           	opt stack 13
 10620                           
 10621                           ;SSD1306oLED.c: 341: TRISBbits.TRISB2=0;
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;incstack = 0
 10625  00486E  9493               	bcf	3987,2,c	;volatile
 10626                           
 10627                           ;SSD1306oLED.c: 342: TRISBbits.TRISB4=0;
 10628  004870  9893               	bcf	3987,4,c	;volatile
 10629                           
 10630                           ;SSD1306oLED.c: 343: TRISBbits.TRISB5=0;
 10631  004872  9A93               	bcf	3987,5,c	;volatile
 10632                           
 10633                           ;SSD1306oLED.c: 345: oled_devInit();
 10634  004874  EC13  F016         	call	_oled_devInit	;wreg free
 10635                           
 10636                           ;SSD1306oLED.c: 346: oled_setDisplay(Normal);
 10637  004878  0E00               	movlw	0
 10638  00487A  ECA2  F024         	call	_oled_setDisplay
 10639                           
 10640                           ;SSD1306oLED.c: 347: oled_setFont(OledFont0);
 10641  00487E  0E5B               	movlw	low _OledFont0
 10642  004880  0100               	movlb	0	; () banked
 10643  004882  6FBE               	movwf	oled_setFont@font& (0+255),b
 10644  004884  0E76               	movlw	high _OledFont0
 10645  004886  6FBF               	movwf	(oled_setFont@font+1)& (0+255),b
 10646  004888  ECDB  F024         	call	_oled_setFont	;wreg free
 10647                           
 10648                           ;SSD1306oLED.c: 348: oled_clear();
 10649  00488C  EC88  F024         	call	_oled_clear	;wreg free
 10650  004890  0012               	return		;funcret
 10651  004892                     __end_of_oled_init:
 10652                           	opt stack 0
 10653                           tblptru	equ	0xFF8
 10654                           tblptrh	equ	0xFF7
 10655                           tblptrl	equ	0xFF6
 10656                           tablat	equ	0xFF5
 10657                           prodh	equ	0xFF4
 10658                           prodl	equ	0xFF3
 10659                           intcon	equ	0xFF2
 10660                           postinc0	equ	0xFEE
 10661                           wreg	equ	0xFE8
 10662                           indf1	equ	0xFE7
 10663                           postdec1	equ	0xFE5
 10664                           fsr1h	equ	0xFE2
 10665                           fsr1l	equ	0xFE1
 10666                           indf2	equ	0xFDF
 10667                           fsr2h	equ	0xFDA
 10668                           fsr2l	equ	0xFD9
 10669                           status	equ	0xFD8
 10670                           
 10671 ;; *************** function _oled_setFont *****************
 10672 ;; Defined at:
 10673 ;;		line 248 in file "../Includes/Drivers/SSD1306oLED.c"
 10674 ;; Parameters:    Size  Location     Type
 10675 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10676 ;;		 -> OledFont0(768), 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      void 
 10681 ;; Registers used:
 10682 ;;		wreg, status,2, status,0
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10688 ;;      Params:         0       2       0       0       0       0       0       0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10691 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10692 ;;Total ram usage:        2 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:   11
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_oled_init
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text21
 10703  0049B6                     __ptext21:
 10704                           	opt stack 0
 10705  0049B6                     _oled_setFont:
 10706                           	opt stack 18
 10707                           
 10708                           ;SSD1306oLED.c: 250: if(font!=0)
 10709                           
 10710                           ;incstack = 0
 10711  0049B6  0100               	movlb	0	; () banked
 10712  0049B8  51BE               	movf	oled_setFont@font& (0+255),w,b
 10713  0049BA  11BF               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10714  0049BC  B4D8               	btfsc	status,2,c
 10715  0049BE  0012               	return	
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;SSD1306oLED.c: 251: {
 10719                           ;SSD1306oLED.c: 252: selectedFont=font;
 10720  0049C0  C0BE  F0F2         	movff	oled_setFont@font,_selectedFont
 10721  0049C4  C0BF  F0F3         	movff	oled_setFont@font+1,_selectedFont+1
 10722  0049C8  0012               	return	
 10723  0049CA                     __end_of_oled_setFont:
 10724                           	opt stack 0
 10725                           tblptru	equ	0xFF8
 10726                           tblptrh	equ	0xFF7
 10727                           tblptrl	equ	0xFF6
 10728                           tablat	equ	0xFF5
 10729                           prodh	equ	0xFF4
 10730                           prodl	equ	0xFF3
 10731                           intcon	equ	0xFF2
 10732                           postinc0	equ	0xFEE
 10733                           wreg	equ	0xFE8
 10734                           indf1	equ	0xFE7
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           fsr2h	equ	0xFDA
 10740                           fsr2l	equ	0xFD9
 10741                           status	equ	0xFD8
 10742                           
 10743 ;; *************** function _oled_setDisplay *****************
 10744 ;; Defined at:
 10745 ;;		line 412 in file "../Includes/Drivers/SSD1306oLED.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  displayType     1    wreg     enum E5550
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  displayType     1    2[BANK0 ] enum E5550
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0, cstack
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0
 10760 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10762 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10763 ;;Total ram usage:        1 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:   13
 10766 ;; This function calls:
 10767 ;;		_oled_writeCommand
 10768 ;; This function is called by:
 10769 ;;		_oled_init
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text22
 10774  004944                     __ptext22:
 10775                           	opt stack 0
 10776  004944                     _oled_setDisplay:
 10777                           	opt stack 16
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;incstack = 0
 10781                           ;oled_setDisplay@displayType stored from wreg
 10782  004944  0100               	movlb	0	; () banked
 10783  004946  6FC0               	movwf	oled_setDisplay@displayType& (0+255),b
 10784                           
 10785                           ;SSD1306oLED.c: 414: displayType = 0xA6 + displayType;
 10786  004948  0100               	movlb	0	; () banked
 10787  00494A  51C0               	movf	oled_setDisplay@displayType& (0+255),w,b
 10788  00494C  0FA6               	addlw	166
 10789  00494E  6FC0               	movwf	oled_setDisplay@displayType& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;SSD1306oLED.c: 416: LATBbits.LATB4 = 0;
 10793  004950  988A               	bcf	3978,4,c	;volatile
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;SSD1306oLED.c: 418: oled_writeCommand(displayType);
 10797  004952  51C0               	movf	oled_setDisplay@displayType& (0+255),w,b
 10798  004954  EC1A  F025         	call	_oled_writeCommand
 10799                           
 10800                           ;SSD1306oLED.c: 420: LATBbits.LATB4 = 1;
 10801  004958  888A               	bsf	3978,4,c	;volatile
 10802  00495A  0012               	return		;funcret
 10803  00495C                     __end_of_oled_setDisplay:
 10804                           	opt stack 0
 10805                           tblptru	equ	0xFF8
 10806                           tblptrh	equ	0xFF7
 10807                           tblptrl	equ	0xFF6
 10808                           tablat	equ	0xFF5
 10809                           prodh	equ	0xFF4
 10810                           prodl	equ	0xFF3
 10811                           intcon	equ	0xFF2
 10812                           postinc0	equ	0xFEE
 10813                           wreg	equ	0xFE8
 10814                           indf1	equ	0xFE7
 10815                           postdec1	equ	0xFE5
 10816                           fsr1h	equ	0xFE2
 10817                           fsr1l	equ	0xFE1
 10818                           indf2	equ	0xFDF
 10819                           fsr2h	equ	0xFDA
 10820                           fsr2l	equ	0xFD9
 10821                           status	equ	0xFD8
 10822                           
 10823 ;; *************** function _oled_devInit *****************
 10824 ;; Defined at:
 10825 ;;		line 351 in file "../Includes/Drivers/SSD1306oLED.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;		None
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10841 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10842 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10843 ;;Total ram usage:        1 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:   13
 10846 ;; This function calls:
 10847 ;;		_oled_writeCommand
 10848 ;; This function is called by:
 10849 ;;		_oled_init
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text23
 10854  002C26                     __ptext23:
 10855                           	opt stack 0
 10856  002C26                     _oled_devInit:
 10857                           	opt stack 16
 10858                           
 10859                           ;SSD1306oLED.c: 353: LATBbits.LATB4 = 1;
 10860                           
 10861                           ;incstack = 0
 10862  002C26  888A               	bsf	3978,4,c	;volatile
 10863                           
 10864                           ;SSD1306oLED.c: 355: LATBbits.LATB5 = 1;
 10865  002C28  8A8A               	bsf	3978,5,c	;volatile
 10866                           
 10867                           ;SSD1306oLED.c: 359: LATBbits.LATB2 = 1;
 10868  002C2A  848A               	bsf	3978,2,c	;volatile
 10869                           
 10870                           ;SSD1306oLED.c: 360: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10871  002C2C  0E50               	movlw	80
 10872  002C2E                     u8527:
 10873  002C2E  2EE8               	decfsz	wreg,f,c
 10874  002C30  D7FE               	bra	u8527
 10875                           
 10876                           ;SSD1306oLED.c: 361: LATBbits.LATB2 = 0;
 10877  002C32  948A               	bcf	3978,2,c	;volatile
 10878                           
 10879                           ;SSD1306oLED.c: 362: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10880  002C34  0E04               	movlw	4
 10881  002C36  0100               	movlb	0	; () banked
 10882  002C38  6FC0               	movwf	??_oled_devInit& (0+255),b
 10883  002C3A  0E1C               	movlw	28
 10884  002C3C                     u8537:
 10885  002C3C  2EE8               	decfsz	wreg,f,c
 10886  002C3E  D7FE               	bra	u8537
 10887  002C40  2FC0               	decfsz	??_oled_devInit& (0+255),f,b
 10888  002C42  D7FC               	bra	u8537
 10889  002C44  F000               	nop	
 10890                           
 10891                           ;SSD1306oLED.c: 363: LATBbits.LATB2 = 1;
 10892  002C46  848A               	bsf	3978,2,c	;volatile
 10893                           
 10894                           ;SSD1306oLED.c: 365: LATBbits.LATB4 = 0;
 10895  002C48  988A               	bcf	3978,4,c	;volatile
 10896                           
 10897                           ;SSD1306oLED.c: 366: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10898  002C4A  0E04               	movlw	4
 10899  002C4C  0100               	movlb	0	; () banked
 10900  002C4E  6FC0               	movwf	??_oled_devInit& (0+255),b
 10901  002C50  0E1C               	movlw	28
 10902  002C52                     u8547:
 10903  002C52  2EE8               	decfsz	wreg,f,c
 10904  002C54  D7FE               	bra	u8547
 10905  002C56  2FC0               	decfsz	??_oled_devInit& (0+255),f,b
 10906  002C58  D7FC               	bra	u8547
 10907  002C5A  F000               	nop	
 10908                           
 10909                           ;SSD1306oLED.c: 367: LATBbits.LATB5 = 0;
 10910  002C5C  9A8A               	bcf	3978,5,c	;volatile
 10911                           
 10912                           ;SSD1306oLED.c: 368: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10913  002C5E  0E04               	movlw	4
 10914  002C60  0100               	movlb	0	; () banked
 10915  002C62  6FC0               	movwf	??_oled_devInit& (0+255),b
 10916  002C64  0E1C               	movlw	28
 10917  002C66                     u8557:
 10918  002C66  2EE8               	decfsz	wreg,f,c
 10919  002C68  D7FE               	bra	u8557
 10920  002C6A  2FC0               	decfsz	??_oled_devInit& (0+255),f,b
 10921  002C6C  D7FC               	bra	u8557
 10922  002C6E  F000               	nop	
 10923                           
 10924                           ;SSD1306oLED.c: 371: oled_writeCommand(0xAE);
 10925  002C70  0EAE               	movlw	174
 10926  002C72  EC1A  F025         	call	_oled_writeCommand
 10927                           
 10928                           ;SSD1306oLED.c: 373: oled_writeCommand(0xD5);
 10929  002C76  0ED5               	movlw	213
 10930  002C78  EC1A  F025         	call	_oled_writeCommand
 10931                           
 10932                           ;SSD1306oLED.c: 374: oled_writeCommand(0x80);
 10933  002C7C  0E80               	movlw	128
 10934  002C7E  EC1A  F025         	call	_oled_writeCommand
 10935                           
 10936                           ;SSD1306oLED.c: 376: oled_writeCommand(0xA8);
 10937  002C82  0EA8               	movlw	168
 10938  002C84  EC1A  F025         	call	_oled_writeCommand
 10939                           
 10940                           ;SSD1306oLED.c: 377: oled_writeCommand(0x1F);
 10941  002C88  0E1F               	movlw	31
 10942  002C8A  EC1A  F025         	call	_oled_writeCommand
 10943                           
 10944                           ;SSD1306oLED.c: 379: oled_writeCommand(0xD3);
 10945  002C8E  0ED3               	movlw	211
 10946  002C90  EC1A  F025         	call	_oled_writeCommand
 10947                           
 10948                           ;SSD1306oLED.c: 380: oled_writeCommand(0x00);
 10949  002C94  0E00               	movlw	0
 10950  002C96  EC1A  F025         	call	_oled_writeCommand
 10951                           
 10952                           ;SSD1306oLED.c: 382: oled_writeCommand(0x8D);
 10953  002C9A  0E8D               	movlw	141
 10954  002C9C  EC1A  F025         	call	_oled_writeCommand
 10955                           
 10956                           ;SSD1306oLED.c: 383: oled_writeCommand(0x14);
 10957  002CA0  0E14               	movlw	20
 10958  002CA2  EC1A  F025         	call	_oled_writeCommand
 10959                           
 10960                           ;SSD1306oLED.c: 385: oled_writeCommand(0x40);
 10961  002CA6  0E40               	movlw	64
 10962  002CA8  EC1A  F025         	call	_oled_writeCommand
 10963                           
 10964                           ;SSD1306oLED.c: 387: oled_writeCommand(0xA6);
 10965  002CAC  0EA6               	movlw	166
 10966  002CAE  EC1A  F025         	call	_oled_writeCommand
 10967                           
 10968                           ;SSD1306oLED.c: 389: oled_writeCommand(0xA4);
 10969  002CB2  0EA4               	movlw	164
 10970  002CB4  EC1A  F025         	call	_oled_writeCommand
 10971                           
 10972                           ;SSD1306oLED.c: 391: oled_writeCommand(0xA0);
 10973  002CB8  0EA0               	movlw	160
 10974  002CBA  EC1A  F025         	call	_oled_writeCommand
 10975                           
 10976                           ;SSD1306oLED.c: 393: oled_writeCommand(0xC0);
 10977  002CBE  0EC0               	movlw	192
 10978  002CC0  EC1A  F025         	call	_oled_writeCommand
 10979                           
 10980                           ;SSD1306oLED.c: 395: oled_writeCommand(0xDA);
 10981  002CC4  0EDA               	movlw	218
 10982  002CC6  EC1A  F025         	call	_oled_writeCommand
 10983                           
 10984                           ;SSD1306oLED.c: 396: oled_writeCommand(0x42);
 10985  002CCA  0E42               	movlw	66
 10986  002CCC  EC1A  F025         	call	_oled_writeCommand
 10987                           
 10988                           ;SSD1306oLED.c: 398: oled_writeCommand(0x81);
 10989  002CD0  0E81               	movlw	129
 10990  002CD2  EC1A  F025         	call	_oled_writeCommand
 10991                           
 10992                           ;SSD1306oLED.c: 399: oled_writeCommand(0x7F);
 10993  002CD6  0E7F               	movlw	127
 10994  002CD8  EC1A  F025         	call	_oled_writeCommand
 10995                           
 10996                           ;SSD1306oLED.c: 401: oled_writeCommand(0xD9);
 10997  002CDC  0ED9               	movlw	217
 10998  002CDE  EC1A  F025         	call	_oled_writeCommand
 10999                           
 11000                           ;SSD1306oLED.c: 402: oled_writeCommand(0xF1);
 11001  002CE2  0EF1               	movlw	241
 11002  002CE4  EC1A  F025         	call	_oled_writeCommand
 11003                           
 11004                           ;SSD1306oLED.c: 404: oled_writeCommand(0xDB);
 11005  002CE8  0EDB               	movlw	219
 11006  002CEA  EC1A  F025         	call	_oled_writeCommand
 11007                           
 11008                           ;SSD1306oLED.c: 405: oled_writeCommand(0x40);
 11009  002CEE  0E40               	movlw	64
 11010  002CF0  EC1A  F025         	call	_oled_writeCommand
 11011                           
 11012                           ;SSD1306oLED.c: 407: oled_writeCommand(0xAF);
 11013  002CF4  0EAF               	movlw	175
 11014  002CF6  EC1A  F025         	call	_oled_writeCommand
 11015                           
 11016                           ;SSD1306oLED.c: 408: LATBbits.LATB4 = 1;
 11017  002CFA  888A               	bsf	3978,4,c	;volatile
 11018  002CFC  0012               	return		;funcret
 11019  002CFE                     __end_of_oled_devInit:
 11020                           	opt stack 0
 11021                           tblptru	equ	0xFF8
 11022                           tblptrh	equ	0xFF7
 11023                           tblptrl	equ	0xFF6
 11024                           tablat	equ	0xFF5
 11025                           prodh	equ	0xFF4
 11026                           prodl	equ	0xFF3
 11027                           intcon	equ	0xFF2
 11028                           postinc0	equ	0xFEE
 11029                           wreg	equ	0xFE8
 11030                           indf1	equ	0xFE7
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           fsr2h	equ	0xFDA
 11036                           fsr2l	equ	0xFD9
 11037                           status	equ	0xFD8
 11038                           
 11039 ;; *************** function _oled_displayOff *****************
 11040 ;; Defined at:
 11041 ;;		line 423 in file "../Includes/Drivers/SSD1306oLED.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  state           1    wreg     unsigned char 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  state           1    2[BANK0 ] unsigned char 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0
 11056 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11058 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11059 ;;Total ram usage:        1 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:   13
 11062 ;; This function calls:
 11063 ;;		_oled_writeCommand
 11064 ;; This function is called by:
 11065 ;;		_moteApp_GoToSleep
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text24
 11070  004974                     __ptext24:
 11071                           	opt stack 0
 11072  004974                     _oled_displayOff:
 11073                           	opt stack 14
 11074                           
 11075                           ;incstack = 0
 11076                           ;oled_displayOff@state stored from wreg
 11077  004974  0100               	movlb	0	; () banked
 11078  004976  6FC0               	movwf	oled_displayOff@state& (0+255),b
 11079                           
 11080                           ;SSD1306oLED.c: 425: LATBbits.LATB4 = 0;
 11081  004978  988A               	bcf	3978,4,c	;volatile
 11082                           
 11083                           ;SSD1306oLED.c: 426: oled_writeCommand(0xAF - state);
 11084  00497A  0100               	movlb	0	; () banked
 11085  00497C  51C0               	movf	oled_displayOff@state& (0+255),w,b
 11086  00497E  0800               	sublw	0
 11087  004980  0FAF               	addlw	175
 11088  004982  EC1A  F025         	call	_oled_writeCommand
 11089                           
 11090                           ;SSD1306oLED.c: 427: LATBbits.LATB4 = 1;
 11091  004986  888A               	bsf	3978,4,c	;volatile
 11092  004988  0012               	return		;funcret
 11093  00498A                     __end_of_oled_displayOff:
 11094                           	opt stack 0
 11095                           tblptru	equ	0xFF8
 11096                           tblptrh	equ	0xFF7
 11097                           tblptrl	equ	0xFF6
 11098                           tablat	equ	0xFF5
 11099                           prodh	equ	0xFF4
 11100                           prodl	equ	0xFF3
 11101                           intcon	equ	0xFF2
 11102                           postinc0	equ	0xFEE
 11103                           wreg	equ	0xFE8
 11104                           indf1	equ	0xFE7
 11105                           postdec1	equ	0xFE5
 11106                           fsr1h	equ	0xFE2
 11107                           fsr1l	equ	0xFE1
 11108                           indf2	equ	0xFDF
 11109                           fsr2h	equ	0xFDA
 11110                           fsr2l	equ	0xFD9
 11111                           status	equ	0xFD8
 11112                           
 11113 ;; *************** function _moduleSleep *****************
 11114 ;; Defined at:
 11115 ;;		line 162 in file "../Includes/Board/MOTEapp.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11129 ;;      Params:         0       0       0       0       0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11131 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11132 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11133 ;;Total ram usage:        1 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:   14
 11136 ;; This function calls:
 11137 ;;		_sendCommand
 11138 ;; This function is called by:
 11139 ;;		_moteApp_GoToSleep
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text25
 11144  004822                     __ptext25:
 11145                           	opt stack 0
 11146  004822                     _moduleSleep:
 11147                           	opt stack 13
 11148                           
 11149                           ;MOTEapp.c: 164: sendCommand("sys sleep 999999999");
 11150                           
 11151                           ;incstack = 0
 11152  004822  0E84               	movlw	low STR_22
 11153  004824  0100               	movlb	0	; () banked
 11154  004826  6FBF               	movwf	sendCommand@string& (0+255),b
 11155  004828  0E7A               	movlw	high STR_22
 11156  00482A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11157  00482C  EC45  F023         	call	_sendCommand	;wreg free
 11158  004830                     
 11159                           ;MOTEapp.c: 166: ;
 11160  004830  B89D               	btfsc	3997,4,c	;volatile
 11161  004832  D7FE               	goto	l325
 11162                           
 11163                           ;MOTEapp.c: 167: _delay((unsigned long)((16)*(48000000/4000.0)));
 11164  004834  0EFA               	movlw	250
 11165  004836  0100               	movlb	0	; () banked
 11166  004838  6FC1               	movwf	??_moduleSleep& (0+255),b
 11167  00483A  0E58               	movlw	88
 11168  00483C                     u8567:
 11169  00483C  2EE8               	decfsz	wreg,f,c
 11170  00483E  D7FE               	bra	u8567
 11171  004840  2FC1               	decfsz	??_moduleSleep& (0+255),f,b
 11172  004842  D7FC               	bra	u8567
 11173  004844  F000               	nop	
 11174  004846  0012               	return		;funcret
 11175  004848                     __end_of_moduleSleep:
 11176                           	opt stack 0
 11177                           tblptru	equ	0xFF8
 11178                           tblptrh	equ	0xFF7
 11179                           tblptrl	equ	0xFF6
 11180                           tablat	equ	0xFF5
 11181                           prodh	equ	0xFF4
 11182                           prodl	equ	0xFF3
 11183                           intcon	equ	0xFF2
 11184                           postinc0	equ	0xFEE
 11185                           wreg	equ	0xFE8
 11186                           indf1	equ	0xFE7
 11187                           postdec1	equ	0xFE5
 11188                           fsr1h	equ	0xFE2
 11189                           fsr1l	equ	0xFE1
 11190                           indf2	equ	0xFDF
 11191                           fsr2h	equ	0xFDA
 11192                           fsr2l	equ	0xFD9
 11193                           status	equ	0xFD8
 11194                           
 11195 ;; *************** function _moduleResync *****************
 11196 ;; Defined at:
 11197 ;;		line 122 in file "../Includes/Board/MOTEapp.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;		None
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 11202 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11212 ;;      Params:         0       0       0       0       0       0       0       0       0
 11213 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11215 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11216 ;;Total ram usage:        3 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:   14
 11219 ;; This function calls:
 11220 ;;		_MOTEapp_getModuleResponse
 11221 ;;		_moteApp_delayms
 11222 ;;		_sendCommand
 11223 ;; This function is called by:
 11224 ;;		_main
 11225 ;;		_moteApp_GoToSleep
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text26
 11230  003BF0                     __ptext26:
 11231                           	opt stack 0
 11232  003BF0                     _moduleResync:
 11233                           	opt stack 13
 11234                           
 11235                           ;MOTEapp.c: 124: bool escapeEvent = 0;
 11236                           
 11237                           ;incstack = 0
 11238  003BF0  0E00               	movlw	0
 11239  003BF2  0100               	movlb	0	; () banked
 11240  003BF4  6FC5               	movwf	moduleResync@escapeEvent& (0+255),b
 11241                           
 11242                           ;MOTEapp.c: 125: uint16_t escapeCounter = 0;
 11243  003BF6  0E00               	movlw	0
 11244  003BF8  6FC4               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 11245  003BFA  0E00               	movlw	0
 11246  003BFC  6FC3               	movwf	moduleResync@escapeCounter& (0+255),b
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;MOTEapp.c: 132: TXSTAbits.TXEN = 0;
 11250  003BFE  9AAC               	bcf	4012,5,c	;volatile
 11251                           
 11252                           ; BSR set to: 0
 11253                           ;MOTEapp.c: 133: LATCbits.LATC6 = 0;
 11254  003C00  9C8B               	bcf	3979,6,c	;volatile
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;MOTEapp.c: 134: moteApp_delayms(10);
 11258  003C02  0E00               	movlw	0
 11259  003C04  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11260  003C06  0E0A               	movlw	10
 11261  003C08  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 11262  003C0A  EC13  F023         	call	_moteApp_delayms	;wreg free
 11263                           
 11264                           ;MOTEapp.c: 135: TXSTAbits.TXEN = 1;
 11265  003C0E  8AAC               	bsf	4012,5,c	;volatile
 11266                           
 11267                           ;MOTEapp.c: 136: moteApp_delayms(5);
 11268  003C10  0E00               	movlw	0
 11269  003C12  0100               	movlb	0	; () banked
 11270  003C14  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11271  003C16  0E05               	movlw	5
 11272  003C18  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 11273  003C1A  EC13  F023         	call	_moteApp_delayms	;wreg free
 11274                           
 11275                           ;MOTEapp.c: 138: TXREG = 0x55;
 11276  003C1E  0E55               	movlw	85
 11277  003C20  6EAD               	movwf	4013,c	;volatile
 11278  003C22                     
 11279                           ;MOTEapp.c: 140: {};
 11280  003C22  A2AC               	btfss	4012,1,c	;volatile
 11281  003C24  D7FE               	goto	l307
 11282                           
 11283                           ;MOTEapp.c: 142: sendCommand("z");
 11284  003C26  0EFD               	movlw	low STR_21
 11285  003C28  0100               	movlb	0	; () banked
 11286  003C2A  6FBF               	movwf	sendCommand@string& (0+255),b
 11287  003C2C  0E7F               	movlw	high STR_21
 11288  003C2E  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11289  003C30  EC45  F023         	call	_sendCommand	;wreg free
 11290                           
 11291                           ;MOTEapp.c: 143: moteApp_delayms(40);
 11292  003C34  0E00               	movlw	0
 11293  003C36  0100               	movlb	0	; () banked
 11294  003C38  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11295  003C3A  0E28               	movlw	40
 11296  003C3C  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 11297  003C3E  EC13  F023         	call	_moteApp_delayms	;wreg free
 11298                           
 11299                           ;MOTEapp.c: 144: while (escapeEvent)
 11300  003C42  D013               	goto	l313
 11301  003C44                     
 11302                           ;MOTEapp.c: 145: {
 11303                           ;MOTEapp.c: 146: if(MOTEapp_getModuleResponse())
 11304  003C44  EC98  F01F         	call	_MOTEapp_getModuleResponse	;wreg free
 11305  003C48  0900               	iorlw	0
 11306  003C4A  B4D8               	btfsc	status,2,c
 11307  003C4C  D003               	goto	l311
 11308                           
 11309                           ;MOTEapp.c: 147: escapeEvent = 1;
 11310  003C4E  0E01               	movlw	1
 11311  003C50  0100               	movlb	0	; () banked
 11312  003C52  D00A               	goto	L7
 11313  003C54                     l311:
 11314                           
 11315                           ;MOTEapp.c: 148: else if (++escapeCounter > 5000)
 11316                           
 11317                           ; BSR set to: 0
 11318  003C54  0100               	movlb	0	; () banked
 11319  003C56  4BC3               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 11320  003C58  2BC4               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 11321  003C5A  0E89               	movlw	137
 11322  003C5C  5DC3               	subwf	moduleResync@escapeCounter& (0+255),w,b
 11323  003C5E  0E13               	movlw	19
 11324  003C60  59C4               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 11325  003C62  A0D8               	btfss	status,0,c
 11326  003C64  D002               	goto	l313
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;MOTEapp.c: 149: escapeEvent = 1;
 11330  003C66  0E01               	movlw	1
 11331  003C68                     L7:
 11332  003C68  6FC5               	movwf	moduleResync@escapeEvent& (0+255),b
 11333  003C6A                     l313:
 11334                           
 11335                           ; BSR set to: 0
 11336                           
 11337                           ; BSR set to: 0
 11338  003C6A  0100               	movlb	0	; () banked
 11339  003C6C  51C5               	movf	moduleResync@escapeEvent& (0+255),w,b
 11340  003C6E  B4D8               	btfsc	status,2,c
 11341  003C70  0012               	return	
 11342  003C72  D7E8               	goto	l310
 11343  003C74                     __end_of_moduleResync:
 11344                           	opt stack 0
 11345                           tblptru	equ	0xFF8
 11346                           tblptrh	equ	0xFF7
 11347                           tblptrl	equ	0xFF6
 11348                           tablat	equ	0xFF5
 11349                           prodh	equ	0xFF4
 11350                           prodl	equ	0xFF3
 11351                           intcon	equ	0xFF2
 11352                           postinc0	equ	0xFEE
 11353                           wreg	equ	0xFE8
 11354                           indf1	equ	0xFE7
 11355                           postdec1	equ	0xFE5
 11356                           fsr1h	equ	0xFE2
 11357                           fsr1l	equ	0xFE1
 11358                           indf2	equ	0xFDF
 11359                           fsr2h	equ	0xFDA
 11360                           fsr2l	equ	0xFD9
 11361                           status	equ	0xFD8
 11362                           
 11363 ;; *************** function _MOTEapp_getModuleResponse *****************
 11364 ;; Defined at:
 11365 ;;		line 1054 in file "../Includes/Board/MOTEapp.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 11370 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      unsigned char 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0
 11381 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11383 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11384 ;;Total ram usage:        2 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:   12
 11387 ;; This function calls:
 11388 ;;		_EUSART_Read
 11389 ;; This function is called by:
 11390 ;;		_moduleResync
 11391 ;;		_moteHandler
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           	psect	text27
 11396  003F30                     __ptext27:
 11397                           	opt stack 0
 11398  003F30                     _MOTEapp_getModuleResponse:
 11399                           	opt stack 14
 11400                           
 11401                           ;MOTEapp.c: 1056: bool terminatorReceived = 0;
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;incstack = 0
 11405  003F30  0E00               	movlw	0
 11406  003F32  0100               	movlb	0	; () banked
 11407  003F34  6FBF               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 11408                           
 11409                           ;MOTEapp.c: 1058: if ((eusartRxCount))
 11410  003F36  51B0               	movf	_eusartRxCount& (0+255),w,b	;volatile
 11411  003F38  B4D8               	btfsc	status,2,c
 11412  003F3A  D02B               	goto	l607
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;MOTEapp.c: 1059: {
 11416                           ;MOTEapp.c: 1060: uint8_t bufferByte = 0;
 11417  003F3C  0E00               	movlw	0
 11418  003F3E  6FC0               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;MOTEapp.c: 1061: bufferByte = EUSART_Read();
 11422  003F40  ECA4  F022         	call	_EUSART_Read	;wreg free
 11423  003F44  0100               	movlb	0	; () banked
 11424  003F46  6FC0               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;MOTEapp.c: 1063: if (bufferByte == 0x0D)
 11428  003F48  0E0D               	movlw	13
 11429  003F4A  19C0               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 11430  003F4C  A4D8               	btfss	status,2,c
 11431  003F4E  D00F               	goto	l602
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;MOTEapp.c: 1064: {
 11435                           ;MOTEapp.c: 1065: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 11436  003F50  51AD               	movf	_moduleBufferIndex& (0+255),w,b
 11437  003F52  0D01               	mullw	1
 11438  003F54  0E60               	movlw	low _moduleResonseBuffer
 11439  003F56  24F3               	addwf	prodl,w,c
 11440  003F58  6ED9               	movwf	fsr2l,c
 11441  003F5A  0E01               	movlw	high _moduleResonseBuffer
 11442  003F5C  20F4               	addwfc	prodh,w,c
 11443  003F5E  6EDA               	movwf	fsr2h,c
 11444  003F60  0E00               	movlw	0
 11445  003F62  6EDF               	movwf	indf2,c
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;MOTEapp.c: 1066: terminatorReceived = 1;
 11449  003F64  0E01               	movlw	1
 11450  003F66  6FBF               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;MOTEapp.c: 1067: moduleBufferIndex = 0;
 11454  003F68  0E00               	movlw	0
 11455  003F6A  6FAD               	movwf	_moduleBufferIndex& (0+255),b
 11456                           
 11457                           ;MOTEapp.c: 1068: }
 11458  003F6C  D012               	goto	l607
 11459  003F6E                     l602:
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;MOTEapp.c: 1069: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 11463                           
 11464                           ; BSR set to: 0
 11465  003F6E  51C0               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 11466  003F70  B4D8               	btfsc	status,2,c
 11467  003F72  D00F               	goto	l607
 11468                           
 11469                           ; BSR set to: 0
 11470  003F74  0E0A               	movlw	10
 11471  003F76  19C0               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 11472  003F78  B4D8               	btfsc	status,2,c
 11473  003F7A  D00B               	goto	l607
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;MOTEapp.c: 1073: else
 11477                           ;MOTEapp.c: 1074: {
 11478                           ;MOTEapp.c: 1075: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 11479                           
 11480                           ; BSR set to: 0
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;MOTEapp.c: 1070: {
 11484                           ;MOTEapp.c: 1072: }
 11485  003F7C  51AD               	movf	_moduleBufferIndex& (0+255),w,b
 11486  003F7E  0D01               	mullw	1
 11487  003F80  0E60               	movlw	low _moduleResonseBuffer
 11488  003F82  24F3               	addwf	prodl,w,c
 11489  003F84  6ED9               	movwf	fsr2l,c
 11490  003F86  0E01               	movlw	high _moduleResonseBuffer
 11491  003F88  20F4               	addwfc	prodh,w,c
 11492  003F8A  6EDA               	movwf	fsr2h,c
 11493  003F8C  C0C0  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;MOTEapp.c: 1077: moduleBufferIndex++;
 11497  003F90  2BAD               	incf	_moduleBufferIndex& (0+255),f,b
 11498  003F92                     l607:
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;MOTEapp.c: 1078: }
 11502                           ;MOTEapp.c: 1079: }
 11503                           ;MOTEapp.c: 1080: return terminatorReceived;
 11504                           
 11505                           ; BSR set to: 0
 11506                           
 11507                           ; BSR set to: 0
 11508                           
 11509                           ; BSR set to: 0
 11510  003F92  51BF               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 11511  003F94  0012               	return	
 11512  003F96                     __end_of_MOTEapp_getModuleResponse:
 11513                           	opt stack 0
 11514                           tblptru	equ	0xFF8
 11515                           tblptrh	equ	0xFF7
 11516                           tblptrl	equ	0xFF6
 11517                           tablat	equ	0xFF5
 11518                           prodh	equ	0xFF4
 11519                           prodl	equ	0xFF3
 11520                           intcon	equ	0xFF2
 11521                           postinc0	equ	0xFEE
 11522                           wreg	equ	0xFE8
 11523                           indf1	equ	0xFE7
 11524                           postdec1	equ	0xFE5
 11525                           fsr1h	equ	0xFE2
 11526                           fsr1l	equ	0xFE1
 11527                           indf2	equ	0xFDF
 11528                           fsr2h	equ	0xFDA
 11529                           fsr2l	equ	0xFD9
 11530                           status	equ	0xFD8
 11531                           
 11532 ;; *************** function _EUSART_FlushBuffer *****************
 11533 ;; Defined at:
 11534 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  index           1    0[BANK0 ] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      void 
 11541 ;; Registers used:
 11542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11548 ;;      Params:         0       0       0       0       0       0       0       0       0
 11549 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11551 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        1 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:   11
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_moteApp_GoToSleep
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text28
 11563  004394                     __ptext28:
 11564                           	opt stack 0
 11565  004394                     _EUSART_FlushBuffer:
 11566                           	opt stack 16
 11567                           
 11568                           ;eusart.c: 204: uint8_t index;
 11569                           ;eusart.c: 205: for (index=0; index < 64; index++)
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;incstack = 0
 11573  004394  0E00               	movlw	0
 11574  004396  0100               	movlb	0	; () banked
 11575  004398  6FBE               	movwf	EUSART_FlushBuffer@index& (0+255),b
 11576  00439A                     l7147:
 11577                           
 11578                           ; BSR set to: 0
 11579  00439A  0E3F               	movlw	63
 11580  00439C  65BE               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 11581  00439E  D001               	goto	l1043
 11582  0043A0  D00C               	goto	u5200
 11583  0043A2                     l1043:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;eusart.c: 206: {
 11587                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 11588                           
 11589                           ; BSR set to: 0
 11590  0043A2  51BE               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 11591  0043A4  0D01               	mullw	1
 11592  0043A6  0E00               	movlw	low _eusartRxBuffer
 11593  0043A8  24F3               	addwf	prodl,w,c
 11594  0043AA  6ED9               	movwf	fsr2l,c
 11595  0043AC  0E02               	movlw	high _eusartRxBuffer
 11596  0043AE  20F4               	addwfc	prodh,w,c
 11597  0043B0  6EDA               	movwf	fsr2h,c
 11598  0043B2  0E00               	movlw	0
 11599  0043B4  6EDF               	movwf	indf2,c
 11600                           
 11601                           ; BSR set to: 0
 11602  0043B6  2BBE               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 11603  0043B8  D7F0               	goto	l7147
 11604  0043BA                     u5200:
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;eusart.c: 208: }
 11608                           ;eusart.c: 209: eusartRxHead = 0;
 11609                           
 11610                           ; BSR set to: 0
 11611  0043BA  0E00               	movlw	0
 11612  0043BC  6F9C               	movwf	_eusartRxHead& (0+255),b
 11613                           
 11614                           ;eusart.c: 210: eusartRxTail = 0;
 11615  0043BE  0E00               	movlw	0
 11616  0043C0  6F9B               	movwf	_eusartRxTail& (0+255),b
 11617                           
 11618                           ;eusart.c: 211: eusartRxCount = 0;
 11619  0043C2  0E00               	movlw	0
 11620  0043C4  6FB0               	movwf	_eusartRxCount& (0+255),b	;volatile
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 11624  0043C6  989D               	bcf	3997,4,c	;volatile
 11625                           
 11626                           ;eusart.c: 214: eusartTxHead = 0;
 11627  0043C8  0E00               	movlw	0
 11628  0043CA  6F9F               	movwf	_eusartTxHead& (0+255),b
 11629                           
 11630                           ;eusart.c: 215: eusartTxTail = 0;
 11631  0043CC  0E00               	movlw	0
 11632  0043CE  6F9E               	movwf	_eusartTxTail& (0+255),b
 11633                           
 11634                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 11635  0043D0  0E40               	movlw	64
 11636  0043D2  6F9D               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 11637                           
 11638                           ; BSR set to: 0
 11639  0043D4  0012               	return		;funcret
 11640  0043D6                     __end_of_EUSART_FlushBuffer:
 11641                           	opt stack 0
 11642                           tblptru	equ	0xFF8
 11643                           tblptrh	equ	0xFF7
 11644                           tblptrl	equ	0xFF6
 11645                           tablat	equ	0xFF5
 11646                           prodh	equ	0xFF4
 11647                           prodl	equ	0xFF3
 11648                           intcon	equ	0xFF2
 11649                           postinc0	equ	0xFEE
 11650                           wreg	equ	0xFE8
 11651                           indf1	equ	0xFE7
 11652                           postdec1	equ	0xFE5
 11653                           fsr1h	equ	0xFE2
 11654                           fsr1l	equ	0xFE1
 11655                           indf2	equ	0xFDF
 11656                           fsr2h	equ	0xFDA
 11657                           fsr2l	equ	0xFD9
 11658                           status	equ	0xFD8
 11659                           
 11660 ;; *************** function _TMR2_ReadTimer *****************
 11661 ;; Defined at:
 11662 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;		None
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  readVal         1    0[BANK0 ] unsigned char 
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1    wreg      unsigned char 
 11669 ;; Registers used:
 11670 ;;		wreg, status,2
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11676 ;;      Params:         0       0       0       0       0       0       0       0       0
 11677 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11679 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11680 ;;Total ram usage:        1 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:   11
 11683 ;; This function calls:
 11684 ;;		Nothing
 11685 ;; This function is called by:
 11686 ;;		_moteRunningProcess
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           	psect	text29
 11691  004A5E                     __ptext29:
 11692                           	opt stack 0
 11693  004A5E                     _TMR2_ReadTimer:
 11694                           	opt stack 17
 11695                           
 11696                           ;tmr2.c: 88: uint8_t readVal;
 11697                           ;tmr2.c: 90: readVal = TMR2;
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;incstack = 0
 11701  004A5E  CFBC F0BE          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 11702                           
 11703                           ;tmr2.c: 92: return readVal;
 11704  004A62  0100               	movlb	0	; () banked
 11705  004A64  51BE               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 11706  004A66  0012               	return	
 11707  004A68                     __end_of_TMR2_ReadTimer:
 11708                           	opt stack 0
 11709                           tblptru	equ	0xFF8
 11710                           tblptrh	equ	0xFF7
 11711                           tblptrl	equ	0xFF6
 11712                           tablat	equ	0xFF5
 11713                           prodh	equ	0xFF4
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           postinc0	equ	0xFEE
 11717                           wreg	equ	0xFE8
 11718                           indf1	equ	0xFE7
 11719                           postdec1	equ	0xFE5
 11720                           fsr1h	equ	0xFE2
 11721                           fsr1l	equ	0xFE1
 11722                           indf2	equ	0xFDF
 11723                           fsr2h	equ	0xFDA
 11724                           fsr2l	equ	0xFD9
 11725                           status	equ	0xFD8
 11726                           
 11727 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 11728 ;; Defined at:
 11729 ;;		line 962 in file "../Includes/Board/MOTEapp.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  dr              1    wreg     unsigned char 
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  dr              1    4[BANK0 ] unsigned char 
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1    wreg      void 
 11736 ;; Registers used:
 11737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11743 ;;      Params:         0       0       0       0       0       0       0       0       0
 11744 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11745 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11746 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11747 ;;Total ram usage:        2 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:   14
 11750 ;; This function calls:
 11751 ;;		_sendCommand
 11752 ;; This function is called by:
 11753 ;;		_moteRunningProcess
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text30
 11758  001B10                     __ptext30:
 11759                           	opt stack 0
 11760  001B10                     _MOTEapp_SetDataRateSetting:
 11761                           	opt stack 14
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;incstack = 0
 11765                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 11766  001B10  0100               	movlb	0	; () banked
 11767  001B12  6FC2               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 11768                           
 11769                           ;MOTEapp.c: 964: if (dr != 8)
 11770  001B14  0E08               	movlw	8
 11771  001B16  0100               	movlb	0	; () banked
 11772  001B18  19C2               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 11773  001B1A  B4D8               	btfsc	status,2,c
 11774  001B1C  D06A               	goto	l572
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;MOTEapp.c: 965: {
 11778                           ;MOTEapp.c: 966: sendCommand("mac set adr off");
 11779  001B1E  0EA4               	movlw	low STR_163
 11780  001B20  6FBF               	movwf	sendCommand@string& (0+255),b
 11781  001B22  0E7C               	movlw	high STR_163
 11782  001B24  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11783  001B26  EC45  F023         	call	_sendCommand	;wreg free
 11784                           
 11785                           ;MOTEapp.c: 967: _delay((unsigned long)((16)*(48000000/4000.0)));
 11786  001B2A  0EFA               	movlw	250
 11787  001B2C  0100               	movlb	0	; () banked
 11788  001B2E  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11789  001B30  0E58               	movlw	88
 11790  001B32                     u8577:
 11791  001B32  2EE8               	decfsz	wreg,f,c
 11792  001B34  D7FE               	bra	u8577
 11793  001B36  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11794  001B38  D7FC               	bra	u8577
 11795  001B3A  F000               	nop	
 11796                           
 11797                           ;MOTEapp.c: 968: _delay((unsigned long)((16)*(48000000/4000.0)));
 11798  001B3C  0EFA               	movlw	250
 11799  001B3E  0100               	movlb	0	; () banked
 11800  001B40  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11801  001B42  0E58               	movlw	88
 11802  001B44                     u8587:
 11803  001B44  2EE8               	decfsz	wreg,f,c
 11804  001B46  D7FE               	bra	u8587
 11805  001B48  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11806  001B4A  D7FC               	bra	u8587
 11807  001B4C  F000               	nop	
 11808                           
 11809                           ;MOTEapp.c: 969: _delay((unsigned long)((16)*(48000000/4000.0)));
 11810  001B4E  0EFA               	movlw	250
 11811  001B50  0100               	movlb	0	; () banked
 11812  001B52  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11813  001B54  0E58               	movlw	88
 11814  001B56                     u8597:
 11815  001B56  2EE8               	decfsz	wreg,f,c
 11816  001B58  D7FE               	bra	u8597
 11817  001B5A  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11818  001B5C  D7FC               	bra	u8597
 11819  001B5E  F000               	nop	
 11820                           
 11821                           ;MOTEapp.c: 970: }
 11822                           ;MOTEapp.c: 972: switch (dr)
 11823  001B60  D048               	goto	l572
 11824  001B62                     
 11825                           ;MOTEapp.c: 975: sendCommand("mac set dr 0");
 11826  001B62  0E80               	movlw	low STR_164
 11827  001B64  0100               	movlb	0	; () banked
 11828  001B66  6FBF               	movwf	sendCommand@string& (0+255),b
 11829  001B68  0E7D               	movlw	high STR_164
 11830  001B6A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11831  001B6C  EC45  F023         	call	_sendCommand	;wreg free
 11832                           
 11833                           ;MOTEapp.c: 976: break;
 11834  001B70  D05D               	goto	l574
 11835  001B72                     
 11836                           ;MOTEapp.c: 978: sendCommand("mac set dr 1");
 11837  001B72  0E8D               	movlw	low STR_165
 11838  001B74  0100               	movlb	0	; () banked
 11839  001B76  6FBF               	movwf	sendCommand@string& (0+255),b
 11840  001B78  0E7D               	movlw	high STR_165
 11841  001B7A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11842  001B7C  EC45  F023         	call	_sendCommand	;wreg free
 11843                           
 11844                           ;MOTEapp.c: 979: break;
 11845  001B80  D055               	goto	l574
 11846  001B82                     
 11847                           ;MOTEapp.c: 981: sendCommand("mac set dr 2");
 11848  001B82  0E9A               	movlw	low STR_166
 11849  001B84  0100               	movlb	0	; () banked
 11850  001B86  6FBF               	movwf	sendCommand@string& (0+255),b
 11851  001B88  0E7D               	movlw	high STR_166
 11852  001B8A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11853  001B8C  EC45  F023         	call	_sendCommand	;wreg free
 11854                           
 11855                           ;MOTEapp.c: 982: break;
 11856  001B90  D04D               	goto	l574
 11857  001B92                     
 11858                           ;MOTEapp.c: 984: sendCommand("mac set dr 3");
 11859  001B92  0EA7               	movlw	low STR_167
 11860  001B94  0100               	movlb	0	; () banked
 11861  001B96  6FBF               	movwf	sendCommand@string& (0+255),b
 11862  001B98  0E7D               	movlw	high STR_167
 11863  001B9A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11864  001B9C  EC45  F023         	call	_sendCommand	;wreg free
 11865                           
 11866                           ;MOTEapp.c: 985: break;
 11867  001BA0  D045               	goto	l574
 11868  001BA2                     
 11869                           ;MOTEapp.c: 987: sendCommand("mac set dr 4");
 11870  001BA2  0EB4               	movlw	low STR_168
 11871  001BA4  0100               	movlb	0	; () banked
 11872  001BA6  6FBF               	movwf	sendCommand@string& (0+255),b
 11873  001BA8  0E7D               	movlw	high STR_168
 11874  001BAA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11875  001BAC  EC45  F023         	call	_sendCommand	;wreg free
 11876                           
 11877                           ;MOTEapp.c: 988: break;
 11878  001BB0  D03D               	goto	l574
 11879  001BB2                     
 11880                           ;MOTEapp.c: 990: sendCommand("mac set dr 5");
 11881  001BB2  0EC1               	movlw	low STR_169
 11882  001BB4  0100               	movlb	0	; () banked
 11883  001BB6  6FBF               	movwf	sendCommand@string& (0+255),b
 11884  001BB8  0E7D               	movlw	high STR_169
 11885  001BBA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11886  001BBC  EC45  F023         	call	_sendCommand	;wreg free
 11887                           
 11888                           ;MOTEapp.c: 991: break;
 11889  001BC0  D035               	goto	l574
 11890  001BC2                     
 11891                           ;MOTEapp.c: 993: sendCommand("mac set dr 6");
 11892  001BC2  0ECE               	movlw	low STR_170
 11893  001BC4  0100               	movlb	0	; () banked
 11894  001BC6  6FBF               	movwf	sendCommand@string& (0+255),b
 11895  001BC8  0E7D               	movlw	high STR_170
 11896  001BCA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11897  001BCC  EC45  F023         	call	_sendCommand	;wreg free
 11898                           
 11899                           ;MOTEapp.c: 994: break;
 11900  001BD0  D02D               	goto	l574
 11901  001BD2                     
 11902                           ;MOTEapp.c: 996: sendCommand("mac set dr 7");
 11903  001BD2  0EDB               	movlw	low STR_171
 11904  001BD4  0100               	movlb	0	; () banked
 11905  001BD6  6FBF               	movwf	sendCommand@string& (0+255),b
 11906  001BD8  0E7D               	movlw	high STR_171
 11907  001BDA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11908  001BDC  EC45  F023         	call	_sendCommand	;wreg free
 11909                           
 11910                           ;MOTEapp.c: 997: break;
 11911  001BE0  D025               	goto	l574
 11912  001BE2                     
 11913                           ;MOTEapp.c: 999: sendCommand("mac set adr on");
 11914  001BE2  0EF2               	movlw	low STR_172
 11915  001BE4  0100               	movlb	0	; () banked
 11916  001BE6  6FBF               	movwf	sendCommand@string& (0+255),b
 11917  001BE8  0E7C               	movlw	high STR_172
 11918  001BEA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 11919  001BEC  EC45  F023         	call	_sendCommand	;wreg free
 11920                           
 11921                           ;MOTEapp.c: 1001: }
 11922                           
 11923                           ;MOTEapp.c: 1000: break;
 11924  001BF0  D01D               	goto	l574
 11925  001BF2                     l572:
 11926  001BF2  0100               	movlb	0	; () banked
 11927  001BF4  51C2               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 11928                           
 11929                           ; Switch size 1, requested type "space"
 11930                           ; Number of cases is 9, Range of values is 0 to 8
 11931                           ; switch strategies available:
 11932                           ; Name         Instructions Cycles
 11933                           ; simple_byte           28    15 (average)
 11934                           ;	Chosen strategy is simple_byte
 11935  001BF6  0A00               	xorlw	0	; case 0
 11936  001BF8  B4D8               	btfsc	status,2,c
 11937  001BFA  D7B3               	goto	l573
 11938  001BFC  0A01               	xorlw	1	; case 1
 11939  001BFE  B4D8               	btfsc	status,2,c
 11940  001C00  D7B8               	goto	l575
 11941  001C02  0A03               	xorlw	3	; case 2
 11942  001C04  B4D8               	btfsc	status,2,c
 11943  001C06  D7BD               	goto	l576
 11944  001C08  0A01               	xorlw	1	; case 3
 11945  001C0A  B4D8               	btfsc	status,2,c
 11946  001C0C  D7C2               	goto	l577
 11947  001C0E  0A07               	xorlw	7	; case 4
 11948  001C10  B4D8               	btfsc	status,2,c
 11949  001C12  D7C7               	goto	l578
 11950  001C14  0A01               	xorlw	1	; case 5
 11951  001C16  B4D8               	btfsc	status,2,c
 11952  001C18  D7CC               	goto	l579
 11953  001C1A  0A03               	xorlw	3	; case 6
 11954  001C1C  B4D8               	btfsc	status,2,c
 11955  001C1E  D7D1               	goto	l580
 11956  001C20  0A01               	xorlw	1	; case 7
 11957  001C22  B4D8               	btfsc	status,2,c
 11958  001C24  D7D6               	goto	l581
 11959  001C26  0A0F               	xorlw	15	; case 8
 11960  001C28  B4D8               	btfsc	status,2,c
 11961  001C2A  D7DB               	goto	l582
 11962  001C2C                     l574:
 11963                           
 11964                           ;MOTEapp.c: 1002: _delay((unsigned long)((16)*(48000000/4000.0)));
 11965                           
 11966                           ; BSR set to: 0
 11967  001C2C  0EFA               	movlw	250
 11968  001C2E  0100               	movlb	0	; () banked
 11969  001C30  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11970  001C32  0E58               	movlw	88
 11971  001C34                     u8607:
 11972  001C34  2EE8               	decfsz	wreg,f,c
 11973  001C36  D7FE               	bra	u8607
 11974  001C38  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11975  001C3A  D7FC               	bra	u8607
 11976  001C3C  F000               	nop	
 11977                           
 11978                           ;MOTEapp.c: 1003: _delay((unsigned long)((16)*(48000000/4000.0)));
 11979  001C3E  0EFA               	movlw	250
 11980  001C40  0100               	movlb	0	; () banked
 11981  001C42  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11982  001C44  0E58               	movlw	88
 11983  001C46                     u8617:
 11984  001C46  2EE8               	decfsz	wreg,f,c
 11985  001C48  D7FE               	bra	u8617
 11986  001C4A  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11987  001C4C  D7FC               	bra	u8617
 11988  001C4E  F000               	nop	
 11989                           
 11990                           ;MOTEapp.c: 1004: _delay((unsigned long)((16)*(48000000/4000.0)));
 11991  001C50  0EFA               	movlw	250
 11992  001C52  0100               	movlb	0	; () banked
 11993  001C54  6FC1               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 11994  001C56  0E58               	movlw	88
 11995  001C58                     u8627:
 11996  001C58  2EE8               	decfsz	wreg,f,c
 11997  001C5A  D7FE               	bra	u8627
 11998  001C5C  2FC1               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 11999  001C5E  D7FC               	bra	u8627
 12000  001C60  F000               	nop	
 12001                           
 12002                           ;MOTEapp.c: 1005: sendCommand("mac save");
 12003  001C62  0E2C               	movlw	low STR_173
 12004  001C64  0100               	movlb	0	; () banked
 12005  001C66  6FBF               	movwf	sendCommand@string& (0+255),b
 12006  001C68  0E7F               	movlw	high STR_173
 12007  001C6A  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12008  001C6C  EC45  F023         	call	_sendCommand	;wreg free
 12009  001C70  0012               	return		;funcret
 12010  001C72                     __end_of_MOTEapp_SetDataRateSetting:
 12011                           	opt stack 0
 12012                           tblptru	equ	0xFF8
 12013                           tblptrh	equ	0xFF7
 12014                           tblptrl	equ	0xFF6
 12015                           tablat	equ	0xFF5
 12016                           prodh	equ	0xFF4
 12017                           prodl	equ	0xFF3
 12018                           intcon	equ	0xFF2
 12019                           postinc0	equ	0xFEE
 12020                           wreg	equ	0xFE8
 12021                           indf1	equ	0xFE7
 12022                           postdec1	equ	0xFE5
 12023                           fsr1h	equ	0xFE2
 12024                           fsr1l	equ	0xFE1
 12025                           indf2	equ	0xFDF
 12026                           fsr2h	equ	0xFDA
 12027                           fsr2l	equ	0xFD9
 12028                           status	equ	0xFD8
 12029                           
 12030 ;; *************** function _ADC_TempConversion *****************
 12031 ;; Defined at:
 12032 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;  tempRaw         1    wreg     enum E5431
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  tempRaw         1    7[BANK0 ] enum E5431
 12037 ;;  temp            1    8[BANK0 ] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      unsigned char 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0
 12048 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12050 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12051 ;;Total ram usage:        2 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:   12
 12054 ;; This function calls:
 12055 ;;		___lwdiv
 12056 ;; This function is called by:
 12057 ;;		_test_adc
 12058 ;;		_moteHandler
 12059 ;;		_moteRunningProcess
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text31
 12064  0047D2                     __ptext31:
 12065                           	opt stack 0
 12066  0047D2                     _ADC_TempConversion:
 12067                           	opt stack 16
 12068                           
 12069                           ;incstack = 0
 12070                           ;ADC_TempConversion@tempRaw stored from wreg
 12071  0047D2  0100               	movlb	0	; () banked
 12072  0047D4  6FC5               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 12073                           
 12074                           ;adc.c: 138: uint8_t temp;
 12075                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 12076  0047D6  0E06               	movlw	6
 12077  0047D8  0100               	movlb	0	; () banked
 12078  0047DA  25C5               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 12079  0047DC  6FBE               	movwf	___lwdiv@dividend& (0+255),b
 12080  0047DE  6BBF               	clrf	(___lwdiv@dividend+1)& (0+255),b
 12081  0047E0  0EFF               	movlw	255
 12082  0047E2  23BF               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 12083  0047E4  0E00               	movlw	0
 12084  0047E6  6FC1               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12085  0047E8  0E05               	movlw	5
 12086  0047EA  6FC0               	movwf	___lwdiv@divisor& (0+255),b
 12087  0047EC  EC13  F021         	call	___lwdiv	;wreg free
 12088  0047F0  0100               	movlb	0	; () banked
 12089  0047F2  51BE               	movf	?___lwdiv& (0+255),w,b
 12090  0047F4  6FC6               	movwf	ADC_TempConversion@temp& (0+255),b
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;adc.c: 141: return temp;
 12094  0047F6  51C6               	movf	ADC_TempConversion@temp& (0+255),w,b
 12095  0047F8  0012               	return	
 12096  0047FA                     __end_of_ADC_TempConversion:
 12097                           	opt stack 0
 12098                           tblptru	equ	0xFF8
 12099                           tblptrh	equ	0xFF7
 12100                           tblptrl	equ	0xFF6
 12101                           tablat	equ	0xFF5
 12102                           prodh	equ	0xFF4
 12103                           prodl	equ	0xFF3
 12104                           intcon	equ	0xFF2
 12105                           postinc0	equ	0xFEE
 12106                           wreg	equ	0xFE8
 12107                           indf1	equ	0xFE7
 12108                           postdec1	equ	0xFE5
 12109                           fsr1h	equ	0xFE2
 12110                           fsr1l	equ	0xFE1
 12111                           indf2	equ	0xFDF
 12112                           fsr2h	equ	0xFDA
 12113                           fsr2l	equ	0xFD9
 12114                           status	equ	0xFD8
 12115                           
 12116 ;; *************** function ___lwdiv *****************
 12117 ;; Defined at:
 12118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  dividend        2    0[BANK0 ] unsigned int 
 12121 ;;  divisor         2    2[BANK0 ] unsigned int 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  quotient        2    4[BANK0 ] unsigned int 
 12124 ;;  counter         1    6[BANK0 ] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  2    0[BANK0 ] unsigned int 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12134 ;;      Params:         0       4       0       0       0       0       0       0       0
 12135 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12137 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        7 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:   11
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_moteApp_add16bToDataBuffer
 12145 ;;		_oled_putUint16
 12146 ;;		_ADC_TempConversion
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	text32
 12151  004226                     __ptext32:
 12152                           	opt stack 0
 12153  004226                     ___lwdiv:
 12154                           	opt stack 16
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;incstack = 0
 12158  004226  0E00               	movlw	0
 12159  004228  0100               	movlb	0	; () banked
 12160  00422A  6FC3               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12161  00422C  0E00               	movlw	0
 12162  00422E  6FC2               	movwf	___lwdiv@quotient& (0+255),b
 12163                           
 12164                           ; BSR set to: 0
 12165  004230  51C0               	movf	___lwdiv@divisor& (0+255),w,b
 12166  004232  11C1               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12167  004234  B4D8               	btfsc	status,2,c
 12168  004236  D01C               	goto	l2333
 12169                           
 12170                           ; BSR set to: 0
 12171  004238  0E01               	movlw	1
 12172  00423A  6FC4               	movwf	___lwdiv@counter& (0+255),b
 12173  00423C  D004               	goto	l2328
 12174  00423E                     
 12175                           ; BSR set to: 0
 12176                           
 12177                           ; BSR set to: 0
 12178  00423E  90D8               	bcf	status,0,c
 12179  004240  37C0               	rlcf	___lwdiv@divisor& (0+255),f,b
 12180  004242  37C1               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12181  004244  2BC4               	incf	___lwdiv@counter& (0+255),f,b
 12182  004246                     l2328:
 12183                           
 12184                           ; BSR set to: 0
 12185                           
 12186                           ; BSR set to: 0
 12187  004246  AFC1               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12188  004248  D7FA               	goto	l2329
 12189  00424A                     u5490:
 12190                           
 12191                           ; BSR set to: 0
 12192                           
 12193                           ; BSR set to: 0
 12194                           
 12195                           ; BSR set to: 0
 12196  00424A  90D8               	bcf	status,0,c
 12197  00424C  37C2               	rlcf	___lwdiv@quotient& (0+255),f,b
 12198  00424E  37C3               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12199                           
 12200                           ; BSR set to: 0
 12201  004250  51C0               	movf	___lwdiv@divisor& (0+255),w,b
 12202  004252  5DBE               	subwf	___lwdiv@dividend& (0+255),w,b
 12203  004254  51C1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12204  004256  59BF               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12205  004258  A0D8               	btfss	status,0,c
 12206  00425A  D005               	goto	l2332
 12207                           
 12208                           ; BSR set to: 0
 12209  00425C  51C0               	movf	___lwdiv@divisor& (0+255),w,b
 12210  00425E  5FBE               	subwf	___lwdiv@dividend& (0+255),f,b
 12211  004260  51C1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12212  004262  5BBF               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12213                           
 12214                           ; BSR set to: 0
 12215  004264  81C2               	bsf	___lwdiv@quotient& (0+255),0,b
 12216  004266                     l2332:
 12217                           
 12218                           ; BSR set to: 0
 12219                           
 12220                           ; BSR set to: 0
 12221  004266  90D8               	bcf	status,0,c
 12222  004268  33C1               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12223  00426A  33C0               	rrcf	___lwdiv@divisor& (0+255),f,b
 12224                           
 12225                           ; BSR set to: 0
 12226  00426C  2FC4               	decfsz	___lwdiv@counter& (0+255),f,b
 12227  00426E  D7ED               	goto	u5490
 12228  004270                     l2333:
 12229                           
 12230                           ; BSR set to: 0
 12231                           
 12232                           ; BSR set to: 0
 12233  004270  C0C2  F0BE         	movff	___lwdiv@quotient,?___lwdiv
 12234  004274  C0C3  F0BF         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12235                           
 12236                           ; BSR set to: 0
 12237  004278  0012               	return		;funcret
 12238  00427A                     __end_of___lwdiv:
 12239                           	opt stack 0
 12240                           tblptru	equ	0xFF8
 12241                           tblptrh	equ	0xFF7
 12242                           tblptrl	equ	0xFF6
 12243                           tablat	equ	0xFF5
 12244                           prodh	equ	0xFF4
 12245                           prodl	equ	0xFF3
 12246                           intcon	equ	0xFF2
 12247                           postinc0	equ	0xFEE
 12248                           wreg	equ	0xFE8
 12249                           indf1	equ	0xFE7
 12250                           postdec1	equ	0xFE5
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           fsr2h	equ	0xFDA
 12255                           fsr2l	equ	0xFD9
 12256                           status	equ	0xFD8
 12257                           
 12258 ;; *************** function _ADC_GetConversion *****************
 12259 ;; Defined at:
 12260 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;  channel         1    wreg     enum E5431
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  channel         1    4[BANK0 ] enum E5431
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  2    0[BANK0 ] unsigned int 
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12274 ;;      Params:         0       2       0       0       0       0       0       0       0
 12275 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12276 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12277 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12278 ;;Total ram usage:        5 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:   11
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_test_adc
 12285 ;;		_moteHandler
 12286 ;;		_moteRunningProcess
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290                           	psect	text33
 12291  004494                     __ptext33:
 12292                           	opt stack 0
 12293  004494                     _ADC_GetConversion:
 12294                           	opt stack 17
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;incstack = 0
 12298                           ;ADC_GetConversion@channel stored from wreg
 12299  004494  0100               	movlb	0	; () banked
 12300  004496  6FC2               	movwf	ADC_GetConversion@channel& (0+255),b
 12301                           
 12302                           ;adc.c: 116: ADCON0bits.CHS = channel;
 12303  004498  C0C2  F0C0         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 12304  00449C  0100               	movlb	0	; () banked
 12305  00449E  47C0               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12306  0044A0  47C0               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12307  0044A2  50C2               	movf	4034,w,c	;volatile
 12308  0044A4  19C0               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12309  0044A6  0B83               	andlw	-125
 12310  0044A8  19C0               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12311  0044AA  6EC2               	movwf	4034,c	;volatile
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;adc.c: 119: ADCON0bits.ADON = 1;
 12315  0044AC  80C2               	bsf	4034,0,c	;volatile
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 12319  0044AE  0E14               	movlw	20
 12320  0044B0                     u8637:
 12321  0044B0  2EE8               	decfsz	wreg,f,c
 12322  0044B2  D7FE               	bra	u8637
 12323                           
 12324                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 12325  0044B4  82C2               	bsf	4034,1,c	;volatile
 12326  0044B6                     
 12327                           ;adc.c: 129: {
 12328  0044B6  B2C2               	btfsc	4034,1,c	;volatile
 12329  0044B8  D7FE               	goto	l1149
 12330                           
 12331                           ;adc.c: 130: }
 12332                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 12333  0044BA  50C4               	movf	4036,w,c	;volatile
 12334  0044BC  0100               	movlb	0	; () banked
 12335  0044BE  6FC1               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 12336  0044C0  6BC0               	clrf	??_ADC_GetConversion& (0+255),b
 12337  0044C2  50C3               	movf	4035,w,c	;volatile
 12338  0044C4  25C0               	addwf	??_ADC_GetConversion& (0+255),w,b
 12339  0044C6  6FBE               	movwf	?_ADC_GetConversion& (0+255),b
 12340  0044C8  0E00               	movlw	0
 12341  0044CA  21C1               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 12342  0044CC  6FBF               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 12343  0044CE  0012               	return	
 12344  0044D0                     __end_of_ADC_GetConversion:
 12345                           	opt stack 0
 12346                           tblptru	equ	0xFF8
 12347                           tblptrh	equ	0xFF7
 12348                           tblptrl	equ	0xFF6
 12349                           tablat	equ	0xFF5
 12350                           prodh	equ	0xFF4
 12351                           prodl	equ	0xFF3
 12352                           intcon	equ	0xFF2
 12353                           postinc0	equ	0xFEE
 12354                           wreg	equ	0xFE8
 12355                           indf1	equ	0xFE7
 12356                           postdec1	equ	0xFE5
 12357                           fsr1h	equ	0xFE2
 12358                           fsr1l	equ	0xFE1
 12359                           indf2	equ	0xFDF
 12360                           fsr2h	equ	0xFDA
 12361                           fsr2l	equ	0xFD9
 12362                           status	equ	0xFD8
 12363                           
 12364 ;; *************** function _moteJoiningProcess *****************
 12365 ;; Defined at:
 12366 ;;		line 286 in file "../Includes/Board/MOTEapp.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;  messageReady    1    wreg     unsigned char 
 12369 ;;  changeStates    1   18[BANK0 ] unsigned char 
 12370 ;;  selectButton    1   19[BANK0 ] unsigned char 
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;  messageReady    1   23[BANK0 ] unsigned char 
 12373 ;;  readDataRate    1   21[BANK0 ] unsigned char 
 12374 ;;  joiningCompl    1   22[BANK0 ] unsigned char 
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      enum E5742
 12377 ;; Registers used:
 12378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12384 ;;      Params:         0       2       0       0       0       0       0       0       0
 12385 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12386 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12387 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        6 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:   17
 12391 ;; This function calls:
 12392 ;;		_DATAEE_WriteByte
 12393 ;;		_moteApp_delayms
 12394 ;;		_oled_clear
 12395 ;;		_oled_putString
 12396 ;;		_sendCommand
 12397 ;;		_strcmp
 12398 ;;		_strncmp
 12399 ;; This function is called by:
 12400 ;;		_moteHandler
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           	psect	text34
 12405  000FBA                     __ptext34:
 12406                           	opt stack 0
 12407  000FBA                     _moteJoiningProcess:
 12408                           	opt stack 12
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;incstack = 0
 12412                           ;moteJoiningProcess@messageReady stored from wreg
 12413  000FBA  0100               	movlb	0	; () banked
 12414  000FBC  6FD5               	movwf	moteJoiningProcess@messageReady& (0+255),b
 12415                           
 12416                           ;MOTEapp.c: 288: bool joiningComplete = 0;
 12417  000FBE  0E00               	movlw	0
 12418  000FC0  0100               	movlb	0	; () banked
 12419  000FC2  6FD4               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 12420                           
 12421                           ;MOTEapp.c: 290: switch (activeState)
 12422  000FC4  D26D               	goto	l366
 12423  000FC6                     
 12424                           ; BSR set to: 0
 12425                           ;MOTEapp.c: 293: while(1);
 12426  000FC6  D7FF               	goto	l367
 12427  000FC8                     
 12428                           ;MOTEapp.c: 296: sendCommand("sys reset");
 12429  000FC8  0EFD               	movlw	low STR_29
 12430  000FCA  0100               	movlb	0	; () banked
 12431  000FCC  6FBF               	movwf	sendCommand@string& (0+255),b
 12432  000FCE  0E7E               	movlw	high STR_29
 12433  000FD0  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12434  000FD2  EC45  F023         	call	_sendCommand	;wreg free
 12435                           
 12436                           ;MOTEapp.c: 297: moteApp_delayms(50);
 12437  000FD6  0E00               	movlw	0
 12438  000FD8  0100               	movlb	0	; () banked
 12439  000FDA  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12440  000FDC  0E32               	movlw	50
 12441  000FDE  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 12442  000FE0  EC13  F023         	call	_moteApp_delayms	;wreg free
 12443  000FE4  D13A               	goto	l8303
 12444  000FE6                     
 12445                           ; BSR set to: 0
 12446                           ;MOTEapp.c: 301: if (selectButton)
 12447                           
 12448                           ; BSR set to: 0
 12449  000FE6  51D1               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 12450  000FE8  B4D8               	btfsc	status,2,c
 12451  000FEA  D002               	goto	l374
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;MOTEapp.c: 302: {
 12455                           ;MOTEapp.c: 303: activeState = moteComFailure;
 12456  000FEC  0E0A               	movlw	10
 12457  000FEE  6FAF               	movwf	_activeState& (0+255),b
 12458  000FF0                     l374:
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;MOTEapp.c: 304: }
 12462                           ;MOTEapp.c: 305: if ( messageReady )
 12463  000FF0  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12464  000FF2  B4D8               	btfsc	status,2,c
 12465  000FF4  D279               	goto	l371
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;MOTEapp.c: 306: {
 12469                           ;MOTEapp.c: 307: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 12470  000FF6  0E60               	movlw	low _moduleResonseBuffer
 12471  000FF8  6FBE               	movwf	strncmp@s1& (0+255),b
 12472  000FFA  0E01               	movlw	high _moduleResonseBuffer
 12473  000FFC  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
 12474  000FFE  0EB9               	movlw	low STR_30
 12475  001000  6FC0               	movwf	strncmp@s2& (0+255),b
 12476  001002  0E7F               	movlw	high STR_30
 12477  001004  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
 12478  001006  0E00               	movlw	0
 12479  001008  6FC3               	movwf	(strncmp@len+1)& (0+255),b
 12480  00100A  0E04               	movlw	4
 12481  00100C  6FC2               	movwf	strncmp@len& (0+255),b
 12482  00100E  EC71  F01D         	call	_strncmp	;wreg free
 12483  001012  0100               	movlb	0	; () banked
 12484  001014  51BE               	movf	?_strncmp& (0+255),w,b
 12485  001016  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
 12486  001018  A4D8               	btfss	status,2,c
 12487  00101A  D029               	goto	l376
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;MOTEapp.c: 308: {
 12491                           ;MOTEapp.c: 309: rnModule = rn2483;
 12492  00101C  0E00               	movlw	0
 12493  00101E  6FA9               	movwf	_rnModule& (0+255),b
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;MOTEapp.c: 310: oled_clear();
 12497  001020  EC88  F024         	call	_oled_clear	;wreg free
 12498                           
 12499                           ;MOTEapp.c: 311: oled_putString(" Joining Method ",0,0);
 12500  001024  0E44               	movlw	low STR_31
 12501  001026  0100               	movlb	0	; () banked
 12502  001028  6FCB               	movwf	oled_putString@string& (0+255),b
 12503  00102A  0E7B               	movlw	high STR_31
 12504  00102C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12505  00102E  0E00               	movlw	0
 12506  001030  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12507  001032  0E00               	movlw	0
 12508  001034  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12509  001036  EC2E  F01F         	call	_oled_putString	;wreg free
 12510                           
 12511                           ;MOTEapp.c: 312: oled_putString("<- ABP   OTAA ->", 0,2);
 12512  00103A  0E99               	movlw	low STR_32
 12513  00103C  0100               	movlb	0	; () banked
 12514  00103E  6FCB               	movwf	oled_putString@string& (0+255),b
 12515  001040  0E7B               	movlw	high STR_32
 12516  001042  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12517  001044  0E00               	movlw	0
 12518  001046  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12519  001048  0E02               	movlw	2
 12520  00104A  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12521  00104C  EC2E  F01F         	call	_oled_putString	;wreg free
 12522                           
 12523                           ;MOTEapp.c: 313: oled_putString("  (S2)   (S3)   ", 0,3);
 12524  001050  0EEF               	movlw	low STR_33
 12525  001052  0100               	movlb	0	; () banked
 12526  001054  6FCB               	movwf	oled_putString@string& (0+255),b
 12527  001056  0E7A               	movlw	high STR_33
 12528  001058  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12529  00105A  0E00               	movlw	0
 12530  00105C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12531  00105E  0E03               	movlw	3
 12532  001060  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12533  001062  EC2E  F01F         	call	_oled_putString	;wreg free
 12534  001066  D03B               	goto	l8241
 12535  001068                     L8:
 12536  001068  0100               	movlb	0	; () banked
 12537  00106A                     L9:
 12538  00106A  6FAF               	movwf	_activeState& (0+255),b
 12539                           
 12540                           ;MOTEapp.c: 315: }
 12541  00106C  D23D               	goto	l371
 12542  00106E                     l376:
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;MOTEapp.c: 316: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 12546                           
 12547                           ; BSR set to: 0
 12548  00106E  0E60               	movlw	low _moduleResonseBuffer
 12549  001070  6FBE               	movwf	strncmp@s1& (0+255),b
 12550  001072  0E01               	movlw	high _moduleResonseBuffer
 12551  001074  6FBF               	movwf	(strncmp@s1+1)& (0+255),b
 12552  001076  0EBE               	movlw	low STR_34
 12553  001078  6FC0               	movwf	strncmp@s2& (0+255),b
 12554  00107A  0E7F               	movlw	high STR_34
 12555  00107C  6FC1               	movwf	(strncmp@s2+1)& (0+255),b
 12556  00107E  0E00               	movlw	0
 12557  001080  6FC3               	movwf	(strncmp@len+1)& (0+255),b
 12558  001082  0E04               	movlw	4
 12559  001084  6FC2               	movwf	strncmp@len& (0+255),b
 12560  001086  EC71  F01D         	call	_strncmp	;wreg free
 12561  00108A  0100               	movlb	0	; () banked
 12562  00108C  51BE               	movf	?_strncmp& (0+255),w,b
 12563  00108E  11BF               	iorwf	(?_strncmp+1)& (0+255),w,b
 12564  001090  A4D8               	btfss	status,2,c
 12565  001092  D027               	goto	l378
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;MOTEapp.c: 317: {
 12569                           ;MOTEapp.c: 318: rnModule = rn2903;
 12570  001094  0E01               	movlw	1
 12571  001096  6FA9               	movwf	_rnModule& (0+255),b
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;MOTEapp.c: 319: oled_clear();
 12575  001098  EC88  F024         	call	_oled_clear	;wreg free
 12576                           
 12577                           ;MOTEapp.c: 320: oled_putString(" Joining Method ",0,0);
 12578  00109C  0E44               	movlw	low STR_31
 12579  00109E  0100               	movlb	0	; () banked
 12580  0010A0  6FCB               	movwf	oled_putString@string& (0+255),b
 12581  0010A2  0E7B               	movlw	high STR_31
 12582  0010A4  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12583  0010A6  0E00               	movlw	0
 12584  0010A8  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12585  0010AA  0E00               	movlw	0
 12586  0010AC  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12587  0010AE  EC2E  F01F         	call	_oled_putString	;wreg free
 12588                           
 12589                           ;MOTEapp.c: 321: oled_putString("<- ABP   OTAA ->", 0,2);
 12590  0010B2  0E99               	movlw	low STR_32
 12591  0010B4  0100               	movlb	0	; () banked
 12592  0010B6  6FCB               	movwf	oled_putString@string& (0+255),b
 12593  0010B8  0E7B               	movlw	high STR_32
 12594  0010BA  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12595  0010BC  0E00               	movlw	0
 12596  0010BE  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12597  0010C0  0E02               	movlw	2
 12598  0010C2  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12599  0010C4  EC2E  F01F         	call	_oled_putString	;wreg free
 12600                           
 12601                           ;MOTEapp.c: 322: oled_putString("  (S2)   (S3)   ", 0,3);
 12602  0010C8  0EEF               	movlw	low STR_33
 12603  0010CA  0100               	movlb	0	; () banked
 12604  0010CC  6FCB               	movwf	oled_putString@string& (0+255),b
 12605  0010CE  0E7A               	movlw	high STR_33
 12606  0010D0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12607  0010D2  0E00               	movlw	0
 12608  0010D4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12609  0010D6  0E03               	movlw	3
 12610  0010D8  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12611  0010DA  EC2E  F01F         	call	_oled_putString	;wreg free
 12612  0010DE                     l8241:
 12613                           
 12614                           ;MOTEapp.c: 323: activeState = moteJoinMethod;
 12615  0010DE  0E02               	movlw	2
 12616  0010E0  D7C3               	goto	L8
 12617  0010E2                     l378:
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;MOTEapp.c: 325: else
 12621                           ;MOTEapp.c: 326: {
 12622                           ;MOTEapp.c: 327: sendCommand("sys reset");
 12623                           
 12624                           ; BSR set to: 0
 12625  0010E2  0EFD               	movlw	low STR_29
 12626  0010E4  6FBF               	movwf	sendCommand@string& (0+255),b
 12627  0010E6  0E7E               	movlw	high STR_29
 12628  0010E8  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12629  0010EA  EC45  F023         	call	_sendCommand	;wreg free
 12630                           
 12631                           ;MOTEapp.c: 328: moteApp_delayms(25);
 12632  0010EE  0E00               	movlw	0
 12633  0010F0  0100               	movlb	0	; () banked
 12634  0010F2  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12635  0010F4  0E19               	movlw	25
 12636  0010F6  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 12637  0010F8  EC13  F023         	call	_moteApp_delayms	;wreg free
 12638                           
 12639                           ;MOTEapp.c: 329: activeState = moteStartup;
 12640  0010FC  0E00               	movlw	0
 12641  0010FE  D7B4               	goto	L8
 12642  001100                     
 12643                           ; BSR set to: 0
 12644                           ;MOTEapp.c: 334: if (changeStates)
 12645                           
 12646                           ; BSR set to: 0
 12647  001100  51D0               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 12648  001102  B4D8               	btfsc	status,2,c
 12649  001104  D019               	goto	l381
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;MOTEapp.c: 335: {
 12653                           ;MOTEapp.c: 336: oled_putString("  (S2)          ", 0,3);
 12654  001106  0EBC               	movlw	low STR_39
 12655  001108  6FCB               	movwf	oled_putString@string& (0+255),b
 12656  00110A  0E7A               	movlw	high STR_39
 12657  00110C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12658  00110E  0E00               	movlw	0
 12659  001110  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12660  001112  0E03               	movlw	3
 12661  001114  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12662  001116  EC2E  F01F         	call	_oled_putString	;wreg free
 12663                           
 12664                           ;MOTEapp.c: 337: moteApp_delayms(500);
 12665  00111A  0E01               	movlw	1
 12666  00111C  0100               	movlb	0	; () banked
 12667  00111E  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12668  001120  0EF4               	movlw	244
 12669  001122  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 12670  001124  EC13  F023         	call	_moteApp_delayms	;wreg free
 12671                           
 12672                           ;MOTEapp.c: 338: sendCommand("mac join abp");
 12673  001128  0EE8               	movlw	low STR_40
 12674  00112A  0100               	movlb	0	; () banked
 12675  00112C  6FBF               	movwf	sendCommand@string& (0+255),b
 12676  00112E  0E7D               	movlw	high STR_40
 12677  001130  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12678  001132  EC45  F023         	call	_sendCommand	;wreg free
 12679  001136  D05E               	goto	l8287
 12680  001138                     l381:
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;MOTEapp.c: 341: else if (selectButton)
 12684                           
 12685                           ; BSR set to: 0
 12686  001138  51D1               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 12687  00113A  B4D8               	btfsc	status,2,c
 12688  00113C  D1D5               	goto	l371
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;MOTEapp.c: 342: {
 12692                           ;MOTEapp.c: 343: oled_putString("         (S3)   ", 0,3);
 12693  00113E  0EDE               	movlw	low STR_41
 12694  001140  6FCB               	movwf	oled_putString@string& (0+255),b
 12695  001142  0E7A               	movlw	high STR_41
 12696  001144  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12697  001146  0E00               	movlw	0
 12698  001148  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12699  00114A  0E03               	movlw	3
 12700  00114C  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12701  00114E  EC2E  F01F         	call	_oled_putString	;wreg free
 12702                           
 12703                           ;MOTEapp.c: 344: moteApp_delayms(500);
 12704  001152  0E01               	movlw	1
 12705  001154  0100               	movlb	0	; () banked
 12706  001156  6FBF               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12707  001158  0EF4               	movlw	244
 12708  00115A  6FBE               	movwf	moteApp_delayms@length& (0+255),b
 12709  00115C  EC13  F023         	call	_moteApp_delayms	;wreg free
 12710                           
 12711                           ;MOTEapp.c: 345: sendCommand("mac join otaa");
 12712  001160  0E3C               	movlw	low STR_42
 12713  001162  0100               	movlb	0	; () banked
 12714  001164  6FBF               	movwf	sendCommand@string& (0+255),b
 12715  001166  0E7D               	movlw	high STR_42
 12716  001168  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12717  00116A  EC45  F023         	call	_sendCommand	;wreg free
 12718  00116E  D12F               	goto	l8353
 12719  001170                     
 12720                           ; BSR set to: 0
 12721                           ;MOTEapp.c: 350: if ( messageReady )
 12722                           
 12723                           ; BSR set to: 0
 12724  001170  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12725  001172  B4D8               	btfsc	status,2,c
 12726  001174  D1B9               	goto	l371
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;MOTEapp.c: 351: {
 12730                           ;MOTEapp.c: 352: if(strcmp(moduleResonseBuffer, "ok") == 0)
 12731  001176  0E60               	movlw	low _moduleResonseBuffer
 12732  001178  6FBE               	movwf	strcmp@s1& (0+255),b
 12733  00117A  0E01               	movlw	high _moduleResonseBuffer
 12734  00117C  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12735  00117E  0EF8               	movlw	low STR_43
 12736  001180  6FC0               	movwf	strcmp@s2& (0+255),b
 12737  001182  0E7F               	movlw	high STR_43
 12738  001184  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12739  001186  EC3D  F021         	call	_strcmp	;wreg free
 12740  00118A  0100               	movlb	0	; () banked
 12741  00118C  51BE               	movf	?_strcmp& (0+255),w,b
 12742  00118E  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12743  001190  A4D8               	btfss	status,2,c
 12744  001192  D002               	goto	l386
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;MOTEapp.c: 353: {
 12748                           ;MOTEapp.c: 354: activeState = moteWaitAbp;
 12749  001194  0E04               	movlw	4
 12750  001196  D769               	goto	L9
 12751  001198                     l386:
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;MOTEapp.c: 356: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 12755                           
 12756                           ; BSR set to: 0
 12757  001198  0E60               	movlw	low _moduleResonseBuffer
 12758  00119A  6FBE               	movwf	strcmp@s1& (0+255),b
 12759  00119C  0E01               	movlw	high _moduleResonseBuffer
 12760  00119E  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12761  0011A0  0E58               	movlw	low STR_44
 12762  0011A2  6FC0               	movwf	strcmp@s2& (0+255),b
 12763  0011A4  0E7D               	movlw	high STR_44
 12764  0011A6  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12765  0011A8  EC3D  F021         	call	_strcmp	;wreg free
 12766  0011AC  0100               	movlb	0	; () banked
 12767  0011AE  51BE               	movf	?_strcmp& (0+255),w,b
 12768  0011B0  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12769  0011B2  A4D8               	btfss	status,2,c
 12770  0011B4  D019               	goto	l388
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;MOTEapp.c: 357: {
 12774                           ;MOTEapp.c: 358: oled_clear();
 12775  0011B6  EC88  F024         	call	_oled_clear	;wreg free
 12776                           
 12777                           ;MOTEapp.c: 359: oled_putString("Valid Keys",0,0);
 12778  0011BA  0EB5               	movlw	low STR_45
 12779  0011BC  0100               	movlb	0	; () banked
 12780  0011BE  6FCB               	movwf	oled_putString@string& (0+255),b
 12781  0011C0  0E7E               	movlw	high STR_45
 12782  0011C2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12783  0011C4  0E00               	movlw	0
 12784  0011C6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12785  0011C8  0E00               	movlw	0
 12786  0011CA  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12787  0011CC  EC2E  F01F         	call	_oled_putString	;wreg free
 12788                           
 12789                           ;MOTEapp.c: 360: oled_putString("Required",0,1);
 12790  0011D0  0E1A               	movlw	low STR_46
 12791  0011D2  0100               	movlb	0	; () banked
 12792  0011D4  6FCB               	movwf	oled_putString@string& (0+255),b
 12793  0011D6  0E7F               	movlw	high STR_46
 12794  0011D8  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12795  0011DA  0E00               	movlw	0
 12796  0011DC  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12797  0011DE  0E01               	movlw	1
 12798  0011E0  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12799  0011E2  EC2E  F01F         	call	_oled_putString	;wreg free
 12800  0011E6  D076               	goto	l8319
 12801  0011E8                     l388:
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;MOTEapp.c: 363: else
 12805                           ;MOTEapp.c: 364: {
 12806                           ;MOTEapp.c: 365: sendCommand("mac join abp");
 12807                           
 12808                           ; BSR set to: 0
 12809  0011E8  0EE8               	movlw	low STR_40
 12810  0011EA  6FBF               	movwf	sendCommand@string& (0+255),b
 12811  0011EC  0E7D               	movlw	high STR_40
 12812  0011EE  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12813  0011F0  EC45  F023         	call	_sendCommand	;wreg free
 12814  0011F4                     l8287:
 12815                           
 12816                           ;MOTEapp.c: 366: activeState = moteCheckAbp;
 12817  0011F4  0E03               	movlw	3
 12818  0011F6  D738               	goto	L8
 12819  0011F8                     
 12820                           ; BSR set to: 0
 12821                           ;MOTEapp.c: 371: if ( messageReady )
 12822                           
 12823                           ; BSR set to: 0
 12824  0011F8  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12825  0011FA  B4D8               	btfsc	status,2,c
 12826  0011FC  D175               	goto	l371
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;MOTEapp.c: 372: {
 12830                           ;MOTEapp.c: 373: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 12831  0011FE  0E60               	movlw	low _moduleResonseBuffer
 12832  001200  6FBE               	movwf	strcmp@s1& (0+255),b
 12833  001202  0E01               	movlw	high _moduleResonseBuffer
 12834  001204  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12835  001206  0E23               	movlw	low STR_48
 12836  001208  6FC0               	movwf	strcmp@s2& (0+255),b
 12837  00120A  0E7F               	movlw	high STR_48
 12838  00120C  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12839  00120E  EC3D  F021         	call	_strcmp	;wreg free
 12840  001212  0100               	movlb	0	; () banked
 12841  001214  51BE               	movf	?_strcmp& (0+255),w,b
 12842  001216  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12843  001218  A4D8               	btfss	status,2,c
 12844  00121A  D019               	goto	l392
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;MOTEapp.c: 374: {
 12848                           ;MOTEapp.c: 375: oled_clear();
 12849  00121C  EC88  F024         	call	_oled_clear	;wreg free
 12850                           
 12851                           ;MOTEapp.c: 376: oled_putString("ABP Join ",0,0);
 12852  001220  0ED5               	movlw	low STR_49
 12853  001222  0100               	movlb	0	; () banked
 12854  001224  6FCB               	movwf	oled_putString@string& (0+255),b
 12855  001226  0E7E               	movlw	high STR_49
 12856  001228  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12857  00122A  0E00               	movlw	0
 12858  00122C  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12859  00122E  0E00               	movlw	0
 12860  001230  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12861  001232  EC2E  F01F         	call	_oled_putString	;wreg free
 12862                           
 12863                           ;MOTEapp.c: 377: oled_putString("Successful",0,1);
 12864  001236  0E9F               	movlw	low STR_50
 12865  001238  0100               	movlb	0	; () banked
 12866  00123A  6FCB               	movwf	oled_putString@string& (0+255),b
 12867  00123C  0E7E               	movlw	high STR_50
 12868  00123E  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12869  001240  0E00               	movlw	0
 12870  001242  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12871  001244  0E01               	movlw	1
 12872  001246  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12873  001248  EC2E  F01F         	call	_oled_putString	;wreg free
 12874  00124C  D090               	goto	l8341
 12875  00124E                     l392:
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;MOTEapp.c: 380: else
 12879                           ;MOTEapp.c: 381: {
 12880                           ;MOTEapp.c: 382: sendCommand("mac reset");
 12881                           
 12882                           ; BSR set to: 0
 12883  00124E  0EF3               	movlw	low STR_51
 12884  001250  6FBF               	movwf	sendCommand@string& (0+255),b
 12885  001252  0E7E               	movlw	high STR_51
 12886  001254  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 12887  001256  EC45  F023         	call	_sendCommand	;wreg free
 12888  00125A                     l8303:
 12889                           
 12890                           ;MOTEapp.c: 383: activeState = moteReset;
 12891  00125A  0E01               	movlw	1
 12892  00125C  D705               	goto	L8
 12893  00125E                     
 12894                           ; BSR set to: 0
 12895                           ;MOTEapp.c: 388: if ( messageReady )
 12896                           
 12897                           ; BSR set to: 0
 12898  00125E  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12899  001260  B4D8               	btfsc	status,2,c
 12900  001262  D142               	goto	l371
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;MOTEapp.c: 389: {
 12904                           ;MOTEapp.c: 390: if(strcmp(moduleResonseBuffer, "ok") == 0)
 12905  001264  0E60               	movlw	low _moduleResonseBuffer
 12906  001266  6FBE               	movwf	strcmp@s1& (0+255),b
 12907  001268  0E01               	movlw	high _moduleResonseBuffer
 12908  00126A  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12909  00126C  0EF8               	movlw	low STR_43
 12910  00126E  6FC0               	movwf	strcmp@s2& (0+255),b
 12911  001270  0E7F               	movlw	high STR_43
 12912  001272  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12913  001274  EC3D  F021         	call	_strcmp	;wreg free
 12914  001278  0100               	movlb	0	; () banked
 12915  00127A  51BE               	movf	?_strcmp& (0+255),w,b
 12916  00127C  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12917  00127E  A4D8               	btfss	status,2,c
 12918  001280  D002               	goto	l396
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;MOTEapp.c: 391: {
 12922                           ;MOTEapp.c: 392: activeState = moteWaitOtaa;
 12923  001282  0E06               	movlw	6
 12924  001284  D6F2               	goto	L9
 12925  001286                     l396:
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;MOTEapp.c: 394: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 12929                           
 12930                           ; BSR set to: 0
 12931  001286  0E60               	movlw	low _moduleResonseBuffer
 12932  001288  6FBE               	movwf	strcmp@s1& (0+255),b
 12933  00128A  0E01               	movlw	high _moduleResonseBuffer
 12934  00128C  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12935  00128E  0E58               	movlw	low STR_44
 12936  001290  6FC0               	movwf	strcmp@s2& (0+255),b
 12937  001292  0E7D               	movlw	high STR_44
 12938  001294  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12939  001296  EC3D  F021         	call	_strcmp	;wreg free
 12940  00129A  0100               	movlb	0	; () banked
 12941  00129C  51BE               	movf	?_strcmp& (0+255),w,b
 12942  00129E  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12943  0012A0  A4D8               	btfss	status,2,c
 12944  0012A2  D01A               	goto	l398
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;MOTEapp.c: 395: {
 12948                           ;MOTEapp.c: 396: oled_clear();
 12949  0012A4  EC88  F024         	call	_oled_clear	;wreg free
 12950                           
 12951                           ;MOTEapp.c: 397: oled_putString("Valid Keys",0,0);
 12952  0012A8  0EB5               	movlw	low STR_45
 12953  0012AA  0100               	movlb	0	; () banked
 12954  0012AC  6FCB               	movwf	oled_putString@string& (0+255),b
 12955  0012AE  0E7E               	movlw	high STR_45
 12956  0012B0  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12957  0012B2  0E00               	movlw	0
 12958  0012B4  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12959  0012B6  0E00               	movlw	0
 12960  0012B8  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12961  0012BA  EC2E  F01F         	call	_oled_putString	;wreg free
 12962                           
 12963                           ;MOTEapp.c: 398: oled_putString("Required",0,1);
 12964  0012BE  0E1A               	movlw	low STR_46
 12965  0012C0  0100               	movlb	0	; () banked
 12966  0012C2  6FCB               	movwf	oled_putString@string& (0+255),b
 12967  0012C4  0E7F               	movlw	high STR_46
 12968  0012C6  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 12969  0012C8  0E00               	movlw	0
 12970  0012CA  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 12971  0012CC  0E01               	movlw	1
 12972  0012CE  6FCE               	movwf	oled_putString@start_page& (0+255),b
 12973  0012D0  EC2E  F01F         	call	_oled_putString	;wreg free
 12974  0012D4                     l8319:
 12975                           
 12976                           ;MOTEapp.c: 399: activeState = moteNeedKeys;
 12977  0012D4  0E09               	movlw	9
 12978  0012D6  D6C8               	goto	L8
 12979  0012D8                     l398:
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 12983                           
 12984                           ; BSR set to: 0
 12985  0012D8  0E60               	movlw	low _moduleResonseBuffer
 12986  0012DA  6FBE               	movwf	strcmp@s1& (0+255),b
 12987  0012DC  0E01               	movlw	high _moduleResonseBuffer
 12988  0012DE  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 12989  0012E0  0E4A               	movlw	low STR_56
 12990  0012E2  6FC0               	movwf	strcmp@s2& (0+255),b
 12991  0012E4  0E7D               	movlw	high STR_56
 12992  0012E6  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 12993  0012E8  EC3D  F021         	call	_strcmp	;wreg free
 12994  0012EC  0100               	movlb	0	; () banked
 12995  0012EE  51BE               	movf	?_strcmp& (0+255),w,b
 12996  0012F0  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 12997  0012F2  A4D8               	btfss	status,2,c
 12998  0012F4  D007               	goto	l400
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;MOTEapp.c: 402: {
 13002                           ;MOTEapp.c: 403: sendCommand("mac join otaa");
 13003  0012F6  0E3C               	movlw	low STR_42
 13004  0012F8  6FBF               	movwf	sendCommand@string& (0+255),b
 13005  0012FA  0E7D               	movlw	high STR_42
 13006  0012FC  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 13007  0012FE  EC45  F023         	call	_sendCommand	;wreg free
 13008  001302  D065               	goto	l8353
 13009  001304                     l400:
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 13013                           
 13014                           ; BSR set to: 0
 13015  001304  0E60               	movlw	low _moduleResonseBuffer
 13016  001306  6FBE               	movwf	strcmp@s1& (0+255),b
 13017  001308  0E01               	movlw	high _moduleResonseBuffer
 13018  00130A  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 13019  00130C  0E94               	movlw	low STR_58
 13020  00130E  6FC0               	movwf	strcmp@s2& (0+255),b
 13021  001310  0E7E               	movlw	high STR_58
 13022  001312  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 13023  001314  EC3D  F021         	call	_strcmp	;wreg free
 13024  001318  D066               	goto	L10
 13025  00131A                     
 13026                           ; BSR set to: 0
 13027                           ;MOTEapp.c: 413: if ( messageReady )
 13028                           
 13029                           ; BSR set to: 0
 13030  00131A  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 13031  00131C  B4D8               	btfsc	status,2,c
 13032  00131E  D0E4               	goto	l371
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;MOTEapp.c: 414: {
 13036                           ;MOTEapp.c: 415: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 13037  001320  0E60               	movlw	low _moduleResonseBuffer
 13038  001322  6FBE               	movwf	strcmp@s1& (0+255),b
 13039  001324  0E01               	movlw	high _moduleResonseBuffer
 13040  001326  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 13041  001328  0E23               	movlw	low STR_48
 13042  00132A  6FC0               	movwf	strcmp@s2& (0+255),b
 13043  00132C  0E7F               	movlw	high STR_48
 13044  00132E  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 13045  001330  EC3D  F021         	call	_strcmp	;wreg free
 13046  001334  0100               	movlb	0	; () banked
 13047  001336  51BE               	movf	?_strcmp& (0+255),w,b
 13048  001338  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 13049  00133A  A4D8               	btfss	status,2,c
 13050  00133C  D01A               	goto	l405
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;MOTEapp.c: 416: {
 13054                           ;MOTEapp.c: 417: oled_clear();
 13055  00133E  EC88  F024         	call	_oled_clear	;wreg free
 13056                           
 13057                           ;MOTEapp.c: 418: oled_putString("OTAA Join ",0,0);
 13058  001342  0E89               	movlw	low STR_60
 13059  001344  0100               	movlb	0	; () banked
 13060  001346  6FCB               	movwf	oled_putString@string& (0+255),b
 13061  001348  0E7E               	movlw	high STR_60
 13062  00134A  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 13063  00134C  0E00               	movlw	0
 13064  00134E  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 13065  001350  0E00               	movlw	0
 13066  001352  6FCE               	movwf	oled_putString@start_page& (0+255),b
 13067  001354  EC2E  F01F         	call	_oled_putString	;wreg free
 13068                           
 13069                           ;MOTEapp.c: 419: oled_putString("Successful",0,1);
 13070  001358  0E9F               	movlw	low STR_50
 13071  00135A  0100               	movlb	0	; () banked
 13072  00135C  6FCB               	movwf	oled_putString@string& (0+255),b
 13073  00135E  0E7E               	movlw	high STR_50
 13074  001360  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 13075  001362  0E00               	movlw	0
 13076  001364  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 13077  001366  0E01               	movlw	1
 13078  001368  6FCE               	movwf	oled_putString@start_page& (0+255),b
 13079  00136A  EC2E  F01F         	call	_oled_putString	;wreg free
 13080  00136E                     l8341:
 13081                           
 13082                           ;MOTEapp.c: 420: activeState = moteJoined;
 13083  00136E  0E07               	movlw	7
 13084  001370  D67B               	goto	L8
 13085  001372                     l405:
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;MOTEapp.c: 422: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 13089                           
 13090                           ; BSR set to: 0
 13091  001372  0E60               	movlw	low _moduleResonseBuffer
 13092  001374  6FBE               	movwf	strcmp@s1& (0+255),b
 13093  001376  0E01               	movlw	high _moduleResonseBuffer
 13094  001378  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 13095  00137A  0E96               	movlw	low STR_62
 13096  00137C  6FC0               	movwf	strcmp@s2& (0+255),b
 13097  00137E  0E7F               	movlw	high STR_62
 13098  001380  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 13099  001382  EC3D  F021         	call	_strcmp	;wreg free
 13100  001386  0100               	movlb	0	; () banked
 13101  001388  51BE               	movf	?_strcmp& (0+255),w,b
 13102  00138A  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 13103  00138C  A4D8               	btfss	status,2,c
 13104  00138E  D021               	goto	l407
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;MOTEapp.c: 423: {
 13108                           ;MOTEapp.c: 424: oled_clear();
 13109  001390  EC88  F024         	call	_oled_clear	;wreg free
 13110                           
 13111                           ;MOTEapp.c: 425: oled_putString("OTAA Join",1,0);
 13112  001394  0EE9               	movlw	low STR_63
 13113  001396  0100               	movlb	0	; () banked
 13114  001398  6FCB               	movwf	oled_putString@string& (0+255),b
 13115  00139A  0E7E               	movlw	high STR_63
 13116  00139C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 13117  00139E  0E01               	movlw	1
 13118  0013A0  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 13119  0013A2  0E00               	movlw	0
 13120  0013A4  6FCE               	movwf	oled_putString@start_page& (0+255),b
 13121  0013A6  EC2E  F01F         	call	_oled_putString	;wreg free
 13122                           
 13123                           ;MOTEapp.c: 426: oled_putString("Denied",2,1);
 13124  0013AA  0E8F               	movlw	low STR_64
 13125  0013AC  0100               	movlb	0	; () banked
 13126  0013AE  6FCB               	movwf	oled_putString@string& (0+255),b
 13127  0013B0  0E7F               	movlw	high STR_64
 13128  0013B2  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 13129  0013B4  0E02               	movlw	2
 13130  0013B6  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 13131  0013B8  0E01               	movlw	1
 13132  0013BA  6FCE               	movwf	oled_putString@start_page& (0+255),b
 13133  0013BC  EC2E  F01F         	call	_oled_putString	;wreg free
 13134                           
 13135                           ;MOTEapp.c: 427: sendCommand("mac join otaa");
 13136  0013C0  0E3C               	movlw	low STR_42
 13137  0013C2  0100               	movlb	0	; () banked
 13138  0013C4  6FBF               	movwf	sendCommand@string& (0+255),b
 13139  0013C6  0E7D               	movlw	high STR_42
 13140  0013C8  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 13141  0013CA  EC45  F023         	call	_sendCommand	;wreg free
 13142  0013CE                     l8353:
 13143                           
 13144                           ;MOTEapp.c: 428: activeState = moteCheckOtaa;
 13145  0013CE  0E05               	movlw	5
 13146  0013D0  D64B               	goto	L8
 13147  0013D2                     l407:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;MOTEapp.c: 430: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 13151                           
 13152                           ; BSR set to: 0
 13153  0013D2  0E60               	movlw	low _moduleResonseBuffer
 13154  0013D4  6FBE               	movwf	strcmp@s1& (0+255),b
 13155  0013D6  0E01               	movlw	high _moduleResonseBuffer
 13156  0013D8  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 13157  0013DA  0E94               	movlw	low STR_58
 13158  0013DC  6FC0               	movwf	strcmp@s2& (0+255),b
 13159  0013DE  0E7E               	movlw	high STR_58
 13160  0013E0  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 13161  0013E2  EC3D  F021         	call	_strcmp	;wreg free
 13162  0013E6                     L10:
 13163  0013E6  0100               	movlb	0	; () banked
 13164  0013E8  51BE               	movf	?_strcmp& (0+255),w,b
 13165  0013EA  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 13166  0013EC  A4D8               	btfss	status,2,c
 13167  0013EE  D07C               	goto	l371
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;MOTEapp.c: 431: {
 13171                           ;MOTEapp.c: 432: activeState = moteStartup;
 13172  0013F0  0E00               	movlw	0
 13173  0013F2  D63B               	goto	L9
 13174  0013F4                     
 13175                           ; BSR set to: 0
 13176                           ;MOTEapp.c: 437: sendCommand("mac get dr");
 13177                           
 13178                           ; BSR set to: 0
 13179  0013F4  0EAA               	movlw	low STR_67
 13180  0013F6  6FBF               	movwf	sendCommand@string& (0+255),b
 13181  0013F8  0E7E               	movlw	high STR_67
 13182  0013FA  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 13183  0013FC  EC45  F023         	call	_sendCommand	;wreg free
 13184  001400  D018               	goto	l8369
 13185  001402                     
 13186                           ; BSR set to: 0
 13187                           ;MOTEapp.c: 441: if ( messageReady )
 13188                           
 13189                           ; BSR set to: 0
 13190  001402  51D5               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 13191  001404  B4D8               	btfsc	status,2,c
 13192  001406  D070               	goto	l371
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;MOTEapp.c: 442: {
 13196                           ;MOTEapp.c: 443: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 13197  001408  0E60               	movlw	low _moduleResonseBuffer
 13198  00140A  6FBE               	movwf	strcmp@s1& (0+255),b
 13199  00140C  0E01               	movlw	high _moduleResonseBuffer
 13200  00140E  6FBF               	movwf	(strcmp@s1+1)& (0+255),b
 13201  001410  0E4A               	movlw	low STR_56
 13202  001412  6FC0               	movwf	strcmp@s2& (0+255),b
 13203  001414  0E7D               	movlw	high STR_56
 13204  001416  6FC1               	movwf	(strcmp@s2+1)& (0+255),b
 13205  001418  EC3D  F021         	call	_strcmp	;wreg free
 13206  00141C  0100               	movlb	0	; () banked
 13207  00141E  51BE               	movf	?_strcmp& (0+255),w,b
 13208  001420  11BF               	iorwf	(?_strcmp+1)& (0+255),w,b
 13209  001422  A4D8               	btfss	status,2,c
 13210  001424  D008               	goto	l413
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;MOTEapp.c: 444: {
 13214                           ;MOTEapp.c: 445: sendCommand("mac get dr");
 13215  001426  0EAA               	movlw	low STR_67
 13216  001428  6FBF               	movwf	sendCommand@string& (0+255),b
 13217  00142A  0E7E               	movlw	high STR_67
 13218  00142C  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 13219  00142E  EC45  F023         	call	_sendCommand	;wreg free
 13220  001432                     l8369:
 13221                           
 13222                           ;MOTEapp.c: 446: activeState = moteGetDr;
 13223  001432  0E08               	movlw	8
 13224  001434  D619               	goto	L8
 13225  001436                     l413:
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;MOTEapp.c: 448: else
 13229                           ;MOTEapp.c: 449: {
 13230                           ;MOTEapp.c: 450: uint8_t readDataRate;
 13231                           ;MOTEapp.c: 451: readDataRate = moduleResonseBuffer[0] - '0';
 13232                           
 13233                           ; BSR set to: 0
 13234  001436  0101               	movlb	1	; () banked
 13235  001438  5160               	movf	_moduleResonseBuffer& (0+255),w,b
 13236  00143A  0FD0               	addlw	208
 13237  00143C  0100               	movlb	0	; () banked
 13238  00143E  6FD3               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;MOTEapp.c: 452: dataRateValue = readDataRate;
 13242  001440  C0D3  F0F7         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;MOTEapp.c: 453: joiningComplete = 1;
 13246  001444  0E01               	movlw	1
 13247  001446  6FD4               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;MOTEapp.c: 454: }
 13251                           ;MOTEapp.c: 455: }
 13252                           ;MOTEapp.c: 456: break;
 13253                           
 13254                           ; BSR set to: 0
 13255  001448  D04F               	goto	l371
 13256  00144A                     
 13257                           ; BSR set to: 0
 13258                           ;MOTEapp.c: 458: if (selectButton)
 13259                           
 13260                           ; BSR set to: 0
 13261  00144A  51D1               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 13262  00144C  B4D8               	btfsc	status,2,c
 13263  00144E  D04C               	goto	l371
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;MOTEapp.c: 459: {
 13267                           ;MOTEapp.c: 460: activeState = moteComFailure;
 13268  001450  0E0A               	movlw	10
 13269  001452  D60B               	goto	L9
 13270  001454                     
 13271                           ; BSR set to: 0
 13272                           ;MOTEapp.c: 464: DATAEE_WriteByte(0x00, 0x00);
 13273                           
 13274                           ; BSR set to: 0
 13275  001454  0E00               	movlw	0
 13276  001456  6FBE               	movwf	DATAEE_WriteByte@bData& (0+255),b
 13277  001458  0E00               	movlw	0
 13278  00145A  EC68  F022         	call	_DATAEE_WriteByte
 13279  00145E  B082               	btfsc	3970,0,c	;volatile
 13280  001460  D002               	goto	u6610
 13281  001462  A282               	btfss	3970,1,c	;volatile
 13282  001464  D7FC               	goto	l419
 13283  001466                     u6610:
 13284                           
 13285                           ;MOTEapp.c: 466: _delay((unsigned long)((16)*(48000000/4000.0)));
 13286  001466  0EFA               	movlw	250
 13287  001468  0100               	movlb	0	; () banked
 13288  00146A  6FD2               	movwf	??_moteJoiningProcess& (0+255),b
 13289  00146C  0E58               	movlw	88
 13290  00146E                     u8647:
 13291  00146E  2EE8               	decfsz	wreg,f,c
 13292  001470  D7FE               	bra	u8647
 13293  001472  2FD2               	decfsz	??_moteJoiningProcess& (0+255),f,b
 13294  001474  D7FC               	bra	u8647
 13295  001476  F000               	nop	
 13296                           
 13297                           ;MOTEapp.c: 467: _delay((unsigned long)((16)*(48000000/4000.0)));
 13298  001478  0EFA               	movlw	250
 13299  00147A  0100               	movlb	0	; () banked
 13300  00147C  6FD2               	movwf	??_moteJoiningProcess& (0+255),b
 13301  00147E  0E58               	movlw	88
 13302  001480                     u8657:
 13303  001480  2EE8               	decfsz	wreg,f,c
 13304  001482  D7FE               	bra	u8657
 13305  001484  2FD2               	decfsz	??_moteJoiningProcess& (0+255),f,b
 13306  001486  D7FC               	bra	u8657
 13307  001488  F000               	nop	
 13308                           
 13309                           ;MOTEapp.c: 468: _delay((unsigned long)((16)*(48000000/4000.0)));
 13310  00148A  0EFA               	movlw	250
 13311  00148C  0100               	movlb	0	; () banked
 13312  00148E  6FD2               	movwf	??_moteJoiningProcess& (0+255),b
 13313  001490  0E58               	movlw	88
 13314  001492                     u8667:
 13315  001492  2EE8               	decfsz	wreg,f,c
 13316  001494  D7FE               	bra	u8667
 13317  001496  2FD2               	decfsz	??_moteJoiningProcess& (0+255),f,b
 13318  001498  D7FC               	bra	u8667
 13319  00149A  F000               	nop	
 13320  00149C  00FF               	reset		;# 
 13321                           
 13322                           ;MOTEapp.c: 472: }
 13323                           
 13324                           ;MOTEapp.c: 471: break;
 13325  00149E  D024               	goto	l371
 13326  0014A0                     l366:
 13327  0014A0  0100               	movlb	0	; () banked
 13328  0014A2  51AF               	movf	_activeState& (0+255),w,b
 13329                           
 13330                           ; Switch size 1, requested type "space"
 13331                           ; Number of cases is 11, Range of values is 0 to 10
 13332                           ; switch strategies available:
 13333                           ; Name         Instructions Cycles
 13334                           ; simple_byte           34    18 (average)
 13335                           ;	Chosen strategy is simple_byte
 13336  0014A4  0A00               	xorlw	0	; case 0
 13337  0014A6  B4D8               	btfsc	status,2,c
 13338  0014A8  D58F               	goto	l372
 13339  0014AA  0A01               	xorlw	1	; case 1
 13340  0014AC  B4D8               	btfsc	status,2,c
 13341  0014AE  D59B               	goto	l373
 13342  0014B0  0A03               	xorlw	3	; case 2
 13343  0014B2  B4D8               	btfsc	status,2,c
 13344  0014B4  D625               	goto	l380
 13345  0014B6  0A01               	xorlw	1	; case 3
 13346  0014B8  B4D8               	btfsc	status,2,c
 13347  0014BA  D65A               	goto	l384
 13348  0014BC  0A07               	xorlw	7	; case 4
 13349  0014BE  B4D8               	btfsc	status,2,c
 13350  0014C0  D69B               	goto	l390
 13351  0014C2  0A01               	xorlw	1	; case 5
 13352  0014C4  B4D8               	btfsc	status,2,c
 13353  0014C6  D6CB               	goto	l394
 13354  0014C8  0A03               	xorlw	3	; case 6
 13355  0014CA  B4D8               	btfsc	status,2,c
 13356  0014CC  D726               	goto	l403
 13357  0014CE  0A01               	xorlw	1	; case 7
 13358  0014D0  B4D8               	btfsc	status,2,c
 13359  0014D2  D790               	goto	l410
 13360  0014D4  0A0F               	xorlw	15	; case 8
 13361  0014D6  B4D8               	btfsc	status,2,c
 13362  0014D8  D794               	goto	l411
 13363  0014DA  0A01               	xorlw	1	; case 9
 13364  0014DC  B4D8               	btfsc	status,2,c
 13365  0014DE  D7B5               	goto	l415
 13366  0014E0  0A03               	xorlw	3	; case 10
 13367  0014E2  B4D8               	btfsc	status,2,c
 13368  0014E4  D7B7               	goto	l417
 13369  0014E6  D56F               	goto	l367
 13370  0014E8                     l371:
 13371                           
 13372                           ;MOTEapp.c: 473: return joiningComplete;
 13373                           
 13374                           ; BSR set to: 0
 13375  0014E8  0100               	movlb	0	; () banked
 13376  0014EA  51D4               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 13377  0014EC  0012               	return	
 13378  0014EE                     __end_of_moteJoiningProcess:
 13379                           	opt stack 0
 13380                           tblptru	equ	0xFF8
 13381                           tblptrh	equ	0xFF7
 13382                           tblptrl	equ	0xFF6
 13383                           tablat	equ	0xFF5
 13384                           prodh	equ	0xFF4
 13385                           prodl	equ	0xFF3
 13386                           intcon	equ	0xFF2
 13387                           postinc0	equ	0xFEE
 13388                           wreg	equ	0xFE8
 13389                           indf1	equ	0xFE7
 13390                           postdec1	equ	0xFE5
 13391                           fsr1h	equ	0xFE2
 13392                           fsr1l	equ	0xFE1
 13393                           indf2	equ	0xFDF
 13394                           fsr2h	equ	0xFDA
 13395                           fsr2l	equ	0xFD9
 13396                           status	equ	0xFD8
 13397                           
 13398 ;; *************** function _strncmp *****************
 13399 ;; Defined at:
 13400 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 13403 ;;		 -> moduleResonseBuffer(64), 
 13404 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 13405 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 13406 ;;		 -> STR_34(5), STR_30(5), 
 13407 ;;  len             2    4[BANK0 ] unsigned int 
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;		None
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  2    0[BANK0 ] int 
 13412 ;; Registers used:
 13413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13419 ;;      Params:         0       6       0       0       0       0       0       0       0
 13420 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13421 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13422 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13423 ;;Total ram usage:        9 bytes
 13424 ;; Hardware stack levels used:    1
 13425 ;; Hardware stack levels required when called:   11
 13426 ;; This function calls:
 13427 ;;		Nothing
 13428 ;; This function is called by:
 13429 ;;		_moteJoiningProcess
 13430 ;;		_moteRunningProcess
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text35
 13435  003AE2                     __ptext35:
 13436                           	opt stack 0
 13437  003AE2                     _strncmp:
 13438                           	opt stack 17
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;incstack = 0
 13442  003AE2  D035               	goto	l2486
 13443  003AE4                     l7505:
 13444  003AE4  C0BE  FFD9         	movff	strncmp@s1,fsr2l
 13445  003AE8  C0BF  FFDA         	movff	strncmp@s1+1,fsr2h
 13446  003AEC  50DF               	movf	indf2,w,c
 13447  003AEE  B4D8               	btfsc	status,2,c
 13448  003AF0  D010               	goto	u5590
 13449  003AF2  C0BE  FFD9         	movff	strncmp@s1,fsr2l
 13450  003AF6  C0BF  FFDA         	movff	strncmp@s1+1,fsr2h
 13451  003AFA  50DF               	movf	indf2,w,c
 13452  003AFC  0100               	movlb	0	; () banked
 13453  003AFE  6FC4               	movwf	??_strncmp& (0+255),b
 13454  003B00  C0C0  FFF6         	movff	strncmp@s2,tblptrl
 13455  003B04  C0C1  FFF7         	movff	strncmp@s2+1,tblptrh
 13456  003B08                     	if	0	;tblptru may be non-zero
 13457  003B08                     	endif
 13458  003B08                     	if	0	;tblptru may be non-zero
 13459  003B08                     	endif
 13460  003B08  0008               	tblrd		*
 13461  003B0A  50F5               	movf	tablat,w,c
 13462  003B0C  19C4               	xorwf	??_strncmp& (0+255),w,b
 13463  003B0E  B4D8               	btfsc	status,2,c
 13464  003B10  D01A               	goto	l2488
 13465  003B12                     u5590:
 13466                           
 13467                           ; BSR set to: 0
 13468  003B12  C0C0  FFF6         	movff	strncmp@s2,tblptrl
 13469  003B16  C0C1  FFF7         	movff	strncmp@s2+1,tblptrh
 13470  003B1A                     	if	0	;tblptru may be non-zero
 13471  003B1A                     	endif
 13472  003B1A                     	if	0	;tblptru may be non-zero
 13473  003B1A                     	endif
 13474  003B1A  0008               	tblrd		*
 13475  003B1C  50F5               	movf	tablat,w,c
 13476  003B1E  0100               	movlb	0	; () banked
 13477  003B20  6FC4               	movwf	??_strncmp& (0+255),b
 13478  003B22  6BC5               	clrf	(??_strncmp+1)& (0+255),b
 13479  003B24  1FC4               	comf	??_strncmp& (0+255),f,b
 13480  003B26  1FC5               	comf	(??_strncmp+1)& (0+255),f,b
 13481  003B28  4BC4               	infsnz	??_strncmp& (0+255),f,b
 13482  003B2A  2BC5               	incf	(??_strncmp+1)& (0+255),f,b
 13483  003B2C  C0BE  FFD9         	movff	strncmp@s1,fsr2l
 13484  003B30  C0BF  FFDA         	movff	strncmp@s1+1,fsr2h
 13485  003B34  50DF               	movf	indf2,w,c
 13486  003B36  6FC6               	movwf	(??_strncmp+2)& (0+255),b
 13487  003B38  51C6               	movf	(??_strncmp+2)& (0+255),w,b
 13488  003B3A  25C4               	addwf	??_strncmp& (0+255),w,b
 13489  003B3C  6FBE               	movwf	?_strncmp& (0+255),b
 13490  003B3E  0E00               	movlw	0
 13491  003B40  21C5               	addwfc	(??_strncmp+1)& (0+255),w,b
 13492  003B42  6FBF               	movwf	(?_strncmp+1)& (0+255),b
 13493                           
 13494                           ; BSR set to: 0
 13495  003B44  0012               	return	
 13496  003B46                     l2488:
 13497                           
 13498                           ; BSR set to: 0
 13499                           
 13500                           ; BSR set to: 0
 13501  003B46  4BBE               	infsnz	strncmp@s1& (0+255),f,b
 13502  003B48  2BBF               	incf	(strncmp@s1+1)& (0+255),f,b
 13503  003B4A  4BC0               	infsnz	strncmp@s2& (0+255),f,b
 13504  003B4C  2BC1               	incf	(strncmp@s2+1)& (0+255),f,b
 13505  003B4E                     l2486:
 13506                           
 13507                           ; BSR set to: 0
 13508  003B4E  0100               	movlb	0	; () banked
 13509  003B50  07C2               	decf	strncmp@len& (0+255),f,b
 13510  003B52  A0D8               	btfss	status,0,c
 13511  003B54  07C3               	decf	(strncmp@len+1)& (0+255),f,b
 13512  003B56  29C2               	incf	strncmp@len& (0+255),w,b
 13513  003B58  E1C5               	bnz	l7505
 13514  003B5A  29C3               	incf	(strncmp@len+1)& (0+255),w,b
 13515  003B5C  A4D8               	btfss	status,2,c
 13516  003B5E  D7C2               	goto	l2487
 13517                           
 13518                           ; BSR set to: 0
 13519                           
 13520                           ; BSR set to: 0
 13521  003B60  0E00               	movlw	0
 13522  003B62  6FBF               	movwf	(?_strncmp+1)& (0+255),b
 13523  003B64  0E00               	movlw	0
 13524  003B66  6FBE               	movwf	?_strncmp& (0+255),b
 13525  003B68  0012               	return	
 13526  003B6A                     __end_of_strncmp:
 13527                           	opt stack 0
 13528                           tblptru	equ	0xFF8
 13529                           tblptrh	equ	0xFF7
 13530                           tblptrl	equ	0xFF6
 13531                           tablat	equ	0xFF5
 13532                           prodh	equ	0xFF4
 13533                           prodl	equ	0xFF3
 13534                           intcon	equ	0xFF2
 13535                           postinc0	equ	0xFEE
 13536                           wreg	equ	0xFE8
 13537                           indf1	equ	0xFE7
 13538                           postdec1	equ	0xFE5
 13539                           fsr1h	equ	0xFE2
 13540                           fsr1l	equ	0xFE1
 13541                           indf2	equ	0xFDF
 13542                           fsr2h	equ	0xFDA
 13543                           fsr2l	equ	0xFD9
 13544                           status	equ	0xFD8
 13545                           
 13546 ;; *************** function _strcmp *****************
 13547 ;; Defined at:
 13548 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 13551 ;;		 -> moduleResonseBuffer(64), 
 13552 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 13553 ;;		 -> STR_89(3), STR_68(14), STR_66(11), STR_62(7), 
 13554 ;;		 -> STR_59(9), STR_58(11), STR_56(14), STR_53(14), 
 13555 ;;		 -> STR_52(3), STR_48(9), STR_44(14), STR_43(3), 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  r               1    5[BANK0 ] char 
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  2    0[BANK0 ] int 
 13560 ;; Registers used:
 13561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13567 ;;      Params:         0       4       0       0       0       0       0       0       0
 13568 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13569 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13570 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13571 ;;Total ram usage:        6 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:   11
 13574 ;; This function calls:
 13575 ;;		Nothing
 13576 ;; This function is called by:
 13577 ;;		_moteJoiningProcess
 13578 ;;		_moteRunningProcess
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text36
 13583  00427A                     __ptext36:
 13584                           	opt stack 0
 13585  00427A                     _strcmp:
 13586                           	opt stack 17
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;incstack = 0
 13590  00427A  D005               	goto	l2478
 13591  00427C  0100               	movlb	0	; () banked
 13592  00427E  4BBE               	infsnz	strcmp@s1& (0+255),f,b
 13593  004280  2BBF               	incf	(strcmp@s1+1)& (0+255),f,b
 13594  004282  4BC0               	infsnz	strcmp@s2& (0+255),f,b
 13595  004284  2BC1               	incf	(strcmp@s2+1)& (0+255),f,b
 13596  004286                     l2478:
 13597                           
 13598                           ; BSR set to: 0
 13599  004286  C0BE  FFD9         	movff	strcmp@s1,fsr2l
 13600  00428A  C0BF  FFDA         	movff	strcmp@s1+1,fsr2h
 13601  00428E  50DF               	movf	indf2,w,c
 13602  004290  0100               	movlb	0	; () banked
 13603  004292  6FC2               	movwf	??_strcmp& (0+255),b
 13604  004294  C0C0  FFF6         	movff	strcmp@s2,tblptrl
 13605  004298  C0C1  FFF7         	movff	strcmp@s2+1,tblptrh
 13606  00429C                     	if	0	;tblptru may be non-zero
 13607  00429C                     	endif
 13608  00429C                     	if	0	;tblptru may be non-zero
 13609  00429C                     	endif
 13610  00429C  0008               	tblrd		*
 13611  00429E  50F5               	movf	tablat,w,c
 13612  0042A0  0800               	sublw	0
 13613  0042A2  25C2               	addwf	??_strcmp& (0+255),w,b
 13614  0042A4  6FC3               	movwf	strcmp@r& (0+255),b
 13615  0042A6  51C3               	movf	strcmp@r& (0+255),w,b
 13616  0042A8  A4D8               	btfss	status,2,c
 13617  0042AA  D007               	goto	u5620
 13618                           
 13619                           ; BSR set to: 0
 13620  0042AC  C0BE  FFD9         	movff	strcmp@s1,fsr2l
 13621  0042B0  C0BF  FFDA         	movff	strcmp@s1+1,fsr2h
 13622  0042B4  50DF               	movf	indf2,w,c
 13623  0042B6  A4D8               	btfss	status,2,c
 13624  0042B8  D7E1               	goto	l2479
 13625  0042BA                     u5620:
 13626                           
 13627                           ; BSR set to: 0
 13628                           
 13629                           ; BSR set to: 0
 13630                           
 13631                           ; BSR set to: 0
 13632  0042BA  51C3               	movf	strcmp@r& (0+255),w,b
 13633  0042BC  6FBE               	movwf	?_strcmp& (0+255),b
 13634  0042BE  6BBF               	clrf	(?_strcmp+1)& (0+255),b
 13635  0042C0  BFBE               	btfsc	?_strcmp& (0+255),7,b
 13636  0042C2  07BF               	decf	(?_strcmp+1)& (0+255),f,b
 13637  0042C4  0012               	return	
 13638  0042C6                     __end_of_strcmp:
 13639                           	opt stack 0
 13640                           tblptru	equ	0xFF8
 13641                           tblptrh	equ	0xFF7
 13642                           tblptrl	equ	0xFF6
 13643                           tablat	equ	0xFF5
 13644                           prodh	equ	0xFF4
 13645                           prodl	equ	0xFF3
 13646                           intcon	equ	0xFF2
 13647                           postinc0	equ	0xFEE
 13648                           wreg	equ	0xFE8
 13649                           indf1	equ	0xFE7
 13650                           postdec1	equ	0xFE5
 13651                           fsr1h	equ	0xFE2
 13652                           fsr1l	equ	0xFE1
 13653                           indf2	equ	0xFDF
 13654                           fsr2h	equ	0xFDA
 13655                           fsr2l	equ	0xFD9
 13656                           status	equ	0xFD8
 13657                           
 13658 ;; *************** function _moteApp_delayms *****************
 13659 ;; Defined at:
 13660 ;;		line 153 in file "../Includes/Board/MOTEapp.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;  length          2    0[BANK0 ] unsigned int 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  counter         2    3[BANK0 ] unsigned int 
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1    wreg      void 
 13667 ;; Registers used:
 13668 ;;		wreg, status,2, status,0
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13674 ;;      Params:         0       2       0       0       0       0       0       0       0
 13675 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13676 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13677 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13678 ;;Total ram usage:        5 bytes
 13679 ;; Hardware stack levels used:    1
 13680 ;; Hardware stack levels required when called:   11
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_main
 13685 ;;		_test_powerup
 13686 ;;		_test_switch
 13687 ;;		_test_comms
 13688 ;;		_test_leds
 13689 ;;		_test_adc
 13690 ;;		_moduleResync
 13691 ;;		_moteHandler
 13692 ;;		_moteJoiningProcess
 13693 ;;		_moteRunningProcess
 13694 ;;		_moteApp_GoToSleep
 13695 ;;		_test_rf
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text37
 13700  004626                     __ptext37:
 13701                           	opt stack 0
 13702  004626                     _moteApp_delayms:
 13703                           	opt stack 17
 13704                           
 13705                           ;MOTEapp.c: 155: uint16_t counter;
 13706                           ;MOTEapp.c: 156: for(counter = 0; counter < length; counter++)
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;incstack = 0
 13710  004626  0E00               	movlw	0
 13711  004628  0100               	movlb	0	; () banked
 13712  00462A  6FC2               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 13713  00462C  0E00               	movlw	0
 13714  00462E  6FC1               	movwf	moteApp_delayms@counter& (0+255),b
 13715  004630  D00C               	goto	l318
 13716  004632                     
 13717                           ; BSR set to: 0
 13718                           ;MOTEapp.c: 157: {
 13719                           ;MOTEapp.c: 158: _delay((unsigned long)((1)*(48000000/4000.0)));
 13720                           
 13721                           ; BSR set to: 0
 13722  004632  0E10               	movlw	16
 13723  004634  0100               	movlb	0	; () banked
 13724  004636  6FC0               	movwf	??_moteApp_delayms& (0+255),b
 13725  004638  0E94               	movlw	148
 13726  00463A                     u8677:
 13727  00463A  2EE8               	decfsz	wreg,f,c
 13728  00463C  D7FE               	bra	u8677
 13729  00463E  2FC0               	decfsz	??_moteApp_delayms& (0+255),f,b
 13730  004640  D7FC               	bra	u8677
 13731  004642  F000               	nop	
 13732  004644  0100               	movlb	0	; () banked
 13733  004646  4BC1               	infsnz	moteApp_delayms@counter& (0+255),f,b
 13734  004648  2BC2               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 13735  00464A                     l318:
 13736                           
 13737                           ; BSR set to: 0
 13738  00464A  51BE               	movf	moteApp_delayms@length& (0+255),w,b
 13739  00464C  5DC1               	subwf	moteApp_delayms@counter& (0+255),w,b
 13740  00464E  51BF               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 13741  004650  59C2               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 13742  004652  B0D8               	btfsc	status,0,c
 13743  004654  0012               	return	
 13744  004656  D7ED               	goto	l319
 13745  004658                     __end_of_moteApp_delayms:
 13746                           	opt stack 0
 13747                           tblptru	equ	0xFF8
 13748                           tblptrh	equ	0xFF7
 13749                           tblptrl	equ	0xFF6
 13750                           tablat	equ	0xFF5
 13751                           prodh	equ	0xFF4
 13752                           prodl	equ	0xFF3
 13753                           intcon	equ	0xFF2
 13754                           postinc0	equ	0xFEE
 13755                           wreg	equ	0xFE8
 13756                           indf1	equ	0xFE7
 13757                           postdec1	equ	0xFE5
 13758                           fsr1h	equ	0xFE2
 13759                           fsr1l	equ	0xFE1
 13760                           indf2	equ	0xFDF
 13761                           fsr2h	equ	0xFDA
 13762                           fsr2l	equ	0xFD9
 13763                           status	equ	0xFD8
 13764                           
 13765 ;; *************** function _DATAEE_WriteByte *****************
 13766 ;; Defined at:
 13767 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  bAdd            1    wreg     unsigned char 
 13770 ;;  bData           1    0[BANK0 ] unsigned char 
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;  bAdd            1    1[BANK0 ] unsigned char 
 13773 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  1    wreg      void 
 13776 ;; Registers used:
 13777 ;;		wreg, status,2
 13778 ;; Tracked objects:
 13779 ;;		On entry : 0/0
 13780 ;;		On exit  : 0/0
 13781 ;;		Unchanged: 0/0
 13782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13783 ;;      Params:         0       1       0       0       0       0       0       0       0
 13784 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13786 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13787 ;;Total ram usage:        3 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; Hardware stack levels required when called:   11
 13790 ;; This function calls:
 13791 ;;		Nothing
 13792 ;; This function is called by:
 13793 ;;		_main
 13794 ;;		_moteJoiningProcess
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text38
 13799  0044D0                     __ptext38:
 13800                           	opt stack 0
 13801  0044D0                     _DATAEE_WriteByte:
 13802                           	opt stack 17
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;incstack = 0
 13806                           ;DATAEE_WriteByte@bAdd stored from wreg
 13807  0044D0  0100               	movlb	0	; () banked
 13808  0044D2  6FBF               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 13809                           
 13810                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 13811  0044D4  0E00               	movlw	0
 13812  0044D6  BEF2               	btfsc	intcon,7,c	;volatile
 13813  0044D8  0E01               	movlw	1
 13814  0044DA  0100               	movlb	0	; () banked
 13815  0044DC  6FC0               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 13819  0044DE  C0BF  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;memory.c: 171: EEDATA = bData;
 13823  0044E2  C0BE  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 13827  0044E6  9EA6               	bcf	4006,7,c	;volsfr
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;memory.c: 173: EECON1bits.CFGS = 0;
 13831  0044E8  9CA6               	bcf	4006,6,c	;volsfr
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;memory.c: 174: EECON1bits.WREN = 1;
 13835  0044EA  84A6               	bsf	4006,2,c	;volsfr
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;memory.c: 175: INTCONbits.GIE = 0;
 13839  0044EC  9EF2               	bcf	intcon,7,c	;volatile
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;memory.c: 176: EECON2 = 0x55;
 13843  0044EE  0E55               	movlw	85
 13844  0044F0  6EA7               	movwf	4007,c	;volsfr
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;memory.c: 177: EECON2 = 0xAA;
 13848  0044F2  0EAA               	movlw	170
 13849  0044F4  6EA7               	movwf	4007,c	;volsfr
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;memory.c: 178: EECON1bits.WR = 1;
 13853  0044F6  82A6               	bsf	4006,1,c	;volsfr
 13854  0044F8                     
 13855                           ; BSR set to: 0
 13856                           ;memory.c: 181: {
 13857  0044F8  B2A6               	btfsc	4006,1,c	;volsfr
 13858  0044FA  D7FE               	goto	l1321
 13859                           
 13860                           ;memory.c: 182: }
 13861                           ;memory.c: 184: EECON1bits.WREN = 0;
 13862  0044FC  94A6               	bcf	4006,2,c	;volsfr
 13863                           
 13864                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 13865  0044FE  0100               	movlb	0	; () banked
 13866  004500  B1C0               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 13867  004502  D002               	bra	u5555
 13868  004504  9EF2               	bcf	intcon,7,c	;volatile
 13869  004506  D001               	bra	u5556
 13870  004508                     u5555:
 13871  004508  8EF2               	bsf	intcon,7,c	;volatile
 13872  00450A                     u5556:
 13873  00450A  0012               	return		;funcret
 13874  00450C                     __end_of_DATAEE_WriteByte:
 13875                           	opt stack 0
 13876                           tblptru	equ	0xFF8
 13877                           tblptrh	equ	0xFF7
 13878                           tblptrl	equ	0xFF6
 13879                           tablat	equ	0xFF5
 13880                           prodh	equ	0xFF4
 13881                           prodl	equ	0xFF3
 13882                           intcon	equ	0xFF2
 13883                           postinc0	equ	0xFEE
 13884                           wreg	equ	0xFE8
 13885                           indf1	equ	0xFE7
 13886                           postdec1	equ	0xFE5
 13887                           fsr1h	equ	0xFE2
 13888                           fsr1l	equ	0xFE1
 13889                           indf2	equ	0xFDF
 13890                           fsr2h	equ	0xFDA
 13891                           fsr2l	equ	0xFD9
 13892                           status	equ	0xFD8
 13893                           
 13894 ;; *************** function _USBapp_exitCDCState *****************
 13895 ;; Defined at:
 13896 ;;		line 125 in file "../Includes/Board/USBapp.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  usbState        1    wreg     enum E5520
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  usbState        1    0[BANK0 ] enum E5520
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1    wreg      void 
 13903 ;; Registers used:
 13904 ;;		wreg
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13910 ;;      Params:         0       0       0       0       0       0       0       0       0
 13911 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13913 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13914 ;;Total ram usage:        1 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; Hardware stack levels required when called:   11
 13917 ;; This function calls:
 13918 ;;		Nothing
 13919 ;; This function is called by:
 13920 ;;		_moteHandler
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           
 13924                           	psect	text39
 13925  004A68                     __ptext39:
 13926                           	opt stack 0
 13927  004A68                     _USBapp_exitCDCState:
 13928                           	opt stack 18
 13929                           
 13930                           ;incstack = 0
 13931                           ;USBapp_exitCDCState@usbState stored from wreg
 13932  004A68  0100               	movlb	0	; () banked
 13933  004A6A  6FBE               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 13934                           
 13935                           ;USBapp.c: 127: exitUSB = usbState;
 13936  004A6C  C0BE  F0F4         	movff	USBapp_exitCDCState@usbState,_exitUSB
 13937  004A70  0012               	return		;funcret
 13938  004A72                     __end_of_USBapp_exitCDCState:
 13939                           	opt stack 0
 13940                           tblptru	equ	0xFF8
 13941                           tblptrh	equ	0xFF7
 13942                           tblptrl	equ	0xFF6
 13943                           tablat	equ	0xFF5
 13944                           prodh	equ	0xFF4
 13945                           prodl	equ	0xFF3
 13946                           intcon	equ	0xFF2
 13947                           postinc0	equ	0xFEE
 13948                           wreg	equ	0xFE8
 13949                           indf1	equ	0xFE7
 13950                           postdec1	equ	0xFE5
 13951                           fsr1h	equ	0xFE2
 13952                           fsr1l	equ	0xFE1
 13953                           indf2	equ	0xFDF
 13954                           fsr2h	equ	0xFDA
 13955                           fsr2l	equ	0xFD9
 13956                           status	equ	0xFD8
 13957                           
 13958 ;; *************** function _USBapp_exitCDC *****************
 13959 ;; Defined at:
 13960 ;;		line 120 in file "../Includes/Board/USBapp.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;		None
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;		None
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  1    wreg      enum E5586
 13967 ;; Registers used:
 13968 ;;		wreg, status,2
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13974 ;;      Params:         0       0       0       0       0       0       0       0       0
 13975 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13977 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13978 ;;Total ram usage:        0 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:   11
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_moteHandler
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	text40
 13989  004AA0                     __ptext40:
 13990                           	opt stack 0
 13991  004AA0                     _USBapp_exitCDC:
 13992                           	opt stack 18
 13993                           
 13994                           ;USBapp.c: 122: return exitUSB;
 13995                           
 13996                           ;incstack = 0
 13997  004AA0  0100               	movlb	0	; () banked
 13998  004AA2  51F4               	movf	_exitUSB& (0+255),w,b
 13999  004AA4  0012               	return	
 14000  004AA6                     __end_of_USBapp_exitCDC:
 14001                           	opt stack 0
 14002                           tblptru	equ	0xFF8
 14003                           tblptrh	equ	0xFF7
 14004                           tblptrl	equ	0xFF6
 14005                           tablat	equ	0xFF5
 14006                           prodh	equ	0xFF4
 14007                           prodl	equ	0xFF3
 14008                           intcon	equ	0xFF2
 14009                           postinc0	equ	0xFEE
 14010                           wreg	equ	0xFE8
 14011                           indf1	equ	0xFE7
 14012                           postdec1	equ	0xFE5
 14013                           fsr1h	equ	0xFE2
 14014                           fsr1l	equ	0xFE1
 14015                           indf2	equ	0xFDF
 14016                           fsr2h	equ	0xFDA
 14017                           fsr2l	equ	0xFD9
 14018                           status	equ	0xFD8
 14019                           
 14020 ;; *************** function _TMRapp_Handler *****************
 14021 ;; Defined at:
 14022 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		wreg, status,2, status,0, cstack
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14039 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14040 ;;Total ram usage:        0 bytes
 14041 ;; Hardware stack levels used:    1
 14042 ;; Hardware stack levels required when called:   12
 14043 ;; This function calls:
 14044 ;;		___almod
 14045 ;;		___lwmod
 14046 ;; This function is called by:
 14047 ;;		_moteHandler
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           
 14051                           	psect	text41
 14052  0024B4                     __ptext41:
 14053                           	opt stack 0
 14054  0024B4                     _TMRapp_Handler:
 14055                           	opt stack 17
 14056                           
 14057                           ;TMRapp.c: 60: timerMsTickCount++;
 14058                           
 14059                           ; BSR set to: 0
 14060                           ;incstack = 0
 14061  0024B4  0100               	movlb	0	; () banked
 14062  0024B6  4B90               	infsnz	_timerMsTickCount& (0+255),f,b
 14063  0024B8  2B91               	incf	(_timerMsTickCount+1)& (0+255),f,b
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 14067  0024BA  C090  F0BE         	movff	_timerMsTickCount,___lwmod@dividend
 14068  0024BE  C091  F0BF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14069  0024C2  0E00               	movlw	0
 14070  0024C4  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14071  0024C6  0E0A               	movlw	10
 14072  0024C8  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14073  0024CA  ECA8  F021         	call	___lwmod	;wreg free
 14074  0024CE  0100               	movlb	0	; () banked
 14075  0024D0  51BE               	movf	?___lwmod& (0+255),w,b
 14076  0024D2  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14077  0024D4  A4D8               	btfss	status,2,c
 14078  0024D6  0012               	return	
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;TMRapp.c: 63: {
 14082                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 14083  0024D8  83B3               	bsf	_appTimer& (0+255),1,b
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 14087  0024DA  C090  F0BE         	movff	_timerMsTickCount,___lwmod@dividend
 14088  0024DE  C091  F0BF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14089  0024E2  0E00               	movlw	0
 14090  0024E4  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14091  0024E6  0E64               	movlw	100
 14092  0024E8  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14093  0024EA  ECA8  F021         	call	___lwmod	;wreg free
 14094  0024EE  0100               	movlb	0	; () banked
 14095  0024F0  51BE               	movf	?___lwmod& (0+255),w,b
 14096  0024F2  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14097  0024F4  A4D8               	btfss	status,2,c
 14098  0024F6  0012               	return	
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;TMRapp.c: 66: {
 14102                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 14103  0024F8  85B3               	bsf	_appTimer& (0+255),2,b
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 14107  0024FA  C090  F0BE         	movff	_timerMsTickCount,___lwmod@dividend
 14108  0024FE  C091  F0BF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14109  002502  0E03               	movlw	3
 14110  002504  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14111  002506  0EE8               	movlw	232
 14112  002508  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14113  00250A  ECA8  F021         	call	___lwmod	;wreg free
 14114  00250E  0100               	movlb	0	; () banked
 14115  002510  51BE               	movf	?___lwmod& (0+255),w,b
 14116  002512  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14117  002514  A4D8               	btfss	status,2,c
 14118  002516  0012               	return	
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;TMRapp.c: 69: {
 14122                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 14123  002518  87B3               	bsf	_appTimer& (0+255),3,b
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 14127  00251A  C090  F0BE         	movff	_timerMsTickCount,___almod@dividend
 14128  00251E  C091  F0BF         	movff	_timerMsTickCount+1,___almod@dividend+1
 14129  002522  6BC0               	clrf	(___almod@dividend+2)& (0+255),b
 14130  002524  6BC1               	clrf	(___almod@dividend+3)& (0+255),b
 14131  002526  0E60               	movlw	96
 14132  002528  6FC2               	movwf	___almod@divisor& (0+255),b
 14133  00252A  0EEA               	movlw	234
 14134  00252C  6FC3               	movwf	(___almod@divisor+1)& (0+255),b
 14135  00252E  0E00               	movlw	0
 14136  002530  6FC4               	movwf	(___almod@divisor+2)& (0+255),b
 14137  002532  0E00               	movlw	0
 14138  002534  6FC5               	movwf	(___almod@divisor+3)& (0+255),b
 14139  002536  EC5A  F01B         	call	___almod	;wreg free
 14140  00253A  0100               	movlb	0	; () banked
 14141  00253C  51BE               	movf	?___almod& (0+255),w,b
 14142  00253E  11BF               	iorwf	(?___almod+1)& (0+255),w,b
 14143  002540  11C0               	iorwf	(?___almod+2)& (0+255),w,b
 14144  002542  11C1               	iorwf	(?___almod+3)& (0+255),w,b
 14145  002544  A4D8               	btfss	status,2,c
 14146  002546  0012               	return	
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;TMRapp.c: 72: {
 14150                           ;TMRapp.c: 73: timerMinTickCount++;
 14151  002548  4B8E               	infsnz	_timerMinTickCount& (0+255),f,b
 14152  00254A  2B8F               	incf	(_timerMinTickCount+1)& (0+255),f,b
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 14156  00254C  89B3               	bsf	_appTimer& (0+255),4,b
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 14160  00254E  C08E  F0BE         	movff	_timerMinTickCount,___lwmod@dividend
 14161  002552  C08F  F0BF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14162  002556  0E00               	movlw	0
 14163  002558  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14164  00255A  0E3C               	movlw	60
 14165  00255C  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14166  00255E  ECA8  F021         	call	___lwmod	;wreg free
 14167  002562  0100               	movlb	0	; () banked
 14168  002564  51BE               	movf	?___lwmod& (0+255),w,b
 14169  002566  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14170  002568  A4D8               	btfss	status,2,c
 14171  00256A  0012               	return	
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;TMRapp.c: 76: {
 14175                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 14176  00256C  8BB3               	bsf	_appTimer& (0+255),5,b
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 14180  00256E  C08E  F0BE         	movff	_timerMinTickCount,___lwmod@dividend
 14181  002572  C08F  F0BF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14182  002576  0E02               	movlw	2
 14183  002578  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14184  00257A  0ED0               	movlw	208
 14185  00257C  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14186  00257E  ECA8  F021         	call	___lwmod	;wreg free
 14187  002582  0100               	movlb	0	; () banked
 14188  002584  51BE               	movf	?___lwmod& (0+255),w,b
 14189  002586  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14190  002588  A4D8               	btfss	status,2,c
 14191  00258A  0012               	return	
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;TMRapp.c: 79: {
 14195                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 14196  00258C  8DB3               	bsf	_appTimer& (0+255),6,b
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 14200  00258E  C08E  F0BE         	movff	_timerMinTickCount,___lwmod@dividend
 14201  002592  C08F  F0BF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14202  002596  0E05               	movlw	5
 14203  002598  6FC1               	movwf	(___lwmod@divisor+1)& (0+255),b
 14204  00259A  0EA0               	movlw	160
 14205  00259C  6FC0               	movwf	___lwmod@divisor& (0+255),b
 14206  00259E  ECA8  F021         	call	___lwmod	;wreg free
 14207  0025A2  0100               	movlb	0	; () banked
 14208  0025A4  51BE               	movf	?___lwmod& (0+255),w,b
 14209  0025A6  11BF               	iorwf	(?___lwmod+1)& (0+255),w,b
 14210  0025A8  A4D8               	btfss	status,2,c
 14211  0025AA  0012               	return	
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;TMRapp.c: 82: {
 14215                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 14216  0025AC  8FB3               	bsf	_appTimer& (0+255),7,b
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;TMRapp.c: 85: timerMsTickCount = 0;
 14220  0025AE  0E00               	movlw	0
 14221  0025B0  6F91               	movwf	(_timerMsTickCount+1)& (0+255),b
 14222  0025B2  0E00               	movlw	0
 14223  0025B4  6F90               	movwf	_timerMsTickCount& (0+255),b
 14224                           
 14225                           ;TMRapp.c: 86: timerMinTickCount = 0;
 14226  0025B6  0E00               	movlw	0
 14227  0025B8  6F8F               	movwf	(_timerMinTickCount+1)& (0+255),b
 14228  0025BA  0E00               	movlw	0
 14229  0025BC  6F8E               	movwf	_timerMinTickCount& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232                           
 14233                           ; BSR set to: 0
 14234                           
 14235                           ; BSR set to: 0
 14236                           
 14237                           ; BSR set to: 0
 14238                           
 14239                           ; BSR set to: 0
 14240                           
 14241                           ; BSR set to: 0
 14242  0025BE  0012               	return	
 14243  0025C0                     __end_of_TMRapp_Handler:
 14244                           	opt stack 0
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           postinc0	equ	0xFEE
 14253                           wreg	equ	0xFE8
 14254                           indf1	equ	0xFE7
 14255                           postdec1	equ	0xFE5
 14256                           fsr1h	equ	0xFE2
 14257                           fsr1l	equ	0xFE1
 14258                           indf2	equ	0xFDF
 14259                           fsr2h	equ	0xFDA
 14260                           fsr2l	equ	0xFD9
 14261                           status	equ	0xFD8
 14262                           
 14263 ;; *************** function ___lwmod *****************
 14264 ;; Defined at:
 14265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;  dividend        2    0[BANK0 ] unsigned int 
 14268 ;;  divisor         2    2[BANK0 ] unsigned int 
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;  counter         1    4[BANK0 ] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  2    0[BANK0 ] unsigned int 
 14273 ;; Registers used:
 14274 ;;		wreg, status,2, status,0
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14280 ;;      Params:         0       4       0       0       0       0       0       0       0
 14281 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14283 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14284 ;;Total ram usage:        5 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:   11
 14287 ;; This function calls:
 14288 ;;		Nothing
 14289 ;; This function is called by:
 14290 ;;		_moteApp_add16bToDataBuffer
 14291 ;;		_TMRapp_Handler
 14292 ;;		_oled_putUint16
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text42
 14297  004350                     __ptext42:
 14298                           	opt stack 0
 14299  004350                     ___lwmod:
 14300                           	opt stack 16
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;incstack = 0
 14304  004350  0100               	movlb	0	; () banked
 14305  004352  51C0               	movf	___lwmod@divisor& (0+255),w,b
 14306  004354  11C1               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14307  004356  B4D8               	btfsc	status,2,c
 14308  004358  D018               	goto	l2343
 14309                           
 14310                           ; BSR set to: 0
 14311  00435A  0E01               	movlw	1
 14312  00435C  6FC2               	movwf	___lwmod@counter& (0+255),b
 14313  00435E  D004               	goto	l2338
 14314  004360                     
 14315                           ; BSR set to: 0
 14316                           
 14317                           ; BSR set to: 0
 14318  004360  90D8               	bcf	status,0,c
 14319  004362  37C0               	rlcf	___lwmod@divisor& (0+255),f,b
 14320  004364  37C1               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14321  004366  2BC2               	incf	___lwmod@counter& (0+255),f,b
 14322  004368                     l2338:
 14323                           
 14324                           ; BSR set to: 0
 14325                           
 14326                           ; BSR set to: 0
 14327  004368  AFC1               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14328  00436A  D7FA               	goto	l2339
 14329  00436C                     u5520:
 14330                           
 14331                           ; BSR set to: 0
 14332                           
 14333                           ; BSR set to: 0
 14334                           
 14335                           ; BSR set to: 0
 14336  00436C  51C0               	movf	___lwmod@divisor& (0+255),w,b
 14337  00436E  5DBE               	subwf	___lwmod@dividend& (0+255),w,b
 14338  004370  51C1               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14339  004372  59BF               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14340  004374  A0D8               	btfss	status,0,c
 14341  004376  D004               	goto	l2342
 14342                           
 14343                           ; BSR set to: 0
 14344  004378  51C0               	movf	___lwmod@divisor& (0+255),w,b
 14345  00437A  5FBE               	subwf	___lwmod@dividend& (0+255),f,b
 14346  00437C  51C1               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14347  00437E  5BBF               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14348  004380                     l2342:
 14349                           
 14350                           ; BSR set to: 0
 14351                           
 14352                           ; BSR set to: 0
 14353  004380  90D8               	bcf	status,0,c
 14354  004382  33C1               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14355  004384  33C0               	rrcf	___lwmod@divisor& (0+255),f,b
 14356                           
 14357                           ; BSR set to: 0
 14358  004386  2FC2               	decfsz	___lwmod@counter& (0+255),f,b
 14359  004388  D7F1               	goto	u5520
 14360  00438A                     l2343:
 14361                           
 14362                           ; BSR set to: 0
 14363                           
 14364                           ; BSR set to: 0
 14365  00438A  C0BE  F0BE         	movff	___lwmod@dividend,?___lwmod
 14366  00438E  C0BF  F0BF         	movff	___lwmod@dividend+1,?___lwmod+1
 14367                           
 14368                           ; BSR set to: 0
 14369  004392  0012               	return		;funcret
 14370  004394                     __end_of___lwmod:
 14371                           	opt stack 0
 14372                           tblptru	equ	0xFF8
 14373                           tblptrh	equ	0xFF7
 14374                           tblptrl	equ	0xFF6
 14375                           tablat	equ	0xFF5
 14376                           prodh	equ	0xFF4
 14377                           prodl	equ	0xFF3
 14378                           intcon	equ	0xFF2
 14379                           postinc0	equ	0xFEE
 14380                           wreg	equ	0xFE8
 14381                           indf1	equ	0xFE7
 14382                           postdec1	equ	0xFE5
 14383                           fsr1h	equ	0xFE2
 14384                           fsr1l	equ	0xFE1
 14385                           indf2	equ	0xFDF
 14386                           fsr2h	equ	0xFDA
 14387                           fsr2l	equ	0xFD9
 14388                           status	equ	0xFD8
 14389                           
 14390 ;; *************** function ___almod *****************
 14391 ;; Defined at:
 14392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 14393 ;; Parameters:    Size  Location     Type
 14394 ;;  dividend        4    0[BANK0 ] long 
 14395 ;;  divisor         4    4[BANK0 ] long 
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;  sign            1    9[BANK0 ] unsigned char 
 14398 ;;  counter         1    8[BANK0 ] unsigned char 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  4    0[BANK0 ] long 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2, status,0
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14408 ;;      Params:         0       8       0       0       0       0       0       0       0
 14409 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14411 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14412 ;;Total ram usage:       10 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:   11
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_TMRapp_Handler
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text43
 14423  0036B4                     __ptext43:
 14424                           	opt stack 0
 14425  0036B4                     ___almod:
 14426                           	opt stack 17
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;incstack = 0
 14430  0036B4  0E00               	movlw	0
 14431  0036B6  0100               	movlb	0	; () banked
 14432  0036B8  6FC7               	movwf	___almod@sign& (0+255),b
 14433                           
 14434                           ; BSR set to: 0
 14435  0036BA  AFC1               	btfss	(___almod@dividend+3)& (0+255),7,b
 14436  0036BC  D00A               	goto	l1993
 14437                           
 14438                           ; BSR set to: 0
 14439  0036BE  1FC1               	comf	(___almod@dividend+3)& (0+255),f,b
 14440  0036C0  1FC0               	comf	(___almod@dividend+2)& (0+255),f,b
 14441  0036C2  1FBF               	comf	(___almod@dividend+1)& (0+255),f,b
 14442  0036C4  6DBE               	negf	___almod@dividend& (0+255),b
 14443  0036C6  0E00               	movlw	0
 14444  0036C8  23BF               	addwfc	(___almod@dividend+1)& (0+255),f,b
 14445  0036CA  23C0               	addwfc	(___almod@dividend+2)& (0+255),f,b
 14446  0036CC  23C1               	addwfc	(___almod@dividend+3)& (0+255),f,b
 14447                           
 14448                           ; BSR set to: 0
 14449  0036CE  0E01               	movlw	1
 14450  0036D0  6FC7               	movwf	___almod@sign& (0+255),b
 14451  0036D2                     l1993:
 14452                           
 14453                           ; BSR set to: 0
 14454                           
 14455                           ; BSR set to: 0
 14456  0036D2  AFC5               	btfss	(___almod@divisor+3)& (0+255),7,b
 14457  0036D4  D008               	goto	l1994
 14458                           
 14459                           ; BSR set to: 0
 14460  0036D6  1FC5               	comf	(___almod@divisor+3)& (0+255),f,b
 14461  0036D8  1FC4               	comf	(___almod@divisor+2)& (0+255),f,b
 14462  0036DA  1FC3               	comf	(___almod@divisor+1)& (0+255),f,b
 14463  0036DC  6DC2               	negf	___almod@divisor& (0+255),b
 14464  0036DE  0E00               	movlw	0
 14465  0036E0  23C3               	addwfc	(___almod@divisor+1)& (0+255),f,b
 14466  0036E2  23C4               	addwfc	(___almod@divisor+2)& (0+255),f,b
 14467  0036E4  23C5               	addwfc	(___almod@divisor+3)& (0+255),f,b
 14468  0036E6                     l1994:
 14469                           
 14470                           ; BSR set to: 0
 14471                           
 14472                           ; BSR set to: 0
 14473  0036E6  51C2               	movf	___almod@divisor& (0+255),w,b
 14474  0036E8  11C3               	iorwf	(___almod@divisor+1)& (0+255),w,b
 14475  0036EA  11C4               	iorwf	(___almod@divisor+2)& (0+255),w,b
 14476  0036EC  11C5               	iorwf	(___almod@divisor+3)& (0+255),w,b
 14477  0036EE  B4D8               	btfsc	status,2,c
 14478  0036F0  D024               	goto	l2001
 14479                           
 14480                           ; BSR set to: 0
 14481  0036F2  0E01               	movlw	1
 14482  0036F4  6FC6               	movwf	___almod@counter& (0+255),b
 14483  0036F6  D006               	goto	l1996
 14484  0036F8                     
 14485                           ; BSR set to: 0
 14486                           
 14487                           ; BSR set to: 0
 14488  0036F8  90D8               	bcf	status,0,c
 14489  0036FA  37C2               	rlcf	___almod@divisor& (0+255),f,b
 14490  0036FC  37C3               	rlcf	(___almod@divisor+1)& (0+255),f,b
 14491  0036FE  37C4               	rlcf	(___almod@divisor+2)& (0+255),f,b
 14492  003700  37C5               	rlcf	(___almod@divisor+3)& (0+255),f,b
 14493  003702  2BC6               	incf	___almod@counter& (0+255),f,b
 14494  003704                     l1996:
 14495                           
 14496                           ; BSR set to: 0
 14497                           
 14498                           ; BSR set to: 0
 14499  003704  AFC5               	btfss	(___almod@divisor+3)& (0+255),7,b
 14500  003706  D7F8               	goto	l1997
 14501  003708                     u6110:
 14502                           
 14503                           ; BSR set to: 0
 14504                           
 14505                           ; BSR set to: 0
 14506                           
 14507                           ; BSR set to: 0
 14508  003708  51C2               	movf	___almod@divisor& (0+255),w,b
 14509  00370A  5DBE               	subwf	___almod@dividend& (0+255),w,b
 14510  00370C  51C3               	movf	(___almod@divisor+1)& (0+255),w,b
 14511  00370E  59BF               	subwfb	(___almod@dividend+1)& (0+255),w,b
 14512  003710  51C4               	movf	(___almod@divisor+2)& (0+255),w,b
 14513  003712  59C0               	subwfb	(___almod@dividend+2)& (0+255),w,b
 14514  003714  51C5               	movf	(___almod@divisor+3)& (0+255),w,b
 14515  003716  59C1               	subwfb	(___almod@dividend+3)& (0+255),w,b
 14516  003718  A0D8               	btfss	status,0,c
 14517  00371A  D008               	goto	l2000
 14518                           
 14519                           ; BSR set to: 0
 14520  00371C  51C2               	movf	___almod@divisor& (0+255),w,b
 14521  00371E  5FBE               	subwf	___almod@dividend& (0+255),f,b
 14522  003720  51C3               	movf	(___almod@divisor+1)& (0+255),w,b
 14523  003722  5BBF               	subwfb	(___almod@dividend+1)& (0+255),f,b
 14524  003724  51C4               	movf	(___almod@divisor+2)& (0+255),w,b
 14525  003726  5BC0               	subwfb	(___almod@dividend+2)& (0+255),f,b
 14526  003728  51C5               	movf	(___almod@divisor+3)& (0+255),w,b
 14527  00372A  5BC1               	subwfb	(___almod@dividend+3)& (0+255),f,b
 14528  00372C                     l2000:
 14529                           
 14530                           ; BSR set to: 0
 14531                           
 14532                           ; BSR set to: 0
 14533  00372C  90D8               	bcf	status,0,c
 14534  00372E  33C5               	rrcf	(___almod@divisor+3)& (0+255),f,b
 14535  003730  33C4               	rrcf	(___almod@divisor+2)& (0+255),f,b
 14536  003732  33C3               	rrcf	(___almod@divisor+1)& (0+255),f,b
 14537  003734  33C2               	rrcf	___almod@divisor& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 0
 14540  003736  2FC6               	decfsz	___almod@counter& (0+255),f,b
 14541  003738  D7E7               	goto	u6110
 14542  00373A                     l2001:
 14543                           
 14544                           ; BSR set to: 0
 14545                           
 14546                           ; BSR set to: 0
 14547                           
 14548                           ; BSR set to: 0
 14549  00373A  51C7               	movf	___almod@sign& (0+255),w,b
 14550  00373C  B4D8               	btfsc	status,2,c
 14551  00373E  D008               	goto	l2002
 14552                           
 14553                           ; BSR set to: 0
 14554  003740  1FC1               	comf	(___almod@dividend+3)& (0+255),f,b
 14555  003742  1FC0               	comf	(___almod@dividend+2)& (0+255),f,b
 14556  003744  1FBF               	comf	(___almod@dividend+1)& (0+255),f,b
 14557  003746  6DBE               	negf	___almod@dividend& (0+255),b
 14558  003748  0E00               	movlw	0
 14559  00374A  23BF               	addwfc	(___almod@dividend+1)& (0+255),f,b
 14560  00374C  23C0               	addwfc	(___almod@dividend+2)& (0+255),f,b
 14561  00374E  23C1               	addwfc	(___almod@dividend+3)& (0+255),f,b
 14562  003750                     l2002:
 14563                           
 14564                           ; BSR set to: 0
 14565                           
 14566                           ; BSR set to: 0
 14567  003750  C0BE  F0BE         	movff	___almod@dividend,?___almod
 14568  003754  C0BF  F0BF         	movff	___almod@dividend+1,?___almod+1
 14569  003758  C0C0  F0C0         	movff	___almod@dividend+2,?___almod+2
 14570  00375C  C0C1  F0C1         	movff	___almod@dividend+3,?___almod+3
 14571  003760  0012               	return	
 14572  003762                     __end_of___almod:
 14573                           	opt stack 0
 14574                           tblptru	equ	0xFF8
 14575                           tblptrh	equ	0xFF7
 14576                           tblptrl	equ	0xFF6
 14577                           tablat	equ	0xFF5
 14578                           prodh	equ	0xFF4
 14579                           prodl	equ	0xFF3
 14580                           intcon	equ	0xFF2
 14581                           postinc0	equ	0xFEE
 14582                           wreg	equ	0xFE8
 14583                           indf1	equ	0xFE7
 14584                           postdec1	equ	0xFE5
 14585                           fsr1h	equ	0xFE2
 14586                           fsr1l	equ	0xFE1
 14587                           indf2	equ	0xFDF
 14588                           fsr2h	equ	0xFDA
 14589                           fsr2l	equ	0xFD9
 14590                           status	equ	0xFD8
 14591                           
 14592 ;; *************** function _TMRapp_ClearBitFlags *****************
 14593 ;; Defined at:
 14594 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;		None
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;		None
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1    wreg      void 
 14601 ;; Registers used:
 14602 ;;		wreg, status,2
 14603 ;; Tracked objects:
 14604 ;;		On entry : 0/0
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14608 ;;      Params:         0       0       0       0       0       0       0       0       0
 14609 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14611 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14612 ;;Total ram usage:        0 bytes
 14613 ;; Hardware stack levels used:    1
 14614 ;; Hardware stack levels required when called:   11
 14615 ;; This function calls:
 14616 ;;		Nothing
 14617 ;; This function is called by:
 14618 ;;		_moteHandler
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text44
 14623  004A90                     __ptext44:
 14624                           	opt stack 0
 14625  004A90                     _TMRapp_ClearBitFlags:
 14626                           	opt stack 18
 14627                           
 14628                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;incstack = 0
 14632  004A90  0E00               	movlw	0
 14633  004A92  0100               	movlb	0	; () banked
 14634  004A94  6FB3               	movwf	_appTimer& (0+255),b
 14635                           
 14636                           ; BSR set to: 0
 14637  004A96  0012               	return		;funcret
 14638  004A98                     __end_of_TMRapp_ClearBitFlags:
 14639                           	opt stack 0
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           prodh	equ	0xFF4
 14645                           prodl	equ	0xFF3
 14646                           intcon	equ	0xFF2
 14647                           postinc0	equ	0xFEE
 14648                           wreg	equ	0xFE8
 14649                           indf1	equ	0xFE7
 14650                           postdec1	equ	0xFE5
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           indf2	equ	0xFDF
 14654                           fsr2h	equ	0xFDA
 14655                           fsr2l	equ	0xFD9
 14656                           status	equ	0xFD8
 14657                           
 14658 ;; *************** function _MOTEapp_TimerBasedTask *****************
 14659 ;; Defined at:
 14660 ;;		line 1008 in file "../Includes/Board/MOTEapp.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  timerTask       1    wreg     struct .
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;  timerTask       1    0[BANK0 ] struct .
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  1    wreg      void 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14674 ;;      Params:         0       0       0       0       0       0       0       0       0
 14675 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14677 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14678 ;;Total ram usage:        1 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:   11
 14681 ;; This function calls:
 14682 ;;		Nothing
 14683 ;; This function is called by:
 14684 ;;		_moteHandler
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text45
 14689  0048F6                     __ptext45:
 14690                           	opt stack 0
 14691  0048F6                     _MOTEapp_TimerBasedTask:
 14692                           	opt stack 18
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;incstack = 0
 14696                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 14697  0048F6  0100               	movlb	0	; () banked
 14698  0048F8  6FBE               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 14699                           
 14700                           ;MOTEapp.c: 1013: if (timerTask.mSecTenTick)
 14701  0048FA  0100               	movlb	0	; () banked
 14702  0048FC  A3BE               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 14703  0048FE  D002               	goto	l586
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;MOTEapp.c: 1014: {
 14707                           ;MOTEapp.c: 1016: m10SecTicker++;
 14708  004900  4B92               	infsnz	_m10SecTicker& (0+255),f,b
 14709  004902  2B93               	incf	(_m10SecTicker+1)& (0+255),f,b
 14710  004904                     l586:
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;MOTEapp.c: 1021: }
 14714                           ;MOTEapp.c: 1022: if (timerTask.SecTick)
 14715                           
 14716                           ; BSR set to: 0
 14717                           
 14718                           ;MOTEapp.c: 1019: {
 14719                           
 14720                           ; BSR set to: 0
 14721                           
 14722                           ; BSR set to: 0
 14723  004904  B7BE               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;MOTEapp.c: 1023: {
 14727                           ;MOTEapp.c: 1025: secTicker++;
 14728  004906  2BAB               	incf	_secTicker& (0+255),f,b
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;MOTEapp.c: 1026: }
 14732                           ;MOTEapp.c: 1027: if (timerTask.MinTick)
 14733                           
 14734                           ; BSR set to: 0
 14735  004908  A9BE               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 14736  00490A  0012               	return	
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;MOTEapp.c: 1028: {
 14740                           ;MOTEapp.c: 1030: minTicker++;
 14741  00490C  2A4F               	incf	_minTicker,f,c
 14742                           
 14743                           ; BSR set to: 0
 14744                           
 14745                           ; BSR set to: 0
 14746                           
 14747                           ;MOTEapp.c: 1037: {
 14748                           
 14749                           ; BSR set to: 0
 14750                           
 14751                           ; BSR set to: 0
 14752                           
 14753                           ;MOTEapp.c: 1033: {
 14754                           
 14755                           ; BSR set to: 0
 14756                           
 14757                           ; BSR set to: 0
 14758  00490E  0012               	return	
 14759  004910                     __end_of_MOTEapp_TimerBasedTask:
 14760                           	opt stack 0
 14761                           tblptru	equ	0xFF8
 14762                           tblptrh	equ	0xFF7
 14763                           tblptrl	equ	0xFF6
 14764                           tablat	equ	0xFF5
 14765                           prodh	equ	0xFF4
 14766                           prodl	equ	0xFF3
 14767                           intcon	equ	0xFF2
 14768                           postinc0	equ	0xFEE
 14769                           wreg	equ	0xFE8
 14770                           indf1	equ	0xFE7
 14771                           postdec1	equ	0xFE5
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           fsr2h	equ	0xFDA
 14776                           fsr2l	equ	0xFD9
 14777                           status	equ	0xFD8
 14778                           
 14779 ;; *************** function _moteApp_clearCommand *****************
 14780 ;; Defined at:
 14781 ;;		line 1222 in file "../Includes/Board/MOTEapp.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;		None
 14784 ;; Auto vars:     Size  Location     Type
 14785 ;;		None
 14786 ;; Return value:  Size  Location     Type
 14787 ;;                  1    wreg      void 
 14788 ;; Registers used:
 14789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14790 ;; Tracked objects:
 14791 ;;		On entry : 0/0
 14792 ;;		On exit  : 0/0
 14793 ;;		Unchanged: 0/0
 14794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14795 ;;      Params:         0       0       0       0       0       0       0       0       0
 14796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14798 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14799 ;;Total ram usage:        0 bytes
 14800 ;; Hardware stack levels used:    1
 14801 ;; Hardware stack levels required when called:   14
 14802 ;; This function calls:
 14803 ;;		_sendCommand
 14804 ;; This function is called by:
 14805 ;;		_main
 14806 ;; This function uses a non-reentrant model
 14807 ;;
 14808                           
 14809                           	psect	text46
 14810  004A14                     __ptext46:
 14811                           	opt stack 0
 14812  004A14                     _moteApp_clearCommand:
 14813                           	opt stack 16
 14814                           
 14815                           ;MOTEapp.c: 1224: sendCommand("\r\n");
 14816                           
 14817                           ; BSR set to: 0
 14818                           ;incstack = 0
 14819  004A14  0E33               	movlw	low (STR_177+23)
 14820  004A16  0100               	movlb	0	; () banked
 14821  004A18  6FBF               	movwf	sendCommand@string& (0+255),b
 14822  004A1A  0E7A               	movlw	high (STR_177+23)
 14823  004A1C  6FC0               	movwf	(sendCommand@string+1)& (0+255),b
 14824  004A1E  EC45  F023         	call	_sendCommand	;wreg free
 14825  004A22  0012               	return		;funcret
 14826  004A24                     __end_of_moteApp_clearCommand:
 14827                           	opt stack 0
 14828                           tblptru	equ	0xFF8
 14829                           tblptrh	equ	0xFF7
 14830                           tblptrl	equ	0xFF6
 14831                           tablat	equ	0xFF5
 14832                           prodh	equ	0xFF4
 14833                           prodl	equ	0xFF3
 14834                           intcon	equ	0xFF2
 14835                           postinc0	equ	0xFEE
 14836                           wreg	equ	0xFE8
 14837                           indf1	equ	0xFE7
 14838                           postdec1	equ	0xFE5
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           fsr2h	equ	0xFDA
 14843                           fsr2l	equ	0xFD9
 14844                           status	equ	0xFD8
 14845                           
 14846 ;; *************** function _sendCommand *****************
 14847 ;; Defined at:
 14848 ;;		line 1094 in file "../Includes/Board/MOTEapp.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 14851 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 14852 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 14853 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 14854 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 14855 ;;		 -> STR_69(11), STR_67(11), STR_65(14), STR_57(14), 
 14856 ;;		 -> STR_51(10), STR_47(13), STR_42(14), STR_40(13), 
 14857 ;;		 -> STR_38(10), STR_29(10), STR_22(20), STR_21(2), 
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      void 
 14862 ;; Registers used:
 14863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14869 ;;      Params:         0       2       0       0       0       0       0       0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14872 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14873 ;;Total ram usage:        2 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:   13
 14876 ;; This function calls:
 14877 ;;		_EUSART_Write
 14878 ;;		_EndLine
 14879 ;; This function is called by:
 14880 ;;		_moduleResync
 14881 ;;		_moduleSleep
 14882 ;;		_moteJoiningProcess
 14883 ;;		_MOTEapp_SetDataRateSetting
 14884 ;;		_moteApp_clearCommand
 14885 ;;		_moteApp_toggleLeds
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text47
 14890  00468A                     __ptext47:
 14891                           	opt stack 0
 14892  00468A                     _sendCommand:
 14893                           	opt stack 14
 14894                           
 14895                           ;MOTEapp.c: 1097: while (*string)
 14896                           
 14897                           ;incstack = 0
 14898  00468A  D00B               	goto	l617
 14899  00468C                     
 14900                           ;MOTEapp.c: 1098: {
 14901                           ;MOTEapp.c: 1099: EUSART_Write(*string++);
 14902  00468C  C0BF  FFF6         	movff	sendCommand@string,tblptrl
 14903  004690  C0C0  FFF7         	movff	sendCommand@string+1,tblptrh
 14904  004694                     	if	0	;tblptru may be non-zero
 14905  004694                     	endif
 14906  004694                     	if	0	;tblptru may be non-zero
 14907  004694                     	endif
 14908  004694  0008               	tblrd		*
 14909  004696  50F5               	movf	tablat,w,c
 14910  004698  EC2B  F022         	call	_EUSART_Write
 14911  00469C  0100               	movlb	0	; () banked
 14912  00469E  4BBF               	infsnz	sendCommand@string& (0+255),f,b
 14913  0046A0  2BC0               	incf	(sendCommand@string+1)& (0+255),f,b
 14914  0046A2                     l617:
 14915                           
 14916                           ; BSR set to: 0
 14917  0046A2  C0BF  FFF6         	movff	sendCommand@string,tblptrl
 14918  0046A6  C0C0  FFF7         	movff	sendCommand@string+1,tblptrh
 14919  0046AA                     	if	0	;tblptru may be non-zero
 14920  0046AA                     	endif
 14921  0046AA                     	if	0	;tblptru may be non-zero
 14922  0046AA                     	endif
 14923  0046AA  0008               	tblrd		*
 14924  0046AC  50F5               	movf	tablat,w,c
 14925  0046AE  0900               	iorlw	0
 14926  0046B0  A4D8               	btfss	status,2,c
 14927  0046B2  D7EC               	goto	l618
 14928                           
 14929                           ;MOTEapp.c: 1100: }
 14930                           ;MOTEapp.c: 1101: EndLine();
 14931  0046B4  EC22  F025         	call	_EndLine	;wreg free
 14932  0046B8  0012               	return		;funcret
 14933  0046BA                     __end_of_sendCommand:
 14934                           	opt stack 0
 14935                           tblptru	equ	0xFF8
 14936                           tblptrh	equ	0xFF7
 14937                           tblptrl	equ	0xFF6
 14938                           tablat	equ	0xFF5
 14939                           prodh	equ	0xFF4
 14940                           prodl	equ	0xFF3
 14941                           intcon	equ	0xFF2
 14942                           postinc0	equ	0xFEE
 14943                           wreg	equ	0xFE8
 14944                           indf1	equ	0xFE7
 14945                           postdec1	equ	0xFE5
 14946                           fsr1h	equ	0xFE2
 14947                           fsr1l	equ	0xFE1
 14948                           indf2	equ	0xFDF
 14949                           fsr2h	equ	0xFDA
 14950                           fsr2l	equ	0xFD9
 14951                           status	equ	0xFD8
 14952                           
 14953 ;; *************** function _EndLine *****************
 14954 ;; Defined at:
 14955 ;;		line 1088 in file "../Includes/Board/MOTEapp.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;		None
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;		None
 14960 ;; Return value:  Size  Location     Type
 14961 ;;                  1    wreg      void 
 14962 ;; Registers used:
 14963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14964 ;; Tracked objects:
 14965 ;;		On entry : 0/0
 14966 ;;		On exit  : 0/0
 14967 ;;		Unchanged: 0/0
 14968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14969 ;;      Params:         0       0       0       0       0       0       0       0       0
 14970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14972 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14973 ;;Total ram usage:        0 bytes
 14974 ;; Hardware stack levels used:    1
 14975 ;; Hardware stack levels required when called:   12
 14976 ;; This function calls:
 14977 ;;		_EUSART_Write
 14978 ;; This function is called by:
 14979 ;;		_sendCommand
 14980 ;;		_sendDataCommand
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text48
 14985  004A44                     __ptext48:
 14986                           	opt stack 0
 14987  004A44                     _EndLine:
 14988                           	opt stack 14
 14989                           
 14990                           ;MOTEapp.c: 1090: EUSART_Write(0x0D);
 14991                           
 14992                           ;incstack = 0
 14993  004A44  0E0D               	movlw	13
 14994  004A46  EC2B  F022         	call	_EUSART_Write
 14995                           
 14996                           ;MOTEapp.c: 1091: EUSART_Write(0x0A);
 14997  004A4A  0E0A               	movlw	10
 14998  004A4C  EC2B  F022         	call	_EUSART_Write
 14999  004A50  0012               	return		;funcret
 15000  004A52                     __end_of_EndLine:
 15001                           	opt stack 0
 15002                           tblptru	equ	0xFF8
 15003                           tblptrh	equ	0xFF7
 15004                           tblptrl	equ	0xFF6
 15005                           tablat	equ	0xFF5
 15006                           prodh	equ	0xFF4
 15007                           prodl	equ	0xFF3
 15008                           intcon	equ	0xFF2
 15009                           postinc0	equ	0xFEE
 15010                           wreg	equ	0xFE8
 15011                           indf1	equ	0xFE7
 15012                           postdec1	equ	0xFE5
 15013                           fsr1h	equ	0xFE2
 15014                           fsr1l	equ	0xFE1
 15015                           indf2	equ	0xFDF
 15016                           fsr2h	equ	0xFDA
 15017                           fsr2l	equ	0xFD9
 15018                           status	equ	0xFD8
 15019                           
 15020 ;; *************** function _USBapp_handlerState *****************
 15021 ;; Defined at:
 15022 ;;		line 67 in file "../Includes/Board/USBapp.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;  state           1    wreg     enum E5515
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;  state           1    0[BANK0 ] enum E5515
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1    wreg      void 
 15029 ;; Registers used:
 15030 ;;		wreg
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0
 15037 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15039 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15040 ;;Total ram usage:        1 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:   11
 15043 ;; This function calls:
 15044 ;;		Nothing
 15045 ;; This function is called by:
 15046 ;;		_main
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text49
 15051  004A72                     __ptext49:
 15052                           	opt stack 0
 15053  004A72                     _USBapp_handlerState:
 15054                           	opt stack 19
 15055                           
 15056                           ;incstack = 0
 15057                           ;USBapp_handlerState@state stored from wreg
 15058  004A72  0100               	movlb	0	; () banked
 15059  004A74  6FBE               	movwf	USBapp_handlerState@state& (0+255),b
 15060                           
 15061                           ;USBapp.c: 69: usbState = state;
 15062  004A76  C0BE  F0A6         	movff	USBapp_handlerState@state,_usbState
 15063  004A7A  0012               	return		;funcret
 15064  004A7C                     __end_of_USBapp_handlerState:
 15065                           	opt stack 0
 15066                           tblptru	equ	0xFF8
 15067                           tblptrh	equ	0xFF7
 15068                           tblptrl	equ	0xFF6
 15069                           tablat	equ	0xFF5
 15070                           prodh	equ	0xFF4
 15071                           prodl	equ	0xFF3
 15072                           intcon	equ	0xFF2
 15073                           postinc0	equ	0xFEE
 15074                           wreg	equ	0xFE8
 15075                           indf1	equ	0xFE7
 15076                           postdec1	equ	0xFE5
 15077                           fsr1h	equ	0xFE2
 15078                           fsr1l	equ	0xFE1
 15079                           indf2	equ	0xFDF
 15080                           fsr2h	equ	0xFDA
 15081                           fsr2l	equ	0xFD9
 15082                           status	equ	0xFD8
 15083                           
 15084 ;; *************** function _USBapp_Handler *****************
 15085 ;; Defined at:
 15086 ;;		line 72 in file "../Includes/Board/USBapp.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;  buttonPress     1   18[BANK0 ] enum E5549
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0
 15101 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15103 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15104 ;;Total ram usage:        1 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:   17
 15107 ;; This function calls:
 15108 ;;		_USBapp_DeviceCdcEmulatorHandler
 15109 ;;		_oled_clear
 15110 ;;		_oled_putString
 15111 ;;		_service_pushbutton
 15112 ;; This function is called by:
 15113 ;;		_main
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           	psect	text50
 15118  003550                     __ptext50:
 15119                           	opt stack 0
 15120  003550                     _USBapp_Handler:
 15121                           	opt stack 13
 15122                           
 15123                           ;USBapp.c: 76: {
 15124                           ;USBapp.c: 77: switch(usbState)
 15125                           
 15126                           ;incstack = 0
 15127                           ;USBapp.c: 75: do
 15128  003550  D03E               	goto	l767
 15129  003552                     
 15130                           ;USBapp.c: 80: while(1);
 15131  003552  D7FF               	goto	l768
 15132  003554                     
 15133                           ;USBapp.c: 84: oled_clear();
 15134  003554  EC88  F024         	call	_oled_clear	;wreg free
 15135                           
 15136                           ;USBapp.c: 85: oled_putString("CDC Mode",1,0);
 15137  003558  0E11               	movlw	low STR_179
 15138  00355A  0100               	movlb	0	; () banked
 15139  00355C  6FCB               	movwf	oled_putString@string& (0+255),b
 15140  00355E  0E7F               	movlw	high STR_179
 15141  003560  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 15142  003562  0E01               	movlw	1
 15143  003564  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 15144  003566  0E00               	movlw	0
 15145  003568  6FCE               	movwf	oled_putString@start_page& (0+255),b
 15146  00356A  EC2E  F01F         	call	_oled_putString	;wreg free
 15147                           
 15148                           ;USBapp.c: 86: oled_putString("Command",2,1);
 15149  00356E  0E62               	movlw	low STR_180
 15150  003570  0100               	movlb	0	; () banked
 15151  003572  6FCB               	movwf	oled_putString@string& (0+255),b
 15152  003574  0E7F               	movlw	high STR_180
 15153  003576  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 15154  003578  0E02               	movlw	2
 15155  00357A  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 15156  00357C  0E01               	movlw	1
 15157  00357E  6FCE               	movwf	oled_putString@start_page& (0+255),b
 15158  003580  EC2E  F01F         	call	_oled_putString	;wreg free
 15159                           
 15160                           ;USBapp.c: 87: oled_putString("USB Handler",0,2);
 15161  003584  0E29               	movlw	low STR_181
 15162  003586  0100               	movlb	0	; () banked
 15163  003588  6FCB               	movwf	oled_putString@string& (0+255),b
 15164  00358A  0E7E               	movlw	high STR_181
 15165  00358C  6FCC               	movwf	(oled_putString@string+1)& (0+255),b
 15166  00358E  0E00               	movlw	0
 15167  003590  6FCD               	movwf	oled_putString@station_dot& (0+255),b
 15168  003592  0E02               	movlw	2
 15169  003594  6FCE               	movwf	oled_putString@start_page& (0+255),b
 15170  003596  EC2E  F01F         	call	_oled_putString	;wreg free
 15171                           
 15172                           ;USBapp.c: 89: usbState = USB_RUNNING;
 15173  00359A  0E01               	movlw	1
 15174  00359C  0100               	movlb	0	; () banked
 15175  00359E  D005               	goto	L11
 15176  0035A0                     
 15177                           ; BSR set to: 0
 15178                           ;USBapp.c: 93: if( USBDeviceState < CONFIGURED_STATE )
 15179                           
 15180                           ; BSR set to: 0
 15181  0035A0  0E20               	movlw	32
 15182  0035A2  61A8               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 15183  0035A4  D001               	goto	l775
 15184  0035A6  D01F               	goto	l772
 15185  0035A8                     l775:
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;USBapp.c: 97: }
 15189                           ;USBapp.c: 98: usbState = USB_CDC;
 15190                           
 15191                           ; BSR set to: 0
 15192  0035A8  0E02               	movlw	2
 15193  0035AA                     L11:
 15194  0035AA  6FA6               	movwf	_usbState& (0+255),b
 15195                           
 15196                           ;USBapp.c: 99: break;
 15197  0035AC  D01C               	goto	l772
 15198  0035AE                     
 15199                           ; BSR set to: 0
 15200                           ;USBapp.c: 102: USBapp_DeviceCdcEmulatorHandler();
 15201                           
 15202                           ; BSR set to: 0
 15203  0035AE  ECA3  F015         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 15204                           
 15205                           ;USBapp.c: 106: buttonStates_t buttonPress = Released;
 15206  0035B2  0E03               	movlw	3
 15207  0035B4  0100               	movlb	0	; () banked
 15208  0035B6  6FD0               	movwf	USBapp_Handler@buttonPress& (0+255),b
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;USBapp.c: 107: buttonPress = service_pushbutton();
 15212  0035B8  ECCB  F01F         	call	_service_pushbutton	;wreg free
 15213  0035BC  0100               	movlb	0	; () banked
 15214  0035BE  6FD0               	movwf	USBapp_Handler@buttonPress& (0+255),b
 15215                           
 15216                           ; BSR set to: 0
 15217                           ;USBapp.c: 108: if (buttonPress != Released )
 15218  0035C0  0E03               	movlw	3
 15219  0035C2  19D0               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 15220  0035C4  B4D8               	btfsc	status,2,c
 15221  0035C6  D00F               	goto	l772
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;USBapp.c: 109: {
 15225                           ;USBapp.c: 110: exitUSB = USB_BAT;
 15226  0035C8  0E02               	movlw	2
 15227  0035CA  6FF4               	movwf	_exitUSB& (0+255),b
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;USBapp.c: 113: }
 15231                           
 15232                           ; BSR set to: 0
 15233                           ;USBapp.c: 111: }
 15234                           ;USBapp.c: 112: break;
 15235  0035CC  D00C               	goto	l772
 15236  0035CE                     l767:
 15237                           
 15238                           ; BSR set to: 0
 15239  0035CE  0100               	movlb	0	; () banked
 15240  0035D0  51A6               	movf	_usbState& (0+255),w,b
 15241                           
 15242                           ; Switch size 1, requested type "space"
 15243                           ; Number of cases is 3, Range of values is 0 to 2
 15244                           ; switch strategies available:
 15245                           ; Name         Instructions Cycles
 15246                           ; simple_byte           10     6 (average)
 15247                           ;	Chosen strategy is simple_byte
 15248  0035D2  0A00               	xorlw	0	; case 0
 15249  0035D4  B4D8               	btfsc	status,2,c
 15250  0035D6  D7BE               	goto	l773
 15251  0035D8  0A01               	xorlw	1	; case 1
 15252  0035DA  B4D8               	btfsc	status,2,c
 15253  0035DC  D7E1               	goto	l774
 15254  0035DE  0A03               	xorlw	3	; case 2
 15255  0035E0  B4D8               	btfsc	status,2,c
 15256  0035E2  D7E5               	goto	l777
 15257  0035E4  D7B6               	goto	l768
 15258  0035E6                     l772:
 15259                           
 15260                           ;USBapp.c: 114: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 15261                           
 15262                           ; BSR set to: 0
 15263  0035E6  A080               	btfss	3968,0,c	;volatile
 15264  0035E8  D004               	goto	u7570
 15265  0035EA  0100               	movlb	0	; () banked
 15266  0035EC  51F4               	movf	_exitUSB& (0+255),w,b
 15267  0035EE  B4D8               	btfsc	status,2,c
 15268  0035F0  D7EE               	goto	l767
 15269  0035F2                     u7570:
 15270                           
 15271                           ;USBapp.c: 115: __nop();
 15272                           
 15273                           ; BSR set to: 0
 15274  0035F2  F000               	nop	
 15275                           
 15276                           ;USBapp.c: 116: if (exitUSB != USB_BAT)
 15277  0035F4  0E02               	movlw	2
 15278  0035F6  0100               	movlb	0	; () banked
 15279  0035F8  19F4               	xorwf	_exitUSB& (0+255),w,b
 15280  0035FA  B4D8               	btfsc	status,2,c
 15281  0035FC  0012               	return	
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;USBapp.c: 117: exitUSB = NO_USB;
 15285  0035FE  0E00               	movlw	0
 15286  003600  6FF4               	movwf	_exitUSB& (0+255),b
 15287  003602  0012               	return	
 15288  003604                     __end_of_USBapp_Handler:
 15289                           	opt stack 0
 15290                           tblptru	equ	0xFF8
 15291                           tblptrh	equ	0xFF7
 15292                           tblptrl	equ	0xFF6
 15293                           tablat	equ	0xFF5
 15294                           prodh	equ	0xFF4
 15295                           prodl	equ	0xFF3
 15296                           intcon	equ	0xFF2
 15297                           postinc0	equ	0xFEE
 15298                           wreg	equ	0xFE8
 15299                           indf1	equ	0xFE7
 15300                           postdec1	equ	0xFE5
 15301                           fsr1h	equ	0xFE2
 15302                           fsr1l	equ	0xFE1
 15303                           indf2	equ	0xFDF
 15304                           fsr2h	equ	0xFDA
 15305                           fsr2l	equ	0xFD9
 15306                           status	equ	0xFD8
 15307                           
 15308 ;; *************** function _service_pushbutton *****************
 15309 ;; Defined at:
 15310 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;		None
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;  bs              1    0[BANK0 ] enum E5430
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  1    wreg      enum E5518
 15317 ;; Registers used:
 15318 ;;		wreg, status,2, status,0
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15324 ;;      Params:         0       0       0       0       0       0       0       0       0
 15325 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15327 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15328 ;;Total ram usage:        1 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:   11
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		_moteHandler
 15335 ;;		_USBapp_Handler
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           	psect	text51
 15340  003F96                     __ptext51:
 15341                           	opt stack 0
 15342  003F96                     _service_pushbutton:
 15343                           	opt stack 18
 15344                           
 15345                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 15346                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 15347                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;incstack = 0
 15351  003F96  0E00               	movlw	0
 15352  003F98  0100               	movlb	0	; () banked
 15353  003F9A  6FBE               	movwf	service_pushbutton@bs& (0+255),b
 15354                           
 15355                           ; BSR set to: 0
 15356                           ;buttons.c: 55: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
 15357  003F9C  A082               	btfss	3970,0,c	;volatile
 15358  003F9E  D002               	goto	u6330
 15359                           
 15360                           ; BSR set to: 0
 15361  003FA0  B282               	btfsc	3970,1,c	;volatile
 15362  003FA2  D017               	goto	l860
 15363  003FA4                     u6330:
 15364                           
 15365                           ; BSR set to: 0
 15366                           ;buttons.c: 56: {
 15367                           ;buttons.c: 57: ++PB_Timer;
 15368                           
 15369                           ; BSR set to: 0
 15370  003FA4  0E01               	movlw	1
 15371  003FA6  277A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 15372  003FA8  0E00               	movlw	0
 15373  003FAA  237B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 15374  003FAC  237C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 15375  003FAE  237D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 15376                           
 15377                           ;buttons.c: 61: if (PB_Timer == 55)
 15378  003FB0  0E37               	movlw	55
 15379  003FB2  197A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 15380  003FB4  117B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 15381  003FB6  117C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 15382  003FB8  117D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 15383  003FBA  A4D8               	btfss	status,2,c
 15384  003FBC  D008               	goto	l863
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;buttons.c: 62: {
 15388                           ;buttons.c: 63: Release_Timer = 0;
 15389  003FBE  0E00               	movlw	0
 15390  003FC0  6FA0               	movwf	service_pushbutton@Release_Timer& (0+255),b
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;buttons.c: 65: if (PORTCbits.RC0 == 0)
 15394  003FC2  B082               	btfsc	3970,0,c	;volatile
 15395  003FC4  D002               	goto	l864
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;buttons.c: 66: {
 15399                           ;buttons.c: 67: bs = ShortPress1;
 15400  003FC6  0E01               	movlw	1
 15401  003FC8  D015               	goto	L14
 15402  003FCA                     l864:
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;buttons.c: 69: else
 15406                           ;buttons.c: 70: {
 15407                           ;buttons.c: 71: bs = ShortPress2;
 15408                           
 15409                           ; BSR set to: 0
 15410  003FCA  0E02               	movlw	2
 15411  003FCC  D013               	goto	L14
 15412  003FCE                     l863:
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;buttons.c: 74: else
 15416                           ;buttons.c: 75: {
 15417                           ;buttons.c: 76: bs = NoButton;
 15418                           
 15419                           ; BSR set to: 0
 15420  003FCE  0E00               	movlw	0
 15421  003FD0  D011               	goto	L14
 15422  003FD2                     l860:
 15423                           
 15424                           ; BSR set to: 0
 15425                           ;buttons.c: 79: else
 15426                           ;buttons.c: 80: {
 15427                           ;buttons.c: 81: if (Release_Timer == 20)
 15428                           
 15429                           ; BSR set to: 0
 15430  003FD2  0E14               	movlw	20
 15431  003FD4  19A0               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 15432  003FD6  A4D8               	btfss	status,2,c
 15433  003FD8  D00B               	goto	l868
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;buttons.c: 82: {
 15437                           ;buttons.c: 83: PB_Timer = 0;
 15438  003FDA  0E00               	movlw	0
 15439  003FDC  6F7A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 15440  003FDE  0E00               	movlw	0
 15441  003FE0  6F7B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 15442  003FE2  0E00               	movlw	0
 15443  003FE4  6F7C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 15444  003FE6  0E00               	movlw	0
 15445  003FE8  6F7D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 15446                           
 15447                           ;buttons.c: 84: Release_Timer = 0;
 15448  003FEA  0E00               	movlw	0
 15449  003FEC  6FA0               	movwf	service_pushbutton@Release_Timer& (0+255),b
 15450                           
 15451                           ;buttons.c: 85: }
 15452  003FEE  D001               	goto	l869
 15453  003FF0                     l868:
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;buttons.c: 86: else
 15457                           ;buttons.c: 87: {
 15458                           ;buttons.c: 88: Release_Timer++;
 15459                           
 15460                           ; BSR set to: 0
 15461  003FF0  2BA0               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 15462  003FF2                     l869:
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;buttons.c: 89: }
 15466                           ;buttons.c: 90: bs = Released;
 15467                           
 15468                           ; BSR set to: 0
 15469  003FF2  0E03               	movlw	3
 15470  003FF4                     L14:
 15471  003FF4  6FBE               	movwf	service_pushbutton@bs& (0+255),b
 15472                           
 15473                           ; BSR set to: 0
 15474                           ;buttons.c: 91: }
 15475                           ;buttons.c: 93: return bs;
 15476                           
 15477                           ; BSR set to: 0
 15478  003FF6  51BE               	movf	service_pushbutton@bs& (0+255),w,b
 15479  003FF8  0012               	return	
 15480  003FFA                     __end_of_service_pushbutton:
 15481                           	opt stack 0
 15482                           tblptru	equ	0xFF8
 15483                           tblptrh	equ	0xFF7
 15484                           tblptrl	equ	0xFF6
 15485                           tablat	equ	0xFF5
 15486                           prodh	equ	0xFF4
 15487                           prodl	equ	0xFF3
 15488                           intcon	equ	0xFF2
 15489                           postinc0	equ	0xFEE
 15490                           wreg	equ	0xFE8
 15491                           indf1	equ	0xFE7
 15492                           postdec1	equ	0xFE5
 15493                           fsr1h	equ	0xFE2
 15494                           fsr1l	equ	0xFE1
 15495                           indf2	equ	0xFDF
 15496                           fsr2h	equ	0xFDA
 15497                           fsr2l	equ	0xFD9
 15498                           status	equ	0xFD8
 15499                           
 15500 ;; *************** function _oled_putString *****************
 15501 ;; Defined at:
 15502 ;;		line 303 in file "../Includes/Drivers/SSD1306oLED.c"
 15503 ;; Parameters:    Size  Location     Type
 15504 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 15505 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_181(12), STR_180(8), 
 15506 ;;		 -> STR_179(9), STR_162(16), STR_161(17), STR_160(17), 
 15507 ;;		 -> STR_159(4), STR_158(4), STR_157(4), STR_156(4), 
 15508 ;;		 -> STR_155(4), STR_154(4), STR_153(4), STR_152(16), 
 15509 ;;		 -> STR_151(17), STR_150(4), STR_149(4), STR_148(4), 
 15510 ;;		 -> STR_147(4), STR_146(4), STR_145(4), STR_144(4), 
 15511 ;;		 -> STR_143(4), STR_142(4), STR_141(4), STR_140(4), 
 15512 ;;		 -> STR_139(4), STR_138(4), STR_137(16), STR_136(12), 
 15513 ;;		 -> STR_135(17), STR_134(16), STR_133(16), STR_132(16), 
 15514 ;;		 -> STR_131(15), STR_130(15), STR_129(16), STR_128(4), 
 15515 ;;		 -> STR_127(3), STR_126(3), STR_125(3), STR_124(3), 
 15516 ;;		 -> STR_123(2), STR_122(5), STR_121(7), STR_120(17), 
 15517 ;;		 -> STR_119(17), STR_118(2), STR_117(7), STR_116(7), 
 15518 ;;		 -> STR_115(16), STR_114(16), STR_113(15), STR_112(15), 
 15519 ;;		 -> STR_111(17), STR_110(16), STR_109(17), STR_108(17), 
 15520 ;;		 -> STR_107(7), STR_106(10), STR_105(17), STR_104(16), 
 15521 ;;		 -> STR_103(16), STR_102(16), STR_101(16), STR_100(17), 
 15522 ;;		 -> STR_99(17), STR_98(16), STR_96(18), STR_94(17), 
 15523 ;;		 -> STR_92(17), STR_91(17), responseData(32), responsePortNum(3), 
 15524 ;;		 -> STR_88(12), STR_87(13), STR_86(12), STR_83(18), 
 15525 ;;		 -> STR_82(13), STR_81(17), STR_80(16), STR_79(17), 
 15526 ;;		 -> STR_78(17), STR_77(16), STR_76(17), STR_75(17), 
 15527 ;;		 -> STR_73(16), STR_72(13), STR_71(12), STR_70(17), 
 15528 ;;		 -> STR_64(7), STR_63(10), STR_61(11), STR_60(11), 
 15529 ;;		 -> STR_55(9), STR_54(11), STR_50(11), STR_49(10), 
 15530 ;;		 -> STR_46(9), STR_45(11), STR_41(17), STR_39(17), 
 15531 ;;		 -> STR_37(17), STR_36(17), STR_35(17), STR_33(17), 
 15532 ;;		 -> STR_32(17), STR_31(17), STR_28(17), STR_27(17), 
 15533 ;;		 -> STR_26(17), STR_25(17), STR_24(9), STR_23(10), 
 15534 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 15535 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 15536 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 15537 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 15538 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 15539 ;;  station_dot     1   15[BANK0 ] unsigned char 
 15540 ;;  start_page      1   16[BANK0 ] unsigned char 
 15541 ;; Auto vars:     Size  Location     Type
 15542 ;;  index           1   17[BANK0 ] unsigned char 
 15543 ;; Return value:  Size  Location     Type
 15544 ;;                  1    wreg      void 
 15545 ;; Registers used:
 15546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15547 ;; Tracked objects:
 15548 ;;		On entry : 0/0
 15549 ;;		On exit  : 0/0
 15550 ;;		Unchanged: 0/0
 15551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15552 ;;      Params:         0       4       0       0       0       0       0       0       0
 15553 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15555 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15556 ;;Total ram usage:        5 bytes
 15557 ;; Hardware stack levels used:    1
 15558 ;; Hardware stack levels required when called:   15
 15559 ;; This function calls:
 15560 ;;		_oled_putChar
 15561 ;; This function is called by:
 15562 ;;		_main
 15563 ;;		_test_oled
 15564 ;;		_test_switch
 15565 ;;		_test_comms
 15566 ;;		_test_leds
 15567 ;;		_test_adc
 15568 ;;		_moteHandler
 15569 ;;		_moteJoiningProcess
 15570 ;;		_moteRunningProcess
 15571 ;;		_USBapp_Handler
 15572 ;;		_oled_putUint8
 15573 ;;		_oled_putUint16
 15574 ;;		_test_rf
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text52
 15579  003E5C                     __ptext52:
 15580                           	opt stack 0
 15581  003E5C                     _oled_putString:
 15582                           	opt stack 13
 15583                           
 15584                           ;SSD1306oLED.c: 305: uint8_t index;
 15585                           ;SSD1306oLED.c: 306: for(index = station_dot; index < 16; index++)
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;incstack = 0
 15589  003E5C  C0CD  F0CF         	movff	oled_putString@station_dot,oled_putString@index
 15590  003E60  0E0F               	movlw	15
 15591  003E62  0100               	movlb	0	; () banked
 15592  003E64  65CF               	cpfsgt	oled_putString@index& (0+255),b
 15593  003E66  D001               	goto	l940
 15594  003E68  0012               	return	
 15595  003E6A                     l940:
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;SSD1306oLED.c: 307: {
 15599                           ;SSD1306oLED.c: 308: if (*string != 0)
 15600                           
 15601                           ; BSR set to: 0
 15602  003E6A  C0CB  FFF6         	movff	oled_putString@string,tblptrl
 15603  003E6E  C0CC  FFF7         	movff	oled_putString@string+1,tblptrh
 15604  003E72  6AF8               	clrf	tblptru,c
 15605  003E74  0E07               	movlw	(high __ramtop+-1)
 15606  003E76  64F7               	cpfsgt	tblptrh,c
 15607  003E78  D003               	bra	u5117
 15608  003E7A  0008               	tblrd		*
 15609  003E7C  50F5               	movf	tablat,w,c
 15610  003E7E  D005               	bra	u5110
 15611  003E80                     u5117:
 15612  003E80  CFF6 FFE9          	movff	tblptrl,fsr0l
 15613  003E84  CFF7 FFEA          	movff	tblptrh,fsr0h
 15614  003E88  50EF               	movf	indf0,w,c
 15615  003E8A                     u5110:
 15616  003E8A  0900               	iorlw	0
 15617  003E8C  B4D8               	btfsc	status,2,c
 15618  003E8E  0012               	return	
 15619                           
 15620                           ;SSD1306oLED.c: 309: {
 15621                           ;SSD1306oLED.c: 310: oled_putChar(*string, index, start_page);
 15622  003E90  C0CF  F0C1         	movff	oled_putString@index,oled_putChar@station_dot
 15623  003E94  C0CE  F0C2         	movff	oled_putString@start_page,oled_putChar@start_page
 15624  003E98  C0CB  FFF6         	movff	oled_putString@string,tblptrl
 15625  003E9C  C0CC  FFF7         	movff	oled_putString@string+1,tblptrh
 15626  003EA0  6AF8               	clrf	tblptru,c
 15627  003EA2  0E07               	movlw	(high __ramtop+-1)
 15628  003EA4  64F7               	cpfsgt	tblptrh,c
 15629  003EA6  D003               	bra	u5137
 15630  003EA8  0008               	tblrd		*
 15631  003EAA  50F5               	movf	tablat,w,c
 15632  003EAC  D005               	bra	u5130
 15633  003EAE                     u5137:
 15634  003EAE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15635  003EB2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15636  003EB6  50EF               	movf	indf0,w,c
 15637  003EB8                     u5130:
 15638  003EB8  ECB5  F01D         	call	_oled_putChar
 15639                           
 15640                           ;SSD1306oLED.c: 311: *string++;
 15641  003EBC  0100               	movlb	0	; () banked
 15642  003EBE  4BCB               	infsnz	oled_putString@string& (0+255),f,b
 15643  003EC0  2BCC               	incf	(oled_putString@string+1)& (0+255),f,b
 15644                           
 15645                           ; BSR set to: 0
 15646                           
 15647                           ; BSR set to: 0
 15648                           
 15649                           ; BSR set to: 0
 15650                           ;SSD1306oLED.c: 313: else
 15651                           ;SSD1306oLED.c: 314: {
 15652                           ;SSD1306oLED.c: 315: break;
 15653                           
 15654                           ;SSD1306oLED.c: 312: }
 15655  003EC2  2BCF               	incf	oled_putString@index& (0+255),f,b
 15656                           
 15657                           ; BSR set to: 0
 15658  003EC4  0E0F               	movlw	15
 15659  003EC6  D7CE               	goto	L15
 15660  003EC8                     __end_of_oled_putString:
 15661                           	opt stack 0
 15662                           tblptru	equ	0xFF8
 15663                           tblptrh	equ	0xFF7
 15664                           tblptrl	equ	0xFF6
 15665                           tablat	equ	0xFF5
 15666                           prodh	equ	0xFF4
 15667                           prodl	equ	0xFF3
 15668                           intcon	equ	0xFF2
 15669                           indf0	equ	0xFEF
 15670                           postinc0	equ	0xFEE
 15671                           fsr0h	equ	0xFEA
 15672                           fsr0l	equ	0xFE9
 15673                           wreg	equ	0xFE8
 15674                           indf1	equ	0xFE7
 15675                           postdec1	equ	0xFE5
 15676                           fsr1h	equ	0xFE2
 15677                           fsr1l	equ	0xFE1
 15678                           indf2	equ	0xFDF
 15679                           fsr2h	equ	0xFDA
 15680                           fsr2l	equ	0xFD9
 15681                           status	equ	0xFD8
 15682                           
 15683 ;; *************** function _oled_clear *****************
 15684 ;; Defined at:
 15685 ;;		line 320 in file "../Includes/Drivers/SSD1306oLED.c"
 15686 ;; Parameters:    Size  Location     Type
 15687 ;;		None
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;		None
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1    wreg      void 
 15692 ;; Registers used:
 15693 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15699 ;;      Params:         0       0       0       0       0       0       0       0       0
 15700 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15701 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15702 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15703 ;;Total ram usage:        0 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; Hardware stack levels required when called:   16
 15706 ;; This function calls:
 15707 ;;		_oled_clearRow
 15708 ;; This function is called by:
 15709 ;;		_main
 15710 ;;		_test_powerup
 15711 ;;		_test_oled
 15712 ;;		_test_switch
 15713 ;;		_test_adc
 15714 ;;		_moteHandler
 15715 ;;		_moteJoiningProcess
 15716 ;;		_moteRunningProcess
 15717 ;;		_USBapp_Handler
 15718 ;;		_oled_init
 15719 ;;		_test_rf
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text53
 15724  004910                     __ptext53:
 15725                           	opt stack 0
 15726  004910                     _oled_clear:
 15727                           	opt stack 12
 15728                           
 15729                           ;SSD1306oLED.c: 322: oled_clearRow(0);
 15730                           
 15731                           ;incstack = 0
 15732  004910  0E00               	movlw	0
 15733  004912  EC24  F024         	call	_oled_clearRow
 15734                           
 15735                           ;SSD1306oLED.c: 323: oled_clearRow(1);
 15736  004916  0E01               	movlw	1
 15737  004918  EC24  F024         	call	_oled_clearRow
 15738                           
 15739                           ;SSD1306oLED.c: 324: oled_clearRow(2);
 15740  00491C  0E02               	movlw	2
 15741  00491E  EC24  F024         	call	_oled_clearRow
 15742                           
 15743                           ;SSD1306oLED.c: 325: oled_clearRow(3);
 15744  004922  0E03               	movlw	3
 15745  004924  EC24  F024         	call	_oled_clearRow
 15746  004928  0012               	return		;funcret
 15747  00492A                     __end_of_oled_clear:
 15748                           	opt stack 0
 15749                           tblptru	equ	0xFF8
 15750                           tblptrh	equ	0xFF7
 15751                           tblptrl	equ	0xFF6
 15752                           tablat	equ	0xFF5
 15753                           prodh	equ	0xFF4
 15754                           prodl	equ	0xFF3
 15755                           intcon	equ	0xFF2
 15756                           indf0	equ	0xFEF
 15757                           postinc0	equ	0xFEE
 15758                           fsr0h	equ	0xFEA
 15759                           fsr0l	equ	0xFE9
 15760                           wreg	equ	0xFE8
 15761                           indf1	equ	0xFE7
 15762                           postdec1	equ	0xFE5
 15763                           fsr1h	equ	0xFE2
 15764                           fsr1l	equ	0xFE1
 15765                           indf2	equ	0xFDF
 15766                           fsr2h	equ	0xFDA
 15767                           fsr2l	equ	0xFD9
 15768                           status	equ	0xFD8
 15769                           
 15770 ;; *************** function _oled_clearRow *****************
 15771 ;; Defined at:
 15772 ;;		line 328 in file "../Includes/Drivers/SSD1306oLED.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  page            1    wreg     unsigned char 
 15775 ;; Auto vars:     Size  Location     Type
 15776 ;;  page            1   13[BANK0 ] unsigned char 
 15777 ;;  index           1   14[BANK0 ] unsigned char 
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0
 15788 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15789 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15790 ;;      Totals:         0       2       0       0       0       0       0       0       0
 15791 ;;Total ram usage:        2 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:   15
 15794 ;; This function calls:
 15795 ;;		_oled_putChar
 15796 ;; This function is called by:
 15797 ;;		_oled_clear
 15798 ;; This function uses a non-reentrant model
 15799 ;;
 15800                           
 15801                           	psect	text54
 15802  004848                     __ptext54:
 15803                           	opt stack 0
 15804  004848                     _oled_clearRow:
 15805                           	opt stack 12
 15806                           
 15807                           ;incstack = 0
 15808                           ;oled_clearRow@page stored from wreg
 15809  004848  0100               	movlb	0	; () banked
 15810  00484A  6FCB               	movwf	oled_clearRow@page& (0+255),b
 15811                           
 15812                           ;SSD1306oLED.c: 330: uint8_t index;
 15813                           ;SSD1306oLED.c: 332: for(index = 0; index < 16; index++)
 15814  00484C  0E00               	movlw	0
 15815  00484E  0100               	movlb	0	; () banked
 15816  004850  6FCC               	movwf	oled_clearRow@index& (0+255),b
 15817  004852                     l6615:
 15818                           
 15819                           ; BSR set to: 0
 15820  004852  0E0F               	movlw	15
 15821  004854  65CC               	cpfsgt	oled_clearRow@index& (0+255),b
 15822  004856  D001               	goto	l950
 15823  004858  0012               	return	
 15824  00485A                     l950:
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;SSD1306oLED.c: 333: {
 15828                           ;SSD1306oLED.c: 334: oled_putChar( ' ', index, page);
 15829                           
 15830                           ; BSR set to: 0
 15831  00485A  C0CC  F0C1         	movff	oled_clearRow@index,oled_putChar@station_dot
 15832  00485E  C0CB  F0C2         	movff	oled_clearRow@page,oled_putChar@start_page
 15833  004862  0E20               	movlw	32
 15834  004864  ECB5  F01D         	call	_oled_putChar
 15835  004868  0100               	movlb	0	; () banked
 15836  00486A  2BCC               	incf	oled_clearRow@index& (0+255),f,b
 15837  00486C  D7F2               	goto	l6615
 15838  00486E                     __end_of_oled_clearRow:
 15839                           	opt stack 0
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           indf0	equ	0xFEF
 15848                           postinc0	equ	0xFEE
 15849                           fsr0h	equ	0xFEA
 15850                           fsr0l	equ	0xFE9
 15851                           wreg	equ	0xFE8
 15852                           indf1	equ	0xFE7
 15853                           postdec1	equ	0xFE5
 15854                           fsr1h	equ	0xFE2
 15855                           fsr1l	equ	0xFE1
 15856                           indf2	equ	0xFDF
 15857                           fsr2h	equ	0xFDA
 15858                           fsr2l	equ	0xFD9
 15859                           status	equ	0xFD8
 15860                           
 15861 ;; *************** function _oled_putChar *****************
 15862 ;; Defined at:
 15863 ;;		line 288 in file "../Includes/Drivers/SSD1306oLED.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;  k               1    wreg     unsigned char 
 15866 ;;  station_dot     1    3[BANK0 ] unsigned char 
 15867 ;;  start_page      1    4[BANK0 ] unsigned char 
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;  k               1   11[BANK0 ] unsigned char 
 15870 ;;  index           1   12[BANK0 ] unsigned char 
 15871 ;; Return value:  Size  Location     Type
 15872 ;;                  1    wreg      void 
 15873 ;; Registers used:
 15874 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15875 ;; Tracked objects:
 15876 ;;		On entry : 0/0
 15877 ;;		On exit  : 0/0
 15878 ;;		Unchanged: 0/0
 15879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15880 ;;      Params:         0       2       0       0       0       0       0       0       0
 15881 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15882 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15883 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15884 ;;Total ram usage:       10 bytes
 15885 ;; Hardware stack levels used:    1
 15886 ;; Hardware stack levels required when called:   14
 15887 ;; This function calls:
 15888 ;;		_Set_Column_Address
 15889 ;;		_Set_Page_Address
 15890 ;;		_oled_writeData
 15891 ;; This function is called by:
 15892 ;;		_test_adc
 15893 ;;		_oled_putString
 15894 ;;		_oled_clearRow
 15895 ;; This function uses a non-reentrant model
 15896 ;;
 15897                           
 15898                           	psect	text55
 15899  003B6A                     __ptext55:
 15900                           	opt stack 0
 15901  003B6A                     _oled_putChar:
 15902                           	opt stack 13
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;incstack = 0
 15906                           ;oled_putChar@k stored from wreg
 15907  003B6A  0100               	movlb	0	; () banked
 15908  003B6C  6FC9               	movwf	oled_putChar@k& (0+255),b
 15909                           
 15910                           ;SSD1306oLED.c: 290: uint8_t index;
 15911                           ;SSD1306oLED.c: 292: Set_Page_Address(start_page);
 15912  003B6E  0100               	movlb	0	; () banked
 15913  003B70  51C2               	movf	oled_putChar@start_page& (0+255),w,b
 15914  003B72  ECAE  F024         	call	_Set_Page_Address
 15915                           
 15916                           ;SSD1306oLED.c: 293: Set_Column_Address(0x00 + station_dot * 8);
 15917  003B76  0100               	movlb	0	; () banked
 15918  003B78  51C1               	movf	oled_putChar@station_dot& (0+255),w,b
 15919  003B7A  0D08               	mullw	8
 15920  003B7C  50F3               	movf	prodl,w,c
 15921  003B7E  EC6B  F024         	call	_Set_Column_Address
 15922                           
 15923                           ;SSD1306oLED.c: 295: LATBbits.LATB4 = 0;
 15924  003B82  988A               	bcf	3978,4,c	;volatile
 15925                           
 15926                           ;SSD1306oLED.c: 296: for(index = 0; index < 8; index++)
 15927  003B84  0E00               	movlw	0
 15928  003B86  0100               	movlb	0	; () banked
 15929  003B88  6FCA               	movwf	oled_putChar@index& (0+255),b
 15930  003B8A                     l6479:
 15931                           
 15932                           ; BSR set to: 0
 15933  003B8A  0E07               	movlw	7
 15934  003B8C  65CA               	cpfsgt	oled_putChar@index& (0+255),b
 15935  003B8E  D001               	goto	l935
 15936  003B90  D02D               	goto	u4350
 15937  003B92                     l935:
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;SSD1306oLED.c: 297: {
 15941                           ;SSD1306oLED.c: 298: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 15942                           
 15943                           ; BSR set to: 0
 15944  003B92  51CA               	movf	oled_putChar@index& (0+255),w,b
 15945  003B94  0D01               	mullw	1
 15946  003B96  0E00               	movlw	0
 15947  003B98  6FC3               	movwf	??_oled_putChar& (0+255),b
 15948  003B9A  0EFF               	movlw	255
 15949  003B9C  6FC4               	movwf	(??_oled_putChar+1)& (0+255),b
 15950  003B9E  51C9               	movf	oled_putChar@k& (0+255),w,b
 15951  003BA0  6FC5               	movwf	(??_oled_putChar+2)& (0+255),b
 15952  003BA2  6BC6               	clrf	(??_oled_putChar+3)& (0+255),b
 15953  003BA4  90D8               	bcf	status,0,c
 15954  003BA6  37C5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15955  003BA8  37C6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15956  003BAA  90D8               	bcf	status,0,c
 15957  003BAC  37C5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15958  003BAE  37C6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15959  003BB0  90D8               	bcf	status,0,c
 15960  003BB2  37C5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15961  003BB4  37C6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15962  003BB6  51C3               	movf	??_oled_putChar& (0+255),w,b
 15963  003BB8  27C5               	addwf	(??_oled_putChar+2)& (0+255),f,b
 15964  003BBA  51C4               	movf	(??_oled_putChar+1)& (0+255),w,b
 15965  003BBC  23C6               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 15966  003BBE  C0F2  F0C7         	movff	_selectedFont,??_oled_putChar+4
 15967  003BC2  C0F3  F0C8         	movff	_selectedFont+1,??_oled_putChar+5
 15968  003BC6  51C5               	movf	(??_oled_putChar+2)& (0+255),w,b
 15969  003BC8  27C7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 15970  003BCA  51C6               	movf	(??_oled_putChar+3)& (0+255),w,b
 15971  003BCC  23C8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 15972  003BCE  50F3               	movf	prodl,w,c
 15973  003BD0  27C7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 15974  003BD2  50F4               	movf	prodh,w,c
 15975  003BD4  23C8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 15976  003BD6  C0C7  FFF6         	movff	??_oled_putChar+4,tblptrl
 15977  003BDA  C0C8  FFF7         	movff	??_oled_putChar+5,tblptrh
 15978  003BDE                     	if	0	;tblptru may be non-zero
 15979  003BDE                     	endif
 15980  003BDE                     	if	0	;tblptru may be non-zero
 15981  003BDE                     	endif
 15982  003BDE  0008               	tblrd		*
 15983  003BE0  50F5               	movf	tablat,w,c
 15984  003BE2  EC12  F025         	call	_oled_writeData
 15985  003BE6  0100               	movlb	0	; () banked
 15986  003BE8  2BCA               	incf	oled_putChar@index& (0+255),f,b
 15987  003BEA  D7CF               	goto	l6479
 15988  003BEC                     u4350:
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;SSD1306oLED.c: 299: }
 15992                           ;SSD1306oLED.c: 300: LATBbits.LATB4 = 1;
 15993  003BEC  888A               	bsf	3978,4,c	;volatile
 15994                           
 15995                           ; BSR set to: 0
 15996  003BEE  0012               	return		;funcret
 15997  003BF0                     __end_of_oled_putChar:
 15998                           	opt stack 0
 15999                           tblptru	equ	0xFF8
 16000                           tblptrh	equ	0xFF7
 16001                           tblptrl	equ	0xFF6
 16002                           tablat	equ	0xFF5
 16003                           prodh	equ	0xFF4
 16004                           prodl	equ	0xFF3
 16005                           intcon	equ	0xFF2
 16006                           indf0	equ	0xFEF
 16007                           postinc0	equ	0xFEE
 16008                           fsr0h	equ	0xFEA
 16009                           fsr0l	equ	0xFE9
 16010                           wreg	equ	0xFE8
 16011                           indf1	equ	0xFE7
 16012                           postdec1	equ	0xFE5
 16013                           fsr1h	equ	0xFE2
 16014                           fsr1l	equ	0xFE1
 16015                           indf2	equ	0xFDF
 16016                           fsr2h	equ	0xFDA
 16017                           fsr2l	equ	0xFD9
 16018                           status	equ	0xFD8
 16019                           
 16020 ;; *************** function _oled_writeData *****************
 16021 ;; Defined at:
 16022 ;;		line 436 in file "../Includes/Drivers/SSD1306oLED.c"
 16023 ;; Parameters:    Size  Location     Type
 16024 ;;  data            1    wreg     unsigned char 
 16025 ;; Auto vars:     Size  Location     Type
 16026 ;;  data            1    1[BANK0 ] unsigned char 
 16027 ;; Return value:  Size  Location     Type
 16028 ;;                  1    wreg      void 
 16029 ;; Registers used:
 16030 ;;		wreg, status,2, cstack
 16031 ;; Tracked objects:
 16032 ;;		On entry : 0/0
 16033 ;;		On exit  : 0/0
 16034 ;;		Unchanged: 0/0
 16035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16036 ;;      Params:         0       0       0       0       0       0       0       0       0
 16037 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16039 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16040 ;;Total ram usage:        1 bytes
 16041 ;; Hardware stack levels used:    1
 16042 ;; Hardware stack levels required when called:   12
 16043 ;; This function calls:
 16044 ;;		_SPI_Exchange8bit
 16045 ;; This function is called by:
 16046 ;;		_oled_putChar
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text56
 16051  004A24                     __ptext56:
 16052                           	opt stack 0
 16053  004A24                     _oled_writeData:
 16054                           	opt stack 14
 16055                           
 16056                           ; BSR set to: 0
 16057                           ;incstack = 0
 16058                           ;oled_writeData@data stored from wreg
 16059  004A24  0100               	movlb	0	; () banked
 16060  004A26  6FBF               	movwf	oled_writeData@data& (0+255),b
 16061                           
 16062                           ;SSD1306oLED.c: 438: LATBbits.LATB5 = 1;
 16063  004A28  8A8A               	bsf	3978,5,c	;volatile
 16064                           
 16065                           ;SSD1306oLED.c: 439: SPI_Exchange8bit(data);
 16066  004A2A  0100               	movlb	0	; () banked
 16067  004A2C  51BF               	movf	oled_writeData@data& (0+255),w,b
 16068  004A2E  ECEF  F024         	call	_SPI_Exchange8bit
 16069  004A32  0012               	return		;funcret
 16070  004A34                     __end_of_oled_writeData:
 16071                           	opt stack 0
 16072                           tblptru	equ	0xFF8
 16073                           tblptrh	equ	0xFF7
 16074                           tblptrl	equ	0xFF6
 16075                           tablat	equ	0xFF5
 16076                           prodh	equ	0xFF4
 16077                           prodl	equ	0xFF3
 16078                           intcon	equ	0xFF2
 16079                           indf0	equ	0xFEF
 16080                           postinc0	equ	0xFEE
 16081                           fsr0h	equ	0xFEA
 16082                           fsr0l	equ	0xFE9
 16083                           wreg	equ	0xFE8
 16084                           indf1	equ	0xFE7
 16085                           postdec1	equ	0xFE5
 16086                           fsr1h	equ	0xFE2
 16087                           fsr1l	equ	0xFE1
 16088                           indf2	equ	0xFDF
 16089                           fsr2h	equ	0xFDA
 16090                           fsr2l	equ	0xFD9
 16091                           status	equ	0xFD8
 16092                           
 16093 ;; *************** function _Set_Page_Address *****************
 16094 ;; Defined at:
 16095 ;;		line 231 in file "../Includes/Drivers/SSD1306oLED.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;  address         1    wreg     unsigned char 
 16098 ;; Auto vars:     Size  Location     Type
 16099 ;;  address         1    2[BANK0 ] unsigned char 
 16100 ;; Return value:  Size  Location     Type
 16101 ;;                  1    wreg      void 
 16102 ;; Registers used:
 16103 ;;		wreg, status,2, status,0, cstack
 16104 ;; Tracked objects:
 16105 ;;		On entry : 0/0
 16106 ;;		On exit  : 0/0
 16107 ;;		Unchanged: 0/0
 16108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16109 ;;      Params:         0       0       0       0       0       0       0       0       0
 16110 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16111 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16112 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16113 ;;Total ram usage:        1 bytes
 16114 ;; Hardware stack levels used:    1
 16115 ;; Hardware stack levels required when called:   13
 16116 ;; This function calls:
 16117 ;;		_oled_writeCommand
 16118 ;; This function is called by:
 16119 ;;		_oled_putChar
 16120 ;; This function uses a non-reentrant model
 16121 ;;
 16122                           
 16123                           	psect	text57
 16124  00495C                     __ptext57:
 16125                           	opt stack 0
 16126  00495C                     _Set_Page_Address:
 16127                           	opt stack 13
 16128                           
 16129                           ;incstack = 0
 16130                           ;Set_Page_Address@address stored from wreg
 16131  00495C  0100               	movlb	0	; () banked
 16132  00495E  6FC0               	movwf	Set_Page_Address@address& (0+255),b
 16133                           
 16134                           ;SSD1306oLED.c: 233: address = 0xB0 | address;
 16135  004960  0100               	movlb	0	; () banked
 16136  004962  51C0               	movf	Set_Page_Address@address& (0+255),w,b
 16137  004964  09B0               	iorlw	176
 16138  004966  6FC0               	movwf	Set_Page_Address@address& (0+255),b
 16139                           
 16140                           ; BSR set to: 0
 16141                           ;SSD1306oLED.c: 234: LATBbits.LATB4 = 0;
 16142  004968  988A               	bcf	3978,4,c	;volatile
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;SSD1306oLED.c: 235: oled_writeCommand(address);
 16146  00496A  51C0               	movf	Set_Page_Address@address& (0+255),w,b
 16147  00496C  EC1A  F025         	call	_oled_writeCommand
 16148                           
 16149                           ;SSD1306oLED.c: 236: LATBbits.LATB4 = 1;
 16150  004970  888A               	bsf	3978,4,c	;volatile
 16151  004972  0012               	return		;funcret
 16152  004974                     __end_of_Set_Page_Address:
 16153                           	opt stack 0
 16154                           tblptru	equ	0xFF8
 16155                           tblptrh	equ	0xFF7
 16156                           tblptrl	equ	0xFF6
 16157                           tablat	equ	0xFF5
 16158                           prodh	equ	0xFF4
 16159                           prodl	equ	0xFF3
 16160                           intcon	equ	0xFF2
 16161                           indf0	equ	0xFEF
 16162                           postinc0	equ	0xFEE
 16163                           fsr0h	equ	0xFEA
 16164                           fsr0l	equ	0xFE9
 16165                           wreg	equ	0xFE8
 16166                           indf1	equ	0xFE7
 16167                           postdec1	equ	0xFE5
 16168                           fsr1h	equ	0xFE2
 16169                           fsr1l	equ	0xFE1
 16170                           indf2	equ	0xFDF
 16171                           fsr2h	equ	0xFDA
 16172                           fsr2l	equ	0xFD9
 16173                           status	equ	0xFD8
 16174                           
 16175 ;; *************** function _Set_Column_Address *****************
 16176 ;; Defined at:
 16177 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
 16178 ;; Parameters:    Size  Location     Type
 16179 ;;  address         1    wreg     unsigned char 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  address         1    2[BANK0 ] unsigned char 
 16182 ;; Return value:  Size  Location     Type
 16183 ;;                  1    wreg      void 
 16184 ;; Registers used:
 16185 ;;		wreg, status,2, status,0, cstack
 16186 ;; Tracked objects:
 16187 ;;		On entry : 0/0
 16188 ;;		On exit  : 0/0
 16189 ;;		Unchanged: 0/0
 16190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16191 ;;      Params:         0       0       0       0       0       0       0       0       0
 16192 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16194 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16195 ;;Total ram usage:        1 bytes
 16196 ;; Hardware stack levels used:    1
 16197 ;; Hardware stack levels required when called:   13
 16198 ;; This function calls:
 16199 ;;		_oled_writeCommand
 16200 ;; This function is called by:
 16201 ;;		_oled_putChar
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text58
 16206  0048D6                     __ptext58:
 16207                           	opt stack 0
 16208  0048D6                     _Set_Column_Address:
 16209                           	opt stack 13
 16210                           
 16211                           ;incstack = 0
 16212                           ;Set_Column_Address@address stored from wreg
 16213  0048D6  0100               	movlb	0	; () banked
 16214  0048D8  6FC0               	movwf	Set_Column_Address@address& (0+255),b
 16215                           
 16216                           ;SSD1306oLED.c: 242: LATBbits.LATB4 = 0;
 16217  0048DA  988A               	bcf	3978,4,c	;volatile
 16218                           
 16219                           ;SSD1306oLED.c: 243: oled_writeCommand(0x10 | (address >> 4) );
 16220  0048DC  0100               	movlb	0	; () banked
 16221  0048DE  39C0               	swapf	Set_Column_Address@address& (0+255),w,b
 16222  0048E0  0B0F               	andlw	15
 16223  0048E2  0910               	iorlw	16
 16224  0048E4  EC1A  F025         	call	_oled_writeCommand
 16225                           
 16226                           ;SSD1306oLED.c: 244: oled_writeCommand(0x0F & address);
 16227  0048E8  0100               	movlb	0	; () banked
 16228  0048EA  51C0               	movf	Set_Column_Address@address& (0+255),w,b
 16229  0048EC  0B0F               	andlw	15
 16230  0048EE  EC1A  F025         	call	_oled_writeCommand
 16231                           
 16232                           ;SSD1306oLED.c: 245: LATBbits.LATB4 = 1;
 16233  0048F2  888A               	bsf	3978,4,c	;volatile
 16234  0048F4  0012               	return		;funcret
 16235  0048F6                     __end_of_Set_Column_Address:
 16236                           	opt stack 0
 16237                           tblptru	equ	0xFF8
 16238                           tblptrh	equ	0xFF7
 16239                           tblptrl	equ	0xFF6
 16240                           tablat	equ	0xFF5
 16241                           prodh	equ	0xFF4
 16242                           prodl	equ	0xFF3
 16243                           intcon	equ	0xFF2
 16244                           indf0	equ	0xFEF
 16245                           postinc0	equ	0xFEE
 16246                           fsr0h	equ	0xFEA
 16247                           fsr0l	equ	0xFE9
 16248                           wreg	equ	0xFE8
 16249                           indf1	equ	0xFE7
 16250                           postdec1	equ	0xFE5
 16251                           fsr1h	equ	0xFE2
 16252                           fsr1l	equ	0xFE1
 16253                           indf2	equ	0xFDF
 16254                           fsr2h	equ	0xFDA
 16255                           fsr2l	equ	0xFD9
 16256                           status	equ	0xFD8
 16257                           
 16258 ;; *************** function _oled_writeCommand *****************
 16259 ;; Defined at:
 16260 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 16261 ;; Parameters:    Size  Location     Type
 16262 ;;  command         1    wreg     unsigned char 
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;  command         1    1[BANK0 ] unsigned char 
 16265 ;; Return value:  Size  Location     Type
 16266 ;;                  1    wreg      void 
 16267 ;; Registers used:
 16268 ;;		wreg, status,2, cstack
 16269 ;; Tracked objects:
 16270 ;;		On entry : 0/0
 16271 ;;		On exit  : 0/0
 16272 ;;		Unchanged: 0/0
 16273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16274 ;;      Params:         0       0       0       0       0       0       0       0       0
 16275 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16277 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16278 ;;Total ram usage:        1 bytes
 16279 ;; Hardware stack levels used:    1
 16280 ;; Hardware stack levels required when called:   12
 16281 ;; This function calls:
 16282 ;;		_SPI_Exchange8bit
 16283 ;; This function is called by:
 16284 ;;		_Set_Page_Address
 16285 ;;		_Set_Column_Address
 16286 ;;		_oled_devInit
 16287 ;;		_oled_setDisplay
 16288 ;;		_oled_displayOff
 16289 ;;		_oled_setContrastControlRegister
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           	psect	text59
 16294  004A34                     __ptext59:
 16295                           	opt stack 0
 16296  004A34                     _oled_writeCommand:
 16297                           	opt stack 13
 16298                           
 16299                           ;incstack = 0
 16300                           ;oled_writeCommand@command stored from wreg
 16301  004A34  0100               	movlb	0	; () banked
 16302  004A36  6FBF               	movwf	oled_writeCommand@command& (0+255),b
 16303                           
 16304                           ;SSD1306oLED.c: 432: LATBbits.LATB5 = 0;
 16305  004A38  9A8A               	bcf	3978,5,c	;volatile
 16306                           
 16307                           ;SSD1306oLED.c: 433: SPI_Exchange8bit(command);
 16308  004A3A  0100               	movlb	0	; () banked
 16309  004A3C  51BF               	movf	oled_writeCommand@command& (0+255),w,b
 16310  004A3E  ECEF  F024         	call	_SPI_Exchange8bit
 16311  004A42  0012               	return		;funcret
 16312  004A44                     __end_of_oled_writeCommand:
 16313                           	opt stack 0
 16314                           tblptru	equ	0xFF8
 16315                           tblptrh	equ	0xFF7
 16316                           tblptrl	equ	0xFF6
 16317                           tablat	equ	0xFF5
 16318                           prodh	equ	0xFF4
 16319                           prodl	equ	0xFF3
 16320                           intcon	equ	0xFF2
 16321                           indf0	equ	0xFEF
 16322                           postinc0	equ	0xFEE
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postdec1	equ	0xFE5
 16328                           fsr1h	equ	0xFE2
 16329                           fsr1l	equ	0xFE1
 16330                           indf2	equ	0xFDF
 16331                           fsr2h	equ	0xFDA
 16332                           fsr2l	equ	0xFD9
 16333                           status	equ	0xFD8
 16334                           
 16335 ;; *************** function _SPI_Exchange8bit *****************
 16336 ;; Defined at:
 16337 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;  data            1    wreg     unsigned char 
 16340 ;; Auto vars:     Size  Location     Type
 16341 ;;  data            1    0[BANK0 ] unsigned char 
 16342 ;; Return value:  Size  Location     Type
 16343 ;;                  1    wreg      unsigned char 
 16344 ;; Registers used:
 16345 ;;		wreg, status,2
 16346 ;; Tracked objects:
 16347 ;;		On entry : 0/0
 16348 ;;		On exit  : 0/0
 16349 ;;		Unchanged: 0/0
 16350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16351 ;;      Params:         0       0       0       0       0       0       0       0       0
 16352 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16354 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16355 ;;Total ram usage:        1 bytes
 16356 ;; Hardware stack levels used:    1
 16357 ;; Hardware stack levels required when called:   11
 16358 ;; This function calls:
 16359 ;;		Nothing
 16360 ;; This function is called by:
 16361 ;;		_oled_writeCommand
 16362 ;;		_oled_writeData
 16363 ;;		_SPI_Exchange8bitBuffer
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text60
 16368  0049DE                     __ptext60:
 16369                           	opt stack 0
 16370  0049DE                     _SPI_Exchange8bit:
 16371                           	opt stack 14
 16372                           
 16373                           ;incstack = 0
 16374                           ;SPI_Exchange8bit@data stored from wreg
 16375  0049DE  0100               	movlb	0	; () banked
 16376  0049E0  6FBE               	movwf	SPI_Exchange8bit@data& (0+255),b
 16377                           
 16378                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 16379  0049E2  9EC6               	bcf	4038,7,c	;volatile
 16380                           
 16381                           ;spi.c: 86: SSPBUF = data;
 16382  0049E4  C0BE  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 16383  0049E8                     
 16384                           ;spi.c: 89: {
 16385  0049E8  A0C7               	btfss	4039,0,c	;volatile
 16386  0049EA  D7FE               	goto	l1177
 16387                           
 16388                           ;spi.c: 90: }
 16389                           ;spi.c: 92: return (SSPBUF);
 16390  0049EC  50C9               	movf	4041,w,c	;volatile
 16391  0049EE  0012               	return		;funcret
 16392  0049F0                     __end_of_SPI_Exchange8bit:
 16393                           	opt stack 0
 16394                           tblptru	equ	0xFF8
 16395                           tblptrh	equ	0xFF7
 16396                           tblptrl	equ	0xFF6
 16397                           tablat	equ	0xFF5
 16398                           prodh	equ	0xFF4
 16399                           prodl	equ	0xFF3
 16400                           intcon	equ	0xFF2
 16401                           indf0	equ	0xFEF
 16402                           postinc0	equ	0xFEE
 16403                           fsr0h	equ	0xFEA
 16404                           fsr0l	equ	0xFE9
 16405                           wreg	equ	0xFE8
 16406                           indf1	equ	0xFE7
 16407                           postdec1	equ	0xFE5
 16408                           fsr1h	equ	0xFE2
 16409                           fsr1l	equ	0xFE1
 16410                           indf2	equ	0xFDF
 16411                           fsr2h	equ	0xFDA
 16412                           fsr2l	equ	0xFD9
 16413                           status	equ	0xFD8
 16414                           
 16415 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 16416 ;; Defined at:
 16417 ;;		line 148 in file "../Includes/Board/USBapp.c"
 16418 ;; Parameters:    Size  Location     Type
 16419 ;;		None
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;		None
 16422 ;; Return value:  Size  Location     Type
 16423 ;;                  1    wreg      void 
 16424 ;; Registers used:
 16425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16426 ;; Tracked objects:
 16427 ;;		On entry : 0/0
 16428 ;;		On exit  : 0/0
 16429 ;;		Unchanged: 0/0
 16430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16431 ;;      Params:         0       0       0       0       0       0       0       0       0
 16432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16433 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16434 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16435 ;;Total ram usage:        1 bytes
 16436 ;; Hardware stack levels used:    1
 16437 ;; Hardware stack levels required when called:   13
 16438 ;; This function calls:
 16439 ;;		_CDCTxService
 16440 ;;		_EUSART_Read
 16441 ;;		_EUSART_Write
 16442 ;;		_MOTEapp_setResponseReady
 16443 ;;		_USBapp_getrxByteFlag
 16444 ;;		_getsUSBUSART
 16445 ;;		_putUSBUSART
 16446 ;; This function is called by:
 16447 ;;		_USBapp_Handler
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           	psect	text61
 16452  002B46                     __ptext61:
 16453                           	opt stack 0
 16454  002B46                     _USBapp_DeviceCdcEmulatorHandler:
 16455                           	opt stack 16
 16456                           
 16457                           ;USBapp.c: 151: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 16458                           
 16459                           ;incstack = 0
 16460  002B46  0E1F               	movlw	31
 16461  002B48  0100               	movlb	0	; () banked
 16462  002B4A  65A8               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 16463  002B4C  0012               	return	
 16464                           
 16465                           ; BSR set to: 0
 16466  002B4E  B260               	btfsc	3936,1,c	;volatile
 16467  002B50  0012               	return	
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;USBapp.c: 154: if (RS232_Out_Data_Rdy == 0)
 16471                           
 16472                           ; BSR set to: 0
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;USBapp.c: 152: return;
 16476  002B52  51A3               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 16477  002B54  A4D8               	btfss	status,2,c
 16478  002B56  D011               	goto	l802
 16479                           
 16480                           ; BSR set to: 0
 16481                           ;USBapp.c: 155: {
 16482                           ;USBapp.c: 156: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 16483  002B58  0E20               	movlw	low _USB_Buffer
 16484  002B5A  6FC5               	movwf	getsUSBUSART@buffer& (0+255),b
 16485  002B5C  0E01               	movlw	high _USB_Buffer
 16486  002B5E  6FC6               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 16487  002B60  0E40               	movlw	64
 16488  002B62  6FC7               	movwf	getsUSBUSART@len& (0+255),b
 16489  002B64  ECF1  F019         	call	_getsUSBUSART	;wreg free
 16490  002B68  0100               	movlb	0	; () banked
 16491  002B6A  6FA2               	movwf	_LastRS232Out& (0+255),b
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;USBapp.c: 157: if(LastRS232Out > 0)
 16495  002B6C  51A2               	movf	_LastRS232Out& (0+255),w,b
 16496  002B6E  B4D8               	btfsc	status,2,c
 16497  002B70  D004               	goto	l802
 16498                           
 16499                           ; BSR set to: 0
 16500                           ;USBapp.c: 158: {
 16501                           ;USBapp.c: 159: RS232_Out_Data_Rdy = 1;
 16502  002B72  0E01               	movlw	1
 16503  002B74  6FA3               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 16504                           
 16505                           ;USBapp.c: 160: RS232cp = 0;
 16506  002B76  0E00               	movlw	0
 16507  002B78  6FA1               	movwf	_RS232cp& (0+255),b
 16508  002B7A                     l802:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;USBapp.c: 161: }
 16512                           ;USBapp.c: 162: }
 16513                           ;USBapp.c: 165: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 16514                           
 16515                           ; BSR set to: 0
 16516  002B7A  51A3               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 16517  002B7C  A4D8               	btfss	status,2,c
 16518                           
 16519                           ; BSR set to: 0
 16520  002B7E  A2AC               	btfss	4012,1,c	;volatile
 16521  002B80  D013               	goto	l804
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;USBapp.c: 166: {
 16525                           ;USBapp.c: 168: EUSART_Write(USB_Buffer[RS232cp]);
 16526  002B82  51A1               	movf	_RS232cp& (0+255),w,b
 16527  002B84  0D01               	mullw	1
 16528  002B86  0E20               	movlw	low _USB_Buffer
 16529  002B88  24F3               	addwf	prodl,w,c
 16530  002B8A  6ED9               	movwf	fsr2l,c
 16531  002B8C  0E01               	movlw	high _USB_Buffer
 16532  002B8E  20F4               	addwfc	prodh,w,c
 16533  002B90  6EDA               	movwf	fsr2h,c
 16534  002B92  50DF               	movf	indf2,w,c
 16535  002B94  EC2B  F022         	call	_EUSART_Write
 16536                           
 16537                           ;USBapp.c: 169: ++RS232cp;
 16538  002B98  0100               	movlb	0	; () banked
 16539  002B9A  2BA1               	incf	_RS232cp& (0+255),f,b
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;USBapp.c: 170: if (RS232cp == LastRS232Out)
 16543  002B9C  51A2               	movf	_LastRS232Out& (0+255),w,b
 16544  002B9E  19A1               	xorwf	_RS232cp& (0+255),w,b
 16545  002BA0  A4D8               	btfss	status,2,c
 16546  002BA2  D002               	goto	l804
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;USBapp.c: 171: RS232_Out_Data_Rdy = 0;
 16550  002BA4  0E00               	movlw	0
 16551  002BA6  6FA3               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 16552  002BA8                     l804:
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;USBapp.c: 172: }
 16556                           ;USBapp.c: 175: if ((eusartRxCount))
 16557                           
 16558                           ; BSR set to: 0
 16559  002BA8  51B0               	movf	_eusartRxCount& (0+255),w,b	;volatile
 16560  002BAA  B4D8               	btfsc	status,2,c
 16561  002BAC  D025               	goto	l806
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;USBapp.c: 176: {
 16565                           ;USBapp.c: 177: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 16566  002BAE  EC53  F025         	call	_USBapp_getrxByteFlag	;wreg free
 16567  002BB2  0900               	iorlw	0
 16568  002BB4  B4D8               	btfsc	status,2,c
 16569  002BB6  D020               	goto	l806
 16570  002BB8  0E3F               	movlw	63
 16571  002BBA  0100               	movlb	0	; () banked
 16572  002BBC  61A4               	cpfslt	_NextUSBOut& (0+255),b
 16573  002BBE  D01C               	goto	l806
 16574                           
 16575                           ; BSR set to: 0
 16576                           ;USBapp.c: 178: {
 16577                           ;USBapp.c: 179: __nop();
 16578  002BC0  F000               	nop	
 16579                           
 16580                           ;USBapp.c: 180: USB_Buffer[NextUSBOut] = EUSART_Read();
 16581  002BC2  ECA4  F022         	call	_EUSART_Read	;wreg free
 16582  002BC6  0100               	movlb	0	; () banked
 16583  002BC8  6FCB               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 16584  002BCA  51A4               	movf	_NextUSBOut& (0+255),w,b
 16585  002BCC  0D01               	mullw	1
 16586  002BCE  0E20               	movlw	low _USB_Buffer
 16587  002BD0  24F3               	addwf	prodl,w,c
 16588  002BD2  6ED9               	movwf	fsr2l,c
 16589  002BD4  0E01               	movlw	high _USB_Buffer
 16590  002BD6  20F4               	addwfc	prodh,w,c
 16591  002BD8  6EDA               	movwf	fsr2h,c
 16592  002BDA  C0CB  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;USBapp.c: 181: ++NextUSBOut;
 16596  002BDE  2BA4               	incf	_NextUSBOut& (0+255),f,b
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;USBapp.c: 182: USB_Buffer[NextUSBOut] = 0;
 16600  002BE0  51A4               	movf	_NextUSBOut& (0+255),w,b
 16601  002BE2  0D01               	mullw	1
 16602  002BE4  0E20               	movlw	low _USB_Buffer
 16603  002BE6  24F3               	addwf	prodl,w,c
 16604  002BE8  6ED9               	movwf	fsr2l,c
 16605  002BEA  0E01               	movlw	high _USB_Buffer
 16606  002BEC  20F4               	addwfc	prodh,w,c
 16607  002BEE  6EDA               	movwf	fsr2h,c
 16608  002BF0  0E00               	movlw	0
 16609  002BF2  6EDF               	movwf	indf2,c
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;USBapp.c: 183: rxByteFlag = 0;
 16613  002BF4  0E00               	movlw	0
 16614  002BF6  6FA5               	movwf	_rxByteFlag& (0+255),b	;volatile
 16615  002BF8                     l806:
 16616                           
 16617                           ;USBapp.c: 184: }
 16618                           ;USBapp.c: 185: }
 16619                           ;USBapp.c: 189: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 16620                           
 16621                           ; BSR set to: 0
 16622                           
 16623                           ; BSR set to: 0
 16624  002BF8  0100               	movlb	0	; () banked
 16625  002BFA  51A7               	movf	_cdc_trf_state& (0+255),w,b
 16626  002BFC  A4D8               	btfss	status,2,c
 16627  002BFE  D010               	goto	l807
 16628                           
 16629                           ; BSR set to: 0
 16630  002C00  51A4               	movf	_NextUSBOut& (0+255),w,b
 16631  002C02  B4D8               	btfsc	status,2,c
 16632  002C04  D00D               	goto	l807
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;USBapp.c: 190: {
 16636                           ;USBapp.c: 191: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 16637  002C06  0E20               	movlw	low _USB_Buffer
 16638  002C08  6FBE               	movwf	putUSBUSART@data& (0+255),b
 16639  002C0A  0E01               	movlw	high _USB_Buffer
 16640  002C0C  6FBF               	movwf	(putUSBUSART@data+1)& (0+255),b
 16641  002C0E  C0A4  F0C0         	movff	_NextUSBOut,putUSBUSART@length
 16642  002C12  EC49  F024         	call	_putUSBUSART	;wreg free
 16643                           
 16644                           ;USBapp.c: 192: MOTEapp_setResponseReady();
 16645  002C16  EC56  F025         	call	_MOTEapp_setResponseReady	;wreg free
 16646                           
 16647                           ;USBapp.c: 193: NextUSBOut = 0;
 16648  002C1A  0E00               	movlw	0
 16649  002C1C  0100               	movlb	0	; () banked
 16650  002C1E  6FA4               	movwf	_NextUSBOut& (0+255),b
 16651  002C20                     l807:
 16652                           
 16653                           ; BSR set to: 0
 16654                           ;USBapp.c: 194: }
 16655                           ;USBapp.c: 196: CDCTxService();
 16656                           
 16657                           ; BSR set to: 0
 16658  002C20  EC39  F00E         	call	_CDCTxService	;wreg free
 16659  002C24  0012               	return		;funcret
 16660  002C26                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 16661                           	opt stack 0
 16662                           tblptru	equ	0xFF8
 16663                           tblptrh	equ	0xFF7
 16664                           tblptrl	equ	0xFF6
 16665                           tablat	equ	0xFF5
 16666                           prodh	equ	0xFF4
 16667                           prodl	equ	0xFF3
 16668                           intcon	equ	0xFF2
 16669                           indf0	equ	0xFEF
 16670                           postinc0	equ	0xFEE
 16671                           fsr0h	equ	0xFEA
 16672                           fsr0l	equ	0xFE9
 16673                           wreg	equ	0xFE8
 16674                           indf1	equ	0xFE7
 16675                           postdec1	equ	0xFE5
 16676                           fsr1h	equ	0xFE2
 16677                           fsr1l	equ	0xFE1
 16678                           indf2	equ	0xFDF
 16679                           fsr2h	equ	0xFDA
 16680                           fsr2l	equ	0xFD9
 16681                           status	equ	0xFD8
 16682                           
 16683 ;; *************** function _putUSBUSART *****************
 16684 ;; Defined at:
 16685 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 16686 ;; Parameters:    Size  Location     Type
 16687 ;;  data            2    0[BANK0 ] PTR unsigned char 
 16688 ;;		 -> USB_Buffer(64), 
 16689 ;;  length          1    2[BANK0 ] unsigned char 
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;		None
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      void 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2, status,0
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16701 ;;      Params:         0       3       0       0       0       0       0       0       0
 16702 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16704 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16705 ;;Total ram usage:        3 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:   11
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		_USBapp_DeviceCdcEmulatorHandler
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text62
 16716  004892                     __ptext62:
 16717                           	opt stack 0
 16718  004892                     _putUSBUSART:
 16719                           	opt stack 17
 16720                           
 16721                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 16722                           
 16723                           ;incstack = 0
 16724  004892  94A3               	bcf	4003,2,c	;volatile
 16725                           
 16726                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 16727  004894  0100               	movlb	0	; () banked
 16728  004896  51A7               	movf	_cdc_trf_state& (0+255),w,b
 16729  004898  A4D8               	btfss	status,2,c
 16730  00489A  D00A               	goto	l1869
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;usb_device_cdc.c: 530: {
 16734                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 16735  00489C  C0BE  F081         	movff	putUSBUSART@data,_pCDCSrc
 16736  0048A0  C0BF  F082         	movff	putUSBUSART@data+1,_pCDCSrc+1
 16737                           
 16738                           ; BSR set to: 0
 16739  0048A4  C0C0  F099         	movff	putUSBUSART@length,_cdc_tx_len
 16740                           
 16741                           ; BSR set to: 0
 16742  0048A8  0E01               	movlw	1
 16743  0048AA  6F98               	movwf	_cdc_mem_type& (0+255),b
 16744                           
 16745                           ; BSR set to: 0
 16746  0048AC  0E01               	movlw	1
 16747  0048AE  6FA7               	movwf	_cdc_trf_state& (0+255),b
 16748  0048B0                     l1869:
 16749                           
 16750                           ; BSR set to: 0
 16751                           ;usb_device_cdc.c: 532: }
 16752                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 16753                           
 16754                           ; BSR set to: 0
 16755  0048B0  84A3               	bsf	4003,2,c	;volatile
 16756                           
 16757                           ; BSR set to: 0
 16758  0048B2  0012               	return		;funcret
 16759  0048B4                     __end_of_putUSBUSART:
 16760                           	opt stack 0
 16761                           tblptru	equ	0xFF8
 16762                           tblptrh	equ	0xFF7
 16763                           tblptrl	equ	0xFF6
 16764                           tablat	equ	0xFF5
 16765                           prodh	equ	0xFF4
 16766                           prodl	equ	0xFF3
 16767                           intcon	equ	0xFF2
 16768                           indf0	equ	0xFEF
 16769                           postinc0	equ	0xFEE
 16770                           fsr0h	equ	0xFEA
 16771                           fsr0l	equ	0xFE9
 16772                           wreg	equ	0xFE8
 16773                           indf1	equ	0xFE7
 16774                           postdec1	equ	0xFE5
 16775                           fsr1h	equ	0xFE2
 16776                           fsr1l	equ	0xFE1
 16777                           indf2	equ	0xFDF
 16778                           fsr2h	equ	0xFDA
 16779                           fsr2l	equ	0xFD9
 16780                           status	equ	0xFD8
 16781                           
 16782 ;; *************** function _getsUSBUSART *****************
 16783 ;; Defined at:
 16784 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 16787 ;;		 -> USB_Buffer(64), 
 16788 ;;  len             1    9[BANK0 ] unsigned char 
 16789 ;; Auto vars:     Size  Location     Type
 16790 ;;		None
 16791 ;; Return value:  Size  Location     Type
 16792 ;;                  1    wreg      unsigned char 
 16793 ;; Registers used:
 16794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16795 ;; Tracked objects:
 16796 ;;		On entry : 0/0
 16797 ;;		On exit  : 0/0
 16798 ;;		Unchanged: 0/0
 16799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16800 ;;      Params:         0       3       0       0       0       0       0       0       0
 16801 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16802 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16803 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16804 ;;Total ram usage:        6 bytes
 16805 ;; Hardware stack levels used:    1
 16806 ;; Hardware stack levels required when called:   12
 16807 ;; This function calls:
 16808 ;;		_USBTransferOnePacket
 16809 ;; This function is called by:
 16810 ;;		_USBapp_DeviceCdcEmulatorHandler
 16811 ;; This function uses a non-reentrant model
 16812 ;;
 16813                           
 16814                           	psect	text63
 16815  0033E2                     __ptext63:
 16816                           	opt stack 0
 16817  0033E2                     _getsUSBUSART:
 16818                           	opt stack 16
 16819                           
 16820                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 16821                           
 16822                           ; BSR set to: 0
 16823                           ;incstack = 0
 16824  0033E2  0E00               	movlw	0
 16825  0033E4  0100               	movlb	0	; () banked
 16826  0033E6  6F9A               	movwf	_cdc_rx_len& (0+255),b
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 16830  0033E8  518C               	movf	_CDCDataOutHandle& (0+255),w,b
 16831  0033EA  118D               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 16832  0033EC  B4D8               	btfsc	status,2,c
 16833  0033EE  D00F               	goto	l1859
 16834                           
 16835                           ; BSR set to: 0
 16836  0033F0  C08C  FFD9         	movff	_CDCDataOutHandle,fsr2l
 16837  0033F4  C08D  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 16838  0033F8  AEDF               	btfss	indf2,7,c
 16839  0033FA  D003               	goto	u5800
 16840  0033FC  6BC8               	clrf	??_getsUSBUSART& (0+255),b
 16841  0033FE  2BC8               	incf	??_getsUSBUSART& (0+255),f,b
 16842  003400  D002               	goto	u5808
 16843  003402                     u5800:
 16844  003402  0100               	movlb	0	; () banked
 16845  003404  6BC8               	clrf	??_getsUSBUSART& (0+255),b
 16846  003406                     u5808:
 16847  003406  51C8               	movf	??_getsUSBUSART& (0+255),w,b
 16848  003408  6FC9               	movwf	_getsUSBUSART$5662& (0+255),b
 16849  00340A  6BCA               	clrf	(_getsUSBUSART$5662+1)& (0+255),b
 16850  00340C  D004               	goto	l1861
 16851  00340E                     l1859:
 16852                           
 16853                           ; BSR set to: 0
 16854                           
 16855                           ; BSR set to: 0
 16856  00340E  0E00               	movlw	0
 16857  003410  6FCA               	movwf	(_getsUSBUSART$5662+1)& (0+255),b
 16858  003412  0E00               	movlw	0
 16859  003414  6FC9               	movwf	_getsUSBUSART$5662& (0+255),b
 16860  003416                     l1861:
 16861                           
 16862                           ; BSR set to: 0
 16863                           
 16864                           ; BSR set to: 0
 16865  003416  51C9               	movf	_getsUSBUSART$5662& (0+255),w,b
 16866  003418  11CA               	iorwf	(_getsUSBUSART$5662+1)& (0+255),w,b
 16867  00341A  A4D8               	btfss	status,2,c
 16868  00341C  D03B               	goto	l1857
 16869                           
 16870                           ; BSR set to: 0
 16871                           ;usb_device_cdc.c: 437: {
 16872                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 16873  00341E  EE20 F001          	lfsr	2,1
 16874  003422  518C               	movf	_CDCDataOutHandle& (0+255),w,b
 16875  003424  26D9               	addwf	fsr2l,f,c
 16876  003426  518D               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 16877  003428  22DA               	addwfc	fsr2h,f,c
 16878  00342A  51C7               	movf	getsUSBUSART@len& (0+255),w,b
 16879  00342C  5CDE               	subwf	postinc2,w,c
 16880  00342E  B0D8               	btfsc	status,0,c
 16881  003430  D008               	goto	l1862
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 16885  003432  EE20 F001          	lfsr	2,1
 16886  003436  518C               	movf	_CDCDataOutHandle& (0+255),w,b
 16887  003438  26D9               	addwf	fsr2l,f,c
 16888  00343A  518D               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 16889  00343C  22DA               	addwfc	fsr2h,f,c
 16890  00343E  50DF               	movf	indf2,w,c
 16891  003440  6FC7               	movwf	getsUSBUSART@len& (0+255),b
 16892  003442                     l1862:
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 16896                           
 16897                           ; BSR set to: 0
 16898  003442  0E00               	movlw	0
 16899  003444  6F9A               	movwf	_cdc_rx_len& (0+255),b
 16900  003446  D013               	goto	l1863
 16901  003448                     
 16902                           ; BSR set to: 0
 16903                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 16904                           
 16905                           ; BSR set to: 0
 16906  003448  519A               	movf	_cdc_rx_len& (0+255),w,b
 16907  00344A  0D01               	mullw	1
 16908  00344C  0E40               	movlw	64
 16909  00344E  24F3               	addwf	prodl,w,c
 16910  003450  6ED9               	movwf	fsr2l,c
 16911  003452  0E05               	movlw	5
 16912  003454  20F4               	addwfc	prodh,w,c
 16913  003456  6EDA               	movwf	fsr2h,c
 16914  003458  519A               	movf	_cdc_rx_len& (0+255),w,b
 16915  00345A  0D01               	mullw	1
 16916  00345C  50F3               	movf	prodl,w,c
 16917  00345E  25C5               	addwf	getsUSBUSART@buffer& (0+255),w,b
 16918  003460  6EE1               	movwf	fsr1l,c
 16919  003462  50F4               	movf	prodh,w,c
 16920  003464  21C6               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 16921  003466  6EE2               	movwf	fsr1h,c
 16922  003468  CFDF FFE7          	movff	indf2,indf1
 16923                           
 16924                           ; BSR set to: 0
 16925  00346C  2B9A               	incf	_cdc_rx_len& (0+255),f,b
 16926  00346E                     l1863:
 16927                           
 16928                           ; BSR set to: 0
 16929                           
 16930                           ; BSR set to: 0
 16931  00346E  51C7               	movf	getsUSBUSART@len& (0+255),w,b
 16932  003470  5D9A               	subwf	_cdc_rx_len& (0+255),w,b
 16933  003472  A0D8               	btfss	status,0,c
 16934  003474  D7E9               	goto	l1864
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 16938                           
 16939                           ; BSR set to: 0
 16940  003476  0E00               	movlw	0
 16941  003478  6FBE               	movwf	USBTransferOnePacket@dir& (0+255),b
 16942  00347A  0E40               	movlw	64
 16943  00347C  6FBF               	movwf	USBTransferOnePacket@data& (0+255),b
 16944  00347E  0E05               	movlw	5
 16945  003480  6FC0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16946  003482  0E40               	movlw	64
 16947  003484  6FC1               	movwf	USBTransferOnePacket@len& (0+255),b
 16948  003486  0E02               	movlw	2
 16949  003488  ECD9  F018         	call	_USBTransferOnePacket
 16950  00348C  C0BE  F08C         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 16951  003490  C0BF  F08D         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 16952  003494                     l1857:
 16953                           
 16954                           ;usb_device_cdc.c: 457: }
 16955                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 16956  003494  0100               	movlb	0	; () banked
 16957  003496  519A               	movf	_cdc_rx_len& (0+255),w,b
 16958  003498  0012               	return	
 16959  00349A                     __end_of_getsUSBUSART:
 16960                           	opt stack 0
 16961                           tblptru	equ	0xFF8
 16962                           tblptrh	equ	0xFF7
 16963                           tblptrl	equ	0xFF6
 16964                           tablat	equ	0xFF5
 16965                           prodh	equ	0xFF4
 16966                           prodl	equ	0xFF3
 16967                           intcon	equ	0xFF2
 16968                           indf0	equ	0xFEF
 16969                           postinc0	equ	0xFEE
 16970                           fsr0h	equ	0xFEA
 16971                           fsr0l	equ	0xFE9
 16972                           wreg	equ	0xFE8
 16973                           indf1	equ	0xFE7
 16974                           postdec1	equ	0xFE5
 16975                           fsr1h	equ	0xFE2
 16976                           fsr1l	equ	0xFE1
 16977                           indf2	equ	0xFDF
 16978                           postinc2	equ	0xFDE
 16979                           fsr2h	equ	0xFDA
 16980                           fsr2l	equ	0xFD9
 16981                           status	equ	0xFD8
 16982                           
 16983 ;; *************** function _USBapp_getrxByteFlag *****************
 16984 ;; Defined at:
 16985 ;;		line 254 in file "../Includes/Board/USBapp.c"
 16986 ;; Parameters:    Size  Location     Type
 16987 ;;		None
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;		None
 16990 ;; Return value:  Size  Location     Type
 16991 ;;                  1    wreg      unsigned char 
 16992 ;; Registers used:
 16993 ;;		wreg, status,2
 16994 ;; Tracked objects:
 16995 ;;		On entry : 0/0
 16996 ;;		On exit  : 0/0
 16997 ;;		Unchanged: 0/0
 16998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16999 ;;      Params:         0       0       0       0       0       0       0       0       0
 17000 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17002 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17003 ;;Total ram usage:        0 bytes
 17004 ;; Hardware stack levels used:    1
 17005 ;; Hardware stack levels required when called:   11
 17006 ;; This function calls:
 17007 ;;		Nothing
 17008 ;; This function is called by:
 17009 ;;		_USBapp_DeviceCdcEmulatorHandler
 17010 ;; This function uses a non-reentrant model
 17011 ;;
 17012                           
 17013                           	psect	text64
 17014  004AA6                     __ptext64:
 17015                           	opt stack 0
 17016  004AA6                     _USBapp_getrxByteFlag:
 17017                           	opt stack 17
 17018                           
 17019                           ;USBapp.c: 256: return rxByteFlag;
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;incstack = 0
 17023  004AA6  0100               	movlb	0	; () banked
 17024  004AA8  51A5               	movf	_rxByteFlag& (0+255),w,b	;volatile
 17025  004AAA  0012               	return	
 17026  004AAC                     __end_of_USBapp_getrxByteFlag:
 17027                           	opt stack 0
 17028                           tblptru	equ	0xFF8
 17029                           tblptrh	equ	0xFF7
 17030                           tblptrl	equ	0xFF6
 17031                           tablat	equ	0xFF5
 17032                           prodh	equ	0xFF4
 17033                           prodl	equ	0xFF3
 17034                           intcon	equ	0xFF2
 17035                           indf0	equ	0xFEF
 17036                           postinc0	equ	0xFEE
 17037                           fsr0h	equ	0xFEA
 17038                           fsr0l	equ	0xFE9
 17039                           wreg	equ	0xFE8
 17040                           indf1	equ	0xFE7
 17041                           postdec1	equ	0xFE5
 17042                           fsr1h	equ	0xFE2
 17043                           fsr1l	equ	0xFE1
 17044                           indf2	equ	0xFDF
 17045                           postinc2	equ	0xFDE
 17046                           fsr2h	equ	0xFDA
 17047                           fsr2l	equ	0xFD9
 17048                           status	equ	0xFD8
 17049                           
 17050 ;; *************** function _MOTEapp_setResponseReady *****************
 17051 ;; Defined at:
 17052 ;;		line 1083 in file "../Includes/Board/MOTEapp.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;		None
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;		None
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  1    wreg      void 
 17059 ;; Registers used:
 17060 ;;		wreg, status,2
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17066 ;;      Params:         0       0       0       0       0       0       0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17069 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17070 ;;Total ram usage:        0 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; Hardware stack levels required when called:   11
 17073 ;; This function calls:
 17074 ;;		Nothing
 17075 ;; This function is called by:
 17076 ;;		_USBapp_DeviceCdcEmulatorHandler
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text65
 17081  004AAC                     __ptext65:
 17082                           	opt stack 0
 17083  004AAC                     _MOTEapp_setResponseReady:
 17084                           	opt stack 17
 17085                           
 17086                           ;MOTEapp.c: 1085: responseReady = 1;
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;incstack = 0
 17090  004AAC  0E01               	movlw	1
 17091  004AAE  6E52               	movwf	_responseReady,c
 17092  004AB0  0012               	return		;funcret
 17093  004AB2                     __end_of_MOTEapp_setResponseReady:
 17094                           	opt stack 0
 17095                           tblptru	equ	0xFF8
 17096                           tblptrh	equ	0xFF7
 17097                           tblptrl	equ	0xFF6
 17098                           tablat	equ	0xFF5
 17099                           prodh	equ	0xFF4
 17100                           prodl	equ	0xFF3
 17101                           intcon	equ	0xFF2
 17102                           indf0	equ	0xFEF
 17103                           postinc0	equ	0xFEE
 17104                           fsr0h	equ	0xFEA
 17105                           fsr0l	equ	0xFE9
 17106                           wreg	equ	0xFE8
 17107                           indf1	equ	0xFE7
 17108                           postdec1	equ	0xFE5
 17109                           fsr1h	equ	0xFE2
 17110                           fsr1l	equ	0xFE1
 17111                           indf2	equ	0xFDF
 17112                           postinc2	equ	0xFDE
 17113                           fsr2h	equ	0xFDA
 17114                           fsr2l	equ	0xFD9
 17115                           status	equ	0xFD8
 17116                           
 17117 ;; *************** function _EUSART_Write *****************
 17118 ;; Defined at:
 17119 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;  txData          1    wreg     unsigned char 
 17122 ;; Auto vars:     Size  Location     Type
 17123 ;;  txData          1    0[BANK0 ] unsigned char 
 17124 ;; Return value:  Size  Location     Type
 17125 ;;                  1    wreg      void 
 17126 ;; Registers used:
 17127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17128 ;; Tracked objects:
 17129 ;;		On entry : 0/0
 17130 ;;		On exit  : 0/0
 17131 ;;		Unchanged: 0/0
 17132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17133 ;;      Params:         0       0       0       0       0       0       0       0       0
 17134 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17135 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17136 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17137 ;;Total ram usage:        1 bytes
 17138 ;; Hardware stack levels used:    1
 17139 ;; Hardware stack levels required when called:   11
 17140 ;; This function calls:
 17141 ;;		Nothing
 17142 ;; This function is called by:
 17143 ;;		_EndLine
 17144 ;;		_sendCommand
 17145 ;;		_sendDataCommand
 17146 ;;		_USBapp_DeviceCdcEmulatorHandler
 17147 ;; This function uses a non-reentrant model
 17148 ;;
 17149                           
 17150                           	psect	text66
 17151  004456                     __ptext66:
 17152                           	opt stack 0
 17153  004456                     _EUSART_Write:
 17154                           	opt stack 14
 17155                           
 17156                           ;incstack = 0
 17157                           ;EUSART_Write@txData stored from wreg
 17158  004456  0100               	movlb	0	; () banked
 17159  004458  6FBE               	movwf	EUSART_Write@txData& (0+255),b
 17160  00445A                     
 17161                           ;eusart.c: 142: {
 17162                           
 17163                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 17164  00445A  0100               	movlb	0	; () banked
 17165  00445C  519D               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 17166  00445E  B4D8               	btfsc	status,2,c
 17167  004460  D7FC               	goto	l6489
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;eusart.c: 143: }
 17171                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 17172  004462  B89D               	btfsc	3997,4,c	;volatile
 17173  004464  D003               	goto	l1025
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;eusart.c: 146: {
 17177                           ;eusart.c: 147: TXREG = txData;
 17178  004466  C0BE  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 17179                           
 17180                           ;eusart.c: 148: }
 17181  00446A  D012               	goto	l1026
 17182  00446C                     l1025:
 17183                           
 17184                           ; BSR set to: 0
 17185                           ;eusart.c: 149: else
 17186                           ;eusart.c: 150: {
 17187                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 17188  00446C  989D               	bcf	3997,4,c	;volatile
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 17192  00446E  519F               	movf	_eusartTxHead& (0+255),w,b
 17193  004470  0D01               	mullw	1
 17194  004472  0E40               	movlw	low _eusartTxBuffer
 17195  004474  24F3               	addwf	prodl,w,c
 17196  004476  6ED9               	movwf	fsr2l,c
 17197  004478  0E02               	movlw	high _eusartTxBuffer
 17198  00447A  20F4               	addwfc	prodh,w,c
 17199  00447C  6EDA               	movwf	fsr2h,c
 17200  00447E  C0BE  FFDF         	movff	EUSART_Write@txData,indf2
 17201                           
 17202                           ; BSR set to: 0
 17203  004482  2B9F               	incf	_eusartTxHead& (0+255),f,b
 17204                           
 17205                           ; BSR set to: 0
 17206                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 17207  004484  0E3F               	movlw	63
 17208  004486  659F               	cpfsgt	_eusartTxHead& (0+255),b
 17209  004488  D002               	goto	l1027
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;eusart.c: 154: {
 17213                           ;eusart.c: 155: eusartTxHead = 0;
 17214  00448A  0E00               	movlw	0
 17215  00448C  6F9F               	movwf	_eusartTxHead& (0+255),b
 17216  00448E                     l1027:
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;eusart.c: 156: }
 17220                           ;eusart.c: 157: eusartTxBufferRemaining--;
 17221                           
 17222                           ; BSR set to: 0
 17223  00448E  079D               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 17224  004490                     l1026:
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;eusart.c: 158: }
 17228                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 17229                           
 17230                           ; BSR set to: 0
 17231  004490  889D               	bsf	3997,4,c	;volatile
 17232                           
 17233                           ; BSR set to: 0
 17234  004492  0012               	return		;funcret
 17235  004494                     __end_of_EUSART_Write:
 17236                           	opt stack 0
 17237                           tblptru	equ	0xFF8
 17238                           tblptrh	equ	0xFF7
 17239                           tblptrl	equ	0xFF6
 17240                           tablat	equ	0xFF5
 17241                           prodh	equ	0xFF4
 17242                           prodl	equ	0xFF3
 17243                           intcon	equ	0xFF2
 17244                           indf0	equ	0xFEF
 17245                           postinc0	equ	0xFEE
 17246                           fsr0h	equ	0xFEA
 17247                           fsr0l	equ	0xFE9
 17248                           wreg	equ	0xFE8
 17249                           indf1	equ	0xFE7
 17250                           postdec1	equ	0xFE5
 17251                           fsr1h	equ	0xFE2
 17252                           fsr1l	equ	0xFE1
 17253                           indf2	equ	0xFDF
 17254                           postinc2	equ	0xFDE
 17255                           fsr2h	equ	0xFDA
 17256                           fsr2l	equ	0xFD9
 17257                           status	equ	0xFD8
 17258                           
 17259 ;; *************** function _EUSART_Read *****************
 17260 ;; Defined at:
 17261 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;		None
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;  readValue       1    0[BANK0 ] unsigned char 
 17266 ;; Return value:  Size  Location     Type
 17267 ;;                  1    wreg      unsigned char 
 17268 ;; Registers used:
 17269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17270 ;; Tracked objects:
 17271 ;;		On entry : 0/0
 17272 ;;		On exit  : 0/0
 17273 ;;		Unchanged: 0/0
 17274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17275 ;;      Params:         0       0       0       0       0       0       0       0       0
 17276 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17278 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17279 ;;Total ram usage:        1 bytes
 17280 ;; Hardware stack levels used:    1
 17281 ;; Hardware stack levels required when called:   11
 17282 ;; This function calls:
 17283 ;;		Nothing
 17284 ;; This function is called by:
 17285 ;;		_MOTEapp_getModuleResponse
 17286 ;;		_USBapp_DeviceCdcEmulatorHandler
 17287 ;; This function uses a non-reentrant model
 17288 ;;
 17289                           
 17290                           	psect	text67
 17291  004548                     __ptext67:
 17292                           	opt stack 0
 17293  004548                     _EUSART_Read:
 17294                           	opt stack 14
 17295                           
 17296                           ;eusart.c: 119: uint8_t readValue = 0;
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;incstack = 0
 17300  004548  0E00               	movlw	0
 17301  00454A  0100               	movlb	0	; () banked
 17302  00454C  6FBE               	movwf	EUSART_Read@readValue& (0+255),b
 17303                           
 17304                           ;eusart.c: 121: while(0 == eusartRxCount)
 17305  00454E  D001               	goto	l1015
 17306  004550                     l1016:
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;eusart.c: 122: {
 17310                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 17311  004550  8E89               	bsf	3977,7,c	;volatile
 17312  004552                     l1015:
 17313                           
 17314                           ; BSR set to: 0
 17315                           
 17316                           ; BSR set to: 0
 17317  004552  51B0               	movf	_eusartRxCount& (0+255),w,b	;volatile
 17318  004554  B4D8               	btfsc	status,2,c
 17319  004556  D7FC               	goto	l1016
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;eusart.c: 124: }
 17323                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 17324  004558  9A9D               	bcf	3997,5,c	;volatile
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 17328  00455A  519B               	movf	_eusartRxTail& (0+255),w,b
 17329  00455C  0D01               	mullw	1
 17330  00455E  0E00               	movlw	low _eusartRxBuffer
 17331  004560  24F3               	addwf	prodl,w,c
 17332  004562  6ED9               	movwf	fsr2l,c
 17333  004564  0E02               	movlw	high _eusartRxBuffer
 17334  004566  20F4               	addwfc	prodh,w,c
 17335  004568  6EDA               	movwf	fsr2h,c
 17336  00456A  50DF               	movf	indf2,w,c
 17337  00456C  6FBE               	movwf	EUSART_Read@readValue& (0+255),b
 17338                           
 17339                           ; BSR set to: 0
 17340  00456E  2B9B               	incf	_eusartRxTail& (0+255),f,b
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 17344  004570  0E3F               	movlw	63
 17345  004572  659B               	cpfsgt	_eusartRxTail& (0+255),b
 17346  004574  D002               	goto	l1018
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;eusart.c: 130: {
 17350                           ;eusart.c: 131: eusartRxTail = 0;
 17351  004576  0E00               	movlw	0
 17352  004578  6F9B               	movwf	_eusartRxTail& (0+255),b
 17353  00457A                     l1018:
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;eusart.c: 132: }
 17357                           ;eusart.c: 133: eusartRxCount--;
 17358                           
 17359                           ; BSR set to: 0
 17360  00457A  07B0               	decf	_eusartRxCount& (0+255),f,b	;volatile
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 17364  00457C  8A9D               	bsf	3997,5,c	;volatile
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;eusart.c: 136: return readValue;
 17368  00457E  51BE               	movf	EUSART_Read@readValue& (0+255),w,b
 17369  004580  0012               	return	
 17370  004582                     __end_of_EUSART_Read:
 17371                           	opt stack 0
 17372                           tblptru	equ	0xFF8
 17373                           tblptrh	equ	0xFF7
 17374                           tblptrl	equ	0xFF6
 17375                           tablat	equ	0xFF5
 17376                           prodh	equ	0xFF4
 17377                           prodl	equ	0xFF3
 17378                           intcon	equ	0xFF2
 17379                           indf0	equ	0xFEF
 17380                           postinc0	equ	0xFEE
 17381                           fsr0h	equ	0xFEA
 17382                           fsr0l	equ	0xFE9
 17383                           wreg	equ	0xFE8
 17384                           indf1	equ	0xFE7
 17385                           postdec1	equ	0xFE5
 17386                           fsr1h	equ	0xFE2
 17387                           fsr1l	equ	0xFE1
 17388                           indf2	equ	0xFDF
 17389                           postinc2	equ	0xFDE
 17390                           fsr2h	equ	0xFDA
 17391                           fsr2l	equ	0xFD9
 17392                           status	equ	0xFD8
 17393                           
 17394 ;; *************** function _CDCTxService *****************
 17395 ;; Defined at:
 17396 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 17397 ;; Parameters:    Size  Location     Type
 17398 ;;		None
 17399 ;; Auto vars:     Size  Location     Type
 17400 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 17401 ;;  i               1   10[BANK0 ] unsigned char 
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  1    wreg      void 
 17404 ;; Registers used:
 17405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/0
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17411 ;;      Params:         0       0       0       0       0       0       0       0       0
 17412 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17413 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17414 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17415 ;;Total ram usage:        5 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:   12
 17418 ;; This function calls:
 17419 ;;		_USBTransferOnePacket
 17420 ;; This function is called by:
 17421 ;;		_USBapp_DeviceCdcEmulatorHandler
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text68
 17426  001C72                     __ptext68:
 17427                           	opt stack 0
 17428  001C72                     _CDCTxService:
 17429                           	opt stack 16
 17430                           
 17431                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 17432                           ;usb_device_cdc.c: 786: uint8_t i;
 17433                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 17434                           
 17435                           ; BSR set to: 0
 17436                           ;incstack = 0
 17437  001C72  94A3               	bcf	4003,2,c	;volatile
 17438                           
 17439                           ;usb_device_cdc.c: 790: {};
 17440                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 17441  001C74  0100               	movlb	0	; () banked
 17442  001C76  518A               	movf	_CDCDataInHandle& (0+255),w,b
 17443  001C78  118B               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 17444  001C7A  B4D8               	btfsc	status,2,c
 17445  001C7C  D00F               	goto	l1889
 17446                           
 17447                           ; BSR set to: 0
 17448  001C7E  C08A  FFD9         	movff	_CDCDataInHandle,fsr2l
 17449  001C82  C08B  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 17450  001C86  AEDF               	btfss	indf2,7,c
 17451  001C88  D003               	goto	u5860
 17452  001C8A  6BC5               	clrf	??_CDCTxService& (0+255),b
 17453  001C8C  2BC5               	incf	??_CDCTxService& (0+255),f,b
 17454  001C8E  D002               	goto	u5868
 17455  001C90                     u5860:
 17456  001C90  0100               	movlb	0	; () banked
 17457  001C92  6BC5               	clrf	??_CDCTxService& (0+255),b
 17458  001C94                     u5868:
 17459  001C94  51C5               	movf	??_CDCTxService& (0+255),w,b
 17460  001C96  6FC6               	movwf	_CDCTxService$5710& (0+255),b
 17461  001C98  6BC7               	clrf	(_CDCTxService$5710+1)& (0+255),b
 17462  001C9A  D004               	goto	l1891
 17463  001C9C                     l1889:
 17464                           
 17465                           ; BSR set to: 0
 17466                           
 17467                           ; BSR set to: 0
 17468  001C9C  0E00               	movlw	0
 17469  001C9E  6FC7               	movwf	(_CDCTxService$5710+1)& (0+255),b
 17470  001CA0  0E00               	movlw	0
 17471  001CA2  6FC6               	movwf	_CDCTxService$5710& (0+255),b
 17472  001CA4                     l1891:
 17473                           
 17474                           ; BSR set to: 0
 17475                           
 17476                           ; BSR set to: 0
 17477  001CA4  51C6               	movf	_CDCTxService$5710& (0+255),w,b
 17478  001CA6  11C7               	iorwf	(_CDCTxService$5710+1)& (0+255),w,b
 17479  001CA8  B4D8               	btfsc	status,2,c
 17480  001CAA  D002               	goto	l1887
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;usb_device_cdc.c: 793: {
 17484                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 17485  001CAC  84A3               	bsf	4003,2,c	;volatile
 17486                           
 17487                           ;usb_device_cdc.c: 795: return;
 17488  001CAE  0012               	return	
 17489  001CB0                     l1887:
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;usb_device_cdc.c: 796: }
 17493                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 17494                           
 17495                           ; BSR set to: 0
 17496  001CB0  0E03               	movlw	3
 17497  001CB2  19A7               	xorwf	_cdc_trf_state& (0+255),w,b
 17498  001CB4  A4D8               	btfss	status,2,c
 17499  001CB6  D002               	goto	l1893
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 17503  001CB8  0E00               	movlw	0
 17504  001CBA  6FA7               	movwf	_cdc_trf_state& (0+255),b
 17505  001CBC                     l1893:
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 17509  001CBC  51A7               	movf	_cdc_trf_state& (0+255),w,b
 17510  001CBE  A4D8               	btfss	status,2,c
 17511  001CC0  D002               	goto	l1894
 17512                           
 17513                           ; BSR set to: 0
 17514                           ;usb_device_cdc.c: 810: {
 17515                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 17516  001CC2  84A3               	bsf	4003,2,c	;volatile
 17517                           
 17518                           ;usb_device_cdc.c: 812: return;
 17519  001CC4  0012               	return	
 17520  001CC6                     l1894:
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;usb_device_cdc.c: 813: }
 17524                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 17525                           
 17526                           ; BSR set to: 0
 17527  001CC6  0E02               	movlw	2
 17528  001CC8  19A7               	xorwf	_cdc_trf_state& (0+255),w,b
 17529  001CCA  A4D8               	btfss	status,2,c
 17530  001CCC  D013               	goto	l1895
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;usb_device_cdc.c: 819: {
 17534                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 17535  001CCE  0E01               	movlw	1
 17536  001CD0  6FBE               	movwf	USBTransferOnePacket@dir& (0+255),b
 17537  001CD2  0E00               	movlw	0
 17538  001CD4  6FBF               	movwf	USBTransferOnePacket@data& (0+255),b
 17539  001CD6  0E00               	movlw	0
 17540  001CD8  6FC0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17541  001CDA  0E00               	movlw	0
 17542  001CDC  6FC1               	movwf	USBTransferOnePacket@len& (0+255),b
 17543  001CDE  0E02               	movlw	2
 17544  001CE0  ECD9  F018         	call	_USBTransferOnePacket
 17545  001CE4  C0BE  F08A         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 17546  001CE8  C0BF  F08B         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 17547                           
 17548                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 17549  001CEC  0E03               	movlw	3
 17550  001CEE  0100               	movlb	0	; () banked
 17551  001CF0  6FA7               	movwf	_cdc_trf_state& (0+255),b
 17552                           
 17553                           ;usb_device_cdc.c: 823: }
 17554  001CF2  D058               	goto	l1897
 17555  001CF4                     l1895:
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 17559                           
 17560                           ; BSR set to: 0
 17561  001CF4  05A7               	decf	_cdc_trf_state& (0+255),w,b
 17562  001CF6  A4D8               	btfss	status,2,c
 17563  001CF8  D055               	goto	l1897
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;usb_device_cdc.c: 825: {
 17567                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 17568  001CFA  0E40               	movlw	64
 17569  001CFC  6599               	cpfsgt	_cdc_tx_len& (0+255),b
 17570  001CFE  D003               	goto	l1898
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 17574  001D00  0E40               	movlw	64
 17575  001D02  6FC9               	movwf	CDCTxService@byte_to_send& (0+255),b
 17576  001D04  D002               	goto	l1899
 17577  001D06                     l1898:
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;usb_device_cdc.c: 831: else
 17581                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 17582  001D06  C099  F0C9         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 17583  001D0A                     l1899:
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 17587                           
 17588                           ; BSR set to: 0
 17589  001D0A  51C9               	movf	CDCTxService@byte_to_send& (0+255),w,b
 17590  001D0C  0800               	sublw	0
 17591  001D0E  2599               	addwf	_cdc_tx_len& (0+255),w,b
 17592  001D10  6F99               	movwf	_cdc_tx_len& (0+255),b
 17593                           
 17594                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 17595  001D12  0E00               	movlw	0
 17596  001D14  6F7E               	movwf	_pCDCDst& (0+255),b
 17597  001D16  0E05               	movlw	5
 17598  001D18  6F7F               	movwf	(_pCDCDst+1)& (0+255),b
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;usb_device_cdc.c: 841: i = byte_to_send;
 17602  001D1A  C0C9  F0C8         	movff	CDCTxService@byte_to_send,CDCTxService@i
 17603                           
 17604                           ; BSR set to: 0
 17605                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 17606  001D1E  5198               	movf	_cdc_mem_type& (0+255),w,b
 17607  001D20  B4D8               	btfsc	status,2,c
 17608  001D22  D010               	goto	l1901
 17609  001D24  D022               	goto	l1905
 17610  001D26                     
 17611                           ; BSR set to: 0
 17612                           ;usb_device_cdc.c: 845: {
 17613                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 17614                           
 17615                           ; BSR set to: 0
 17616  001D26  C081  FFD9         	movff	_pCDCSrc,fsr2l
 17617  001D2A  C082  FFDA         	movff	_pCDCSrc+1,fsr2h
 17618  001D2E  C07E  FFE1         	movff	_pCDCDst,fsr1l
 17619  001D32  C07F  FFE2         	movff	_pCDCDst+1,fsr1h
 17620  001D36  CFDF FFE7          	movff	indf2,indf1
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 17624  001D3A  4B7E               	infsnz	_pCDCDst& (0+255),f,b
 17625  001D3C  2B7F               	incf	(_pCDCDst+1)& (0+255),f,b
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 17629  001D3E  4B81               	infsnz	_pCDCSrc& (0+255),f,b
 17630  001D40  2B82               	incf	(_pCDCSrc+1)& (0+255),f,b
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;usb_device_cdc.c: 849: i--;
 17634  001D42  07C8               	decf	CDCTxService@i& (0+255),f,b
 17635  001D44                     l1901:
 17636                           
 17637                           ; BSR set to: 0
 17638                           
 17639                           ; BSR set to: 0
 17640  001D44  51C8               	movf	CDCTxService@i& (0+255),w,b
 17641  001D46  B4D8               	btfsc	status,2,c
 17642  001D48  D013               	goto	u5950
 17643  001D4A  D7ED               	goto	l1902
 17644  001D4C                     
 17645                           ; BSR set to: 0
 17646                           ;usb_device_cdc.c: 855: {
 17647                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 17648                           
 17649                           ; BSR set to: 0
 17650  001D4C  C081  FFD9         	movff	_pCDCSrc,fsr2l
 17651  001D50  C082  FFDA         	movff	_pCDCSrc+1,fsr2h
 17652  001D54  C07E  FFE1         	movff	_pCDCDst,fsr1l
 17653  001D58  C07F  FFE2         	movff	_pCDCDst+1,fsr1h
 17654  001D5C  CFDF FFE7          	movff	indf2,indf1
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 17658  001D60  4B7E               	infsnz	_pCDCDst& (0+255),f,b
 17659  001D62  2B7F               	incf	(_pCDCDst+1)& (0+255),f,b
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 17663  001D64  4B81               	infsnz	_pCDCSrc& (0+255),f,b
 17664  001D66  2B82               	incf	(_pCDCSrc+1)& (0+255),f,b
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;usb_device_cdc.c: 859: i--;
 17668  001D68  07C8               	decf	CDCTxService@i& (0+255),f,b
 17669  001D6A                     l1905:
 17670                           
 17671                           ; BSR set to: 0
 17672                           
 17673                           ; BSR set to: 0
 17674  001D6A  51C8               	movf	CDCTxService@i& (0+255),w,b
 17675  001D6C  A4D8               	btfss	status,2,c
 17676  001D6E  D7EE               	goto	l1906
 17677  001D70                     u5950:
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;usb_device_cdc.c: 860: }
 17681                           ;usb_device_cdc.c: 861: }
 17682                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 17683                           
 17684                           ; BSR set to: 0
 17685                           
 17686                           ; BSR set to: 0
 17687  001D70  5199               	movf	_cdc_tx_len& (0+255),w,b
 17688  001D72  A4D8               	btfss	status,2,c
 17689  001D74  D008               	goto	l1910
 17690                           
 17691                           ; BSR set to: 0
 17692                           ;usb_device_cdc.c: 868: {
 17693                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 17694  001D76  0E40               	movlw	64
 17695  001D78  19C9               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 17696  001D7A  A4D8               	btfss	status,2,c
 17697  001D7C  D002               	goto	l1909
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 17701  001D7E  0E02               	movlw	2
 17702  001D80  D001               	goto	L16
 17703  001D82                     l1909:
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;usb_device_cdc.c: 871: else
 17707                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 17708                           
 17709                           ; BSR set to: 0
 17710  001D82  0E03               	movlw	3
 17711  001D84                     L16:
 17712  001D84  6FA7               	movwf	_cdc_trf_state& (0+255),b
 17713  001D86                     l1910:
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;usb_device_cdc.c: 873: }
 17717                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 17718                           
 17719                           ; BSR set to: 0
 17720                           
 17721                           ; BSR set to: 0
 17722  001D86  0E01               	movlw	1
 17723  001D88  6FBE               	movwf	USBTransferOnePacket@dir& (0+255),b
 17724  001D8A  0E00               	movlw	0
 17725  001D8C  6FBF               	movwf	USBTransferOnePacket@data& (0+255),b
 17726  001D8E  0E05               	movlw	5
 17727  001D90  6FC0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17728  001D92  C0C9  F0C1         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 17729  001D96  0E02               	movlw	2
 17730  001D98  ECD9  F018         	call	_USBTransferOnePacket
 17731  001D9C  C0BE  F08A         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 17732  001DA0  C0BF  F08B         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 17733  001DA4                     l1897:
 17734                           
 17735                           ;usb_device_cdc.c: 876: }
 17736                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 17737  001DA4  84A3               	bsf	4003,2,c	;volatile
 17738  001DA6  0012               	return		;funcret
 17739  001DA8                     __end_of_CDCTxService:
 17740                           	opt stack 0
 17741                           tblptru	equ	0xFF8
 17742                           tblptrh	equ	0xFF7
 17743                           tblptrl	equ	0xFF6
 17744                           tablat	equ	0xFF5
 17745                           prodh	equ	0xFF4
 17746                           prodl	equ	0xFF3
 17747                           intcon	equ	0xFF2
 17748                           indf0	equ	0xFEF
 17749                           postinc0	equ	0xFEE
 17750                           fsr0h	equ	0xFEA
 17751                           fsr0l	equ	0xFE9
 17752                           wreg	equ	0xFE8
 17753                           indf1	equ	0xFE7
 17754                           postdec1	equ	0xFE5
 17755                           fsr1h	equ	0xFE2
 17756                           fsr1l	equ	0xFE1
 17757                           indf2	equ	0xFDF
 17758                           postinc2	equ	0xFDE
 17759                           fsr2h	equ	0xFDA
 17760                           fsr2l	equ	0xFD9
 17761                           status	equ	0xFD8
 17762                           
 17763 ;; *************** function _USBTransferOnePacket *****************
 17764 ;; Defined at:
 17765 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 17766 ;; Parameters:    Size  Location     Type
 17767 ;;  ep              1    wreg     unsigned char 
 17768 ;;  dir             1    0[BANK0 ] unsigned char 
 17769 ;;  data            2    1[BANK0 ] PTR unsigned char 
 17770 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17771 ;;  len             1    3[BANK0 ] unsigned char 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  ep              1    4[BANK0 ] unsigned char 
 17774 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 17775 ;;		 -> BDT(48), NULL(0), 
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  2    0[BANK0 ] PTR void 
 17778 ;; Registers used:
 17779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17785 ;;      Params:         0       4       0       0       0       0       0       0       0
 17786 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17788 ;;      Totals:         0       7       0       0       0       0       0       0       0
 17789 ;;Total ram usage:        7 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:   11
 17792 ;; This function calls:
 17793 ;;		Nothing
 17794 ;; This function is called by:
 17795 ;;		_getsUSBUSART
 17796 ;;		_CDCTxService
 17797 ;;		_USBCDCEventHandler
 17798 ;; This function uses a non-reentrant model
 17799 ;;
 17800                           
 17801                           	psect	text69
 17802  0031B2                     __ptext69:
 17803                           	opt stack 0
 17804  0031B2                     _USBTransferOnePacket:
 17805                           	opt stack 16
 17806                           
 17807                           ;incstack = 0
 17808                           ;USBTransferOnePacket@ep stored from wreg
 17809  0031B2  0100               	movlb	0	; () banked
 17810  0031B4  6FC2               	movwf	USBTransferOnePacket@ep& (0+255),b
 17811                           
 17812                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 17813                           ;usb_device.c: 762: if(dir != 0)
 17814  0031B6  0100               	movlb	0	; () banked
 17815  0031B8  51BE               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17816  0031BA  B4D8               	btfsc	status,2,c
 17817  0031BC  D007               	goto	l1572
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;usb_device.c: 763: {
 17821                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 17822  0031BE  51C2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17823  0031C0  0D02               	mullw	2
 17824  0031C2  0E6E               	movlw	low _pBDTEntryIn
 17825  0031C4  24F3               	addwf	prodl,w,c
 17826  0031C6  6ED9               	movwf	fsr2l,c
 17827  0031C8  0E00               	movlw	high _pBDTEntryIn
 17828  0031CA  D006               	goto	L17
 17829  0031CC                     l1572:
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;usb_device.c: 767: else
 17833                           ;usb_device.c: 768: {
 17834                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 17835                           
 17836                           ; BSR set to: 0
 17837  0031CC  51C2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17838  0031CE  0D02               	mullw	2
 17839  0031D0  0E74               	movlw	low _pBDTEntryOut
 17840  0031D2  24F3               	addwf	prodl,w,c
 17841  0031D4  6ED9               	movwf	fsr2l,c
 17842  0031D6  0E00               	movlw	high _pBDTEntryOut
 17843  0031D8                     L17:
 17844  0031D8  20F4               	addwfc	prodh,w,c
 17845  0031DA  6EDA               	movwf	fsr2h,c
 17846  0031DC  CFDE F0C3          	movff	postinc2,USBTransferOnePacket@handle
 17847  0031E0  CFDD F0C4          	movff	postdec2,USBTransferOnePacket@handle+1
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;usb_device.c: 771: }
 17851                           ;usb_device.c: 775: if(handle == 0)
 17852                           
 17853                           ; BSR set to: 0
 17854  0031E4  51C3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17855  0031E6  11C4               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17856  0031E8  A4D8               	btfss	status,2,c
 17857  0031EA  D005               	goto	l1574
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;usb_device.c: 776: {
 17861                           ;usb_device.c: 777: return 0;
 17862  0031EC  0E00               	movlw	0
 17863  0031EE  6FBE               	movwf	?_USBTransferOnePacket& (0+255),b
 17864  0031F0  0E00               	movlw	0
 17865  0031F2  6FBF               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17866                           
 17867                           ; BSR set to: 0
 17868  0031F4  0012               	return	
 17869  0031F6                     l1574:
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;usb_device.c: 778: }
 17873                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 17874                           
 17875                           ; BSR set to: 0
 17876  0031F6  EE20 F002          	lfsr	2,2
 17877  0031FA  51C3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17878  0031FC  26D9               	addwf	fsr2l,f,c
 17879  0031FE  51C4               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17880  003200  22DA               	addwfc	fsr2h,f,c
 17881  003202  C0BF  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17882  003206  C0C0  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17883                           
 17884                           ;usb_device.c: 781: handle->CNT = len;
 17885  00320A  EE20 F001          	lfsr	2,1
 17886  00320E  51C3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17887  003210  26D9               	addwf	fsr2l,f,c
 17888  003212  51C4               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17889  003214  22DA               	addwfc	fsr2h,f,c
 17890  003216  C0C1  FFDF         	movff	USBTransferOnePacket@len,indf2
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 17894  00321A  C0C3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17895  00321E  C0C4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17896  003222  0E40               	movlw	64
 17897  003224  16DF               	andwf	indf2,f,c
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 17901  003226  C0C3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17902  00322A  C0C4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17903  00322E  0E00               	movlw	0
 17904  003230  86DB               	bsf	plusw2,3,c
 17905                           
 17906                           ; BSR set to: 0
 17907                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 17908  003232  C0C3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17909  003236  C0C4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17910  00323A  0E00               	movlw	0
 17911  00323C  8EDB               	bsf	plusw2,7,c
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;usb_device.c: 787: if(dir != 0)
 17915  00323E  51BE               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17916  003240  B4D8               	btfsc	status,2,c
 17917  003242  D007               	goto	l1576
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;usb_device.c: 788: {
 17921                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17922  003244  51C2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17923  003246  0D02               	mullw	2
 17924  003248  0E6E               	movlw	low _pBDTEntryIn
 17925  00324A  24F3               	addwf	prodl,w,c
 17926  00324C  6ED9               	movwf	fsr2l,c
 17927  00324E  0E00               	movlw	high _pBDTEntryIn
 17928  003250  D006               	goto	L18
 17929  003252                     l1576:
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;usb_device.c: 792: else
 17933                           ;usb_device.c: 793: {
 17934                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17935                           
 17936                           ; BSR set to: 0
 17937  003252  51C2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17938  003254  0D02               	mullw	2
 17939  003256  0E74               	movlw	low _pBDTEntryOut
 17940  003258  24F3               	addwf	prodl,w,c
 17941  00325A  6ED9               	movwf	fsr2l,c
 17942  00325C  0E00               	movlw	high _pBDTEntryOut
 17943  00325E                     L18:
 17944  00325E  20F4               	addwfc	prodh,w,c
 17945  003260  6EDA               	movwf	fsr2h,c
 17946  003262  0E04               	movlw	4
 17947  003264  1ADF               	xorwf	indf2,f,c
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;usb_device.c: 796: }
 17951                           ;usb_device.c: 797: return (void*)handle;
 17952                           
 17953                           ; BSR set to: 0
 17954  003266  C0C3  F0BE         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17955  00326A  C0C4  F0BF         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17956  00326E  0012               	return	
 17957  003270                     __end_of_USBTransferOnePacket:
 17958                           	opt stack 0
 17959                           tblptru	equ	0xFF8
 17960                           tblptrh	equ	0xFF7
 17961                           tblptrl	equ	0xFF6
 17962                           tablat	equ	0xFF5
 17963                           prodh	equ	0xFF4
 17964                           prodl	equ	0xFF3
 17965                           intcon	equ	0xFF2
 17966                           indf0	equ	0xFEF
 17967                           postinc0	equ	0xFEE
 17968                           fsr0h	equ	0xFEA
 17969                           fsr0l	equ	0xFE9
 17970                           wreg	equ	0xFE8
 17971                           indf1	equ	0xFE7
 17972                           postdec1	equ	0xFE5
 17973                           fsr1h	equ	0xFE2
 17974                           fsr1l	equ	0xFE1
 17975                           indf2	equ	0xFDF
 17976                           postinc2	equ	0xFDE
 17977                           postdec2	equ	0xFDD
 17978                           plusw2	equ	0xFDB
 17979                           fsr2h	equ	0xFDA
 17980                           fsr2l	equ	0xFD9
 17981                           status	equ	0xFD8
 17982                           
 17983 ;; *************** function _USBDeviceInit *****************
 17984 ;; Defined at:
 17985 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 17986 ;; Parameters:    Size  Location     Type
 17987 ;;		None
 17988 ;; Auto vars:     Size  Location     Type
 17989 ;;  i               1    8[BANK0 ] unsigned char 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  1    wreg      void 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17999 ;;      Params:         0       0       0       0       0       0       0       0       0
 18000 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18002 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18003 ;;Total ram usage:        1 bytes
 18004 ;; Hardware stack levels used:    1
 18005 ;; Hardware stack levels required when called:   12
 18006 ;; This function calls:
 18007 ;;		_memset
 18008 ;; This function is called by:
 18009 ;;		_main
 18010 ;; This function uses a non-reentrant model
 18011 ;;
 18012                           
 18013                           	psect	text70
 18014  00213C                     __ptext70:
 18015                           	opt stack 0
 18016  00213C                     _USBDeviceInit:
 18017                           	opt stack 18
 18018                           
 18019                           ;usb_device.c: 239: uint8_t i;
 18020                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;incstack = 0
 18024  00213C  94A3               	bcf	4003,2,c	;volatile
 18025                           
 18026                           ;usb_device.c: 244: {UEIR = 0;};
 18027  00213E  0E00               	movlw	0
 18028  002140  6E67               	movwf	3943,c	;volatile
 18029                           
 18030                           ;usb_device.c: 247: {UIR = 0;};
 18031  002142  0E00               	movlw	0
 18032  002144  6E65               	movwf	3941,c	;volatile
 18033                           
 18034                           ;usb_device.c: 250: UEP0 = 0;
 18035  002146  0E00               	movlw	0
 18036  002148  6E6A               	movwf	3946,c	;volatile
 18037                           
 18038                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 18039  00214A  0E6B               	movlw	107
 18040  00214C  0100               	movlb	0	; () banked
 18041  00214E  6FBE               	movwf	memset@p1& (0+255),b
 18042  002150  0E0F               	movlw	15
 18043  002152  6FBF               	movwf	(memset@p1+1)& (0+255),b
 18044  002154  0E00               	movlw	0
 18045  002156  6FC1               	movwf	(memset@c+1)& (0+255),b
 18046  002158  0E00               	movlw	0
 18047  00215A  6FC0               	movwf	memset@c& (0+255),b
 18048  00215C  0E00               	movlw	0
 18049  00215E  6FC3               	movwf	(memset@n+1)& (0+255),b
 18050  002160  0E02               	movlw	2
 18051  002162  6FC2               	movwf	memset@n& (0+255),b
 18052  002164  EC5D  F023         	call	_memset	;wreg free
 18053                           
 18054                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18055  002168  0E16               	movlw	22
 18056  00216A  6E62               	movwf	3938,c	;volatile
 18057  00216C  0E9F               	movlw	159
 18058  00216E  6E66               	movwf	3942,c	;volatile
 18059  002170  0E7B               	movlw	123
 18060  002172  6E64               	movwf	3940,c	;volatile
 18061                           
 18062                           ;usb_device.c: 257: ;
 18063                           ;usb_device.c: 260: ;
 18064                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 18065  002174  0E00               	movlw	0
 18066  002176  0100               	movlb	0	; () banked
 18067  002178  6FC6               	movwf	USBDeviceInit@i& (0+255),b
 18068  00217A                     l9207:
 18069                           
 18070                           ; BSR set to: 0
 18071  00217A  0E0B               	movlw	11
 18072  00217C  65C6               	cpfsgt	USBDeviceInit@i& (0+255),b
 18073  00217E  D001               	goto	l1532
 18074  002180  D00E               	goto	u7480
 18075  002182                     l1532:
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;usb_device.c: 264: {
 18079                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 18080                           
 18081                           ; BSR set to: 0
 18082  002182  51C6               	movf	USBDeviceInit@i& (0+255),w,b
 18083  002184  0D04               	mullw	4
 18084  002186  0E00               	movlw	0
 18085  002188  24F3               	addwf	prodl,w,c
 18086  00218A  6ED9               	movwf	fsr2l,c
 18087  00218C  0E04               	movlw	4
 18088  00218E  20F4               	addwfc	prodh,w,c
 18089  002190  6EDA               	movwf	fsr2h,c
 18090  002192  6ADE               	clrf	postinc2,c
 18091  002194  6ADE               	clrf	postinc2,c
 18092  002196  6ADE               	clrf	postinc2,c
 18093  002198  6ADD               	clrf	postdec2,c
 18094                           
 18095                           ; BSR set to: 0
 18096  00219A  2BC6               	incf	USBDeviceInit@i& (0+255),f,b
 18097  00219C  D7EE               	goto	l9207
 18098  00219E                     u7480:
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;usb_device.c: 266: }
 18102                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 18103  00219E  8C60               	bsf	3936,6,c	;volatile
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;usb_device.c: 272: UADDR = 0x00;
 18107  0021A0  0E00               	movlw	0
 18108  0021A2  6E63               	movwf	3939,c	;volatile
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 18112  0021A4  9860               	bcf	3936,4,c	;volatile
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 18116  0021A6  9C60               	bcf	3936,6,c	;volatile
 18117                           
 18118                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 18119  0021A8  D009               	goto	l1534
 18120  0021AA                     
 18121                           ; BSR set to: 0
 18122                           ;usb_device.c: 282: {
 18123                           ;usb_device.c: 283: (UIR &= 0xF7);
 18124                           
 18125                           ; BSR set to: 0
 18126  0021AA  9665               	bcf	3941,3,c	;volatile
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 18130  0021AC  0E00               	movlw	0
 18131  0021AE  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18132                           
 18133                           ; BSR set to: 0
 18134                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 18135  0021B0  0E00               	movlw	0
 18136  0021B2  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 18140  0021B4  0E00               	movlw	0
 18141  0021B6  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 18142  0021B8  0E00               	movlw	0
 18143  0021BA  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 18144  0021BC                     l1534:
 18145                           
 18146                           ; BSR set to: 0
 18147                           
 18148                           ; BSR set to: 0
 18149  0021BC  B665               	btfsc	3941,3,c	;volatile
 18150  0021BE  D7F5               	goto	l1535
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;usb_device.c: 288: }
 18154                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 18155                           
 18156                           ; BSR set to: 0
 18157  0021C0  0E01               	movlw	1
 18158  0021C2  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18159                           
 18160                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 18161  0021C4  0E01               	movlw	1
 18162  0021C6  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18163                           
 18164                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 18165  0021C8  0E00               	movlw	0
 18166  0021CA  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 18167                           
 18168                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 18169  0021CC  0E00               	movlw	0
 18170  0021CE  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 18171                           
 18172                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 18173  0021D0  0E00               	movlw	0
 18174  0021D2  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 18175                           
 18176                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 18177  0021D4  0E00               	movlw	0
 18178  0021D6  6FC6               	movwf	USBDeviceInit@i& (0+255),b
 18179  0021D8                     l9235:
 18180                           
 18181                           ; BSR set to: 0
 18182  0021D8  0E02               	movlw	2
 18183  0021DA  65C6               	cpfsgt	USBDeviceInit@i& (0+255),b
 18184  0021DC  D001               	goto	l1537
 18185  0021DE  D02E               	goto	u7510
 18186  0021E0                     l1537:
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;usb_device.c: 302: {
 18190                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 18191                           
 18192                           ; BSR set to: 0
 18193  0021E0  51C6               	movf	USBDeviceInit@i& (0+255),w,b
 18194  0021E2  0D02               	mullw	2
 18195  0021E4  0E6E               	movlw	low _pBDTEntryIn
 18196  0021E6  24F3               	addwf	prodl,w,c
 18197  0021E8  6ED9               	movwf	fsr2l,c
 18198  0021EA  0E00               	movlw	high _pBDTEntryIn
 18199  0021EC  20F4               	addwfc	prodh,w,c
 18200  0021EE  6EDA               	movwf	fsr2h,c
 18201  0021F0  0E00               	movlw	0
 18202  0021F2  6EDE               	movwf	postinc2,c
 18203  0021F4  0E00               	movlw	0
 18204  0021F6  6EDD               	movwf	postdec2,c
 18205                           
 18206                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 18207  0021F8  51C6               	movf	USBDeviceInit@i& (0+255),w,b
 18208  0021FA  0D02               	mullw	2
 18209  0021FC  0E74               	movlw	low _pBDTEntryOut
 18210  0021FE  24F3               	addwf	prodl,w,c
 18211  002200  6ED9               	movwf	fsr2l,c
 18212  002202  0E00               	movlw	high _pBDTEntryOut
 18213  002204  20F4               	addwfc	prodh,w,c
 18214  002206  6EDA               	movwf	fsr2h,c
 18215  002208  0E00               	movlw	0
 18216  00220A  6EDE               	movwf	postinc2,c
 18217  00220C  0E00               	movlw	0
 18218  00220E  6EDD               	movwf	postdec2,c
 18219                           
 18220                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 18221  002210  51C6               	movf	USBDeviceInit@i& (0+255),w,b
 18222  002212  0D01               	mullw	1
 18223  002214  0E87               	movlw	low _ep_data_in
 18224  002216  24F3               	addwf	prodl,w,c
 18225  002218  6ED9               	movwf	fsr2l,c
 18226  00221A  0E00               	movlw	high _ep_data_in
 18227  00221C  20F4               	addwfc	prodh,w,c
 18228  00221E  6EDA               	movwf	fsr2h,c
 18229  002220  0E00               	movlw	0
 18230  002222  6EDF               	movwf	indf2,c
 18231                           
 18232                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 18233  002224  51C6               	movf	USBDeviceInit@i& (0+255),w,b
 18234  002226  0D01               	mullw	1
 18235  002228  0E84               	movlw	low _ep_data_out
 18236  00222A  24F3               	addwf	prodl,w,c
 18237  00222C  6ED9               	movwf	fsr2l,c
 18238  00222E  0E00               	movlw	high _ep_data_out
 18239  002230  20F4               	addwfc	prodh,w,c
 18240  002232  6EDA               	movwf	fsr2h,c
 18241  002234  0E00               	movlw	0
 18242  002236  6EDF               	movwf	indf2,c
 18243                           
 18244                           ; BSR set to: 0
 18245  002238  2BC6               	incf	USBDeviceInit@i& (0+255),f,b
 18246  00223A  D7CE               	goto	l9235
 18247  00223C                     u7510:
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;usb_device.c: 307: }
 18251                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18252                           
 18253                           ; BSR set to: 0
 18254  00223C  0E08               	movlw	8
 18255  00223E  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 18256  002240  0E04               	movlw	4
 18257  002242  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 18261  002244  0E16               	movlw	22
 18262  002246  6E6A               	movwf	3946,c	;volatile
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18266  002248  0E04               	movlw	4
 18267  00224A  0104               	movlb	4	; () banked
 18268  00224C  6F03               	movwf	3,b	;volatile
 18269  00224E  0E30               	movlw	48
 18270  002250  6F02               	movwf	2,b	;volatile
 18271                           
 18272                           ; BSR set to: 4
 18273                           ;usb_device.c: 315: BDT[0].CNT = 8;
 18274  002252  0E08               	movlw	8
 18275  002254  6F01               	movwf	1,b	;volatile
 18276                           
 18277                           ; BSR set to: 4
 18278                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 18279  002256  0E04               	movlw	4
 18280  002258  6F00               	movwf	0,b	;volatile
 18281                           
 18282                           ; BSR set to: 4
 18283                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 18284  00225A  8F00               	bsf	0,7,b	;volatile
 18285                           
 18286                           ; BSR set to: 4
 18287                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 18288  00225C  0E00               	movlw	0
 18289  00225E  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 18290                           
 18291                           ; BSR set to: 4
 18292                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 18293  002260  0E00               	movlw	0
 18294  002262  0100               	movlb	0	; () banked
 18295  002264  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 18296                           
 18297                           ; BSR set to: 0
 18298  002266  0012               	return		;funcret
 18299  002268                     __end_of_USBDeviceInit:
 18300                           	opt stack 0
 18301                           tblptru	equ	0xFF8
 18302                           tblptrh	equ	0xFF7
 18303                           tblptrl	equ	0xFF6
 18304                           tablat	equ	0xFF5
 18305                           prodh	equ	0xFF4
 18306                           prodl	equ	0xFF3
 18307                           intcon	equ	0xFF2
 18308                           indf0	equ	0xFEF
 18309                           postinc0	equ	0xFEE
 18310                           fsr0h	equ	0xFEA
 18311                           fsr0l	equ	0xFE9
 18312                           wreg	equ	0xFE8
 18313                           indf1	equ	0xFE7
 18314                           postdec1	equ	0xFE5
 18315                           fsr1h	equ	0xFE2
 18316                           fsr1l	equ	0xFE1
 18317                           indf2	equ	0xFDF
 18318                           postinc2	equ	0xFDE
 18319                           postdec2	equ	0xFDD
 18320                           plusw2	equ	0xFDB
 18321                           fsr2h	equ	0xFDA
 18322                           fsr2l	equ	0xFD9
 18323                           status	equ	0xFD8
 18324                           
 18325 ;; *************** function _memset *****************
 18326 ;; Defined at:
 18327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 18328 ;; Parameters:    Size  Location     Type
 18329 ;;  p1              2    0[BANK0 ] PTR void 
 18330 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18331 ;;  c               2    2[BANK0 ] int 
 18332 ;;  n               2    4[BANK0 ] unsigned int 
 18333 ;; Auto vars:     Size  Location     Type
 18334 ;;  p               2    6[BANK0 ] PTR unsigned char 
 18335 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18336 ;; Return value:  Size  Location     Type
 18337 ;;                  2    0[BANK0 ] PTR void 
 18338 ;; Registers used:
 18339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18340 ;; Tracked objects:
 18341 ;;		On entry : 0/0
 18342 ;;		On exit  : 0/0
 18343 ;;		Unchanged: 0/0
 18344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18345 ;;      Params:         0       6       0       0       0       0       0       0       0
 18346 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18348 ;;      Totals:         0       8       0       0       0       0       0       0       0
 18349 ;;Total ram usage:        8 bytes
 18350 ;; Hardware stack levels used:    1
 18351 ;; Hardware stack levels required when called:   11
 18352 ;; This function calls:
 18353 ;;		Nothing
 18354 ;; This function is called by:
 18355 ;;		_USBDeviceInit
 18356 ;; This function uses a non-reentrant model
 18357 ;;
 18358                           
 18359                           	psect	text71
 18360  0046BA                     __ptext71:
 18361                           	opt stack 0
 18362  0046BA                     _memset:
 18363                           	opt stack 18
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;incstack = 0
 18367  0046BA  C0BE  F0C4         	movff	memset@p1,memset@p
 18368  0046BE  C0BF  F0C5         	movff	memset@p1+1,memset@p+1
 18369  0046C2  D009               	goto	l2352
 18370  0046C4                     l9033:
 18371  0046C4  C0C4  FFD9         	movff	memset@p,fsr2l
 18372  0046C8  C0C5  FFDA         	movff	memset@p+1,fsr2h
 18373  0046CC  C0C0  FFDF         	movff	memset@c,indf2
 18374  0046D0  0100               	movlb	0	; () banked
 18375  0046D2  4BC4               	infsnz	memset@p& (0+255),f,b
 18376  0046D4  2BC5               	incf	(memset@p+1)& (0+255),f,b
 18377  0046D6                     l2352:
 18378                           
 18379                           ; BSR set to: 0
 18380  0046D6  0100               	movlb	0	; () banked
 18381  0046D8  07C2               	decf	memset@n& (0+255),f,b
 18382  0046DA  A0D8               	btfss	status,0,c
 18383  0046DC  07C3               	decf	(memset@n+1)& (0+255),f,b
 18384  0046DE  29C2               	incf	memset@n& (0+255),w,b
 18385  0046E0  E1F1               	bnz	l9033
 18386  0046E2  29C3               	incf	(memset@n+1)& (0+255),w,b
 18387  0046E4  B4D8               	btfsc	status,2,c
 18388  0046E6  0012               	return	
 18389  0046E8  D7ED               	goto	l2353
 18390  0046EA                     __end_of_memset:
 18391                           	opt stack 0
 18392                           tblptru	equ	0xFF8
 18393                           tblptrh	equ	0xFF7
 18394                           tblptrl	equ	0xFF6
 18395                           tablat	equ	0xFF5
 18396                           prodh	equ	0xFF4
 18397                           prodl	equ	0xFF3
 18398                           intcon	equ	0xFF2
 18399                           indf0	equ	0xFEF
 18400                           postinc0	equ	0xFEE
 18401                           fsr0h	equ	0xFEA
 18402                           fsr0l	equ	0xFE9
 18403                           wreg	equ	0xFE8
 18404                           indf1	equ	0xFE7
 18405                           postdec1	equ	0xFE5
 18406                           fsr1h	equ	0xFE2
 18407                           fsr1l	equ	0xFE1
 18408                           indf2	equ	0xFDF
 18409                           postinc2	equ	0xFDE
 18410                           postdec2	equ	0xFDD
 18411                           plusw2	equ	0xFDB
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416 ;; *************** function _USBDeviceAttach *****************
 18417 ;; Defined at:
 18418 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 18419 ;; Parameters:    Size  Location     Type
 18420 ;;		None
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;		None
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  1    wreg      void 
 18425 ;; Registers used:
 18426 ;;		wreg, status,2
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18432 ;;      Params:         0       0       0       0       0       0       0       0       0
 18433 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18434 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18435 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18436 ;;Total ram usage:        0 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:   11
 18439 ;; This function calls:
 18440 ;;		Nothing
 18441 ;; This function is called by:
 18442 ;;		_main
 18443 ;; This function uses a non-reentrant model
 18444 ;;
 18445                           
 18446                           	psect	text72
 18447  0045F2                     __ptext72:
 18448                           	opt stack 0
 18449  0045F2                     _USBDeviceAttach:
 18450                           	opt stack 19
 18451                           
 18452                           ;usb_device.c: 1050: {
 18453                           ;usb_device.c: 1051: if(1 == 1)
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;incstack = 0
 18457  0045F2  0100               	movlb	0	; () banked
 18458  0045F4  51A8               	movf	_USBDeviceState& (0+255),w,b	;volatile
 18459  0045F6  A4D8               	btfss	status,2,c
 18460  0045F8  0012               	return	
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;usb_device.c: 1052: {
 18464                           ;usb_device.c: 1054: UCON = 0;
 18465  0045FA  0E00               	movlw	0
 18466  0045FC  6E60               	movwf	3936,c	;volatile
 18467                           
 18468                           ;usb_device.c: 1057: UIE = 0;
 18469  0045FE  0E00               	movlw	0
 18470  004600  6E64               	movwf	3940,c	;volatile
 18471                           
 18472                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 18473  004602  0E16               	movlw	22
 18474  004604  6E62               	movwf	3938,c	;volatile
 18475  004606  0E9F               	movlw	159
 18476  004608  6E66               	movwf	3942,c	;volatile
 18477  00460A  0E7B               	movlw	123
 18478  00460C  6E64               	movwf	3940,c	;volatile
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 18482  00460E  8ED0               	bsf	4048,7,c	;volatile
 18483                           
 18484                           ; BSR set to: 0
 18485  004610  84A5               	bsf	4005,2,c	;volatile
 18486                           
 18487                           ; BSR set to: 0
 18488  004612  84A3               	bsf	4003,2,c	;volatile
 18489                           
 18490                           ; BSR set to: 0
 18491  004614  8EF2               	bsf	intcon,7,c	;volatile
 18492                           
 18493                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 18494  004616  D001               	goto	l1594
 18495  004618                     l1595:
 18496  004618  8660               	bsf	3936,3,c	;volatile
 18497  00461A                     l1594:
 18498  00461A  A660               	btfss	3936,3,c	;volatile
 18499  00461C  D7FD               	goto	l1595
 18500                           
 18501                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 18502  00461E  0E01               	movlw	1
 18503  004620  0100               	movlb	0	; () banked
 18504  004622  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 18505                           
 18506                           ; BSR set to: 0
 18507  004624  0012               	return	
 18508  004626                     __end_of_USBDeviceAttach:
 18509                           	opt stack 0
 18510                           tblptru	equ	0xFF8
 18511                           tblptrh	equ	0xFF7
 18512                           tblptrl	equ	0xFF6
 18513                           tablat	equ	0xFF5
 18514                           prodh	equ	0xFF4
 18515                           prodl	equ	0xFF3
 18516                           intcon	equ	0xFF2
 18517                           indf0	equ	0xFEF
 18518                           postinc0	equ	0xFEE
 18519                           fsr0h	equ	0xFEA
 18520                           fsr0l	equ	0xFE9
 18521                           wreg	equ	0xFE8
 18522                           indf1	equ	0xFE7
 18523                           postdec1	equ	0xFE5
 18524                           fsr1h	equ	0xFE2
 18525                           fsr1l	equ	0xFE1
 18526                           indf2	equ	0xFDF
 18527                           postinc2	equ	0xFDE
 18528                           postdec2	equ	0xFDD
 18529                           plusw2	equ	0xFDB
 18530                           fsr2h	equ	0xFDA
 18531                           fsr2l	equ	0xFD9
 18532                           status	equ	0xFD8
 18533                           
 18534 ;; *************** function _SYSTEM_Initialize *****************
 18535 ;; Defined at:
 18536 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;		None
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      void 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0, cstack
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18550 ;;      Params:         0       0       0       0       0       0       0       0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18553 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18554 ;;Total ram usage:        0 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:   13
 18557 ;; This function calls:
 18558 ;;		_ADC_Initialize
 18559 ;;		_CMP1_Initialize
 18560 ;;		_EUSART_Initialize
 18561 ;;		_OSCILLATOR_Initialize
 18562 ;;		_PIN_MANAGER_Initialize
 18563 ;;		_SPI_Initialize
 18564 ;;		_TMR1_Initialize
 18565 ;;		_TMR2_Initialize
 18566 ;; This function is called by:
 18567 ;;		_main
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           	psect	text73
 18572  0048B4                     __ptext73:
 18573                           	opt stack 0
 18574  0048B4                     _SYSTEM_Initialize:
 18575                           	opt stack 17
 18576                           
 18577                           ;mcc.c: 95: OSCILLATOR_Initialize();
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;incstack = 0
 18581  0048B4  ECC5  F024         	call	_OSCILLATOR_Initialize	;wreg free
 18582                           
 18583                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 18584  0048B8  EC63  F021         	call	_PIN_MANAGER_Initialize	;wreg free
 18585                           
 18586                           ;mcc.c: 97: SPI_Initialize();
 18587  0048BC  ECF8  F024         	call	_SPI_Initialize	;wreg free
 18588                           
 18589                           ;mcc.c: 98: TMR1_Initialize();
 18590  0048C0  EC2C  F023         	call	_TMR1_Initialize	;wreg free
 18591                           
 18592                           ;mcc.c: 99: TMR2_Initialize();
 18593  0048C4  ECE5  F024         	call	_TMR2_Initialize	;wreg free
 18594                           
 18595                           ;mcc.c: 100: EUSART_Initialize();
 18596  0048C8  ECC1  F022         	call	_EUSART_Initialize	;wreg free
 18597                           
 18598                           ;mcc.c: 101: ADC_Initialize();
 18599  0048CC  EC95  F024         	call	_ADC_Initialize	;wreg free
 18600                           
 18601                           ;mcc.c: 102: CMP1_Initialize();
 18602  0048D0  EC01  F025         	call	_CMP1_Initialize	;wreg free
 18603  0048D4  0012               	return		;funcret
 18604  0048D6                     __end_of_SYSTEM_Initialize:
 18605                           	opt stack 0
 18606                           tblptru	equ	0xFF8
 18607                           tblptrh	equ	0xFF7
 18608                           tblptrl	equ	0xFF6
 18609                           tablat	equ	0xFF5
 18610                           prodh	equ	0xFF4
 18611                           prodl	equ	0xFF3
 18612                           intcon	equ	0xFF2
 18613                           indf0	equ	0xFEF
 18614                           postinc0	equ	0xFEE
 18615                           fsr0h	equ	0xFEA
 18616                           fsr0l	equ	0xFE9
 18617                           wreg	equ	0xFE8
 18618                           indf1	equ	0xFE7
 18619                           postdec1	equ	0xFE5
 18620                           fsr1h	equ	0xFE2
 18621                           fsr1l	equ	0xFE1
 18622                           indf2	equ	0xFDF
 18623                           postinc2	equ	0xFDE
 18624                           postdec2	equ	0xFDD
 18625                           plusw2	equ	0xFDB
 18626                           fsr2h	equ	0xFDA
 18627                           fsr2l	equ	0xFD9
 18628                           status	equ	0xFD8
 18629                           
 18630 ;; *************** function _TMR2_Initialize *****************
 18631 ;; Defined at:
 18632 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 18633 ;; Parameters:    Size  Location     Type
 18634 ;;		None
 18635 ;; Auto vars:     Size  Location     Type
 18636 ;;		None
 18637 ;; Return value:  Size  Location     Type
 18638 ;;                  1    wreg      void 
 18639 ;; Registers used:
 18640 ;;		wreg, status,2, cstack
 18641 ;; Tracked objects:
 18642 ;;		On entry : 0/0
 18643 ;;		On exit  : 0/0
 18644 ;;		Unchanged: 0/0
 18645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18646 ;;      Params:         0       0       0       0       0       0       0       0       0
 18647 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18649 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18650 ;;Total ram usage:        0 bytes
 18651 ;; Hardware stack levels used:    1
 18652 ;; Hardware stack levels required when called:   12
 18653 ;; This function calls:
 18654 ;;		_TMR2_StartTimer
 18655 ;; This function is called by:
 18656 ;;		_SYSTEM_Initialize
 18657 ;; This function uses a non-reentrant model
 18658 ;;
 18659                           
 18660                           	psect	text74
 18661  0049CA                     __ptext74:
 18662                           	opt stack 0
 18663  0049CA                     _TMR2_Initialize:
 18664                           	opt stack 17
 18665                           
 18666                           ;tmr2.c: 62: T2CON = 0x7A;
 18667                           
 18668                           ;incstack = 0
 18669  0049CA  0E7A               	movlw	122
 18670  0049CC  6EBA               	movwf	4026,c	;volatile
 18671                           
 18672                           ;tmr2.c: 65: PR2 = 0x9B;
 18673  0049CE  0E9B               	movlw	155
 18674  0049D0  6EBB               	movwf	4027,c	;volatile
 18675                           
 18676                           ;tmr2.c: 68: TMR2 = 0x00;
 18677  0049D2  0E00               	movlw	0
 18678  0049D4  6EBC               	movwf	4028,c	;volatile
 18679                           
 18680                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 18681  0049D6  929E               	bcf	3998,1,c	;volatile
 18682                           
 18683                           ;tmr2.c: 74: TMR2_StartTimer();
 18684  0049D8  EC5C  F025         	call	_TMR2_StartTimer	;wreg free
 18685  0049DC  0012               	return		;funcret
 18686  0049DE                     __end_of_TMR2_Initialize:
 18687                           	opt stack 0
 18688                           tblptru	equ	0xFF8
 18689                           tblptrh	equ	0xFF7
 18690                           tblptrl	equ	0xFF6
 18691                           tablat	equ	0xFF5
 18692                           prodh	equ	0xFF4
 18693                           prodl	equ	0xFF3
 18694                           intcon	equ	0xFF2
 18695                           indf0	equ	0xFEF
 18696                           postinc0	equ	0xFEE
 18697                           fsr0h	equ	0xFEA
 18698                           fsr0l	equ	0xFE9
 18699                           wreg	equ	0xFE8
 18700                           indf1	equ	0xFE7
 18701                           postdec1	equ	0xFE5
 18702                           fsr1h	equ	0xFE2
 18703                           fsr1l	equ	0xFE1
 18704                           indf2	equ	0xFDF
 18705                           postinc2	equ	0xFDE
 18706                           postdec2	equ	0xFDD
 18707                           plusw2	equ	0xFDB
 18708                           fsr2h	equ	0xFDA
 18709                           fsr2l	equ	0xFD9
 18710                           status	equ	0xFD8
 18711                           
 18712 ;; *************** function _TMR2_StartTimer *****************
 18713 ;; Defined at:
 18714 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;		None
 18717 ;; Auto vars:     Size  Location     Type
 18718 ;;		None
 18719 ;; Return value:  Size  Location     Type
 18720 ;;                  1    wreg      void 
 18721 ;; Registers used:
 18722 ;;		None
 18723 ;; Tracked objects:
 18724 ;;		On entry : 0/0
 18725 ;;		On exit  : 0/0
 18726 ;;		Unchanged: 0/0
 18727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18728 ;;      Params:         0       0       0       0       0       0       0       0       0
 18729 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18731 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18732 ;;Total ram usage:        0 bytes
 18733 ;; Hardware stack levels used:    1
 18734 ;; Hardware stack levels required when called:   11
 18735 ;; This function calls:
 18736 ;;		Nothing
 18737 ;; This function is called by:
 18738 ;;		_TMR2_Initialize
 18739 ;; This function uses a non-reentrant model
 18740 ;;
 18741                           
 18742                           	psect	text75
 18743  004AB8                     __ptext75:
 18744                           	opt stack 0
 18745  004AB8                     _TMR2_StartTimer:
 18746                           	opt stack 17
 18747                           
 18748                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 18749                           
 18750                           ;incstack = 0
 18751  004AB8  84BA               	bsf	4026,2,c	;volatile
 18752  004ABA  0012               	return		;funcret
 18753  004ABC                     __end_of_TMR2_StartTimer:
 18754                           	opt stack 0
 18755                           tblptru	equ	0xFF8
 18756                           tblptrh	equ	0xFF7
 18757                           tblptrl	equ	0xFF6
 18758                           tablat	equ	0xFF5
 18759                           prodh	equ	0xFF4
 18760                           prodl	equ	0xFF3
 18761                           intcon	equ	0xFF2
 18762                           indf0	equ	0xFEF
 18763                           postinc0	equ	0xFEE
 18764                           fsr0h	equ	0xFEA
 18765                           fsr0l	equ	0xFE9
 18766                           wreg	equ	0xFE8
 18767                           indf1	equ	0xFE7
 18768                           postdec1	equ	0xFE5
 18769                           fsr1h	equ	0xFE2
 18770                           fsr1l	equ	0xFE1
 18771                           indf2	equ	0xFDF
 18772                           postinc2	equ	0xFDE
 18773                           postdec2	equ	0xFDD
 18774                           plusw2	equ	0xFDB
 18775                           fsr2h	equ	0xFDA
 18776                           fsr2l	equ	0xFD9
 18777                           status	equ	0xFD8
 18778                           
 18779 ;; *************** function _TMR1_Initialize *****************
 18780 ;; Defined at:
 18781 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 18782 ;; Parameters:    Size  Location     Type
 18783 ;;		None
 18784 ;; Auto vars:     Size  Location     Type
 18785 ;;		None
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  1    wreg      void 
 18788 ;; Registers used:
 18789 ;;		wreg, status,2, status,0, cstack
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/0
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18795 ;;      Params:         0       0       0       0       0       0       0       0       0
 18796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18797 ;;      Temps:          0       2       0       0       0       0       0       0       0
 18798 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18799 ;;Total ram usage:        2 bytes
 18800 ;; Hardware stack levels used:    1
 18801 ;; Hardware stack levels required when called:   12
 18802 ;; This function calls:
 18803 ;;		_TMR1_StartTimer
 18804 ;; This function is called by:
 18805 ;;		_SYSTEM_Initialize
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text76
 18810  004658                     __ptext76:
 18811                           	opt stack 0
 18812  004658                     _TMR1_Initialize:
 18813                           	opt stack 17
 18814                           
 18815                           ;tmr1.c: 68: T1CON = 0x00;
 18816                           
 18817                           ;incstack = 0
 18818  004658  0E00               	movlw	0
 18819  00465A  6ECD               	movwf	4045,c	;volatile
 18820                           
 18821                           ;tmr1.c: 71: T1GCON = 0x00;
 18822  00465C  0E00               	movlw	0
 18823  00465E  6ECC               	movwf	4044,c	;volatile
 18824                           
 18825                           ;tmr1.c: 74: TMR1H = 0xD0;
 18826  004660  0ED0               	movlw	208
 18827  004662  6ECF               	movwf	4047,c	;volatile
 18828                           
 18829                           ;tmr1.c: 77: TMR1L = 0x20;
 18830  004664  0E20               	movlw	32
 18831  004666  6ECE               	movwf	4046,c	;volatile
 18832                           
 18833                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 18834  004668  50CE               	movf	4046,w,c	;volatile
 18835  00466A  CFCF F0BE          	movff	4047,??_TMR1_Initialize	;volatile
 18836  00466E  0100               	movlb	0	; () banked
 18837  004670  6BBF               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 18838  004672  C0BE  F0BF         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 18839  004676  6BBE               	clrf	??_TMR1_Initialize& (0+255),b
 18840  004678  11BE               	iorwf	??_TMR1_Initialize& (0+255),w,b
 18841  00467A  6E3C               	movwf	_timer1ReloadVal,c	;volatile
 18842  00467C  51BF               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 18843  00467E  6E3D               	movwf	_timer1ReloadVal+1,c	;volatile
 18844                           
 18845                           ; BSR set to: 0
 18846                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 18847  004680  909E               	bcf	3998,0,c	;volatile
 18848                           
 18849                           ; BSR set to: 0
 18850                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 18851  004682  809D               	bsf	3997,0,c	;volatile
 18852                           
 18853                           ; BSR set to: 0
 18854                           ;tmr1.c: 89: TMR1_StartTimer();
 18855  004684  EC5E  F025         	call	_TMR1_StartTimer	;wreg free
 18856  004688  0012               	return		;funcret
 18857  00468A                     __end_of_TMR1_Initialize:
 18858                           	opt stack 0
 18859                           tblptru	equ	0xFF8
 18860                           tblptrh	equ	0xFF7
 18861                           tblptrl	equ	0xFF6
 18862                           tablat	equ	0xFF5
 18863                           prodh	equ	0xFF4
 18864                           prodl	equ	0xFF3
 18865                           intcon	equ	0xFF2
 18866                           indf0	equ	0xFEF
 18867                           postinc0	equ	0xFEE
 18868                           fsr0h	equ	0xFEA
 18869                           fsr0l	equ	0xFE9
 18870                           wreg	equ	0xFE8
 18871                           indf1	equ	0xFE7
 18872                           postdec1	equ	0xFE5
 18873                           fsr1h	equ	0xFE2
 18874                           fsr1l	equ	0xFE1
 18875                           indf2	equ	0xFDF
 18876                           postinc2	equ	0xFDE
 18877                           postdec2	equ	0xFDD
 18878                           plusw2	equ	0xFDB
 18879                           fsr2h	equ	0xFDA
 18880                           fsr2l	equ	0xFD9
 18881                           status	equ	0xFD8
 18882                           
 18883 ;; *************** function _TMR1_StartTimer *****************
 18884 ;; Defined at:
 18885 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;		None
 18888 ;; Auto vars:     Size  Location     Type
 18889 ;;		None
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  1    wreg      void 
 18892 ;; Registers used:
 18893 ;;		None
 18894 ;; Tracked objects:
 18895 ;;		On entry : 0/0
 18896 ;;		On exit  : 0/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18899 ;;      Params:         0       0       0       0       0       0       0       0       0
 18900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18903 ;;Total ram usage:        0 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; Hardware stack levels required when called:   11
 18906 ;; This function calls:
 18907 ;;		Nothing
 18908 ;; This function is called by:
 18909 ;;		_TMR1_Initialize
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           	psect	text77
 18914  004ABC                     __ptext77:
 18915                           	opt stack 0
 18916  004ABC                     _TMR1_StartTimer:
 18917                           	opt stack 17
 18918                           
 18919                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 18920                           
 18921                           ;incstack = 0
 18922  004ABC  80CD               	bsf	4045,0,c	;volatile
 18923  004ABE  0012               	return		;funcret
 18924  004AC0                     __end_of_TMR1_StartTimer:
 18925                           	opt stack 0
 18926                           tblptru	equ	0xFF8
 18927                           tblptrh	equ	0xFF7
 18928                           tblptrl	equ	0xFF6
 18929                           tablat	equ	0xFF5
 18930                           prodh	equ	0xFF4
 18931                           prodl	equ	0xFF3
 18932                           intcon	equ	0xFF2
 18933                           indf0	equ	0xFEF
 18934                           postinc0	equ	0xFEE
 18935                           fsr0h	equ	0xFEA
 18936                           fsr0l	equ	0xFE9
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postdec1	equ	0xFE5
 18940                           fsr1h	equ	0xFE2
 18941                           fsr1l	equ	0xFE1
 18942                           indf2	equ	0xFDF
 18943                           postinc2	equ	0xFDE
 18944                           postdec2	equ	0xFDD
 18945                           plusw2	equ	0xFDB
 18946                           fsr2h	equ	0xFDA
 18947                           fsr2l	equ	0xFD9
 18948                           status	equ	0xFD8
 18949                           
 18950 ;; *************** function _SPI_Initialize *****************
 18951 ;; Defined at:
 18952 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 18953 ;; Parameters:    Size  Location     Type
 18954 ;;		None
 18955 ;; Auto vars:     Size  Location     Type
 18956 ;;		None
 18957 ;; Return value:  Size  Location     Type
 18958 ;;                  1    wreg      void 
 18959 ;; Registers used:
 18960 ;;		wreg, status,2
 18961 ;; Tracked objects:
 18962 ;;		On entry : 0/0
 18963 ;;		On exit  : 0/0
 18964 ;;		Unchanged: 0/0
 18965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18966 ;;      Params:         0       0       0       0       0       0       0       0       0
 18967 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18968 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18969 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18970 ;;Total ram usage:        0 bytes
 18971 ;; Hardware stack levels used:    1
 18972 ;; Hardware stack levels required when called:   11
 18973 ;; This function calls:
 18974 ;;		Nothing
 18975 ;; This function is called by:
 18976 ;;		_SYSTEM_Initialize
 18977 ;; This function uses a non-reentrant model
 18978 ;;
 18979                           
 18980                           	psect	text78
 18981  0049F0                     __ptext78:
 18982                           	opt stack 0
 18983  0049F0                     _SPI_Initialize:
 18984                           	opt stack 18
 18985                           
 18986                           ;spi.c: 69: SSP1STAT = 0x00;
 18987                           
 18988                           ;incstack = 0
 18989  0049F0  0E00               	movlw	0
 18990  0049F2  6EC7               	movwf	4039,c	;volatile
 18991                           
 18992                           ;spi.c: 72: SSP1CON1 = 0x21;
 18993  0049F4  0E21               	movlw	33
 18994  0049F6  6EC6               	movwf	4038,c	;volatile
 18995                           
 18996                           ;spi.c: 75: SSP1ADD = 0x00;
 18997  0049F8  0E00               	movlw	0
 18998  0049FA  6EC8               	movwf	4040,c	;volatile
 18999                           
 19000                           ;spi.c: 77: CKP = 1;
 19001  0049FC  88C6               	bsf	4038,4,c	;volatile
 19002                           
 19003                           ;spi.c: 78: CKE = 0;
 19004  0049FE  9CC7               	bcf	4039,6,c	;volatile
 19005  004A00  0012               	return		;funcret
 19006  004A02                     __end_of_SPI_Initialize:
 19007                           	opt stack 0
 19008                           tblptru	equ	0xFF8
 19009                           tblptrh	equ	0xFF7
 19010                           tblptrl	equ	0xFF6
 19011                           tablat	equ	0xFF5
 19012                           prodh	equ	0xFF4
 19013                           prodl	equ	0xFF3
 19014                           intcon	equ	0xFF2
 19015                           indf0	equ	0xFEF
 19016                           postinc0	equ	0xFEE
 19017                           fsr0h	equ	0xFEA
 19018                           fsr0l	equ	0xFE9
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postdec1	equ	0xFE5
 19022                           fsr1h	equ	0xFE2
 19023                           fsr1l	equ	0xFE1
 19024                           indf2	equ	0xFDF
 19025                           postinc2	equ	0xFDE
 19026                           postdec2	equ	0xFDD
 19027                           plusw2	equ	0xFDB
 19028                           fsr2h	equ	0xFDA
 19029                           fsr2l	equ	0xFD9
 19030                           status	equ	0xFD8
 19031                           
 19032 ;; *************** function _PIN_MANAGER_Initialize *****************
 19033 ;; Defined at:
 19034 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 19035 ;; Parameters:    Size  Location     Type
 19036 ;;		None
 19037 ;; Auto vars:     Size  Location     Type
 19038 ;;		None
 19039 ;; Return value:  Size  Location     Type
 19040 ;;                  1    wreg      void 
 19041 ;; Registers used:
 19042 ;;		None
 19043 ;; Tracked objects:
 19044 ;;		On entry : 0/0
 19045 ;;		On exit  : 0/0
 19046 ;;		Unchanged: 0/0
 19047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19048 ;;      Params:         0       0       0       0       0       0       0       0       0
 19049 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19051 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19052 ;;Total ram usage:        0 bytes
 19053 ;; Hardware stack levels used:    1
 19054 ;; Hardware stack levels required when called:   11
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_moteApp_GoToSleep
 19059 ;;		_SYSTEM_Initialize
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           	psect	text79
 19064  0042C6                     __ptext79:
 19065                           	opt stack 0
 19066  0042C6                     _PIN_MANAGER_Initialize:
 19067                           	opt stack 16
 19068                           
 19069                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 19070                           
 19071                           ;incstack = 0
 19072  0042C6  8092               	bsf	3986,0,c	;volatile
 19073                           
 19074                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 19075  0042C8  8292               	bsf	3986,1,c	;volatile
 19076                           
 19077                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 19078  0042CA  8492               	bsf	3986,2,c	;volatile
 19079                           
 19080                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 19081  0042CC  8692               	bsf	3986,3,c	;volatile
 19082                           
 19083                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 19084  0042CE  9892               	bcf	3986,4,c	;volatile
 19085                           
 19086                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 19087  0042D0  9A92               	bcf	3986,5,c	;volatile
 19088                           
 19089                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 19090  0042D2  9C92               	bcf	3986,6,c	;volatile
 19091                           
 19092                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 19093  0042D4  9E92               	bcf	3986,7,c	;volatile
 19094                           
 19095                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 19096  0042D6  9093               	bcf	3987,0,c	;volatile
 19097                           
 19098                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 19099  0042D8  9293               	bcf	3987,1,c	;volatile
 19100                           
 19101                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 19102  0042DA  9493               	bcf	3987,2,c	;volatile
 19103                           
 19104                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 19105  0042DC  9693               	bcf	3987,3,c	;volatile
 19106                           
 19107                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 19108  0042DE  9A93               	bcf	3987,5,c	;volatile
 19109                           
 19110                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 19111  0042E0  8094               	bsf	3988,0,c	;volatile
 19112                           
 19113                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 19114  0042E2  8294               	bsf	3988,1,c	;volatile
 19115                           
 19116                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 19117  0042E4  8494               	bsf	3988,2,c	;volatile
 19118                           
 19119                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 19120  0042E6  9C94               	bcf	3988,6,c	;volatile
 19121                           
 19122                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 19123  0042E8  8E94               	bsf	3988,7,c	;volatile
 19124                           
 19125                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 19126  0042EA  8889               	bsf	3977,4,c	;volatile
 19127                           
 19128                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 19129  0042EC  9A89               	bcf	3977,5,c	;volatile
 19130                           
 19131                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 19132  0042EE  9C89               	bcf	3977,6,c	;volatile
 19133                           
 19134                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 19135  0042F0  9E89               	bcf	3977,7,c	;volatile
 19136                           
 19137                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 19138  0042F2  948A               	bcf	3978,2,c	;volatile
 19139                           
 19140                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 19141  0042F4  908A               	bcf	3978,0,c	;volatile
 19142                           
 19143                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 19144  0042F6  9A8A               	bcf	3978,5,c	;volatile
 19145                           
 19146                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 19147  0042F8  948B               	bcf	3979,2,c	;volatile
 19148                           
 19149                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 19150  0042FA  9C8B               	bcf	3979,6,c	;volatile
 19151                           
 19152                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 19153  0042FC  010F               	movlb	15	; () banked
 19154  0042FE  915B               	bcf	91,0,b	;volatile
 19155                           
 19156                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 19157  004300  835B               	bsf	91,1,b	;volatile
 19158                           
 19159                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 19160  004302  855B               	bsf	91,2,b	;volatile
 19161                           
 19162                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 19163  004304  875B               	bsf	91,3,b	;volatile
 19164                           
 19165                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 19166  004306  9F5D               	bcf	93,7,b	;volatile
 19167                           
 19168                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 19169  004308  9D5D               	bcf	93,6,b	;volatile
 19170                           
 19171                           ; BSR set to: 15
 19172  00430A  0012               	return		;funcret
 19173  00430C                     __end_of_PIN_MANAGER_Initialize:
 19174                           	opt stack 0
 19175                           tblptru	equ	0xFF8
 19176                           tblptrh	equ	0xFF7
 19177                           tblptrl	equ	0xFF6
 19178                           tablat	equ	0xFF5
 19179                           prodh	equ	0xFF4
 19180                           prodl	equ	0xFF3
 19181                           intcon	equ	0xFF2
 19182                           indf0	equ	0xFEF
 19183                           postinc0	equ	0xFEE
 19184                           fsr0h	equ	0xFEA
 19185                           fsr0l	equ	0xFE9
 19186                           wreg	equ	0xFE8
 19187                           indf1	equ	0xFE7
 19188                           postdec1	equ	0xFE5
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           postdec2	equ	0xFDD
 19194                           plusw2	equ	0xFDB
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199 ;; *************** function _OSCILLATOR_Initialize *****************
 19200 ;; Defined at:
 19201 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;		None
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;		None
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      void 
 19208 ;; Registers used:
 19209 ;;		wreg, status,2
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0
 19216 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19218 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19219 ;;Total ram usage:        0 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:   11
 19222 ;; This function calls:
 19223 ;;		Nothing
 19224 ;; This function is called by:
 19225 ;;		_SYSTEM_Initialize
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text80
 19230  00498A                     __ptext80:
 19231                           	opt stack 0
 19232  00498A                     _OSCILLATOR_Initialize:
 19233                           	opt stack 18
 19234                           
 19235                           ;mcc.c: 107: OSCTUNE = 0x80;
 19236                           
 19237                           ; BSR set to: 15
 19238                           ;incstack = 0
 19239  00498A  0E80               	movlw	128
 19240  00498C  6E9B               	movwf	3995,c	;volatile
 19241                           
 19242                           ;mcc.c: 108: OSCCON = 0x70;
 19243  00498E  0E70               	movlw	112
 19244  004990  6ED3               	movwf	4051,c	;volatile
 19245                           
 19246                           ;mcc.c: 109: OSCCON2 = 0x10;
 19247  004992  0E10               	movlw	16
 19248  004994  6ED2               	movwf	4050,c	;volatile
 19249  004996  AED2               	btfss	4050,7,c	;volatile
 19250  004998  D7FE               	goto	l1115
 19251                           
 19252                           ;mcc.c: 111: ACTCON = 0x90;
 19253  00499A  0E90               	movlw	144
 19254  00499C  6EB5               	movwf	4021,c	;volatile
 19255  00499E  0012               	return		;funcret
 19256  0049A0                     __end_of_OSCILLATOR_Initialize:
 19257                           	opt stack 0
 19258                           tblptru	equ	0xFF8
 19259                           tblptrh	equ	0xFF7
 19260                           tblptrl	equ	0xFF6
 19261                           tablat	equ	0xFF5
 19262                           prodh	equ	0xFF4
 19263                           prodl	equ	0xFF3
 19264                           intcon	equ	0xFF2
 19265                           indf0	equ	0xFEF
 19266                           postinc0	equ	0xFEE
 19267                           fsr0h	equ	0xFEA
 19268                           fsr0l	equ	0xFE9
 19269                           wreg	equ	0xFE8
 19270                           indf1	equ	0xFE7
 19271                           postdec1	equ	0xFE5
 19272                           fsr1h	equ	0xFE2
 19273                           fsr1l	equ	0xFE1
 19274                           indf2	equ	0xFDF
 19275                           postinc2	equ	0xFDE
 19276                           postdec2	equ	0xFDD
 19277                           plusw2	equ	0xFDB
 19278                           fsr2h	equ	0xFDA
 19279                           fsr2l	equ	0xFD9
 19280                           status	equ	0xFD8
 19281                           
 19282 ;; *************** function _EUSART_Initialize *****************
 19283 ;; Defined at:
 19284 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 19285 ;; Parameters:    Size  Location     Type
 19286 ;;		None
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;		None
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  1    wreg      void 
 19291 ;; Registers used:
 19292 ;;		wreg, status,2
 19293 ;; Tracked objects:
 19294 ;;		On entry : 0/0
 19295 ;;		On exit  : 0/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19298 ;;      Params:         0       0       0       0       0       0       0       0       0
 19299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19301 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19302 ;;Total ram usage:        0 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:   11
 19305 ;; This function calls:
 19306 ;;		Nothing
 19307 ;; This function is called by:
 19308 ;;		_SYSTEM_Initialize
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           	psect	text81
 19313  004582                     __ptext81:
 19314                           	opt stack 0
 19315  004582                     _EUSART_Initialize:
 19316                           	opt stack 18
 19317                           
 19318                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 19319                           
 19320                           ;incstack = 0
 19321  004582  9A9D               	bcf	3997,5,c	;volatile
 19322                           
 19323                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 19324  004584  989D               	bcf	3997,4,c	;volatile
 19325                           
 19326                           ;eusart.c: 85: BAUDCON = 0x48;
 19327  004586  0E48               	movlw	72
 19328  004588  6EB8               	movwf	4024,c	;volatile
 19329                           
 19330                           ;eusart.c: 88: RCSTA = 0x90;
 19331  00458A  0E90               	movlw	144
 19332  00458C  6EAB               	movwf	4011,c	;volatile
 19333                           
 19334                           ;eusart.c: 91: TXSTA = 0x26;
 19335  00458E  0E26               	movlw	38
 19336  004590  6EAC               	movwf	4012,c	;volatile
 19337                           
 19338                           ;eusart.c: 94: SPBRG = 0xD0;
 19339  004592  0ED0               	movlw	208
 19340  004594  6EAF               	movwf	4015,c	;volatile
 19341                           
 19342                           ;eusart.c: 99: SPBRGH = 0x00;
 19343  004596  0E00               	movlw	0
 19344  004598  6EB0               	movwf	4016,c	;volatile
 19345                           
 19346                           ;eusart.c: 103: eusartTxHead = 0;
 19347  00459A  0E00               	movlw	0
 19348  00459C  0100               	movlb	0	; () banked
 19349  00459E  6F9F               	movwf	_eusartTxHead& (0+255),b
 19350                           
 19351                           ;eusart.c: 104: eusartTxTail = 0;
 19352  0045A0  0E00               	movlw	0
 19353  0045A2  6F9E               	movwf	_eusartTxTail& (0+255),b
 19354                           
 19355                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 19356  0045A4  0E40               	movlw	64
 19357  0045A6  6F9D               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 19358                           
 19359                           ;eusart.c: 107: eusartRxHead = 0;
 19360  0045A8  0E00               	movlw	0
 19361  0045AA  6F9C               	movwf	_eusartRxHead& (0+255),b
 19362                           
 19363                           ;eusart.c: 108: eusartRxTail = 0;
 19364  0045AC  0E00               	movlw	0
 19365  0045AE  6F9B               	movwf	_eusartRxTail& (0+255),b
 19366                           
 19367                           ;eusart.c: 109: eusartRxCount = 0;
 19368  0045B0  0E00               	movlw	0
 19369  0045B2  6FB0               	movwf	_eusartRxCount& (0+255),b	;volatile
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 19373  0045B4  8A9D               	bsf	3997,5,c	;volatile
 19374                           
 19375                           ; BSR set to: 0
 19376                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 19377  0045B6  88AB               	bsf	4011,4,c	;volatile
 19378                           
 19379                           ; BSR set to: 0
 19380  0045B8  0012               	return		;funcret
 19381  0045BA                     __end_of_EUSART_Initialize:
 19382                           	opt stack 0
 19383                           tblptru	equ	0xFF8
 19384                           tblptrh	equ	0xFF7
 19385                           tblptrl	equ	0xFF6
 19386                           tablat	equ	0xFF5
 19387                           prodh	equ	0xFF4
 19388                           prodl	equ	0xFF3
 19389                           intcon	equ	0xFF2
 19390                           indf0	equ	0xFEF
 19391                           postinc0	equ	0xFEE
 19392                           fsr0h	equ	0xFEA
 19393                           fsr0l	equ	0xFE9
 19394                           wreg	equ	0xFE8
 19395                           indf1	equ	0xFE7
 19396                           postdec1	equ	0xFE5
 19397                           fsr1h	equ	0xFE2
 19398                           fsr1l	equ	0xFE1
 19399                           indf2	equ	0xFDF
 19400                           postinc2	equ	0xFDE
 19401                           postdec2	equ	0xFDD
 19402                           plusw2	equ	0xFDB
 19403                           fsr2h	equ	0xFDA
 19404                           fsr2l	equ	0xFD9
 19405                           status	equ	0xFD8
 19406                           
 19407 ;; *************** function _CMP1_Initialize *****************
 19408 ;; Defined at:
 19409 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 19410 ;; Parameters:    Size  Location     Type
 19411 ;;		None
 19412 ;; Auto vars:     Size  Location     Type
 19413 ;;		None
 19414 ;; Return value:  Size  Location     Type
 19415 ;;                  1    wreg      void 
 19416 ;; Registers used:
 19417 ;;		wreg, status,2
 19418 ;; Tracked objects:
 19419 ;;		On entry : 0/0
 19420 ;;		On exit  : 0/0
 19421 ;;		Unchanged: 0/0
 19422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19423 ;;      Params:         0       0       0       0       0       0       0       0       0
 19424 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19425 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19426 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19427 ;;Total ram usage:        0 bytes
 19428 ;; Hardware stack levels used:    1
 19429 ;; Hardware stack levels required when called:   11
 19430 ;; This function calls:
 19431 ;;		Nothing
 19432 ;; This function is called by:
 19433 ;;		_SYSTEM_Initialize
 19434 ;; This function uses a non-reentrant model
 19435 ;;
 19436                           
 19437                           	psect	text82
 19438  004A02                     __ptext82:
 19439                           	opt stack 0
 19440  004A02                     _CMP1_Initialize:
 19441                           	opt stack 18
 19442                           
 19443                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;incstack = 0
 19447  004A02  9CA0               	bcf	4000,6,c	;volatile
 19448                           
 19449                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 19450  004A04  0E9C               	movlw	156
 19451  004A06  6E98               	movwf	3992,c	;volatile
 19452                           
 19453                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 19454  004A08  8A9A               	bsf	3994,5,c	;volatile
 19455                           
 19456                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 19457  004A0A  929A               	bcf	3994,1,c	;volatile
 19458                           
 19459                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 19460  004A0C  969A               	bcf	3994,3,c	;volatile
 19461                           
 19462                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 19463  004A0E  9CA1               	bcf	4001,6,c	;volatile
 19464                           
 19465                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 19466  004A10  9CA0               	bcf	4000,6,c	;volatile
 19467  004A12  0012               	return		;funcret
 19468  004A14                     __end_of_CMP1_Initialize:
 19469                           	opt stack 0
 19470                           tblptru	equ	0xFF8
 19471                           tblptrh	equ	0xFF7
 19472                           tblptrl	equ	0xFF6
 19473                           tablat	equ	0xFF5
 19474                           prodh	equ	0xFF4
 19475                           prodl	equ	0xFF3
 19476                           intcon	equ	0xFF2
 19477                           indf0	equ	0xFEF
 19478                           postinc0	equ	0xFEE
 19479                           fsr0h	equ	0xFEA
 19480                           fsr0l	equ	0xFE9
 19481                           wreg	equ	0xFE8
 19482                           indf1	equ	0xFE7
 19483                           postdec1	equ	0xFE5
 19484                           fsr1h	equ	0xFE2
 19485                           fsr1l	equ	0xFE1
 19486                           indf2	equ	0xFDF
 19487                           postinc2	equ	0xFDE
 19488                           postdec2	equ	0xFDD
 19489                           plusw2	equ	0xFDB
 19490                           fsr2h	equ	0xFDA
 19491                           fsr2l	equ	0xFD9
 19492                           status	equ	0xFD8
 19493                           
 19494 ;; *************** function _ADC_Initialize *****************
 19495 ;; Defined at:
 19496 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 19497 ;; Parameters:    Size  Location     Type
 19498 ;;		None
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;		None
 19501 ;; Return value:  Size  Location     Type
 19502 ;;                  1    wreg      void 
 19503 ;; Registers used:
 19504 ;;		wreg, status,2
 19505 ;; Tracked objects:
 19506 ;;		On entry : 0/0
 19507 ;;		On exit  : 0/0
 19508 ;;		Unchanged: 0/0
 19509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19510 ;;      Params:         0       0       0       0       0       0       0       0       0
 19511 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19512 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19513 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19514 ;;Total ram usage:        0 bytes
 19515 ;; Hardware stack levels used:    1
 19516 ;; Hardware stack levels required when called:   11
 19517 ;; This function calls:
 19518 ;;		Nothing
 19519 ;; This function is called by:
 19520 ;;		_SYSTEM_Initialize
 19521 ;; This function uses a non-reentrant model
 19522 ;;
 19523                           
 19524                           	psect	text83
 19525  00492A                     __ptext83:
 19526                           	opt stack 0
 19527  00492A                     _ADC_Initialize:
 19528                           	opt stack 18
 19529                           
 19530                           ;adc.c: 68: VREFCON0 = 0b10100000;
 19531                           
 19532                           ;incstack = 0
 19533  00492A  0EA0               	movlw	160
 19534  00492C  6E7D               	movwf	3965,c	;volatile
 19535                           
 19536                           ;adc.c: 70: ADCON0 = 0x01;
 19537  00492E  0E01               	movlw	1
 19538  004930  6EC2               	movwf	4034,c	;volatile
 19539                           
 19540                           ;adc.c: 73: ADCON1 = 0x08;
 19541  004932  0E08               	movlw	8
 19542  004934  6EC1               	movwf	4033,c	;volatile
 19543                           
 19544                           ;adc.c: 76: ADCON2 = 0b10001110;
 19545  004936  0E8E               	movlw	142
 19546  004938  6EC0               	movwf	4032,c	;volatile
 19547                           
 19548                           ;adc.c: 79: ADRESL = 0x00;
 19549  00493A  0E00               	movlw	0
 19550  00493C  6EC3               	movwf	4035,c	;volatile
 19551                           
 19552                           ;adc.c: 82: ADRESH = 0x00;
 19553  00493E  0E00               	movlw	0
 19554  004940  6EC4               	movwf	4036,c	;volatile
 19555  004942  0012               	return		;funcret
 19556  004944                     __end_of_ADC_Initialize:
 19557                           	opt stack 0
 19558                           tblptru	equ	0xFF8
 19559                           tblptrh	equ	0xFF7
 19560                           tblptrl	equ	0xFF6
 19561                           tablat	equ	0xFF5
 19562                           prodh	equ	0xFF4
 19563                           prodl	equ	0xFF3
 19564                           intcon	equ	0xFF2
 19565                           indf0	equ	0xFEF
 19566                           postinc0	equ	0xFEE
 19567                           fsr0h	equ	0xFEA
 19568                           fsr0l	equ	0xFE9
 19569                           wreg	equ	0xFE8
 19570                           indf1	equ	0xFE7
 19571                           postdec1	equ	0xFE5
 19572                           fsr1h	equ	0xFE2
 19573                           fsr1l	equ	0xFE1
 19574                           indf2	equ	0xFDF
 19575                           postinc2	equ	0xFDE
 19576                           postdec2	equ	0xFDD
 19577                           plusw2	equ	0xFDB
 19578                           fsr2h	equ	0xFDA
 19579                           fsr2l	equ	0xFD9
 19580                           status	equ	0xFD8
 19581                           
 19582 ;; *************** function _MOTEapp_handlerState *****************
 19583 ;; Defined at:
 19584 ;;		line 170 in file "../Includes/Board/MOTEapp.c"
 19585 ;; Parameters:    Size  Location     Type
 19586 ;;  state           1    wreg     enum E5546
 19587 ;; Auto vars:     Size  Location     Type
 19588 ;;  state           1    0[BANK0 ] enum E5546
 19589 ;; Return value:  Size  Location     Type
 19590 ;;                  1    wreg      void 
 19591 ;; Registers used:
 19592 ;;		wreg
 19593 ;; Tracked objects:
 19594 ;;		On entry : 0/0
 19595 ;;		On exit  : 0/0
 19596 ;;		Unchanged: 0/0
 19597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19598 ;;      Params:         0       0       0       0       0       0       0       0       0
 19599 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19601 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19602 ;;Total ram usage:        1 bytes
 19603 ;; Hardware stack levels used:    1
 19604 ;; Hardware stack levels required when called:   11
 19605 ;; This function calls:
 19606 ;;		Nothing
 19607 ;; This function is called by:
 19608 ;;		_main
 19609 ;; This function uses a non-reentrant model
 19610 ;;
 19611                           
 19612                           	psect	text84
 19613  004A7C                     __ptext84:
 19614                           	opt stack 0
 19615  004A7C                     _MOTEapp_handlerState:
 19616                           	opt stack 19
 19617                           
 19618                           ;incstack = 0
 19619                           ;MOTEapp_handlerState@state stored from wreg
 19620  004A7C  0100               	movlb	0	; () banked
 19621  004A7E  6FBE               	movwf	MOTEapp_handlerState@state& (0+255),b
 19622                           
 19623                           ;MOTEapp.c: 172: moteState = state;
 19624  004A80  C0BE  F0FA         	movff	MOTEapp_handlerState@state,_moteState
 19625  004A84  0012               	return		;funcret
 19626  004A86                     __end_of_MOTEapp_handlerState:
 19627                           	opt stack 0
 19628                           tblptru	equ	0xFF8
 19629                           tblptrh	equ	0xFF7
 19630                           tblptrl	equ	0xFF6
 19631                           tablat	equ	0xFF5
 19632                           prodh	equ	0xFF4
 19633                           prodl	equ	0xFF3
 19634                           intcon	equ	0xFF2
 19635                           indf0	equ	0xFEF
 19636                           postinc0	equ	0xFEE
 19637                           fsr0h	equ	0xFEA
 19638                           fsr0l	equ	0xFE9
 19639                           wreg	equ	0xFE8
 19640                           indf1	equ	0xFE7
 19641                           postdec1	equ	0xFE5
 19642                           fsr1h	equ	0xFE2
 19643                           fsr1l	equ	0xFE1
 19644                           indf2	equ	0xFDF
 19645                           postinc2	equ	0xFDE
 19646                           postdec2	equ	0xFDD
 19647                           plusw2	equ	0xFDB
 19648                           fsr2h	equ	0xFDA
 19649                           fsr2l	equ	0xFD9
 19650                           status	equ	0xFD8
 19651                           
 19652 ;; *************** function _DATAEE_ReadByte *****************
 19653 ;; Defined at:
 19654 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 19655 ;; Parameters:    Size  Location     Type
 19656 ;;  bAdd            1    wreg     unsigned char 
 19657 ;; Auto vars:     Size  Location     Type
 19658 ;;  bAdd            1    0[BANK0 ] unsigned char 
 19659 ;; Return value:  Size  Location     Type
 19660 ;;                  1    wreg      unsigned char 
 19661 ;; Registers used:
 19662 ;;		wreg, status,2
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19668 ;;      Params:         0       0       0       0       0       0       0       0       0
 19669 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19671 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19672 ;;Total ram usage:        1 bytes
 19673 ;; Hardware stack levels used:    1
 19674 ;; Hardware stack levels required when called:   11
 19675 ;; This function calls:
 19676 ;;		Nothing
 19677 ;; This function is called by:
 19678 ;;		_main
 19679 ;; This function uses a non-reentrant model
 19680 ;;
 19681                           
 19682                           	psect	text85
 19683  0049A0                     __ptext85:
 19684                           	opt stack 0
 19685  0049A0                     _DATAEE_ReadByte:
 19686                           	opt stack 19
 19687                           
 19688                           ;incstack = 0
 19689                           ;DATAEE_ReadByte@bAdd stored from wreg
 19690  0049A0  0100               	movlb	0	; () banked
 19691  0049A2  6FBE               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 19692                           
 19693                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 19694  0049A4  C0BE  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 19695                           
 19696                           ;memory.c: 191: EECON1bits.CFGS = 0;
 19697  0049A8  9CA6               	bcf	4006,6,c	;volsfr
 19698                           
 19699                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 19700  0049AA  9EA6               	bcf	4006,7,c	;volsfr
 19701                           
 19702                           ;memory.c: 193: EECON1bits.RD = 1;
 19703  0049AC  80A6               	bsf	4006,0,c	;volsfr
 19704                           
 19705                           ;memory.c: 194: __nop();
 19706  0049AE  F000               	nop	
 19707                           
 19708                           ;memory.c: 195: __nop();
 19709  0049B0  F000               	nop	
 19710                           
 19711                           ;memory.c: 197: return (EEDATA);
 19712  0049B2  50A8               	movf	4008,w,c	;volatile
 19713  0049B4  0012               	return	
 19714  0049B6                     __end_of_DATAEE_ReadByte:
 19715                           	opt stack 0
 19716                           tblptru	equ	0xFF8
 19717                           tblptrh	equ	0xFF7
 19718                           tblptrl	equ	0xFF6
 19719                           tablat	equ	0xFF5
 19720                           prodh	equ	0xFF4
 19721                           prodl	equ	0xFF3
 19722                           intcon	equ	0xFF2
 19723                           indf0	equ	0xFEF
 19724                           postinc0	equ	0xFEE
 19725                           fsr0h	equ	0xFEA
 19726                           fsr0l	equ	0xFE9
 19727                           wreg	equ	0xFE8
 19728                           indf1	equ	0xFE7
 19729                           postdec1	equ	0xFE5
 19730                           fsr1h	equ	0xFE2
 19731                           fsr1l	equ	0xFE1
 19732                           indf2	equ	0xFDF
 19733                           postinc2	equ	0xFDE
 19734                           postdec2	equ	0xFDD
 19735                           plusw2	equ	0xFDB
 19736                           fsr2h	equ	0xFDA
 19737                           fsr2l	equ	0xFD9
 19738                           status	equ	0xFD8
 19739                           
 19740 ;; *************** function _INTERRUPT_InterruptManager *****************
 19741 ;; Defined at:
 19742 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;                  1    wreg      void 
 19749 ;; Registers used:
 19750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 0/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19758 ;;      Temps:         18       0       0       0       0       0       0       0       0
 19759 ;;      Totals:        18       0       0       0       0       0       0       0       0
 19760 ;;Total ram usage:       18 bytes
 19761 ;; Hardware stack levels used:    1
 19762 ;; Hardware stack levels required when called:   10
 19763 ;; This function calls:
 19764 ;;		_CMP1_ISR
 19765 ;;		_EUSART_Receive_ISR
 19766 ;;		_EUSART_Transmit_ISR
 19767 ;;		_TMR1_ISR
 19768 ;;		_TMRapp_Tick
 19769 ;;		_USBDeviceTasks
 19770 ;;		_USBapp_setrxByteFlag
 19771 ;; This function is called by:
 19772 ;;		Interrupt level 2
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           	psect	intcode
 19777  000008                     __pintcode:
 19778                           	opt stack 0
 19779  000008                     _INTERRUPT_InterruptManager:
 19780                           	opt stack 10
 19781                           
 19782                           ;incstack = 0
 19783  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19784  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 19785  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 19786  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 19787  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 19788  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 19789  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 19790  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 19791  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 19792  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 19793  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 19794  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 19795  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 19796  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 19797  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 19798  000042  C05C  F02E         	movff	btemp,??_INTERRUPT_InterruptManager+14
 19799  000046  C05D  F02F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 19800  00004A  C05E  F030         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 19801  00004E  C05F  F031         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 19802                           
 19803                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 19804  000052  B09D               	btfsc	3997,0,c	;volatile
 19805  000054  A09E               	btfss	3998,0,c	;volatile
 19806  000056  D005               	goto	i2l1074
 19807                           
 19808                           ;interrupt_manager.c: 59: {
 19809                           ;interrupt_manager.c: 60: TMR1_ISR();
 19810  000058  EC29  F025         	call	_TMR1_ISR	;wreg free
 19811                           
 19812                           ;interrupt_manager.c: 62: TMRapp_Tick();
 19813  00005C  EC59  F025         	call	_TMRapp_Tick	;wreg free
 19814                           
 19815                           ;interrupt_manager.c: 63: }
 19816  000060  D016               	goto	i2l1081
 19817  000062                     i2l1074:
 19818                           
 19819                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 19820  000062  BA9D               	btfsc	3997,5,c	;volatile
 19821  000064  AA9E               	btfss	3998,5,c	;volatile
 19822  000066  D005               	goto	i2l1076
 19823                           
 19824                           ;interrupt_manager.c: 65: {
 19825                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 19826  000068  EC4C  F025         	call	_USBapp_setrxByteFlag	;wreg free
 19827                           
 19828                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 19829  00006C  EC8D  F023         	call	_EUSART_Receive_ISR	;wreg free
 19830                           
 19831                           ;interrupt_manager.c: 68: }
 19832  000070  D00E               	goto	i2l1081
 19833  000072                     i2l1076:
 19834                           
 19835                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 19836  000072  B89D               	btfsc	3997,4,c	;volatile
 19837  000074  A89E               	btfss	3998,4,c	;volatile
 19838  000076  D003               	goto	i2l1078
 19839                           
 19840                           ;interrupt_manager.c: 70: {
 19841                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 19842  000078  EC75  F023         	call	_EUSART_Transmit_ISR	;wreg free
 19843                           
 19844                           ;interrupt_manager.c: 72: }
 19845  00007C  D008               	goto	i2l1081
 19846  00007E                     i2l1078:
 19847                           
 19848                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 19849  00007E  BCA0               	btfsc	4000,6,c	;volatile
 19850  000080  ACA1               	btfss	4001,6,c	;volatile
 19851  000082  D003               	goto	i2l1080
 19852                           
 19853                           ;interrupt_manager.c: 74: {
 19854                           ;interrupt_manager.c: 75: CMP1_ISR();
 19855  000084  EC60  F025         	call	_CMP1_ISR	;wreg free
 19856                           
 19857                           ;interrupt_manager.c: 76: }
 19858  000088  D002               	goto	i2l1081
 19859  00008A                     i2l1080:
 19860                           
 19861                           ;interrupt_manager.c: 77: else
 19862                           ;interrupt_manager.c: 78: {
 19863                           ;interrupt_manager.c: 80: USBDeviceTasks();
 19864  00008A  EC6E  F00F         	call	_USBDeviceTasks	;wreg free
 19865  00008E                     i2l1081:
 19866  00008E  C031  F05F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 19867  000092  C030  F05E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 19868  000096  C02F  F05D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 19869  00009A  C02E  F05C         	movff	??_INTERRUPT_InterruptManager+14,btemp
 19870  00009E  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 19871  0000A2  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 19872  0000A6  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 19873  0000AA  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 19874  0000AE  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 19875  0000B2  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 19876  0000B6  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 19877  0000BA  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 19878  0000BE  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 19879  0000C2  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 19880  0000C6  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 19881  0000CA  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 19882  0000CE  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 19883  0000D2  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 19884  0000D6  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19885  0000D8  0011               	retfie		f
 19886  0000DA                     __end_of_INTERRUPT_InterruptManager:
 19887                           	opt stack 0
 19888                           pclatu	equ	0xFFB
 19889                           pclath	equ	0xFFA
 19890                           tblptru	equ	0xFF8
 19891                           tblptrh	equ	0xFF7
 19892                           tblptrl	equ	0xFF6
 19893                           tablat	equ	0xFF5
 19894                           prodh	equ	0xFF4
 19895                           prodl	equ	0xFF3
 19896                           intcon	equ	0xFF2
 19897                           indf0	equ	0xFEF
 19898                           postinc0	equ	0xFEE
 19899                           fsr0h	equ	0xFEA
 19900                           fsr0l	equ	0xFE9
 19901                           wreg	equ	0xFE8
 19902                           indf1	equ	0xFE7
 19903                           postdec1	equ	0xFE5
 19904                           fsr1h	equ	0xFE2
 19905                           fsr1l	equ	0xFE1
 19906                           indf2	equ	0xFDF
 19907                           postinc2	equ	0xFDE
 19908                           postdec2	equ	0xFDD
 19909                           plusw2	equ	0xFDB
 19910                           fsr2h	equ	0xFDA
 19911                           fsr2l	equ	0xFD9
 19912                           status	equ	0xFD8
 19913                           
 19914 ;; *************** function _USBapp_setrxByteFlag *****************
 19915 ;; Defined at:
 19916 ;;		line 249 in file "../Includes/Board/USBapp.c"
 19917 ;; Parameters:    Size  Location     Type
 19918 ;;		None
 19919 ;; Auto vars:     Size  Location     Type
 19920 ;;		None
 19921 ;; Return value:  Size  Location     Type
 19922 ;;                  1    wreg      void 
 19923 ;; Registers used:
 19924 ;;		wreg, status,2
 19925 ;; Tracked objects:
 19926 ;;		On entry : 0/0
 19927 ;;		On exit  : 0/0
 19928 ;;		Unchanged: 0/0
 19929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19930 ;;      Params:         0       0       0       0       0       0       0       0       0
 19931 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19932 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19933 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19934 ;;Total ram usage:        0 bytes
 19935 ;; Hardware stack levels used:    1
 19936 ;; This function calls:
 19937 ;;		Nothing
 19938 ;; This function is called by:
 19939 ;;		_INTERRUPT_InterruptManager
 19940 ;; This function uses a non-reentrant model
 19941 ;;
 19942                           
 19943                           	psect	text87
 19944  004A98                     __ptext87:
 19945                           	opt stack 0
 19946  004A98                     _USBapp_setrxByteFlag:
 19947                           	opt stack 19
 19948                           
 19949                           ;USBapp.c: 251: rxByteFlag = 1;
 19950                           
 19951                           ;incstack = 0
 19952  004A98  0E01               	movlw	1
 19953  004A9A  0100               	movlb	0	; () banked
 19954  004A9C  6FA5               	movwf	_rxByteFlag& (0+255),b	;volatile
 19955                           
 19956                           ; BSR set to: 0
 19957  004A9E  0012               	return		;funcret
 19958  004AA0                     __end_of_USBapp_setrxByteFlag:
 19959                           	opt stack 0
 19960                           pclatu	equ	0xFFB
 19961                           pclath	equ	0xFFA
 19962                           tblptru	equ	0xFF8
 19963                           tblptrh	equ	0xFF7
 19964                           tblptrl	equ	0xFF6
 19965                           tablat	equ	0xFF5
 19966                           prodh	equ	0xFF4
 19967                           prodl	equ	0xFF3
 19968                           intcon	equ	0xFF2
 19969                           indf0	equ	0xFEF
 19970                           postinc0	equ	0xFEE
 19971                           fsr0h	equ	0xFEA
 19972                           fsr0l	equ	0xFE9
 19973                           wreg	equ	0xFE8
 19974                           indf1	equ	0xFE7
 19975                           postdec1	equ	0xFE5
 19976                           fsr1h	equ	0xFE2
 19977                           fsr1l	equ	0xFE1
 19978                           indf2	equ	0xFDF
 19979                           postinc2	equ	0xFDE
 19980                           postdec2	equ	0xFDD
 19981                           plusw2	equ	0xFDB
 19982                           fsr2h	equ	0xFDA
 19983                           fsr2l	equ	0xFD9
 19984                           status	equ	0xFD8
 19985                           
 19986 ;; *************** function _USBDeviceTasks *****************
 19987 ;; Defined at:
 19988 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 19989 ;; Parameters:    Size  Location     Type
 19990 ;;		None
 19991 ;; Auto vars:     Size  Location     Type
 19992 ;;  i               1   30[COMRAM] unsigned char 
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  1    wreg      void 
 19995 ;; Registers used:
 19996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20002 ;;      Params:         0       0       0       0       0       0       0       0       0
 20003 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20005 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20006 ;;Total ram usage:        1 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:    9
 20009 ;; This function calls:
 20010 ;;		_USBCtrlEPAllowStatusStage
 20011 ;;		_USBCtrlEPService
 20012 ;;		_USBStallHandler
 20013 ;;		_USBSuspend
 20014 ;;		_USBWakeFromSuspend
 20015 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20016 ;;		i2_USBDeviceInit
 20017 ;; This function is called by:
 20018 ;;		_INTERRUPT_InterruptManager
 20019 ;; This function uses a non-reentrant model
 20020 ;;
 20021                           
 20022                           	psect	text88
 20023  001EDC                     __ptext88:
 20024                           	opt stack 0
 20025  001EDC                     _USBDeviceTasks:
 20026                           	opt stack 10
 20027                           
 20028                           ;usb_device.c: 430: uint8_t i;
 20029                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 20030                           
 20031                           ; BSR set to: 0
 20032                           ;incstack = 0
 20033  001EDC  0100               	movlb	0	; () banked
 20034  001EDE  05A8               	decf	_USBDeviceState& (0+255),w,b	;volatile
 20035  001EE0  B4D8               	btfsc	status,2,c
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;usb_device.c: 433: {
 20039                           ;usb_device.c: 443: if(!UCONbits.SE0)
 20040  001EE2  BA60               	btfsc	3936,5,c	;volatile
 20041  001EE4  D006               	goto	i2l1543
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;usb_device.c: 444: {
 20045                           ;usb_device.c: 445: {UIR = 0;};
 20046  001EE6  0E00               	movlw	0
 20047  001EE8  6E65               	movwf	3941,c	;volatile
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 20051  001EEA  8064               	bsf	3940,0,c	;volatile
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 20055  001EEC  8864               	bsf	3940,4,c	;volatile
 20056                           
 20057                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 20058  001EEE  0E02               	movlw	2
 20059  001EF0  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 20060  001EF2                     i2l1543:
 20061                           
 20062                           ; BSR set to: 0
 20063                           ;usb_device.c: 449: }
 20064                           ;usb_device.c: 450: }
 20065                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 20066                           
 20067                           ; BSR set to: 0
 20068                           
 20069                           ; BSR set to: 0
 20070  001EF2  B465               	btfsc	3941,2,c	;volatile
 20071                           
 20072                           ; BSR set to: 0
 20073  001EF4  A464               	btfss	3940,2,c	;volatile
 20074  001EF6  D003               	goto	i2l1544
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;usb_device.c: 455: {
 20078                           ;usb_device.c: 456: (UIR &= 0xFB);
 20079  001EF8  9465               	bcf	3941,2,c	;volatile
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;usb_device.c: 457: USBWakeFromSuspend();
 20083  001EFA  ECBC  F023         	call	_USBWakeFromSuspend	;wreg free
 20084  001EFE                     i2l1544:
 20085                           
 20086                           ;usb_device.c: 458: }
 20087                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 20088  001EFE  A260               	btfss	3936,1,c	;volatile
 20089  001F00  D002               	goto	i2l1545
 20090                           
 20091                           ;usb_device.c: 464: {
 20092                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 20093  001F02  94A4               	bcf	4004,2,c	;volatile
 20094                           
 20095                           ;usb_device.c: 466: return;
 20096  001F04  0012               	return	
 20097  001F06                     i2l1545:
 20098                           
 20099                           ;usb_device.c: 467: }
 20100                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 20101  001F06  B065               	btfsc	3941,0,c	;volatile
 20102  001F08  A064               	btfss	3940,0,c	;volatile
 20103  001F0A  D007               	goto	i2l1547
 20104                           
 20105                           ;usb_device.c: 480: {
 20106                           ;usb_device.c: 481: USBDeviceInit();
 20107  001F0C  EC34  F011         	call	i2_USBDeviceInit	;wreg free
 20108                           
 20109                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 20110  001F10  84A3               	bsf	4003,2,c	;volatile
 20111                           
 20112                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 20113  001F12  0E04               	movlw	4
 20114  001F14  0100               	movlb	0	; () banked
 20115  001F16  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;usb_device.c: 489: (UIR &= 0xFE);
 20119  001F18  9065               	bcf	3941,0,c	;volatile
 20120  001F1A                     i2l1547:
 20121                           
 20122                           ;usb_device.c: 490: }
 20123                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 20124                           
 20125                           ; BSR set to: 0
 20126  001F1A  B865               	btfsc	3941,4,c	;volatile
 20127  001F1C  A864               	btfss	3940,4,c	;volatile
 20128  001F1E  D003               	goto	i2l1548
 20129                           
 20130                           ;usb_device.c: 496: {
 20131                           ;usb_device.c: 497: USBSuspend();
 20132  001F20  ECFD  F023         	call	_USBSuspend	;wreg free
 20133                           
 20134                           ;usb_device.c: 498: (UIR &= 0xEF);
 20135  001F24  9865               	bcf	3941,4,c	;volatile
 20136  001F26                     i2l1548:
 20137                           
 20138                           ;usb_device.c: 499: }
 20139                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 20140  001F26  AC65               	btfss	3941,6,c	;volatile
 20141  001F28  D018               	goto	i2l1552
 20142                           
 20143                           ;usb_device.c: 502: {
 20144                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 20145  001F2A  AC64               	btfss	3940,6,c	;volatile
 20146  001F2C  D00E               	goto	i2l1550
 20147                           
 20148                           ;usb_device.c: 504: {
 20149                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 20150  001F2E  0E00               	movlw	0
 20151  001F30  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20152  001F32  0E73               	movlw	115
 20153  001F34  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20154  001F36  0E00               	movlw	0
 20155  001F38  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20156  001F3A  0E00               	movlw	0
 20157  001F3C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20158  001F3E  0E00               	movlw	0
 20159  001F40  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20160  001F42  0E01               	movlw	1
 20161  001F44  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20162  001F46  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20163  001F4A                     i2l1550:
 20164                           
 20165                           ;usb_device.c: 506: }
 20166                           ;usb_device.c: 507: (UIR &= 0xBF);
 20167  001F4A  9C65               	bcf	3941,6,c	;volatile
 20168                           
 20169                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 20170  001F4C  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 20171  001F4E  A4D8               	btfss	status,2,c
 20172                           
 20173                           ;usb_device.c: 513: {
 20174                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 20175  001F50  0646               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 20176                           
 20177                           ;usb_device.c: 515: }
 20178                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 20179  001F52  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 20180  001F54  B4D8               	btfsc	status,2,c
 20181                           
 20182                           ;usb_device.c: 522: {
 20183                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 20184  001F56  EC18  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20185  001F5A                     i2l1552:
 20186                           
 20187                           ;usb_device.c: 524: }
 20188                           ;usb_device.c: 525: }
 20189                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 20190  001F5A  BA65               	btfsc	3941,5,c	;volatile
 20191  001F5C  AA64               	btfss	3940,5,c	;volatile
 20192  001F5E  D002               	goto	i2l1553
 20193                           
 20194                           ;usb_device.c: 528: {
 20195                           ;usb_device.c: 529: USBStallHandler();
 20196  001F60  ECEB  F021         	call	_USBStallHandler	;wreg free
 20197  001F64                     i2l1553:
 20198                           
 20199                           ;usb_device.c: 530: }
 20200                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 20201  001F64  B265               	btfsc	3941,1,c	;volatile
 20202  001F66  A264               	btfss	3940,1,c	;volatile
 20203  001F68  D00F               	goto	i2l1554
 20204                           
 20205                           ;usb_device.c: 533: {
 20206                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 20207  001F6A  0E7F               	movlw	127
 20208  001F6C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20209  001F6E  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20210  001F70  0E00               	movlw	0
 20211  001F72  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20212  001F74  0E00               	movlw	0
 20213  001F76  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20214  001F78  0E00               	movlw	0
 20215  001F7A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20216  001F7C  0E01               	movlw	1
 20217  001F7E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20218  001F80  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20219                           
 20220                           ;usb_device.c: 535: {UEIR = 0;};
 20221  001F84  0E00               	movlw	0
 20222  001F86  6E67               	movwf	3943,c	;volatile
 20223  001F88                     i2l1554:
 20224                           
 20225                           ;usb_device.c: 536: }
 20226                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 20227  001F88  0E04               	movlw	4
 20228  001F8A  0100               	movlb	0	; () banked
 20229  001F8C  61A8               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 20230  001F8E  D002               	goto	i2l1555
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;usb_device.c: 544: {
 20234                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 20235  001F90  94A4               	bcf	4004,2,c	;volatile
 20236                           
 20237                           ;usb_device.c: 546: return;
 20238  001F92  0012               	return	
 20239  001F94                     i2l1555:
 20240                           
 20241                           ; BSR set to: 0
 20242                           ;usb_device.c: 547: }
 20243                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 20244  001F94  A664               	btfss	3940,3,c	;volatile
 20245  001F96  D039               	goto	i2u803_40
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;usb_device.c: 553: {
 20249                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 20250  001F98  0E00               	movlw	0
 20251  001F9A  6E1F               	movwf	USBDeviceTasks@i,c
 20252  001F9C                     i2l9575:
 20253                           
 20254                           ; BSR set to: 0
 20255  001F9C  0E03               	movlw	3
 20256  001F9E  641F               	cpfsgt	USBDeviceTasks@i,c
 20257  001FA0  D001               	goto	i2l1557
 20258  001FA2  D033               	goto	i2u803_40
 20259  001FA4                     i2l1557:
 20260                           
 20261                           ;usb_device.c: 555: {
 20262                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 20263  001FA4  A665               	btfss	3941,3,c	;volatile
 20264  001FA6  D031               	goto	i2u803_40
 20265                           
 20266                           ;usb_device.c: 557: {
 20267                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 20268  001FA8  CF61 F059          	movff	3937,_USTATcopy	;volatile
 20269                           
 20270                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 20271  001FAC  3059               	rrcf	_USTATcopy,w,c	;volatile
 20272  001FAE  32E8               	rrcf	wreg,f,c
 20273  001FB0  32E8               	rrcf	wreg,f,c
 20274  001FB2  0B0F               	andlw	15
 20275  001FB4  6E48               	movwf	_endpoint_number,c	;volatile
 20276                           
 20277                           ;usb_device.c: 562: (UIR &= 0xF7);
 20278  001FB6  9665               	bcf	3941,3,c	;volatile
 20279                           
 20280                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 20281  001FB8  B459               	btfsc	_USTATcopy,2,c	;volatile
 20282  001FBA  D007               	goto	i2l1560
 20283                           
 20284                           ;usb_device.c: 567: {
 20285                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 20286  001FBC  5048               	movf	_endpoint_number,w,c	;volatile
 20287  001FBE  0D01               	mullw	1
 20288  001FC0  0E84               	movlw	low _ep_data_out
 20289  001FC2  24F3               	addwf	prodl,w,c
 20290  001FC4  6ED9               	movwf	fsr2l,c
 20291  001FC6  0E00               	movlw	high _ep_data_out
 20292  001FC8  D006               	goto	L19
 20293  001FCA                     i2l1560:
 20294                           
 20295                           ;usb_device.c: 570: else
 20296                           ;usb_device.c: 571: {
 20297                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 20298                           
 20299                           ; BSR set to: 0
 20300  001FCA  5048               	movf	_endpoint_number,w,c	;volatile
 20301  001FCC  0D01               	mullw	1
 20302  001FCE  0E87               	movlw	low _ep_data_in
 20303  001FD0  24F3               	addwf	prodl,w,c
 20304  001FD2  6ED9               	movwf	fsr2l,c
 20305  001FD4  0E00               	movlw	high _ep_data_in
 20306  001FD6                     L19:
 20307  001FD6  20F4               	addwfc	prodh,w,c
 20308  001FD8  6EDA               	movwf	fsr2h,c
 20309  001FDA  0100               	movlb	0	; () banked
 20310  001FDC  70DF               	btg	indf2,0,c
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;usb_device.c: 573: }
 20314                           ;usb_device.c: 577: if(endpoint_number == 0)
 20315                           
 20316                           ; BSR set to: 0
 20317  001FDE  5048               	movf	_endpoint_number,w,c	;volatile
 20318  001FE0  A4D8               	btfss	status,2,c
 20319  001FE2  D003               	goto	i2l1562
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;usb_device.c: 578: {
 20323                           ;usb_device.c: 579: USBCtrlEPService();
 20324  001FE4  ECE7  F016         	call	_USBCtrlEPService	;wreg free
 20325                           
 20326                           ;usb_device.c: 580: }
 20327  001FE8  D00E               	goto	i2l1564
 20328  001FEA                     i2l1562:
 20329                           
 20330                           ;usb_device.c: 581: else
 20331                           ;usb_device.c: 582: {
 20332                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 20333  001FEA  0E00               	movlw	0
 20334  001FEC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20335  001FEE  0E72               	movlw	114
 20336  001FF0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20337  001FF2  0E59               	movlw	low _USTATcopy
 20338  001FF4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20339  001FF6  0E00               	movlw	high _USTATcopy
 20340  001FF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20341  001FFA  0E00               	movlw	0
 20342  001FFC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20343  001FFE  0E00               	movlw	0
 20344  002000  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20345  002002  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20346  002006                     i2l1564:
 20347  002006  2A1F               	incf	USBDeviceTasks@i,f,c
 20348  002008  D7C9               	goto	i2l9575
 20349  00200A                     i2u803_40:
 20350                           
 20351                           ;usb_device.c: 589: }
 20352                           ;usb_device.c: 590: }
 20353                           ;usb_device.c: 591: }
 20354                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 20355  00200A  94A4               	bcf	4004,2,c	;volatile
 20356  00200C  0012               	return		;funcret
 20357  00200E                     __end_of_USBDeviceTasks:
 20358                           	opt stack 0
 20359                           pclatu	equ	0xFFB
 20360                           pclath	equ	0xFFA
 20361                           tblptru	equ	0xFF8
 20362                           tblptrh	equ	0xFF7
 20363                           tblptrl	equ	0xFF6
 20364                           tablat	equ	0xFF5
 20365                           prodh	equ	0xFF4
 20366                           prodl	equ	0xFF3
 20367                           intcon	equ	0xFF2
 20368                           indf0	equ	0xFEF
 20369                           postinc0	equ	0xFEE
 20370                           fsr0h	equ	0xFEA
 20371                           fsr0l	equ	0xFE9
 20372                           wreg	equ	0xFE8
 20373                           indf1	equ	0xFE7
 20374                           postdec1	equ	0xFE5
 20375                           fsr1h	equ	0xFE2
 20376                           fsr1l	equ	0xFE1
 20377                           indf2	equ	0xFDF
 20378                           postinc2	equ	0xFDE
 20379                           postdec2	equ	0xFDD
 20380                           plusw2	equ	0xFDB
 20381                           fsr2h	equ	0xFDA
 20382                           fsr2l	equ	0xFD9
 20383                           status	equ	0xFD8
 20384                           
 20385 ;; *************** function i2_USBDeviceInit *****************
 20386 ;; Defined at:
 20387 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;		None
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  1    wreg      void 
 20394 ;; Registers used:
 20395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0
 20402 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20403 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20404 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20405 ;;Total ram usage:        1 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:    1
 20408 ;; This function calls:
 20409 ;;		i2_memset
 20410 ;; This function is called by:
 20411 ;;		_USBDeviceTasks
 20412 ;; This function uses a non-reentrant model
 20413 ;;
 20414                           
 20415                           	psect	text89
 20416  002268                     __ptext89:
 20417                           	opt stack 0
 20418  002268                     i2_USBDeviceInit:
 20419                           	opt stack 17
 20420                           
 20421                           ;usb_device.c: 239: uint8_t i;
 20422                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 20423                           
 20424                           ;incstack = 0
 20425  002268  94A3               	bcf	4003,2,c	;volatile
 20426                           
 20427                           ;usb_device.c: 244: {UEIR = 0;};
 20428  00226A  0E00               	movlw	0
 20429  00226C  6E67               	movwf	3943,c	;volatile
 20430                           
 20431                           ;usb_device.c: 247: {UIR = 0;};
 20432  00226E  0E00               	movlw	0
 20433  002270  6E65               	movwf	3941,c	;volatile
 20434                           
 20435                           ;usb_device.c: 250: UEP0 = 0;
 20436  002272  0E00               	movlw	0
 20437  002274  6E6A               	movwf	3946,c	;volatile
 20438                           
 20439                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 20440  002276  0E6B               	movlw	107
 20441  002278  6E01               	movwf	i2memset@p1,c
 20442  00227A  0E0F               	movlw	15
 20443  00227C  6E02               	movwf	i2memset@p1+1,c
 20444  00227E  0E00               	movlw	0
 20445  002280  6E04               	movwf	i2memset@c+1,c
 20446  002282  0E00               	movlw	0
 20447  002284  6E03               	movwf	i2memset@c,c
 20448  002286  0E00               	movlw	0
 20449  002288  6E06               	movwf	i2memset@n+1,c
 20450  00228A  0E02               	movlw	2
 20451  00228C  6E05               	movwf	i2memset@n,c
 20452  00228E  ECD3  F023         	call	i2_memset	;wreg free
 20453                           
 20454                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 20455  002292  0E16               	movlw	22
 20456  002294  6E62               	movwf	3938,c	;volatile
 20457  002296  0E9F               	movlw	159
 20458  002298  6E66               	movwf	3942,c	;volatile
 20459  00229A  0E7B               	movlw	123
 20460  00229C  6E64               	movwf	3940,c	;volatile
 20461                           
 20462                           ;usb_device.c: 257: ;
 20463                           ;usb_device.c: 260: ;
 20464                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 20465  00229E  0E00               	movlw	0
 20466  0022A0  6E09               	movwf	i2USBDeviceInit@i,c
 20467  0022A2                     i2l9123:
 20468  0022A2  0E0B               	movlw	11
 20469  0022A4  6409               	cpfsgt	i2USBDeviceInit@i,c
 20470  0022A6  D001               	goto	i2l1532
 20471  0022A8  D00E               	goto	i2u743_40
 20472  0022AA                     i2l1532:
 20473                           
 20474                           ;usb_device.c: 264: {
 20475                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 20476  0022AA  5009               	movf	i2USBDeviceInit@i,w,c
 20477  0022AC  0D04               	mullw	4
 20478  0022AE  0E00               	movlw	0
 20479  0022B0  24F3               	addwf	prodl,w,c
 20480  0022B2  6ED9               	movwf	fsr2l,c
 20481  0022B4  0E04               	movlw	4
 20482  0022B6  20F4               	addwfc	prodh,w,c
 20483  0022B8  6EDA               	movwf	fsr2h,c
 20484  0022BA  6ADE               	clrf	postinc2,c
 20485  0022BC  6ADE               	clrf	postinc2,c
 20486  0022BE  6ADE               	clrf	postinc2,c
 20487  0022C0  6ADD               	clrf	postdec2,c
 20488  0022C2  2A09               	incf	i2USBDeviceInit@i,f,c
 20489  0022C4  D7EE               	goto	i2l9123
 20490  0022C6                     i2u743_40:
 20491                           
 20492                           ;usb_device.c: 266: }
 20493                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 20494  0022C6  8C60               	bsf	3936,6,c	;volatile
 20495                           
 20496                           ;usb_device.c: 272: UADDR = 0x00;
 20497  0022C8  0E00               	movlw	0
 20498  0022CA  6E63               	movwf	3939,c	;volatile
 20499                           
 20500                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 20501  0022CC  9860               	bcf	3936,4,c	;volatile
 20502                           
 20503                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 20504  0022CE  9C60               	bcf	3936,6,c	;volatile
 20505                           
 20506                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 20507  0022D0  D00A               	goto	i2l1534
 20508  0022D2                     
 20509                           ;usb_device.c: 282: {
 20510                           ;usb_device.c: 283: (UIR &= 0xF7);
 20511  0022D2  9665               	bcf	3941,3,c	;volatile
 20512                           
 20513                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 20514  0022D4  0E00               	movlw	0
 20515  0022D6  0100               	movlb	0	; () banked
 20516  0022D8  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 20517                           
 20518                           ; BSR set to: 0
 20519                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 20520  0022DA  0E00               	movlw	0
 20521  0022DC  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 20522                           
 20523                           ; BSR set to: 0
 20524                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 20525  0022DE  0E00               	movlw	0
 20526  0022E0  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 20527  0022E2  0E00               	movlw	0
 20528  0022E4  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 20529  0022E6                     i2l1534:
 20530                           
 20531                           ; BSR set to: 0
 20532  0022E6  B665               	btfsc	3941,3,c	;volatile
 20533  0022E8  D7F4               	goto	i2l1535
 20534                           
 20535                           ;usb_device.c: 288: }
 20536                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 20537  0022EA  0E01               	movlw	1
 20538  0022EC  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 20539                           
 20540                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 20541  0022EE  0E01               	movlw	1
 20542  0022F0  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 20543                           
 20544                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 20545  0022F2  0E00               	movlw	0
 20546  0022F4  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 20547                           
 20548                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 20549  0022F6  0E00               	movlw	0
 20550  0022F8  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 20551                           
 20552                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 20553  0022FA  0E00               	movlw	0
 20554  0022FC  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 20555                           
 20556                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 20557  0022FE  0E00               	movlw	0
 20558  002300  6E09               	movwf	i2USBDeviceInit@i,c
 20559  002302                     i2l9151:
 20560  002302  0E02               	movlw	2
 20561  002304  6409               	cpfsgt	i2USBDeviceInit@i,c
 20562  002306  D001               	goto	i2l1537
 20563  002308  D02E               	goto	i2u746_40
 20564  00230A                     i2l1537:
 20565                           
 20566                           ;usb_device.c: 302: {
 20567                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 20568  00230A  5009               	movf	i2USBDeviceInit@i,w,c
 20569  00230C  0D02               	mullw	2
 20570  00230E  0E6E               	movlw	low _pBDTEntryIn
 20571  002310  24F3               	addwf	prodl,w,c
 20572  002312  6ED9               	movwf	fsr2l,c
 20573  002314  0E00               	movlw	high _pBDTEntryIn
 20574  002316  20F4               	addwfc	prodh,w,c
 20575  002318  6EDA               	movwf	fsr2h,c
 20576  00231A  0E00               	movlw	0
 20577  00231C  6EDE               	movwf	postinc2,c
 20578  00231E  0E00               	movlw	0
 20579  002320  6EDD               	movwf	postdec2,c
 20580                           
 20581                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 20582  002322  5009               	movf	i2USBDeviceInit@i,w,c
 20583  002324  0D02               	mullw	2
 20584  002326  0E74               	movlw	low _pBDTEntryOut
 20585  002328  24F3               	addwf	prodl,w,c
 20586  00232A  6ED9               	movwf	fsr2l,c
 20587  00232C  0E00               	movlw	high _pBDTEntryOut
 20588  00232E  20F4               	addwfc	prodh,w,c
 20589  002330  6EDA               	movwf	fsr2h,c
 20590  002332  0E00               	movlw	0
 20591  002334  6EDE               	movwf	postinc2,c
 20592  002336  0E00               	movlw	0
 20593  002338  6EDD               	movwf	postdec2,c
 20594                           
 20595                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 20596  00233A  5009               	movf	i2USBDeviceInit@i,w,c
 20597  00233C  0D01               	mullw	1
 20598  00233E  0E87               	movlw	low _ep_data_in
 20599  002340  24F3               	addwf	prodl,w,c
 20600  002342  6ED9               	movwf	fsr2l,c
 20601  002344  0E00               	movlw	high _ep_data_in
 20602  002346  20F4               	addwfc	prodh,w,c
 20603  002348  6EDA               	movwf	fsr2h,c
 20604  00234A  0E00               	movlw	0
 20605  00234C  6EDF               	movwf	indf2,c
 20606                           
 20607                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 20608  00234E  5009               	movf	i2USBDeviceInit@i,w,c
 20609  002350  0D01               	mullw	1
 20610  002352  0E84               	movlw	low _ep_data_out
 20611  002354  24F3               	addwf	prodl,w,c
 20612  002356  6ED9               	movwf	fsr2l,c
 20613  002358  0E00               	movlw	high _ep_data_out
 20614  00235A  20F4               	addwfc	prodh,w,c
 20615  00235C  6EDA               	movwf	fsr2h,c
 20616  00235E  0E00               	movlw	0
 20617  002360  6EDF               	movwf	indf2,c
 20618  002362  2A09               	incf	i2USBDeviceInit@i,f,c
 20619  002364  D7CE               	goto	i2l9151
 20620  002366                     i2u746_40:
 20621                           
 20622                           ;usb_device.c: 307: }
 20623                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20624  002366  0E08               	movlw	8
 20625  002368  0100               	movlb	0	; () banked
 20626  00236A  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 20627  00236C  0E04               	movlw	4
 20628  00236E  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 20632  002370  0E16               	movlw	22
 20633  002372  6E6A               	movwf	3946,c	;volatile
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 20637  002374  0E04               	movlw	4
 20638  002376  0104               	movlb	4	; () banked
 20639  002378  6F03               	movwf	3,b	;volatile
 20640  00237A  0E30               	movlw	48
 20641  00237C  6F02               	movwf	2,b	;volatile
 20642                           
 20643                           ; BSR set to: 4
 20644                           ;usb_device.c: 315: BDT[0].CNT = 8;
 20645  00237E  0E08               	movlw	8
 20646  002380  6F01               	movwf	1,b	;volatile
 20647                           
 20648                           ; BSR set to: 4
 20649                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 20650  002382  0E04               	movlw	4
 20651  002384  6F00               	movwf	0,b	;volatile
 20652                           
 20653                           ; BSR set to: 4
 20654                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 20655  002386  8F00               	bsf	0,7,b	;volatile
 20656                           
 20657                           ; BSR set to: 4
 20658                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 20659  002388  0E00               	movlw	0
 20660  00238A  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 20661                           
 20662                           ; BSR set to: 4
 20663                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 20664  00238C  0E00               	movlw	0
 20665  00238E  0100               	movlb	0	; () banked
 20666  002390  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 20667                           
 20668                           ; BSR set to: 0
 20669  002392  0012               	return		;funcret
 20670  002394                     __end_ofi2_USBDeviceInit:
 20671                           	opt stack 0
 20672                           pclatu	equ	0xFFB
 20673                           pclath	equ	0xFFA
 20674                           tblptru	equ	0xFF8
 20675                           tblptrh	equ	0xFF7
 20676                           tblptrl	equ	0xFF6
 20677                           tablat	equ	0xFF5
 20678                           prodh	equ	0xFF4
 20679                           prodl	equ	0xFF3
 20680                           intcon	equ	0xFF2
 20681                           indf0	equ	0xFEF
 20682                           postinc0	equ	0xFEE
 20683                           fsr0h	equ	0xFEA
 20684                           fsr0l	equ	0xFE9
 20685                           wreg	equ	0xFE8
 20686                           indf1	equ	0xFE7
 20687                           postdec1	equ	0xFE5
 20688                           fsr1h	equ	0xFE2
 20689                           fsr1l	equ	0xFE1
 20690                           indf2	equ	0xFDF
 20691                           postinc2	equ	0xFDE
 20692                           postdec2	equ	0xFDD
 20693                           plusw2	equ	0xFDB
 20694                           fsr2h	equ	0xFDA
 20695                           fsr2l	equ	0xFD9
 20696                           status	equ	0xFD8
 20697                           
 20698 ;; *************** function _USBWakeFromSuspend *****************
 20699 ;; Defined at:
 20700 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;		None
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;		None
 20705 ;; Return value:  Size  Location     Type
 20706 ;;                  1    wreg      void 
 20707 ;; Registers used:
 20708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20714 ;;      Params:         0       0       0       0       0       0       0       0       0
 20715 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20717 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20718 ;;Total ram usage:        0 bytes
 20719 ;; Hardware stack levels used:    1
 20720 ;; Hardware stack levels required when called:    5
 20721 ;; This function calls:
 20722 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20723 ;; This function is called by:
 20724 ;;		_USBDeviceTasks
 20725 ;; This function uses a non-reentrant model
 20726 ;;
 20727                           
 20728                           	psect	text90
 20729  004778                     __ptext90:
 20730                           	opt stack 0
 20731  004778                     _USBWakeFromSuspend:
 20732                           	opt stack 13
 20733                           
 20734                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;incstack = 0
 20738  004778  0E00               	movlw	0
 20739  00477A  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 20740                           
 20741                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 20742  00477C  0E00               	movlw	0
 20743  00477E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20744  004780  0E74               	movlw	116
 20745  004782  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20746  004784  0E00               	movlw	0
 20747  004786  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20748  004788  0E00               	movlw	0
 20749  00478A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20750  00478C  0E00               	movlw	0
 20751  00478E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20752  004790  0E00               	movlw	0
 20753  004792  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20754  004794  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20755                           
 20756                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 20757  004798  9260               	bcf	3936,1,c	;volatile
 20758                           
 20759                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 20760  00479A  9464               	bcf	3940,2,c	;volatile
 20761                           
 20762                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 20763  00479C  D001               	goto	i2l1703
 20764  00479E                     
 20765                           ;usb_device.c: 1977: {
 20766                           ;usb_device.c: 1978: (UIR &= 0xFB);
 20767  00479E  9465               	bcf	3941,2,c	;volatile
 20768  0047A0                     i2l1703:
 20769  0047A0  A465               	btfss	3941,2,c	;volatile
 20770  0047A2  0012               	return	
 20771  0047A4  D7FC               	goto	i2l1704
 20772  0047A6                     __end_of_USBWakeFromSuspend:
 20773                           	opt stack 0
 20774                           pclatu	equ	0xFFB
 20775                           pclath	equ	0xFFA
 20776                           tblptru	equ	0xFF8
 20777                           tblptrh	equ	0xFF7
 20778                           tblptrl	equ	0xFF6
 20779                           tablat	equ	0xFF5
 20780                           prodh	equ	0xFF4
 20781                           prodl	equ	0xFF3
 20782                           intcon	equ	0xFF2
 20783                           indf0	equ	0xFEF
 20784                           postinc0	equ	0xFEE
 20785                           fsr0h	equ	0xFEA
 20786                           fsr0l	equ	0xFE9
 20787                           wreg	equ	0xFE8
 20788                           indf1	equ	0xFE7
 20789                           postdec1	equ	0xFE5
 20790                           fsr1h	equ	0xFE2
 20791                           fsr1l	equ	0xFE1
 20792                           indf2	equ	0xFDF
 20793                           postinc2	equ	0xFDE
 20794                           postdec2	equ	0xFDD
 20795                           plusw2	equ	0xFDB
 20796                           fsr2h	equ	0xFDA
 20797                           fsr2l	equ	0xFD9
 20798                           status	equ	0xFD8
 20799                           
 20800 ;; *************** function _USBSuspend *****************
 20801 ;; Defined at:
 20802 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;		None
 20805 ;; Auto vars:     Size  Location     Type
 20806 ;;		None
 20807 ;; Return value:  Size  Location     Type
 20808 ;;                  1    wreg      void 
 20809 ;; Registers used:
 20810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20811 ;; Tracked objects:
 20812 ;;		On entry : 0/0
 20813 ;;		On exit  : 0/0
 20814 ;;		Unchanged: 0/0
 20815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20816 ;;      Params:         0       0       0       0       0       0       0       0       0
 20817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20820 ;;Total ram usage:        0 bytes
 20821 ;; Hardware stack levels used:    1
 20822 ;; Hardware stack levels required when called:    5
 20823 ;; This function calls:
 20824 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20825 ;; This function is called by:
 20826 ;;		_USBDeviceTasks
 20827 ;; This function uses a non-reentrant model
 20828 ;;
 20829                           
 20830                           	psect	text91
 20831  0047FA                     __ptext91:
 20832                           	opt stack 0
 20833  0047FA                     _USBSuspend:
 20834                           	opt stack 13
 20835                           
 20836                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 20837                           
 20838                           ;incstack = 0
 20839  0047FA  8464               	bsf	3940,2,c	;volatile
 20840                           
 20841                           ;usb_device.c: 1915: (UIR &= 0xEF);
 20842  0047FC  9865               	bcf	3941,4,c	;volatile
 20843                           
 20844                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 20845  0047FE  8260               	bsf	3936,1,c	;volatile
 20846                           
 20847                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 20848  004800  0E01               	movlw	1
 20849  004802  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 20850                           
 20851                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 20852  004804  0E00               	movlw	0
 20853  004806  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20854  004808  0E75               	movlw	117
 20855  00480A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20856  00480C  0E00               	movlw	0
 20857  00480E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20858  004810  0E00               	movlw	0
 20859  004812  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20860  004814  0E00               	movlw	0
 20861  004816  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20862  004818  0E00               	movlw	0
 20863  00481A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20864  00481C  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20865  004820  0012               	return		;funcret
 20866  004822                     __end_of_USBSuspend:
 20867                           	opt stack 0
 20868                           pclatu	equ	0xFFB
 20869                           pclath	equ	0xFFA
 20870                           tblptru	equ	0xFF8
 20871                           tblptrh	equ	0xFF7
 20872                           tblptrl	equ	0xFF6
 20873                           tablat	equ	0xFF5
 20874                           prodh	equ	0xFF4
 20875                           prodl	equ	0xFF3
 20876                           intcon	equ	0xFF2
 20877                           indf0	equ	0xFEF
 20878                           postinc0	equ	0xFEE
 20879                           fsr0h	equ	0xFEA
 20880                           fsr0l	equ	0xFE9
 20881                           wreg	equ	0xFE8
 20882                           indf1	equ	0xFE7
 20883                           postdec1	equ	0xFE5
 20884                           fsr1h	equ	0xFE2
 20885                           fsr1l	equ	0xFE1
 20886                           indf2	equ	0xFDF
 20887                           postinc2	equ	0xFDE
 20888                           postdec2	equ	0xFDD
 20889                           plusw2	equ	0xFDB
 20890                           fsr2h	equ	0xFDA
 20891                           fsr2l	equ	0xFD9
 20892                           status	equ	0xFD8
 20893                           
 20894 ;; *************** function _USBStallHandler *****************
 20895 ;; Defined at:
 20896 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 20897 ;; Parameters:    Size  Location     Type
 20898 ;;		None
 20899 ;; Auto vars:     Size  Location     Type
 20900 ;;		None
 20901 ;; Return value:  Size  Location     Type
 20902 ;;                  1    wreg      void 
 20903 ;; Registers used:
 20904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20905 ;; Tracked objects:
 20906 ;;		On entry : 0/0
 20907 ;;		On exit  : 0/0
 20908 ;;		Unchanged: 0/0
 20909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20910 ;;      Params:         0       0       0       0       0       0       0       0       0
 20911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20912 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20913 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20914 ;;Total ram usage:        1 bytes
 20915 ;; Hardware stack levels used:    1
 20916 ;; This function calls:
 20917 ;;		Nothing
 20918 ;; This function is called by:
 20919 ;;		_USBDeviceTasks
 20920 ;; This function uses a non-reentrant model
 20921 ;;
 20922                           
 20923                           	psect	text92
 20924  0043D6                     __ptext92:
 20925                           	opt stack 0
 20926  0043D6                     _USBStallHandler:
 20927                           	opt stack 18
 20928                           
 20929                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 20930                           
 20931                           ;incstack = 0
 20932  0043D6  A06A               	btfss	3946,0,c	;volatile
 20933  0043D8  D01D               	goto	i2l1695
 20934                           
 20935                           ;usb_device.c: 1859: {
 20936                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 20937  0043DA  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20938  0043DE  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20939  0043E2  0E80               	movlw	128
 20940  0043E4  18DE               	xorwf	postinc2,w,c
 20941  0043E6  A4D8               	btfss	status,2,c
 20942  0043E8  D014               	goto	i2l1696
 20943  0043EA  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 20944  0043EE  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20945  0043F2  0E84               	movlw	132
 20946  0043F4  18DE               	xorwf	postinc2,w,c
 20947  0043F6  A4D8               	btfss	status,2,c
 20948  0043F8  D00C               	goto	i2l1696
 20949                           
 20950                           ;usb_device.c: 1862: {
 20951                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20952  0043FA  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20953  0043FE  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20954  004402  0E0C               	movlw	12
 20955  004404  6EDF               	movwf	indf2,c
 20956                           
 20957                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 20958  004406  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20959  00440A  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20960  00440E  0E00               	movlw	0
 20961  004410  8EDB               	bsf	plusw2,7,c
 20962  004412                     i2l1696:
 20963                           
 20964                           ;usb_device.c: 1866: }
 20965                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 20966  004412  906A               	bcf	3946,0,c	;volatile
 20967  004414                     i2l1695:
 20968                           
 20969                           ;usb_device.c: 1868: }
 20970                           ;usb_device.c: 1870: (UIR &= 0xDF);
 20971  004414  9A65               	bcf	3941,5,c	;volatile
 20972  004416  0012               	return		;funcret
 20973  004418                     __end_of_USBStallHandler:
 20974                           	opt stack 0
 20975                           pclatu	equ	0xFFB
 20976                           pclath	equ	0xFFA
 20977                           tblptru	equ	0xFF8
 20978                           tblptrh	equ	0xFF7
 20979                           tblptrl	equ	0xFF6
 20980                           tablat	equ	0xFF5
 20981                           prodh	equ	0xFF4
 20982                           prodl	equ	0xFF3
 20983                           intcon	equ	0xFF2
 20984                           indf0	equ	0xFEF
 20985                           postinc0	equ	0xFEE
 20986                           fsr0h	equ	0xFEA
 20987                           fsr0l	equ	0xFE9
 20988                           wreg	equ	0xFE8
 20989                           indf1	equ	0xFE7
 20990                           postdec1	equ	0xFE5
 20991                           fsr1h	equ	0xFE2
 20992                           fsr1l	equ	0xFE1
 20993                           indf2	equ	0xFDF
 20994                           postinc2	equ	0xFDE
 20995                           postdec2	equ	0xFDD
 20996                           plusw2	equ	0xFDB
 20997                           fsr2h	equ	0xFDA
 20998                           fsr2l	equ	0xFD9
 20999                           status	equ	0xFD8
 21000                           
 21001 ;; *************** function _USBCtrlEPService *****************
 21002 ;; Defined at:
 21003 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;		None
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 21008 ;; Return value:  Size  Location     Type
 21009 ;;                  1    wreg      void 
 21010 ;; Registers used:
 21011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21012 ;; Tracked objects:
 21013 ;;		On entry : 0/0
 21014 ;;		On exit  : 0/0
 21015 ;;		Unchanged: 0/0
 21016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21017 ;;      Params:         0       0       0       0       0       0       0       0       0
 21018 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21019 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21020 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21021 ;;Total ram usage:        3 bytes
 21022 ;; Hardware stack levels used:    1
 21023 ;; Hardware stack levels required when called:    8
 21024 ;; This function calls:
 21025 ;;		_USBCtrlTrfInHandler
 21026 ;;		_USBCtrlTrfOutHandler
 21027 ;;		_USBCtrlTrfSetupHandler
 21028 ;; This function is called by:
 21029 ;;		_USBDeviceTasks
 21030 ;; This function uses a non-reentrant model
 21031 ;;
 21032                           
 21033                           	psect	text93
 21034  002DCE                     __ptext93:
 21035                           	opt stack 0
 21036  002DCE                     _USBCtrlEPService:
 21037                           	opt stack 10
 21038                           
 21039                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 21040                           
 21041                           ;incstack = 0
 21042  002DCE  0E2D               	movlw	45
 21043  002DD0  6E46               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 21044                           
 21045                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 21046  002DD2  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21047  002DD6  0EFD               	movlw	253
 21048  002DD8  161C               	andwf	??_USBCtrlEPService,f,c
 21049  002DDA  A4D8               	btfss	status,2,c
 21050  002DDC  D057               	goto	i2l1709
 21051                           
 21052                           ;usb_device.c: 2013: {
 21053                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 21054  002DDE  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21055  002DE2  90D8               	bcf	status,0,c
 21056  002DE4  321C               	rrcf	??_USBCtrlEPService,f,c
 21057  002DE6  0E3F               	movlw	63
 21058  002DE8  161C               	andwf	??_USBCtrlEPService,f,c
 21059  002DEA  501C               	movf	??_USBCtrlEPService,w,c
 21060  002DEC  0D04               	mullw	4
 21061  002DEE  0E00               	movlw	0
 21062  002DF0  24F3               	addwf	prodl,w,c
 21063  002DF2  6E3A               	movwf	_pBDTEntryEP0OutCurrent,c
 21064  002DF4  0E04               	movlw	4
 21065  002DF6  20F4               	addwfc	prodh,w,c
 21066  002DF8  6E3B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 21067                           
 21068                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21069  002DFA  C03A  F038         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21070  002DFE  C03B  F039         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21071                           
 21072                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 21073  002E02  0E04               	movlw	4
 21074  002E04  1A38               	xorwf	_pBDTEntryEP0OutNext,f,c
 21075                           
 21076                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 21077  002E06  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21078  002E0A  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21079  002E0E  30DF               	rrcf	indf2,w,c
 21080  002E10  32E8               	rrcf	wreg,f,c
 21081  002E12  0B0F               	andlw	15
 21082  002E14  0A0D               	xorlw	13
 21083  002E16  A4D8               	btfss	status,2,c
 21084  002E18  D036               	goto	i2l1710
 21085                           
 21086                           ;usb_device.c: 2025: {
 21087                           ;usb_device.c: 2026: unsigned char setup_cnt;
 21088                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 21089  002E1A  0E00               	movlw	0
 21090  002E1C  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 21091  002E1E                     i2l9087:
 21092  002E1E  0E07               	movlw	7
 21093  002E20  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 21094  002E22  D001               	goto	i2l1711
 21095  002E24  D023               	goto	i2u740_40
 21096  002E26                     i2l1711:
 21097                           
 21098                           ;usb_device.c: 2033: {
 21099                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 21100  002E26  EE20 F002          	lfsr	2,2
 21101  002E2A  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 21102  002E2C  26D9               	addwf	fsr2l,f,c
 21103  002E2E  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21104  002E30  22DA               	addwfc	fsr2h,f,c
 21105  002E32  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 21106  002E36  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 21107  002E3A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 21108  002E3E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 21109  002E42  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 21110  002E44  0D01               	mullw	1
 21111  002E46  0E30               	movlw	48
 21112  002E48  24F3               	addwf	prodl,w,c
 21113  002E4A  6EE1               	movwf	fsr1l,c
 21114  002E4C  0E04               	movlw	4
 21115  002E4E  20F4               	addwfc	prodh,w,c
 21116  002E50  6EE2               	movwf	fsr1h,c
 21117  002E52  CFDF FFE7          	movff	indf2,indf1
 21118                           
 21119                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 21120  002E56  EE20 F002          	lfsr	2,2
 21121  002E5A  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 21122  002E5C  26D9               	addwf	fsr2l,f,c
 21123  002E5E  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21124  002E60  22DA               	addwfc	fsr2h,f,c
 21125  002E62  2ADE               	incf	postinc2,f,c
 21126  002E64  0E00               	movlw	0
 21127  002E66  22DD               	addwfc	postdec2,f,c
 21128  002E68  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 21129  002E6A  D7D9               	goto	i2l9087
 21130  002E6C                     i2u740_40:
 21131                           
 21132                           ;usb_device.c: 2036: }
 21133                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21134  002E6C  EE20 F002          	lfsr	2,2
 21135  002E70  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 21136  002E72  26D9               	addwf	fsr2l,f,c
 21137  002E74  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21138  002E76  22DA               	addwfc	fsr2h,f,c
 21139  002E78  0E30               	movlw	48
 21140  002E7A  6EDE               	movwf	postinc2,c
 21141  002E7C  0E04               	movlw	4
 21142  002E7E  6EDD               	movwf	postdec2,c
 21143                           
 21144                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 21145  002E80  EC3A  F01E         	call	_USBCtrlTrfSetupHandler	;wreg free
 21146                           
 21147                           ;usb_device.c: 2041: }
 21148  002E84  0012               	return	
 21149  002E86                     i2l1710:
 21150                           
 21151                           ;usb_device.c: 2042: else
 21152                           ;usb_device.c: 2043: {
 21153                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 21154  002E86  EC8D  F020         	call	_USBCtrlTrfOutHandler	;wreg free
 21155                           
 21156                           ;usb_device.c: 2046: }
 21157                           ;usb_device.c: 2047: }
 21158  002E8A  0012               	return	
 21159  002E8C                     i2l1709:
 21160                           
 21161                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 21162  002E8C  5059               	movf	_USTATcopy,w,c	;volatile
 21163  002E8E  0BFD               	andlw	253
 21164  002E90  0A04               	xorlw	4
 21165  002E92  A4D8               	btfss	status,2,c
 21166  002E94  0012               	return	
 21167                           
 21168                           ;usb_device.c: 2049: {
 21169                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 21170  002E96  EC32  F015         	call	_USBCtrlTrfInHandler	;wreg free
 21171  002E9A  0012               	return	
 21172  002E9C                     __end_of_USBCtrlEPService:
 21173                           	opt stack 0
 21174                           pclatu	equ	0xFFB
 21175                           pclath	equ	0xFFA
 21176                           tblptru	equ	0xFF8
 21177                           tblptrh	equ	0xFF7
 21178                           tblptrl	equ	0xFF6
 21179                           tablat	equ	0xFF5
 21180                           prodh	equ	0xFF4
 21181                           prodl	equ	0xFF3
 21182                           intcon	equ	0xFF2
 21183                           indf0	equ	0xFEF
 21184                           postinc0	equ	0xFEE
 21185                           fsr0h	equ	0xFEA
 21186                           fsr0l	equ	0xFE9
 21187                           wreg	equ	0xFE8
 21188                           indf1	equ	0xFE7
 21189                           postdec1	equ	0xFE5
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           plusw2	equ	0xFDB
 21196                           fsr2h	equ	0xFDA
 21197                           fsr2l	equ	0xFD9
 21198                           status	equ	0xFD8
 21199                           
 21200 ;; *************** function _USBCtrlTrfSetupHandler *****************
 21201 ;; Defined at:
 21202 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;		None
 21205 ;; Auto vars:     Size  Location     Type
 21206 ;;		None
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      void 
 21209 ;; Registers used:
 21210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21216 ;;      Params:         0       0       0       0       0       0       0       0       0
 21217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21219 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21220 ;;Total ram usage:        0 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:    7
 21223 ;; This function calls:
 21224 ;;		_USBCheckStdRequest
 21225 ;;		_USBCtrlEPServiceComplete
 21226 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21227 ;; This function is called by:
 21228 ;;		_USBCtrlEPService
 21229 ;; This function uses a non-reentrant model
 21230 ;;
 21231                           
 21232                           	psect	text94
 21233  003C74                     __ptext94:
 21234                           	opt stack 0
 21235  003C74                     _USBCtrlTrfSetupHandler:
 21236                           	opt stack 10
 21237                           
 21238                           ;usb_device.c: 2102: shortPacketStatus = 0;
 21239                           
 21240                           ;incstack = 0
 21241  003C74  0E00               	movlw	0
 21242  003C76  6E4C               	movwf	_shortPacketStatus,c	;volatile
 21243                           
 21244                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 21245  003C78  0E00               	movlw	0
 21246  003C7A  6E45               	movwf	_USBDeferStatusStagePacket,c	;volatile
 21247                           
 21248                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 21249  003C7C  0E00               	movlw	0
 21250  003C7E  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 21251                           
 21252                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 21253  003C80  0E00               	movlw	0
 21254  003C82  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 21255                           
 21256                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 21257  003C84  0E00               	movlw	0
 21258  003C86  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 21259                           
 21260                           ;usb_device.c: 2107: controlTransferState = 0;
 21261  003C88  0E00               	movlw	0
 21262  003C8A  6E4B               	movwf	_controlTransferState,c	;volatile
 21263                           
 21264                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21265  003C8C  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21266  003C90  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21267  003C94  0E7F               	movlw	127
 21268  003C96  16DF               	andwf	indf2,f,c
 21269                           
 21270                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 21271  003C98  0E04               	movlw	4
 21272  003C9A  0100               	movlb	0	; () banked
 21273  003C9C  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 21274                           
 21275                           ; BSR set to: 0
 21276                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21277  003C9E  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21278  003CA2  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21279  003CA6  0E7F               	movlw	127
 21280  003CA8  16DF               	andwf	indf2,f,c
 21281                           
 21282                           ; BSR set to: 0
 21283                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 21284  003CAA  0E04               	movlw	4
 21285  003CAC  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 21289  003CAE  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21290  003CB2  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21291  003CB6  0E7F               	movlw	127
 21292  003CB8  16DF               	andwf	indf2,f,c
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 21296  003CBA  0E00               	movlw	0
 21297  003CBC  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 21301  003CBE  0E00               	movlw	0
 21302  003CC0  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21303  003CC2  0E00               	movlw	0
 21304  003CC4  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21305                           
 21306                           ; BSR set to: 0
 21307                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 21308  003CC6  0E00               	movlw	0
 21309  003CC8  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 21313  003CCA  0E00               	movlw	0
 21314  003CCC  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 21315  003CCE  0E00               	movlw	0
 21316  003CD0  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;usb_device.c: 2131: USBCheckStdRequest();
 21320  003CD2  EC50  F014         	call	_USBCheckStdRequest	;wreg free
 21321                           
 21322                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 21323  003CD6  0E00               	movlw	0
 21324  003CD8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21325  003CDA  0E03               	movlw	3
 21326  003CDC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21327  003CDE  0E00               	movlw	0
 21328  003CE0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21329  003CE2  0E00               	movlw	0
 21330  003CE4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21331  003CE6  0E00               	movlw	0
 21332  003CE8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21333  003CEA  0E00               	movlw	0
 21334  003CEC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21335  003CEE  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21336                           
 21337                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 21338  003CF2  EC63  F013         	call	_USBCtrlEPServiceComplete	;wreg free
 21339  003CF6  0012               	return		;funcret
 21340  003CF8                     __end_of_USBCtrlTrfSetupHandler:
 21341                           	opt stack 0
 21342                           pclatu	equ	0xFFB
 21343                           pclath	equ	0xFFA
 21344                           tblptru	equ	0xFF8
 21345                           tblptrh	equ	0xFF7
 21346                           tblptrl	equ	0xFF6
 21347                           tablat	equ	0xFF5
 21348                           prodh	equ	0xFF4
 21349                           prodl	equ	0xFF3
 21350                           intcon	equ	0xFF2
 21351                           indf0	equ	0xFEF
 21352                           postinc0	equ	0xFEE
 21353                           fsr0h	equ	0xFEA
 21354                           fsr0l	equ	0xFE9
 21355                           wreg	equ	0xFE8
 21356                           indf1	equ	0xFE7
 21357                           postdec1	equ	0xFE5
 21358                           fsr1h	equ	0xFE2
 21359                           fsr1l	equ	0xFE1
 21360                           indf2	equ	0xFDF
 21361                           postinc2	equ	0xFDE
 21362                           postdec2	equ	0xFDD
 21363                           plusw2	equ	0xFDB
 21364                           fsr2h	equ	0xFDA
 21365                           fsr2l	equ	0xFD9
 21366                           status	equ	0xFD8
 21367                           
 21368 ;; *************** function _USBCtrlEPServiceComplete *****************
 21369 ;; Defined at:
 21370 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;		None
 21373 ;; Auto vars:     Size  Location     Type
 21374 ;;		None
 21375 ;; Return value:  Size  Location     Type
 21376 ;;                  1    wreg      void 
 21377 ;; Registers used:
 21378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21379 ;; Tracked objects:
 21380 ;;		On entry : 0/0
 21381 ;;		On exit  : 0/0
 21382 ;;		Unchanged: 0/0
 21383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21384 ;;      Params:         0       0       0       0       0       0       0       0       0
 21385 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21387 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21388 ;;Total ram usage:        0 bytes
 21389 ;; Hardware stack levels used:    1
 21390 ;; Hardware stack levels required when called:    2
 21391 ;; This function calls:
 21392 ;;		_USBCtrlEPAllowDataStage
 21393 ;;		_USBCtrlEPAllowStatusStage
 21394 ;; This function is called by:
 21395 ;;		_USBCtrlTrfSetupHandler
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           	psect	text95
 21400  0026C6                     __ptext95:
 21401                           	opt stack 0
 21402  0026C6                     _USBCtrlEPServiceComplete:
 21403                           	opt stack 14
 21404                           
 21405                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 21406                           
 21407                           ;incstack = 0
 21408  0026C6  9860               	bcf	3936,4,c	;volatile
 21409                           
 21410                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 21411  0026C8  0100               	movlb	0	; () banked
 21412  0026CA  BF6B               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 21413  0026CC  D038               	goto	i2l1619
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;usb_device.c: 1295: {
 21417                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 21418  0026CE  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 21419  0026D0  D00B               	goto	i2l1620
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;usb_device.c: 1297: {
 21423                           ;usb_device.c: 1298: controlTransferState = 2;
 21424  0026D2  0E02               	movlw	2
 21425  0026D4  6E4B               	movwf	_controlTransferState,c	;volatile
 21426                           
 21427                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 21428  0026D6  5041               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 21429  0026D8  B4D8               	btfsc	status,2,c
 21430                           
 21431                           ; BSR set to: 0
 21432                           ;usb_device.c: 1310: {
 21433                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 21434  0026DA  EC05  F01C         	call	_USBCtrlEPAllowDataStage	;wreg free
 21435                           
 21436                           ;usb_device.c: 1312: }
 21437                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 21438  0026DE  0E00               	movlw	0
 21439  0026E0  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21440                           
 21441                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 21442  0026E2  0E00               	movlw	0
 21443  0026E4  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21444                           
 21445                           ;usb_device.c: 1318: }
 21446  0026E6  0012               	return	
 21447  0026E8                     i2l1620:
 21448                           
 21449                           ;usb_device.c: 1319: else
 21450                           ;usb_device.c: 1320: {
 21451                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 21452  0026E8  EE20 F001          	lfsr	2,1
 21453  0026EC  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21454  0026EE  26D9               	addwf	fsr2l,f,c
 21455  0026F0  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21456  0026F2  22DA               	addwfc	fsr2h,f,c
 21457  0026F4  0E08               	movlw	8
 21458  0026F6  6EDF               	movwf	indf2,c
 21459                           
 21460                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21461  0026F8  EE20 F002          	lfsr	2,2
 21462  0026FC  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21463  0026FE  26D9               	addwf	fsr2l,f,c
 21464  002700  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21465  002702  22DA               	addwfc	fsr2h,f,c
 21466  002704  0E30               	movlw	48
 21467  002706  6EDE               	movwf	postinc2,c
 21468  002708  0E04               	movlw	4
 21469  00270A  6EDD               	movwf	postdec2,c
 21470                           
 21471                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21472  00270C  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21473  002710  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21474  002714  0E0C               	movlw	12
 21475  002716  6EDF               	movwf	indf2,c
 21476                           
 21477                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21478  002718  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21479  00271C  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21480  002720  0E00               	movlw	0
 21481  002722  8EDB               	bsf	plusw2,7,c
 21482                           
 21483                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 21484  002724  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21485  002728  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21486  00272C  0E04               	movlw	4
 21487  00272E  6EDF               	movwf	indf2,c
 21488                           
 21489                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21490  002730  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21491  002734  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21492  002738  0E00               	movlw	0
 21493  00273A  8EDB               	bsf	plusw2,7,c
 21494                           
 21495                           ;usb_device.c: 1331: }
 21496                           ;usb_device.c: 1332: }
 21497  00273C  0012               	return	
 21498  00273E                     i2l1619:
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;usb_device.c: 1333: else
 21502                           ;usb_device.c: 1334: {
 21503                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 21504  00273E  0104               	movlb	4	; () banked
 21505  002740  AF30               	btfss	48,7,b	;volatile
 21506  002742  D010               	goto	i2l1624
 21507                           
 21508                           ; BSR set to: 4
 21509                           ;usb_device.c: 1336: {
 21510                           ;usb_device.c: 1337: controlTransferState = 1;
 21511  002744  0E01               	movlw	1
 21512  002746  6E4B               	movwf	_controlTransferState,c	;volatile
 21513                           
 21514                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 21515  002748  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 21516  00274A  B4D8               	btfsc	status,2,c
 21517                           
 21518                           ; BSR set to: 4
 21519                           ;usb_device.c: 1352: {
 21520                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 21521  00274C  EC05  F01C         	call	_USBCtrlEPAllowDataStage	;wreg free
 21522                           
 21523                           ;usb_device.c: 1354: }
 21524                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 21525  002750  0E00               	movlw	0
 21526  002752  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21527                           
 21528                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 21529  002754  0E00               	movlw	0
 21530  002756  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21531                           
 21532                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 21533  002758  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21534  00275A  A4D8               	btfss	status,2,c
 21535  00275C  0012               	return	
 21536                           
 21537                           ;usb_device.c: 1379: {
 21538                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 21539  00275E  EC18  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21540                           
 21541                           ;usb_device.c: 1381: }
 21542                           ;usb_device.c: 1382: }
 21543  002762  0012               	return	
 21544  002764                     i2l1624:
 21545                           
 21546                           ;usb_device.c: 1383: else
 21547                           ;usb_device.c: 1384: {
 21548                           ;usb_device.c: 1395: controlTransferState = 2;
 21549  002764  0E02               	movlw	2
 21550  002766  6E4B               	movwf	_controlTransferState,c	;volatile
 21551                           
 21552                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 21553  002768  EE20 F001          	lfsr	2,1
 21554  00276C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21555  00276E  26D9               	addwf	fsr2l,f,c
 21556  002770  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21557  002772  22DA               	addwfc	fsr2h,f,c
 21558  002774  0E08               	movlw	8
 21559  002776  6EDF               	movwf	indf2,c
 21560                           
 21561                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21562  002778  EE20 F002          	lfsr	2,2
 21563  00277C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21564  00277E  26D9               	addwf	fsr2l,f,c
 21565  002780  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21566  002782  22DA               	addwfc	fsr2h,f,c
 21567  002784  0E30               	movlw	48
 21568  002786  6EDE               	movwf	postinc2,c
 21569  002788  0E04               	movlw	4
 21570  00278A  6EDD               	movwf	postdec2,c
 21571                           
 21572                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21573  00278C  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21574  002790  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21575  002794  0E04               	movlw	4
 21576  002796  6EDF               	movwf	indf2,c
 21577                           
 21578                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21579  002798  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21580  00279C  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21581  0027A0  0E00               	movlw	0
 21582  0027A2  8EDB               	bsf	plusw2,7,c
 21583                           
 21584                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 21585  0027A4  0E00               	movlw	0
 21586  0027A6  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21587                           
 21588                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 21589  0027A8  0E00               	movlw	0
 21590  0027AA  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21591                           
 21592                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 21593  0027AC  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21594  0027AE  A4D8               	btfss	status,2,c
 21595  0027B0  0012               	return	
 21596                           
 21597                           ;usb_device.c: 1407: {
 21598                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 21599  0027B2  EC18  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21600  0027B6  0012               	return	
 21601  0027B8                     __end_of_USBCtrlEPServiceComplete:
 21602                           	opt stack 0
 21603                           pclatu	equ	0xFFB
 21604                           pclath	equ	0xFFA
 21605                           tblptru	equ	0xFF8
 21606                           tblptrh	equ	0xFF7
 21607                           tblptrl	equ	0xFF6
 21608                           tablat	equ	0xFF5
 21609                           prodh	equ	0xFF4
 21610                           prodl	equ	0xFF3
 21611                           intcon	equ	0xFF2
 21612                           indf0	equ	0xFEF
 21613                           postinc0	equ	0xFEE
 21614                           fsr0h	equ	0xFEA
 21615                           fsr0l	equ	0xFE9
 21616                           wreg	equ	0xFE8
 21617                           indf1	equ	0xFE7
 21618                           postdec1	equ	0xFE5
 21619                           fsr1h	equ	0xFE2
 21620                           fsr1l	equ	0xFE1
 21621                           indf2	equ	0xFDF
 21622                           postinc2	equ	0xFDE
 21623                           postdec2	equ	0xFDD
 21624                           plusw2	equ	0xFDB
 21625                           fsr2h	equ	0xFDA
 21626                           fsr2l	equ	0xFD9
 21627                           status	equ	0xFD8
 21628                           
 21629 ;; *************** function _USBCtrlEPAllowDataStage *****************
 21630 ;; Defined at:
 21631 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 21632 ;; Parameters:    Size  Location     Type
 21633 ;;		None
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;		None
 21636 ;; Return value:  Size  Location     Type
 21637 ;;                  1    wreg      void 
 21638 ;; Registers used:
 21639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21640 ;; Tracked objects:
 21641 ;;		On entry : 0/0
 21642 ;;		On exit  : 0/0
 21643 ;;		Unchanged: 0/0
 21644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21645 ;;      Params:         0       0       0       0       0       0       0       0       0
 21646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21649 ;;Total ram usage:        0 bytes
 21650 ;; Hardware stack levels used:    1
 21651 ;; Hardware stack levels required when called:    1
 21652 ;; This function calls:
 21653 ;;		_USBCtrlTrfTxService
 21654 ;; This function is called by:
 21655 ;;		_USBCtrlEPServiceComplete
 21656 ;; This function uses a non-reentrant model
 21657 ;;
 21658                           
 21659                           	psect	text96
 21660  00380A                     __ptext96:
 21661                           	opt stack 0
 21662  00380A                     _USBCtrlEPAllowDataStage:
 21663                           	opt stack 14
 21664                           
 21665                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 21666                           
 21667                           ;incstack = 0
 21668  00380A  0E00               	movlw	0
 21669  00380C  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 21670                           
 21671                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 21672  00380E  0E00               	movlw	0
 21673  003810  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 21674                           
 21675                           ;usb_device.c: 1178: if(controlTransferState == 2)
 21676  003812  0E02               	movlw	2
 21677  003814  184B               	xorwf	_controlTransferState,w,c	;volatile
 21678  003816  A4D8               	btfss	status,2,c
 21679  003818  D01F               	goto	i2l1608
 21680                           
 21681                           ;usb_device.c: 1179: {
 21682                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 21683  00381A  EE20 F001          	lfsr	2,1
 21684  00381E  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21685  003820  26D9               	addwf	fsr2l,f,c
 21686  003822  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21687  003824  22DA               	addwfc	fsr2h,f,c
 21688  003826  0E08               	movlw	8
 21689  003828  6EDF               	movwf	indf2,c
 21690                           
 21691                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21692  00382A  EE20 F002          	lfsr	2,2
 21693  00382E  5038               	movf	_pBDTEntryEP0OutNext,w,c
 21694  003830  26D9               	addwf	fsr2l,f,c
 21695  003832  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 21696  003834  22DA               	addwfc	fsr2h,f,c
 21697  003836  0E38               	movlw	56
 21698  003838  6EDE               	movwf	postinc2,c
 21699  00383A  0E04               	movlw	4
 21700  00383C  6EDD               	movwf	postdec2,c
 21701                           
 21702                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21703  00383E  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21704  003842  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21705  003846  0E48               	movlw	72
 21706  003848  6EDF               	movwf	indf2,c
 21707                           
 21708                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21709  00384A  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21710  00384E  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21711  003852  0E00               	movlw	0
 21712  003854  8EDB               	bsf	plusw2,7,c
 21713                           
 21714                           ;usb_device.c: 1185: }
 21715  003856  0012               	return	
 21716  003858                     i2l1608:
 21717                           
 21718                           ;usb_device.c: 1186: else
 21719                           ;usb_device.c: 1187: {
 21720                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 21721  003858  0100               	movlb	0	; () banked
 21722  00385A  516C               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 21723  00385C  0104               	movlb	4	; () banked
 21724  00385E  5D36               	subwf	54,w,b	;volatile
 21725  003860  0100               	movlb	0	; () banked
 21726  003862  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 21727  003864  0104               	movlb	4	; () banked
 21728  003866  5937               	subwfb	55,w,b	;volatile
 21729  003868  B0D8               	btfsc	status,0,c
 21730  00386A  D004               	goto	i2l1610
 21731                           
 21732                           ; BSR set to: 4
 21733                           ;usb_device.c: 1191: {
 21734                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 21735  00386C  C436 F06C          	movff	1078,_inPipes+4	;volatile
 21736  003870  C437 F06D          	movff	1079,_inPipes+5	;volatile
 21737  003874                     i2l1610:
 21738                           
 21739                           ; BSR set to: 4
 21740                           ;usb_device.c: 1193: }
 21741                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 21742                           
 21743                           ; BSR set to: 4
 21744  003874  EC4E  F017         	call	_USBCtrlTrfTxService	;wreg free
 21745                           
 21746                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 21747  003878  0100               	movlb	0	; () banked
 21748  00387A  EE20 F002          	lfsr	2,2
 21749  00387E  516E               	movf	_pBDTEntryIn& (0+255),w,b
 21750  003880  26D9               	addwf	fsr2l,f,c
 21751  003882  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21752  003884  22DA               	addwfc	fsr2h,f,c
 21753  003886  0E38               	movlw	56
 21754  003888  6EDE               	movwf	postinc2,c
 21755  00388A  0E04               	movlw	4
 21756  00388C  6EDD               	movwf	postdec2,c
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21760  00388E  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21761  003892  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21762  003896  0E48               	movlw	72
 21763  003898  6EDF               	movwf	indf2,c
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21767  00389A  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 21768  00389E  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21769  0038A2  0E00               	movlw	0
 21770  0038A4  8EDB               	bsf	plusw2,7,c
 21771  0038A6  0012               	return	
 21772  0038A8                     __end_of_USBCtrlEPAllowDataStage:
 21773                           	opt stack 0
 21774                           pclatu	equ	0xFFB
 21775                           pclath	equ	0xFFA
 21776                           tblptru	equ	0xFF8
 21777                           tblptrh	equ	0xFF7
 21778                           tblptrl	equ	0xFF6
 21779                           tablat	equ	0xFF5
 21780                           prodh	equ	0xFF4
 21781                           prodl	equ	0xFF3
 21782                           intcon	equ	0xFF2
 21783                           indf0	equ	0xFEF
 21784                           postinc0	equ	0xFEE
 21785                           fsr0h	equ	0xFEA
 21786                           fsr0l	equ	0xFE9
 21787                           wreg	equ	0xFE8
 21788                           indf1	equ	0xFE7
 21789                           postdec1	equ	0xFE5
 21790                           fsr1h	equ	0xFE2
 21791                           fsr1l	equ	0xFE1
 21792                           indf2	equ	0xFDF
 21793                           postinc2	equ	0xFDE
 21794                           postdec2	equ	0xFDD
 21795                           plusw2	equ	0xFDB
 21796                           fsr2h	equ	0xFDA
 21797                           fsr2l	equ	0xFD9
 21798                           status	equ	0xFD8
 21799                           
 21800 ;; *************** function _USBCheckStdRequest *****************
 21801 ;; Defined at:
 21802 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;		None
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  1    wreg      void 
 21809 ;; Registers used:
 21810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21816 ;;      Params:         0       0       0       0       0       0       0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21820 ;;Total ram usage:        0 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:    6
 21823 ;; This function calls:
 21824 ;;		_USBStdFeatureReqHandler
 21825 ;;		_USBStdGetDscHandler
 21826 ;;		_USBStdGetStatusHandler
 21827 ;;		_USBStdSetCfgHandler
 21828 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21829 ;; This function is called by:
 21830 ;;		_USBCtrlTrfSetupHandler
 21831 ;; This function uses a non-reentrant model
 21832 ;;
 21833                           
 21834                           	psect	text97
 21835  0028A0                     __ptext97:
 21836                           	opt stack 0
 21837  0028A0                     _USBCheckStdRequest:
 21838                           	opt stack 10
 21839                           
 21840                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 21841                           
 21842                           ;incstack = 0
 21843  0028A0  0104               	movlb	4	; () banked
 21844  0028A2  3930               	swapf	48,w,b	;volatile
 21845  0028A4  32E8               	rrcf	wreg,f,c
 21846  0028A6  0B03               	andlw	3
 21847  0028A8  0900               	iorlw	0
 21848  0028AA  A4D8               	btfss	status,2,c
 21849  0028AC  0012               	return	
 21850  0028AE  D047               	goto	i2l1745
 21851  0028B0                     i2l1746:
 21852                           
 21853                           ; BSR set to: 4
 21854                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 21855  0028B0  0100               	movlb	0	; () banked
 21856  0028B2  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 21860  0028B4  0E08               	movlw	8
 21861  0028B6  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 21862                           
 21863                           ;usb_device.c: 2327: break;
 21864  0028B8  0012               	return	
 21865  0028BA                     
 21866                           ;usb_device.c: 2329: USBStdGetDscHandler();
 21867                           
 21868                           ; BSR set to: 0
 21869  0028BA  EC07  F010         	call	_USBStdGetDscHandler	;wreg free
 21870                           
 21871                           ;usb_device.c: 2330: break;
 21872  0028BE  0012               	return	
 21873  0028C0                     
 21874                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 21875  0028C0  ECC1  F014         	call	_USBStdSetCfgHandler	;wreg free
 21876                           
 21877                           ;usb_device.c: 2333: break;
 21878  0028C4  0012               	return	
 21879  0028C6                     
 21880                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 21881  0028C6  0E5A               	movlw	low _USBActiveConfiguration
 21882  0028C8  0100               	movlb	0	; () banked
 21883  0028CA  6F68               	movwf	_inPipes& (0+255),b	;volatile
 21884  0028CC  0E00               	movlw	high _USBActiveConfiguration
 21885  0028CE  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21889  0028D0  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 21890                           
 21891                           ; BSR set to: 0
 21892                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 21893  0028D2  0E01               	movlw	1
 21894  0028D4  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21895                           
 21896                           ; BSR set to: 0
 21897                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 21898  0028D6  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21899                           
 21900                           ;usb_device.c: 2339: break;
 21901  0028D8  0012               	return	
 21902  0028DA                     
 21903                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 21904                           
 21905                           ; BSR set to: 0
 21906  0028DA  ECB1  F01B         	call	_USBStdGetStatusHandler	;wreg free
 21907                           
 21908                           ;usb_device.c: 2342: break;
 21909  0028DE  0012               	return	
 21910  0028E0                     
 21911                           ;usb_device.c: 2344: case 3:
 21912                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 21913  0028E0  EC77  F00A         	call	_USBStdFeatureReqHandler	;wreg free
 21914                           
 21915                           ;usb_device.c: 2346: break;
 21916  0028E4  0012               	return	
 21917  0028E6                     
 21918                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 21919  0028E6  0104               	movlb	4	; () banked
 21920  0028E8  5134               	movf	52,w,b	;volatile
 21921  0028EA  0D01               	mullw	1
 21922  0028EC  0E57               	movlw	low _USBAlternateInterface
 21923  0028EE  24F3               	addwf	prodl,w,c
 21924  0028F0  0100               	movlb	0	; () banked
 21925  0028F2  6F68               	movwf	_inPipes& (0+255),b	;volatile
 21926  0028F4  0E00               	movlw	high _USBAlternateInterface
 21927  0028F6  20F4               	addwfc	prodh,w,c
 21928  0028F8  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21929                           
 21930                           ; BSR set to: 0
 21931                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21932  0028FA  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 21936  0028FC  0E01               	movlw	1
 21937  0028FE  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21938                           
 21939                           ; BSR set to: 0
 21940                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 21941  002900  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21942                           
 21943                           ;usb_device.c: 2352: break;
 21944  002902  0012               	return	
 21945  002904                     i2l1755:
 21946                           
 21947                           ; BSR set to: 4
 21948                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 21949  002904  0100               	movlb	0	; () banked
 21950  002906  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21951                           
 21952                           ; BSR set to: 0
 21953                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 21954  002908  0104               	movlb	4	; () banked
 21955  00290A  5134               	movf	52,w,b	;volatile
 21956  00290C  0D01               	mullw	1
 21957  00290E  0E57               	movlw	low _USBAlternateInterface
 21958  002910  24F3               	addwf	prodl,w,c
 21959  002912  6ED9               	movwf	fsr2l,c
 21960  002914  0E00               	movlw	high _USBAlternateInterface
 21961  002916  20F4               	addwfc	prodh,w,c
 21962  002918  6EDA               	movwf	fsr2h,c
 21963  00291A  C432 FFDF          	movff	1074,indf2	;volatile
 21964                           
 21965                           ;usb_device.c: 2356: break;
 21966  00291E  0012               	return	
 21967  002920                     
 21968                           ; BSR set to: 4
 21969                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 21970                           
 21971                           ; BSR set to: 4
 21972  002920  0E00               	movlw	0
 21973  002922  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21974  002924  0E02               	movlw	2
 21975  002926  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21976  002928  0E00               	movlw	0
 21977  00292A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21978  00292C  0E00               	movlw	0
 21979  00292E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21980  002930  0E00               	movlw	0
 21981  002932  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21982  002934  0E00               	movlw	0
 21983  002936  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21984  002938  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21985                           
 21986                           ;usb_device.c: 2363: }
 21987                           
 21988                           ;usb_device.c: 2362: break;
 21989                           
 21990                           ;usb_device.c: 2361: default:
 21991                           
 21992                           ;usb_device.c: 2360: case 12:
 21993                           
 21994                           ;usb_device.c: 2359: break;
 21995  00293C  0012               	return	
 21996  00293E                     i2l1745:
 21997  00293E  0104               	movlb	4	; () banked
 21998  002940  5131               	movf	49,w,b	;volatile
 21999                           
 22000                           ; Switch size 1, requested type "space"
 22001                           ; Number of cases is 11, Range of values is 0 to 12
 22002                           ; switch strategies available:
 22003                           ; Name         Instructions Cycles
 22004                           ; simple_byte           34    18 (average)
 22005                           ;	Chosen strategy is simple_byte
 22006  002942  0A00               	xorlw	0	; case 0
 22007  002944  B4D8               	btfsc	status,2,c
 22008  002946  D7C9               	goto	i2l1751
 22009  002948  0A01               	xorlw	1	; case 1
 22010  00294A  B4D8               	btfsc	status,2,c
 22011  00294C  D7C9               	goto	i2l1752
 22012  00294E  0A02               	xorlw	2	; case 3
 22013  002950  B4D8               	btfsc	status,2,c
 22014  002952  D7C6               	goto	i2l1752
 22015  002954  0A06               	xorlw	6	; case 5
 22016  002956  B4D8               	btfsc	status,2,c
 22017  002958  D7AB               	goto	i2l1746
 22018  00295A  0A03               	xorlw	3	; case 6
 22019  00295C  B4D8               	btfsc	status,2,c
 22020  00295E  D7AD               	goto	i2l1748
 22021  002960  0A01               	xorlw	1	; case 7
 22022  002962  B4D8               	btfsc	status,2,c
 22023  002964  D7DD               	goto	i2l1756
 22024  002966  0A0F               	xorlw	15	; case 8
 22025  002968  B4D8               	btfsc	status,2,c
 22026  00296A  D7AD               	goto	i2l1750
 22027  00296C  0A01               	xorlw	1	; case 9
 22028  00296E  B4D8               	btfsc	status,2,c
 22029  002970  D7A7               	goto	i2l1749
 22030  002972  0A03               	xorlw	3	; case 10
 22031  002974  B4D8               	btfsc	status,2,c
 22032  002976  D7B7               	goto	i2l1754
 22033  002978  0A01               	xorlw	1	; case 11
 22034  00297A  B4D8               	btfsc	status,2,c
 22035  00297C  D7C3               	goto	i2l1755
 22036  00297E  0A07               	xorlw	7	; case 12
 22037  002980  0012               	return	
 22038  002982                     __end_of_USBCheckStdRequest:
 22039                           	opt stack 0
 22040                           pclatu	equ	0xFFB
 22041                           pclath	equ	0xFFA
 22042                           tblptru	equ	0xFF8
 22043                           tblptrh	equ	0xFF7
 22044                           tblptrl	equ	0xFF6
 22045                           tablat	equ	0xFF5
 22046                           prodh	equ	0xFF4
 22047                           prodl	equ	0xFF3
 22048                           intcon	equ	0xFF2
 22049                           indf0	equ	0xFEF
 22050                           postinc0	equ	0xFEE
 22051                           fsr0h	equ	0xFEA
 22052                           fsr0l	equ	0xFE9
 22053                           wreg	equ	0xFE8
 22054                           indf1	equ	0xFE7
 22055                           postdec1	equ	0xFE5
 22056                           fsr1h	equ	0xFE2
 22057                           fsr1l	equ	0xFE1
 22058                           indf2	equ	0xFDF
 22059                           postinc2	equ	0xFDE
 22060                           postdec2	equ	0xFDD
 22061                           plusw2	equ	0xFDB
 22062                           fsr2h	equ	0xFDA
 22063                           fsr2l	equ	0xFD9
 22064                           status	equ	0xFD8
 22065                           
 22066 ;; *************** function _USBStdSetCfgHandler *****************
 22067 ;; Defined at:
 22068 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;		None
 22071 ;; Auto vars:     Size  Location     Type
 22072 ;;  i               1   21[COMRAM] unsigned char 
 22073 ;; Return value:  Size  Location     Type
 22074 ;;                  1    wreg      void 
 22075 ;; Registers used:
 22076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22077 ;; Tracked objects:
 22078 ;;		On entry : 0/0
 22079 ;;		On exit  : 0/0
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22082 ;;      Params:         0       0       0       0       0       0       0       0       0
 22083 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22085 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22086 ;;Total ram usage:        1 bytes
 22087 ;; Hardware stack levels used:    1
 22088 ;; Hardware stack levels required when called:    5
 22089 ;; This function calls:
 22090 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22091 ;;		i2_memset
 22092 ;; This function is called by:
 22093 ;;		_USBCheckStdRequest
 22094 ;; This function uses a non-reentrant model
 22095 ;;
 22096                           
 22097                           	psect	text98
 22098  002982                     __ptext98:
 22099                           	opt stack 0
 22100  002982                     _USBStdSetCfgHandler:
 22101                           	opt stack 10
 22102                           
 22103                           ;usb_device.c: 1631: uint8_t i;
 22104                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 22105                           
 22106                           ;incstack = 0
 22107  002982  0100               	movlb	0	; () banked
 22108  002984  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22109                           
 22110                           ; BSR set to: 0
 22111                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 22112  002986  0E6B               	movlw	107
 22113  002988  6E01               	movwf	i2memset@p1,c
 22114  00298A  0E0F               	movlw	15
 22115  00298C  6E02               	movwf	i2memset@p1+1,c
 22116  00298E  0E00               	movlw	0
 22117  002990  6E04               	movwf	i2memset@c+1,c
 22118  002992  0E00               	movlw	0
 22119  002994  6E03               	movwf	i2memset@c,c
 22120  002996  0E00               	movlw	0
 22121  002998  6E06               	movwf	i2memset@n+1,c
 22122  00299A  0E02               	movlw	2
 22123  00299C  6E05               	movwf	i2memset@n,c
 22124  00299E  ECD3  F023         	call	i2_memset	;wreg free
 22125                           
 22126                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 22127  0029A2  0E00               	movlw	0
 22128  0029A4  6E01               	movwf	i2memset@p1,c
 22129  0029A6  0E04               	movlw	4
 22130  0029A8  6E02               	movwf	i2memset@p1+1,c
 22131  0029AA  0E00               	movlw	0
 22132  0029AC  6E04               	movwf	i2memset@c+1,c
 22133  0029AE  0E00               	movlw	0
 22134  0029B0  6E03               	movwf	i2memset@c,c
 22135  0029B2  0E00               	movlw	0
 22136  0029B4  6E06               	movwf	i2memset@n+1,c
 22137  0029B6  0E30               	movlw	48
 22138  0029B8  6E05               	movwf	i2memset@n,c
 22139  0029BA  ECD3  F023         	call	i2_memset	;wreg free
 22140                           
 22141                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 22142  0029BE  8C60               	bsf	3936,6,c	;volatile
 22143                           
 22144                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 22145  0029C0  0E00               	movlw	0
 22146  0029C2  6E16               	movwf	USBStdSetCfgHandler@i,c
 22147  0029C4                     i2l6889:
 22148  0029C4  0E02               	movlw	2
 22149  0029C6  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 22150  0029C8  D001               	goto	i2l1660
 22151  0029CA  D016               	goto	i2u475_40
 22152  0029CC                     i2l1660:
 22153                           
 22154                           ;usb_device.c: 1649: {
 22155                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 22156  0029CC  5016               	movf	USBStdSetCfgHandler@i,w,c
 22157  0029CE  0D01               	mullw	1
 22158  0029D0  0E87               	movlw	low _ep_data_in
 22159  0029D2  24F3               	addwf	prodl,w,c
 22160  0029D4  6ED9               	movwf	fsr2l,c
 22161  0029D6  0E00               	movlw	high _ep_data_in
 22162  0029D8  20F4               	addwfc	prodh,w,c
 22163  0029DA  6EDA               	movwf	fsr2h,c
 22164  0029DC  0E00               	movlw	0
 22165  0029DE  6EDF               	movwf	indf2,c
 22166                           
 22167                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 22168  0029E0  5016               	movf	USBStdSetCfgHandler@i,w,c
 22169  0029E2  0D01               	mullw	1
 22170  0029E4  0E84               	movlw	low _ep_data_out
 22171  0029E6  24F3               	addwf	prodl,w,c
 22172  0029E8  6ED9               	movwf	fsr2l,c
 22173  0029EA  0E00               	movlw	high _ep_data_out
 22174  0029EC  20F4               	addwfc	prodh,w,c
 22175  0029EE  6EDA               	movwf	fsr2h,c
 22176  0029F0  0E00               	movlw	0
 22177  0029F2  6EDF               	movwf	indf2,c
 22178  0029F4  2A16               	incf	USBStdSetCfgHandler@i,f,c
 22179  0029F6  D7E6               	goto	i2l6889
 22180  0029F8                     i2u475_40:
 22181                           
 22182                           ;usb_device.c: 1652: }
 22183                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 22184  0029F8  0E57               	movlw	low _USBAlternateInterface
 22185  0029FA  6E01               	movwf	i2memset@p1,c
 22186  0029FC  0E00               	movlw	high _USBAlternateInterface
 22187  0029FE  6E02               	movwf	i2memset@p1+1,c
 22188  002A00  0E00               	movlw	0
 22189  002A02  6E04               	movwf	i2memset@c+1,c
 22190  002A04  0E00               	movlw	0
 22191  002A06  6E03               	movwf	i2memset@c,c
 22192  002A08  0E00               	movlw	0
 22193  002A0A  6E06               	movwf	i2memset@n+1,c
 22194  002A0C  0E02               	movlw	2
 22195  002A0E  6E05               	movwf	i2memset@n,c
 22196  002A10  ECD3  F023         	call	i2_memset	;wreg free
 22197                           
 22198                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 22199  002A14  9C60               	bcf	3936,6,c	;volatile
 22200                           
 22201                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22202  002A16  0E08               	movlw	8
 22203  002A18  0100               	movlb	0	; () banked
 22204  002A1A  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 22205  002A1C  0E04               	movlw	4
 22206  002A1E  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 22210  002A20  0E00               	movlw	0
 22211  002A22  6E3A               	movwf	_pBDTEntryEP0OutCurrent,c
 22212  002A24  0E04               	movlw	4
 22213  002A26  6E3B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22217  002A28  C03A  F038         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22218  002A2C  C03B  F039         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22219                           
 22220                           ; BSR set to: 0
 22221                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 22222  002A30  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 22223                           
 22224                           ; BSR set to: 0
 22225                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 22226  002A34  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 22227  002A36  A4D8               	btfss	status,2,c
 22228  002A38  D003               	goto	i2l1662
 22229                           
 22230                           ; BSR set to: 0
 22231                           ;usb_device.c: 1671: {
 22232                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 22233  002A3A  0E10               	movlw	16
 22234  002A3C  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 22235                           
 22236                           ;usb_device.c: 1674: }
 22237  002A3E  0012               	return	
 22238  002A40                     i2l1662:
 22239                           
 22240                           ; BSR set to: 0
 22241                           ;usb_device.c: 1675: else
 22242                           ;usb_device.c: 1676: {
 22243                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 22244                           
 22245                           ; BSR set to: 0
 22246  002A40  0E00               	movlw	0
 22247  002A42  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22248  002A44  0E01               	movlw	1
 22249  002A46  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22250  002A48  0E5A               	movlw	low _USBActiveConfiguration
 22251  002A4A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22252  002A4C  0E00               	movlw	high _USBActiveConfiguration
 22253  002A4E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22254  002A50  0E00               	movlw	0
 22255  002A52  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22256  002A54  0E01               	movlw	1
 22257  002A56  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22258  002A58  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22259                           
 22260                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 22261  002A5C  0E20               	movlw	32
 22262  002A5E  0100               	movlb	0	; () banked
 22263  002A60  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 22264  002A62  0012               	return	
 22265  002A64                     __end_of_USBStdSetCfgHandler:
 22266                           	opt stack 0
 22267                           pclatu	equ	0xFFB
 22268                           pclath	equ	0xFFA
 22269                           tblptru	equ	0xFF8
 22270                           tblptrh	equ	0xFF7
 22271                           tblptrl	equ	0xFF6
 22272                           tablat	equ	0xFF5
 22273                           prodh	equ	0xFF4
 22274                           prodl	equ	0xFF3
 22275                           intcon	equ	0xFF2
 22276                           indf0	equ	0xFEF
 22277                           postinc0	equ	0xFEE
 22278                           fsr0h	equ	0xFEA
 22279                           fsr0l	equ	0xFE9
 22280                           wreg	equ	0xFE8
 22281                           indf1	equ	0xFE7
 22282                           postdec1	equ	0xFE5
 22283                           fsr1h	equ	0xFE2
 22284                           fsr1l	equ	0xFE1
 22285                           indf2	equ	0xFDF
 22286                           postinc2	equ	0xFDE
 22287                           postdec2	equ	0xFDD
 22288                           plusw2	equ	0xFDB
 22289                           fsr2h	equ	0xFDA
 22290                           fsr2l	equ	0xFD9
 22291                           status	equ	0xFD8
 22292                           
 22293 ;; *************** function i2_memset *****************
 22294 ;; Defined at:
 22295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 22296 ;; Parameters:    Size  Location     Type
 22297 ;;  p1              2    0[COMRAM] PTR void 
 22298 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22299 ;;  c               2    2[COMRAM] int 
 22300 ;;  n               2    4[COMRAM] unsigned int 
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;  memset          2    6[COMRAM] PTR unsigned char 
 22303 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22304 ;; Return value:  Size  Location     Type
 22305 ;;                  2    0[COMRAM] PTR void 
 22306 ;; Registers used:
 22307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22308 ;; Tracked objects:
 22309 ;;		On entry : 0/0
 22310 ;;		On exit  : 0/0
 22311 ;;		Unchanged: 0/0
 22312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22313 ;;      Params:         6       0       0       0       0       0       0       0       0
 22314 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22316 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22317 ;;Total ram usage:        8 bytes
 22318 ;; Hardware stack levels used:    1
 22319 ;; This function calls:
 22320 ;;		Nothing
 22321 ;; This function is called by:
 22322 ;;		_USBStdSetCfgHandler
 22323 ;;		i2_USBDeviceInit
 22324 ;; This function uses a non-reentrant model
 22325 ;;
 22326                           
 22327                           	psect	text99
 22328  0047A6                     __ptext99:
 22329                           	opt stack 0
 22330  0047A6                     i2_memset:
 22331                           	opt stack 17
 22332                           
 22333                           ; BSR set to: 0
 22334                           ;incstack = 0
 22335  0047A6  C001  F007         	movff	i2memset@p1,i2memset@p
 22336  0047AA  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 22337  0047AE  D008               	goto	i2l2352
 22338  0047B0                     i2l6693:
 22339  0047B0  C007  FFD9         	movff	i2memset@p,fsr2l
 22340  0047B4  C008  FFDA         	movff	i2memset@p+1,fsr2h
 22341  0047B8  C003  FFDF         	movff	i2memset@c,indf2
 22342  0047BC  4A07               	infsnz	i2memset@p,f,c
 22343  0047BE  2A08               	incf	i2memset@p+1,f,c
 22344  0047C0                     i2l2352:
 22345  0047C0  0605               	decf	i2memset@n,f,c
 22346  0047C2  A0D8               	btfss	status,0,c
 22347  0047C4  0606               	decf	i2memset@n+1,f,c
 22348  0047C6  2805               	incf	i2memset@n,w,c
 22349  0047C8  E1F3               	bnz	i2l6693
 22350  0047CA  2806               	incf	i2memset@n+1,w,c
 22351  0047CC  B4D8               	btfsc	status,2,c
 22352  0047CE  0012               	return	
 22353  0047D0  D7EF               	goto	i2l2353
 22354  0047D2                     __end_ofi2_memset:
 22355                           	opt stack 0
 22356                           pclatu	equ	0xFFB
 22357                           pclath	equ	0xFFA
 22358                           tblptru	equ	0xFF8
 22359                           tblptrh	equ	0xFF7
 22360                           tblptrl	equ	0xFF6
 22361                           tablat	equ	0xFF5
 22362                           prodh	equ	0xFF4
 22363                           prodl	equ	0xFF3
 22364                           intcon	equ	0xFF2
 22365                           indf0	equ	0xFEF
 22366                           postinc0	equ	0xFEE
 22367                           fsr0h	equ	0xFEA
 22368                           fsr0l	equ	0xFE9
 22369                           wreg	equ	0xFE8
 22370                           indf1	equ	0xFE7
 22371                           postdec1	equ	0xFE5
 22372                           fsr1h	equ	0xFE2
 22373                           fsr1l	equ	0xFE1
 22374                           indf2	equ	0xFDF
 22375                           postinc2	equ	0xFDE
 22376                           postdec2	equ	0xFDD
 22377                           plusw2	equ	0xFDB
 22378                           fsr2h	equ	0xFDA
 22379                           fsr2l	equ	0xFD9
 22380                           status	equ	0xFD8
 22381                           
 22382 ;; *************** function _USBStdGetStatusHandler *****************
 22383 ;; Defined at:
 22384 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 22385 ;; Parameters:    Size  Location     Type
 22386 ;;		None
 22387 ;; Auto vars:     Size  Location     Type
 22388 ;;  p               2    1[COMRAM] PTR struct __BDT
 22389 ;;		 -> BDT(48), NULL(0), 
 22390 ;; Return value:  Size  Location     Type
 22391 ;;                  1    wreg      void 
 22392 ;; Registers used:
 22393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22394 ;; Tracked objects:
 22395 ;;		On entry : 0/0
 22396 ;;		On exit  : 0/0
 22397 ;;		Unchanged: 0/0
 22398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22399 ;;      Params:         0       0       0       0       0       0       0       0       0
 22400 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22401 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22402 ;;      Totals:         3       0       0       0       0       0       0       0       0
 22403 ;;Total ram usage:        3 bytes
 22404 ;; Hardware stack levels used:    1
 22405 ;; This function calls:
 22406 ;;		Nothing
 22407 ;; This function is called by:
 22408 ;;		_USBCheckStdRequest
 22409 ;; This function uses a non-reentrant model
 22410 ;;
 22411                           
 22412                           	psect	text100
 22413  003762                     __ptext100:
 22414                           	opt stack 0
 22415  003762                     _USBStdGetStatusHandler:
 22416                           	opt stack 15
 22417                           
 22418                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 22419                           
 22420                           ;incstack = 0
 22421  003762  0E00               	movlw	0
 22422  003764  0104               	movlb	4	; () banked
 22423  003766  6F38               	movwf	56,b	;volatile
 22424                           
 22425                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 22426  003768  0E00               	movlw	0
 22427  00376A  6F39               	movwf	57,b	;volatile
 22428                           
 22429                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 22430  00376C  D038               	goto	i2l1681
 22431  00376E                     i2l1682:
 22432                           
 22433                           ; BSR set to: 4
 22434                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 22435  00376E  0100               	movlb	0	; () banked
 22436  003770  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22437                           
 22438                           ;usb_device.c: 1789: }
 22439                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 22440                           
 22441                           ; BSR set to: 4
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;usb_device.c: 1787: {
 22445                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 22446                           
 22447                           ;usb_device.c: 1786: if(0 == 1)
 22448  003772  044A               	decf	_RemoteWakeup,w,c	;volatile
 22449  003774  A4D8               	btfss	status,2,c
 22450  003776  D03E               	goto	i2l1685
 22451                           
 22452                           ;usb_device.c: 1792: {
 22453                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 22454  003778  0104               	movlb	4	; () banked
 22455  00377A  8338               	bsf	56,1,b	;volatile
 22456                           
 22457                           ; BSR set to: 4
 22458                           ;usb_device.c: 1794: }
 22459                           ;usb_device.c: 1795: break;
 22460  00377C  D03B               	goto	i2l1685
 22461  00377E                     i2l1686:
 22462                           
 22463                           ; BSR set to: 4
 22464                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 22465  00377E  0100               	movlb	0	; () banked
 22466  003780  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22467                           
 22468                           ;usb_device.c: 1798: break;
 22469  003782  D038               	goto	i2l1685
 22470  003784                     i2l1687:
 22471                           
 22472                           ; BSR set to: 4
 22473                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 22474  003784  0100               	movlb	0	; () banked
 22475  003786  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22476                           
 22477                           ;usb_device.c: 1804: {
 22478                           ;usb_device.c: 1805: BDT_ENTRY *p;
 22479                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 22480  003788  0104               	movlb	4	; () banked
 22481  00378A  BF34               	btfsc	52,7,b	;volatile
 22482  00378C  D00A               	goto	i2l1688
 22483                           
 22484                           ; BSR set to: 4
 22485                           ;usb_device.c: 1808: {
 22486                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22487  00378E  5134               	movf	52,w,b	;volatile
 22488  003790  0B0F               	andlw	15
 22489  003792  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22490  003794  5001               	movf	??_USBStdGetStatusHandler,w,c
 22491  003796  0D02               	mullw	2
 22492  003798  0E74               	movlw	low _pBDTEntryOut
 22493  00379A  24F3               	addwf	prodl,w,c
 22494  00379C  6ED9               	movwf	fsr2l,c
 22495  00379E  0E00               	movlw	high _pBDTEntryOut
 22496  0037A0  D009               	goto	L20
 22497  0037A2                     i2l1688:
 22498                           
 22499                           ; BSR set to: 4
 22500                           ;usb_device.c: 1811: else
 22501                           ;usb_device.c: 1812: {
 22502                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 22503                           
 22504                           ; BSR set to: 4
 22505  0037A2  5134               	movf	52,w,b	;volatile
 22506  0037A4  0B0F               	andlw	15
 22507  0037A6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22508  0037A8  5001               	movf	??_USBStdGetStatusHandler,w,c
 22509  0037AA  0D02               	mullw	2
 22510  0037AC  0E6E               	movlw	low _pBDTEntryIn
 22511  0037AE  24F3               	addwf	prodl,w,c
 22512  0037B0  6ED9               	movwf	fsr2l,c
 22513  0037B2  0E00               	movlw	high _pBDTEntryIn
 22514  0037B4                     L20:
 22515  0037B4  20F4               	addwfc	prodh,w,c
 22516  0037B6  6EDA               	movwf	fsr2h,c
 22517  0037B8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 22518  0037BC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 22519                           
 22520                           ; BSR set to: 4
 22521                           ;usb_device.c: 1814: }
 22522                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 22523                           
 22524                           ; BSR set to: 4
 22525  0037C0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22526  0037C4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22527  0037C8  AEDF               	btfss	indf2,7,c
 22528  0037CA  D014               	goto	i2l1685
 22529                           
 22530                           ; BSR set to: 4
 22531  0037CC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22532  0037D0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22533  0037D4  A4DF               	btfss	indf2,2,c
 22534  0037D6  D00E               	goto	i2l1685
 22535                           
 22536                           ; BSR set to: 4
 22537                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 22538  0037D8  0E01               	movlw	1
 22539  0037DA  6F38               	movwf	56,b	;volatile
 22540                           
 22541                           ; BSR set to: 4
 22542                           ;usb_device.c: 1819: }
 22543                           ;usb_device.c: 1820: }
 22544                           
 22545                           ; BSR set to: 4
 22546                           ;usb_device.c: 1818: break;
 22547  0037DC  D00B               	goto	i2l1685
 22548  0037DE                     i2l1681:
 22549                           
 22550                           ; BSR set to: 4
 22551                           
 22552                           ; BSR set to: 4
 22553  0037DE  5130               	movf	48,w,b	;volatile
 22554  0037E0  0B1F               	andlw	31
 22555                           
 22556                           ; Switch size 1, requested type "space"
 22557                           ; Number of cases is 3, Range of values is 0 to 2
 22558                           ; switch strategies available:
 22559                           ; Name         Instructions Cycles
 22560                           ; simple_byte           10     6 (average)
 22561                           ;	Chosen strategy is simple_byte
 22562  0037E2  0A00               	xorlw	0	; case 0
 22563  0037E4  B4D8               	btfsc	status,2,c
 22564  0037E6  D7C3               	goto	i2l1682
 22565  0037E8  0A01               	xorlw	1	; case 1
 22566  0037EA  B4D8               	btfsc	status,2,c
 22567  0037EC  D7C8               	goto	i2l1686
 22568  0037EE  0A03               	xorlw	3	; case 2
 22569  0037F0  B4D8               	btfsc	status,2,c
 22570  0037F2  D7C8               	goto	i2l1687
 22571  0037F4                     i2l1685:
 22572                           
 22573                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 22574  0037F4  0100               	movlb	0	; () banked
 22575  0037F6  AF6B               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 22576  0037F8  0012               	return	
 22577                           
 22578                           ; BSR set to: 0
 22579                           ;usb_device.c: 1823: {
 22580                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 22581  0037FA  0E38               	movlw	56
 22582  0037FC  6F68               	movwf	_inPipes& (0+255),b	;volatile
 22583  0037FE  0E04               	movlw	4
 22584  003800  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22588  003802  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22589                           
 22590                           ; BSR set to: 0
 22591                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 22592  003804  0E02               	movlw	2
 22593  003806  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22594  003808  0012               	return	
 22595  00380A                     __end_of_USBStdGetStatusHandler:
 22596                           	opt stack 0
 22597                           pclatu	equ	0xFFB
 22598                           pclath	equ	0xFFA
 22599                           tblptru	equ	0xFF8
 22600                           tblptrh	equ	0xFF7
 22601                           tblptrl	equ	0xFF6
 22602                           tablat	equ	0xFF5
 22603                           prodh	equ	0xFF4
 22604                           prodl	equ	0xFF3
 22605                           intcon	equ	0xFF2
 22606                           indf0	equ	0xFEF
 22607                           postinc0	equ	0xFEE
 22608                           fsr0h	equ	0xFEA
 22609                           fsr0l	equ	0xFE9
 22610                           wreg	equ	0xFE8
 22611                           indf1	equ	0xFE7
 22612                           postdec1	equ	0xFE5
 22613                           fsr1h	equ	0xFE2
 22614                           fsr1l	equ	0xFE1
 22615                           indf2	equ	0xFDF
 22616                           postinc2	equ	0xFDE
 22617                           postdec2	equ	0xFDD
 22618                           plusw2	equ	0xFDB
 22619                           fsr2h	equ	0xFDA
 22620                           fsr2l	equ	0xFD9
 22621                           status	equ	0xFD8
 22622                           
 22623 ;; *************** function _USBStdGetDscHandler *****************
 22624 ;; Defined at:
 22625 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 22626 ;; Parameters:    Size  Location     Type
 22627 ;;		None
 22628 ;; Auto vars:     Size  Location     Type
 22629 ;;		None
 22630 ;; Return value:  Size  Location     Type
 22631 ;;                  1    wreg      void 
 22632 ;; Registers used:
 22633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22634 ;; Tracked objects:
 22635 ;;		On entry : 0/0
 22636 ;;		On exit  : 0/0
 22637 ;;		Unchanged: 0/0
 22638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22639 ;;      Params:         0       0       0       0       0       0       0       0       0
 22640 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22641 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22642 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22643 ;;Total ram usage:        2 bytes
 22644 ;; Hardware stack levels used:    1
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_USBCheckStdRequest
 22649 ;; This function uses a non-reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text101
 22653  00200E                     __ptext101:
 22654                           	opt stack 0
 22655  00200E                     _USBStdGetDscHandler:
 22656                           	opt stack 15
 22657                           
 22658                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;incstack = 0
 22662  00200E  0E80               	movlw	128
 22663  002010  0104               	movlb	4	; () banked
 22664  002012  1930               	xorwf	48,w,b	;volatile
 22665  002014  A4D8               	btfss	status,2,c
 22666  002016  0012               	return	
 22667                           
 22668                           ; BSR set to: 4
 22669                           ;usb_device.c: 1707: {
 22670                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 22671  002018  0EC0               	movlw	192
 22672  00201A  0100               	movlb	0	; () banked
 22673  00201C  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22674                           
 22675                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 22676  00201E  D082               	goto	i2l1668
 22677  002020                     
 22678                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 22679                           
 22680                           ; BSR set to: 0
 22681  002020  0E06               	movlw	low _device_dsc
 22682  002022  0100               	movlb	0	; () banked
 22683  002024  6F68               	movwf	_inPipes& (0+255),b	;volatile
 22684  002026  0E7A               	movlw	high _device_dsc
 22685  002028  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 22689  00202A  0E00               	movlw	0
 22690  00202C  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22691  00202E  0E12               	movlw	18
 22692  002030  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22693                           
 22694                           ;usb_device.c: 1715: break;
 22695  002032  0012               	return	
 22696  002034                     
 22697                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 22698                           
 22699                           ; BSR set to: 0
 22700  002034  0104               	movlb	4	; () banked
 22701  002036  5132               	movf	50,w,b	;volatile
 22702  002038  A4D8               	btfss	status,2,c
 22703  00203A  D040               	goto	i2l1672
 22704                           
 22705                           ; BSR set to: 4
 22706                           ;usb_device.c: 1721: {
 22707                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 22708  00203C  5132               	movf	50,w,b	;volatile
 22709  00203E  0D02               	mullw	2
 22710  002040  0E59               	movlw	low _USB_CD_Ptr
 22711  002042  24F3               	addwf	prodl,w,c
 22712  002044  6EF6               	movwf	tblptrl,c
 22713  002046  0E76               	movlw	high _USB_CD_Ptr
 22714  002048  20F4               	addwfc	prodh,w,c
 22715  00204A  6EF7               	movwf	tblptrh,c
 22716  00204C                     	if	0	;There are less than 3 active tblptr bytes
 22717  00204C                     	endif
 22718  00204C  0009               	tblrd		*+
 22719  00204E  CFF5 F068          	movff	tablat,_inPipes	;volatile
 22720  002052  000A               	tblrd		*-
 22721  002054  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
 22722                           
 22723                           ; BSR set to: 4
 22724                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 22725  002058  0E02               	movlw	2
 22726  00205A  0100               	movlb	0	; () banked
 22727  00205C  2568               	addwf	_inPipes& (0+255),w,b	;volatile
 22728  00205E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22729  002060  0E00               	movlw	0
 22730  002062  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 22731  002064  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22732  002066  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22733  00206A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22734  00206E  6AF8               	clrf	tblptru,c
 22735  002070  0E07               	movlw	(high __ramtop+-1)
 22736  002072  64F7               	cpfsgt	tblptrh,c
 22737  002074  D003               	bra	i2u479_47
 22738  002076  0008               	tblrd		*
 22739  002078  50F5               	movf	tablat,w,c
 22740  00207A  D005               	bra	i2u479_40
 22741  00207C                     i2u479_47:
 22742  00207C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22743  002080  CFF7 FFEA          	movff	tblptrh,fsr0h
 22744  002084  50EF               	movf	indf0,w,c
 22745  002086                     i2u479_40:
 22746  002086  0100               	movlb	0	; () banked
 22747  002088  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22748                           
 22749                           ; BSR set to: 0
 22750                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 22751  00208A  0E03               	movlw	3
 22752  00208C  2568               	addwf	_inPipes& (0+255),w,b	;volatile
 22753  00208E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22754  002090  0E00               	movlw	0
 22755  002092  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 22756  002094  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22757  002096  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22758  00209A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22759  00209E  6AF8               	clrf	tblptru,c
 22760  0020A0  0E07               	movlw	(high __ramtop+-1)
 22761  0020A2  64F7               	cpfsgt	tblptrh,c
 22762  0020A4  D003               	bra	i2u480_47
 22763  0020A6  0008               	tblrd		*
 22764  0020A8  50F5               	movf	tablat,w,c
 22765  0020AA  D005               	bra	i2u480_40
 22766  0020AC                     i2u480_47:
 22767  0020AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 22768  0020B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 22769  0020B4  50EF               	movf	indf0,w,c
 22770  0020B6                     i2u480_40:
 22771  0020B6  0100               	movlb	0	; () banked
 22772  0020B8  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22773                           
 22774                           ;usb_device.c: 1729: }
 22775  0020BA  0012               	return	
 22776  0020BC                     i2l1672:
 22777                           
 22778                           ;usb_device.c: 1730: else
 22779                           ;usb_device.c: 1731: {
 22780                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 22781                           
 22782                           ; BSR set to: 0
 22783  0020BC  0E00               	movlw	0
 22784  0020BE  0100               	movlb	0	; () banked
 22785  0020C0  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22786                           
 22787                           ; BSR set to: 0
 22788                           ;usb_device.c: 1733: }
 22789                           ;usb_device.c: 1734: break;
 22790  0020C2  0012               	return	
 22791  0020C4                     
 22792                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 22793                           
 22794                           ; BSR set to: 0
 22795  0020C4  0E03               	movlw	3
 22796  0020C6  0104               	movlb	4	; () banked
 22797  0020C8  6132               	cpfslt	50,b	;volatile
 22798  0020CA  D024               	goto	i2l1675
 22799                           
 22800                           ; BSR set to: 4
 22801                           ;usb_device.c: 1740: {
 22802                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 22803  0020CC  5132               	movf	50,w,b	;volatile
 22804  0020CE  0D02               	mullw	2
 22805  0020D0  0E53               	movlw	low _USB_SD_Ptr
 22806  0020D2  24F3               	addwf	prodl,w,c
 22807  0020D4  6EF6               	movwf	tblptrl,c
 22808  0020D6  0E76               	movlw	high _USB_SD_Ptr
 22809  0020D8  20F4               	addwfc	prodh,w,c
 22810  0020DA  6EF7               	movwf	tblptrh,c
 22811  0020DC                     	if	0	;There are less than 3 active tblptr bytes
 22812  0020DC                     	endif
 22813  0020DC  0009               	tblrd		*+
 22814  0020DE  CFF5 F068          	movff	tablat,_inPipes	;volatile
 22815  0020E2  000A               	tblrd		*-
 22816  0020E4  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
 22817                           
 22818                           ; BSR set to: 4
 22819                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 22820  0020E8  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 22821  0020EC  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22822  0020F0  6AF8               	clrf	tblptru,c
 22823  0020F2  0E07               	movlw	(high __ramtop+-1)
 22824  0020F4  64F7               	cpfsgt	tblptrh,c
 22825  0020F6  D003               	bra	i2u482_47
 22826  0020F8  0008               	tblrd		*
 22827  0020FA  50F5               	movf	tablat,w,c
 22828  0020FC  D005               	bra	i2u482_40
 22829  0020FE                     i2u482_47:
 22830  0020FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 22831  002102  CFF7 FFEA          	movff	tblptrh,fsr0h
 22832  002106  50EF               	movf	indf0,w,c
 22833  002108                     i2u482_40:
 22834  002108  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22835  00210A  5001               	movf	??_USBStdGetDscHandler,w,c
 22836  00210C  0100               	movlb	0	; () banked
 22837  00210E  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22838  002110  6B6D               	clrf	(_inPipes+5)& (0+255),b	;volatile
 22839                           
 22840                           ;usb_device.c: 1745: }
 22841  002112  0012               	return	
 22842  002114                     i2l1675:
 22843                           
 22844                           ;usb_device.c: 1746: else
 22845                           ;usb_device.c: 1747: {
 22846                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 22847                           
 22848                           ; BSR set to: 0
 22849  002114  0E00               	movlw	0
 22850  002116  0100               	movlb	0	; () banked
 22851  002118  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;usb_device.c: 1749: }
 22855                           ;usb_device.c: 1750: break;
 22856  00211A  0012               	return	
 22857  00211C                     
 22858                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 22859                           
 22860                           ; BSR set to: 0
 22861  00211C  0E00               	movlw	0
 22862  00211E  0100               	movlb	0	; () banked
 22863  002120  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22864                           
 22865                           ; BSR set to: 0
 22866                           ;usb_device.c: 1754: }
 22867                           
 22868                           ;usb_device.c: 1753: break;
 22869  002122  0012               	return	
 22870  002124                     i2l1668:
 22871                           
 22872                           ; BSR set to: 0
 22873                           
 22874                           ; BSR set to: 0
 22875  002124  0104               	movlb	4	; () banked
 22876  002126  5133               	movf	51,w,b	;volatile
 22877                           
 22878                           ; Switch size 1, requested type "space"
 22879                           ; Number of cases is 3, Range of values is 1 to 3
 22880                           ; switch strategies available:
 22881                           ; Name         Instructions Cycles
 22882                           ; simple_byte           10     6 (average)
 22883                           ;	Chosen strategy is simple_byte
 22884  002128  0A01               	xorlw	1	; case 1
 22885  00212A  B4D8               	btfsc	status,2,c
 22886  00212C  D779               	goto	i2l1669
 22887  00212E  0A03               	xorlw	3	; case 2
 22888  002130  B4D8               	btfsc	status,2,c
 22889  002132  D780               	goto	i2l1671
 22890  002134  0A01               	xorlw	1	; case 3
 22891  002136  B4D8               	btfsc	status,2,c
 22892  002138  D7C5               	goto	i2l1674
 22893  00213A  D7F0               	goto	i2l1677
 22894  00213C                     __end_of_USBStdGetDscHandler:
 22895                           	opt stack 0
 22896                           pclatu	equ	0xFFB
 22897                           pclath	equ	0xFFA
 22898                           tblptru	equ	0xFF8
 22899                           tblptrh	equ	0xFF7
 22900                           tblptrl	equ	0xFF6
 22901                           tablat	equ	0xFF5
 22902                           prodh	equ	0xFF4
 22903                           prodl	equ	0xFF3
 22904                           intcon	equ	0xFF2
 22905                           indf0	equ	0xFEF
 22906                           postinc0	equ	0xFEE
 22907                           fsr0h	equ	0xFEA
 22908                           fsr0l	equ	0xFE9
 22909                           wreg	equ	0xFE8
 22910                           indf1	equ	0xFE7
 22911                           postdec1	equ	0xFE5
 22912                           fsr1h	equ	0xFE2
 22913                           fsr1l	equ	0xFE1
 22914                           indf2	equ	0xFDF
 22915                           postinc2	equ	0xFDE
 22916                           postdec2	equ	0xFDD
 22917                           plusw2	equ	0xFDB
 22918                           fsr2h	equ	0xFDA
 22919                           fsr2l	equ	0xFD9
 22920                           status	equ	0xFD8
 22921                           
 22922 ;; *************** function _USBStdFeatureReqHandler *****************
 22923 ;; Defined at:
 22924 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;		None
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;  p               2   25[COMRAM] PTR struct __BDT
 22929 ;;		 -> BDT(48), NULL(0), 
 22930 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 22931 ;;		 -> UEP0(1), 
 22932 ;;  current_ep_d    1   24[COMRAM] struct .
 22933 ;; Return value:  Size  Location     Type
 22934 ;;                  1    wreg      void 
 22935 ;; Registers used:
 22936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22937 ;; Tracked objects:
 22938 ;;		On entry : 0/0
 22939 ;;		On exit  : 0/0
 22940 ;;		Unchanged: 0/0
 22941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22942 ;;      Params:         0       0       0       0       0       0       0       0       0
 22943 ;;      Locals:         5       0       0       0       0       0       0       0       0
 22944 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22945 ;;      Totals:         6       0       0       0       0       0       0       0       0
 22946 ;;Total ram usage:        6 bytes
 22947 ;; Hardware stack levels used:    1
 22948 ;; Hardware stack levels required when called:    5
 22949 ;; This function calls:
 22950 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22951 ;; This function is called by:
 22952 ;;		_USBCheckStdRequest
 22953 ;; This function uses a non-reentrant model
 22954 ;;
 22955                           
 22956                           	psect	text102
 22957  0014EE                     __ptext102:
 22958                           	opt stack 0
 22959  0014EE                     _USBStdFeatureReqHandler:
 22960                           	opt stack 10
 22961                           
 22962                           ;usb_device.c: 2387: BDT_ENTRY *p;
 22963                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 22964                           ;usb_device.c: 2390: unsigned char* pUEP;
 22965                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 22966                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 22967                           
 22968                           ;incstack = 0
 22969  0014EE  0104               	movlb	4	; () banked
 22970  0014F0  0532               	decf	50,w,b	;volatile
 22971  0014F2  A4D8               	btfss	status,2,c
 22972  0014F4  D010               	goto	i2l1763
 22973                           
 22974                           ; BSR set to: 4
 22975  0014F6  5130               	movf	48,w,b	;volatile
 22976  0014F8  0B1F               	andlw	31
 22977  0014FA  0900               	iorlw	0
 22978  0014FC  A4D8               	btfss	status,2,c
 22979  0014FE  D00B               	goto	i2l1763
 22980                           
 22981                           ; BSR set to: 4
 22982                           ;usb_device.c: 2395: {
 22983                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 22984  001500  0100               	movlb	0	; () banked
 22985  001502  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22986                           
 22987                           ; BSR set to: 0
 22988                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 22989  001504  0E03               	movlw	3
 22990  001506  0104               	movlb	4	; () banked
 22991  001508  1931               	xorwf	49,w,b	;volatile
 22992  00150A  A4D8               	btfss	status,2,c
 22993  00150C  D002               	goto	i2l1762
 22994                           
 22995                           ; BSR set to: 4
 22996                           ;usb_device.c: 2398: RemoteWakeup = 1;
 22997  00150E  0E01               	movlw	1
 22998  001510  D001               	goto	L21
 22999  001512                     i2l1762:
 23000                           
 23001                           ; BSR set to: 4
 23002                           ;usb_device.c: 2399: else
 23003                           ;usb_device.c: 2400: RemoteWakeup = 0;
 23004                           
 23005                           ; BSR set to: 4
 23006  001512  0E00               	movlw	0
 23007  001514                     L21:
 23008  001514  6E4A               	movwf	_RemoteWakeup,c	;volatile
 23009  001516                     i2l1763:
 23010                           
 23011                           ; BSR set to: 4
 23012                           ;usb_device.c: 2401: }
 23013                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 23014                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 23015                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 23016                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 23017                           
 23018                           ; BSR set to: 4
 23019  001516  5132               	movf	50,w,b	;volatile
 23020  001518  A4D8               	btfss	status,2,c
 23021  00151A  0012               	return	
 23022                           
 23023                           ; BSR set to: 4
 23024  00151C  5130               	movf	48,w,b	;volatile
 23025  00151E  0B1F               	andlw	31
 23026  001520  0A02               	xorlw	2
 23027  001522  A4D8               	btfss	status,2,c
 23028  001524  0012               	return	
 23029                           
 23030                           ; BSR set to: 4
 23031  001526  5134               	movf	52,w,b	;volatile
 23032  001528  0B0F               	andlw	15
 23033  00152A  0900               	iorlw	0
 23034  00152C  B4D8               	btfsc	status,2,c
 23035  00152E  0012               	return	
 23036                           
 23037                           ; BSR set to: 4
 23038  001530  5134               	movf	52,w,b	;volatile
 23039  001532  0B0F               	andlw	15
 23040  001534  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23041  001536  0E03               	movlw	3
 23042  001538  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 23043  00153A  0012               	return	
 23044                           
 23045                           ; BSR set to: 4
 23046  00153C  0E20               	movlw	32
 23047  00153E  0100               	movlb	0	; () banked
 23048  001540  19A8               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 23049  001542  A4D8               	btfss	status,2,c
 23050  001544  0012               	return	
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;usb_device.c: 2408: {
 23054                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 23055  001546  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23056                           
 23057                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 23058  001548  0104               	movlb	4	; () banked
 23059  00154A  BF34               	btfsc	52,7,b	;volatile
 23060  00154C  D019               	goto	i2l1765
 23061                           
 23062                           ; BSR set to: 4
 23063                           ;usb_device.c: 2415: {
 23064                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23065  00154E  5134               	movf	52,w,b	;volatile
 23066  001550  0B0F               	andlw	15
 23067  001552  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23068  001554  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23069  001556  0D02               	mullw	2
 23070  001558  0E74               	movlw	low _pBDTEntryOut
 23071  00155A  24F3               	addwf	prodl,w,c
 23072  00155C  6ED9               	movwf	fsr2l,c
 23073  00155E  0E00               	movlw	high _pBDTEntryOut
 23074  001560  20F4               	addwfc	prodh,w,c
 23075  001562  6EDA               	movwf	fsr2h,c
 23076  001564  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23077  001568  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23078                           
 23079                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 23080  00156C  5134               	movf	52,w,b	;volatile
 23081  00156E  0B0F               	andlw	15
 23082  001570  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23083  001572  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23084  001574  0D01               	mullw	1
 23085  001576  0E84               	movlw	low _ep_data_out
 23086  001578  24F3               	addwf	prodl,w,c
 23087  00157A  6ED9               	movwf	fsr2l,c
 23088  00157C  0E00               	movlw	high _ep_data_out
 23089  00157E  D018               	goto	L22
 23090  001580                     i2l1765:
 23091                           
 23092                           ; BSR set to: 4
 23093                           ;usb_device.c: 2419: else
 23094                           ;usb_device.c: 2420: {
 23095                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23096                           
 23097                           ; BSR set to: 4
 23098  001580  5134               	movf	52,w,b	;volatile
 23099  001582  0B0F               	andlw	15
 23100  001584  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23101  001586  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23102  001588  0D02               	mullw	2
 23103  00158A  0E6E               	movlw	low _pBDTEntryIn
 23104  00158C  24F3               	addwf	prodl,w,c
 23105  00158E  6ED9               	movwf	fsr2l,c
 23106  001590  0E00               	movlw	high _pBDTEntryIn
 23107  001592  20F4               	addwfc	prodh,w,c
 23108  001594  6EDA               	movwf	fsr2h,c
 23109  001596  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 23110  00159A  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23111                           
 23112                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 23113  00159E  5134               	movf	52,w,b	;volatile
 23114  0015A0  0B0F               	andlw	15
 23115  0015A2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23116  0015A4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23117  0015A6  0D01               	mullw	1
 23118  0015A8  0E87               	movlw	low _ep_data_in
 23119  0015AA  24F3               	addwf	prodl,w,c
 23120  0015AC  6ED9               	movwf	fsr2l,c
 23121  0015AE  0E00               	movlw	high _ep_data_in
 23122  0015B0                     L22:
 23123  0015B0  20F4               	addwfc	prodh,w,c
 23124  0015B2  6EDA               	movwf	fsr2h,c
 23125  0015B4  50DF               	movf	indf2,w,c
 23126  0015B6  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 23127                           
 23128                           ; BSR set to: 4
 23129                           ;usb_device.c: 2423: }
 23130                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 23131                           
 23132                           ; BSR set to: 4
 23133  0015B8  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 23134  0015BA  D002               	goto	i2l1767
 23135                           
 23136                           ; BSR set to: 4
 23137                           ;usb_device.c: 2429: {
 23138                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 23139  0015BC  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 23140                           
 23141                           ;usb_device.c: 2431: }
 23142  0015BE  D001               	goto	i2l1768
 23143  0015C0                     i2l1767:
 23144                           
 23145                           ; BSR set to: 4
 23146                           ;usb_device.c: 2432: else
 23147                           ;usb_device.c: 2433: {
 23148                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 23149                           
 23150                           ; BSR set to: 4
 23151  0015C0  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 23152  0015C2                     i2l1768:
 23153                           
 23154                           ; BSR set to: 4
 23155                           ;usb_device.c: 2435: }
 23156                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 23157                           
 23158                           ; BSR set to: 4
 23159  0015C2  BF34               	btfsc	52,7,b	;volatile
 23160  0015C4  D00A               	goto	i2l1769
 23161                           
 23162                           ; BSR set to: 4
 23163                           ;usb_device.c: 2440: {
 23164                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23165  0015C6  5134               	movf	52,w,b	;volatile
 23166  0015C8  0B0F               	andlw	15
 23167  0015CA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23168  0015CC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23169  0015CE  0D02               	mullw	2
 23170  0015D0  0E74               	movlw	low _pBDTEntryOut
 23171  0015D2  24F3               	addwf	prodl,w,c
 23172  0015D4  6ED9               	movwf	fsr2l,c
 23173  0015D6  0E00               	movlw	high _pBDTEntryOut
 23174  0015D8  D009               	goto	L23
 23175  0015DA                     i2l1769:
 23176                           
 23177                           ; BSR set to: 4
 23178                           ;usb_device.c: 2443: else
 23179                           ;usb_device.c: 2444: {
 23180                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23181                           
 23182                           ; BSR set to: 4
 23183  0015DA  5134               	movf	52,w,b	;volatile
 23184  0015DC  0B0F               	andlw	15
 23185  0015DE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23186  0015E0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23187  0015E2  0D02               	mullw	2
 23188  0015E4  0E6E               	movlw	low _pBDTEntryIn
 23189  0015E6  24F3               	addwf	prodl,w,c
 23190  0015E8  6ED9               	movwf	fsr2l,c
 23191  0015EA  0E00               	movlw	high _pBDTEntryIn
 23192  0015EC                     L23:
 23193  0015EC  20F4               	addwfc	prodh,w,c
 23194  0015EE  6EDA               	movwf	fsr2h,c
 23195  0015F0  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23196  0015F4  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23197                           
 23198                           ; BSR set to: 4
 23199                           ;usb_device.c: 2446: }
 23200                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 23201                           
 23202                           ; BSR set to: 4
 23203  0015F8  0E03               	movlw	3
 23204  0015FA  1931               	xorwf	49,w,b	;volatile
 23205  0015FC  A4D8               	btfss	status,2,c
 23206  0015FE  D02D               	goto	i2l1771
 23207                           
 23208                           ; BSR set to: 4
 23209                           ;usb_device.c: 2450: {
 23210                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 23211  001600  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23212  001604  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23213  001608  AEDF               	btfss	indf2,7,c
 23214  00160A  D01A               	goto	i2l1774
 23215                           
 23216                           ; BSR set to: 4
 23217                           ;usb_device.c: 2452: {
 23218                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 23219  00160C  BF34               	btfsc	52,7,b	;volatile
 23220  00160E  D00A               	goto	i2l1773
 23221                           
 23222                           ; BSR set to: 4
 23223                           ;usb_device.c: 2456: {
 23224                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23225  001610  5134               	movf	52,w,b	;volatile
 23226  001612  0B0F               	andlw	15
 23227  001614  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23228  001616  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23229  001618  0D01               	mullw	1
 23230  00161A  0E84               	movlw	low _ep_data_out
 23231  00161C  24F3               	addwf	prodl,w,c
 23232  00161E  6ED9               	movwf	fsr2l,c
 23233  001620  0E00               	movlw	high _ep_data_out
 23234  001622  D00A               	goto	L24
 23235  001624                     i2l1773:
 23236                           
 23237                           ;usb_device.c: 2459: else
 23238                           ;usb_device.c: 2460: {
 23239                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23240                           
 23241                           ; BSR set to: 0
 23242  001624  0104               	movlb	4	; () banked
 23243  001626  5134               	movf	52,w,b	;volatile
 23244  001628  0B0F               	andlw	15
 23245  00162A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23246  00162C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23247  00162E  0D01               	mullw	1
 23248  001630  0E87               	movlw	low _ep_data_in
 23249  001632  24F3               	addwf	prodl,w,c
 23250  001634  6ED9               	movwf	fsr2l,c
 23251  001636  0E00               	movlw	high _ep_data_in
 23252  001638                     L24:
 23253  001638  20F4               	addwfc	prodh,w,c
 23254  00163A  6EDA               	movwf	fsr2h,c
 23255  00163C  0100               	movlb	0	; () banked
 23256  00163E  82DF               	bsf	indf2,1,c
 23257  001640                     i2l1774:
 23258                           
 23259                           ;usb_device.c: 2462: }
 23260                           ;usb_device.c: 2463: }
 23261                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 23262                           
 23263                           ; BSR set to: 0
 23264                           
 23265                           ; BSR set to: 0
 23266  001640  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23267  001644  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23268  001648  0E00               	movlw	0
 23269  00164A  84DB               	bsf	plusw2,2,c
 23270                           
 23271                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 23272  00164C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23273  001650  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23274  001654  0E00               	movlw	0
 23275  001656  8EDB               	bsf	plusw2,7,c
 23276                           
 23277                           ;usb_device.c: 2468: }
 23278  001658  0012               	return	
 23279  00165A                     i2l1771:
 23280                           
 23281                           ;usb_device.c: 2469: else
 23282                           ;usb_device.c: 2470: {
 23283                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23284  00165A  0E04               	movlw	4
 23285  00165C  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 23286                           
 23287                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 23288  00165E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23289  001662  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23290  001666  AEDF               	btfss	indf2,7,c
 23291  001668  D01B               	goto	i2l1776
 23292                           
 23293                           ;usb_device.c: 2476: {
 23294                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 23295  00166A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23296  00166E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23297  001672  0E7F               	movlw	127
 23298  001674  16DF               	andwf	indf2,f,c
 23299                           
 23300                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 23301  001676  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23302  00167A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23303  00167E  0E00               	movlw	0
 23304  001680  8CDB               	bsf	plusw2,6,c
 23305                           
 23306                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23307  001682  0E00               	movlw	0
 23308  001684  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23309  001686  0E05               	movlw	5
 23310  001688  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23311  00168A  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23312  00168E  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23313  001692  0E00               	movlw	0
 23314  001694  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23315  001696  0E02               	movlw	2
 23316  001698  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23317  00169A  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23318                           
 23319                           ;usb_device.c: 2482: }
 23320  00169E  D006               	goto	i2l1777
 23321  0016A0                     i2l1776:
 23322                           
 23323                           ;usb_device.c: 2483: else
 23324                           ;usb_device.c: 2484: {
 23325                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 23326  0016A0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23327  0016A4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23328  0016A8  0E00               	movlw	0
 23329  0016AA  8CDB               	bsf	plusw2,6,c
 23330  0016AC                     i2l1777:
 23331                           
 23332                           ;usb_device.c: 2487: }
 23333                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23334  0016AC  0E04               	movlw	4
 23335  0016AE  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 23336                           
 23337                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 23338  0016B0  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 23339  0016B2  D006               	goto	i2u504_40
 23340  0016B4  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23341  0016B8  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23342  0016BC  AEDF               	btfss	indf2,7,c
 23343  0016BE  D030               	goto	i2l1778
 23344  0016C0                     i2u504_40:
 23345                           
 23346                           ;usb_device.c: 2498: {
 23347                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 23348  0016C0  0104               	movlb	4	; () banked
 23349  0016C2  BF34               	btfsc	52,7,b	;volatile
 23350  0016C4  D00A               	goto	i2l1781
 23351                           
 23352                           ; BSR set to: 4
 23353                           ;usb_device.c: 2500: {
 23354                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23355  0016C6  5134               	movf	52,w,b	;volatile
 23356  0016C8  0B0F               	andlw	15
 23357  0016CA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23358  0016CC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23359  0016CE  0D01               	mullw	1
 23360  0016D0  0E84               	movlw	low _ep_data_out
 23361  0016D2  24F3               	addwf	prodl,w,c
 23362  0016D4  6ED9               	movwf	fsr2l,c
 23363  0016D6  0E00               	movlw	high _ep_data_out
 23364  0016D8  D00A               	goto	L25
 23365  0016DA                     i2l1781:
 23366                           
 23367                           ;usb_device.c: 2503: else
 23368                           ;usb_device.c: 2504: {
 23369                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23370                           
 23371                           ; BSR set to: 0
 23372  0016DA  0104               	movlb	4	; () banked
 23373  0016DC  5134               	movf	52,w,b	;volatile
 23374  0016DE  0B0F               	andlw	15
 23375  0016E0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23376  0016E2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23377  0016E4  0D01               	mullw	1
 23378  0016E6  0E87               	movlw	low _ep_data_in
 23379  0016E8  24F3               	addwf	prodl,w,c
 23380  0016EA  6ED9               	movwf	fsr2l,c
 23381  0016EC  0E00               	movlw	high _ep_data_in
 23382  0016EE                     L25:
 23383  0016EE  20F4               	addwfc	prodh,w,c
 23384  0016F0  6EDA               	movwf	fsr2h,c
 23385  0016F2  0100               	movlb	0	; () banked
 23386  0016F4  92DF               	bcf	indf2,1,c
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;usb_device.c: 2506: }
 23390                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23391                           
 23392                           ; BSR set to: 0
 23393  0016F6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23394  0016FA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23395  0016FE  0E3B               	movlw	59
 23396  001700  16DF               	andwf	indf2,f,c
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23400  001702  0E00               	movlw	0
 23401  001704  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23402  001706  0E05               	movlw	5
 23403  001708  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23404  00170A  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23405  00170E  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23406  001712  0E00               	movlw	0
 23407  001714  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23408  001716  0E02               	movlw	2
 23409  001718  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23410  00171A  EC5F  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23411                           
 23412                           ;usb_device.c: 2512: }
 23413  00171E  D006               	goto	i2l1783
 23414  001720                     i2l1778:
 23415                           
 23416                           ;usb_device.c: 2513: else
 23417                           ;usb_device.c: 2514: {
 23418                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23419  001720  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23420  001724  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23421  001728  0E3B               	movlw	59
 23422  00172A  16DF               	andwf	indf2,f,c
 23423  00172C                     i2l1783:
 23424                           
 23425                           ;usb_device.c: 2517: }
 23426                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 23427  00172C  0104               	movlb	4	; () banked
 23428  00172E  5134               	movf	52,w,b	;volatile
 23429  001730  0B0F               	andlw	15
 23430  001732  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23431  001734  5016               	movf	??_USBStdFeatureReqHandler,w,c
 23432  001736  0D01               	mullw	1
 23433  001738  0E6A               	movlw	106
 23434  00173A  24F3               	addwf	prodl,w,c
 23435  00173C  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 23436  00173E  0E0F               	movlw	15
 23437  001740  20F4               	addwfc	prodh,w,c
 23438  001742  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 23439                           
 23440                           ; BSR set to: 4
 23441                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 23442  001744  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23443  001748  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23444  00174C  0EFE               	movlw	254
 23445  00174E  16DF               	andwf	indf2,f,c
 23446                           
 23447                           ; BSR set to: 4
 23448  001750  0012               	return	
 23449  001752                     __end_of_USBStdFeatureReqHandler:
 23450                           	opt stack 0
 23451                           pclatu	equ	0xFFB
 23452                           pclath	equ	0xFFA
 23453                           tblptru	equ	0xFF8
 23454                           tblptrh	equ	0xFF7
 23455                           tblptrl	equ	0xFF6
 23456                           tablat	equ	0xFF5
 23457                           prodh	equ	0xFF4
 23458                           prodl	equ	0xFF3
 23459                           intcon	equ	0xFF2
 23460                           indf0	equ	0xFEF
 23461                           postinc0	equ	0xFEE
 23462                           fsr0h	equ	0xFEA
 23463                           fsr0l	equ	0xFE9
 23464                           wreg	equ	0xFE8
 23465                           indf1	equ	0xFE7
 23466                           postdec1	equ	0xFE5
 23467                           fsr1h	equ	0xFE2
 23468                           fsr1l	equ	0xFE1
 23469                           indf2	equ	0xFDF
 23470                           postinc2	equ	0xFDE
 23471                           postdec2	equ	0xFDD
 23472                           plusw2	equ	0xFDB
 23473                           fsr2h	equ	0xFDA
 23474                           fsr2l	equ	0xFD9
 23475                           status	equ	0xFD8
 23476                           
 23477 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23478 ;; Defined at:
 23479 ;;		line 294 in file "../Includes/Board/USBapp.c"
 23480 ;; Parameters:    Size  Location     Type
 23481 ;;  event           2   13[COMRAM] enum E5661
 23482 ;;  pdata           2   15[COMRAM] PTR void 
 23483 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 23484 ;;  size            2   17[COMRAM] unsigned int 
 23485 ;; Auto vars:     Size  Location     Type
 23486 ;;		None
 23487 ;; Return value:  Size  Location     Type
 23488 ;;                  1    wreg      unsigned char 
 23489 ;; Registers used:
 23490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23491 ;; Tracked objects:
 23492 ;;		On entry : 0/0
 23493 ;;		On exit  : 0/0
 23494 ;;		Unchanged: 0/0
 23495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23496 ;;      Params:         6       0       0       0       0       0       0       0       0
 23497 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23498 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23499 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23500 ;;Total ram usage:        8 bytes
 23501 ;; Hardware stack levels used:    1
 23502 ;; Hardware stack levels required when called:    4
 23503 ;; This function calls:
 23504 ;;		_USBCheckCDCRequest
 23505 ;;		_USBapp_CdcEmulatorInitialize
 23506 ;; This function is called by:
 23507 ;;		_USBDeviceTasks
 23508 ;;		_USBStdSetCfgHandler
 23509 ;;		_USBSuspend
 23510 ;;		_USBWakeFromSuspend
 23511 ;;		_USBCtrlTrfSetupHandler
 23512 ;;		_USBCheckStdRequest
 23513 ;;		_USBStdFeatureReqHandler
 23514 ;; This function uses a non-reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text103
 23518  0040BE                     __ptext103:
 23519                           	opt stack 0
 23520  0040BE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 23521                           	opt stack 14
 23522                           
 23523                           ;USBapp.c: 296: switch( (int) event )
 23524                           
 23525                           ;incstack = 0
 23526  0040BE  D006               	goto	i2l839
 23527  0040C0                     
 23528                           ;USBapp.c: 320: USBapp_CdcEmulatorInitialize();
 23529  0040C0  ECE8  F020         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 23530                           
 23531                           ;USBapp.c: 324: break;
 23532                           
 23533                           ;USBapp.c: 323: case EVENT_SET_DESCRIPTOR:
 23534                           
 23535                           ;USBapp.c: 321: break;
 23536  0040C4  0012               	return	
 23537  0040C6                     
 23538                           ;USBapp.c: 329: USBCheckCDCRequest();
 23539  0040C6  EC02  F01B         	call	_USBCheckCDCRequest	;wreg free
 23540                           
 23541                           ;USBapp.c: 340: }
 23542                           
 23543                           ;USBapp.c: 339: break;
 23544                           
 23545                           ;USBapp.c: 338: default:
 23546                           
 23547                           ;USBapp.c: 336: break;
 23548                           
 23549                           ;USBapp.c: 335: case EVENT_TRANSFER_TERMINATED:
 23550                           
 23551                           ;USBapp.c: 333: break;
 23552                           
 23553                           ;USBapp.c: 332: case EVENT_BUS_ERROR:
 23554                           
 23555                           ;USBapp.c: 330: break;
 23556  0040CA  0012               	return	
 23557  0040CC                     i2l839:
 23558  0040CC  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 23559  0040D0  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 23560                           
 23561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23562                           ; Switch size 1, requested type "space"
 23563                           ; Number of cases is 2, Range of values is 0 to 127
 23564                           ; switch strategies available:
 23565                           ; Name         Instructions Cycles
 23566                           ; simple_byte            7     4 (average)
 23567                           ;	Chosen strategy is simple_byte
 23568  0040D4  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 23569  0040D6  0A00               	xorlw	0	; case 0
 23570  0040D8  B4D8               	btfsc	status,2,c
 23571  0040DA  D004               	goto	i2l9933
 23572  0040DC  0A7F               	xorlw	127	; case 127
 23573  0040DE  A4D8               	btfss	status,2,c
 23574  0040E0  0012               	return	
 23575  0040E2  D018               	goto	i2l9935
 23576  0040E4                     i2l9933:
 23577                           
 23578                           ; Switch size 1, requested type "space"
 23579                           ; Number of cases is 8, Range of values is 1 to 117
 23580                           ; switch strategies available:
 23581                           ; Name         Instructions Cycles
 23582                           ; simple_byte           25    13 (average)
 23583                           ;	Chosen strategy is simple_byte
 23584  0040E4  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23585  0040E6  0A01               	xorlw	1	; case 1
 23586  0040E8  B4D8               	btfsc	status,2,c
 23587  0040EA  D7EA               	goto	i2l845
 23588  0040EC  0A03               	xorlw	3	; case 2
 23589  0040EE  B4D8               	btfsc	status,2,c
 23590  0040F0  0012               	return	
 23591  0040F2  0A01               	xorlw	1	; case 3
 23592  0040F4  B4D8               	btfsc	status,2,c
 23593  0040F6  D7E7               	goto	i2l847
 23594  0040F8  0A06               	xorlw	6	; case 5
 23595  0040FA  B4D8               	btfsc	status,2,c
 23596  0040FC  0012               	return	
 23597  0040FE  0A77               	xorlw	119	; case 114
 23598  004100  B4D8               	btfsc	status,2,c
 23599  004102  0012               	return	
 23600  004104  0A01               	xorlw	1	; case 115
 23601  004106  B4D8               	btfsc	status,2,c
 23602  004108  0012               	return	
 23603  00410A  0A07               	xorlw	7	; case 116
 23604  00410C  B4D8               	btfsc	status,2,c
 23605  00410E  0012               	return	
 23606  004110  0A01               	xorlw	1	; case 117
 23607  004112  0012               	return	
 23608  004114                     i2l9935:
 23609                           
 23610                           ; Switch size 1, requested type "space"
 23611                           ; Number of cases is 1, Range of values is 255 to 255
 23612                           ; switch strategies available:
 23613                           ; Name         Instructions Cycles
 23614                           ; simple_byte            4     3 (average)
 23615                           ;	Chosen strategy is simple_byte
 23616  004114  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23617  004116  0AFF               	xorlw	255	; case 255
 23618  004118  0012               	return	
 23619  00411A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 23620                           	opt stack 0
 23621                           pclatu	equ	0xFFB
 23622                           pclath	equ	0xFFA
 23623                           tblptru	equ	0xFF8
 23624                           tblptrh	equ	0xFF7
 23625                           tblptrl	equ	0xFF6
 23626                           tablat	equ	0xFF5
 23627                           prodh	equ	0xFF4
 23628                           prodl	equ	0xFF3
 23629                           intcon	equ	0xFF2
 23630                           indf0	equ	0xFEF
 23631                           postinc0	equ	0xFEE
 23632                           fsr0h	equ	0xFEA
 23633                           fsr0l	equ	0xFE9
 23634                           wreg	equ	0xFE8
 23635                           indf1	equ	0xFE7
 23636                           postdec1	equ	0xFE5
 23637                           fsr1h	equ	0xFE2
 23638                           fsr1l	equ	0xFE1
 23639                           indf2	equ	0xFDF
 23640                           postinc2	equ	0xFDE
 23641                           postdec2	equ	0xFDD
 23642                           plusw2	equ	0xFDB
 23643                           fsr2h	equ	0xFDA
 23644                           fsr2l	equ	0xFD9
 23645                           status	equ	0xFD8
 23646                           
 23647 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 23648 ;; Defined at:
 23649 ;;		line 130 in file "../Includes/Board/USBapp.c"
 23650 ;; Parameters:    Size  Location     Type
 23651 ;;		None
 23652 ;; Auto vars:     Size  Location     Type
 23653 ;;  i               1   12[COMRAM] unsigned char 
 23654 ;; Return value:  Size  Location     Type
 23655 ;;                  1    wreg      void 
 23656 ;; Registers used:
 23657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23658 ;; Tracked objects:
 23659 ;;		On entry : 0/0
 23660 ;;		On exit  : 0/0
 23661 ;;		Unchanged: 0/0
 23662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23663 ;;      Params:         0       0       0       0       0       0       0       0       0
 23664 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23666 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23667 ;;Total ram usage:        1 bytes
 23668 ;; Hardware stack levels used:    1
 23669 ;; Hardware stack levels required when called:    3
 23670 ;; This function calls:
 23671 ;;		_CDCInitEP
 23672 ;;		i2_EUSART_Initialize
 23673 ;; This function is called by:
 23674 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23675 ;; This function uses a non-reentrant model
 23676 ;;
 23677                           
 23678                           	psect	text104
 23679  0041D0                     __ptext104:
 23680                           	opt stack 0
 23681  0041D0                     _USBapp_CdcEmulatorInitialize:
 23682                           	opt stack 14
 23683                           
 23684                           ;USBapp.c: 133: CDCInitEP();
 23685                           
 23686                           ;incstack = 0
 23687  0041D0  ECFD  F01F         	call	_CDCInitEP	;wreg free
 23688                           
 23689                           ;USBapp.c: 134: line_coding.bCharFormat = 0;
 23690  0041D4  0E00               	movlw	0
 23691  0041D6  0100               	movlb	0	; () banked
 23692  0041D8  6FB8               	movwf	(_line_coding+4)& (0+255),b
 23693                           
 23694                           ; BSR set to: 0
 23695                           ;USBapp.c: 135: line_coding.bDataBits = 8;
 23696  0041DA  0E08               	movlw	8
 23697  0041DC  6FBA               	movwf	(_line_coding+6)& (0+255),b
 23698                           
 23699                           ; BSR set to: 0
 23700                           ;USBapp.c: 136: line_coding.bParityType = 0;
 23701  0041DE  0E00               	movlw	0
 23702  0041E0  6FB9               	movwf	(_line_coding+5)& (0+255),b
 23703                           
 23704                           ; BSR set to: 0
 23705                           ;USBapp.c: 137: line_coding.dwDTERate = 19200;
 23706  0041E2  0E00               	movlw	0
 23707  0041E4  6FB4               	movwf	_line_coding& (0+255),b
 23708  0041E6  0E4B               	movlw	75
 23709  0041E8  6FB5               	movwf	(_line_coding+1)& (0+255),b
 23710  0041EA  0E00               	movlw	0
 23711  0041EC  6FB6               	movwf	(_line_coding+2)& (0+255),b
 23712  0041EE  0E00               	movlw	0
 23713  0041F0  6FB7               	movwf	(_line_coding+3)& (0+255),b
 23714                           
 23715                           ; BSR set to: 0
 23716                           ;USBapp.c: 138: EUSART_Initialize();
 23717  0041F2  ECDD  F022         	call	i2_EUSART_Initialize	;wreg free
 23718                           
 23719                           ;USBapp.c: 140: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 23720  0041F6  0E00               	movlw	0
 23721  0041F8  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 23722  0041FA                     i2l6521:
 23723  0041FA  0E3F               	movlw	63
 23724  0041FC  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 23725  0041FE  D001               	goto	i2l792
 23726  004200  D00C               	goto	i2u440_40
 23727  004202                     i2l792:
 23728                           
 23729                           ;USBapp.c: 141: {
 23730                           ;USBapp.c: 142: USB_Buffer[i] = 0;
 23731  004202  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 23732  004204  0D01               	mullw	1
 23733  004206  0E20               	movlw	low _USB_Buffer
 23734  004208  24F3               	addwf	prodl,w,c
 23735  00420A  6ED9               	movwf	fsr2l,c
 23736  00420C  0E01               	movlw	high _USB_Buffer
 23737  00420E  20F4               	addwfc	prodh,w,c
 23738  004210  6EDA               	movwf	fsr2h,c
 23739  004212  0E00               	movlw	0
 23740  004214  6EDF               	movwf	indf2,c
 23741  004216  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 23742  004218  D7F0               	goto	i2l6521
 23743  00421A                     i2u440_40:
 23744                           
 23745                           ;USBapp.c: 143: }
 23746                           ;USBapp.c: 144: NextUSBOut = 0;
 23747  00421A  0E00               	movlw	0
 23748  00421C  0100               	movlb	0	; () banked
 23749  00421E  6FA4               	movwf	_NextUSBOut& (0+255),b
 23750                           
 23751                           ;USBapp.c: 145: LastRS232Out = 0;
 23752  004220  0E00               	movlw	0
 23753  004222  6FA2               	movwf	_LastRS232Out& (0+255),b
 23754                           
 23755                           ; BSR set to: 0
 23756  004224  0012               	return		;funcret
 23757  004226                     __end_of_USBapp_CdcEmulatorInitialize:
 23758                           	opt stack 0
 23759                           pclatu	equ	0xFFB
 23760                           pclath	equ	0xFFA
 23761                           tblptru	equ	0xFF8
 23762                           tblptrh	equ	0xFF7
 23763                           tblptrl	equ	0xFF6
 23764                           tablat	equ	0xFF5
 23765                           prodh	equ	0xFF4
 23766                           prodl	equ	0xFF3
 23767                           intcon	equ	0xFF2
 23768                           indf0	equ	0xFEF
 23769                           postinc0	equ	0xFEE
 23770                           fsr0h	equ	0xFEA
 23771                           fsr0l	equ	0xFE9
 23772                           wreg	equ	0xFE8
 23773                           indf1	equ	0xFE7
 23774                           postdec1	equ	0xFE5
 23775                           fsr1h	equ	0xFE2
 23776                           fsr1l	equ	0xFE1
 23777                           indf2	equ	0xFDF
 23778                           postinc2	equ	0xFDE
 23779                           postdec2	equ	0xFDD
 23780                           plusw2	equ	0xFDB
 23781                           fsr2h	equ	0xFDA
 23782                           fsr2l	equ	0xFD9
 23783                           status	equ	0xFD8
 23784                           
 23785 ;; *************** function _CDCInitEP *****************
 23786 ;; Defined at:
 23787 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;		None
 23790 ;; Auto vars:     Size  Location     Type
 23791 ;;		None
 23792 ;; Return value:  Size  Location     Type
 23793 ;;                  1    wreg      void 
 23794 ;; Registers used:
 23795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23796 ;; Tracked objects:
 23797 ;;		On entry : 0/0
 23798 ;;		On exit  : 0/0
 23799 ;;		Unchanged: 0/0
 23800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23801 ;;      Params:         0       0       0       0       0       0       0       0       0
 23802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23804 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23805 ;;Total ram usage:        0 bytes
 23806 ;; Hardware stack levels used:    1
 23807 ;; Hardware stack levels required when called:    2
 23808 ;; This function calls:
 23809 ;;		_USBEnableEndpoint
 23810 ;;		i2_USBTransferOnePacket
 23811 ;; This function is called by:
 23812 ;;		_USBapp_CdcEmulatorInitialize
 23813 ;; This function uses a non-reentrant model
 23814 ;;
 23815                           
 23816                           	psect	text105
 23817  003FFA                     __ptext105:
 23818                           	opt stack 0
 23819  003FFA                     _CDCInitEP:
 23820                           	opt stack 14
 23821                           
 23822                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 23823                           
 23824                           ; BSR set to: 0
 23825                           ;incstack = 0
 23826  003FFA  0E00               	movlw	0
 23827  003FFC  0100               	movlb	0	; () banked
 23828  003FFE  6FB4               	movwf	_line_coding& (0+255),b
 23829  004000  0E4B               	movlw	75
 23830  004002  6FB5               	movwf	(_line_coding+1)& (0+255),b
 23831  004004  0E00               	movlw	0
 23832  004006  6FB6               	movwf	(_line_coding+2)& (0+255),b
 23833  004008  0E00               	movlw	0
 23834  00400A  6FB7               	movwf	(_line_coding+3)& (0+255),b
 23835                           
 23836                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 23837  00400C  0E00               	movlw	0
 23838  00400E  6FB8               	movwf	(_line_coding+4)& (0+255),b
 23839                           
 23840                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 23841  004010  0E00               	movlw	0
 23842  004012  6FB9               	movwf	(_line_coding+5)& (0+255),b
 23843                           
 23844                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 23845  004014  0E08               	movlw	8
 23846  004016  6FBA               	movwf	(_line_coding+6)& (0+255),b
 23847                           
 23848                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 23849  004018  0E00               	movlw	0
 23850  00401A  6F9A               	movwf	_cdc_rx_len& (0+255),b
 23851                           
 23852                           ; BSR set to: 0
 23853                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 23854  00401C  0E1A               	movlw	26
 23855  00401E  6E09               	movwf	USBEnableEndpoint@options,c
 23856  004020  0E01               	movlw	1
 23857  004022  EC86  F022         	call	_USBEnableEndpoint
 23858                           
 23859                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 23860  004026  0E1E               	movlw	30
 23861  004028  6E09               	movwf	USBEnableEndpoint@options,c
 23862  00402A  0E02               	movlw	2
 23863  00402C  EC86  F022         	call	_USBEnableEndpoint
 23864                           
 23865                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23866  004030  0E00               	movlw	0
 23867  004032  6E01               	movwf	i2USBTransferOnePacket@dir,c
 23868  004034  0E40               	movlw	64
 23869  004036  6E02               	movwf	i2USBTransferOnePacket@data,c
 23870  004038  0E05               	movlw	5
 23871  00403A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 23872  00403C  0E40               	movlw	64
 23873  00403E  6E04               	movwf	i2USBTransferOnePacket@len,c
 23874  004040  0E02               	movlw	2
 23875  004042  EC38  F019         	call	i2_USBTransferOnePacket
 23876  004046  C001  F08C         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 23877  00404A  C002  F08D         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23878                           
 23879                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 23880  00404E  0E00               	movlw	0
 23881  004050  0100               	movlb	0	; () banked
 23882  004052  6F8A               	movwf	_CDCDataInHandle& (0+255),b
 23883  004054  0E00               	movlw	0
 23884  004056  6F8B               	movwf	(_CDCDataInHandle+1)& (0+255),b
 23885                           
 23886                           ; BSR set to: 0
 23887                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 23888  004058  0E00               	movlw	0
 23889  00405A  6FA7               	movwf	_cdc_trf_state& (0+255),b
 23890                           
 23891                           ; BSR set to: 0
 23892  00405C  0012               	return		;funcret
 23893  00405E                     __end_of_CDCInitEP:
 23894                           	opt stack 0
 23895                           pclatu	equ	0xFFB
 23896                           pclath	equ	0xFFA
 23897                           tblptru	equ	0xFF8
 23898                           tblptrh	equ	0xFF7
 23899                           tblptrl	equ	0xFF6
 23900                           tablat	equ	0xFF5
 23901                           prodh	equ	0xFF4
 23902                           prodl	equ	0xFF3
 23903                           intcon	equ	0xFF2
 23904                           indf0	equ	0xFEF
 23905                           postinc0	equ	0xFEE
 23906                           fsr0h	equ	0xFEA
 23907                           fsr0l	equ	0xFE9
 23908                           wreg	equ	0xFE8
 23909                           indf1	equ	0xFE7
 23910                           postdec1	equ	0xFE5
 23911                           fsr1h	equ	0xFE2
 23912                           fsr1l	equ	0xFE1
 23913                           indf2	equ	0xFDF
 23914                           postinc2	equ	0xFDE
 23915                           postdec2	equ	0xFDD
 23916                           plusw2	equ	0xFDB
 23917                           fsr2h	equ	0xFDA
 23918                           fsr2l	equ	0xFD9
 23919                           status	equ	0xFD8
 23920                           
 23921 ;; *************** function i2_USBTransferOnePacket *****************
 23922 ;; Defined at:
 23923 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 23924 ;; Parameters:    Size  Location     Type
 23925 ;;  ep              1    wreg     unsigned char 
 23926 ;;  dir             1    0[COMRAM] unsigned char 
 23927 ;;  data            2    1[COMRAM] PTR unsigned char 
 23928 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 23929 ;;  len             1    3[COMRAM] unsigned char 
 23930 ;; Auto vars:     Size  Location     Type
 23931 ;;  ep              1    4[COMRAM] unsigned char 
 23932 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 23933 ;;		 -> BDT(48), NULL(0), 
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  2    0[COMRAM] PTR void 
 23936 ;; Registers used:
 23937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/0
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23943 ;;      Params:         4       0       0       0       0       0       0       0       0
 23944 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23946 ;;      Totals:         7       0       0       0       0       0       0       0       0
 23947 ;;Total ram usage:        7 bytes
 23948 ;; Hardware stack levels used:    1
 23949 ;; This function calls:
 23950 ;;		Nothing
 23951 ;; This function is called by:
 23952 ;;		_CDCInitEP
 23953 ;; This function uses a non-reentrant model
 23954 ;;
 23955                           
 23956                           	psect	text106
 23957  003270                     __ptext106:
 23958                           	opt stack 0
 23959  003270                     i2_USBTransferOnePacket:
 23960                           	opt stack 15
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;incstack = 0
 23964                           ;i2USBTransferOnePacket@ep stored from wreg
 23965  003270  6E05               	movwf	i2USBTransferOnePacket@ep,c
 23966                           
 23967                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 23968                           ;usb_device.c: 762: if(dir != 0)
 23969  003272  5001               	movf	i2USBTransferOnePacket@dir,w,c
 23970  003274  B4D8               	btfsc	status,2,c
 23971  003276  D007               	goto	i2l1572
 23972                           
 23973                           ;usb_device.c: 763: {
 23974                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 23975  003278  5005               	movf	i2USBTransferOnePacket@ep,w,c
 23976  00327A  0D02               	mullw	2
 23977  00327C  0E6E               	movlw	low _pBDTEntryIn
 23978  00327E  24F3               	addwf	prodl,w,c
 23979  003280  6ED9               	movwf	fsr2l,c
 23980  003282  0E00               	movlw	high _pBDTEntryIn
 23981  003284  D006               	goto	L26
 23982  003286                     i2l1572:
 23983                           
 23984                           ;usb_device.c: 767: else
 23985                           ;usb_device.c: 768: {
 23986                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 23987  003286  5005               	movf	i2USBTransferOnePacket@ep,w,c
 23988  003288  0D02               	mullw	2
 23989  00328A  0E74               	movlw	low _pBDTEntryOut
 23990  00328C  24F3               	addwf	prodl,w,c
 23991  00328E  6ED9               	movwf	fsr2l,c
 23992  003290  0E00               	movlw	high _pBDTEntryOut
 23993  003292                     L26:
 23994  003292  20F4               	addwfc	prodh,w,c
 23995  003294  6EDA               	movwf	fsr2h,c
 23996  003296  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 23997  00329A  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 23998                           
 23999                           ;usb_device.c: 771: }
 24000                           ;usb_device.c: 775: if(handle == 0)
 24001  00329E  5006               	movf	i2USBTransferOnePacket@handle,w,c
 24002  0032A0  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 24003  0032A2  A4D8               	btfss	status,2,c
 24004  0032A4  D005               	goto	i2l1574
 24005                           
 24006                           ;usb_device.c: 776: {
 24007                           ;usb_device.c: 777: return 0;
 24008  0032A6  0E00               	movlw	0
 24009  0032A8  6E01               	movwf	?i2_USBTransferOnePacket,c
 24010  0032AA  0E00               	movlw	0
 24011  0032AC  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 24012  0032AE  0012               	return	
 24013  0032B0                     i2l1574:
 24014                           
 24015                           ;usb_device.c: 778: }
 24016                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 24017  0032B0  EE20 F002          	lfsr	2,2
 24018  0032B4  5006               	movf	i2USBTransferOnePacket@handle,w,c
 24019  0032B6  26D9               	addwf	fsr2l,f,c
 24020  0032B8  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 24021  0032BA  22DA               	addwfc	fsr2h,f,c
 24022  0032BC  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 24023  0032C0  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 24024                           
 24025                           ;usb_device.c: 781: handle->CNT = len;
 24026  0032C4  EE20 F001          	lfsr	2,1
 24027  0032C8  5006               	movf	i2USBTransferOnePacket@handle,w,c
 24028  0032CA  26D9               	addwf	fsr2l,f,c
 24029  0032CC  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 24030  0032CE  22DA               	addwfc	fsr2h,f,c
 24031  0032D0  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 24032                           
 24033                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 24034  0032D4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24035  0032D8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24036  0032DC  0E40               	movlw	64
 24037  0032DE  16DF               	andwf	indf2,f,c
 24038                           
 24039                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 24040  0032E0  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24041  0032E4  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24042  0032E8  0E00               	movlw	0
 24043  0032EA  86DB               	bsf	plusw2,3,c
 24044                           
 24045                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 24046  0032EC  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24047  0032F0  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24048  0032F4  0E00               	movlw	0
 24049  0032F6  8EDB               	bsf	plusw2,7,c
 24050                           
 24051                           ;usb_device.c: 787: if(dir != 0)
 24052  0032F8  5001               	movf	i2USBTransferOnePacket@dir,w,c
 24053  0032FA  B4D8               	btfsc	status,2,c
 24054  0032FC  D007               	goto	i2l1576
 24055                           
 24056                           ;usb_device.c: 788: {
 24057                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 24058  0032FE  5005               	movf	i2USBTransferOnePacket@ep,w,c
 24059  003300  0D02               	mullw	2
 24060  003302  0E6E               	movlw	low _pBDTEntryIn
 24061  003304  24F3               	addwf	prodl,w,c
 24062  003306  6ED9               	movwf	fsr2l,c
 24063  003308  0E00               	movlw	high _pBDTEntryIn
 24064  00330A  D006               	goto	L27
 24065  00330C                     i2l1576:
 24066                           
 24067                           ;usb_device.c: 792: else
 24068                           ;usb_device.c: 793: {
 24069                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 24070  00330C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 24071  00330E  0D02               	mullw	2
 24072  003310  0E74               	movlw	low _pBDTEntryOut
 24073  003312  24F3               	addwf	prodl,w,c
 24074  003314  6ED9               	movwf	fsr2l,c
 24075  003316  0E00               	movlw	high _pBDTEntryOut
 24076  003318                     L27:
 24077  003318  20F4               	addwfc	prodh,w,c
 24078  00331A  6EDA               	movwf	fsr2h,c
 24079  00331C  0E04               	movlw	4
 24080  00331E  1ADF               	xorwf	indf2,f,c
 24081                           
 24082                           ;usb_device.c: 796: }
 24083                           ;usb_device.c: 797: return (void*)handle;
 24084  003320  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 24085  003324  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 24086  003328  0012               	return	
 24087  00332A                     __end_ofi2_USBTransferOnePacket:
 24088                           	opt stack 0
 24089                           pclatu	equ	0xFFB
 24090                           pclath	equ	0xFFA
 24091                           tblptru	equ	0xFF8
 24092                           tblptrh	equ	0xFF7
 24093                           tblptrl	equ	0xFF6
 24094                           tablat	equ	0xFF5
 24095                           prodh	equ	0xFF4
 24096                           prodl	equ	0xFF3
 24097                           intcon	equ	0xFF2
 24098                           indf0	equ	0xFEF
 24099                           postinc0	equ	0xFEE
 24100                           fsr0h	equ	0xFEA
 24101                           fsr0l	equ	0xFE9
 24102                           wreg	equ	0xFE8
 24103                           indf1	equ	0xFE7
 24104                           postdec1	equ	0xFE5
 24105                           fsr1h	equ	0xFE2
 24106                           fsr1l	equ	0xFE1
 24107                           indf2	equ	0xFDF
 24108                           postinc2	equ	0xFDE
 24109                           postdec2	equ	0xFDD
 24110                           plusw2	equ	0xFDB
 24111                           fsr2h	equ	0xFDA
 24112                           fsr2l	equ	0xFD9
 24113                           status	equ	0xFD8
 24114                           
 24115 ;; *************** function _USBEnableEndpoint *****************
 24116 ;; Defined at:
 24117 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;  ep              1    wreg     unsigned char 
 24120 ;;  options         1    8[COMRAM] unsigned char 
 24121 ;; Auto vars:     Size  Location     Type
 24122 ;;  ep              1   11[COMRAM] unsigned char 
 24123 ;;  p               2    9[COMRAM] PTR unsigned char 
 24124 ;;		 -> UEP0(1), 
 24125 ;; Return value:  Size  Location     Type
 24126 ;;                  1    wreg      void 
 24127 ;; Registers used:
 24128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24129 ;; Tracked objects:
 24130 ;;		On entry : 0/0
 24131 ;;		On exit  : 0/0
 24132 ;;		Unchanged: 0/0
 24133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24134 ;;      Params:         1       0       0       0       0       0       0       0       0
 24135 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24136 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24137 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24138 ;;Total ram usage:        4 bytes
 24139 ;; Hardware stack levels used:    1
 24140 ;; Hardware stack levels required when called:    1
 24141 ;; This function calls:
 24142 ;;		_USBConfigureEndpoint
 24143 ;; This function is called by:
 24144 ;;		_CDCInitEP
 24145 ;; This function uses a non-reentrant model
 24146 ;;
 24147                           
 24148                           	psect	text107
 24149  00450C                     __ptext107:
 24150                           	opt stack 0
 24151  00450C                     _USBEnableEndpoint:
 24152                           	opt stack 14
 24153                           
 24154                           ;incstack = 0
 24155                           ;USBEnableEndpoint@ep stored from wreg
 24156  00450C  6E0C               	movwf	USBEnableEndpoint@ep,c
 24157                           
 24158                           ;usb_device.c: 647: unsigned char* p;
 24159                           ;usb_device.c: 651: if(options & 0x04)
 24160  00450E  A409               	btfss	USBEnableEndpoint@options,2,c
 24161  004510  D005               	goto	i2l1567
 24162                           
 24163                           ;usb_device.c: 652: {
 24164                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 24165  004512  0E00               	movlw	0
 24166  004514  6E01               	movwf	USBConfigureEndpoint@direction,c
 24167  004516  500C               	movf	USBEnableEndpoint@ep,w,c
 24168  004518  EC54  F01C         	call	_USBConfigureEndpoint
 24169  00451C                     i2l1567:
 24170                           
 24171                           ;usb_device.c: 654: }
 24172                           ;usb_device.c: 655: if(options & 0x02)
 24173  00451C  A209               	btfss	USBEnableEndpoint@options,1,c
 24174  00451E  D005               	goto	i2l1568
 24175                           
 24176                           ;usb_device.c: 656: {
 24177                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 24178  004520  0E01               	movlw	1
 24179  004522  6E01               	movwf	USBConfigureEndpoint@direction,c
 24180  004524  500C               	movf	USBEnableEndpoint@ep,w,c
 24181  004526  EC54  F01C         	call	_USBConfigureEndpoint
 24182  00452A                     i2l1568:
 24183                           
 24184                           ;usb_device.c: 658: }
 24185                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 24186  00452A  500C               	movf	USBEnableEndpoint@ep,w,c
 24187  00452C  0D01               	mullw	1
 24188  00452E  0E6A               	movlw	106
 24189  004530  24F3               	addwf	prodl,w,c
 24190  004532  6E0A               	movwf	USBEnableEndpoint@p,c
 24191  004534  0E0F               	movlw	15
 24192  004536  20F4               	addwfc	prodh,w,c
 24193  004538  6E0B               	movwf	USBEnableEndpoint@p+1,c
 24194                           
 24195                           ;usb_device.c: 664: *p = options;
 24196  00453A  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24197  00453E  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24198  004542  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 24199  004546  0012               	return		;funcret
 24200  004548                     __end_of_USBEnableEndpoint:
 24201                           	opt stack 0
 24202                           pclatu	equ	0xFFB
 24203                           pclath	equ	0xFFA
 24204                           tblptru	equ	0xFF8
 24205                           tblptrh	equ	0xFF7
 24206                           tblptrl	equ	0xFF6
 24207                           tablat	equ	0xFF5
 24208                           prodh	equ	0xFF4
 24209                           prodl	equ	0xFF3
 24210                           intcon	equ	0xFF2
 24211                           indf0	equ	0xFEF
 24212                           postinc0	equ	0xFEE
 24213                           fsr0h	equ	0xFEA
 24214                           fsr0l	equ	0xFE9
 24215                           wreg	equ	0xFE8
 24216                           indf1	equ	0xFE7
 24217                           postdec1	equ	0xFE5
 24218                           fsr1h	equ	0xFE2
 24219                           fsr1l	equ	0xFE1
 24220                           indf2	equ	0xFDF
 24221                           postinc2	equ	0xFDE
 24222                           postdec2	equ	0xFDD
 24223                           plusw2	equ	0xFDB
 24224                           fsr2h	equ	0xFDA
 24225                           fsr2l	equ	0xFD9
 24226                           status	equ	0xFD8
 24227                           
 24228 ;; *************** function _USBConfigureEndpoint *****************
 24229 ;; Defined at:
 24230 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;  EPNum           1    wreg     unsigned char 
 24233 ;;  direction       1    0[COMRAM] unsigned char 
 24234 ;; Auto vars:     Size  Location     Type
 24235 ;;  EPNum           1    5[COMRAM] unsigned char 
 24236 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24237 ;;		 -> BDT(48), 
 24238 ;; Return value:  Size  Location     Type
 24239 ;;                  1    wreg      void 
 24240 ;; Registers used:
 24241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24242 ;; Tracked objects:
 24243 ;;		On entry : 0/0
 24244 ;;		On exit  : 0/0
 24245 ;;		Unchanged: 0/0
 24246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24247 ;;      Params:         1       0       0       0       0       0       0       0       0
 24248 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24249 ;;      Temps:          4       0       0       0       0       0       0       0       0
 24250 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24251 ;;Total ram usage:        8 bytes
 24252 ;; Hardware stack levels used:    1
 24253 ;; This function calls:
 24254 ;;		Nothing
 24255 ;; This function is called by:
 24256 ;;		_USBEnableEndpoint
 24257 ;; This function uses a non-reentrant model
 24258 ;;
 24259                           
 24260                           	psect	text108
 24261  0038A8                     __ptext108:
 24262                           	opt stack 0
 24263  0038A8                     _USBConfigureEndpoint:
 24264                           	opt stack 14
 24265                           
 24266                           ;incstack = 0
 24267                           ;USBConfigureEndpoint@EPNum stored from wreg
 24268  0038A8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 24269                           
 24270                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 24271                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 24272  0038AA  0E00               	movlw	0
 24273  0038AC  6E07               	movwf	USBConfigureEndpoint@handle,c
 24274  0038AE  0E04               	movlw	4
 24275  0038B0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 24276                           
 24277                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 24278  0038B2  5001               	movf	USBConfigureEndpoint@direction,w,c
 24279  0038B4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 24280  0038B6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 24281  0038B8  90D8               	bcf	status,0,c
 24282  0038BA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 24283  0038BC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 24284  0038BE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24285  0038C0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 24286  0038C2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 24287  0038C4  90D8               	bcf	status,0,c
 24288  0038C6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24289  0038C8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24290  0038CA  90D8               	bcf	status,0,c
 24291  0038CC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24292  0038CE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24293  0038D0  5002               	movf	??_USBConfigureEndpoint,w,c
 24294  0038D2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 24295  0038D4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 24296  0038D6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 24297  0038D8  90D8               	bcf	status,0,c
 24298  0038DA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24299  0038DC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24300  0038DE  90D8               	bcf	status,0,c
 24301  0038E0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24302  0038E2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24303  0038E4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 24304  0038E6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 24305  0038E8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 24306  0038EA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 24307                           
 24308                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 24309  0038EC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24310  0038F0  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24311  0038F4  9EDF               	bcf	indf2,7,c
 24312                           
 24313                           ;usb_device.c: 1242: if(direction == 0)
 24314  0038F6  5001               	movf	USBConfigureEndpoint@direction,w,c
 24315  0038F8  A4D8               	btfss	status,2,c
 24316  0038FA  D007               	goto	i2l1614
 24317                           
 24318                           ;usb_device.c: 1243: {
 24319                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 24320  0038FC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24321  0038FE  0D02               	mullw	2
 24322  003900  0E74               	movlw	low _pBDTEntryOut
 24323  003902  24F3               	addwf	prodl,w,c
 24324  003904  6ED9               	movwf	fsr2l,c
 24325  003906  0E00               	movlw	high _pBDTEntryOut
 24326  003908  D006               	goto	L28
 24327  00390A                     i2l1614:
 24328                           
 24329                           ;usb_device.c: 1246: else
 24330                           ;usb_device.c: 1247: {
 24331                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 24332  00390A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24333  00390C  0D02               	mullw	2
 24334  00390E  0E6E               	movlw	low _pBDTEntryIn
 24335  003910  24F3               	addwf	prodl,w,c
 24336  003912  6ED9               	movwf	fsr2l,c
 24337  003914  0E00               	movlw	high _pBDTEntryIn
 24338  003916                     L28:
 24339  003916  20F4               	addwfc	prodh,w,c
 24340  003918  6EDA               	movwf	fsr2h,c
 24341  00391A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24342  00391E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24343                           
 24344                           ;usb_device.c: 1249: }
 24345                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 24346  003922  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24347  003926  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24348  00392A  9CDF               	bcf	indf2,6,c
 24349                           
 24350                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 24351  00392C  EE20 F004          	lfsr	2,4
 24352  003930  5007               	movf	USBConfigureEndpoint@handle,w,c
 24353  003932  26D9               	addwf	fsr2l,f,c
 24354  003934  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 24355  003936  22DA               	addwfc	fsr2h,f,c
 24356  003938  8CDF               	bsf	indf2,6,c
 24357  00393A  0012               	return		;funcret
 24358  00393C                     __end_of_USBConfigureEndpoint:
 24359                           	opt stack 0
 24360                           pclatu	equ	0xFFB
 24361                           pclath	equ	0xFFA
 24362                           tblptru	equ	0xFF8
 24363                           tblptrh	equ	0xFF7
 24364                           tblptrl	equ	0xFF6
 24365                           tablat	equ	0xFF5
 24366                           prodh	equ	0xFF4
 24367                           prodl	equ	0xFF3
 24368                           intcon	equ	0xFF2
 24369                           indf0	equ	0xFEF
 24370                           postinc0	equ	0xFEE
 24371                           fsr0h	equ	0xFEA
 24372                           fsr0l	equ	0xFE9
 24373                           wreg	equ	0xFE8
 24374                           indf1	equ	0xFE7
 24375                           postdec1	equ	0xFE5
 24376                           fsr1h	equ	0xFE2
 24377                           fsr1l	equ	0xFE1
 24378                           indf2	equ	0xFDF
 24379                           postinc2	equ	0xFDE
 24380                           postdec2	equ	0xFDD
 24381                           plusw2	equ	0xFDB
 24382                           fsr2h	equ	0xFDA
 24383                           fsr2l	equ	0xFD9
 24384                           status	equ	0xFD8
 24385                           
 24386 ;; *************** function _USBCheckCDCRequest *****************
 24387 ;; Defined at:
 24388 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 24389 ;; Parameters:    Size  Location     Type
 24390 ;;		None
 24391 ;; Auto vars:     Size  Location     Type
 24392 ;;		None
 24393 ;; Return value:  Size  Location     Type
 24394 ;;                  1    wreg      void 
 24395 ;; Registers used:
 24396 ;;		wreg, status,2, status,0
 24397 ;; Tracked objects:
 24398 ;;		On entry : 0/0
 24399 ;;		On exit  : 0/0
 24400 ;;		Unchanged: 0/0
 24401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24402 ;;      Params:         0       0       0       0       0       0       0       0       0
 24403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24405 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24406 ;;Total ram usage:        0 bytes
 24407 ;; Hardware stack levels used:    1
 24408 ;; This function calls:
 24409 ;;		Nothing
 24410 ;; This function is called by:
 24411 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24412 ;; This function uses a non-reentrant model
 24413 ;;
 24414                           
 24415                           	psect	text109
 24416  003604                     __ptext109:
 24417                           	opt stack 0
 24418  003604                     _USBCheckCDCRequest:
 24419                           	opt stack 17
 24420                           
 24421                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 24422                           
 24423                           ;incstack = 0
 24424  003604  0104               	movlb	4	; () banked
 24425  003606  5130               	movf	48,w,b	;volatile
 24426  003608  0B1F               	andlw	31
 24427  00360A  06E8               	decf	wreg,f,c
 24428  00360C  A4D8               	btfss	status,2,c
 24429  00360E  0012               	return	
 24430                           
 24431                           ; BSR set to: 4
 24432                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 24433                           
 24434                           ; BSR set to: 4
 24435                           
 24436                           ; BSR set to: 4
 24437  003610  3930               	swapf	48,w,b	;volatile
 24438  003612  32E8               	rrcf	wreg,f,c
 24439  003614  0B03               	andlw	3
 24440  003616  06E8               	decf	wreg,f,c
 24441  003618  A4D8               	btfss	status,2,c
 24442  00361A  0012               	return	
 24443                           
 24444                           ; BSR set to: 4
 24445                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 24446                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 24447                           
 24448                           ; BSR set to: 4
 24449                           
 24450                           ; BSR set to: 4
 24451  00361C  5134               	movf	52,w,b	;volatile
 24452  00361E  B4D8               	btfsc	status,2,c
 24453  003620  D037               	goto	i2l1835
 24454                           
 24455                           ; BSR set to: 4
 24456  003622  0534               	decf	52,w,b	;volatile
 24457  003624  A4D8               	btfss	status,2,c
 24458  003626  0012               	return	
 24459  003628  D033               	goto	i2l1835
 24460  00362A                     
 24461                           ; BSR set to: 4
 24462                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24463                           
 24464                           ; BSR set to: 4
 24465  00362A  0EDA               	movlw	low _dummy_encapsulated_cmd_response
 24466  00362C  0100               	movlb	0	; () banked
 24467  00362E  6F68               	movwf	_inPipes& (0+255),b	;volatile
 24468  003630  0E01               	movlw	high _dummy_encapsulated_cmd_response
 24469  003632  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24470                           
 24471                           ; BSR set to: 0
 24472                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 24473  003634  0E00               	movlw	0
 24474  003636  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24475  003638  0E08               	movlw	8
 24476  00363A  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24480  00363C  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 24481                           
 24482                           ; BSR set to: 0
 24483                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 24484  00363E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24485                           
 24486                           ;usb_device_cdc.c: 212: break;
 24487  003640  0012               	return	
 24488  003642                     
 24489                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24490                           
 24491                           ; BSR set to: 0
 24492  003642  0EDA               	movlw	low _dummy_encapsulated_cmd_response
 24493  003644  0100               	movlb	0	; () banked
 24494  003646  6F68               	movwf	_inPipes& (0+255),b	;volatile
 24495  003648  0E01               	movlw	high _dummy_encapsulated_cmd_response
 24496  00364A  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24497                           
 24498                           ; BSR set to: 0
 24499                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 24500  00364C  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24501                           
 24502                           ;usb_device_cdc.c: 217: break;
 24503  00364E  0012               	return	
 24504  003650                     i2l1839:
 24505                           
 24506                           ; BSR set to: 4
 24507                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 24508  003650  C436 F064          	movff	1078,_outPipes+4	;volatile
 24509  003654  C437 F065          	movff	1079,_outPipes+5	;volatile
 24510                           
 24511                           ; BSR set to: 4
 24512                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 24513  003658  0ED0               	movlw	low _cdc_notice
 24514  00365A  0100               	movlb	0	; () banked
 24515  00365C  6F60               	movwf	_outPipes& (0+255),b	;volatile
 24516  00365E  0E01               	movlw	high _cdc_notice
 24517  003660  6F61               	movwf	(_outPipes+1)& (0+255),b	;volatile
 24518                           
 24519                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 24520  003662  0E76               	movlw	low _USART_mySetLineCodingHandler
 24521  003664  6F66               	movwf	(_outPipes+6)& (0+255),b	;volatile
 24522  003666  0E41               	movlw	high _USART_mySetLineCodingHandler
 24523  003668  6F67               	movwf	(_outPipes+7)& (0+255),b	;volatile
 24524                           
 24525                           ; BSR set to: 0
 24526                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 24527  00366A  8F63               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 24528                           
 24529                           ;usb_device_cdc.c: 224: break;
 24530  00366C  0012               	return	
 24531  00366E                     
 24532                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 24533                           
 24534                           ; BSR set to: 0
 24535  00366E  0EB4               	movlw	low _line_coding
 24536  003670  0100               	movlb	0	; () banked
 24537  003672  6F68               	movwf	_inPipes& (0+255),b	;volatile
 24538  003674  0E00               	movlw	high _line_coding
 24539  003676  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24540                           
 24541                           ; BSR set to: 0
 24542  003678  0E00               	movlw	0
 24543  00367A  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24544  00367C  0E07               	movlw	7
 24545  00367E  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24546                           
 24547                           ; BSR set to: 0
 24548  003680  0EC1               	movlw	193
 24549  003682  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24550                           
 24551                           ;usb_device_cdc.c: 231: break;
 24552  003684  0012               	return	
 24553  003686                     i2l1841:
 24554                           
 24555                           ; BSR set to: 4
 24556                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 24557  003686  C432 F040          	movff	1074,_control_signal_bitmap	;volatile
 24558                           
 24559                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 24560  00368A  0100               	movlb	0	; () banked
 24561  00368C  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24562                           
 24563                           ; BSR set to: 0
 24564                           ;usb_device_cdc.c: 260: }
 24565                           
 24566                           ; BSR set to: 0
 24567                           ;usb_device_cdc.c: 259: break;
 24568                           
 24569                           ;usb_device_cdc.c: 258: default:
 24570                           
 24571                           ;usb_device_cdc.c: 256: break;
 24572  00368E  0012               	return	
 24573  003690                     i2l1835:
 24574                           
 24575                           ; BSR set to: 0
 24576  003690  0104               	movlb	4	; () banked
 24577  003692  5131               	movf	49,w,b	;volatile
 24578                           
 24579                           ; Switch size 1, requested type "space"
 24580                           ; Number of cases is 5, Range of values is 0 to 34
 24581                           ; switch strategies available:
 24582                           ; Name         Instructions Cycles
 24583                           ; simple_byte           16     9 (average)
 24584                           ;	Chosen strategy is simple_byte
 24585  003694  0A00               	xorlw	0	; case 0
 24586  003696  B4D8               	btfsc	status,2,c
 24587  003698  D7C8               	goto	i2l1836
 24588  00369A  0A01               	xorlw	1	; case 1
 24589  00369C  B4D8               	btfsc	status,2,c
 24590  00369E  D7D1               	goto	i2l1838
 24591  0036A0  0A21               	xorlw	33	; case 32
 24592  0036A2  B4D8               	btfsc	status,2,c
 24593  0036A4  D7D5               	goto	i2l1839
 24594  0036A6  0A01               	xorlw	1	; case 33
 24595  0036A8  B4D8               	btfsc	status,2,c
 24596  0036AA  D7E1               	goto	i2l1840
 24597  0036AC  0A03               	xorlw	3	; case 34
 24598  0036AE  A4D8               	btfss	status,2,c
 24599  0036B0  0012               	return	
 24600  0036B2  D7E9               	goto	i2l1841
 24601  0036B4                     __end_of_USBCheckCDCRequest:
 24602                           	opt stack 0
 24603                           pclatu	equ	0xFFB
 24604                           pclath	equ	0xFFA
 24605                           tblptru	equ	0xFF8
 24606                           tblptrh	equ	0xFF7
 24607                           tblptrl	equ	0xFF6
 24608                           tablat	equ	0xFF5
 24609                           prodh	equ	0xFF4
 24610                           prodl	equ	0xFF3
 24611                           intcon	equ	0xFF2
 24612                           indf0	equ	0xFEF
 24613                           postinc0	equ	0xFEE
 24614                           fsr0h	equ	0xFEA
 24615                           fsr0l	equ	0xFE9
 24616                           wreg	equ	0xFE8
 24617                           indf1	equ	0xFE7
 24618                           postdec1	equ	0xFE5
 24619                           fsr1h	equ	0xFE2
 24620                           fsr1l	equ	0xFE1
 24621                           indf2	equ	0xFDF
 24622                           postinc2	equ	0xFDE
 24623                           postdec2	equ	0xFDD
 24624                           plusw2	equ	0xFDB
 24625                           fsr2h	equ	0xFDA
 24626                           fsr2l	equ	0xFD9
 24627                           status	equ	0xFD8
 24628                           
 24629 ;; *************** function _USBCtrlTrfOutHandler *****************
 24630 ;; Defined at:
 24631 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;		None
 24634 ;; Auto vars:     Size  Location     Type
 24635 ;;		None
 24636 ;; Return value:  Size  Location     Type
 24637 ;;                  1    wreg      void 
 24638 ;; Registers used:
 24639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24640 ;; Tracked objects:
 24641 ;;		On entry : 0/0
 24642 ;;		On exit  : 0/0
 24643 ;;		Unchanged: 0/0
 24644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24645 ;;      Params:         0       0       0       0       0       0       0       0       0
 24646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24649 ;;Total ram usage:        0 bytes
 24650 ;; Hardware stack levels used:    1
 24651 ;; Hardware stack levels required when called:    3
 24652 ;; This function calls:
 24653 ;;		_USBCtrlTrfRxService
 24654 ;; This function is called by:
 24655 ;;		_USBCtrlEPService
 24656 ;; This function uses a non-reentrant model
 24657 ;;
 24658                           
 24659                           	psect	text110
 24660  00411A                     __ptext110:
 24661                           	opt stack 0
 24662  00411A                     _USBCtrlTrfOutHandler:
 24663                           	opt stack 14
 24664                           
 24665                           ;usb_device.c: 2171: if(controlTransferState == 2)
 24666                           
 24667                           ;incstack = 0
 24668  00411A  0E02               	movlw	2
 24669  00411C  184B               	xorwf	_controlTransferState,w,c	;volatile
 24670  00411E  A4D8               	btfss	status,2,c
 24671  004120  D003               	goto	i2l1722
 24672                           
 24673                           ;usb_device.c: 2172: {
 24674                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 24675  004122  ECD4  F00E         	call	_USBCtrlTrfRxService	;wreg free
 24676                           
 24677                           ;usb_device.c: 2174: }
 24678  004126  0012               	return	
 24679  004128                     i2l1722:
 24680                           
 24681                           ;usb_device.c: 2175: else
 24682                           ;usb_device.c: 2176: {
 24683                           ;usb_device.c: 2179: controlTransferState = 0;
 24684  004128  0E00               	movlw	0
 24685  00412A  6E4B               	movwf	_controlTransferState,c	;volatile
 24686                           
 24687                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 24688  00412C  5047               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 24689  00412E  A4D8               	btfss	status,2,c
 24690  004130  D01F               	goto	i2l1724
 24691                           
 24692                           ;usb_device.c: 2187: {
 24693                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 24694  004132  EE20 F001          	lfsr	2,1
 24695  004136  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24696  004138  26D9               	addwf	fsr2l,f,c
 24697  00413A  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24698  00413C  22DA               	addwfc	fsr2h,f,c
 24699  00413E  0E08               	movlw	8
 24700  004140  6EDF               	movwf	indf2,c
 24701                           
 24702                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24703  004142  EE20 F002          	lfsr	2,2
 24704  004146  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24705  004148  26D9               	addwf	fsr2l,f,c
 24706  00414A  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24707  00414C  22DA               	addwfc	fsr2h,f,c
 24708  00414E  0E30               	movlw	48
 24709  004150  6EDE               	movwf	postinc2,c
 24710  004152  0E04               	movlw	4
 24711  004154  6EDD               	movwf	postdec2,c
 24712                           
 24713                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24714  004156  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24715  00415A  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24716  00415E  0E0C               	movlw	12
 24717  004160  6EDF               	movwf	indf2,c
 24718                           
 24719                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24720  004162  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24721  004166  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24722  00416A  0E00               	movlw	0
 24723  00416C  8EDB               	bsf	plusw2,7,c
 24724                           
 24725                           ;usb_device.c: 2192: }
 24726  00416E  0012               	return	
 24727  004170                     i2l1724:
 24728                           
 24729                           ;usb_device.c: 2193: else
 24730                           ;usb_device.c: 2194: {
 24731                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 24732  004170  0E00               	movlw	0
 24733  004172  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 24734  004174  0012               	return	
 24735  004176                     __end_of_USBCtrlTrfOutHandler:
 24736                           	opt stack 0
 24737                           pclatu	equ	0xFFB
 24738                           pclath	equ	0xFFA
 24739                           tblptru	equ	0xFF8
 24740                           tblptrh	equ	0xFF7
 24741                           tblptrl	equ	0xFF6
 24742                           tablat	equ	0xFF5
 24743                           prodh	equ	0xFF4
 24744                           prodl	equ	0xFF3
 24745                           intcon	equ	0xFF2
 24746                           indf0	equ	0xFEF
 24747                           postinc0	equ	0xFEE
 24748                           fsr0h	equ	0xFEA
 24749                           fsr0l	equ	0xFE9
 24750                           wreg	equ	0xFE8
 24751                           indf1	equ	0xFE7
 24752                           postdec1	equ	0xFE5
 24753                           fsr1h	equ	0xFE2
 24754                           fsr1l	equ	0xFE1
 24755                           indf2	equ	0xFDF
 24756                           postinc2	equ	0xFDE
 24757                           postdec2	equ	0xFDD
 24758                           plusw2	equ	0xFDB
 24759                           fsr2h	equ	0xFDA
 24760                           fsr2l	equ	0xFD9
 24761                           status	equ	0xFD8
 24762                           
 24763 ;; *************** function _USBCtrlTrfRxService *****************
 24764 ;; Defined at:
 24765 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 24766 ;; Parameters:    Size  Location     Type
 24767 ;;		None
 24768 ;; Auto vars:     Size  Location     Type
 24769 ;;  byteToRead      1   18[COMRAM] unsigned char 
 24770 ;;  i               1   17[COMRAM] unsigned char 
 24771 ;; Return value:  Size  Location     Type
 24772 ;;                  1    wreg      void 
 24773 ;; Registers used:
 24774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24775 ;; Tracked objects:
 24776 ;;		On entry : 0/0
 24777 ;;		On exit  : 0/0
 24778 ;;		Unchanged: 0/0
 24779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24780 ;;      Params:         0       0       0       0       0       0       0       0       0
 24781 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24783 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24784 ;;Total ram usage:        2 bytes
 24785 ;; Hardware stack levels used:    1
 24786 ;; Hardware stack levels required when called:    2
 24787 ;; This function calls:
 24788 ;;		_USART_mySetLineCodingHandler
 24789 ;;		_USBCtrlEPAllowStatusStage
 24790 ;; This function is called by:
 24791 ;;		_USBCtrlTrfOutHandler
 24792 ;; This function uses a non-reentrant model
 24793 ;;
 24794                           
 24795                           	psect	text111
 24796  001DA8                     __ptext111:
 24797                           	opt stack 0
 24798  001DA8                     _USBCtrlTrfRxService:
 24799                           	opt stack 14
 24800                           
 24801                           ;usb_device.c: 1520: uint8_t byteToRead;
 24802                           ;usb_device.c: 1521: uint8_t i;
 24803                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 24804                           
 24805                           ;incstack = 0
 24806  001DA8  EE20 F001          	lfsr	2,1
 24807  001DAC  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 24808  001DAE  26D9               	addwf	fsr2l,f,c
 24809  001DB0  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24810  001DB2  22DA               	addwfc	fsr2h,f,c
 24811  001DB4  50DF               	movf	indf2,w,c
 24812  001DB6  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 24813                           
 24814                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 24815  001DB8  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 24816  001DBA  0100               	movlb	0	; () banked
 24817  001DBC  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 24818  001DBE  0E00               	movlw	0
 24819  001DC0  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 24820  001DC2  A0D8               	btfss	status,0,c
 24821                           
 24822                           ; BSR set to: 0
 24823                           ;usb_device.c: 1532: {
 24824                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 24825  001DC4  C064  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;usb_device.c: 1534: }
 24829                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 24830                           
 24831                           ; BSR set to: 0
 24832  001DC8  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 24833  001DCA  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 24834  001DCC  0E00               	movlw	0
 24835  001DCE  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 24836                           
 24837                           ; BSR set to: 0
 24838                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 24839  001DD0  0E00               	movlw	0
 24840  001DD2  6E12               	movwf	USBCtrlTrfRxService@i,c
 24841  001DD4  D011               	goto	i2l1648
 24842  001DD6                     
 24843                           ; BSR set to: 0
 24844                           ;usb_device.c: 1541: {
 24845                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 24846                           
 24847                           ; BSR set to: 0
 24848  001DD6  5012               	movf	USBCtrlTrfRxService@i,w,c
 24849  001DD8  0D01               	mullw	1
 24850  001DDA  0E38               	movlw	56
 24851  001DDC  24F3               	addwf	prodl,w,c
 24852  001DDE  6ED9               	movwf	fsr2l,c
 24853  001DE0  0E04               	movlw	4
 24854  001DE2  20F4               	addwfc	prodh,w,c
 24855  001DE4  6EDA               	movwf	fsr2h,c
 24856  001DE6  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 24857  001DEA  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 24858  001DEE  CFDF FFE7          	movff	indf2,indf1
 24859                           
 24860                           ; BSR set to: 0
 24861  001DF2  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 24862  001DF4  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 24863                           
 24864                           ; BSR set to: 0
 24865  001DF6  2A12               	incf	USBCtrlTrfRxService@i,f,c
 24866  001DF8                     i2l1648:
 24867                           
 24868                           ; BSR set to: 0
 24869                           
 24870                           ; BSR set to: 0
 24871  001DF8  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 24872  001DFA  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 24873  001DFC  A0D8               	btfss	status,0,c
 24874  001DFE  D7EB               	goto	i2l1649
 24875                           
 24876                           ; BSR set to: 0
 24877                           ;usb_device.c: 1543: }
 24878                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 24879                           
 24880                           ; BSR set to: 0
 24881  001E00  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 24882  001E02  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 24883  001E04  B4D8               	btfsc	status,2,c
 24884  001E06  D032               	goto	i2l1651
 24885                           
 24886                           ; BSR set to: 0
 24887                           ;usb_device.c: 1548: {
 24888                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 24889  001E08  EE20 F001          	lfsr	2,1
 24890  001E0C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24891  001E0E  26D9               	addwf	fsr2l,f,c
 24892  001E10  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24893  001E12  22DA               	addwfc	fsr2h,f,c
 24894  001E14  0E08               	movlw	8
 24895  001E16  6EDF               	movwf	indf2,c
 24896                           
 24897                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 24898  001E18  EE20 F002          	lfsr	2,2
 24899  001E1C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24900  001E1E  26D9               	addwf	fsr2l,f,c
 24901  001E20  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24902  001E22  22DA               	addwfc	fsr2h,f,c
 24903  001E24  0E38               	movlw	56
 24904  001E26  6EDE               	movwf	postinc2,c
 24905  001E28  0E04               	movlw	4
 24906  001E2A  6EDD               	movwf	postdec2,c
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 24910  001E2C  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24911  001E30  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24912  001E34  BCDF               	btfsc	indf2,6,c
 24913  001E36  D00D               	goto	i2l1652
 24914                           
 24915                           ; BSR set to: 0
 24916                           ;usb_device.c: 1552: {
 24917                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 24918  001E38  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24919  001E3C  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24920  001E40  0E48               	movlw	72
 24921  001E42  6EDF               	movwf	indf2,c
 24922                           
 24923                           ; BSR set to: 0
 24924                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24925  001E44  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24926  001E48  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24927  001E4C  0E00               	movlw	0
 24928  001E4E  8EDB               	bsf	plusw2,7,c
 24929                           
 24930                           ;usb_device.c: 1555: }
 24931  001E50  0012               	return	
 24932  001E52                     i2l1652:
 24933                           
 24934                           ; BSR set to: 0
 24935                           ;usb_device.c: 1556: else
 24936                           ;usb_device.c: 1557: {
 24937                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 24938                           
 24939                           ; BSR set to: 0
 24940  001E52  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24941  001E56  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24942  001E5A  0E08               	movlw	8
 24943  001E5C  6EDF               	movwf	indf2,c
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24947  001E5E  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24948  001E62  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24949  001E66  0E00               	movlw	0
 24950  001E68  8EDB               	bsf	plusw2,7,c
 24951                           
 24952                           ; BSR set to: 0
 24953                           ;usb_device.c: 1560: }
 24954                           ;usb_device.c: 1561: }
 24955  001E6A  0012               	return	
 24956  001E6C                     i2l1651:
 24957                           
 24958                           ; BSR set to: 0
 24959                           ;usb_device.c: 1562: else
 24960                           ;usb_device.c: 1563: {
 24961                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 24962                           
 24963                           ; BSR set to: 0
 24964  001E6C  EE20 F001          	lfsr	2,1
 24965  001E70  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24966  001E72  26D9               	addwf	fsr2l,f,c
 24967  001E74  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24968  001E76  22DA               	addwfc	fsr2h,f,c
 24969  001E78  0E08               	movlw	8
 24970  001E7A  6EDF               	movwf	indf2,c
 24971                           
 24972                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24973  001E7C  EE20 F002          	lfsr	2,2
 24974  001E80  5038               	movf	_pBDTEntryEP0OutNext,w,c
 24975  001E82  26D9               	addwf	fsr2l,f,c
 24976  001E84  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 24977  001E86  22DA               	addwfc	fsr2h,f,c
 24978  001E88  0E30               	movlw	48
 24979  001E8A  6EDE               	movwf	postinc2,c
 24980  001E8C  0E04               	movlw	4
 24981  001E8E  6EDD               	movwf	postdec2,c
 24982                           
 24983                           ; BSR set to: 0
 24984                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 24985  001E90  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24986  001E94  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24987  001E98  0E04               	movlw	4
 24988  001E9A  6EDF               	movwf	indf2,c
 24989                           
 24990                           ; BSR set to: 0
 24991                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24992  001E9C  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24993  001EA0  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24994  001EA4  0E00               	movlw	0
 24995  001EA6  8EDB               	bsf	plusw2,7,c
 24996                           
 24997                           ; BSR set to: 0
 24998                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 24999  001EA8  5166               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 25000  001EAA  1167               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 25001  001EAC  B4D8               	btfsc	status,2,c
 25002  001EAE  D00E               	goto	i2u536_49
 25003                           
 25004                           ; BSR set to: 0
 25005                           ;usb_device.c: 1581: {
 25006                           ;usb_device.c: 1586: outPipes[0].pFunc();
 25007  001EB0  EE20  F066         	lfsr	2,_outPipes+6	;volatile
 25008  001EB4  D801               	call	i2u536_48
 25009  001EB6  D00A               	goto	i2u536_49
 25010  001EB8                     i2u536_48:
 25011  001EB8  0005               	push	
 25012  001EBA  6EFA               	movwf	pclath,c
 25013  001EBC  50DE               	movf	postinc2,w,c
 25014  001EBE  6EFD               	movwf	tosl,c
 25015  001EC0  50DE               	movf	postinc2,w,c
 25016  001EC2  6EFE               	movwf	tosh,c
 25017  001EC4  50F8               	movf	tblptru,w,c
 25018  001EC6  6EFF               	movwf	tosu,c
 25019  001EC8  50FA               	movf	pclath,w,c
 25020  001ECA  0012               	return		;indir
 25021  001ECC                     i2u536_49:
 25022                           
 25023                           ;usb_device.c: 1588: }
 25024                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 25025  001ECC  0100               	movlb	0	; () banked
 25026  001ECE  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 25027                           
 25028                           ; BSR set to: 0
 25029                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 25030  001ED0  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25031  001ED2  A4D8               	btfss	status,2,c
 25032  001ED4  0012               	return	
 25033                           
 25034                           ; BSR set to: 0
 25035                           ;usb_device.c: 1604: {
 25036                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 25037  001ED6  EC18  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25038  001EDA  0012               	return	
 25039  001EDC                     __end_of_USBCtrlTrfRxService:
 25040                           	opt stack 0
 25041                           tosu	equ	0xFFF
 25042                           tosh	equ	0xFFE
 25043                           tosl	equ	0xFFD
 25044                           pclatu	equ	0xFFB
 25045                           pclath	equ	0xFFA
 25046                           tblptru	equ	0xFF8
 25047                           tblptrh	equ	0xFF7
 25048                           tblptrl	equ	0xFF6
 25049                           tablat	equ	0xFF5
 25050                           prodh	equ	0xFF4
 25051                           prodl	equ	0xFF3
 25052                           intcon	equ	0xFF2
 25053                           indf0	equ	0xFEF
 25054                           postinc0	equ	0xFEE
 25055                           fsr0h	equ	0xFEA
 25056                           fsr0l	equ	0xFE9
 25057                           wreg	equ	0xFE8
 25058                           indf1	equ	0xFE7
 25059                           postdec1	equ	0xFE5
 25060                           fsr1h	equ	0xFE2
 25061                           fsr1l	equ	0xFE1
 25062                           indf2	equ	0xFDF
 25063                           postinc2	equ	0xFDE
 25064                           postdec2	equ	0xFDD
 25065                           plusw2	equ	0xFDB
 25066                           fsr2h	equ	0xFDA
 25067                           fsr2l	equ	0xFD9
 25068                           status	equ	0xFD8
 25069                           
 25070 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25071 ;; Defined at:
 25072 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 25073 ;; Parameters:    Size  Location     Type
 25074 ;;		None
 25075 ;; Auto vars:     Size  Location     Type
 25076 ;;		None
 25077 ;; Return value:  Size  Location     Type
 25078 ;;                  1    wreg      void 
 25079 ;; Registers used:
 25080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25081 ;; Tracked objects:
 25082 ;;		On entry : 0/0
 25083 ;;		On exit  : 0/0
 25084 ;;		Unchanged: 0/0
 25085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25086 ;;      Params:         0       0       0       0       0       0       0       0       0
 25087 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25089 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25090 ;;Total ram usage:        0 bytes
 25091 ;; Hardware stack levels used:    1
 25092 ;; This function calls:
 25093 ;;		Nothing
 25094 ;; This function is called by:
 25095 ;;		_USBDeviceTasks
 25096 ;;		_USBCtrlEPServiceComplete
 25097 ;;		_USBCtrlTrfRxService
 25098 ;; This function uses a non-reentrant model
 25099 ;;
 25100                           
 25101                           	psect	text112
 25102  003030                     __ptext112:
 25103                           	opt stack 0
 25104  003030                     _USBCtrlEPAllowStatusStage:
 25105                           	opt stack 15
 25106                           
 25107                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 25108                           
 25109                           ;incstack = 0
 25110  003030  5044               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 25111  003032  A4D8               	btfss	status,2,c
 25112  003034  0012               	return	
 25113                           
 25114                           ;usb_device.c: 1112: {
 25115                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 25116  003036  0E01               	movlw	1
 25117  003038  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25118                           
 25119                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 25120  00303A  5043               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 25121  00303C  A4D8               	btfss	status,2,c
 25122  00303E  0012               	return	
 25123                           
 25124                           ;usb_device.c: 1115: {
 25125                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 25126  003040  0E01               	movlw	1
 25127  003042  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25128                           
 25129                           ;usb_device.c: 1120: if(controlTransferState == 2)
 25130  003044  0E02               	movlw	2
 25131  003046  184B               	xorwf	_controlTransferState,w,c	;volatile
 25132  003048  A4D8               	btfss	status,2,c
 25133  00304A  D016               	goto	i2l1602
 25134                           
 25135                           ;usb_device.c: 1121: {
 25136                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 25137  00304C  0100               	movlb	0	; () banked
 25138  00304E  EE20 F001          	lfsr	2,1
 25139  003052  516E               	movf	_pBDTEntryIn& (0+255),w,b
 25140  003054  26D9               	addwf	fsr2l,f,c
 25141  003056  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25142  003058  22DA               	addwfc	fsr2h,f,c
 25143  00305A  0E00               	movlw	0
 25144  00305C  6EDF               	movwf	indf2,c
 25145                           
 25146                           ; BSR set to: 0
 25147                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25148  00305E  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25149  003062  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25150  003066  0E48               	movlw	72
 25151  003068  6EDF               	movwf	indf2,c
 25152                           
 25153                           ; BSR set to: 0
 25154                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25155  00306A  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25156  00306E  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25157  003072  0E00               	movlw	0
 25158  003074  8EDB               	bsf	plusw2,7,c
 25159                           
 25160                           ;usb_device.c: 1125: }
 25161  003076  0012               	return	
 25162  003078                     i2l1602:
 25163                           
 25164                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 25165                           
 25166                           ; BSR set to: 0
 25167  003078  044B               	decf	_controlTransferState,w,c	;volatile
 25168  00307A  A4D8               	btfss	status,2,c
 25169  00307C  0012               	return	
 25170                           
 25171                           ;usb_device.c: 1127: {
 25172                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 25173  00307E  0E00               	movlw	0
 25174  003080  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25175                           
 25176                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 25177  003082  EE20 F001          	lfsr	2,1
 25178  003086  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 25179  003088  26D9               	addwf	fsr2l,f,c
 25180  00308A  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25181  00308C  22DA               	addwfc	fsr2h,f,c
 25182  00308E  0E08               	movlw	8
 25183  003090  6EDF               	movwf	indf2,c
 25184                           
 25185                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25186  003092  EE20 F002          	lfsr	2,2
 25187  003096  503A               	movf	_pBDTEntryEP0OutCurrent,w,c
 25188  003098  26D9               	addwf	fsr2l,f,c
 25189  00309A  503B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25190  00309C  22DA               	addwfc	fsr2h,f,c
 25191  00309E  0E30               	movlw	48
 25192  0030A0  6EDE               	movwf	postinc2,c
 25193  0030A2  0E04               	movlw	4
 25194  0030A4  6EDD               	movwf	postdec2,c
 25195                           
 25196                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 25197  0030A6  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25198  0030AA  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25199  0030AE  0E04               	movlw	4
 25200  0030B0  6EDF               	movwf	indf2,c
 25201                           
 25202                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25203  0030B2  C03A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25204  0030B6  C03B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25205  0030BA  0E00               	movlw	0
 25206  0030BC  8EDB               	bsf	plusw2,7,c
 25207                           
 25208                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 25209  0030BE  0E01               	movlw	1
 25210  0030C0  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25211                           
 25212                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 25213  0030C2  EE20 F001          	lfsr	2,1
 25214  0030C6  5038               	movf	_pBDTEntryEP0OutNext,w,c
 25215  0030C8  26D9               	addwf	fsr2l,f,c
 25216  0030CA  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 25217  0030CC  22DA               	addwfc	fsr2h,f,c
 25218  0030CE  0E08               	movlw	8
 25219  0030D0  6EDF               	movwf	indf2,c
 25220                           
 25221                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25222  0030D2  EE20 F002          	lfsr	2,2
 25223  0030D6  5038               	movf	_pBDTEntryEP0OutNext,w,c
 25224  0030D8  26D9               	addwf	fsr2l,f,c
 25225  0030DA  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 25226  0030DC  22DA               	addwfc	fsr2h,f,c
 25227  0030DE  0E30               	movlw	48
 25228  0030E0  6EDE               	movwf	postinc2,c
 25229  0030E2  0E04               	movlw	4
 25230  0030E4  6EDD               	movwf	postdec2,c
 25231                           
 25232                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 25233  0030E6  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25234  0030EA  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25235  0030EE  0E80               	movlw	128
 25236  0030F0  6EDF               	movwf	indf2,c
 25237  0030F2  0012               	return	
 25238  0030F4                     __end_of_USBCtrlEPAllowStatusStage:
 25239                           	opt stack 0
 25240                           tosu	equ	0xFFF
 25241                           tosh	equ	0xFFE
 25242                           tosl	equ	0xFFD
 25243                           pclatu	equ	0xFFB
 25244                           pclath	equ	0xFFA
 25245                           tblptru	equ	0xFF8
 25246                           tblptrh	equ	0xFF7
 25247                           tblptrl	equ	0xFF6
 25248                           tablat	equ	0xFF5
 25249                           prodh	equ	0xFF4
 25250                           prodl	equ	0xFF3
 25251                           intcon	equ	0xFF2
 25252                           indf0	equ	0xFEF
 25253                           postinc0	equ	0xFEE
 25254                           fsr0h	equ	0xFEA
 25255                           fsr0l	equ	0xFE9
 25256                           wreg	equ	0xFE8
 25257                           indf1	equ	0xFE7
 25258                           postdec1	equ	0xFE5
 25259                           fsr1h	equ	0xFE2
 25260                           fsr1l	equ	0xFE1
 25261                           indf2	equ	0xFDF
 25262                           postinc2	equ	0xFDE
 25263                           postdec2	equ	0xFDD
 25264                           plusw2	equ	0xFDB
 25265                           fsr2h	equ	0xFDA
 25266                           fsr2l	equ	0xFD9
 25267                           status	equ	0xFD8
 25268                           
 25269 ;; *************** function _USBCtrlTrfInHandler *****************
 25270 ;; Defined at:
 25271 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 25272 ;; Parameters:    Size  Location     Type
 25273 ;;		None
 25274 ;; Auto vars:     Size  Location     Type
 25275 ;;  lastDTS         1   17[COMRAM] unsigned char 
 25276 ;; Return value:  Size  Location     Type
 25277 ;;                  1    wreg      void 
 25278 ;; Registers used:
 25279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 25280 ;; Tracked objects:
 25281 ;;		On entry : 0/0
 25282 ;;		On exit  : 0/0
 25283 ;;		Unchanged: 0/0
 25284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25285 ;;      Params:         0       0       0       0       0       0       0       0       0
 25286 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25288 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25289 ;;Total ram usage:        1 bytes
 25290 ;; Hardware stack levels used:    1
 25291 ;; Hardware stack levels required when called:    2
 25292 ;; This function calls:
 25293 ;;		_USART_mySetLineCodingHandler
 25294 ;;		_USBCtrlTrfTxService
 25295 ;; This function is called by:
 25296 ;;		_USBCtrlEPService
 25297 ;; This function uses a non-reentrant model
 25298 ;;
 25299                           
 25300                           	psect	text113
 25301  002A64                     __ptext113:
 25302                           	opt stack 0
 25303  002A64                     _USBCtrlTrfInHandler:
 25304                           	opt stack 15
 25305                           
 25306                           ;usb_device.c: 2225: uint8_t lastDTS;
 25307                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25308                           
 25309                           ;incstack = 0
 25310  002A64  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25311  002A68  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25312  002A6C  0100               	movlb	0	; () banked
 25313  002A6E  0E00               	movlw	0
 25314  002A70  BCDF               	btfsc	indf2,6,c
 25315  002A72  0E01               	movlw	1
 25316  002A74  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25320  002A76  0E04               	movlw	4
 25321  002A78  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 25322                           
 25323                           ; BSR set to: 0
 25324                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 25325  002A7A  0E08               	movlw	8
 25326  002A7C  19A8               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 25327  002A7E  A4D8               	btfss	status,2,c
 25328  002A80  D00C               	goto	i2l1731
 25329                           
 25330                           ; BSR set to: 0
 25331                           ;usb_device.c: 2236: {
 25332                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 25333  002A82  0104               	movlb	4	; () banked
 25334  002A84  5132               	movf	50,w,b	;volatile
 25335  002A86  0B7F               	andlw	127
 25336  002A88  6E63               	movwf	3939,c	;volatile
 25337                           
 25338                           ; BSR set to: 4
 25339                           ;usb_device.c: 2238: if(UADDR != 0u)
 25340  002A8A  5063               	movf	3939,w,c	;volatile
 25341  002A8C  B4D8               	btfsc	status,2,c
 25342  002A8E  D002               	goto	i2l1730
 25343                           
 25344                           ; BSR set to: 4
 25345                           ;usb_device.c: 2239: {
 25346                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 25347  002A90  0E10               	movlw	16
 25348  002A92  D001               	goto	L29
 25349  002A94                     i2l1730:
 25350                           
 25351                           ;usb_device.c: 2242: else
 25352                           ;usb_device.c: 2243: {
 25353                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 25354                           
 25355                           ; BSR set to: 0
 25356  002A94  0E04               	movlw	4
 25357  002A96                     L29:
 25358  002A96  0100               	movlb	0	; () banked
 25359  002A98  6FA8               	movwf	_USBDeviceState& (0+255),b	;volatile
 25360  002A9A                     i2l1731:
 25361                           
 25362                           ; BSR set to: 0
 25363                           ;usb_device.c: 2245: }
 25364                           ;usb_device.c: 2246: }
 25365                           ;usb_device.c: 2249: if(controlTransferState == 1)
 25366                           
 25367                           ; BSR set to: 0
 25368                           
 25369                           ; BSR set to: 0
 25370  002A9A  044B               	decf	_controlTransferState,w,c	;volatile
 25371  002A9C  A4D8               	btfss	status,2,c
 25372  002A9E  D03A               	goto	i2l1732
 25373                           
 25374                           ; BSR set to: 0
 25375                           ;usb_device.c: 2250: {
 25376                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25377  002AA0  EE20 F002          	lfsr	2,2
 25378  002AA4  516E               	movf	_pBDTEntryIn& (0+255),w,b
 25379  002AA6  26D9               	addwf	fsr2l,f,c
 25380  002AA8  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25381  002AAA  22DA               	addwfc	fsr2h,f,c
 25382  002AAC  0E38               	movlw	56
 25383  002AAE  6EDE               	movwf	postinc2,c
 25384  002AB0  0E04               	movlw	4
 25385  002AB2  6EDD               	movwf	postdec2,c
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 25389  002AB4  EC4E  F017         	call	_USBCtrlTrfTxService	;wreg free
 25390                           
 25391                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 25392  002AB8  0E02               	movlw	2
 25393  002ABA  184C               	xorwf	_shortPacketStatus,w,c	;volatile
 25394  002ABC  A4D8               	btfss	status,2,c
 25395  002ABE  D00D               	goto	i2l1733
 25396                           
 25397                           ;usb_device.c: 2259: {
 25398                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 25399  002AC0  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25400  002AC4  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25401  002AC8  0E04               	movlw	4
 25402  002ACA  6EDF               	movwf	indf2,c
 25403                           
 25404                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25405  002ACC  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25406  002AD0  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25407  002AD4  0E00               	movlw	0
 25408  002AD6  8EDB               	bsf	plusw2,7,c
 25409                           
 25410                           ;usb_device.c: 2264: }
 25411  002AD8  0012               	return	
 25412  002ADA                     i2l1733:
 25413                           
 25414                           ;usb_device.c: 2265: else
 25415                           ;usb_device.c: 2266: {
 25416                           ;usb_device.c: 2267: if(lastDTS == 0)
 25417  002ADA  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 25418  002ADC  A4D8               	btfss	status,2,c
 25419  002ADE  D00D               	goto	i2l1735
 25420                           
 25421                           ;usb_device.c: 2268: {
 25422                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25423  002AE0  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25424  002AE4  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25425  002AE8  0E48               	movlw	72
 25426  002AEA  6EDF               	movwf	indf2,c
 25427                           
 25428                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25429  002AEC  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25430  002AF0  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25431  002AF4  0E00               	movlw	0
 25432  002AF6  8EDB               	bsf	plusw2,7,c
 25433                           
 25434                           ;usb_device.c: 2271: }
 25435  002AF8  0012               	return	
 25436  002AFA                     i2l1735:
 25437                           
 25438                           ;usb_device.c: 2272: else
 25439                           ;usb_device.c: 2273: {
 25440                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25441  002AFA  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25442  002AFE  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25443  002B02  0E08               	movlw	8
 25444  002B04  6EDF               	movwf	indf2,c
 25445                           
 25446                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25447  002B06  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 25448  002B0A  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25449  002B0E  0E00               	movlw	0
 25450  002B10  8EDB               	bsf	plusw2,7,c
 25451                           
 25452                           ;usb_device.c: 2276: }
 25453                           ;usb_device.c: 2277: }
 25454                           ;usb_device.c: 2278: }
 25455  002B12  0012               	return	
 25456  002B14                     i2l1732:
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;usb_device.c: 2279: else
 25460                           ;usb_device.c: 2280: {
 25461                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 25462  002B14  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25463  002B16  D014               	goto	i2l1738
 25464                           
 25465                           ; BSR set to: 0
 25466                           ;usb_device.c: 2285: {
 25467                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 25468  002B18  5166               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 25469  002B1A  1167               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 25470  002B1C  B4D8               	btfsc	status,2,c
 25471  002B1E  D00E               	goto	i2u607_49
 25472                           
 25473                           ; BSR set to: 0
 25474                           ;usb_device.c: 2287: {
 25475                           ;usb_device.c: 2288: outPipes[0].pFunc();
 25476  002B20  EE20  F066         	lfsr	2,_outPipes+6	;volatile
 25477  002B24  D801               	call	i2u607_48
 25478  002B26  D00A               	goto	i2u607_49
 25479  002B28                     i2u607_48:
 25480  002B28  0005               	push	
 25481  002B2A  6EFA               	movwf	pclath,c
 25482  002B2C  50DE               	movf	postinc2,w,c
 25483  002B2E  6EFD               	movwf	tosl,c
 25484  002B30  50DE               	movf	postinc2,w,c
 25485  002B32  6EFE               	movwf	tosh,c
 25486  002B34  50F8               	movf	tblptru,w,c
 25487  002B36  6EFF               	movwf	tosu,c
 25488  002B38  50FA               	movf	pclath,w,c
 25489  002B3A  0012               	return		;indir
 25490  002B3C                     i2u607_49:
 25491                           
 25492                           ;usb_device.c: 2289: }
 25493                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 25494  002B3C  0100               	movlb	0	; () banked
 25495  002B3E  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 25496  002B40                     i2l1738:
 25497                           
 25498                           ; BSR set to: 0
 25499                           ;usb_device.c: 2291: }
 25500                           ;usb_device.c: 2293: controlTransferState = 0;
 25501                           
 25502                           ; BSR set to: 0
 25503  002B40  0E00               	movlw	0
 25504  002B42  6E4B               	movwf	_controlTransferState,c	;volatile
 25505  002B44  0012               	return	
 25506  002B46                     __end_of_USBCtrlTrfInHandler:
 25507                           	opt stack 0
 25508                           tosu	equ	0xFFF
 25509                           tosh	equ	0xFFE
 25510                           tosl	equ	0xFFD
 25511                           pclatu	equ	0xFFB
 25512                           pclath	equ	0xFFA
 25513                           tblptru	equ	0xFF8
 25514                           tblptrh	equ	0xFF7
 25515                           tblptrl	equ	0xFF6
 25516                           tablat	equ	0xFF5
 25517                           prodh	equ	0xFF4
 25518                           prodl	equ	0xFF3
 25519                           intcon	equ	0xFF2
 25520                           indf0	equ	0xFEF
 25521                           postinc0	equ	0xFEE
 25522                           fsr0h	equ	0xFEA
 25523                           fsr0l	equ	0xFE9
 25524                           wreg	equ	0xFE8
 25525                           indf1	equ	0xFE7
 25526                           postdec1	equ	0xFE5
 25527                           fsr1h	equ	0xFE2
 25528                           fsr1l	equ	0xFE1
 25529                           indf2	equ	0xFDF
 25530                           postinc2	equ	0xFDE
 25531                           postdec2	equ	0xFDD
 25532                           plusw2	equ	0xFDB
 25533                           fsr2h	equ	0xFDA
 25534                           fsr2l	equ	0xFD9
 25535                           status	equ	0xFD8
 25536                           
 25537 ;; *************** function _USBCtrlTrfTxService *****************
 25538 ;; Defined at:
 25539 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 25540 ;; Parameters:    Size  Location     Type
 25541 ;;		None
 25542 ;; Auto vars:     Size  Location     Type
 25543 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25544 ;; Return value:  Size  Location     Type
 25545 ;;                  1    wreg      void 
 25546 ;; Registers used:
 25547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25548 ;; Tracked objects:
 25549 ;;		On entry : 0/0
 25550 ;;		On exit  : 0/0
 25551 ;;		Unchanged: 0/0
 25552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25553 ;;      Params:         0       0       0       0       0       0       0       0       0
 25554 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25556 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25557 ;;Total ram usage:        1 bytes
 25558 ;; Hardware stack levels used:    1
 25559 ;; This function calls:
 25560 ;;		Nothing
 25561 ;; This function is called by:
 25562 ;;		_USBCtrlEPAllowDataStage
 25563 ;;		_USBCtrlTrfInHandler
 25564 ;; This function uses a non-reentrant model
 25565 ;;
 25566                           
 25567                           	psect	text114
 25568  002E9C                     __ptext114:
 25569                           	opt stack 0
 25570  002E9C                     _USBCtrlTrfTxService:
 25571                           	opt stack 14
 25572                           
 25573                           ;usb_device.c: 1439: uint8_t byteToSend;
 25574                           ;usb_device.c: 1443: byteToSend = 8;
 25575                           
 25576                           ;incstack = 0
 25577  002E9C  0E08               	movlw	8
 25578  002E9E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 25579                           
 25580                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 25581  002EA0  0100               	movlb	0	; () banked
 25582  002EA2  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25583  002EA4  E110               	bnz	i2l6639
 25584  002EA6  0E08               	movlw	8
 25585  002EA8  5D6C               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 25586  002EAA  B0D8               	btfsc	status,0,c
 25587  002EAC  D00C               	goto	i2l1635
 25588                           
 25589                           ; BSR set to: 0
 25590                           ;usb_device.c: 1445: {
 25591                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 25592  002EAE  C06C  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 25593                           
 25594                           ; BSR set to: 0
 25595                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 25596  002EB2  504C               	movf	_shortPacketStatus,w,c	;volatile
 25597  002EB4  A4D8               	btfss	status,2,c
 25598  002EB6  D002               	goto	i2l1633
 25599                           
 25600                           ; BSR set to: 0
 25601                           ;usb_device.c: 1454: {
 25602                           ;usb_device.c: 1455: shortPacketStatus = 1;
 25603  002EB8  0E01               	movlw	1
 25604  002EBA  D004               	goto	L30
 25605  002EBC                     i2l1633:
 25606                           
 25607                           ; BSR set to: 0
 25608                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 25609                           
 25610                           ; BSR set to: 0
 25611  002EBC  044C               	decf	_shortPacketStatus,w,c	;volatile
 25612  002EBE  A4D8               	btfss	status,2,c
 25613  002EC0  D002               	goto	i2l1635
 25614                           
 25615                           ; BSR set to: 0
 25616                           ;usb_device.c: 1458: {
 25617                           ;usb_device.c: 1459: shortPacketStatus = 2;
 25618  002EC2  0E02               	movlw	2
 25619  002EC4                     L30:
 25620  002EC4  6E4C               	movwf	_shortPacketStatus,c	;volatile
 25621  002EC6                     i2l1635:
 25622  002EC6                     i2l6639:
 25623                           
 25624                           ; BSR set to: 0
 25625                           ;usb_device.c: 1460: }
 25626                           ;usb_device.c: 1461: }
 25627                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 25628  002EC6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25629  002EC8  5F6C               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 25630  002ECA  0E00               	movlw	0
 25631  002ECC  5B6D               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 25635  002ECE  EE20 F001          	lfsr	2,1
 25636  002ED2  516E               	movf	_pBDTEntryIn& (0+255),w,b
 25637  002ED4  26D9               	addwf	fsr2l,f,c
 25638  002ED6  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25639  002ED8  22DA               	addwfc	fsr2h,f,c
 25640  002EDA  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25641                           
 25642                           ; BSR set to: 0
 25643                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 25644  002EDE  0E38               	movlw	56
 25645  002EE0  6E36               	movwf	_pDst,c
 25646  002EE2  0E04               	movlw	4
 25647  002EE4  6E37               	movwf	_pDst+1,c
 25648                           
 25649                           ; BSR set to: 0
 25650                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 25651  002EE6  A16B               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 25652  002EE8  D01C               	goto	i2l1637
 25653  002EEA  D03A               	goto	i2l1641
 25654  002EEC                     
 25655                           ; BSR set to: 0
 25656                           ;usb_device.c: 1478: {
 25657                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 25658                           
 25659                           ; BSR set to: 0
 25660  002EEC  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 25661  002EF0  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25662  002EF4  6AF8               	clrf	tblptru,c
 25663  002EF6  C036  FFD9         	movff	_pDst,fsr2l
 25664  002EFA  C037  FFDA         	movff	_pDst+1,fsr2h
 25665  002EFE  0E07               	movlw	(high __ramtop+-1)
 25666  002F00  64F7               	cpfsgt	tblptrh,c
 25667  002F02  D003               	bra	i2u453_47
 25668  002F04  0008               	tblrd		*
 25669  002F06  50F5               	movf	tablat,w,c
 25670  002F08  D005               	bra	i2u453_40
 25671  002F0A                     i2u453_47:
 25672  002F0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25673  002F0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25674  002F12  50EF               	movf	indf0,w,c
 25675  002F14                     i2u453_40:
 25676  002F14  6EDF               	movwf	indf2,c
 25677  002F16  0100               	movlb	0	; () banked
 25678  002F18  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 25679  002F1A  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25680                           
 25681                           ; BSR set to: 0
 25682  002F1C  4A36               	infsnz	_pDst,f,c
 25683  002F1E  2A37               	incf	_pDst+1,f,c
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;usb_device.c: 1480: byteToSend--;
 25687  002F20  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25688  002F22                     i2l1637:
 25689                           
 25690                           ; BSR set to: 0
 25691                           
 25692                           ; BSR set to: 0
 25693  002F22  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25694  002F24  B4D8               	btfsc	status,2,c
 25695  002F26  0012               	return	
 25696  002F28  D7E1               	goto	i2l1638
 25697  002F2A                     
 25698                           ; BSR set to: 0
 25699                           ;usb_device.c: 1486: {
 25700                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 25701                           
 25702                           ; BSR set to: 0
 25703  002F2A  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 25704  002F2E  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25705  002F32  6AF8               	clrf	tblptru,c
 25706  002F34  C036  FFD9         	movff	_pDst,fsr2l
 25707  002F38  C037  FFDA         	movff	_pDst+1,fsr2h
 25708  002F3C  0E07               	movlw	(high __ramtop+-1)
 25709  002F3E  64F7               	cpfsgt	tblptrh,c
 25710  002F40  D003               	bra	i2u455_47
 25711  002F42  0008               	tblrd		*
 25712  002F44  50F5               	movf	tablat,w,c
 25713  002F46  D005               	bra	i2u455_40
 25714  002F48                     i2u455_47:
 25715  002F48  CFF6 FFE9          	movff	tblptrl,fsr0l
 25716  002F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25717  002F50  50EF               	movf	indf0,w,c
 25718  002F52                     i2u455_40:
 25719  002F52  6EDF               	movwf	indf2,c
 25720  002F54  0100               	movlb	0	; () banked
 25721  002F56  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 25722  002F58  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 25723                           
 25724                           ; BSR set to: 0
 25725  002F5A  4A36               	infsnz	_pDst,f,c
 25726  002F5C  2A37               	incf	_pDst+1,f,c
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;usb_device.c: 1488: byteToSend--;
 25730  002F5E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25731  002F60                     i2l1641:
 25732                           
 25733                           ; BSR set to: 0
 25734                           
 25735                           ; BSR set to: 0
 25736  002F60  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25737  002F62  B4D8               	btfsc	status,2,c
 25738  002F64  0012               	return	
 25739  002F66  D7E1               	goto	i2l1642
 25740  002F68                     __end_of_USBCtrlTrfTxService:
 25741                           	opt stack 0
 25742                           tosu	equ	0xFFF
 25743                           tosh	equ	0xFFE
 25744                           tosl	equ	0xFFD
 25745                           pclatu	equ	0xFFB
 25746                           pclath	equ	0xFFA
 25747                           tblptru	equ	0xFF8
 25748                           tblptrh	equ	0xFF7
 25749                           tblptrl	equ	0xFF6
 25750                           tablat	equ	0xFF5
 25751                           prodh	equ	0xFF4
 25752                           prodl	equ	0xFF3
 25753                           intcon	equ	0xFF2
 25754                           indf0	equ	0xFEF
 25755                           postinc0	equ	0xFEE
 25756                           fsr0h	equ	0xFEA
 25757                           fsr0l	equ	0xFE9
 25758                           wreg	equ	0xFE8
 25759                           indf1	equ	0xFE7
 25760                           postdec1	equ	0xFE5
 25761                           fsr1h	equ	0xFE2
 25762                           fsr1l	equ	0xFE1
 25763                           indf2	equ	0xFDF
 25764                           postinc2	equ	0xFDE
 25765                           postdec2	equ	0xFDD
 25766                           plusw2	equ	0xFDB
 25767                           fsr2h	equ	0xFDA
 25768                           fsr2l	equ	0xFD9
 25769                           status	equ	0xFD8
 25770                           
 25771 ;; *************** function _USART_mySetLineCodingHandler *****************
 25772 ;; Defined at:
 25773 ;;		line 259 in file "../Includes/Board/USBapp.c"
 25774 ;; Parameters:    Size  Location     Type
 25775 ;;		None
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;  dwBaud          4   13[COMRAM] unsigned long 
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  1    wreg      void 
 25780 ;; Registers used:
 25781 ;;		wreg, status,2, status,0, cstack
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25787 ;;      Params:         0       0       0       0       0       0       0       0       0
 25788 ;;      Locals:         4       0       0       0       0       0       0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25790 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25791 ;;Total ram usage:        4 bytes
 25792 ;; Hardware stack levels used:    1
 25793 ;; Hardware stack levels required when called:    1
 25794 ;; This function calls:
 25795 ;;		___lldiv
 25796 ;;		i2_EUSART_Initialize
 25797 ;; This function is called by:
 25798 ;;		_USBCheckCDCRequest
 25799 ;;		_USBCtrlTrfRxService
 25800 ;;		_USBCtrlTrfInHandler
 25801 ;; This function uses a non-reentrant model
 25802 ;;
 25803                           
 25804                           	psect	text115
 25805  004176                     __ptext115:
 25806                           	opt stack 0
 25807  004176                     _USART_mySetLineCodingHandler:
 25808                           	opt stack 14
 25809                           
 25810                           ;USBapp.c: 262: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 25811                           
 25812                           ; BSR set to: 0
 25813                           ;incstack = 0
 25814  004176  C1D0  F0B4         	movff	_cdc_notice,_line_coding
 25815  00417A  C1D1  F0B5         	movff	_cdc_notice+1,_line_coding+1
 25816  00417E  C1D2  F0B6         	movff	_cdc_notice+2,_line_coding+2
 25817  004182  C1D3  F0B7         	movff	_cdc_notice+3,_line_coding+3
 25818                           
 25819                           ;USBapp.c: 264: uint32_t dwBaud;
 25820                           ;USBapp.c: 265: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 25821  004186  0E00               	movlw	0
 25822  004188  6E01               	movwf	___lldiv@dividend,c
 25823  00418A  0E1B               	movlw	27
 25824  00418C  6E02               	movwf	___lldiv@dividend+1,c
 25825  00418E  0EB7               	movlw	183
 25826  004190  6E03               	movwf	___lldiv@dividend+2,c
 25827  004192  0E00               	movlw	0
 25828  004194  6E04               	movwf	___lldiv@dividend+3,c
 25829  004196  C0B4  F005         	movff	_line_coding,___lldiv@divisor
 25830  00419A  C0B5  F006         	movff	_line_coding+1,___lldiv@divisor+1
 25831  00419E  C0B6  F007         	movff	_line_coding+2,___lldiv@divisor+2
 25832  0041A2  C0B7  F008         	movff	_line_coding+3,___lldiv@divisor+3
 25833  0041A6  EC7C  F01E         	call	___lldiv	;wreg free
 25834  0041AA  0EFF               	movlw	255
 25835  0041AC  2401               	addwf	?___lldiv,w,c
 25836  0041AE  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 25837  0041B0  0EFF               	movlw	255
 25838  0041B2  2002               	addwfc	?___lldiv+1,w,c
 25839  0041B4  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 25840  0041B6  0EFF               	movlw	255
 25841  0041B8  2003               	addwfc	?___lldiv+2,w,c
 25842  0041BA  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 25843  0041BC  0EFF               	movlw	255
 25844  0041BE  2004               	addwfc	?___lldiv+3,w,c
 25845  0041C0  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 25846                           
 25847                           ;USBapp.c: 266: SPBRG = (uint8_t) dwBaud;
 25848  0041C2  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 25849                           
 25850                           ;USBapp.c: 267: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 25851  0041C6  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 25852                           
 25853                           ;USBapp.c: 269: EUSART_Initialize();
 25854  0041CA  ECDD  F022         	call	i2_EUSART_Initialize	;wreg free
 25855  0041CE  0012               	return		;funcret
 25856  0041D0                     __end_of_USART_mySetLineCodingHandler:
 25857                           	opt stack 0
 25858                           tosu	equ	0xFFF
 25859                           tosh	equ	0xFFE
 25860                           tosl	equ	0xFFD
 25861                           pclatu	equ	0xFFB
 25862                           pclath	equ	0xFFA
 25863                           tblptru	equ	0xFF8
 25864                           tblptrh	equ	0xFF7
 25865                           tblptrl	equ	0xFF6
 25866                           tablat	equ	0xFF5
 25867                           prodh	equ	0xFF4
 25868                           prodl	equ	0xFF3
 25869                           intcon	equ	0xFF2
 25870                           indf0	equ	0xFEF
 25871                           postinc0	equ	0xFEE
 25872                           fsr0h	equ	0xFEA
 25873                           fsr0l	equ	0xFE9
 25874                           wreg	equ	0xFE8
 25875                           indf1	equ	0xFE7
 25876                           postdec1	equ	0xFE5
 25877                           fsr1h	equ	0xFE2
 25878                           fsr1l	equ	0xFE1
 25879                           indf2	equ	0xFDF
 25880                           postinc2	equ	0xFDE
 25881                           postdec2	equ	0xFDD
 25882                           plusw2	equ	0xFDB
 25883                           fsr2h	equ	0xFDA
 25884                           fsr2l	equ	0xFD9
 25885                           status	equ	0xFD8
 25886                           
 25887 ;; *************** function i2_EUSART_Initialize *****************
 25888 ;; Defined at:
 25889 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 25890 ;; Parameters:    Size  Location     Type
 25891 ;;		None
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;		None
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  1    wreg      void 
 25896 ;; Registers used:
 25897 ;;		wreg, status,2
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/0
 25900 ;;		On exit  : 0/0
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25903 ;;      Params:         0       0       0       0       0       0       0       0       0
 25904 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25906 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25907 ;;Total ram usage:        0 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; This function calls:
 25910 ;;		Nothing
 25911 ;; This function is called by:
 25912 ;;		_USBapp_CdcEmulatorInitialize
 25913 ;;		_USART_mySetLineCodingHandler
 25914 ;; This function uses a non-reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text116
 25918  0045BA                     __ptext116:
 25919                           	opt stack 0
 25920  0045BA                     i2_EUSART_Initialize:
 25921                           	opt stack 16
 25922                           
 25923                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 25924                           
 25925                           ;incstack = 0
 25926  0045BA  9A9D               	bcf	3997,5,c	;volatile
 25927                           
 25928                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 25929  0045BC  989D               	bcf	3997,4,c	;volatile
 25930                           
 25931                           ;eusart.c: 85: BAUDCON = 0x48;
 25932  0045BE  0E48               	movlw	72
 25933  0045C0  6EB8               	movwf	4024,c	;volatile
 25934                           
 25935                           ;eusart.c: 88: RCSTA = 0x90;
 25936  0045C2  0E90               	movlw	144
 25937  0045C4  6EAB               	movwf	4011,c	;volatile
 25938                           
 25939                           ;eusart.c: 91: TXSTA = 0x26;
 25940  0045C6  0E26               	movlw	38
 25941  0045C8  6EAC               	movwf	4012,c	;volatile
 25942                           
 25943                           ;eusart.c: 94: SPBRG = 0xD0;
 25944  0045CA  0ED0               	movlw	208
 25945  0045CC  6EAF               	movwf	4015,c	;volatile
 25946                           
 25947                           ;eusart.c: 99: SPBRGH = 0x00;
 25948  0045CE  0E00               	movlw	0
 25949  0045D0  6EB0               	movwf	4016,c	;volatile
 25950                           
 25951                           ;eusart.c: 103: eusartTxHead = 0;
 25952  0045D2  0E00               	movlw	0
 25953  0045D4  0100               	movlb	0	; () banked
 25954  0045D6  6F9F               	movwf	_eusartTxHead& (0+255),b
 25955                           
 25956                           ;eusart.c: 104: eusartTxTail = 0;
 25957  0045D8  0E00               	movlw	0
 25958  0045DA  6F9E               	movwf	_eusartTxTail& (0+255),b
 25959                           
 25960                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 25961  0045DC  0E40               	movlw	64
 25962  0045DE  6F9D               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 25963                           
 25964                           ;eusart.c: 107: eusartRxHead = 0;
 25965  0045E0  0E00               	movlw	0
 25966  0045E2  6F9C               	movwf	_eusartRxHead& (0+255),b
 25967                           
 25968                           ;eusart.c: 108: eusartRxTail = 0;
 25969  0045E4  0E00               	movlw	0
 25970  0045E6  6F9B               	movwf	_eusartRxTail& (0+255),b
 25971                           
 25972                           ;eusart.c: 109: eusartRxCount = 0;
 25973  0045E8  0E00               	movlw	0
 25974  0045EA  6FB0               	movwf	_eusartRxCount& (0+255),b	;volatile
 25975                           
 25976                           ; BSR set to: 0
 25977                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 25978  0045EC  8A9D               	bsf	3997,5,c	;volatile
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 25982  0045EE  88AB               	bsf	4011,4,c	;volatile
 25983                           
 25984                           ; BSR set to: 0
 25985  0045F0  0012               	return		;funcret
 25986  0045F2                     __end_ofi2_EUSART_Initialize:
 25987                           	opt stack 0
 25988                           tosu	equ	0xFFF
 25989                           tosh	equ	0xFFE
 25990                           tosl	equ	0xFFD
 25991                           pclatu	equ	0xFFB
 25992                           pclath	equ	0xFFA
 25993                           tblptru	equ	0xFF8
 25994                           tblptrh	equ	0xFF7
 25995                           tblptrl	equ	0xFF6
 25996                           tablat	equ	0xFF5
 25997                           prodh	equ	0xFF4
 25998                           prodl	equ	0xFF3
 25999                           intcon	equ	0xFF2
 26000                           indf0	equ	0xFEF
 26001                           postinc0	equ	0xFEE
 26002                           fsr0h	equ	0xFEA
 26003                           fsr0l	equ	0xFE9
 26004                           wreg	equ	0xFE8
 26005                           indf1	equ	0xFE7
 26006                           postdec1	equ	0xFE5
 26007                           fsr1h	equ	0xFE2
 26008                           fsr1l	equ	0xFE1
 26009                           indf2	equ	0xFDF
 26010                           postinc2	equ	0xFDE
 26011                           postdec2	equ	0xFDD
 26012                           plusw2	equ	0xFDB
 26013                           fsr2h	equ	0xFDA
 26014                           fsr2l	equ	0xFD9
 26015                           status	equ	0xFD8
 26016                           
 26017 ;; *************** function ___lldiv *****************
 26018 ;; Defined at:
 26019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 26020 ;; Parameters:    Size  Location     Type
 26021 ;;  dividend        4    0[COMRAM] unsigned long 
 26022 ;;  divisor         4    4[COMRAM] unsigned long 
 26023 ;; Auto vars:     Size  Location     Type
 26024 ;;  quotient        4    8[COMRAM] unsigned long 
 26025 ;;  counter         1   12[COMRAM] unsigned char 
 26026 ;; Return value:  Size  Location     Type
 26027 ;;                  4    0[COMRAM] unsigned long 
 26028 ;; Registers used:
 26029 ;;		wreg, status,2, status,0
 26030 ;; Tracked objects:
 26031 ;;		On entry : 0/0
 26032 ;;		On exit  : 0/0
 26033 ;;		Unchanged: 0/0
 26034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26035 ;;      Params:         8       0       0       0       0       0       0       0       0
 26036 ;;      Locals:         5       0       0       0       0       0       0       0       0
 26037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26038 ;;      Totals:        13       0       0       0       0       0       0       0       0
 26039 ;;Total ram usage:       13 bytes
 26040 ;; Hardware stack levels used:    1
 26041 ;; This function calls:
 26042 ;;		Nothing
 26043 ;; This function is called by:
 26044 ;;		_USART_mySetLineCodingHandler
 26045 ;; This function uses a non-reentrant model
 26046 ;;
 26047                           
 26048                           	psect	text117
 26049  003CF8                     __ptext117:
 26050                           	opt stack 0
 26051  003CF8                     ___lldiv:
 26052                           	opt stack 14
 26053                           
 26054                           ; BSR set to: 0
 26055                           ;incstack = 0
 26056  003CF8  0E00               	movlw	0
 26057  003CFA  6E09               	movwf	___lldiv@quotient,c
 26058  003CFC  0E00               	movlw	0
 26059  003CFE  6E0A               	movwf	___lldiv@quotient+1,c
 26060  003D00  0E00               	movlw	0
 26061  003D02  6E0B               	movwf	___lldiv@quotient+2,c
 26062  003D04  0E00               	movlw	0
 26063  003D06  6E0C               	movwf	___lldiv@quotient+3,c
 26064  003D08  5005               	movf	___lldiv@divisor,w,c
 26065  003D0A  1006               	iorwf	___lldiv@divisor+1,w,c
 26066  003D0C  1007               	iorwf	___lldiv@divisor+2,w,c
 26067  003D0E  1008               	iorwf	___lldiv@divisor+3,w,c
 26068  003D10  B4D8               	btfsc	status,2,c
 26069  003D12  D02A               	goto	i2l2280
 26070  003D14  0E01               	movlw	1
 26071  003D16  6E0D               	movwf	___lldiv@counter,c
 26072  003D18  D006               	goto	i2l2275
 26073  003D1A  90D8               	bcf	status,0,c
 26074  003D1C  3605               	rlcf	___lldiv@divisor,f,c
 26075  003D1E  3606               	rlcf	___lldiv@divisor+1,f,c
 26076  003D20  3607               	rlcf	___lldiv@divisor+2,f,c
 26077  003D22  3608               	rlcf	___lldiv@divisor+3,f,c
 26078  003D24  2A0D               	incf	___lldiv@counter,f,c
 26079  003D26                     i2l2275:
 26080  003D26  AE08               	btfss	___lldiv@divisor+3,7,c
 26081  003D28  D7F8               	goto	i2l2276
 26082  003D2A                     i2u458_40:
 26083  003D2A  90D8               	bcf	status,0,c
 26084  003D2C  3609               	rlcf	___lldiv@quotient,f,c
 26085  003D2E  360A               	rlcf	___lldiv@quotient+1,f,c
 26086  003D30  360B               	rlcf	___lldiv@quotient+2,f,c
 26087  003D32  360C               	rlcf	___lldiv@quotient+3,f,c
 26088  003D34  5005               	movf	___lldiv@divisor,w,c
 26089  003D36  5C01               	subwf	___lldiv@dividend,w,c
 26090  003D38  5006               	movf	___lldiv@divisor+1,w,c
 26091  003D3A  5802               	subwfb	___lldiv@dividend+1,w,c
 26092  003D3C  5007               	movf	___lldiv@divisor+2,w,c
 26093  003D3E  5803               	subwfb	___lldiv@dividend+2,w,c
 26094  003D40  5008               	movf	___lldiv@divisor+3,w,c
 26095  003D42  5804               	subwfb	___lldiv@dividend+3,w,c
 26096  003D44  A0D8               	btfss	status,0,c
 26097  003D46  D009               	goto	i2l2279
 26098  003D48  5005               	movf	___lldiv@divisor,w,c
 26099  003D4A  5E01               	subwf	___lldiv@dividend,f,c
 26100  003D4C  5006               	movf	___lldiv@divisor+1,w,c
 26101  003D4E  5A02               	subwfb	___lldiv@dividend+1,f,c
 26102  003D50  5007               	movf	___lldiv@divisor+2,w,c
 26103  003D52  5A03               	subwfb	___lldiv@dividend+2,f,c
 26104  003D54  5008               	movf	___lldiv@divisor+3,w,c
 26105  003D56  5A04               	subwfb	___lldiv@dividend+3,f,c
 26106  003D58  8009               	bsf	___lldiv@quotient,0,c
 26107  003D5A                     i2l2279:
 26108  003D5A  90D8               	bcf	status,0,c
 26109  003D5C  3208               	rrcf	___lldiv@divisor+3,f,c
 26110  003D5E  3207               	rrcf	___lldiv@divisor+2,f,c
 26111  003D60  3206               	rrcf	___lldiv@divisor+1,f,c
 26112  003D62  3205               	rrcf	___lldiv@divisor,f,c
 26113  003D64  2E0D               	decfsz	___lldiv@counter,f,c
 26114  003D66  D7E1               	goto	i2u458_40
 26115  003D68                     i2l2280:
 26116  003D68  C009  F001         	movff	___lldiv@quotient,?___lldiv
 26117  003D6C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 26118  003D70  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 26119  003D74  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 26120  003D78  0012               	return		;funcret
 26121  003D7A                     __end_of___lldiv:
 26122                           	opt stack 0
 26123                           tosu	equ	0xFFF
 26124                           tosh	equ	0xFFE
 26125                           tosl	equ	0xFFD
 26126                           pclatu	equ	0xFFB
 26127                           pclath	equ	0xFFA
 26128                           tblptru	equ	0xFF8
 26129                           tblptrh	equ	0xFF7
 26130                           tblptrl	equ	0xFF6
 26131                           tablat	equ	0xFF5
 26132                           prodh	equ	0xFF4
 26133                           prodl	equ	0xFF3
 26134                           intcon	equ	0xFF2
 26135                           indf0	equ	0xFEF
 26136                           postinc0	equ	0xFEE
 26137                           fsr0h	equ	0xFEA
 26138                           fsr0l	equ	0xFE9
 26139                           wreg	equ	0xFE8
 26140                           indf1	equ	0xFE7
 26141                           postdec1	equ	0xFE5
 26142                           fsr1h	equ	0xFE2
 26143                           fsr1l	equ	0xFE1
 26144                           indf2	equ	0xFDF
 26145                           postinc2	equ	0xFDE
 26146                           postdec2	equ	0xFDD
 26147                           plusw2	equ	0xFDB
 26148                           fsr2h	equ	0xFDA
 26149                           fsr2l	equ	0xFD9
 26150                           status	equ	0xFD8
 26151                           
 26152 ;; *************** function _TMRapp_Tick *****************
 26153 ;; Defined at:
 26154 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 26155 ;; Parameters:    Size  Location     Type
 26156 ;;		None
 26157 ;; Auto vars:     Size  Location     Type
 26158 ;;		None
 26159 ;; Return value:  Size  Location     Type
 26160 ;;                  1    wreg      void 
 26161 ;; Registers used:
 26162 ;;		None
 26163 ;; Tracked objects:
 26164 ;;		On entry : 0/0
 26165 ;;		On exit  : 0/0
 26166 ;;		Unchanged: 0/0
 26167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26168 ;;      Params:         0       0       0       0       0       0       0       0       0
 26169 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26171 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26172 ;;Total ram usage:        0 bytes
 26173 ;; Hardware stack levels used:    1
 26174 ;; This function calls:
 26175 ;;		Nothing
 26176 ;; This function is called by:
 26177 ;;		_INTERRUPT_InterruptManager
 26178 ;; This function uses a non-reentrant model
 26179 ;;
 26180                           
 26181                           	psect	text118
 26182  004AB2                     __ptext118:
 26183                           	opt stack 0
 26184  004AB2                     _TMRapp_Tick:
 26185                           	opt stack 19
 26186                           
 26187                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 26188                           
 26189                           ;incstack = 0
 26190  004AB2  0100               	movlb	0	; () banked
 26191  004AB4  81B3               	bsf	_appTimer& (0+255),0,b
 26192                           
 26193                           ; BSR set to: 0
 26194  004AB6  0012               	return		;funcret
 26195  004AB8                     __end_of_TMRapp_Tick:
 26196                           	opt stack 0
 26197                           tosu	equ	0xFFF
 26198                           tosh	equ	0xFFE
 26199                           tosl	equ	0xFFD
 26200                           pclatu	equ	0xFFB
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           indf0	equ	0xFEF
 26210                           postinc0	equ	0xFEE
 26211                           fsr0h	equ	0xFEA
 26212                           fsr0l	equ	0xFE9
 26213                           wreg	equ	0xFE8
 26214                           indf1	equ	0xFE7
 26215                           postdec1	equ	0xFE5
 26216                           fsr1h	equ	0xFE2
 26217                           fsr1l	equ	0xFE1
 26218                           indf2	equ	0xFDF
 26219                           postinc2	equ	0xFDE
 26220                           postdec2	equ	0xFDD
 26221                           plusw2	equ	0xFDB
 26222                           fsr2h	equ	0xFDA
 26223                           fsr2l	equ	0xFD9
 26224                           status	equ	0xFD8
 26225                           
 26226 ;; *************** function _TMR1_ISR *****************
 26227 ;; Defined at:
 26228 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 26229 ;; Parameters:    Size  Location     Type
 26230 ;;		None
 26231 ;; Auto vars:     Size  Location     Type
 26232 ;;		None
 26233 ;; Return value:  Size  Location     Type
 26234 ;;                  1    wreg      void 
 26235 ;; Registers used:
 26236 ;;		wreg, status,2
 26237 ;; Tracked objects:
 26238 ;;		On entry : 0/0
 26239 ;;		On exit  : 0/0
 26240 ;;		Unchanged: 0/0
 26241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26242 ;;      Params:         0       0       0       0       0       0       0       0       0
 26243 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26245 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26246 ;;Total ram usage:        0 bytes
 26247 ;; Hardware stack levels used:    1
 26248 ;; This function calls:
 26249 ;;		Nothing
 26250 ;; This function is called by:
 26251 ;;		_INTERRUPT_InterruptManager
 26252 ;; This function uses a non-reentrant model
 26253 ;;
 26254                           
 26255                           	psect	text119
 26256  004A52                     __ptext119:
 26257                           	opt stack 0
 26258  004A52                     _TMR1_ISR:
 26259                           	opt stack 19
 26260                           
 26261                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 26262                           
 26263                           ; BSR set to: 0
 26264                           ;incstack = 0
 26265  004A52  909E               	bcf	3998,0,c	;volatile
 26266                           
 26267                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 26268  004A54  503D               	movf	_timer1ReloadVal+1,w,c	;volatile
 26269  004A56  6ECF               	movwf	4047,c	;volatile
 26270                           
 26271                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 26272  004A58  C03C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 26273  004A5C  0012               	return		;funcret
 26274  004A5E                     __end_of_TMR1_ISR:
 26275                           	opt stack 0
 26276                           tosu	equ	0xFFF
 26277                           tosh	equ	0xFFE
 26278                           tosl	equ	0xFFD
 26279                           pclatu	equ	0xFFB
 26280                           pclath	equ	0xFFA
 26281                           tblptru	equ	0xFF8
 26282                           tblptrh	equ	0xFF7
 26283                           tblptrl	equ	0xFF6
 26284                           tablat	equ	0xFF5
 26285                           prodh	equ	0xFF4
 26286                           prodl	equ	0xFF3
 26287                           intcon	equ	0xFF2
 26288                           indf0	equ	0xFEF
 26289                           postinc0	equ	0xFEE
 26290                           fsr0h	equ	0xFEA
 26291                           fsr0l	equ	0xFE9
 26292                           wreg	equ	0xFE8
 26293                           indf1	equ	0xFE7
 26294                           postdec1	equ	0xFE5
 26295                           fsr1h	equ	0xFE2
 26296                           fsr1l	equ	0xFE1
 26297                           indf2	equ	0xFDF
 26298                           postinc2	equ	0xFDE
 26299                           postdec2	equ	0xFDD
 26300                           plusw2	equ	0xFDB
 26301                           fsr2h	equ	0xFDA
 26302                           fsr2l	equ	0xFD9
 26303                           status	equ	0xFD8
 26304                           
 26305 ;; *************** function _EUSART_Transmit_ISR *****************
 26306 ;; Defined at:
 26307 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 26308 ;; Parameters:    Size  Location     Type
 26309 ;;		None
 26310 ;; Auto vars:     Size  Location     Type
 26311 ;;		None
 26312 ;; Return value:  Size  Location     Type
 26313 ;;                  1    wreg      void 
 26314 ;; Registers used:
 26315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26316 ;; Tracked objects:
 26317 ;;		On entry : 0/0
 26318 ;;		On exit  : 0/0
 26319 ;;		Unchanged: 0/0
 26320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26321 ;;      Params:         0       0       0       0       0       0       0       0       0
 26322 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26323 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26324 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26325 ;;Total ram usage:        0 bytes
 26326 ;; Hardware stack levels used:    1
 26327 ;; This function calls:
 26328 ;;		Nothing
 26329 ;; This function is called by:
 26330 ;;		_INTERRUPT_InterruptManager
 26331 ;; This function uses a non-reentrant model
 26332 ;;
 26333                           
 26334                           	psect	text120
 26335  0046EA                     __ptext120:
 26336                           	opt stack 0
 26337  0046EA                     _EUSART_Transmit_ISR:
 26338                           	opt stack 19
 26339                           
 26340                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 26341                           
 26342                           ;incstack = 0
 26343  0046EA  0E40               	movlw	64
 26344  0046EC  0100               	movlb	0	; () banked
 26345  0046EE  619D               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 26346  0046F0  D012               	goto	i2l1031
 26347                           
 26348                           ; BSR set to: 0
 26349                           ;eusart.c: 167: {
 26350                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 26351  0046F2  519E               	movf	_eusartTxTail& (0+255),w,b
 26352  0046F4  0D01               	mullw	1
 26353  0046F6  0E40               	movlw	low _eusartTxBuffer
 26354  0046F8  24F3               	addwf	prodl,w,c
 26355  0046FA  6ED9               	movwf	fsr2l,c
 26356  0046FC  0E02               	movlw	high _eusartTxBuffer
 26357  0046FE  20F4               	addwfc	prodh,w,c
 26358  004700  6EDA               	movwf	fsr2h,c
 26359  004702  50DF               	movf	indf2,w,c
 26360  004704  6EAD               	movwf	4013,c	;volatile
 26361                           
 26362                           ; BSR set to: 0
 26363  004706  2B9E               	incf	_eusartTxTail& (0+255),f,b
 26364                           
 26365                           ; BSR set to: 0
 26366                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 26367  004708  0E3F               	movlw	63
 26368  00470A  659E               	cpfsgt	_eusartTxTail& (0+255),b
 26369  00470C  D002               	goto	i2l1032
 26370                           
 26371                           ; BSR set to: 0
 26372                           ;eusart.c: 170: {
 26373                           ;eusart.c: 171: eusartTxTail = 0;
 26374  00470E  0E00               	movlw	0
 26375  004710  6F9E               	movwf	_eusartTxTail& (0+255),b
 26376  004712                     i2l1032:
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;eusart.c: 172: }
 26380                           ;eusart.c: 173: eusartTxBufferRemaining++;
 26381                           
 26382                           ; BSR set to: 0
 26383  004712  2B9D               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 26384                           
 26385                           ;eusart.c: 174: }
 26386  004714  0012               	return	
 26387  004716                     i2l1031:
 26388                           
 26389                           ; BSR set to: 0
 26390                           ;eusart.c: 175: else
 26391                           ;eusart.c: 176: {
 26392                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 26393  004716  989D               	bcf	3997,4,c	;volatile
 26394  004718  0012               	return	
 26395  00471A                     __end_of_EUSART_Transmit_ISR:
 26396                           	opt stack 0
 26397                           tosu	equ	0xFFF
 26398                           tosh	equ	0xFFE
 26399                           tosl	equ	0xFFD
 26400                           pclatu	equ	0xFFB
 26401                           pclath	equ	0xFFA
 26402                           tblptru	equ	0xFF8
 26403                           tblptrh	equ	0xFF7
 26404                           tblptrl	equ	0xFF6
 26405                           tablat	equ	0xFF5
 26406                           prodh	equ	0xFF4
 26407                           prodl	equ	0xFF3
 26408                           intcon	equ	0xFF2
 26409                           indf0	equ	0xFEF
 26410                           postinc0	equ	0xFEE
 26411                           fsr0h	equ	0xFEA
 26412                           fsr0l	equ	0xFE9
 26413                           wreg	equ	0xFE8
 26414                           indf1	equ	0xFE7
 26415                           postdec1	equ	0xFE5
 26416                           fsr1h	equ	0xFE2
 26417                           fsr1l	equ	0xFE1
 26418                           indf2	equ	0xFDF
 26419                           postinc2	equ	0xFDE
 26420                           postdec2	equ	0xFDD
 26421                           plusw2	equ	0xFDB
 26422                           fsr2h	equ	0xFDA
 26423                           fsr2l	equ	0xFD9
 26424                           status	equ	0xFD8
 26425                           
 26426 ;; *************** function _EUSART_Receive_ISR *****************
 26427 ;; Defined at:
 26428 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 26429 ;; Parameters:    Size  Location     Type
 26430 ;;		None
 26431 ;; Auto vars:     Size  Location     Type
 26432 ;;		None
 26433 ;; Return value:  Size  Location     Type
 26434 ;;                  1    wreg      void 
 26435 ;; Registers used:
 26436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26437 ;; Tracked objects:
 26438 ;;		On entry : 0/0
 26439 ;;		On exit  : 0/0
 26440 ;;		Unchanged: 0/0
 26441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26442 ;;      Params:         0       0       0       0       0       0       0       0       0
 26443 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26444 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26445 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26446 ;;Total ram usage:        0 bytes
 26447 ;; Hardware stack levels used:    1
 26448 ;; This function calls:
 26449 ;;		Nothing
 26450 ;; This function is called by:
 26451 ;;		_INTERRUPT_InterruptManager
 26452 ;; This function uses a non-reentrant model
 26453 ;;
 26454                           
 26455                           	psect	text121
 26456  00471A                     __ptext121:
 26457                           	opt stack 0
 26458  00471A                     _EUSART_Receive_ISR:
 26459                           	opt stack 19
 26460                           
 26461                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 26462                           
 26463                           ; BSR set to: 0
 26464                           ;incstack = 0
 26465  00471A  A2AB               	btfss	4011,1,c	;volatile
 26466  00471C  D003               	goto	i2l1037
 26467                           
 26468                           ;eusart.c: 184: {
 26469                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 26470  00471E  98AB               	bcf	4011,4,c	;volatile
 26471                           
 26472                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 26473  004720  88AB               	bsf	4011,4,c	;volatile
 26474                           
 26475                           ;eusart.c: 189: }
 26476  004722  0012               	return	
 26477  004724                     i2l1037:
 26478                           
 26479                           ;eusart.c: 190: else
 26480                           ;eusart.c: 191: {
 26481                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 26482  004724  0100               	movlb	0	; () banked
 26483  004726  519C               	movf	_eusartRxHead& (0+255),w,b
 26484  004728  0D01               	mullw	1
 26485  00472A  0E00               	movlw	low _eusartRxBuffer
 26486  00472C  24F3               	addwf	prodl,w,c
 26487  00472E  6ED9               	movwf	fsr2l,c
 26488  004730  0E02               	movlw	high _eusartRxBuffer
 26489  004732  20F4               	addwfc	prodh,w,c
 26490  004734  6EDA               	movwf	fsr2h,c
 26491  004736  CFAE FFDF          	movff	4014,indf2	;volatile
 26492                           
 26493                           ; BSR set to: 0
 26494  00473A  2B9C               	incf	_eusartRxHead& (0+255),f,b
 26495                           
 26496                           ; BSR set to: 0
 26497                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 26498  00473C  0E3F               	movlw	63
 26499  00473E  659C               	cpfsgt	_eusartRxHead& (0+255),b
 26500  004740  D002               	goto	i2l1039
 26501                           
 26502                           ; BSR set to: 0
 26503                           ;eusart.c: 195: {
 26504                           ;eusart.c: 196: eusartRxHead = 0;
 26505  004742  0E00               	movlw	0
 26506  004744  6F9C               	movwf	_eusartRxHead& (0+255),b
 26507  004746                     i2l1039:
 26508                           
 26509                           ; BSR set to: 0
 26510                           ;eusart.c: 197: }
 26511                           ;eusart.c: 198: eusartRxCount++;
 26512                           
 26513                           ; BSR set to: 0
 26514  004746  2BB0               	incf	_eusartRxCount& (0+255),f,b	;volatile
 26515  004748  0012               	return	
 26516  00474A                     __end_of_EUSART_Receive_ISR:
 26517                           	opt stack 0
 26518                           tosu	equ	0xFFF
 26519                           tosh	equ	0xFFE
 26520                           tosl	equ	0xFFD
 26521                           pclatu	equ	0xFFB
 26522                           pclath	equ	0xFFA
 26523                           tblptru	equ	0xFF8
 26524                           tblptrh	equ	0xFF7
 26525                           tblptrl	equ	0xFF6
 26526                           tablat	equ	0xFF5
 26527                           prodh	equ	0xFF4
 26528                           prodl	equ	0xFF3
 26529                           intcon	equ	0xFF2
 26530                           indf0	equ	0xFEF
 26531                           postinc0	equ	0xFEE
 26532                           fsr0h	equ	0xFEA
 26533                           fsr0l	equ	0xFE9
 26534                           wreg	equ	0xFE8
 26535                           indf1	equ	0xFE7
 26536                           postdec1	equ	0xFE5
 26537                           fsr1h	equ	0xFE2
 26538                           fsr1l	equ	0xFE1
 26539                           indf2	equ	0xFDF
 26540                           postinc2	equ	0xFDE
 26541                           postdec2	equ	0xFDD
 26542                           plusw2	equ	0xFDB
 26543                           fsr2h	equ	0xFDA
 26544                           fsr2l	equ	0xFD9
 26545                           status	equ	0xFD8
 26546                           
 26547 ;; *************** function _CMP1_ISR *****************
 26548 ;; Defined at:
 26549 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 26550 ;; Parameters:    Size  Location     Type
 26551 ;;		None
 26552 ;; Auto vars:     Size  Location     Type
 26553 ;;		None
 26554 ;; Return value:  Size  Location     Type
 26555 ;;                  1    wreg      void 
 26556 ;; Registers used:
 26557 ;;		None
 26558 ;; Tracked objects:
 26559 ;;		On entry : 0/0
 26560 ;;		On exit  : 0/0
 26561 ;;		Unchanged: 0/0
 26562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26563 ;;      Params:         0       0       0       0       0       0       0       0       0
 26564 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26565 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26566 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26567 ;;Total ram usage:        0 bytes
 26568 ;; Hardware stack levels used:    1
 26569 ;; This function calls:
 26570 ;;		Nothing
 26571 ;; This function is called by:
 26572 ;;		_INTERRUPT_InterruptManager
 26573 ;; This function uses a non-reentrant model
 26574 ;;
 26575                           
 26576                           	psect	text122
 26577  004AC0                     __ptext122:
 26578                           	opt stack 0
 26579  004AC0                     _CMP1_ISR:
 26580                           	opt stack 19
 26581                           
 26582                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 26583                           
 26584                           ;incstack = 0
 26585  004AC0  9CA1               	bcf	4001,6,c	;volatile
 26586  004AC2  0012               	return		;funcret
 26587  004AC4                     __end_of_CMP1_ISR:
 26588                           	opt stack 0
 26589                           tosu	equ	0xFFF
 26590                           tosh	equ	0xFFE
 26591                           tosl	equ	0xFFD
 26592                           pclatu	equ	0xFFB
 26593                           pclath	equ	0xFFA
 26594                           tblptru	equ	0xFF8
 26595                           tblptrh	equ	0xFF7
 26596                           tblptrl	equ	0xFF6
 26597                           tablat	equ	0xFF5
 26598                           prodh	equ	0xFF4
 26599                           prodl	equ	0xFF3
 26600                           intcon	equ	0xFF2
 26601                           indf0	equ	0xFEF
 26602                           postinc0	equ	0xFEE
 26603                           fsr0h	equ	0xFEA
 26604                           fsr0l	equ	0xFE9
 26605                           wreg	equ	0xFE8
 26606                           indf1	equ	0xFE7
 26607                           postdec1	equ	0xFE5
 26608                           fsr1h	equ	0xFE2
 26609                           fsr1l	equ	0xFE1
 26610                           indf2	equ	0xFDF
 26611                           postinc2	equ	0xFDE
 26612                           postdec2	equ	0xFDD
 26613                           plusw2	equ	0xFDB
 26614                           fsr2h	equ	0xFDA
 26615                           fsr2l	equ	0xFD9
 26616                           status	equ	0xFD8
 26617                           tosu	equ	0xFFF
 26618                           tosh	equ	0xFFE
 26619                           tosl	equ	0xFFD
 26620                           pclatu	equ	0xFFB
 26621                           pclath	equ	0xFFA
 26622                           tblptru	equ	0xFF8
 26623                           tblptrh	equ	0xFF7
 26624                           tblptrl	equ	0xFF6
 26625                           tablat	equ	0xFF5
 26626                           prodh	equ	0xFF4
 26627                           prodl	equ	0xFF3
 26628                           intcon	equ	0xFF2
 26629                           indf0	equ	0xFEF
 26630                           postinc0	equ	0xFEE
 26631                           fsr0h	equ	0xFEA
 26632                           fsr0l	equ	0xFE9
 26633                           wreg	equ	0xFE8
 26634                           indf1	equ	0xFE7
 26635                           postdec1	equ	0xFE5
 26636                           fsr1h	equ	0xFE2
 26637                           fsr1l	equ	0xFE1
 26638                           indf2	equ	0xFDF
 26639                           postinc2	equ	0xFDE
 26640                           postdec2	equ	0xFDD
 26641                           plusw2	equ	0xFDB
 26642                           fsr2h	equ	0xFDA
 26643                           fsr2l	equ	0xFD9
 26644                           status	equ	0xFD8
 26645                           
 26646                           	psect	text123
 26647  000000                     __ptext123:
 26648                           	opt stack 0
 26649                           tosu	equ	0xFFF
 26650                           tosh	equ	0xFFE
 26651                           tosl	equ	0xFFD
 26652                           pclatu	equ	0xFFB
 26653                           pclath	equ	0xFFA
 26654                           tblptru	equ	0xFF8
 26655                           tblptrh	equ	0xFF7
 26656                           tblptrl	equ	0xFF6
 26657                           tablat	equ	0xFF5
 26658                           prodh	equ	0xFF4
 26659                           prodl	equ	0xFF3
 26660                           intcon	equ	0xFF2
 26661                           indf0	equ	0xFEF
 26662                           postinc0	equ	0xFEE
 26663                           fsr0h	equ	0xFEA
 26664                           fsr0l	equ	0xFE9
 26665                           wreg	equ	0xFE8
 26666                           indf1	equ	0xFE7
 26667                           postdec1	equ	0xFE5
 26668                           fsr1h	equ	0xFE2
 26669                           fsr1l	equ	0xFE1
 26670                           indf2	equ	0xFDF
 26671                           postinc2	equ	0xFDE
 26672                           postdec2	equ	0xFDD
 26673                           plusw2	equ	0xFDB
 26674                           fsr2h	equ	0xFDA
 26675                           fsr2l	equ	0xFD9
 26676                           status	equ	0xFD8
 26677                           
 26678                           	psect	rparam
 26679  0000                     tosu	equ	0xFFF
 26680                           tosh	equ	0xFFE
 26681                           tosl	equ	0xFFD
 26682                           pclatu	equ	0xFFB
 26683                           pclath	equ	0xFFA
 26684                           tblptru	equ	0xFF8
 26685                           tblptrh	equ	0xFF7
 26686                           tblptrl	equ	0xFF6
 26687                           tablat	equ	0xFF5
 26688                           prodh	equ	0xFF4
 26689                           prodl	equ	0xFF3
 26690                           intcon	equ	0xFF2
 26691                           indf0	equ	0xFEF
 26692                           postinc0	equ	0xFEE
 26693                           fsr0h	equ	0xFEA
 26694                           fsr0l	equ	0xFE9
 26695                           wreg	equ	0xFE8
 26696                           indf1	equ	0xFE7
 26697                           postdec1	equ	0xFE5
 26698                           fsr1h	equ	0xFE2
 26699                           fsr1l	equ	0xFE1
 26700                           indf2	equ	0xFDF
 26701                           postinc2	equ	0xFDE
 26702                           postdec2	equ	0xFDD
 26703                           plusw2	equ	0xFDB
 26704                           fsr2h	equ	0xFDA
 26705                           fsr2l	equ	0xFD9
 26706                           status	equ	0xFD8
 26707                           
 26708                           	psect	temp
 26709  00005C                     btemp:
 26710                           	opt stack 0
 26711  00005C                     	ds	1
 26712  0000                     int$flags	set	btemp
 26713  0000                     wtemp6	set	btemp+1
 26714                           tosu	equ	0xFFF
 26715                           tosh	equ	0xFFE
 26716                           tosl	equ	0xFFD
 26717                           pclatu	equ	0xFFB
 26718                           pclath	equ	0xFFA
 26719                           tblptru	equ	0xFF8
 26720                           tblptrh	equ	0xFF7
 26721                           tblptrl	equ	0xFF6
 26722                           tablat	equ	0xFF5
 26723                           prodh	equ	0xFF4
 26724                           prodl	equ	0xFF3
 26725                           intcon	equ	0xFF2
 26726                           indf0	equ	0xFEF
 26727                           postinc0	equ	0xFEE
 26728                           fsr0h	equ	0xFEA
 26729                           fsr0l	equ	0xFE9
 26730                           wreg	equ	0xFE8
 26731                           indf1	equ	0xFE7
 26732                           postdec1	equ	0xFE5
 26733                           fsr1h	equ	0xFE2
 26734                           fsr1l	equ	0xFE1
 26735                           indf2	equ	0xFDF
 26736                           postinc2	equ	0xFDE
 26737                           postdec2	equ	0xFDD
 26738                           plusw2	equ	0xFDB
 26739                           fsr2h	equ	0xFDA
 26740                           fsr2l	equ	0xFD9
 26741                           status	equ	0xFD8


Data Sizes:
    Strings     1507
    Constant    969
    Data        10
    BSS         521
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      91
    BANK0           160     52     155
    BANK1           256      0     226
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_34(CODE[5]), STR_30(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_68(CODE[14]), STR_66(CODE[11]), STR_62(CODE[7]), 
		 -> STR_59(CODE[9]), STR_58(CODE[11]), STR_56(CODE[14]), STR_53(CODE[14]), 
		 -> STR_52(CODE[3]), STR_48(CODE[9]), STR_44(CODE[14]), STR_43(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5298_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5298_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5298_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5298_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3661$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3651$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3651$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3627$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3627$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3627$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3627$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 32
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_181(CODE[12]), STR_180(CODE[8]), 
		 -> STR_179(CODE[9]), STR_162(CODE[16]), STR_161(CODE[17]), STR_160(CODE[17]), 
		 -> STR_159(CODE[4]), STR_158(CODE[4]), STR_157(CODE[4]), STR_156(CODE[4]), 
		 -> STR_155(CODE[4]), STR_154(CODE[4]), STR_153(CODE[4]), STR_152(CODE[16]), 
		 -> STR_151(CODE[17]), STR_150(CODE[4]), STR_149(CODE[4]), STR_148(CODE[4]), 
		 -> STR_147(CODE[4]), STR_146(CODE[4]), STR_145(CODE[4]), STR_144(CODE[4]), 
		 -> STR_143(CODE[4]), STR_142(CODE[4]), STR_141(CODE[4]), STR_140(CODE[4]), 
		 -> STR_139(CODE[4]), STR_138(CODE[4]), STR_137(CODE[16]), STR_136(CODE[12]), 
		 -> STR_135(CODE[17]), STR_134(CODE[16]), STR_133(CODE[16]), STR_132(CODE[16]), 
		 -> STR_131(CODE[15]), STR_130(CODE[15]), STR_129(CODE[16]), STR_128(CODE[4]), 
		 -> STR_127(CODE[3]), STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[3]), 
		 -> STR_123(CODE[2]), STR_122(CODE[5]), STR_121(CODE[7]), STR_120(CODE[17]), 
		 -> STR_119(CODE[17]), STR_118(CODE[2]), STR_117(CODE[7]), STR_116(CODE[7]), 
		 -> STR_115(CODE[16]), STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), 
		 -> STR_111(CODE[17]), STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), 
		 -> STR_107(CODE[7]), STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), 
		 -> STR_103(CODE[16]), STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), 
		 -> STR_99(CODE[17]), STR_98(CODE[16]), STR_96(CODE[18]), STR_94(CODE[17]), 
		 -> STR_92(CODE[17]), STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK0[3]), 
		 -> STR_88(CODE[12]), STR_87(CODE[13]), STR_86(CODE[12]), STR_83(CODE[18]), 
		 -> STR_82(CODE[13]), STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), 
		 -> STR_78(CODE[17]), STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_73(CODE[16]), STR_72(CODE[13]), STR_71(CODE[12]), STR_70(CODE[17]), 
		 -> STR_64(CODE[7]), STR_63(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), 
		 -> STR_55(CODE[9]), STR_54(CODE[11]), STR_50(CODE[11]), STR_49(CODE[10]), 
		 -> STR_46(CODE[9]), STR_45(CODE[11]), STR_41(CODE[17]), STR_39(CODE[17]), 
		 -> STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[17]), STR_31(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), STR_23(CODE[10]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_69(CODE[11]), STR_67(CODE[11]), STR_65(CODE[14]), STR_57(CODE[14]), 
		 -> STR_51(CODE[10]), STR_47(CODE[13]), STR_42(CODE[14]), STR_40(CODE[13]), 
		 -> STR_38(CODE[10]), STR_29(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___awmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  647661
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  297569
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   41590
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   38604
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   40519
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   43166
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    2647
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  129817
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  255023
                                             41 BANK0     11    11      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  13    10      3  158749
                                             28 BANK0     13    10      3
                  _ADC_GetConversion
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   40828
                                             18 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   44656
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    2416
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     518
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1364
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           5     2      3    5439
                                              7 BANK0      5     2      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   12631
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1245
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      89
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      44
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      66
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2625
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5705
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    2669
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    1809
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1764
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   48776
                                             18 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    2894
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2625
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2625
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   42553
                                             18 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   37625
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0     979
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0     979
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2     889
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      44
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      89
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      88
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      44
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         18    18      0   30063
                                             31 COMRAM    18    18      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E2       7       88.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      9B       5       96.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5B       1       96.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     278      14        0.0%
DATA                 0      0     278       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Oct 31 11:02:02 2018

                             _SPI_Initialize 49F0                                   _USB_SD_Ptr 7653  
                ?_moteApp_add16bToDataBuffer 00C5                                 test_adc@Traw 00DC  
                                         l63 268C                                           l55 2628  
                                         l64 269E                                           l65 26B4  
                                         l58 268A                            ??_CMP1_Initialize 00BE  
                                 _USB_Buffer 0120                    _MOTEapp_getModuleResponse 3F30  
                        moteRunningProcess@i 00E2               moteJoiningProcess@selectButton 00D1  
                              _USBDeviceInit 213C                      EUSART_FlushBuffer@index 00BE  
                     __end_of_oled_writeData 4A34                         ??_moteApp_toggleLeds 00C1  
                         __size_of_CDCInitEP 0064                     USBapp_handlerState@state 00BE  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l123 301C                                          l124 2FC8  
                                        l125 2FE8                                          l310 3C44  
                                        l126 3008                                          l311 3C54  
                                        l119 2FB0                                          l400 1304  
                                        l313 3C6A                                          l410 13F4  
                                        l138 2D62                                          l411 1402  
                                        l403 131A                                          l307 3C22  
                                        l340 17D0                                          l413 1436  
                                        l405 1372                                          l325 4830  
                                        l333 177E                  __end_of_USBStdGetDscHandler 213C  
                                        l318 464A                                          l510 0A32  
                                        l502 0996                                          l319 4632  
                                        l415 144A                                          l407 13D2  
                                        l511 0A4A                                          l503 099E  
                                        l335 1784                                          l504 0ADA  
                                        l512 0A62                                          l440 0238  
                                        l352 196E                                          l336 179A  
                                        l417 1454                                          l505 0A92  
                                        l513 0A7A                                          l361 195A  
                                        l353 18A2                                          l345 1886  
                                        l337 17B2                                          l602 3F6E  
                                        l530 0C3E                                          l522 0BA4  
                                        l506 0A02                                          l442 0244  
                                        l371 14E8                                          l419 145E  
                                        l531 0C56                                          l435 029C  
                                        l339 17C2                                          l380 1100  
                                        l372 0FC8                                          l524 0C9E  
                                        l532 0C6E                                          l516 0B00  
                                        l508 0ABC                                          l460 03D0  
                                        l452 02BA                                          l444 02B0  
                                        l381 1138                                          l373 0FE6  
                                        l541 0D00                                          l533 0C86  
                                        l525 0BF8                                          l509 0A1A  
                                        l357 198A                                          l366 14A0  
                                        l390 11F8                                          l374 0FF0  
                                        l446 0F62                                          l550 0E10  
                                        l542 0D1C                                          l518 0B1C  
                                        l470 06EC                                          l462 03DC  
                                        l358 18A4                                          l367 0FC6  
                                        l607 3F92                                          l623 310C  
                                        l543 0D38                                          l535 0CE0  
                                        l527 0CCE                                          l471 0520  
                                        l463 0424                                          l447 02B8  
                                        l359 18F4                                          l392 124E  
                                        l384 1170                                          l376 106E  
                                        l624 30F6                                          l560 0E78  
                                        l544 0D54                                          l528 0C0E  
                                        l480 0660                                          l472 0620  
                                        l464 0442                                          l456 0316  
                                        l617 46A2                                          l553 0EC0  
                                        l561 0E90                                          l537 0D88  
                                        l545 0D70                                          l529 0C26  
                                        l465 0462                                          l457 036A  
                                        l802 2B7A                                          l618 468C  
                                        l394 125E                                          l386 1198  
                                        l378 10E2                                          l650 33A0  
                                        l642 4774                                          l626 312C  
                                        l562 0EA8                                          l554 0E1A  
                                        l546 0DB2                                          l538 0CE6  
                                        l482 069E                                          l474 059C  
                                        l563 0EF0                                          l547 0DF4  
                                        l475 05AA                                          l804 2BA8  
                                        l396 1286                                          l388 11E8  
                                        l572 1BF2                                          l580 1BC2  
                                        l628 31A4                                          l492 0834  
                                        l484 06DA                                          l581 1BD2  
                                        l573 1B62                                          l629 3162  
                                        l565 0F08                                          l557 0E30  
                                        l549 0E14                                          l477 05E8  
                                        l469 04F6                                          l806 2BF8  
                                        l398 12D8                                          l574 1C2C  
                                        l582 1BE2                                          l566 0F0E  
                                        l558 0E48                                          l478 05EC  
                                        l807 2C20                                          l575 1B72  
                                        l647 3330                                          l663 394A  
                                        l639 4762                                          l559 0E60  
                                        l576 1B82                                          l496 088E  
                                        l488 0748                                          l577 1B92  
                                        l665 396E                                          l497 0900  
                                        l489 079C                                          l586 4904  
                                        l578 1BA2                                          l498 08CC  
                                        l658 284C                                          l579 1BB2  
                                        l667 3992                                          l499 08E2  
                                        l940 3E6A                                          l860 3FD2  
                                        l772 35E6                                          _BDT 000400  
                                        l773 3554                                          l669 39B6  
                                        l950 485A                                          l774 35A0  
                                        l935 3B92                                          l863 3FCE  
                                        l767 35CE                                          l775 35A8  
                                        _CKE 007E3E                                          l864 3FCA  
                                        l768 3552                                          l777 35AE  
                                        l868 3FF0                                          l869 3FF2  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 0FBA  
                                        _UIE 000F64                                          _UIR 000F65  
                              test_adc@count 00DF                              _timer1ReloadVal 003C  
                                 _USBSuspend 47FA                                 ___awmod@sign 00C3  
               __end_of_moteApp_clearBuffers 39CE                 __end_of_moteApp_clearCommand 4A24  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 49CA  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 1EDC  
                             _USBDeviceState 00A8                        moteApp_delayms@length 00BE  
               MOTEapp_SetDataRateSetting@dr 00C2                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 012C                               ??_getsUSBUSART 00C8  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 00D0  
                                       l1015 4552                                         l1016 4550  
                                       l2000 372C                                         l1025 446C  
                                       l2001 373A                                         l1018 457A  
                                       l1026 4490                                         l2002 3750  
                                       l1115 4996                                         l1027 448E  
                                       l1043 43A2                                         l2112 3DCA  
                                       l1321 44F8                                         l2113 3DD4  
                                       l2105 3D90                                         l2114 3DE2  
                                       l2106 3D9C                                         l2108 3DB2  
                                       l1149 44B6                                         l2109 3DAA  
                                       l1177 49E8                                         l1532 2182  
                                       l2332 4266                                         l2333 4270  
                                       l1534 21BC                                         l2342 4380  
                                       l2254 4434                                         l1535 21AA  
                                       l2343 438A                                         l2255 442E  
                                       l2352 46D6                                         l2328 4246  
                                       l2353 46C4                                         l1537 21E0  
                                       l2329 423E                                         l2338 4368  
                                       l2258 444A                                         l2339 4360  
                                       l2259 4452                                         l1572 31CC  
                 USBConfigureEndpoint@handle 0007                                         l1901 1D44  
                                       l1574 31F6                                         l1910 1D86  
                                       l1902 1D26                                         l1576 3252  
                                       l1905 1D6A                                         l1594 461A  
                                       l1906 1D4C                                         l1595 4618  
                                       l1909 1D82                                         l1861 3416  
                                       l1862 3442                                         l2478 4286  
                                       l2486 3B4E                                         l1863 346E  
                                       l2479 427C                                         l2487 3AE4  
                                       l1864 3448                                         l2488 3B46  
                                       l1857 3494                                         l1891 1CA4  
                                       l1859 340E                                         l1893 1CBC  
                                       l1869 48B0                                         l1894 1CC6  
                                       l1895 1CF4                                         l1887 1CB0  
                                       l1897 1DA4                                         l1889 1C9C  
                                       l1993 36D2                                         l1898 1D06  
                                       l1994 36E6                                         l1899 1D0A  
                                       l1996 3704                                         l1997 36F8  
                                       l7147 439A                                         l6615 4852  
                                       l8303 125A                                         l9033 46C4  
                                       l7505 3AE4                                         l8241 10DE  
                                       l8341 136E                                         l9207 217A  
                                       l6479 3B8A                                         l8319 12D4  
                                       l7535 3942                                         l8423 0154  
                                       l6489 445A                                         l8353 13CE  
                                       l8409 011A                                         l8097 2D5A  
                                       l9235 21D8                                         l7571 39AE  
                                       l7547 3966                                         l7619 3124  
                                       l9411 1846                                         l8287 11F4  
                                       l7559 398A                                         l8369 1432  
                                       l8617 05A2                                         l9397 180C  
                                       STR_1 7D1F                                         STR_2 7D01  
                                       STR_3 7D10                                         STR_4 7F3E  
                                       STR_5 7D98                                         STR_6 7D8B  
                                       STR_7 7CC4                                         STR_8 7E71  
                                       STR_9 7F47                                         u5110 3E8A  
                                       u5200 43BA                                         u5130 3EB8  
                                       u5117 3E80              __size_of_MOTEapp_TimerBasedTask 001A  
                                       u4350 3BEC                                         u6110 3708  
                                       u5137 3EAE                                         _PEIE 007F96  
                                       u5420 3DB6                                         u6150 2F98  
                                       u5520 436C                                         u6330 3FA4  
                                       u5620 42BA                                         u5460 4438  
                                       u7070 0B56                                         u5800 3402  
                                       u5640 3962                                         u6610 1466  
                                       u5490 424A                                         u5730 3148  
                                       u5555 4508                                         u5556 450A  
                                       u5660 3986                                         u7510 223C  
                                       u5590 3B12                        ??_USBCtrlTrfTxService 0001  
                                       u5808 3406                                         u5680 39AA  
                                       u6810 0470                                         u6730 02C8  
                                       u5860 1C90                                         u6660 0142  
                                       u5950 1D70                                         u7710 186E  
                                       _UCFG 000F62                                         u7480 219E  
                                       u6680 017C                                         u7570 35F2  
                                       u8507 2886                                         u8427 27C4  
                                       u5868 1C94                                         u6940 06FA  
                                       u7660 17E6                                         _UEP0 000F6A  
                                       u8517 06E2                                         u8437 27D6  
                                       _UEP1 000F6B                                         u7670 17F2  
                                       u8607 1C34                                         u8527 2C2E  
                                       u8447 27E8                                         u8617 1C46  
                                       u8537 2C3C                                         u8457 280E  
                                       u6890 05F0                                         u7690 1834  
                                       u8627 1C58                                         u8547 2C52  
                                       u8467 2820                                         _UEIE 000F66  
                                       u6980 0840                                         u8637 44B0  
                                       u8557 2C66                                         u8477 2832  
                                       u8647 146E                                         u8567 483C  
                                       u8487 2862                                         u8657 1480  
                                       u8577 1B32                                         u8497 2874  
                                       u8667 1492                                         u8587 1B44  
                                       u8677 463A                                         u8597 1B56  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       _TMR2 000FBC                              _CDCDataInHandle 008A  
     USBStdFeatureReqHandler@current_ep_data 0019                                         _pDst 0036  
                                       _main 25C0                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 3550                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0032  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 45F2  
                                       btemp 005C                                __CFG_BORV$190 000000  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 4A98                                         start 00DA  
                            ?_oled_putUint16 00D0                                __CFG_IESO$OFF 000000  
                            __end_of_EndLine 4A52                       __end_of_SPI_Initialize 4A02  
                __end_of_USBapp_exitCDCState 4A72                             __end_of_CMP1_ISR 4AC4  
                            ?_oled_putString 00CB                   __end_of_USBCheckStdRequest 2982  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 0EDC  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 4AB2                         ??_moteJoiningProcess 00D2  
                     moteApp_delayms@counter 00C1                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 00C1                            sendCommand@string 00BF  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 4AAC  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                              ?_EUSART_Write 0001                         oled_putUint16@number 00D0  
             __size_of_OSCILLATOR_Initialize 0016                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 49A0                              __end_of___almod 3762  
                                      ?_main 0001                              __end_of___lbdiv 4456  
                                      _EEADR 000FA9                                        STR_10 7DF5  
                                      STR_11 7E7D                                        STR_20 7F50  
                                      STR_12 7E1C                                        STR_21 7FFD  
                                      STR_13 7E02                                        STR_30 7FB9  
                                      STR_14 7E0F                                        STR_22 7A84  
                                      STR_23 7EDF                                        STR_15 7EC0  
                                      STR_31 7B44                                        STR_24 7F35  
                                      STR_16 7F07                                        STR_40 7DE8  
                                      STR_32 7B99                                        STR_17 7F59  
                                      STR_25 7BAA                                        STR_33 7AEF  
                                      STR_41 7ADE                                        STR_34 7FBE  
                                      STR_18 7F6A                                        STR_50 7E9F  
                                      STR_42 7D3C                                        STR_26 7C10  
                                      STR_35 7B44                                        STR_43 7FF8  
                                      STR_19 7F72                                        STR_51 7EF3  
                                      STR_27 7C21                                        STR_36 7B99  
                                      STR_52 7FF8                                        STR_60 7E89  
                                      STR_44 7D58                                        STR_28 7B33  
                            __end_of___awmod 3DEC                                        STR_37 7AEF  
                                      STR_61 7E9F                                        STR_53 7D58  
                                      STR_29 7EFD                                        STR_45 7EB5  
                                      STR_54 7EB5                                        STR_38 7EFD  
                                      STR_62 7F96                                        STR_46 7F1A  
                                      STR_70 7BBB                                        STR_55 7F1A  
                                      STR_47 7DE8                                        STR_63 7EE9  
                                      STR_71 7E35                                        STR_39 7ABC  
                                      STR_80 7C84                                        STR_64 7F8F  
                                      STR_48 7F23                                        STR_72 7D73  
                                      STR_56 7D4A                                        STR_65 7D3C  
                                      STR_57 7D3C                                        STR_49 7ED5  
                                      STR_73 7C84                                        STR_81 7BEE  
                                      STR_66 7E94                                        STR_90 7FAB  
                                      STR_58 7E94                                        STR_82 7D66  
                                      STR_74 7D2E                                        STR_59 7F23  
                                      STR_67 7EAA                                        STR_91 7B55  
                                      STR_75 7B22                                        STR_83 7A98  
                                      STR_84 7D2E                                        STR_68 7D4A  
                                      STR_76 7B88                                        STR_92 7ACD  
                                      STR_77 7C84                                        STR_69 7EAA  
                                      STR_93 7FB2                                        STR_85 7E65  
                                      STR_86 7E4D                                        STR_94 7BCC  
                                      STR_78 7B11                                        STR_87 7D73  
                                      STR_95 7FA4                                        STR_79 7B00  
                                      STR_88 7E41                                        STR_96 7AAA  
                                      STR_89 7FF8                                        STR_97 7F9D  
                                      STR_98 7CB4                                        STR_99 7B22  
          __size_of_USBCtrlEPServiceComplete 00F2                              _TMR1_StartTimer 4ABC  
                            __end_of___lldiv 3D7A            __size_of_MOTEapp_setResponseReady 0006  
                                      _T1CON 000FCD                       __end_of_USBDeviceTasks 200E  
                                      _T2CON 000FBA                      __end_of_sendDataCommand 31B2  
                  ?_USBCtrlEPServiceComplete 0001                              __end_of___lwdiv 427A  
                            __end_of___lwmod 4394                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 00D2                                        i2l845 40C0  
                                      i2l839 40CC                                        i2l847 40C6  
                                      i2l792 4202                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR1L 000FCE  
                                      _SPBRG 000FAF     moteApp_add16bToDataBuffer@bufferLocation 00C7  
    moteApp_add8bToDataBuffer@bufferLocation 00C4                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                              __CFG_WRT0$OFF 000000           __size_of_USBCtrlEPAllowStatusStage 00C4  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                          moteHandler@i_1233 00F0                                __CFG_WRT3$OFF 000000  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000              __end_of_USBCtrlEPAllowDataStage 38A8  
                          oled_putChar@index 00CA                             __end_of_TMR1_ISR 4A5E  
                                      _sd000 7A18                                        _sd001 79D2  
            service_pushbutton@Release_Timer 00A0                                        _sd002 799E  
                              __CFG_WRTB$OFF 000000                       moteRunningProcess@Traw 00E0  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 49A0                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _light 0096  
                    __end_of_TMR1_Initialize 468A                                 _runningState 00AE  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 405E  
                 oled_setDisplay@displayType 00C0                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 005D  
                            _TMR2_StartTimer 4AB8                              __end_of_strncmp 3B6A  
                            ___lbdiv@divisor 00BE                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                             __end_ofi2_memset 47D2  
                            ___lbdiv@counter 00C0                                 _m10SecTicker 0092  
                            ?_SPI_Initialize 0001                              putUSBUSART@data 00BE  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 3DEC                        TMR2_ReadTimer@readVal 00BE  
              __size_of_TMRapp_ClearBitFlags 0008                                 __end_of_main 26C6  
                      _control_signal_bitmap 0040                __size_of_MOTEapp_handlerState 000A  
                     _MOTEapp_TimerBasedTask 48F6                               ??_EUSART_Write 00BE  
                    __end_of_TMR2_Initialize 49DE                                 ?_sendCommand 00BF  
                ?_INTERRUPT_InterruptManager 0001                    __size_of_USBCtrlEPService 00CE  
                                     ??_main 00F2                                 ?_moduleSleep 0001  
                               ?_moteHandler 0001                                __activetblptr 000002  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 45BA  
                      oled_putUint16@numData 00D4                    sendDataCommand@dataLength 00C3  
                                ?_USBSuspend 0001                                   _NextUSBOut 00A4  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 0098                     __end_of_SPI_Exchange8bit 49F0  
                    __end_of_USBDeviceAttach 4626                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 008C                            _getsUSBUSART$5662 00C9  
                                     _ACTCON 000FB5                                       STR_100 7B88  
                                     STR_101 7C84                                       STR_110 7C84  
                                     STR_102 7C64                                       STR_103 7C54  
                                     STR_111 7C32                                       STR_104 7C84  
                                     STR_112 7CD4                                       STR_120 7B66  
                                     STR_121 7F88                                       STR_113 7CE3  
                                     STR_105 7C43                                       STR_130 7CE3  
                                     STR_122 7FC3                                       STR_106 7ECB  
                                     STR_114 7C74                                       _ADRESH 000FC4  
                                     STR_131 7CD4                                       STR_115 7C64  
                                     STR_107 7E52                                       STR_123 7DCC  
                                     STR_132 7C64                                       STR_108 7B11  
                                     STR_124 7FE1                                       STR_140 7FD0  
                                     STR_116 7F81                                       STR_133 7C54  
                                     STR_109 7B00                                       STR_125 7FED  
                                     STR_141 7FD4                                       STR_117 7F7A  
                                     STR_134 7C84                                       STR_126 7FE5  
                                     STR_150 7FF0                                       STR_118 7FFB  
                                     STR_142 7FD8                                       _ADRESL 000FC3  
                                     STR_127 7FE9                                       STR_143 7FDC  
                                     STR_135 7BFF                                       STR_151 7BDD  
                                     STR_119 7B77                                       STR_160 7B22  
                                     STR_144 7FF4                                       STR_128 7FF0  
                                     STR_136 7E59                                       STR_152 7C94  
                                     STR_137 7C74                                       STR_129 7C74  
                                     STR_153 7FC8                                       STR_145 7FDC  
                                     STR_161 7B88                                       STR_162 7C84  
                                     STR_154 7FCC                                       STR_146 7FE0  
                                     STR_138 7FC8                                       STR_170 7DCE  
                                     STR_155 7FD0                                       STR_147 7FEC  
                                     STR_139 7FCC                                       STR_171 7DDB  
                                     STR_163 7CA4                                       STR_156 7FD4  
                                     STR_148 7FE4                                       STR_180 7F62  
                                     STR_164 7D80                                       STR_172 7CF2  
                                     STR_157 7FD8                                       STR_149 7FE8  
                                     STR_173 7F2C                                       STR_181 7E29  
                                     STR_165 7D8D                                       _EEDATA 000FA8  
                                     STR_174 7A33                                       STR_158 7FDC  
                                     STR_166 7D9A                                       STR_159 7FF4  
                                     STR_167 7DA7                                       STR_175 7A50  
                                     STR_168 7DB4                                       STR_176 7A6A  
                                     STR_169 7DC1                                       STR_177 7A1C  
                                     STR_178 7A36                                       STR_179 7F11  
                                     _EECON2 000FA7                              getsUSBUSART@len 00C7  
                                     _T1GCON 000FCC                         oled_putUint8@numData 00D3  
                      __size_of_CDCTxService 0136                                       i2l1031 4716  
                                     i2l1032 4712                                       i2l1037 4724  
                                     i2l1039 4746                                       i2l1080 008A  
                                     i2l1081 008E                                       i2l1074 0062  
                                     i2l1076 0072                                       i2l1078 007E  
                                     i2l1602 3078                                       i2l1610 3874  
                                     i2l1620 26E8                                       i2l1532 22AA  
                                     i2l1614 390A                                       i2l1710 2E86  
                                     i2l1534 22E6                                       i2l1550 1F4A  
                                     i2l1711 2E26                                       i2l1703 47A0  
                                     i2l1535 22D2                                       i2l1543 1EF2  
                                     i2l2280 3D68                                       i2l2352 47C0  
                                     i2l1608 3858                                       i2l1624 2764  
                                     i2l1704 479E                                       i2l1560 1FCA  
                                     i2l1552 1F5A                                       i2l1544 1EFE  
                                     i2l1641 2F60                                       i2l1633 2EBC  
                                     i2l2353 47B0                                       i2l1537 230A  
                                     i2l1553 1F64                                       i2l1545 1F06  
                                     i2l1642 2F2A                                       i2l1730 2A94  
                                     i2l1722 4128                                       i2l1562 1FEA  
                                     i2l1554 1F88                                       i2l2275 3D26  
                                     i2l1635 2EC6                                       i2l1731 2A9A  
                                     i2l1651 1E6C                                       i2l1619 273E  
                                     i2l1555 1F94                                       i2l1547 1F1A  
                                     i2l2276 3D1A                                       i2l1732 2B14  
                                     i2l1652 1E52                                       i2l1724 4170  
                                     i2l1572 3286                                       i2l1660 29CC  
                                     i2l1564 2006                                       i2l1548 1F26  
                                     i2l1637 2F22                                       i2l1733 2ADA  
                                     i2l1709 2E8C                                       i2l1557 1FA4  
                                     i2l1638 2EEC                                       i2l1574 32B0  
                                     i2l1662 2A40                                       i2l1750 28C6  
                                     i2l2279 3D5A                                       i2l1735 2AFA  
                                     i2l1567 451C                                       i2l1671 2034  
                                     i2l1751 28DA                                       i2l1648 1DF8  
                                     i2l1840 366E                                       i2l1568 452A  
                                     i2l1576 330C                                       i2l1672 20BC  
                                     i2l1752 28E0                                       i2l1649 1DD6  
                                     i2l1841 3686                                       i2l1681 37DE  
                                     i2l1745 293E                                       i2l1738 2B40  
                                     i2l1762 1512                                       i2l1674 20C4  
                                     i2l1682 376E                                       i2l1754 28E6  
                                     i2l1746 28B0                                       i2l1835 3690  
                                     i2l1771 165A                                       i2l1763 1516  
                                     i2l1675 2114                                       i2l1755 2904  
                                     i2l1836 362A                                       i2l1668 2124  
                                     i2l1756 2920                                       i2l1748 28BA  
                                     i2l1781 16DA                                       i2l1773 1624  
                                     i2l1765 1580                                       i2l1677 211C  
                                     i2l1669 2020                                       i2l1685 37F4  
                                     i2l1749 28C0                                       i2l1838 3642  
                                     i2l1774 1640                                       i2l1686 377E  
                                     i2l1839 3650                                       i2l1783 172C  
                                     i2l1767 15C0                                       i2l1687 3784  
                                     i2l1695 4414                                       i2l1776 16A0  
                                     i2l1768 15C2                                       i2l1688 37A2  
                                     i2l1696 4412                                       i2l1777 16AC  
                                     i2l1769 15DA                                       i2l1778 1720  
                                     i2l6521 41FA                                       i2l9123 22A2  
                                     _TABLAT 000FF5                                       i2l6639 2EC6  
                                     i2l9151 2302                                       i2l6693 47B0  
                                     i2l9087 2E1E                                       i2l6889 29C4  
                                     i2l9575 1F9C                                       i2l9933 40E4  
                                     i2l9935 4114                                    ??_EndLine 00BF  
                                     _OSCCON 000FD3                                CDCTxService@i 00C8  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                   i2USBTransferOnePacket@ep 0005                            ??i2_USBDeviceInit 0009  
            __size_ofi2_USBTransferOnePacket 00BA                         ?i2_EUSART_Initialize 0001  
                       oled_displayOff@state 00C0                                oled_putChar@k 00C9  
                          _shortPacketStatus 004C               moteRunningProcess@changeStates 00E6  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 393C  
                       _moteApp_clearCommand 4A14                 ??_MOTEapp_SetDataRateSetting 00C1  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 48F6  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 4778  
                   USBTransferOnePacket@data 00BF                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 00C6                    __size_of_Set_Page_Address 0018  
                    __end_of_TMR1_StartTimer 4AC0                                 ?_putUSBUSART 00BE  
                                  ??___almod 00C6                                    ??___lbdiv 00BF  
                             __CFG_STVREN$ON 000000                                    ??___awmod 00C2  
                                  ??___lldiv 0009                                       _appKey 0280  
                       __end_of_getsUSBUSART 349A                                    ??___lwdiv 00C2  
                                  ??___lwmod 00C2                            _USBEnableEndpoint 450C  
            __size_of_USBStdGetStatusHandler 00A8                          _EUSART_Transmit_ISR 46EA  
                                     _memset 46BA                                       clear_0 3E24  
                                     clear_1 3E30                                       clear_2 3E3C  
                                     clear_3 3E48                              ___awmod@divisor 00C0  
                            ___awmod@counter 00C2                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                      __end_of_DATAEE_ReadByte 49B6  
                                     _strcmp 427A                   __end_of_ADC_TempConversion 47FA  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 00BF  
                            _moteApp_delayms 4626                  __size_of_service_pushbutton 0064  
                               __pdataCOMRAM 005B                                 _CDCTxService 1C72  
                               __mediumconst 7652                             __end_of_test_adc 2DCE  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                   ADC_GetConversion@channel 00C2                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 4ABC                                 _dataRateRead 0053  
                                _CtrlTrfData 000438                                    ??_strncmp 00C4  
                           ___lbdiv@dividend 00BF                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004B  
                  USBapp_Handler@buttonPress 00D0                         _USBapp_getrxByteFlag 4AA6  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0162                         __size_of_EUSART_Read 003A  
                          _SYSTEM_Initialize 48B4                 __size_of_USBapp_handlerState 000A  
                                 __accesstop 0060                      __end_of__initialization 3E4E  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 4A02                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 00BF                                ___rparam_used 000001  
                              ?_oled_setFont 00BE                     __size_of_USBStallHandler 0042  
                              ?_oled_putChar 00C1                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 0028  
                __size_of_EUSART_FlushBuffer 0042                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 4548                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 7A1C                                __end_of_sd001 7A06  
                              __end_of_sd002 79D2                                 __pidataBANK0 4A86  
                        ??_SYSTEM_Initialize 00C0                    oled_putUint16@station_dot 00D2  
                                  ?_TMR1_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009E  
                           _DATAEE_WriteByte 44D0                __size_of_USBConfigureEndpoint 0094  
                __end_of_USBCtrlTrfInHandler 2B46                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 00C1                       i2_USBTransferOnePacket 3270  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 795B                            _CDCTxService$5710 00C6  
                                 _cdc_notice 01D0                                    ?i2_memset 0001  
                                 _cdc_rx_len 009A                                   _cdc_tx_len 0099  
                                 ??_CMP1_ISR 0001                              _responsePortNum 00BB  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01C0  
                             ??_oled_devInit 00C0                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 48D6                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 3762                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 00BE  
                           ??_oled_putUint16 00D4                                   __pbssBANK0 0060  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                       __end_of_EUSART_Write 4494                      __size_of_TMR2_ReadTimer 000A  
                           ??_oled_putString 00CF                      moduleResync@escapeEvent 00C5  
                             ??_oled_setFont 00C0                              _periodicUpValue 00F9  
                __size_of_EUSART_Receive_ISR 0030                          oled_putString@index 00CF  
                             ??_oled_putChar 00C3                  __size_of_USBWakeFromSuspend 002E  
                                _pBDTEntryIn 006E                       __size_of_oled_clearRow 0026  
                   sendDataCommand@byteCount 00C5             __end_of_USBCtrlEPServiceComplete 27B8  
           __end_of_MOTEapp_setResponseReady 4AB2                       oled_putChar@start_page 00C2  
                __size_of_USBCheckCDCRequest 00B0                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0024                             ??_oled_writeData 00BF  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                           ?_TMR1_StartTimer 0001                                   ??_TMR1_ISR 0001  
                   oled_putUint16@start_page 00D3                      __end_of_moteApp_delayms 4658  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 010C                                      _BAUDCON 000FB8  
                                    ?_memset 00BE                                   _device_dsc 7A06  
                  Set_Column_Address@address 00C0                     __size_of_oled_displayOff 0016  
                           _USBCtrlEPService 2DCE                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 0087                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 00BE                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 1EDC                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 28A0                                _eusartRxCount 00B0  
                          _configDescriptor1 795B                                      _RS232cp 00A1  
                            __CFG_WDTEN$SWON 000000                           __size_of_test_leds 0060  
                                 ??i2_memset 0007                           __size_of_test_oled 008A  
                       __size_of_moduleSleep 0026                  __end_of_USBCtrlTrfTxService 2F68  
                       __size_of_moteHandler 023E                          _USBStdSetCfgHandler 2982  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 008A  
             USBapp_LEDUpdateStatus@ledCount 003E                              __CFG_WDTPS$8192 000000  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 4A14  
                             ??_moduleResync 00C3                          ?_USBCheckStdRequest 0001  
                           ?_TMR2_StartTimer 0001                 __size_of_USBStdGetDscHandler 012E  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                                    _UIRbits 000F65                       test_switch@buttonCheck 00D2  
            moteRunningProcess@bufferReadPos 00E5                             ??_SPI_Initialize 00BE  
                                    _EndLine 4A44                                _cdc_trf_state 00A7  
                       DATAEE_WriteByte@bAdd 00BF                      __size_of_USBapp_exitCDC 0006  
                 __end_of_moteRunningProcess 0FBA                       ??_moteApp_clearBuffers 00BE  
                     ??_moteApp_clearCommand 00C1                   ?_moteApp_add8bToDataBuffer 00C4  
                                    _pCDCDst 007E                                      _pCDCSrc 0081  
                      __size_of_getsUSBUSART 00B8           __end_of_MOTEapp_SetDataRateSetting 1C72  
                 _MOTEapp_SetDataRateSetting 1B10                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 3FFA  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                   moteRunningProcess@i_1299 00E3                   __size_of_USBEnableEndpoint 003C  
                USBapp_exitCDCState@usbState 00BE                          moteHandler@s2Button 00ED  
                           _Set_Page_Address 495C                                    ?_test_adc 0001  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00DC  
                                    ___almod 36B4                            _timerMinTickCount 008E  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 0534  
                                    ___lbdiv 4418                                      ___awmod 3D7A  
                                    ___lldiv 3CF8                             ??_USBDeviceTasks 001F  
                                    ___lwdiv 4226                            ??_USBStallHandler 0001  
                                    ___lwmod 4350                         __size_of_putUSBUSART 0022  
                                    __pcinit 3DEC                           getsUSBUSART@buffer 00C5  
               __size_of_USBapp_exitCDCState 000A                              __size_of_memset 0030  
                  __end_of_configDescriptor1 799E                                      __ramtop 0800  
                          hexToStr@character 00BE                                      __ptext0 25C0  
                                    __ptext1 430C                                      __ptext2 2F68  
                                    __ptext3 39CE                                      __ptext4 405E  
                                    __ptext5 3EC8                                      __ptext6 27B8  
                                    __ptext7 2CFE                                      __ptext8 1752  
                                    __ptext9 00DE                     __size_of_oled_setDisplay 0018  
                                    _inPipes 0068                  _USBDeferOUTDataStagePackets 0041  
                            __size_of_strcmp 004C                    moteRunningProcess@counter 00E4  
                           oled_setFont@font 00BE                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 498A                                      _exitUSB 00F4  
                               ??_USBSuspend 0016                                _oled_clearRow 4848  
                                  _T2CONbits 000FBA              moteApp_add8bToDataBuffer@number 00C7  
                                 _oled_clear 4910                             ___awmod@dividend 00BE  
                   ??_PIN_MANAGER_Initialize 00BE                 __end_of_TMRapp_ClearBitFlags 4A98  
                               _LastRS232Out 00A2                              i2_USBDeviceInit 2268  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 4892  
                          ?_SPI_Exchange8bit 0001                 __end_of_MOTEapp_handlerState 4A86  
                     ??_USBapp_getrxByteFlag 00BE                           __end_of_USB_CD_Ptr 765B  
                 moteRunningProcess@readByte 00DF                   __size_of_SYSTEM_Initialize 0022  
            __size_of_USBCtrlTrfSetupHandler 0084                                   ??_hexToStr 00BE  
                                    _strncmp 3AE2                         end_of_initialization 3E4E  
                               _getsUSBUSART 33E2                sendDataCommand@byteCount_1443 00C6  
                         ??_SPI_Exchange8bit 00BE                         SPI_Exchange8bit@data 00BE  
                         __end_of_USB_SD_Ptr 7659                          _pBDTEntryEP0OutNext 0038  
                                    memset@c 00C0                                      memset@n 00C2  
                                    memset@p 00C4                                __Lmediumconst 7652  
            _dummy_encapsulated_cmd_response 01DA                     ?_USBStdFeatureReqHandler 0001  
             __end_of_MOTEapp_TimerBasedTask 4910                            _EUSART_Initialize 4582  
                                 _rxByteFlag 00A5                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00C8  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 40BE                            __end_of_test_oled 3A58  
             moteJoiningProcess@changeStates 00D0                           ?_EUSART_Initialize 0001  
                              _oled_putUint8 3A58                           __end_of_USBSuspend 4822  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 380A  
                                  _RCSTAbits 000FAB                                   ??_test_adc 00DA  
                         test_switch@timeout 00D0                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                         __end_of_oled_devInit 2CFE  
                   _USBCtrlEPServiceComplete 26C6                      moteApp_toggleLeds@state 00C2  
                                 _responseId 0110                                   _retryCount 0051  
                           ?_moteApp_delayms 00BE                                _randomPortNum 00AC  
                   _MOTEapp_setResponseReady 4AAC                                      strcmp@r 00C3  
                 _USBStatusStageEnabledFlag1 0044                   _USBStatusStageEnabledFlag2 0043  
                              _dataRateValue 00F7                          _USBapp_handlerState 4A72  
                        ??_EUSART_Initialize 00BE                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 00D1                               ?_oled_clearRow 0001  
                                 _test_comms 3EC8                         __end_of_oled_setFont 49CA  
                         _Set_Column_Address 48D6                         __end_of_oled_putChar 3BF0  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                            ??_oled_displayOff 00C0  
                      __size_of_EUSART_Write 003E                           _BothEP0OutUOWNsSet 0047  
                              ?_test_powerup 0001                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 450C                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 4A5E  
                                  _USTATcopy 0059                            __size_of_CMP1_ISR 0004  
                       ?_USBapp_handlerState 0001                           _ADC_TempConversion 47D2  
                   oled_putString@start_page 00CE                                  _CM1CON0bits 000F98  
                  __end_of_EUSART_Initialize 45BA                 __end_of_USBTransferOnePacket 3270  
                                _CM2CON1bits 000F9A                                    _TXSTAbits 000FAC  
                            moteHandler@Traw 00EA                               ?_oled_putUint8 00D0  
                          putUSBUSART@length 00C0                          ?_ADC_TempConversion 0001  
                     _USBCtrlTrfSetupHandler 3C74                         ??_Set_Column_Address 00C0  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 3C74  
                      __end_of_USBDeviceInit 2268                               _TMRapp_Handler 24B4  
                             _USBapp_Handler 3550                         __size_of_TMRapp_Tick 0006  
               ??_moteApp_add16bToDataBuffer 00C8          MOTEapp_getModuleResponse@bufferByte 00C0  
                              __pidataCOMRAM 4AC4                                 _EUSART_Write 4456  
                      sendDataCommand@string 00BF                      __end_ofi2_USBDeviceInit 2394  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 3FFA  
                             _ADC_Initialize 492A                  moteApp_clearBuffers@counter 00BE  
                    moteApp_GoToSleep@status 00CD                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 46EA  
                          _USBBusIsSuspended 0049                     oled_writeCommand@command 00BF  
                             __end_of_strcmp 42C6                                  ?_oled_clear 0001  
                        start_initialization 3DEC                         ??_ADC_TempConversion 00C5  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00E0              __size_of_PIN_MANAGER_Initialize 0046  
                          ??_oled_setDisplay 00C0                                ??_EUSART_Read 00BE  
                     __end_of_TMR2_ReadTimer 4A68                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 45F2  
                          __size_ofi2_memset 002C                                    _OledFont0 765B  
               __end_of_USBConfigureEndpoint 393C              __end_of_USBStdFeatureReqHandler 1752  
                   __size_of_sendDataCommand 00BE                        ??_USBapp_handlerState 00BE  
          __end_of_USBCtrlEPAllowStatusStage 30F4                                _periodicState 00F5  
                             _USBapp_exitCDC 4AA0                     __end_of_USBCtrlEPService 2E9C  
       __end_of_USART_mySetLineCodingHandler 41D0        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 4176                   __end_of_EUSART_FlushBuffer 43D6  
                        DATAEE_ReadByte@bAdd 00BE                __size_of_USBapp_setrxByteFlag 0008  
        __size_of_moteApp_add16bToDataBuffer 0180                                _moteModeState 0054  
                  ??_USBCtrlEPAllowDataStage 0002                                  ??_CDCInitEP 000D  
                             USBDeviceInit@i 00C6                           _periodicTimerValue 00F8  
                     _pBDTEntryEP0OutCurrent 003A                     __size_of_TMR1_Initialize 0032  
                    USBTransferOnePacket@dir 00BE                      USBTransferOnePacket@len 00C1  
                     __end_of_USBapp_Handler 3604                       __end_of_TMRapp_Handler 25C0  
             __end_ofi2_USBTransferOnePacket 332A                         _TMRapp_ClearBitFlags 4A90  
                        _USBStdGetDscHandler 200E                         _MOTEapp_handlerState 4A7C  
                     __end_of_ADC_Initialize 4944                                  __pdataBANK0 00F2  
                                   ??_memset 00C4                              ??_oled_clearRow 00CB  
            MOTEapp_TimerBasedTask@timerTask 00BE                          _moduleResonseBuffer 0160  
                                   ??_strcmp 00C2                                  ?_test_comms 0001  
                  oled_putString@station_dot 00CD                       _USBActiveConfiguration 005A  
             __end_of_USBStdGetStatusHandler 380A                  __end_of_EUSART_Transmit_ISR 471A  
                                __pbssCOMRAM 0032                   service_pushbutton@PB_Timer 007A  
                              __pcstackBANK0 00BE                 __size_of_USBCtrlTrfInHandler 00E2  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 4974  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00AF  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 4AA6  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00C5                   __end_of_EUSART_Receive_ISR 474A  
             moteRunningProcess@messageReady 00DB                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 4A68                   __end_of_USBWakeFromSuspend 47A6  
                 __size_of_EUSART_Initialize 0038                            __size_of_hexToStr 002E  
                            _USBStallHandler 43D6                                 _pBDTEntryOut 0074  
                        __end_of_EUSART_Read 4582                   __end_of_USBCheckCDCRequest 36B4  
                            ??_oled_putUint8 00D2                         oled_putString@string 00CB  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0100  
                ??_moteApp_add8bToDataBuffer 00C5                            _oled_writeCommand 4A34  
                      __size_of_oled_devInit 00D8                      oled_putChar@station_dot 00C1  
                ?_MOTEapp_SetDataRateSetting 0001                             ___lwdiv@dividend 00BE  
                     _PIN_MANAGER_Initialize 42C6                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0050  
                       EUSART_Read@readValue 00BE                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 7652  
                                   ?___almod 00BE                        ?_MOTEapp_handlerState 0001  
                                  __ptext100 3762                                    __ptext101 200E  
                                   ?___lbdiv 00BE                                    __ptext110 411A  
                                  __ptext102 14EE                                    __ptext111 1DA8  
                                  __ptext103 40BE                                    __ptext120 46EA  
                                  __ptext112 3030                                    __ptext104 41D0  
                                  __ptext121 471A                                    __ptext113 2A64  
                                  __ptext105 3FFA                                    __ptext122 4AC0  
                                  __ptext114 2E9C                                    __ptext106 3270  
                                  __ptext123 0000                                    __ptext115 4176  
                                  __ptext107 450C                                    __ptext116 45BA  
                                  __ptext108 38A8                                    __ptext117 3CF8  
                                  __ptext109 3604                                    __ptext118 4AB2  
                                  __ptext119 4A52                                     ?___awmod 00BE  
                 __end_of_moteApp_toggleLeds 28A0                                     ?___lldiv 0001  
                                   ?___lwdiv 00BE                                     ?___lwmod 00BE  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 009C                                ??_sendCommand 00C1  
                               _eusartTxHead 009F                                 _eusartRxTail 009B  
                               _eusartTxTail 009E                            __size_of_test_adc 00D0  
                       ?_USBapp_exitCDCState 0001                        __size_of_oled_putChar 0086  
                         _moteRunningProcess 00DE                            _moduleBufferIndex 00AD  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 00BE  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00F1  
                        ??_oled_writeCommand 00BF                                ??_moduleSleep 00C1  
                              ??_moteHandler 00E7                      _eusartTxBufferRemaining 009D  
                       _USBTransferOnePacket 31B2                                    _mainState 0056  
                               moteHandler@i 00EF             moteApp_add16bToDataBuffer@number 00C5  
                   __size_of_TMR1_StartTimer 0004                       moteHandler@buttonPress 00EE  
                        ?_moteRunningProcess 00DA                 __end_of_USBCtrlTrfOutHandler 4176  
                                  _minTicker 004F                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 4AC0                                  _ep_data_out 0084  
                           ___lwdiv@quotient 00C2                 __size_of_USBCtrlTrfRxService 0134  
                                  _secTicker 00AB                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 00BE                                 _oled_devInit 2C26  
                             _eusartRxBuffer 0200                            _dataRateSelection 005B  
                           _timerMsTickCount 0090                                    _oled_init 486E  
               __size_of_USBCtrlTrfTxService 00CC            __end_of_MOTEapp_getModuleResponse 3F96  
                             _eusartTxBuffer 0240                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 4A44  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 00BE  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 0068                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 49B6                                    _moteState 00FA  
                          ??_sendDataCommand 00C4                                _operationType 00B2  
                      __size_of_moduleResync 0084                         ??_moteRunningProcess 00DD  
                 __end_of_moteJoiningProcess 14EE          __size_of_INTERRUPT_InterruptManager 00D2  
                               _oled_putChar 3B6A                                     i2u440_40 421A  
                                   i2u504_40 16C0                                     _PIR1bits 000F9E  
                                   _PIR2bits 000FA1                __size_of_moteApp_clearBuffers 0092  
              __size_of_moteApp_clearCommand 0010                                     i2u453_40 2F14  
                                   _PIR3bits 000FA4                                     i2u453_47 2F0A  
                                   i2u455_40 2F52                                     i2u455_47 2F48  
                                   i2u607_48 2B28                                     i2u480_40 20B6  
                                   i2u607_49 2B3C                                     i2u480_47 20AC  
                                   i2u536_48 1EB8                                     i2u536_49 1ECC  
                                   i2u458_40 3D2A                                     i2u482_40 2108  
                                   i2u482_47 20FE                                     i2u475_40 29F8  
                                   i2u803_40 200A                                     i2u740_40 2E6C  
                                   i2u479_40 2086                                     i2u743_40 22C6  
                                   i2u479_47 207C                    USBCtrlEPService@setup_cnt 001E  
                                   i2u746_40 2366                    __size_of_SPI_Exchange8bit 0012  
                                   _RCONbits 000FD0                         __end_of_test_powerup 4350  
                    __size_of_oled_putUint16 0120                                ??_putUSBUSART 00C1  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0042  
                                   _SSP1CON1 000FC6           __end_of_moteApp_add16bToDataBuffer 1B10  
                 _moteApp_add16bToDataBuffer 1990                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 4A52                      __size_of_oled_putString 006C  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 4974                                    _test_leds 405E  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00DA  
                       _USBConfigureEndpoint 38A8                                    _test_oled 39CE  
                      ??_USBapp_exitCDCState 00BE             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 00BE                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 00C0                        ?_USBTransferOnePacket 00BE  
                     ADC_TempConversion@temp 00C6                    _moteApp_add8bToDataBuffer 349A  
                    __size_of_oled_writeData 0010                                ?_CDCTxService 0001  
                   moteHandler@gotoNextState 00EC                                 _RemoteWakeup 004A  
                        __end_of_sendCommand 46BA                                     i2_memset 47A6  
                          __CFG_CFGPLLEN$OFF 000000                        DATAEE_WriteByte@bData 00BE  
                         _RS232_Out_Data_Rdy 00A3                      __end_of_USBStallHandler 4418  
                        __end_of_moduleSleep 4848                          __end_of_moteHandler 1990  
                                _EUSART_Read 4548                            _moteApp_GoToSleep 332A  
                                  copy_data0 3E00                  ??_USBCtrlEPAllowStatusStage 0001  
                               _moduleResync 3BF0                  __end_of_USBStdSetCfgHandler 2A64  
                          ?_DATAEE_WriteByte 00BE                __size_of_USBapp_getrxByteFlag 0006  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 00BE                                ??_test_switch 00D0  
MOTEapp_getModuleResponse@terminatorReceived 00BF                             __size_of_EndLine 000E  
                         ??_DATAEE_WriteByte 00BF                           __end_of_device_dsc 7A18  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 00BE  
                    USBStdGetStatusHandler@p 0002                                     __Hrparam 0000  
                        ??_moteApp_GoToSleep 00CD                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 00C2                       ??_MOTEapp_handlerState 00BE  
                          _ADC_GetConversion 4494                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      __size_of_SPI_Initialize 0012  
                    ??_OSCILLATOR_Initialize 00BE                        ?_USBConfigureEndpoint 0001  
                         ?_ADC_GetConversion 00BE                             __size_of___almod 00AE  
                          ??_USBDeviceAttach 00BE                                   ?_test_leds 0001  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072               moteJoiningProcess@readDataRate 00D3  
                               _selectedFont 00F2                             __size_of___lldiv 0082  
           moteApp_clearBuffers@counter_1511 00BF             moteApp_clearBuffers@counter_1512 00C0  
           moteApp_clearBuffers@counter_1513 00C1                              _oled_setDisplay 4944  
                           __size_of___lwdiv 0054                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 00BE                                   _ANSELAbits 000F5B  
                        __end_of_putUSBUSART 48B4                                  _line_coding 00B4  
                                 _ANSELCbits 000F5D                               ??_CDCTxService 00C5  
                              _responseReady 0052                          ??_ADC_GetConversion 00C0  
                               ??_oled_clear 00CD                                  _menuTimeout 00F6  
                   __size_of_moteApp_delayms 0032                    __end_of_moteApp_GoToSleep 33E2  
                    __size_of_USBDeviceTasks 0132                              ___lwdiv@divisor 00C0  
                                   _appTimer 00B3                                     _appState 0055  
                            ___lwdiv@counter 00C4                                     __ptext10 30F4  
                                   __ptext11 474A                                     __ptext20 486E  
                                   __ptext12 3A58                                     __ptext21 49B6  
                                   __ptext13 2394                                   _T1GCONbits 000FCC  
                                   __ptext30 1B10                                     __ptext22 4944  
                                   __ptext14 393C                                     __ptext31 47D2  
                                   __ptext23 2C26                                     __ptext15 349A  
                                   __ptext40 4AA0                                     __ptext32 4226  
                                   __ptext24 4974                                     __ptext16 4418  
                                   __ptext41 24B4                                     __ptext33 4494  
                                   __ptext25 4822                                     __ptext17 3D7A  
                                   __ptext50 3550                                     __ptext42 4350  
                                   __ptext34 0FBA                                     __ptext26 3BF0  
                                   __ptext18 1990                                     __ptext51 3F96  
                                   __ptext43 36B4                                     __ptext35 3AE2  
                                   __ptext27 3F30                                     __ptext19 332A  
                                   __ptext60 49DE                                     __ptext52 3E5C  
                                   __ptext44 4A90                                     __ptext36 427A  
                                   __ptext28 4394                                     __ptext61 2B46  
                                   __ptext53 4910                                     __ptext45 48F6  
                                   __ptext37 4626                                     __ptext29 4A5E  
                                   __ptext70 213C                                     __ptext62 4892  
                                   __ptext54 4848                                     __ptext46 4A14  
                                   __ptext38 44D0                                     __ptext71 46BA  
                                   __ptext63 33E2                                     __ptext55 3B6A  
                                   __ptext47 468A                                     __ptext39 4A68  
                                   __ptext80 498A                                     __ptext72 45F2  
                                   __ptext64 4AA6                                     __ptext56 4A24  
                                   __ptext48 4A44                                     __ptext81 4582  
                                   __ptext73 48B4                                     __ptext65 4AAC  
                                   __ptext57 495C                                     __ptext49 4A72  
                                   __ptext90 4778                                     __ptext82 4A02  
                                   __ptext74 49CA                                     __ptext66 4456  
                                   __ptext58 48D6                                     __ptext91 47FA  
                                   __ptext83 492A                                     __ptext75 4AB8  
                                   __ptext67 4548                                     __ptext59 4A34  
                                   __ptext92 43D6                                     __ptext84 4A7C  
                                   __ptext76 4658                                     __ptext68 1C72  
                                   __ptext93 2DCE                                     __ptext85 49A0  
                                   __ptext77 4ABC                                     __ptext69 31B2  
                                   __ptext94 3C74                                     __ptext78 49F0  
                                   __ptext95 26C6                                     __ptext87 4A98  
                                   __ptext79 42C6                                     __ptext96 380A  
                                   __ptext88 1EDC                                     __ptext97 28A0  
                                   __ptext89 2268                                     __ptext98 2982  
                                   __ptext99 47A6         __end_of_USBapp_CdcEmulatorInitialize 4226  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 41D0  
                               _SSP1CON1bits 000FC6                                     _dotCount 004E  
                                   _hexToStr 474A                           _service_pushbutton 3F96  
                            ___almod@divisor 00C2                            ??_TMR1_StartTimer 00BE  
                            ___almod@counter 00C6                  DATAEE_WriteByte@GIEBitValue 00C0  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 0088  
             __end_of_USBCtrlTrfSetupHandler 3CF8                                __size_of_main 0106  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0010  
                                   _rnModule 00A9                                   strncmp@len 00C2  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 00BE  
                  __end_of_ADC_GetConversion 44D0                     __size_of_CMP1_Initialize 0012  
                    __end_of_oled_displayOff 498A                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 00C3                          _USBCtrlTrfInHandler 2A64  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 004D  
                         __end_of_oled_clear 492A                          __end_of_test_switch 3030  
                                   _outPipes 0060                                     _test_adc 2CFE  
                       _USBCtrlTrfOutHandler 411A                                     int$flags 005C  
                                   _usbState 00A6                    _USBCtrlEPAllowStatusStage 3030  
                                  test_adc@L 00DA                                    test_adc@T 00DE  
                __size_of_Set_Column_Address 0020                            ??_TMR2_StartTimer 00BE  
         __end_of_INTERRUPT_InterruptManager 00DA                   _INTERRUPT_InterruptManager 0008  
                               _SSP1STATbits 000FC7                                  _sendCommand 468A  
                     ??_USBTransferOnePacket 00C2                           oled_clearRow@index 00CC  
                         _EUSART_FlushBuffer 4394                                 ??_test_comms 00D0  
               __end_of_USBapp_setrxByteFlag 4AA0                                  _moduleSleep 4822  
                                _moteHandler 1752                             ??_TMR2_ReadTimer 00BE  
                       ??_service_pushbutton 00BE                    _USBDeferStatusStagePacket 0045  
                   CDCTxService@byte_to_send 00C9                                   _INTCONbits 000FF2  
                __end_of_USBapp_handlerState 4A7C                         ?_USBCtrlTrfInHandler 0001  
                        ?_EUSART_FlushBuffer 0001                  __size_of_ADC_TempConversion 0028  
              USBCtrlTrfTxService@byteToSend 0001                                     memset@p1 00BE  
                           ?_USBStallHandler 0001                     USBStdFeatureReqHandler@p 001A  
                          ?_Set_Page_Address 0001                     ??_MOTEapp_TimerBasedTask 00BE  
                               _responseData 01A0                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                                  ??_oled_init 00CD  
                ??_MOTEapp_getModuleResponse 00BF                           ??_Set_Page_Address 00C0  
                     __size_of_USBDeviceInit 012C      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 411A  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 40BE  
             moteJoiningProcess@messageReady 00D5                             ___lwmod@dividend 00BE  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                           ??_USBapp_Handler 00D0                             ??_TMRapp_Handler 00C8  
                      __size_of_test_powerup 0044                         moteHandler@gotoSleep 00E9  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 00BE  
                                  strncmp@s2 00C0                             ??_ADC_Initialize 00BE  
                         __end_of_test_comms 3F30                         ??_EUSART_FlushBuffer 00BE  
                    __end_of_oled_setDisplay 495C                               _oled_putUint16 2394  
                           _SPI_Exchange8bit 49DE                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00AA                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 3E5C  
                                _putUSBUSART 4892                           _EUSART_Receive_ISR 471A  
                          oled_clearRow@page 00CB                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 1DA8                           _USBWakeFromSuspend 4778  
                                ??_test_leds 00D0                                _powerOnStatus 00B1  
                                ??_test_oled 00D0                      _USBStdFeatureReqHandler 14EE  
    __end_of_USBapp_DeviceCdcEmulatorHandler 2C26     __size_of_USBapp_DeviceCdcEmulatorHandler 00E0  
           ?_USBapp_DeviceCdcEmulatorHandler 0001            ??_USBapp_DeviceCdcEmulatorHandler 00CB  
            _USBapp_DeviceCdcEmulatorHandler 2B46                           _USBCheckCDCRequest 3604  
                        _USBCtrlTrfTxService 2E9C                          __end_of_TMRapp_Tick 4AB8  
                      __end_of_oled_clearRow 486E                                  _temperature 0094  
                        ?_EUSART_Receive_ISR 0001                               _oled_writeData 4A24  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 00BE  
                                   strcmp@s2 00C0                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 00C0                             ??_USBapp_exitCDC 00BE  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 0057  
                            ___lwmod@counter 00C2                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00B8                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 27B8                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0048  
                                 _WDTCONbits 000FD1                                 _test_powerup 430C  
                            _sendDataCommand 30F4                         ?_USBCtrlTrfRxService 0001  
                              ?_getsUSBUSART 00C5                     oled_putUint8@station_dot 00D0  
                         __CFG_FOSC$INTOSCIO 000000                           EUSART_Write@txData 00BE  
               __size_of_EUSART_Transmit_ISR 0030               __end_of_PIN_MANAGER_Initialize 430C  
                   ?_USBCtrlEPAllowDataStage 0001           __size_of_moteApp_add8bToDataBuffer 00B6  
                               ___almod@sign 00C7                         ?_USBCtrlTrfTxService 0001  
                          ??_moteApp_delayms 00C0                          ?_moteApp_toggleLeds 0001  
               _USBStatusStageTimeoutCounter 0046                                  _test_switch 2F68  
                       ??_EUSART_Receive_ISR 0001                         ??_USBWakeFromSuspend 0016  
                     __end_of_oled_putUint16 24B4                   USBTransferOnePacket@handle 00C3  
                 __size_of_ADC_GetConversion 003C                         __end_of_CDCTxService 1DA8  
                            _TMR1_Initialize 4658            moteJoiningProcess@joiningComplete 00D4  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 3AE2  
                     __end_of_oled_putString 3EC8                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 7659  
