

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 22 10:14:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   164                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   165                           	dabs	1,0x400,48,_BDT
   166                           	dabs	1,0x500,64,_cdc_data_tx
   167                           	dabs	1,0x438,8,_CtrlTrfData
   168                           	dabs	1,0x430,8,_SetupPkt
   169                           	dabs	1,0x540,64,_cdc_data_rx
   170  0000                     
   171                           ; Version 1.45
   172                           ; Generated 16/11/2017 GMT
   173                           ; 
   174                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution.
   188                           ; 
   189                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   190                           ;        software without specific prior written permission.
   191                           ; 
   192                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   193                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   194                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   195                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   196                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   197                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   198                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   199                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   200                           ; 
   201                           ; 
   202                           ; Code-generator required, PIC18LF45K50 Definitions
   203                           ; 
   204                           ; SFR Addresses
   205  0000                     
   206                           	psect	idataCOMRAM
   207  0057C8                     __pidataCOMRAM:
   208                           	opt stack 0
   209                           
   210                           ;initializer for _Contrast_level
   211  0057C8  13                 	db	19
   212                           
   213                           ;initializer for _dataRateSelection
   214  0057C9  02                 	db	2
   215                           
   216                           	psect	idataBANK0
   217  00577A                     __pidataBANK0:
   218                           	opt stack 0
   219                           
   220                           ;initializer for _exitUSB
   221  00577A  01                 	db	1
   222                           
   223                           ;initializer for _rnModule
   224  00577B  01                 	db	1
   225                           
   226                           ;initializer for _periodicState
   227  00577C  03                 	db	3
   228                           
   229                           ;initializer for _menuTimeout
   230  00577D  01                 	db	1
   231                           
   232                           ;initializer for _dataRateValue
   233  00577E  02                 	db	2
   234                           
   235                           ;initializer for _periodicTimerValue
   236  00577F  03                 	db	3
   237                           
   238                           ;initializer for _periodicUpValue
   239  005780  03                 	db	3
   240                           
   241                           ;initializer for _moteState
   242  005781  01                 	db	1
   243                           
   244                           	psect	idataBANK1
   245  0057CA                     __pidataBANK1:
   246                           	opt stack 0
   247                           
   248                           ;initializer for _selectedFont
   249  0057CA  FD                 	db	low _OledFont0
   250  0057CB  75                 	db	high _OledFont0
   251                           
   252                           	psect	mediumconst
   253  0075F4                     __pmediumconst:
   254                           	opt stack 0
   255  0075F4  00                 	db	0
   256  0075F5                     _USB_SD_Ptr:
   257                           	opt stack 0
   258  0075F5  BA                 	db	low _sd000
   259  0075F6  79                 	db	high _sd000
   260  0075F7  74                 	db	low _sd001
   261  0075F8  79                 	db	high _sd001
   262  0075F9  40                 	db	low _sd002
   263  0075FA  79                 	db	high _sd002
   264  0075FB                     __end_of_USB_SD_Ptr:
   265                           	opt stack 0
   266  0075FB                     _USB_CD_Ptr:
   267                           	opt stack 0
   268  0075FB  FD                 	db	low _configDescriptor1
   269  0075FC  78                 	db	high _configDescriptor1
   270  0075FD                     __end_of_USB_CD_Ptr:
   271                           	opt stack 0
   272  0075FD                     _OledFont0:
   273                           	opt stack 0
   274  0075FD  00                 	db	0
   275  0075FE  00                 	db	0
   276  0075FF  00                 	db	0
   277  007600  00                 	db	0
   278  007601  00                 	db	0
   279  007602  00                 	db	0
   280  007603  00                 	db	0
   281  007604  00                 	db	0
   282  007605  00                 	db	0
   283  007606  00                 	db	0
   284  007607  00                 	db	0
   285  007608  5F                 	db	95
   286  007609  00                 	db	0
   287  00760A  00                 	db	0
   288  00760B  00                 	db	0
   289  00760C  00                 	db	0
   290  00760D  00                 	db	0
   291  00760E  00                 	db	0
   292  00760F  03                 	db	3
   293  007610  00                 	db	0
   294  007611  03                 	db	3
   295  007612  00                 	db	0
   296  007613  00                 	db	0
   297  007614  00                 	db	0
   298  007615  64                 	db	100
   299  007616  3C                 	db	60
   300  007617  26                 	db	38
   301  007618  64                 	db	100
   302  007619  3C                 	db	60
   303  00761A  26                 	db	38
   304  00761B  24                 	db	36
   305  00761C  00                 	db	0
   306  00761D  26                 	db	38
   307  00761E  49                 	db	73
   308  00761F  49                 	db	73
   309  007620  7F                 	db	127
   310  007621  49                 	db	73
   311  007622  49                 	db	73
   312  007623  32                 	db	50
   313  007624  00                 	db	0
   314  007625  42                 	db	66
   315  007626  25                 	db	37
   316  007627  12                 	db	18
   317  007628  08                 	db	8
   318  007629  24                 	db	36
   319  00762A  52                 	db	82
   320  00762B  21                 	db	33
   321  00762C  00                 	db	0
   322  00762D  20                 	db	32
   323  00762E  50                 	db	80
   324  00762F  4E                 	db	78
   325  007630  55                 	db	85
   326  007631  22                 	db	34
   327  007632  58                 	db	88
   328  007633  28                 	db	40
   329  007634  00                 	db	0
   330  007635  00                 	db	0
   331  007636  00                 	db	0
   332  007637  00                 	db	0
   333  007638  03                 	db	3
   334  007639  00                 	db	0
   335  00763A  00                 	db	0
   336  00763B  00                 	db	0
   337  00763C  00                 	db	0
   338  00763D  00                 	db	0
   339  00763E  00                 	db	0
   340  00763F  1C                 	db	28
   341  007640  22                 	db	34
   342  007641  41                 	db	65
   343  007642  00                 	db	0
   344  007643  00                 	db	0
   345  007644  00                 	db	0
   346  007645  00                 	db	0
   347  007646  00                 	db	0
   348  007647  00                 	db	0
   349  007648  41                 	db	65
   350  007649  22                 	db	34
   351  00764A  1C                 	db	28
   352  00764B  00                 	db	0
   353  00764C  00                 	db	0
   354  00764D  00                 	db	0
   355  00764E  15                 	db	21
   356  00764F  15                 	db	21
   357  007650  0E                 	db	14
   358  007651  0E                 	db	14
   359  007652  15                 	db	21
   360  007653  15                 	db	21
   361  007654  00                 	db	0
   362  007655  00                 	db	0
   363  007656  08                 	db	8
   364  007657  08                 	db	8
   365  007658  3E                 	db	62
   366  007659  08                 	db	8
   367  00765A  08                 	db	8
   368  00765B  00                 	db	0
   369  00765C  00                 	db	0
   370  00765D  00                 	db	0
   371  00765E  00                 	db	0
   372  00765F  00                 	db	0
   373  007660  50                 	db	80
   374  007661  30                 	db	48
   375  007662  00                 	db	0
   376  007663  00                 	db	0
   377  007664  00                 	db	0
   378  007665  00                 	db	0
   379  007666  08                 	db	8
   380  007667  08                 	db	8
   381  007668  08                 	db	8
   382  007669  08                 	db	8
   383  00766A  08                 	db	8
   384  00766B  00                 	db	0
   385  00766C  00                 	db	0
   386  00766D  00                 	db	0
   387  00766E  00                 	db	0
   388  00766F  00                 	db	0
   389  007670  40                 	db	64
   390  007671  00                 	db	0
   391  007672  00                 	db	0
   392  007673  00                 	db	0
   393  007674  00                 	db	0
   394  007675  40                 	db	64
   395  007676  20                 	db	32
   396  007677  10                 	db	16
   397  007678  08                 	db	8
   398  007679  04                 	db	4
   399  00767A  02                 	db	2
   400  00767B  01                 	db	1
   401  00767C  00                 	db	0
   402  00767D  00                 	db	0
   403  00767E  3E                 	db	62
   404  00767F  41                 	db	65
   405  007680  41                 	db	65
   406  007681  41                 	db	65
   407  007682  3E                 	db	62
   408  007683  00                 	db	0
   409  007684  00                 	db	0
   410  007685  00                 	db	0
   411  007686  00                 	db	0
   412  007687  41                 	db	65
   413  007688  7F                 	db	127
   414  007689  40                 	db	64
   415  00768A  00                 	db	0
   416  00768B  00                 	db	0
   417  00768C  00                 	db	0
   418  00768D  00                 	db	0
   419  00768E  42                 	db	66
   420  00768F  61                 	db	97
   421  007690  51                 	db	81
   422  007691  49                 	db	73
   423  007692  6E                 	db	110
   424  007693  00                 	db	0
   425  007694  00                 	db	0
   426  007695  00                 	db	0
   427  007696  22                 	db	34
   428  007697  41                 	db	65
   429  007698  49                 	db	73
   430  007699  49                 	db	73
   431  00769A  36                 	db	54
   432  00769B  00                 	db	0
   433  00769C  00                 	db	0
   434  00769D  00                 	db	0
   435  00769E  18                 	db	24
   436  00769F  14                 	db	20
   437  0076A0  12                 	db	18
   438  0076A1  7F                 	db	127
   439  0076A2  10                 	db	16
   440  0076A3  00                 	db	0
   441  0076A4  00                 	db	0
   442  0076A5  00                 	db	0
   443  0076A6  27                 	db	39
   444  0076A7  49                 	db	73
   445  0076A8  49                 	db	73
   446  0076A9  49                 	db	73
   447  0076AA  71                 	db	113
   448  0076AB  00                 	db	0
   449  0076AC  00                 	db	0
   450  0076AD  00                 	db	0
   451  0076AE  3C                 	db	60
   452  0076AF  4A                 	db	74
   453  0076B0  49                 	db	73
   454  0076B1  48                 	db	72
   455  0076B2  70                 	db	112
   456  0076B3  00                 	db	0
   457  0076B4  00                 	db	0
   458  0076B5  00                 	db	0
   459  0076B6  43                 	db	67
   460  0076B7  21                 	db	33
   461  0076B8  11                 	db	17
   462  0076B9  0D                 	db	13
   463  0076BA  03                 	db	3
   464  0076BB  00                 	db	0
   465  0076BC  00                 	db	0
   466  0076BD  00                 	db	0
   467  0076BE  36                 	db	54
   468  0076BF  49                 	db	73
   469  0076C0  49                 	db	73
   470  0076C1  49                 	db	73
   471  0076C2  36                 	db	54
   472  0076C3  00                 	db	0
   473  0076C4  00                 	db	0
   474  0076C5  00                 	db	0
   475  0076C6  06                 	db	6
   476  0076C7  09                 	db	9
   477  0076C8  49                 	db	73
   478  0076C9  29                 	db	41
   479  0076CA  1E                 	db	30
   480  0076CB  00                 	db	0
   481  0076CC  00                 	db	0
   482  0076CD  00                 	db	0
   483  0076CE  00                 	db	0
   484  0076CF  00                 	db	0
   485  0076D0  12                 	db	18
   486  0076D1  00                 	db	0
   487  0076D2  00                 	db	0
   488  0076D3  00                 	db	0
   489  0076D4  00                 	db	0
   490  0076D5  00                 	db	0
   491  0076D6  00                 	db	0
   492  0076D7  00                 	db	0
   493  0076D8  52                 	db	82
   494  0076D9  30                 	db	48
   495  0076DA  00                 	db	0
   496  0076DB  00                 	db	0
   497  0076DC  00                 	db	0
   498  0076DD  00                 	db	0
   499  0076DE  00                 	db	0
   500  0076DF  08                 	db	8
   501  0076E0  14                 	db	20
   502  0076E1  14                 	db	20
   503  0076E2  22                 	db	34
   504  0076E3  00                 	db	0
   505  0076E4  00                 	db	0
   506  0076E5  00                 	db	0
   507  0076E6  14                 	db	20
   508  0076E7  14                 	db	20
   509  0076E8  14                 	db	20
   510  0076E9  14                 	db	20
   511  0076EA  14                 	db	20
   512  0076EB  14                 	db	20
   513  0076EC  00                 	db	0
   514  0076ED  00                 	db	0
   515  0076EE  00                 	db	0
   516  0076EF  22                 	db	34
   517  0076F0  14                 	db	20
   518  0076F1  14                 	db	20
   519  0076F2  08                 	db	8
   520  0076F3  00                 	db	0
   521  0076F4  00                 	db	0
   522  0076F5  00                 	db	0
   523  0076F6  02                 	db	2
   524  0076F7  01                 	db	1
   525  0076F8  59                 	db	89
   526  0076F9  05                 	db	5
   527  0076FA  02                 	db	2
   528  0076FB  00                 	db	0
   529  0076FC  00                 	db	0
   530  0076FD  3E                 	db	62
   531  0076FE  41                 	db	65
   532  0076FF  5D                 	db	93
   533  007700  55                 	db	85
   534  007701  4D                 	db	77
   535  007702  51                 	db	81
   536  007703  2E                 	db	46
   537  007704  00                 	db	0
   538  007705  40                 	db	64
   539  007706  7C                 	db	124
   540  007707  4A                 	db	74
   541  007708  09                 	db	9
   542  007709  4A                 	db	74
   543  00770A  7C                 	db	124
   544  00770B  40                 	db	64
   545  00770C  00                 	db	0
   546  00770D  41                 	db	65
   547  00770E  7F                 	db	127
   548  00770F  49                 	db	73
   549  007710  49                 	db	73
   550  007711  49                 	db	73
   551  007712  49                 	db	73
   552  007713  36                 	db	54
   553  007714  00                 	db	0
   554  007715  1C                 	db	28
   555  007716  22                 	db	34
   556  007717  41                 	db	65
   557  007718  41                 	db	65
   558  007719  41                 	db	65
   559  00771A  41                 	db	65
   560  00771B  22                 	db	34
   561  00771C  00                 	db	0
   562  00771D  41                 	db	65
   563  00771E  7F                 	db	127
   564  00771F  41                 	db	65
   565  007720  41                 	db	65
   566  007721  41                 	db	65
   567  007722  22                 	db	34
   568  007723  1C                 	db	28
   569  007724  00                 	db	0
   570  007725  41                 	db	65
   571  007726  7F                 	db	127
   572  007727  49                 	db	73
   573  007728  49                 	db	73
   574  007729  5D                 	db	93
   575  00772A  41                 	db	65
   576  00772B  63                 	db	99
   577  00772C  00                 	db	0
   578  00772D  41                 	db	65
   579  00772E  7F                 	db	127
   580  00772F  49                 	db	73
   581  007730  09                 	db	9
   582  007731  1D                 	db	29
   583  007732  01                 	db	1
   584  007733  03                 	db	3
   585  007734  00                 	db	0
   586  007735  1C                 	db	28
   587  007736  22                 	db	34
   588  007737  41                 	db	65
   589  007738  49                 	db	73
   590  007739  49                 	db	73
   591  00773A  3A                 	db	58
   592  00773B  08                 	db	8
   593  00773C  00                 	db	0
   594  00773D  41                 	db	65
   595  00773E  7F                 	db	127
   596  00773F  08                 	db	8
   597  007740  08                 	db	8
   598  007741  08                 	db	8
   599  007742  7F                 	db	127
   600  007743  41                 	db	65
   601  007744  00                 	db	0
   602  007745  00                 	db	0
   603  007746  41                 	db	65
   604  007747  41                 	db	65
   605  007748  7F                 	db	127
   606  007749  41                 	db	65
   607  00774A  41                 	db	65
   608  00774B  00                 	db	0
   609  00774C  00                 	db	0
   610  00774D  30                 	db	48
   611  00774E  40                 	db	64
   612  00774F  41                 	db	65
   613  007750  41                 	db	65
   614  007751  3F                 	db	63
   615  007752  01                 	db	1
   616  007753  01                 	db	1
   617  007754  00                 	db	0
   618  007755  41                 	db	65
   619  007756  7F                 	db	127
   620  007757  08                 	db	8
   621  007758  0C                 	db	12
   622  007759  12                 	db	18
   623  00775A  61                 	db	97
   624  00775B  41                 	db	65
   625  00775C  00                 	db	0
   626  00775D  41                 	db	65
   627  00775E  7F                 	db	127
   628  00775F  41                 	db	65
   629  007760  40                 	db	64
   630  007761  40                 	db	64
   631  007762  40                 	db	64
   632  007763  60                 	db	96
   633  007764  00                 	db	0
   634  007765  41                 	db	65
   635  007766  7F                 	db	127
   636  007767  42                 	db	66
   637  007768  0C                 	db	12
   638  007769  42                 	db	66
   639  00776A  7F                 	db	127
   640  00776B  41                 	db	65
   641  00776C  00                 	db	0
   642  00776D  41                 	db	65
   643  00776E  7F                 	db	127
   644  00776F  42                 	db	66
   645  007770  0C                 	db	12
   646  007771  11                 	db	17
   647  007772  7F                 	db	127
   648  007773  01                 	db	1
   649  007774  00                 	db	0
   650  007775  1C                 	db	28
   651  007776  22                 	db	34
   652  007777  41                 	db	65
   653  007778  41                 	db	65
   654  007779  41                 	db	65
   655  00777A  22                 	db	34
   656  00777B  1C                 	db	28
   657  00777C  00                 	db	0
   658  00777D  41                 	db	65
   659  00777E  7F                 	db	127
   660  00777F  49                 	db	73
   661  007780  09                 	db	9
   662  007781  09                 	db	9
   663  007782  09                 	db	9
   664  007783  06                 	db	6
   665  007784  00                 	db	0
   666  007785  0C                 	db	12
   667  007786  12                 	db	18
   668  007787  21                 	db	33
   669  007788  21                 	db	33
   670  007789  61                 	db	97
   671  00778A  52                 	db	82
   672  00778B  4C                 	db	76
   673  00778C  00                 	db	0
   674  00778D  41                 	db	65
   675  00778E  7F                 	db	127
   676  00778F  09                 	db	9
   677  007790  09                 	db	9
   678  007791  19                 	db	25
   679  007792  69                 	db	105
   680  007793  46                 	db	70
   681  007794  00                 	db	0
   682  007795  66                 	db	102
   683  007796  49                 	db	73
   684  007797  49                 	db	73
   685  007798  49                 	db	73
   686  007799  49                 	db	73
   687  00779A  49                 	db	73
   688  00779B  33                 	db	51
   689  00779C  00                 	db	0
   690  00779D  03                 	db	3
   691  00779E  01                 	db	1
   692  00779F  41                 	db	65
   693  0077A0  7F                 	db	127
   694  0077A1  41                 	db	65
   695  0077A2  01                 	db	1
   696  0077A3  03                 	db	3
   697  0077A4  00                 	db	0
   698  0077A5  01                 	db	1
   699  0077A6  3F                 	db	63
   700  0077A7  41                 	db	65
   701  0077A8  40                 	db	64
   702  0077A9  41                 	db	65
   703  0077AA  3F                 	db	63
   704  0077AB  01                 	db	1
   705  0077AC  00                 	db	0
   706  0077AD  01                 	db	1
   707  0077AE  0F                 	db	15
   708  0077AF  31                 	db	49
   709  0077B0  40                 	db	64
   710  0077B1  31                 	db	49
   711  0077B2  0F                 	db	15
   712  0077B3  01                 	db	1
   713  0077B4  00                 	db	0
   714  0077B5  01                 	db	1
   715  0077B6  1F                 	db	31
   716  0077B7  61                 	db	97
   717  0077B8  14                 	db	20
   718  0077B9  61                 	db	97
   719  0077BA  1F                 	db	31
   720  0077BB  01                 	db	1
   721  0077BC  00                 	db	0
   722  0077BD  41                 	db	65
   723  0077BE  41                 	db	65
   724  0077BF  36                 	db	54
   725  0077C0  08                 	db	8
   726  0077C1  36                 	db	54
   727  0077C2  41                 	db	65
   728  0077C3  41                 	db	65
   729  0077C4  00                 	db	0
   730  0077C5  01                 	db	1
   731  0077C6  03                 	db	3
   732  0077C7  44                 	db	68
   733  0077C8  78                 	db	120
   734  0077C9  44                 	db	68
   735  0077CA  03                 	db	3
   736  0077CB  01                 	db	1
   737  0077CC  00                 	db	0
   738  0077CD  43                 	db	67
   739  0077CE  61                 	db	97
   740  0077CF  51                 	db	81
   741  0077D0  49                 	db	73
   742  0077D1  45                 	db	69
   743  0077D2  43                 	db	67
   744  0077D3  61                 	db	97
   745  0077D4  00                 	db	0
   746  0077D5  00                 	db	0
   747  0077D6  00                 	db	0
   748  0077D7  7F                 	db	127
   749  0077D8  41                 	db	65
   750  0077D9  41                 	db	65
   751  0077DA  00                 	db	0
   752  0077DB  00                 	db	0
   753  0077DC  00                 	db	0
   754  0077DD  01                 	db	1
   755  0077DE  02                 	db	2
   756  0077DF  04                 	db	4
   757  0077E0  08                 	db	8
   758  0077E1  10                 	db	16
   759  0077E2  20                 	db	32
   760  0077E3  40                 	db	64
   761  0077E4  00                 	db	0
   762  0077E5  00                 	db	0
   763  0077E6  00                 	db	0
   764  0077E7  41                 	db	65
   765  0077E8  41                 	db	65
   766  0077E9  7F                 	db	127
   767  0077EA  00                 	db	0
   768  0077EB  00                 	db	0
   769  0077EC  00                 	db	0
   770  0077ED  00                 	db	0
   771  0077EE  04                 	db	4
   772  0077EF  02                 	db	2
   773  0077F0  01                 	db	1
   774  0077F1  01                 	db	1
   775  0077F2  02                 	db	2
   776  0077F3  04                 	db	4
   777  0077F4  00                 	db	0
   778  0077F5  00                 	db	0
   779  0077F6  40                 	db	64
   780  0077F7  40                 	db	64
   781  0077F8  40                 	db	64
   782  0077F9  40                 	db	64
   783  0077FA  40                 	db	64
   784  0077FB  40                 	db	64
   785  0077FC  00                 	db	0
   786  0077FD  00                 	db	0
   787  0077FE  01                 	db	1
   788  0077FF  02                 	db	2
   789  007800  00                 	db	0
   790  007801  00                 	db	0
   791  007802  00                 	db	0
   792  007803  00                 	db	0
   793  007804  00                 	db	0
   794  007805  00                 	db	0
   795  007806  34                 	db	52
   796  007807  4A                 	db	74
   797  007808  4A                 	db	74
   798  007809  4A                 	db	74
   799  00780A  3C                 	db	60
   800  00780B  40                 	db	64
   801  00780C  00                 	db	0
   802  00780D  00                 	db	0
   803  00780E  41                 	db	65
   804  00780F  3F                 	db	63
   805  007810  48                 	db	72
   806  007811  48                 	db	72
   807  007812  48                 	db	72
   808  007813  30                 	db	48
   809  007814  00                 	db	0
   810  007815  00                 	db	0
   811  007816  3C                 	db	60
   812  007817  42                 	db	66
   813  007818  42                 	db	66
   814  007819  42                 	db	66
   815  00781A  24                 	db	36
   816  00781B  00                 	db	0
   817  00781C  00                 	db	0
   818  00781D  00                 	db	0
   819  00781E  30                 	db	48
   820  00781F  48                 	db	72
   821  007820  48                 	db	72
   822  007821  49                 	db	73
   823  007822  3F                 	db	63
   824  007823  40                 	db	64
   825  007824  00                 	db	0
   826  007825  00                 	db	0
   827  007826  3C                 	db	60
   828  007827  4A                 	db	74
   829  007828  4A                 	db	74
   830  007829  4A                 	db	74
   831  00782A  2C                 	db	44
   832  00782B  00                 	db	0
   833  00782C  00                 	db	0
   834  00782D  00                 	db	0
   835  00782E  00                 	db	0
   836  00782F  48                 	db	72
   837  007830  7E                 	db	126
   838  007831  49                 	db	73
   839  007832  09                 	db	9
   840  007833  00                 	db	0
   841  007834  00                 	db	0
   842  007835  00                 	db	0
   843  007836  26                 	db	38
   844  007837  49                 	db	73
   845  007838  49                 	db	73
   846  007839  49                 	db	73
   847  00783A  3F                 	db	63
   848  00783B  01                 	db	1
   849  00783C  00                 	db	0
   850  00783D  41                 	db	65
   851  00783E  7F                 	db	127
   852  00783F  48                 	db	72
   853  007840  04                 	db	4
   854  007841  44                 	db	68
   855  007842  78                 	db	120
   856  007843  40                 	db	64
   857  007844  00                 	db	0
   858  007845  00                 	db	0
   859  007846  00                 	db	0
   860  007847  44                 	db	68
   861  007848  7D                 	db	125
   862  007849  40                 	db	64
   863  00784A  00                 	db	0
   864  00784B  00                 	db	0
   865  00784C  00                 	db	0
   866  00784D  00                 	db	0
   867  00784E  00                 	db	0
   868  00784F  40                 	db	64
   869  007850  44                 	db	68
   870  007851  3D                 	db	61
   871  007852  00                 	db	0
   872  007853  00                 	db	0
   873  007854  00                 	db	0
   874  007855  41                 	db	65
   875  007856  7F                 	db	127
   876  007857  10                 	db	16
   877  007858  18                 	db	24
   878  007859  24                 	db	36
   879  00785A  42                 	db	66
   880  00785B  42                 	db	66
   881  00785C  00                 	db	0
   882  00785D  00                 	db	0
   883  00785E  40                 	db	64
   884  00785F  41                 	db	65
   885  007860  7F                 	db	127
   886  007861  40                 	db	64
   887  007862  40                 	db	64
   888  007863  00                 	db	0
   889  007864  00                 	db	0
   890  007865  42                 	db	66
   891  007866  7E                 	db	126
   892  007867  02                 	db	2
   893  007868  7C                 	db	124
   894  007869  02                 	db	2
   895  00786A  7E                 	db	126
   896  00786B  40                 	db	64
   897  00786C  00                 	db	0
   898  00786D  42                 	db	66
   899  00786E  7E                 	db	126
   900  00786F  44                 	db	68
   901  007870  02                 	db	2
   902  007871  42                 	db	66
   903  007872  7C                 	db	124
   904  007873  40                 	db	64
   905  007874  00                 	db	0
   906  007875  00                 	db	0
   907  007876  3C                 	db	60
   908  007877  42                 	db	66
   909  007878  42                 	db	66
   910  007879  42                 	db	66
   911  00787A  3C                 	db	60
   912  00787B  00                 	db	0
   913  00787C  00                 	db	0
   914  00787D  00                 	db	0
   915  00787E  41                 	db	65
   916  00787F  7F                 	db	127
   917  007880  49                 	db	73
   918  007881  09                 	db	9
   919  007882  09                 	db	9
   920  007883  06                 	db	6
   921  007884  00                 	db	0
   922  007885  00                 	db	0
   923  007886  06                 	db	6
   924  007887  09                 	db	9
   925  007888  09                 	db	9
   926  007889  49                 	db	73
   927  00788A  7F                 	db	127
   928  00788B  41                 	db	65
   929  00788C  00                 	db	0
   930  00788D  00                 	db	0
   931  00788E  42                 	db	66
   932  00788F  7E                 	db	126
   933  007890  44                 	db	68
   934  007891  02                 	db	2
   935  007892  02                 	db	2
   936  007893  04                 	db	4
   937  007894  00                 	db	0
   938  007895  00                 	db	0
   939  007896  64                 	db	100
   940  007897  4A                 	db	74
   941  007898  4A                 	db	74
   942  007899  4A                 	db	74
   943  00789A  36                 	db	54
   944  00789B  00                 	db	0
   945  00789C  00                 	db	0
   946  00789D  00                 	db	0
   947  00789E  04                 	db	4
   948  00789F  3F                 	db	63
   949  0078A0  44                 	db	68
   950  0078A1  44                 	db	68
   951  0078A2  20                 	db	32
   952  0078A3  00                 	db	0
   953  0078A4  00                 	db	0
   954  0078A5  00                 	db	0
   955  0078A6  02                 	db	2
   956  0078A7  3E                 	db	62
   957  0078A8  40                 	db	64
   958  0078A9  40                 	db	64
   959  0078AA  22                 	db	34
   960  0078AB  7E                 	db	126
   961  0078AC  40                 	db	64
   962  0078AD  02                 	db	2
   963  0078AE  0E                 	db	14
   964  0078AF  32                 	db	50
   965  0078B0  40                 	db	64
   966  0078B1  32                 	db	50
   967  0078B2  0E                 	db	14
   968  0078B3  02                 	db	2
   969  0078B4  00                 	db	0
   970  0078B5  02                 	db	2
   971  0078B6  1E                 	db	30
   972  0078B7  62                 	db	98
   973  0078B8  18                 	db	24
   974  0078B9  62                 	db	98
   975  0078BA  1E                 	db	30
   976  0078BB  02                 	db	2
   977  0078BC  00                 	db	0
   978  0078BD  42                 	db	66
   979  0078BE  62                 	db	98
   980  0078BF  14                 	db	20
   981  0078C0  08                 	db	8
   982  0078C1  14                 	db	20
   983  0078C2  62                 	db	98
   984  0078C3  42                 	db	66
   985  0078C4  00                 	db	0
   986  0078C5  01                 	db	1
   987  0078C6  43                 	db	67
   988  0078C7  45                 	db	69
   989  0078C8  38                 	db	56
   990  0078C9  05                 	db	5
   991  0078CA  03                 	db	3
   992  0078CB  01                 	db	1
   993  0078CC  00                 	db	0
   994  0078CD  00                 	db	0
   995  0078CE  46                 	db	70
   996  0078CF  62                 	db	98
   997  0078D0  52                 	db	82
   998  0078D1  4A                 	db	74
   999  0078D2  46                 	db	70
  1000  0078D3  62                 	db	98
  1001  0078D4  00                 	db	0
  1002  0078D5  00                 	db	0
  1003  0078D6  00                 	db	0
  1004  0078D7  08                 	db	8
  1005  0078D8  36                 	db	54
  1006  0078D9  41                 	db	65
  1007  0078DA  00                 	db	0
  1008  0078DB  00                 	db	0
  1009  0078DC  00                 	db	0
  1010  0078DD  00                 	db	0
  1011  0078DE  00                 	db	0
  1012  0078DF  00                 	db	0
  1013  0078E0  7F                 	db	127
  1014  0078E1  00                 	db	0
  1015  0078E2  00                 	db	0
  1016  0078E3  00                 	db	0
  1017  0078E4  00                 	db	0
  1018  0078E5  00                 	db	0
  1019  0078E6  00                 	db	0
  1020  0078E7  00                 	db	0
  1021  0078E8  41                 	db	65
  1022  0078E9  36                 	db	54
  1023  0078EA  08                 	db	8
  1024  0078EB  00                 	db	0
  1025  0078EC  00                 	db	0
  1026  0078ED  00                 	db	0
  1027  0078EE  18                 	db	24
  1028  0078EF  08                 	db	8
  1029  0078F0  08                 	db	8
  1030  0078F1  10                 	db	16
  1031  0078F2  10                 	db	16
  1032  0078F3  18                 	db	24
  1033  0078F4  00                 	db	0
  1034  0078F5  AA                 	db	170
  1035  0078F6  55                 	db	85
  1036  0078F7  AA                 	db	170
  1037  0078F8  55                 	db	85
  1038  0078F9  AA                 	db	170
  1039  0078FA  55                 	db	85
  1040  0078FB  AA                 	db	170
  1041  0078FC  55                 	db	85
  1042  0078FD                     __end_of_OledFont0:
  1043                           	opt stack 0
  1044  0078FD                     _configDescriptor1:
  1045                           	opt stack 0
  1046  0078FD  09                 	db	9
  1047  0078FE  02                 	db	2
  1048  0078FF  43                 	db	67
  1049  007900  00                 	db	0
  1050  007901  02                 	db	2
  1051  007902  01                 	db	1
  1052  007903  00                 	db	0
  1053  007904  C0                 	db	192
  1054  007905  32                 	db	50
  1055  007906  09                 	db	9
  1056  007907  04                 	db	4
  1057  007908  00                 	db	0
  1058  007909  00                 	db	0
  1059  00790A  01                 	db	1
  1060  00790B  02                 	db	2
  1061  00790C  02                 	db	2
  1062  00790D  01                 	db	1
  1063  00790E  00                 	db	0
  1064  00790F  05                 	db	5
  1065  007910  24                 	db	36
  1066  007911  00                 	db	0
  1067  007912  10                 	db	16
  1068  007913  01                 	db	1
  1069  007914  04                 	db	4
  1070  007915  24                 	db	36
  1071  007916  02                 	db	2
  1072  007917  02                 	db	2
  1073  007918  05                 	db	5
  1074  007919  24                 	db	36
  1075  00791A  06                 	db	6
  1076  00791B  00                 	db	0
  1077  00791C  01                 	db	1
  1078  00791D  05                 	db	5
  1079  00791E  24                 	db	36
  1080  00791F  01                 	db	1
  1081  007920  00                 	db	0
  1082  007921  01                 	db	1
  1083  007922  07                 	db	7
  1084  007923  05                 	db	5
  1085  007924  81                 	db	129
  1086  007925  03                 	db	3
  1087  007926  08                 	db	8
  1088  007927  00                 	db	0
  1089  007928  02                 	db	2
  1090  007929  09                 	db	9
  1091  00792A  04                 	db	4
  1092  00792B  01                 	db	1
  1093  00792C  00                 	db	0
  1094  00792D  02                 	db	2
  1095  00792E  0A                 	db	10
  1096  00792F  00                 	db	0
  1097  007930  00                 	db	0
  1098  007931  00                 	db	0
  1099  007932  07                 	db	7
  1100  007933  05                 	db	5
  1101  007934  02                 	db	2
  1102  007935  02                 	db	2
  1103  007936  40                 	db	64
  1104  007937  00                 	db	0
  1105  007938  00                 	db	0
  1106  007939  07                 	db	7
  1107  00793A  05                 	db	5
  1108  00793B  82                 	db	130
  1109  00793C  02                 	db	2
  1110  00793D  40                 	db	64
  1111  00793E  00                 	db	0
  1112  00793F  00                 	db	0
  1113  007940                     __end_of_configDescriptor1:
  1114                           	opt stack 0
  1115  007940                     _sd002:
  1116                           	opt stack 0
  1117  007940  34                 	db	52
  1118  007941  03                 	db	3
  1119  007942  0043               	dw	67
  1120  007944  0044               	dw	68
  1121  007946  0043               	dw	67
  1122  007948  0020               	dw	32
  1123  00794A  0052               	dw	82
  1124  00794C  0053               	dw	83
  1125  00794E  002D               	dw	45
  1126  007950  0032               	dw	50
  1127  007952  0033               	dw	51
  1128  007954  0032               	dw	50
  1129  007956  0020               	dw	32
  1130  007958  0045               	dw	69
  1131  00795A  006D               	dw	109
  1132  00795C  0075               	dw	117
  1133  00795E  006C               	dw	108
  1134  007960  0061               	dw	97
  1135  007962  0074               	dw	116
  1136  007964  0069               	dw	105
  1137  007966  006F               	dw	111
  1138  007968  006E               	dw	110
  1139  00796A  0020               	dw	32
  1140  00796C  0044               	dw	68
  1141  00796E  0065               	dw	101
  1142  007970  006D               	dw	109
  1143  007972  006F               	dw	111
  1144  007974                     __end_of_sd002:
  1145                           	opt stack 0
  1146  007974                     _sd001:
  1147                           	opt stack 0
  1148  007974  34                 	db	52
  1149  007975  03                 	db	3
  1150  007976  004D               	dw	77
  1151  007978  0069               	dw	105
  1152  00797A  0063               	dw	99
  1153  00797C  0072               	dw	114
  1154  00797E  006F               	dw	111
  1155  007980  0063               	dw	99
  1156  007982  0068               	dw	104
  1157  007984  0069               	dw	105
  1158  007986  0070               	dw	112
  1159  007988  0020               	dw	32
  1160  00798A  0054               	dw	84
  1161  00798C  0065               	dw	101
  1162  00798E  0063               	dw	99
  1163  007990  0068               	dw	104
  1164  007992  006E               	dw	110
  1165  007994  006F               	dw	111
  1166  007996  006C               	dw	108
  1167  007998  006F               	dw	111
  1168  00799A  0067               	dw	103
  1169  00799C  0079               	dw	121
  1170  00799E  0020               	dw	32
  1171  0079A0  0049               	dw	73
  1172  0079A2  006E               	dw	110
  1173  0079A4  0063               	dw	99
  1174  0079A6  002E               	dw	46
  1175  0079A8                     __end_of_sd001:
  1176                           	opt stack 0
  1177  0079A8                     _device_dsc:
  1178                           	opt stack 0
  1179  0079A8  12                 	db	18
  1180  0079A9  01                 	db	1
  1181  0079AA  0200               	dw	512
  1182  0079AC  02                 	db	2
  1183  0079AD  00                 	db	0
  1184  0079AE  00                 	db	0
  1185  0079AF  08                 	db	8
  1186  0079B0  04D8               	dw	1240
  1187  0079B2  000A               	dw	10
  1188  0079B4  0100               	dw	256
  1189  0079B6  01                 	db	1
  1190  0079B7  02                 	db	2
  1191  0079B8  00                 	db	0
  1192  0079B9  01                 	db	1
  1193  0079BA                     __end_of_device_dsc:
  1194                           	opt stack 0
  1195  0079BA                     _sd000:
  1196                           	opt stack 0
  1197  0079BA  04                 	db	4
  1198  0079BB  03                 	db	3
  1199  0079BC  0409               	dw	1033
  1200  0079BE                     __end_of_sd000:
  1201                           	opt stack 0
  1202  0000                     _ANSELCbits	set	3933
  1203  0000                     _ANSELAbits	set	3931
  1204  0000                     _TMR3	set	4018
  1205  0000                     _UEP0bits	set	3946
  1206  0000                     _IPR3bits	set	4005
  1207  0000                     _RCONbits	set	4048
  1208  0000                     _UCON	set	3936
  1209  0000                     _USTAT	set	3937
  1210  0000                     _PIR3bits	set	4004
  1211  0000                     _UIEbits	set	3940
  1212  0000                     _UIRbits	set	3941
  1213  0000                     _UADDR	set	3939
  1214  0000                     _UIE	set	3940
  1215  0000                     _UEIE	set	3942
  1216  0000                     _UCFG	set	3938
  1217  0000                     _UIR	set	3941
  1218  0000                     _UEIR	set	3943
  1219  0000                     _PIE3bits	set	4003
  1220  0000                     _T3GCONbits	set	4020
  1221  0000                     _T3CONbits	set	4017
  1222  0000                     _T3GCON	set	4020
  1223  0000                     _T3CON	set	4017
  1224  0000                     _T2CONbits	set	4026
  1225  0000                     _TMR2	set	4028
  1226  0000                     _PR2	set	4027
  1227  0000                     _T2CON	set	4026
  1228  0000                     _VREFCON0bits	set	3965
  1229  0000                     _CM1CON0bits	set	3992
  1230  0000                     _CM2CON1bits	set	3994
  1231  0000                     _CM1CON0	set	3992
  1232  0000                     _EEDATA	set	4008
  1233  0000                     _EEADR	set	4009
  1234  0000                     _EECON2	set	4007
  1235  0000                     _EECON1bits	set	4006
  1236  0000                     _TABLAT	set	4085
  1237  0000                     _TBLPTRL	set	4086
  1238  0000                     _TBLPTRH	set	4087
  1239  0000                     _TBLPTRU	set	4088
  1240  0000                     _TRISD	set	3989
  1241  0000                     _TRISAbits	set	3986
  1242  0000                     _T1GCONbits	set	4044
  1243  0000                     _T1CONbits	set	4045
  1244  0000                     _TMR1L	set	4046
  1245  0000                     _TMR1H	set	4047
  1246  0000                     _T1GCON	set	4044
  1247  0000                     _T1CON	set	4045
  1248  0000                     _SSP1STATbits	set	4039
  1249  0000                     _SSPBUF	set	4041
  1250  0000                     _SSP1CON1bits	set	4038
  1251  0000                     _SSP1ADD	set	4040
  1252  0000                     _SSP1CON1	set	4038
  1253  0000                     _SSP1STAT	set	4039
  1254  0000                     _ADRESH	set	4036
  1255  0000                     _ADRESL	set	4035
  1256  0000                     _ADCON2	set	4032
  1257  0000                     _ADCON1	set	4033
  1258  0000                     _ADCON0	set	4034
  1259  0000                     _VREFCON0	set	3965
  1260  0000                     _ACTCON	set	4021
  1261  0000                     _OSCCON2bits	set	4050
  1262  0000                     _OSCCON2	set	4050
  1263  0000                     _OSCCON	set	4051
  1264  0000                     _OSCTUNE	set	3995
  1265  0000                     _PIR1bits	set	3998
  1266  0000                     _RCREG	set	4014
  1267  0000                     _RCSTAbits	set	4011
  1268  0000                     _TXSTA	set	4012
  1269  0000                     _RCSTA	set	4011
  1270  0000                     _BAUDCON	set	4024
  1271  0000                     _LATD	set	3980
  1272  0000                     _TRISCbits	set	3988
  1273  0000                     _TRISBbits	set	3987
  1274  0000                     _TRISEbits	set	3990
  1275  0000                     _SPBRGH	set	4016
  1276  0000                     _SPBRG	set	4015
  1277  0000                     _UCONbits	set	3936
  1278  0000                     _TMR3L	set	4018
  1279  0000                     _TMR3H	set	4019
  1280  0000                     _PIR2bits	set	4001
  1281  0000                     _WDTCONbits	set	4049
  1282  0000                     _PORTCbits	set	3970
  1283  0000                     _IOCCbits	set	3975
  1284  0000                     _INTCON3bits	set	4080
  1285  0000                     _PIE2bits	set	4000
  1286  0000                     _LATEbits	set	3981
  1287  0000                     _INTCONbits	set	4082
  1288  0000                     _ADCON0bits	set	4034
  1289  0000                     _LATAbits	set	3977
  1290  0000                     _PORTBbits	set	3969
  1291  0000                     _PORTAbits	set	3968
  1292  0000                     _PIE1bits	set	3997
  1293  0000                     _TXREG	set	4013
  1294  0000                     _LATCbits	set	3979
  1295  0000                     _TXSTAbits	set	4012
  1296  0000                     _LATBbits	set	3978
  1297  0000                     _UEP1	set	3947
  1298  0000                     _UEP0	set	3946
  1299  0000                     _CKE	set	32318
  1300  0000                     _CKP	set	32308
  1301  0000                     _GIE	set	32663
  1302  0000                     _PEIE	set	32662
  1303  0079BE                     STR_163:
  1304  0079BE  73                 	db	115	;'s'
  1305  0079BF  79                 	db	121	;'y'
  1306  0079C0  73                 	db	115	;'s'
  1307  0079C1  20                 	db	32
  1308  0079C2  73                 	db	115	;'s'
  1309  0079C3  65                 	db	101	;'e'
  1310  0079C4  74                 	db	116	;'t'
  1311  0079C5  20                 	db	32
  1312  0079C6  70                 	db	112	;'p'
  1313  0079C7  69                 	db	105	;'i'
  1314  0079C8  6E                 	db	110	;'n'
  1315  0079C9  6D                 	db	109	;'m'
  1316  0079CA  6F                 	db	111	;'o'
  1317  0079CB  64                 	db	100	;'d'
  1318  0079CC  65                 	db	101	;'e'
  1319  0079CD  20                 	db	32
  1320  0079CE  47                 	db	71	;'G'
  1321  0079CF  50                 	db	80	;'P'
  1322  0079D0  49                 	db	73	;'I'
  1323  0079D1  4F                 	db	79	;'O'
  1324  0079D2  31                 	db	49	;'1'
  1325  0079D3  32                 	db	50	;'2'
  1326  0079D4  20                 	db	32
  1327  0079D5  61                 	db	97	;'a'
  1328  0079D6  6E                 	db	110	;'n'
  1329  0079D7  61                 	db	97	;'a'
  1330  0079D8  00                 	db	0
  1331  0079D9                     STR_162:
  1332  0079D9  73                 	db	115	;'s'
  1333  0079DA  79                 	db	121	;'y'
  1334  0079DB  73                 	db	115	;'s'
  1335  0079DC  20                 	db	32
  1336  0079DD  73                 	db	115	;'s'
  1337  0079DE  65                 	db	101	;'e'
  1338  0079DF  74                 	db	116	;'t'
  1339  0079E0  20                 	db	32
  1340  0079E1  70                 	db	112	;'p'
  1341  0079E2  69                 	db	105	;'i'
  1342  0079E3  6E                 	db	110	;'n'
  1343  0079E4  6D                 	db	109	;'m'
  1344  0079E5  6F                 	db	111	;'o'
  1345  0079E6  64                 	db	100	;'d'
  1346  0079E7  65                 	db	101	;'e'
  1347  0079E8  20                 	db	32
  1348  0079E9  47                 	db	71	;'G'
  1349  0079EA  50                 	db	80	;'P'
  1350  0079EB  49                 	db	73	;'I'
  1351  0079EC  4F                 	db	79	;'O'
  1352  0079ED  31                 	db	49	;'1'
  1353  0079EE  33                 	db	51	;'3'
  1354  0079EF  20                 	db	32
  1355  0079F0  61                 	db	97	;'a'
  1356  0079F1  6E                 	db	110	;'n'
  1357  0079F2  61                 	db	97	;'a'
  1358  0079F3  00                 	db	0
  1359  0079F4                     STR_156:
  1360  0079F4  73                 	db	115	;'s'
  1361  0079F5  79                 	db	121	;'y'
  1362  0079F6  73                 	db	115	;'s'
  1363  0079F7  20                 	db	32
  1364  0079F8  73                 	db	115	;'s'
  1365  0079F9  65                 	db	101	;'e'
  1366  0079FA  74                 	db	116	;'t'
  1367  0079FB  20                 	db	32
  1368  0079FC  70                 	db	112	;'p'
  1369  0079FD  69                 	db	105	;'i'
  1370  0079FE  6E                 	db	110	;'n'
  1371  0079FF  64                 	db	100	;'d'
  1372  007A00  69                 	db	105	;'i'
  1373  007A01  67                 	db	103	;'g'
  1374  007A02  20                 	db	32
  1375  007A03  47                 	db	71	;'G'
  1376  007A04  50                 	db	80	;'P'
  1377  007A05  49                 	db	73	;'I'
  1378  007A06  4F                 	db	79	;'O'
  1379  007A07  31                 	db	49	;'1'
  1380  007A08  30                 	db	48	;'0'
  1381  007A09  20                 	db	32
  1382  007A0A  30                 	db	48	;'0'
  1383  007A0B  0D                 	db	13
  1384  007A0C  0A                 	db	10
  1385  007A0D  00                 	db	0
  1386  007A0E                     STR_157:
  1387  007A0E  73                 	db	115	;'s'
  1388  007A0F  79                 	db	121	;'y'
  1389  007A10  73                 	db	115	;'s'
  1390  007A11  20                 	db	32
  1391  007A12  73                 	db	115	;'s'
  1392  007A13  65                 	db	101	;'e'
  1393  007A14  74                 	db	116	;'t'
  1394  007A15  20                 	db	32
  1395  007A16  70                 	db	112	;'p'
  1396  007A17  69                 	db	105	;'i'
  1397  007A18  6E                 	db	110	;'n'
  1398  007A19  64                 	db	100	;'d'
  1399  007A1A  69                 	db	105	;'i'
  1400  007A1B  67                 	db	103	;'g'
  1401  007A1C  20                 	db	32
  1402  007A1D  47                 	db	71	;'G'
  1403  007A1E  50                 	db	80	;'P'
  1404  007A1F  49                 	db	73	;'I'
  1405  007A20  4F                 	db	79	;'O'
  1406  007A21  31                 	db	49	;'1'
  1407  007A22  31                 	db	49	;'1'
  1408  007A23  20                 	db	32
  1409  007A24  30                 	db	48	;'0'
  1410  007A25  0D                 	db	13
  1411  007A26  0A                 	db	10
  1412  007A27  00                 	db	0
  1413  007A28                     STR_154:
  1414  007A28  73                 	db	115	;'s'
  1415  007A29  79                 	db	121	;'y'
  1416  007A2A  73                 	db	115	;'s'
  1417  007A2B  20                 	db	32
  1418  007A2C  73                 	db	115	;'s'
  1419  007A2D  65                 	db	101	;'e'
  1420  007A2E  74                 	db	116	;'t'
  1421  007A2F  20                 	db	32
  1422  007A30  70                 	db	112	;'p'
  1423  007A31  69                 	db	105	;'i'
  1424  007A32  6E                 	db	110	;'n'
  1425  007A33  64                 	db	100	;'d'
  1426  007A34  69                 	db	105	;'i'
  1427  007A35  67                 	db	103	;'g'
  1428  007A36  20                 	db	32
  1429  007A37  47                 	db	71	;'G'
  1430  007A38  50                 	db	80	;'P'
  1431  007A39  49                 	db	73	;'I'
  1432  007A3A  4F                 	db	79	;'O'
  1433  007A3B  31                 	db	49	;'1'
  1434  007A3C  30                 	db	48	;'0'
  1435  007A3D  20                 	db	32
  1436  007A3E  31                 	db	49	;'1'
  1437  007A3F  0D                 	db	13
  1438  007A40  0A                 	db	10
  1439  007A41  00                 	db	0
  1440  007A42                     STR_155:
  1441  007A42  73                 	db	115	;'s'
  1442  007A43  79                 	db	121	;'y'
  1443  007A44  73                 	db	115	;'s'
  1444  007A45  20                 	db	32
  1445  007A46  73                 	db	115	;'s'
  1446  007A47  65                 	db	101	;'e'
  1447  007A48  74                 	db	116	;'t'
  1448  007A49  20                 	db	32
  1449  007A4A  70                 	db	112	;'p'
  1450  007A4B  69                 	db	105	;'i'
  1451  007A4C  6E                 	db	110	;'n'
  1452  007A4D  64                 	db	100	;'d'
  1453  007A4E  69                 	db	105	;'i'
  1454  007A4F  67                 	db	103	;'g'
  1455  007A50  20                 	db	32
  1456  007A51  47                 	db	71	;'G'
  1457  007A52  50                 	db	80	;'P'
  1458  007A53  49                 	db	73	;'I'
  1459  007A54  4F                 	db	79	;'O'
  1460  007A55  31                 	db	49	;'1'
  1461  007A56  31                 	db	49	;'1'
  1462  007A57  20                 	db	32
  1463  007A58  31                 	db	49	;'1'
  1464  007A59  0D                 	db	13
  1465  007A5A  0A                 	db	10
  1466  007A5B  00                 	db	0
  1467  007A5C                     STR_164:
  1468  007A5C  73                 	db	115	;'s'
  1469  007A5D  79                 	db	121	;'y'
  1470  007A5E  73                 	db	115	;'s'
  1471  007A5F  20                 	db	32
  1472  007A60  67                 	db	103	;'g'
  1473  007A61  65                 	db	101	;'e'
  1474  007A62  74                 	db	116	;'t'
  1475  007A63  20                 	db	32
  1476  007A64  70                 	db	112	;'p'
  1477  007A65  69                 	db	105	;'i'
  1478  007A66  6E                 	db	110	;'n'
  1479  007A67  61                 	db	97	;'a'
  1480  007A68  6E                 	db	110	;'n'
  1481  007A69  61                 	db	97	;'a'
  1482  007A6A  20                 	db	32
  1483  007A6B  47                 	db	71	;'G'
  1484  007A6C  50                 	db	80	;'P'
  1485  007A6D  49                 	db	73	;'I'
  1486  007A6E  4F                 	db	79	;'O'
  1487  007A6F  31                 	db	49	;'1'
  1488  007A70  32                 	db	50	;'2'
  1489  007A71  00                 	db	0
  1490  007A72                     STR_165:
  1491  007A72  73                 	db	115	;'s'
  1492  007A73  79                 	db	121	;'y'
  1493  007A74  73                 	db	115	;'s'
  1494  007A75  20                 	db	32
  1495  007A76  67                 	db	103	;'g'
  1496  007A77  65                 	db	101	;'e'
  1497  007A78  74                 	db	116	;'t'
  1498  007A79  20                 	db	32
  1499  007A7A  70                 	db	112	;'p'
  1500  007A7B  69                 	db	105	;'i'
  1501  007A7C  6E                 	db	110	;'n'
  1502  007A7D  61                 	db	97	;'a'
  1503  007A7E  6E                 	db	110	;'n'
  1504  007A7F  61                 	db	97	;'a'
  1505  007A80  20                 	db	32
  1506  007A81  47                 	db	71	;'G'
  1507  007A82  50                 	db	80	;'P'
  1508  007A83  49                 	db	73	;'I'
  1509  007A84  4F                 	db	79	;'O'
  1510  007A85  31                 	db	49	;'1'
  1511  007A86  33                 	db	51	;'3'
  1512  007A87  00                 	db	0
  1513  007A88                     STR_5:
  1514  007A88  73                 	db	115	;'s'
  1515  007A89  79                 	db	121	;'y'
  1516  007A8A  73                 	db	115	;'s'
  1517  007A8B  20                 	db	32
  1518  007A8C  73                 	db	115	;'s'
  1519  007A8D  6C                 	db	108	;'l'
  1520  007A8E  65                 	db	101	;'e'
  1521  007A8F  65                 	db	101	;'e'
  1522  007A90  70                 	db	112	;'p'
  1523  007A91  20                 	db	32
  1524  007A92  39                 	db	57	;'9'
  1525  007A93  39                 	db	57	;'9'
  1526  007A94  39                 	db	57	;'9'
  1527  007A95  39                 	db	57	;'9'
  1528  007A96  39                 	db	57	;'9'
  1529  007A97  39                 	db	57	;'9'
  1530  007A98  39                 	db	57	;'9'
  1531  007A99  39                 	db	57	;'9'
  1532  007A9A  39                 	db	57	;'9'
  1533  007A9B  00                 	db	0
  1534  007A9C                     STR_75:
  1535  007A9C  4D                 	db	77	;'M'
  1536  007A9D  61                 	db	97	;'a'
  1537  007A9E  63                 	db	99	;'c'
  1538  007A9F  20                 	db	32
  1539  007AA0  45                 	db	69	;'E'
  1540  007AA1  72                 	db	114	;'r'
  1541  007AA2  72                 	db	114	;'r'
  1542  007AA3  6F                 	db	111	;'o'
  1543  007AA4  72                 	db	114	;'r'
  1544  007AA5  20                 	db	32
  1545  007AA6  4F                 	db	79	;'O'
  1546  007AA7  63                 	db	99	;'c'
  1547  007AA8  63                 	db	99	;'c'
  1548  007AA9  75                 	db	117	;'u'
  1549  007AAA  72                 	db	114	;'r'
  1550  007AAB  72                 	db	114	;'r'
  1551  007AAC  65                 	db	101	;'e'
  1552  007AAD  64                 	db	100	;'d'
  1553  007AAE  00                 	db	0
  1554  007AAF                     STR_62:
  1555  007AAF  28                 	db	40
  1556  007AB0  55                 	db	85	;'U'
  1557  007AB1  4E                 	db	78	;'N'
  1558  007AB2  43                 	db	67	;'C'
  1559  007AB3  4E                 	db	78	;'N'
  1560  007AB4  46                 	db	70	;'F'
  1561  007AB5  29                 	db	41
  1562  007AB6  20                 	db	32
  1563  007AB7  20                 	db	32
  1564  007AB8  20                 	db	32
  1565  007AB9  20                 	db	32
  1566  007ABA  28                 	db	40
  1567  007ABB  43                 	db	67	;'C'
  1568  007ABC  4E                 	db	78	;'N'
  1569  007ABD  46                 	db	70	;'F'
  1570  007ABE  29                 	db	41
  1571  007ABF  20                 	db	32
  1572  007AC0  00                 	db	0
  1573  007AC1                     STR_19:
  1574  007AC1  20                 	db	32
  1575  007AC2  20                 	db	32
  1576  007AC3  28                 	db	40
  1577  007AC4  53                 	db	83	;'S'
  1578  007AC5  32                 	db	50	;'2'
  1579  007AC6  29                 	db	41
  1580  007AC7  20                 	db	32
  1581  007AC8  20                 	db	32
  1582  007AC9  20                 	db	32
  1583  007ACA  20                 	db	32
  1584  007ACB  20                 	db	32
  1585  007ACC  20                 	db	32
  1586  007ACD  20                 	db	32
  1587  007ACE  20                 	db	32
  1588  007ACF  20                 	db	32
  1589  007AD0  20                 	db	32
  1590  007AD1  00                 	db	0
  1591  007AD2                     STR_71:
  1592  007AD2  20                 	db	32
  1593  007AD3  20                 	db	32
  1594  007AD4  20                 	db	32
  1595  007AD5  20                 	db	32
  1596  007AD6  52                 	db	82	;'R'
  1597  007AD7  65                 	db	101	;'e'
  1598  007AD8  63                 	db	99	;'c'
  1599  007AD9  65                 	db	101	;'e'
  1600  007ADA  69                 	db	105	;'i'
  1601  007ADB  76                 	db	118	;'v'
  1602  007ADC  65                 	db	101	;'e'
  1603  007ADD  64                 	db	100	;'d'
  1604  007ADE  20                 	db	32
  1605  007ADF  20                 	db	32
  1606  007AE0  20                 	db	32
  1607  007AE1  20                 	db	32
  1608  007AE2  00                 	db	0
  1609  007AE3                     STR_21:
  1610  007AE3  20                 	db	32
  1611  007AE4  20                 	db	32
  1612  007AE5  20                 	db	32
  1613  007AE6  20                 	db	32
  1614  007AE7  20                 	db	32
  1615  007AE8  20                 	db	32
  1616  007AE9  20                 	db	32
  1617  007AEA  20                 	db	32
  1618  007AEB  20                 	db	32
  1619  007AEC  28                 	db	40
  1620  007AED  53                 	db	83	;'S'
  1621  007AEE  33                 	db	51	;'3'
  1622  007AEF  29                 	db	41
  1623  007AF0  20                 	db	32
  1624  007AF1  20                 	db	32
  1625  007AF2  20                 	db	32
  1626  007AF3  00                 	db	0
  1627  007AF4                     STR_17:
  1628  007AF4  20                 	db	32
  1629  007AF5  20                 	db	32
  1630  007AF6  28                 	db	40
  1631  007AF7  53                 	db	83	;'S'
  1632  007AF8  32                 	db	50	;'2'
  1633  007AF9  29                 	db	41
  1634  007AFA  20                 	db	32
  1635  007AFB  20                 	db	32
  1636  007AFC  20                 	db	32
  1637  007AFD  28                 	db	40
  1638  007AFE  53                 	db	83	;'S'
  1639  007AFF  33                 	db	51	;'3'
  1640  007B00  29                 	db	41
  1641  007B01  20                 	db	32
  1642  007B02  20                 	db	32
  1643  007B03  20                 	db	32
  1644  007B04  00                 	db	0
  1645  007B05                     STR_58:
  1646  007B05  20                 	db	32
  1647  007B06  20                 	db	32
  1648  007B07  4C                 	db	76	;'L'
  1649  007B08  61                 	db	97	;'a'
  1650  007B09  73                 	db	115	;'s'
  1651  007B0A  74                 	db	116	;'t'
  1652  007B0B  20                 	db	32
  1653  007B0C  4D                 	db	77	;'M'
  1654  007B0D  65                 	db	101	;'e'
  1655  007B0E  73                 	db	115	;'s'
  1656  007B0F  73                 	db	115	;'s'
  1657  007B10  61                 	db	97	;'a'
  1658  007B11  67                 	db	103	;'g'
  1659  007B12  65                 	db	101	;'e'
  1660  007B13  20                 	db	32
  1661  007B14  20                 	db	32
  1662  007B15  00                 	db	0
  1663  007B16                     STR_57:
  1664  007B16  20                 	db	32
  1665  007B17  56                 	db	86	;'V'
  1666  007B18  69                 	db	105	;'i'
  1667  007B19  65                 	db	101	;'e'
  1668  007B1A  77                 	db	119	;'w'
  1669  007B1B  20                 	db	32
  1670  007B1C  44                 	db	68	;'D'
  1671  007B1D  6F                 	db	111	;'o'
  1672  007B1E  77                 	db	119	;'w'
  1673  007B1F  6E                 	db	110	;'n'
  1674  007B20  6C                 	db	108	;'l'
  1675  007B21  69                 	db	105	;'i'
  1676  007B22  6E                 	db	110	;'n'
  1677  007B23  6B                 	db	107	;'k'
  1678  007B24  20                 	db	32
  1679  007B25  20                 	db	32
  1680  007B26  00                 	db	0
  1681  007B27                     STR_54:
  1682  007B27  20                 	db	32
  1683  007B28  20                 	db	32
  1684  007B29  49                 	db	73	;'I'
  1685  007B2A  73                 	db	115	;'s'
  1686  007B2B  73                 	db	115	;'s'
  1687  007B2C  75                 	db	117	;'u'
  1688  007B2D  65                 	db	101	;'e'
  1689  007B2E  20                 	db	32
  1690  007B2F  55                 	db	85	;'U'
  1691  007B30  70                 	db	112	;'p'
  1692  007B31  6C                 	db	108	;'l'
  1693  007B32  69                 	db	105	;'i'
  1694  007B33  6E                 	db	110	;'n'
  1695  007B34  6B                 	db	107	;'k'
  1696  007B35  20                 	db	32
  1697  007B36  20                 	db	32
  1698  007B37  00                 	db	0
  1699  007B38                     STR_12:
  1700  007B38  20                 	db	32
  1701  007B39  28                 	db	40
  1702  007B3A  53                 	db	83	;'S'
  1703  007B3B  32                 	db	50	;'2'
  1704  007B3C  29                 	db	41
  1705  007B3D  20                 	db	32
  1706  007B3E  20                 	db	32
  1707  007B3F  20                 	db	32
  1708  007B40  20                 	db	32
  1709  007B41  20                 	db	32
  1710  007B42  20                 	db	32
  1711  007B43  28                 	db	40
  1712  007B44  53                 	db	83	;'S'
  1713  007B45  33                 	db	51	;'3'
  1714  007B46  29                 	db	41
  1715  007B47  20                 	db	32
  1716  007B48  00                 	db	0
  1717  007B49                     STR_15:
  1718  007B49  20                 	db	32
  1719  007B4A  4A                 	db	74	;'J'
  1720  007B4B  6F                 	db	111	;'o'
  1721  007B4C  69                 	db	105	;'i'
  1722  007B4D  6E                 	db	110	;'n'
  1723  007B4E  69                 	db	105	;'i'
  1724  007B4F  6E                 	db	110	;'n'
  1725  007B50  67                 	db	103	;'g'
  1726  007B51  20                 	db	32
  1727  007B52  4D                 	db	77	;'M'
  1728  007B53  65                 	db	101	;'e'
  1729  007B54  74                 	db	116	;'t'
  1730  007B55  68                 	db	104	;'h'
  1731  007B56  6F                 	db	111	;'o'
  1732  007B57  64                 	db	100	;'d'
  1733  007B58  20                 	db	32
  1734  007B59  00                 	db	0
  1735  007B5A                     STR_70:
  1736  007B5A  53                 	db	83	;'S'
  1737  007B5B  65                 	db	101	;'e'
  1738  007B5C  72                 	db	114	;'r'
  1739  007B5D  76                 	db	118	;'v'
  1740  007B5E  65                 	db	101	;'e'
  1741  007B5F  72                 	db	114	;'r'
  1742  007B60  20                 	db	32
  1743  007B61  52                 	db	82	;'R'
  1744  007B62  65                 	db	101	;'e'
  1745  007B63  73                 	db	115	;'s'
  1746  007B64  70                 	db	112	;'p'
  1747  007B65  6F                 	db	111	;'o'
  1748  007B66  6E                 	db	110	;'n'
  1749  007B67  73                 	db	115	;'s'
  1750  007B68  65                 	db	101	;'e'
  1751  007B69  20                 	db	32
  1752  007B6A  00                 	db	0
  1753  007B6B                     STR_99:
  1754  007B6B  54                 	db	84	;'T'
  1755  007B6C  78                 	db	120	;'x'
  1756  007B6D  20                 	db	32
  1757  007B6E  45                 	db	69	;'E'
  1758  007B6F  76                 	db	118	;'v'
  1759  007B70  65                 	db	101	;'e'
  1760  007B71  6E                 	db	110	;'n'
  1761  007B72  74                 	db	116	;'t'
  1762  007B73  20                 	db	32
  1763  007B74  54                 	db	84	;'T'
  1764  007B75  69                 	db	105	;'i'
  1765  007B76  6D                 	db	109	;'m'
  1766  007B77  69                 	db	105	;'i'
  1767  007B78  6E                 	db	110	;'n'
  1768  007B79  67                 	db	103	;'g'
  1769  007B7A  20                 	db	32
  1770  007B7B  00                 	db	0
  1771  007B7C                     STR_98:
  1772  007B7C  50                 	db	80	;'P'
  1773  007B7D  65                 	db	101	;'e'
  1774  007B7E  72                 	db	114	;'r'
  1775  007B7F  69                 	db	105	;'i'
  1776  007B80  6F                 	db	111	;'o'
  1777  007B81  64                 	db	100	;'d'
  1778  007B82  69                 	db	105	;'i'
  1779  007B83  63                 	db	99	;'c'
  1780  007B84  20                 	db	32
  1781  007B85  55                 	db	85	;'U'
  1782  007B86  70                 	db	112	;'p'
  1783  007B87  6C                 	db	108	;'l'
  1784  007B88  69                 	db	105	;'i'
  1785  007B89  6E                 	db	110	;'n'
  1786  007B8A  6B                 	db	107	;'k'
  1787  007B8B  20                 	db	32
  1788  007B8C  00                 	db	0
  1789  007B8D                     STR_55:
  1790  007B8D  20                 	db	32
  1791  007B8E  4C                 	db	76	;'L'
  1792  007B8F  6F                 	db	111	;'o'
  1793  007B90  52                 	db	82	;'R'
  1794  007B91  61                 	db	97	;'a'
  1795  007B92  57                 	db	87	;'W'
  1796  007B93  41                 	db	65	;'A'
  1797  007B94  4E                 	db	78	;'N'
  1798  007B95  20                 	db	32
  1799  007B96  50                 	db	80	;'P'
  1800  007B97  61                 	db	97	;'a'
  1801  007B98  63                 	db	99	;'c'
  1802  007B99  6B                 	db	107	;'k'
  1803  007B9A  65                 	db	101	;'e'
  1804  007B9B  74                 	db	116	;'t'
  1805  007B9C  20                 	db	32
  1806  007B9D  00                 	db	0
  1807  007B9E                     STR_16:
  1808  007B9E  3C                 	db	60	;'<'
  1809  007B9F  2D                 	db	45
  1810  007BA0  20                 	db	32
  1811  007BA1  41                 	db	65	;'A'
  1812  007BA2  42                 	db	66	;'B'
  1813  007BA3  50                 	db	80	;'P'
  1814  007BA4  20                 	db	32
  1815  007BA5  20                 	db	32
  1816  007BA6  20                 	db	32
  1817  007BA7  4F                 	db	79	;'O'
  1818  007BA8  54                 	db	84	;'T'
  1819  007BA9  41                 	db	65	;'A'
  1820  007BAA  41                 	db	65	;'A'
  1821  007BAB  20                 	db	32
  1822  007BAC  2D                 	db	45
  1823  007BAD  3E                 	db	62	;'>'
  1824  007BAE  00                 	db	0
  1825  007BAF                     STR_9:
  1826  007BAF  52                 	db	82	;'R'
  1827  007BB0  65                 	db	101	;'e'
  1828  007BB1  52                 	db	82	;'R'
  1829  007BB2  75                 	db	117	;'u'
  1830  007BB3  6E                 	db	110	;'n'
  1831  007BB4  20                 	db	32
  1832  007BB5  50                 	db	80	;'P'
  1833  007BB6  77                 	db	119	;'w'
  1834  007BB7  72                 	db	114	;'r'
  1835  007BB8  54                 	db	84	;'T'
  1836  007BB9  73                 	db	115	;'s'
  1837  007BBA  74                 	db	116	;'t'
  1838  007BBB  3C                 	db	60	;'<'
  1839  007BBC  53                 	db	83	;'S'
  1840  007BBD  32                 	db	50	;'2'
  1841  007BBE  3E                 	db	62	;'>'
  1842  007BBF  00                 	db	0
  1843  007BC0                     STR_73:
  1844  007BC0  44                 	db	68	;'D'
  1845  007BC1  61                 	db	97	;'a'
  1846  007BC2  74                 	db	116	;'t'
  1847  007BC3  61                 	db	97	;'a'
  1848  007BC4  20                 	db	32
  1849  007BC5  54                 	db	84	;'T'
  1850  007BC6  72                 	db	114	;'r'
  1851  007BC7  61                 	db	97	;'a'
  1852  007BC8  6E                 	db	110	;'n'
  1853  007BC9  73                 	db	115	;'s'
  1854  007BCA  6D                 	db	109	;'m'
  1855  007BCB  69                 	db	105	;'i'
  1856  007BCC  74                 	db	116	;'t'
  1857  007BCD  74                 	db	116	;'t'
  1858  007BCE  65                 	db	101	;'e'
  1859  007BCF  64                 	db	100	;'d'
  1860  007BD0  00                 	db	0
  1861  007BD1                     STR_130:
  1862  007BD1  45                 	db	69	;'E'
  1863  007BD2  6E                 	db	110	;'n'
  1864  007BD3  74                 	db	116	;'t'
  1865  007BD4  65                 	db	101	;'e'
  1866  007BD5  72                 	db	114	;'r'
  1867  007BD6  20                 	db	32
  1868  007BD7  53                 	db	83	;'S'
  1869  007BD8  6C                 	db	108	;'l'
  1870  007BD9  65                 	db	101	;'e'
  1871  007BDA  65                 	db	101	;'e'
  1872  007BDB  70                 	db	112	;'p'
  1873  007BDC  20                 	db	32
  1874  007BDD  4D                 	db	77	;'M'
  1875  007BDE  6F                 	db	111	;'o'
  1876  007BDF  64                 	db	100	;'d'
  1877  007BE0  65                 	db	101	;'e'
  1878  007BE1  00                 	db	0
  1879  007BE2                     STR_60:
  1880  007BE2  55                 	db	85	;'U'
  1881  007BE3  70                 	db	112	;'p'
  1882  007BE4  6C                 	db	108	;'l'
  1883  007BE5  69                 	db	105	;'i'
  1884  007BE6  6E                 	db	110	;'n'
  1885  007BE7  6B                 	db	107	;'k'
  1886  007BE8  20                 	db	32
  1887  007BE9  50                 	db	80	;'P'
  1888  007BEA  63                 	db	99	;'c'
  1889  007BEB  6B                 	db	107	;'k'
  1890  007BEC  74                 	db	116	;'t'
  1891  007BED  20                 	db	32
  1892  007BEE  54                 	db	84	;'T'
  1893  007BEF  79                 	db	121	;'y'
  1894  007BF0  70                 	db	112	;'p'
  1895  007BF1  65                 	db	101	;'e'
  1896  007BF2  00                 	db	0
  1897  007BF3                     STR_114:
  1898  007BF3  53                 	db	83	;'S'
  1899  007BF4  65                 	db	101	;'e'
  1900  007BF5  6C                 	db	108	;'l'
  1901  007BF6  65                 	db	101	;'e'
  1902  007BF7  63                 	db	99	;'c'
  1903  007BF8  74                 	db	116	;'t'
  1904  007BF9  20                 	db	32
  1905  007BFA  44                 	db	68	;'D'
  1906  007BFB  61                 	db	97	;'a'
  1907  007BFC  74                 	db	116	;'t'
  1908  007BFD  61                 	db	97	;'a'
  1909  007BFE  20                 	db	32
  1910  007BFF  52                 	db	82	;'R'
  1911  007C00  61                 	db	97	;'a'
  1912  007C01  74                 	db	116	;'t'
  1913  007C02  65                 	db	101	;'e'
  1914  007C03  00                 	db	0
  1915  007C04                     STR_10:
  1916  007C04  4D                 	db	77	;'M'
  1917  007C05  6F                 	db	111	;'o'
  1918  007C06  62                 	db	98	;'b'
  1919  007C07  69                 	db	105	;'i'
  1920  007C08  6C                 	db	108	;'l'
  1921  007C09  65                 	db	101	;'e'
  1922  007C0A  20                 	db	32
  1923  007C0B  4D                 	db	77	;'M'
  1924  007C0C  6F                 	db	111	;'o'
  1925  007C0D  74                 	db	116	;'t'
  1926  007C0E  65                 	db	101	;'e'
  1927  007C0F  20                 	db	32
  1928  007C10  2D                 	db	45
  1929  007C11  41                 	db	65	;'A'
  1930  007C12  70                 	db	112	;'p'
  1931  007C13  70                 	db	112	;'p'
  1932  007C14  00                 	db	0
  1933  007C15                     STR_11:
  1934  007C15  4E                 	db	78	;'N'
  1935  007C16  61                 	db	97	;'a'
  1936  007C17  76                 	db	118	;'v'
  1937  007C18  69                 	db	105	;'i'
  1938  007C19  67                 	db	103	;'g'
  1939  007C1A  61                 	db	97	;'a'
  1940  007C1B  74                 	db	116	;'t'
  1941  007C1C  65                 	db	101	;'e'
  1942  007C1D  20                 	db	32
  1943  007C1E  20                 	db	32
  1944  007C1F  53                 	db	83	;'S'
  1945  007C20  65                 	db	101	;'e'
  1946  007C21  6C                 	db	108	;'l'
  1947  007C22  65                 	db	101	;'e'
  1948  007C23  63                 	db	99	;'c'
  1949  007C24  74                 	db	116	;'t'
  1950  007C25  00                 	db	0
  1951  007C26                     STR_90:
  1952  007C26  4D                 	db	77	;'M'
  1953  007C27  65                 	db	101	;'e'
  1954  007C28  6E                 	db	110	;'n'
  1955  007C29  75                 	db	117	;'u'
  1956  007C2A  20                 	db	32
  1957  007C2B  48                 	db	72	;'H'
  1958  007C2C  61                 	db	97	;'a'
  1959  007C2D  73                 	db	115	;'s'
  1960  007C2E  20                 	db	32
  1961  007C2F  54                 	db	84	;'T'
  1962  007C30  69                 	db	105	;'i'
  1963  007C31  6D                 	db	109	;'m'
  1964  007C32  65                 	db	101	;'e'
  1965  007C33  6F                 	db	111	;'o'
  1966  007C34  75                 	db	117	;'u'
  1967  007C35  74                 	db	116	;'t'
  1968  007C36  00                 	db	0
  1969  007C37                     STR_50:
  1970  007C37  53                 	db	83	;'S'
  1971  007C38  65                 	db	101	;'e'
  1972  007C39  6E                 	db	110	;'n'
  1973  007C3A  64                 	db	100	;'d'
  1974  007C3B  20                 	db	32
  1975  007C3C  50                 	db	80	;'P'
  1976  007C3D  65                 	db	101	;'e'
  1977  007C3E  72                 	db	114	;'r'
  1978  007C3F  69                 	db	105	;'i'
  1979  007C40  6F                 	db	111	;'o'
  1980  007C41  64                 	db	100	;'d'
  1981  007C42  69                 	db	105	;'i'
  1982  007C43  63                 	db	99	;'c'
  1983  007C44  20                 	db	32
  1984  007C45  54                 	db	84	;'T'
  1985  007C46  78                 	db	120	;'x'
  1986  007C47  00                 	db	0
  1987  007C48                     STR_84:
  1988  007C48  44                 	db	68	;'D'
  1989  007C49  6F                 	db	111	;'o'
  1990  007C4A  77                 	db	119	;'w'
  1991  007C4B  6E                 	db	110	;'n'
  1992  007C4C  6C                 	db	108	;'l'
  1993  007C4D  69                 	db	105	;'i'
  1994  007C4E  6E                 	db	110	;'n'
  1995  007C4F  6B                 	db	107	;'k'
  1996  007C50  20                 	db	32
  1997  007C51  44                 	db	68	;'D'
  1998  007C52  69                 	db	105	;'i'
  1999  007C53  73                 	db	115	;'s'
  2000  007C54  70                 	db	112	;'p'
  2001  007C55  6C                 	db	108	;'l'
  2002  007C56  61                 	db	97	;'a'
  2003  007C57  79                 	db	121	;'y'
  2004  007C58  00                 	db	0
  2005  007C59                     STR_172:
  2006  007C59  42                 	db	66	;'B'
  2007  007C5A  75                 	db	117	;'u'
  2008  007C5B  69                 	db	105	;'i'
  2009  007C5C  6C                 	db	108	;'l'
  2010  007C5D  64                 	db	100	;'d'
  2011  007C5E  20                 	db	32
  2012  007C5F  44                 	db	68	;'D'
  2013  007C60  61                 	db	97	;'a'
  2014  007C61  74                 	db	116	;'t'
  2015  007C62  65                 	db	101	;'e'
  2016  007C63  2F                 	db	47
  2017  007C64  54                 	db	84	;'T'
  2018  007C65  69                 	db	105	;'i'
  2019  007C66  6D                 	db	109	;'m'
  2020  007C67  65                 	db	101	;'e'
  2021  007C68  00                 	db	0
  2022  007C69                     STR_82:
  2023  007C69  20                 	db	32
  2024  007C6A  20                 	db	32
  2025  007C6B  20                 	db	32
  2026  007C6C  20                 	db	32
  2027  007C6D  44                 	db	68	;'D'
  2028  007C6E  69                 	db	105	;'i'
  2029  007C6F  73                 	db	115	;'s'
  2030  007C70  70                 	db	112	;'p'
  2031  007C71  6C                 	db	108	;'l'
  2032  007C72  61                 	db	97	;'a'
  2033  007C73  79                 	db	121	;'y'
  2034  007C74  20                 	db	32
  2035  007C75  20                 	db	32
  2036  007C76  20                 	db	32
  2037  007C77  20                 	db	32
  2038  007C78  00                 	db	0
  2039  007C79                     STR_81:
  2040  007C79  20                 	db	32
  2041  007C7A  20                 	db	32
  2042  007C7B  53                 	db	83	;'S'
  2043  007C7C  65                 	db	101	;'e'
  2044  007C7D  6E                 	db	110	;'n'
  2045  007C7E  73                 	db	115	;'s'
  2046  007C7F  6F                 	db	111	;'o'
  2047  007C80  72                 	db	114	;'r'
  2048  007C81  20                 	db	32
  2049  007C82  44                 	db	68	;'D'
  2050  007C83  61                 	db	97	;'a'
  2051  007C84  74                 	db	116	;'t'
  2052  007C85  61                 	db	97	;'a'
  2053  007C86  20                 	db	32
  2054  007C87  20                 	db	32
  2055  007C88  00                 	db	0
  2056  007C89                     STR_93:
  2057  007C89  28                 	db	40
  2058  007C8A  4E                 	db	78	;'N'
  2059  007C8B  41                 	db	65	;'A'
  2060  007C8C  56                 	db	86	;'V'
  2061  007C8D  29                 	db	41
  2062  007C8E  20                 	db	32
  2063  007C8F  20                 	db	32
  2064  007C90  20                 	db	32
  2065  007C91  20                 	db	32
  2066  007C92  28                 	db	40
  2067  007C93  43                 	db	67	;'C'
  2068  007C94  4E                 	db	78	;'N'
  2069  007C95  47                 	db	71	;'G'
  2070  007C96  29                 	db	41
  2071  007C97  20                 	db	32
  2072  007C98  00                 	db	0
  2073  007C99                     STR_56:
  2074  007C99  28                 	db	40
  2075  007C9A  4E                 	db	78	;'N'
  2076  007C9B  41                 	db	65	;'A'
  2077  007C9C  56                 	db	86	;'V'
  2078  007C9D  29                 	db	41
  2079  007C9E  20                 	db	32
  2080  007C9F  20                 	db	32
  2081  007CA0  20                 	db	32
  2082  007CA1  20                 	db	32
  2083  007CA2  28                 	db	40
  2084  007CA3  53                 	db	83	;'S'
  2085  007CA4  45                 	db	69	;'E'
  2086  007CA5  4C                 	db	76	;'L'
  2087  007CA6  29                 	db	41
  2088  007CA7  20                 	db	32
  2089  007CA8  00                 	db	0
  2090  007CA9                     STR_131:
  2091  007CA9  28                 	db	40
  2092  007CAA  4E                 	db	78	;'N'
  2093  007CAB  41                 	db	65	;'A'
  2094  007CAC  56                 	db	86	;'V'
  2095  007CAD  29                 	db	41
  2096  007CAE  20                 	db	32
  2097  007CAF  20                 	db	32
  2098  007CB0  20                 	db	32
  2099  007CB1  20                 	db	32
  2100  007CB2  28                 	db	40
  2101  007CB3  53                 	db	83	;'S'
  2102  007CB4  4C                 	db	76	;'L'
  2103  007CB5  50                 	db	80	;'P'
  2104  007CB6  29                 	db	41
  2105  007CB7  20                 	db	32
  2106  007CB8  00                 	db	0
  2107  007CB9                     STR_142:
  2108  007CB9  6D                 	db	109	;'m'
  2109  007CBA  61                 	db	97	;'a'
  2110  007CBB  63                 	db	99	;'c'
  2111  007CBC  20                 	db	32
  2112  007CBD  73                 	db	115	;'s'
  2113  007CBE  65                 	db	101	;'e'
  2114  007CBF  74                 	db	116	;'t'
  2115  007CC0  20                 	db	32
  2116  007CC1  61                 	db	97	;'a'
  2117  007CC2  64                 	db	100	;'d'
  2118  007CC3  72                 	db	114	;'r'
  2119  007CC4  20                 	db	32
  2120  007CC5  6F                 	db	111	;'o'
  2121  007CC6  66                 	db	102	;'f'
  2122  007CC7  66                 	db	102	;'f'
  2123  007CC8  00                 	db	0
  2124  007CC9                     STR_77:
  2125  007CC9  4E                 	db	78	;'N'
  2126  007CCA  6F                 	db	111	;'o'
  2127  007CCB  20                 	db	32
  2128  007CCC  46                 	db	70	;'F'
  2129  007CCD  72                 	db	114	;'r'
  2130  007CCE  65                 	db	101	;'e'
  2131  007CCF  65                 	db	101	;'e'
  2132  007CD0  20                 	db	32
  2133  007CD1  43                 	db	67	;'C'
  2134  007CD2  68                 	db	104	;'h'
  2135  007CD3  61                 	db	97	;'a'
  2136  007CD4  6E                 	db	110	;'n'
  2137  007CD5  6E                 	db	110	;'n'
  2138  007CD6  65                 	db	101	;'e'
  2139  007CD7  6C                 	db	108	;'l'
  2140  007CD8  00                 	db	0
  2141  007CD9                     STR_91:
  2142  007CD9  20                 	db	32
  2143  007CDA  20                 	db	32
  2144  007CDB  20                 	db	32
  2145  007CDC  20                 	db	32
  2146  007CDD  45                 	db	69	;'E'
  2147  007CDE  6E                 	db	110	;'n'
  2148  007CDF  61                 	db	97	;'a'
  2149  007CE0  62                 	db	98	;'b'
  2150  007CE1  6C                 	db	108	;'l'
  2151  007CE2  65                 	db	101	;'e'
  2152  007CE3  64                 	db	100	;'d'
  2153  007CE4  20                 	db	32
  2154  007CE5  20                 	db	32
  2155  007CE6  20                 	db	32
  2156  007CE7  00                 	db	0
  2157  007CE8                     STR_92:
  2158  007CE8  20                 	db	32
  2159  007CE9  20                 	db	32
  2160  007CEA  20                 	db	32
  2161  007CEB  20                 	db	32
  2162  007CEC  44                 	db	68	;'D'
  2163  007CED  69                 	db	105	;'i'
  2164  007CEE  73                 	db	115	;'s'
  2165  007CEF  61                 	db	97	;'a'
  2166  007CF0  62                 	db	98	;'b'
  2167  007CF1  6C                 	db	108	;'l'
  2168  007CF2  65                 	db	101	;'e'
  2169  007CF3  64                 	db	100	;'d'
  2170  007CF4  20                 	db	32
  2171  007CF5  20                 	db	32
  2172  007CF6  00                 	db	0
  2173  007CF7                     STR_151:
  2174  007CF7  6D                 	db	109	;'m'
  2175  007CF8  61                 	db	97	;'a'
  2176  007CF9  63                 	db	99	;'c'
  2177  007CFA  20                 	db	32
  2178  007CFB  73                 	db	115	;'s'
  2179  007CFC  65                 	db	101	;'e'
  2180  007CFD  74                 	db	116	;'t'
  2181  007CFE  20                 	db	32
  2182  007CFF  61                 	db	97	;'a'
  2183  007D00  64                 	db	100	;'d'
  2184  007D01  72                 	db	114	;'r'
  2185  007D02  20                 	db	32
  2186  007D03  6F                 	db	111	;'o'
  2187  007D04  6E                 	db	110	;'n'
  2188  007D05  00                 	db	0
  2189  007D06                     STR_2:
  2190  007D06  20                 	db	32
  2191  007D07  20                 	db	32
  2192  007D08  20                 	db	32
  2193  007D09  4C                 	db	76	;'L'
  2194  007D0A  6F                 	db	111	;'o'
  2195  007D0B  52                 	db	82	;'R'
  2196  007D0C  61                 	db	97	;'a'
  2197  007D0D  20                 	db	32
  2198  007D0E  44                 	db	68	;'D'
  2199  007D0F  65                 	db	101	;'e'
  2200  007D10  6D                 	db	109	;'m'
  2201  007D11  6F                 	db	111	;'o'
  2202  007D12  20                 	db	32
  2203  007D13  20                 	db	32
  2204  007D14  00                 	db	0
  2205  007D15                     STR_3:
  2206  007D15  20                 	db	32
  2207  007D16  56                 	db	86	;'V'
  2208  007D17  20                 	db	32
  2209  007D18  31                 	db	49	;'1'
  2210  007D19  2E                 	db	46
  2211  007D1A  30                 	db	48	;'0'
  2212  007D1B  2E                 	db	46
  2213  007D1C  31                 	db	49	;'1'
  2214  007D1D  20                 	db	32
  2215  007D1E  43                 	db	67	;'C'
  2216  007D1F  6F                 	db	111	;'o'
  2217  007D20  64                 	db	100	;'d'
  2218  007D21  65                 	db	101	;'e'
  2219  007D22  20                 	db	32
  2220  007D23  00                 	db	0
  2221  007D24                     STR_1:
  2222  007D24  4D                 	db	77	;'M'
  2223  007D25  69                 	db	105	;'i'
  2224  007D26  63                 	db	99	;'c'
  2225  007D27  72                 	db	114	;'r'
  2226  007D28  6F                 	db	111	;'o'
  2227  007D29  63                 	db	99	;'c'
  2228  007D2A  68                 	db	104	;'h'
  2229  007D2B  69                 	db	105	;'i'
  2230  007D2C  70                 	db	112	;'p'
  2231  007D2D  20                 	db	32
  2232  007D2E  4D                 	db	77	;'M'
  2233  007D2F  6F                 	db	111	;'o'
  2234  007D30  74                 	db	116	;'t'
  2235  007D31  65                 	db	101	;'e'
  2236  007D32  00                 	db	0
  2237  007D33                     STR_53:
  2238  007D33  6D                 	db	109	;'m'
  2239  007D34  61                 	db	97	;'a'
  2240  007D35  63                 	db	99	;'c'
  2241  007D36  20                 	db	32
  2242  007D37  74                 	db	116	;'t'
  2243  007D38  78                 	db	120	;'x'
  2244  007D39  20                 	db	32
  2245  007D3A  75                 	db	117	;'u'
  2246  007D3B  6E                 	db	110	;'n'
  2247  007D3C  63                 	db	99	;'c'
  2248  007D3D  6E                 	db	110	;'n'
  2249  007D3E  66                 	db	102	;'f'
  2250  007D3F  20                 	db	32
  2251  007D40  00                 	db	0
  2252  007D41                     STR_22:
  2253  007D41  6D                 	db	109	;'m'
  2254  007D42  61                 	db	97	;'a'
  2255  007D43  63                 	db	99	;'c'
  2256  007D44  20                 	db	32
  2257  007D45  6A                 	db	106	;'j'
  2258  007D46  6F                 	db	111	;'o'
  2259  007D47  69                 	db	105	;'i'
  2260  007D48  6E                 	db	110	;'n'
  2261  007D49  20                 	db	32
  2262  007D4A  6F                 	db	111	;'o'
  2263  007D4B  74                 	db	116	;'t'
  2264  007D4C  61                 	db	97	;'a'
  2265  007D4D  61                 	db	97	;'a'
  2266  007D4E  00                 	db	0
  2267  007D4F                     STR_36:
  2268  007D4F  69                 	db	105	;'i'
  2269  007D50  6E                 	db	110	;'n'
  2270  007D51  76                 	db	118	;'v'
  2271  007D52  61                 	db	97	;'a'
  2272  007D53  6C                 	db	108	;'l'
  2273  007D54  69                 	db	105	;'i'
  2274  007D55  64                 	db	100	;'d'
  2275  007D56  5F                 	db	95	;'_'
  2276  007D57  70                 	db	112	;'p'
  2277  007D58  61                 	db	97	;'a'
  2278  007D59  72                 	db	114	;'r'
  2279  007D5A  61                 	db	97	;'a'
  2280  007D5B  6D                 	db	109	;'m'
  2281  007D5C  00                 	db	0
  2282  007D5D                     STR_24:
  2283  007D5D  6B                 	db	107	;'k'
  2284  007D5E  65                 	db	101	;'e'
  2285  007D5F  79                 	db	121	;'y'
  2286  007D60  73                 	db	115	;'s'
  2287  007D61  5F                 	db	95	;'_'
  2288  007D62  6E                 	db	110	;'n'
  2289  007D63  6F                 	db	111	;'o'
  2290  007D64  74                 	db	116	;'t'
  2291  007D65  5F                 	db	95	;'_'
  2292  007D66  69                 	db	105	;'i'
  2293  007D67  6E                 	db	110	;'n'
  2294  007D68  69                 	db	105	;'i'
  2295  007D69  74                 	db	116	;'t'
  2296  007D6A  00                 	db	0
  2297  007D6B                     STR_175:
  2298  007D6B  42                 	db	66	;'B'
  2299  007D6C  75                 	db	117	;'u'
  2300  007D6D  74                 	db	116	;'t'
  2301  007D6E  74                 	db	116	;'t'
  2302  007D6F  6F                 	db	111	;'o'
  2303  007D70  6E                 	db	110	;'n'
  2304  007D71  20                 	db	32
  2305  007D72  54                 	db	84	;'T'
  2306  007D73  65                 	db	101	;'e'
  2307  007D74  73                 	db	115	;'s'
  2308  007D75  74                 	db	116	;'t'
  2309  007D76  3A                 	db	58	;':'
  2310  007D77  00                 	db	0
  2311  007D78                     STR_178:
  2312  007D78  42                 	db	66	;'B'
  2313  007D79  75                 	db	117	;'u'
  2314  007D7A  74                 	db	116	;'t'
  2315  007D7B  74                 	db	116	;'t'
  2316  007D7C  6F                 	db	111	;'o'
  2317  007D7D  6E                 	db	110	;'n'
  2318  007D7E  31                 	db	49	;'1'
  2319  007D7F  20                 	db	32
  2320  007D80  50                 	db	80	;'P'
  2321  007D81  41                 	db	65	;'A'
  2322  007D82  53                 	db	83	;'S'
  2323  007D83  53                 	db	83	;'S'
  2324  007D84  00                 	db	0
  2325  007D85                     STR_179:
  2326  007D85  42                 	db	66	;'B'
  2327  007D86  75                 	db	117	;'u'
  2328  007D87  74                 	db	116	;'t'
  2329  007D88  74                 	db	116	;'t'
  2330  007D89  6F                 	db	111	;'o'
  2331  007D8A  6E                 	db	110	;'n'
  2332  007D8B  32                 	db	50	;'2'
  2333  007D8C  20                 	db	32
  2334  007D8D  50                 	db	80	;'P'
  2335  007D8E  41                 	db	65	;'A'
  2336  007D8F  53                 	db	83	;'S'
  2337  007D90  53                 	db	83	;'S'
  2338  007D91  00                 	db	0
  2339  007D92                     STR_177:
  2340  007D92  50                 	db	80	;'P'
  2341  007D93  72                 	db	114	;'r'
  2342  007D94  65                 	db	101	;'e'
  2343  007D95  73                 	db	115	;'s'
  2344  007D96  73                 	db	115	;'s'
  2345  007D97  20                 	db	32
  2346  007D98  42                 	db	66	;'B'
  2347  007D99  75                 	db	117	;'u'
  2348  007D9A  74                 	db	116	;'t'
  2349  007D9B  74                 	db	116	;'t'
  2350  007D9C  6F                 	db	111	;'o'
  2351  007D9D  6E                 	db	110	;'n'
  2352  007D9E  00                 	db	0
  2353  007D9F                     STR_61:
  2354  007D9F  54                 	db	84	;'T'
  2355  007DA0  68                 	db	104	;'h'
  2356  007DA1  72                 	db	114	;'r'
  2357  007DA2  6F                 	db	111	;'o'
  2358  007DA3  75                 	db	117	;'u'
  2359  007DA4  20                 	db	32
  2360  007DA5  50                 	db	80	;'P'
  2361  007DA6  6F                 	db	111	;'o'
  2362  007DA7  72                 	db	114	;'r'
  2363  007DA8  74                 	db	116	;'t'
  2364  007DA9  23                 	db	35
  2365  007DAA  20                 	db	32
  2366  007DAB  00                 	db	0
  2367  007DAC                     STR_52:
  2368  007DAC  4C                 	db	76	;'L'
  2369  007DAD  3A                 	db	58	;':'
  2370  007DAE  20                 	db	32
  2371  007DAF  20                 	db	32
  2372  007DB0  20                 	db	32
  2373  007DB1  20                 	db	32
  2374  007DB2  20                 	db	32
  2375  007DB3  20                 	db	32
  2376  007DB4  20                 	db	32
  2377  007DB5  54                 	db	84	;'T'
  2378  007DB6  3A                 	db	58	;':'
  2379  007DB7  20                 	db	32
  2380  007DB8  00                 	db	0
  2381  007DB9                     STR_143:
  2382  007DB9  6D                 	db	109	;'m'
  2383  007DBA  61                 	db	97	;'a'
  2384  007DBB  63                 	db	99	;'c'
  2385  007DBC  20                 	db	32
  2386  007DBD  73                 	db	115	;'s'
  2387  007DBE  65                 	db	101	;'e'
  2388  007DBF  74                 	db	116	;'t'
  2389  007DC0  20                 	db	32
  2390  007DC1  64                 	db	100	;'d'
  2391  007DC2  72                 	db	114	;'r'
  2392  007DC3  20                 	db	32
  2393  007DC4  30                 	db	48	;'0'
  2394  007DC5  00                 	db	0
  2395  007DC6                     STR_144:
  2396  007DC6  6D                 	db	109	;'m'
  2397  007DC7  61                 	db	97	;'a'
  2398  007DC8  63                 	db	99	;'c'
  2399  007DC9  20                 	db	32
  2400  007DCA  73                 	db	115	;'s'
  2401  007DCB  65                 	db	101	;'e'
  2402  007DCC  74                 	db	116	;'t'
  2403  007DCD  20                 	db	32
  2404  007DCE  64                 	db	100	;'d'
  2405  007DCF  72                 	db	114	;'r'
  2406  007DD0  20                 	db	32
  2407  007DD1  31                 	db	49	;'1'
  2408  007DD2  00                 	db	0
  2409  007DD3                     STR_145:
  2410  007DD3  6D                 	db	109	;'m'
  2411  007DD4  61                 	db	97	;'a'
  2412  007DD5  63                 	db	99	;'c'
  2413  007DD6  20                 	db	32
  2414  007DD7  73                 	db	115	;'s'
  2415  007DD8  65                 	db	101	;'e'
  2416  007DD9  74                 	db	116	;'t'
  2417  007DDA  20                 	db	32
  2418  007DDB  64                 	db	100	;'d'
  2419  007DDC  72                 	db	114	;'r'
  2420  007DDD  20                 	db	32
  2421  007DDE  32                 	db	50	;'2'
  2422  007DDF  00                 	db	0
  2423  007DE0                     STR_146:
  2424  007DE0  6D                 	db	109	;'m'
  2425  007DE1  61                 	db	97	;'a'
  2426  007DE2  63                 	db	99	;'c'
  2427  007DE3  20                 	db	32
  2428  007DE4  73                 	db	115	;'s'
  2429  007DE5  65                 	db	101	;'e'
  2430  007DE6  74                 	db	116	;'t'
  2431  007DE7  20                 	db	32
  2432  007DE8  64                 	db	100	;'d'
  2433  007DE9  72                 	db	114	;'r'
  2434  007DEA  20                 	db	32
  2435  007DEB  33                 	db	51	;'3'
  2436  007DEC  00                 	db	0
  2437  007DED                     STR_147:
  2438  007DED  6D                 	db	109	;'m'
  2439  007DEE  61                 	db	97	;'a'
  2440  007DEF  63                 	db	99	;'c'
  2441  007DF0  20                 	db	32
  2442  007DF1  73                 	db	115	;'s'
  2443  007DF2  65                 	db	101	;'e'
  2444  007DF3  74                 	db	116	;'t'
  2445  007DF4  20                 	db	32
  2446  007DF5  64                 	db	100	;'d'
  2447  007DF6  72                 	db	114	;'r'
  2448  007DF7  20                 	db	32
  2449  007DF8  34                 	db	52	;'4'
  2450  007DF9  00                 	db	0
  2451  007DFA                     STR_148:
  2452  007DFA  6D                 	db	109	;'m'
  2453  007DFB  61                 	db	97	;'a'
  2454  007DFC  63                 	db	99	;'c'
  2455  007DFD  20                 	db	32
  2456  007DFE  73                 	db	115	;'s'
  2457  007DFF  65                 	db	101	;'e'
  2458  007E00  74                 	db	116	;'t'
  2459  007E01  20                 	db	32
  2460  007E02  64                 	db	100	;'d'
  2461  007E03  72                 	db	114	;'r'
  2462  007E04  20                 	db	32
  2463  007E05  35                 	db	53	;'5'
  2464  007E06  00                 	db	0
  2465  007E07                     STR_149:
  2466  007E07  6D                 	db	109	;'m'
  2467  007E08  61                 	db	97	;'a'
  2468  007E09  63                 	db	99	;'c'
  2469  007E0A  20                 	db	32
  2470  007E0B  73                 	db	115	;'s'
  2471  007E0C  65                 	db	101	;'e'
  2472  007E0D  74                 	db	116	;'t'
  2473  007E0E  20                 	db	32
  2474  007E0F  64                 	db	100	;'d'
  2475  007E10  72                 	db	114	;'r'
  2476  007E11  20                 	db	32
  2477  007E12  36                 	db	54	;'6'
  2478  007E13  00                 	db	0
  2479  007E14                     STR_150:
  2480  007E14  6D                 	db	109	;'m'
  2481  007E15  61                 	db	97	;'a'
  2482  007E16  63                 	db	99	;'c'
  2483  007E17  20                 	db	32
  2484  007E18  73                 	db	115	;'s'
  2485  007E19  65                 	db	101	;'e'
  2486  007E1A  74                 	db	116	;'t'
  2487  007E1B  20                 	db	32
  2488  007E1C  64                 	db	100	;'d'
  2489  007E1D  72                 	db	114	;'r'
  2490  007E1E  20                 	db	32
  2491  007E1F  37                 	db	55	;'7'
  2492  007E20  00                 	db	0
  2493  007E21                     STR_20:
  2494  007E21  6D                 	db	109	;'m'
  2495  007E22  61                 	db	97	;'a'
  2496  007E23  63                 	db	99	;'c'
  2497  007E24  20                 	db	32
  2498  007E25  6A                 	db	106	;'j'
  2499  007E26  6F                 	db	111	;'o'
  2500  007E27  69                 	db	105	;'i'
  2501  007E28  6E                 	db	110	;'n'
  2502  007E29  20                 	db	32
  2503  007E2A  61                 	db	97	;'a'
  2504  007E2B  62                 	db	98	;'b'
  2505  007E2C  70                 	db	112	;'p'
  2506  007E2D  00                 	db	0
  2507  007E2E                     STR_173:
  2508  007E2E  4E                 	db	78	;'N'
  2509  007E2F  6F                 	db	111	;'o'
  2510  007E30  76                 	db	118	;'v'
  2511  007E31  20                 	db	32
  2512  007E32  32                 	db	50	;'2'
  2513  007E33  32                 	db	50	;'2'
  2514  007E34  20                 	db	32
  2515  007E35  32                 	db	50	;'2'
  2516  007E36  30                 	db	48	;'0'
  2517  007E37  31                 	db	49	;'1'
  2518  007E38  38                 	db	56	;'8'
  2519  007E39  00                 	db	0
  2520  007E3A                     STR_176:
  2521  007E3A  42                 	db	66	;'B'
  2522  007E3B  75                 	db	117	;'u'
  2523  007E3C  74                 	db	116	;'t'
  2524  007E3D  74                 	db	116	;'t'
  2525  007E3E  6F                 	db	111	;'o'
  2526  007E3F  6E                 	db	110	;'n'
  2527  007E40  20                 	db	32
  2528  007E41  46                 	db	70	;'F'
  2529  007E42  41                 	db	65	;'A'
  2530  007E43  49                 	db	73	;'I'
  2531  007E44  4C                 	db	76	;'L'
  2532  007E45  00                 	db	0
  2533  007E46                     STR_168:
  2534  007E46  55                 	db	85	;'U'
  2535  007E47  53                 	db	83	;'S'
  2536  007E48  42                 	db	66	;'B'
  2537  007E49  20                 	db	32
  2538  007E4A  48                 	db	72	;'H'
  2539  007E4B  61                 	db	97	;'a'
  2540  007E4C  6E                 	db	110	;'n'
  2541  007E4D  64                 	db	100	;'d'
  2542  007E4E  6C                 	db	108	;'l'
  2543  007E4F  65                 	db	101	;'e'
  2544  007E50  72                 	db	114	;'r'
  2545  007E51  00                 	db	0
  2546  007E52                     STR_51:
  2547  007E52  4F                 	db	79	;'O'
  2548  007E53  6E                 	db	110	;'n'
  2549  007E54  20                 	db	32
  2550  007E55  50                 	db	80	;'P'
  2551  007E56  6F                 	db	111	;'o'
  2552  007E57  72                 	db	114	;'r'
  2553  007E58  74                 	db	116	;'t'
  2554  007E59  20                 	db	32
  2555  007E5A  23                 	db	35
  2556  007E5B  3A                 	db	58	;':'
  2557  007E5C  20                 	db	32
  2558  007E5D  00                 	db	0
  2559  007E5E                     STR_66:
  2560  007E5E  54                 	db	84	;'T'
  2561  007E5F  78                 	db	120	;'x'
  2562  007E60  20                 	db	32
  2563  007E61  50                 	db	80	;'P'
  2564  007E62  6F                 	db	111	;'o'
  2565  007E63  72                 	db	114	;'r'
  2566  007E64  74                 	db	116	;'t'
  2567  007E65  20                 	db	32
  2568  007E66  23                 	db	35
  2569  007E67  3A                 	db	58	;':'
  2570  007E68  20                 	db	32
  2571  007E69  00                 	db	0
  2572  007E6A                     STR_65:
  2573  007E6A  53                 	db	83	;'S'
  2574  007E6B  65                 	db	101	;'e'
  2575  007E6C  6E                 	db	110	;'n'
  2576  007E6D  74                 	db	116	;'t'
  2577  007E6E  20                 	db	32
  2578  007E6F  44                 	db	68	;'D'
  2579  007E70  61                 	db	97	;'a'
  2580  007E71  74                 	db	116	;'t'
  2581  007E72  61                 	db	97	;'a'
  2582  007E73  3A                 	db	58	;':'
  2583  007E74  20                 	db	32
  2584  007E75  00                 	db	0
  2585  007E76                     STR_115:
  2586  007E76  44                 	db	68	;'D'
  2587  007E77  61                 	db	97	;'a'
  2588  007E78  74                 	db	116	;'t'
  2589  007E79  61                 	db	97	;'a'
  2590  007E7A  20                 	db	32
  2591  007E7B  52                 	db	82	;'R'
  2592  007E7C  61                 	db	97	;'a'
  2593  007E7D  74                 	db	116	;'t'
  2594  007E7E  65                 	db	101	;'e'
  2595  007E7F  3A                 	db	58	;':'
  2596  007E80  20                 	db	32
  2597  007E81  00                 	db	0
  2598  007E82                     STR_64:
  2599  007E82  6D                 	db	109	;'m'
  2600  007E83  61                 	db	97	;'a'
  2601  007E84  63                 	db	99	;'c'
  2602  007E85  20                 	db	32
  2603  007E86  74                 	db	116	;'t'
  2604  007E87  78                 	db	120	;'x'
  2605  007E88  20                 	db	32
  2606  007E89  63                 	db	99	;'c'
  2607  007E8A  6E                 	db	110	;'n'
  2608  007E8B  66                 	db	102	;'f'
  2609  007E8C  20                 	db	32
  2610  007E8D  00                 	db	0
  2611  007E8E                     STR_180:
  2612  007E8E  43                 	db	67	;'C'
  2613  007E8F  6F                 	db	111	;'o'
  2614  007E90  6D                 	db	109	;'m'
  2615  007E91  6D                 	db	109	;'m'
  2616  007E92  20                 	db	32
  2617  007E93  54                 	db	84	;'T'
  2618  007E94  65                 	db	101	;'e'
  2619  007E95  73                 	db	115	;'s'
  2620  007E96  74                 	db	116	;'t'
  2621  007E97  3A                 	db	58	;':'
  2622  007E98  00                 	db	0
  2623  007E99                     STR_40:
  2624  007E99  4F                 	db	79	;'O'
  2625  007E9A  54                 	db	84	;'T'
  2626  007E9B  41                 	db	65	;'A'
  2627  007E9C  41                 	db	65	;'A'
  2628  007E9D  20                 	db	32
  2629  007E9E  4A                 	db	74	;'J'
  2630  007E9F  6F                 	db	111	;'o'
  2631  007EA0  69                 	db	105	;'i'
  2632  007EA1  6E                 	db	110	;'n'
  2633  007EA2  20                 	db	32
  2634  007EA3  00                 	db	0
  2635  007EA4                     STR_38:
  2636  007EA4  6E                 	db	110	;'n'
  2637  007EA5  6F                 	db	111	;'o'
  2638  007EA6  5F                 	db	95	;'_'
  2639  007EA7  66                 	db	102	;'f'
  2640  007EA8  72                 	db	114	;'r'
  2641  007EA9  65                 	db	101	;'e'
  2642  007EAA  65                 	db	101	;'e'
  2643  007EAB  5F                 	db	95	;'_'
  2644  007EAC  63                 	db	99	;'c'
  2645  007EAD  68                 	db	104	;'h'
  2646  007EAE  00                 	db	0
  2647  007EAF                     STR_30:
  2648  007EAF  53                 	db	83	;'S'
  2649  007EB0  75                 	db	117	;'u'
  2650  007EB1  63                 	db	99	;'c'
  2651  007EB2  63                 	db	99	;'c'
  2652  007EB3  65                 	db	101	;'e'
  2653  007EB4  73                 	db	115	;'s'
  2654  007EB5  73                 	db	115	;'s'
  2655  007EB6  66                 	db	102	;'f'
  2656  007EB7  75                 	db	117	;'u'
  2657  007EB8  6C                 	db	108	;'l'
  2658  007EB9  00                 	db	0
  2659  007EBA                     STR_47:
  2660  007EBA  6D                 	db	109	;'m'
  2661  007EBB  61                 	db	97	;'a'
  2662  007EBC  63                 	db	99	;'c'
  2663  007EBD  20                 	db	32
  2664  007EBE  67                 	db	103	;'g'
  2665  007EBF  65                 	db	101	;'e'
  2666  007EC0  74                 	db	116	;'t'
  2667  007EC1  20                 	db	32
  2668  007EC2  64                 	db	100	;'d'
  2669  007EC3  72                 	db	114	;'r'
  2670  007EC4  00                 	db	0
  2671  007EC5                     STR_25:
  2672  007EC5  56                 	db	86	;'V'
  2673  007EC6  61                 	db	97	;'a'
  2674  007EC7  6C                 	db	108	;'l'
  2675  007EC8  69                 	db	105	;'i'
  2676  007EC9  64                 	db	100	;'d'
  2677  007ECA  20                 	db	32
  2678  007ECB  4B                 	db	75	;'K'
  2679  007ECC  65                 	db	101	;'e'
  2680  007ECD  79                 	db	121	;'y'
  2681  007ECE  73                 	db	115	;'s'
  2682  007ECF  00                 	db	0
  2683  007ED0                     STR_181:
  2684  007ED0  4C                 	db	76	;'L'
  2685  007ED1  45                 	db	69	;'E'
  2686  007ED2  44                 	db	68	;'D'
  2687  007ED3  20                 	db	32
  2688  007ED4  54                 	db	84	;'T'
  2689  007ED5  65                 	db	101	;'e'
  2690  007ED6  73                 	db	115	;'s'
  2691  007ED7  74                 	db	116	;'t'
  2692  007ED8  3A                 	db	58	;':'
  2693  007ED9  00                 	db	0
  2694  007EDA                     STR_85:
  2695  007EDA  52                 	db	82	;'R'
  2696  007EDB  78                 	db	120	;'x'
  2697  007EDC  20                 	db	32
  2698  007EDD  50                 	db	80	;'P'
  2699  007EDE  6F                 	db	111	;'o'
  2700  007EDF  72                 	db	114	;'r'
  2701  007EE0  74                 	db	116	;'t'
  2702  007EE1  23                 	db	35
  2703  007EE2  20                 	db	32
  2704  007EE3  00                 	db	0
  2705  007EE4                     STR_29:
  2706  007EE4  41                 	db	65	;'A'
  2707  007EE5  42                 	db	66	;'B'
  2708  007EE6  50                 	db	80	;'P'
  2709  007EE7  20                 	db	32
  2710  007EE8  4A                 	db	74	;'J'
  2711  007EE9  6F                 	db	111	;'o'
  2712  007EEA  69                 	db	105	;'i'
  2713  007EEB  6E                 	db	110	;'n'
  2714  007EEC  20                 	db	32
  2715  007EED  00                 	db	0
  2716  007EEE                     STR_7:
  2717  007EEE  4D                 	db	77	;'M'
  2718  007EEF  4F                 	db	79	;'O'
  2719  007EF0  54                 	db	84	;'T'
  2720  007EF1  45                 	db	69	;'E'
  2721  007EF2  20                 	db	32
  2722  007EF3  4D                 	db	77	;'M'
  2723  007EF4  6F                 	db	111	;'o'
  2724  007EF5  64                 	db	100	;'d'
  2725  007EF6  65                 	db	101	;'e'
  2726  007EF7  00                 	db	0
  2727  007EF8                     STR_43:
  2728  007EF8  4F                 	db	79	;'O'
  2729  007EF9  54                 	db	84	;'T'
  2730  007EFA  41                 	db	65	;'A'
  2731  007EFB  41                 	db	65	;'A'
  2732  007EFC  20                 	db	32
  2733  007EFD  4A                 	db	74	;'J'
  2734  007EFE  6F                 	db	111	;'o'
  2735  007EFF  69                 	db	105	;'i'
  2736  007F00  6E                 	db	110	;'n'
  2737  007F01  00                 	db	0
  2738  007F02                     STR_31:
  2739  007F02  6D                 	db	109	;'m'
  2740  007F03  61                 	db	97	;'a'
  2741  007F04  63                 	db	99	;'c'
  2742  007F05  20                 	db	32
  2743  007F06  72                 	db	114	;'r'
  2744  007F07  65                 	db	101	;'e'
  2745  007F08  73                 	db	115	;'s'
  2746  007F09  65                 	db	101	;'e'
  2747  007F0A  74                 	db	116	;'t'
  2748  007F0B  00                 	db	0
  2749  007F0C                     STR_13:
  2750  007F0C  73                 	db	115	;'s'
  2751  007F0D  79                 	db	121	;'y'
  2752  007F0E  73                 	db	115	;'s'
  2753  007F0F  20                 	db	32
  2754  007F10  72                 	db	114	;'r'
  2755  007F11  65                 	db	101	;'e'
  2756  007F12  73                 	db	115	;'s'
  2757  007F13  65                 	db	101	;'e'
  2758  007F14  74                 	db	116	;'t'
  2759  007F15  00                 	db	0
  2760  007F16                     STR_169:
  2761  007F16  4D                 	db	77	;'M'
  2762  007F17  6F                 	db	111	;'o'
  2763  007F18  54                 	db	84	;'T'
  2764  007F19  65                 	db	101	;'e'
  2765  007F1A  20                 	db	32
  2766  007F1B  76                 	db	118	;'v'
  2767  007F1C  20                 	db	32
  2768  007F1D  2E                 	db	46
  2769  007F1E  00                 	db	0
  2770  007F1F                     STR_174:
  2771  007F1F  31                 	db	49	;'1'
  2772  007F20  30                 	db	48	;'0'
  2773  007F21  3A                 	db	58	;':'
  2774  007F22  31                 	db	49	;'1'
  2775  007F23  34                 	db	52	;'4'
  2776  007F24  3A                 	db	58	;':'
  2777  007F25  32                 	db	50	;'2'
  2778  007F26  30                 	db	48	;'0'
  2779  007F27  00                 	db	0
  2780  007F28  52                 	db	82	;'R'
  2781  007F29  46                 	db	70	;'F'
  2782  007F2A  20                 	db	32
  2783  007F2B  54                 	db	84	;'T'
  2784  007F2C  65                 	db	101	;'e'
  2785  007F2D  73                 	db	115	;'s'
  2786  007F2E  74                 	db	116	;'t'
  2787  007F2F  3A                 	db	58	;':'
  2788  007F30  00                 	db	0
  2789  007F31                     STR_166:
  2790  007F31  43                 	db	67	;'C'
  2791  007F32  44                 	db	68	;'D'
  2792  007F33  43                 	db	67	;'C'
  2793  007F34  20                 	db	32
  2794  007F35  4D                 	db	77	;'M'
  2795  007F36  6F                 	db	111	;'o'
  2796  007F37  64                 	db	100	;'d'
  2797  007F38  65                 	db	101	;'e'
  2798  007F39  00                 	db	0
  2799  007F3A                     STR_26:
  2800  007F3A  52                 	db	82	;'R'
  2801  007F3B  65                 	db	101	;'e'
  2802  007F3C  71                 	db	113	;'q'
  2803  007F3D  75                 	db	117	;'u'
  2804  007F3E  69                 	db	105	;'i'
  2805  007F3F  72                 	db	114	;'r'
  2806  007F40  65                 	db	101	;'e'
  2807  007F41  64                 	db	100	;'d'
  2808  007F42  00                 	db	0
  2809  007F43                     STR_28:
  2810  007F43  61                 	db	97	;'a'
  2811  007F44  63                 	db	99	;'c'
  2812  007F45  63                 	db	99	;'c'
  2813  007F46  65                 	db	101	;'e'
  2814  007F47  70                 	db	112	;'p'
  2815  007F48  74                 	db	116	;'t'
  2816  007F49  65                 	db	101	;'e'
  2817  007F4A  64                 	db	100	;'d'
  2818  007F4B  00                 	db	0
  2819  007F4C                     STR_152:
  2820  007F4C  6D                 	db	109	;'m'
  2821  007F4D  61                 	db	97	;'a'
  2822  007F4E  63                 	db	99	;'c'
  2823  007F4F  20                 	db	32
  2824  007F50  73                 	db	115	;'s'
  2825  007F51  61                 	db	97	;'a'
  2826  007F52  76                 	db	118	;'v'
  2827  007F53  65                 	db	101	;'e'
  2828  007F54  00                 	db	0
  2829  007F55                     STR_8:
  2830  007F55  53                 	db	83	;'S'
  2831  007F56  74                 	db	116	;'t'
  2832  007F57  61                 	db	97	;'a'
  2833  007F58  72                 	db	114	;'r'
  2834  007F59  74                 	db	116	;'t'
  2835  007F5A  69                 	db	105	;'i'
  2836  007F5B  6E                 	db	110	;'n'
  2837  007F5C  67                 	db	103	;'g'
  2838  007F5D  00                 	db	0
  2839  007F5E                     STR_158:
  2840  007F5E  41                 	db	65	;'A'
  2841  007F5F  44                 	db	68	;'D'
  2842  007F60  43                 	db	67	;'C'
  2843  007F61  20                 	db	32
  2844  007F62  54                 	db	84	;'T'
  2845  007F63  65                 	db	101	;'e'
  2846  007F64  73                 	db	115	;'s'
  2847  007F65  74                 	db	116	;'t'
  2848  007F66  00                 	db	0
  2849  007F67                     STR_167:
  2850  007F67  43                 	db	67	;'C'
  2851  007F68  6F                 	db	111	;'o'
  2852  007F69  6D                 	db	109	;'m'
  2853  007F6A  6D                 	db	109	;'m'
  2854  007F6B  61                 	db	97	;'a'
  2855  007F6C  6E                 	db	110	;'n'
  2856  007F6D  64                 	db	100	;'d'
  2857  007F6E  00                 	db	0
  2858  007F6F                     STR_160:
  2859  007F6F  54                 	db	84	;'T'
  2860  007F70  65                 	db	101	;'e'
  2861  007F71  6D                 	db	109	;'m'
  2862  007F72  70                 	db	112	;'p'
  2863  007F73  20                 	db	32
  2864  007F74  20                 	db	32
  2865  007F75  3D                 	db	61	;'='
  2866  007F76  00                 	db	0
  2867  007F77                     STR_159:
  2868  007F77  4C                 	db	76	;'L'
  2869  007F78  69                 	db	105	;'i'
  2870  007F79  67                 	db	103	;'g'
  2871  007F7A  68                 	db	104	;'h'
  2872  007F7B  74                 	db	116	;'t'
  2873  007F7C  20                 	db	32
  2874  007F7D  3D                 	db	61	;'='
  2875  007F7E  00                 	db	0
  2876  007F7F                     STR_96:
  2877  007F7F  54                 	db	84	;'T'
  2878  007F80  65                 	db	101	;'e'
  2879  007F81  6D                 	db	109	;'m'
  2880  007F82  70                 	db	112	;'p'
  2881  007F83  20                 	db	32
  2882  007F84  3A                 	db	58	;':'
  2883  007F85  00                 	db	0
  2884  007F86                     STR_95:
  2885  007F86  4C                 	db	76	;'L'
  2886  007F87  69                 	db	105	;'i'
  2887  007F88  67                 	db	103	;'g'
  2888  007F89  68                 	db	104	;'h'
  2889  007F8A  74                 	db	116	;'t'
  2890  007F8B  3A                 	db	58	;':'
  2891  007F8C  00                 	db	0
  2892  007F8D                     STR_100:
  2893  007F8D  45                 	db	69	;'E'
  2894  007F8E  76                 	db	118	;'v'
  2895  007F8F  65                 	db	101	;'e'
  2896  007F90  72                 	db	114	;'r'
  2897  007F91  79                 	db	121	;'y'
  2898  007F92  3A                 	db	58	;':'
  2899  007F93  00                 	db	0
  2900  007F94                     STR_44:
  2901  007F94  44                 	db	68	;'D'
  2902  007F95  65                 	db	101	;'e'
  2903  007F96  6E                 	db	110	;'n'
  2904  007F97  69                 	db	105	;'i'
  2905  007F98  65                 	db	101	;'e'
  2906  007F99  64                 	db	100	;'d'
  2907  007F9A  00                 	db	0
  2908  007F9B                     STR_42:
  2909  007F9B  64                 	db	100	;'d'
  2910  007F9C  65                 	db	101	;'e'
  2911  007F9D  6E                 	db	110	;'n'
  2912  007F9E  69                 	db	105	;'i'
  2913  007F9F  65                 	db	101	;'e'
  2914  007FA0  64                 	db	100	;'d'
  2915  007FA1  00                 	db	0
  2916  007FA2                     STR_76:
  2917  007FA2  6E                 	db	110	;'n'
  2918  007FA3  6F                 	db	111	;'o'
  2919  007FA4  5F                 	db	95	;'_'
  2920  007FA5  66                 	db	102	;'f'
  2921  007FA6  72                 	db	114	;'r'
  2922  007FA7  65                 	db	101	;'e'
  2923  007FA8  00                 	db	0
  2924  007FA9                     STR_74:
  2925  007FA9  6D                 	db	109	;'m'
  2926  007FAA  61                 	db	97	;'a'
  2927  007FAB  63                 	db	99	;'c'
  2928  007FAC  5F                 	db	95	;'_'
  2929  007FAD  65                 	db	101	;'e'
  2930  007FAE  72                 	db	114	;'r'
  2931  007FAF  00                 	db	0
  2932  007FB0                     STR_69:
  2933  007FB0  6D                 	db	109	;'m'
  2934  007FB1  61                 	db	97	;'a'
  2935  007FB2  63                 	db	99	;'c'
  2936  007FB3  5F                 	db	95	;'_'
  2937  007FB4  72                 	db	114	;'r'
  2938  007FB5  78                 	db	120	;'x'
  2939  007FB6  00                 	db	0
  2940  007FB7                     STR_72:
  2941  007FB7  6D                 	db	109	;'m'
  2942  007FB8  61                 	db	97	;'a'
  2943  007FB9  63                 	db	99	;'c'
  2944  007FBA  5F                 	db	95	;'_'
  2945  007FBB  74                 	db	116	;'t'
  2946  007FBC  78                 	db	120	;'x'
  2947  007FBD  00                 	db	0
  2948  007FBE                     STR_14:
  2949  007FBE  52                 	db	82	;'R'
  2950  007FBF  4E                 	db	78	;'N'
  2951  007FC0  32                 	db	50	;'2'
  2952  007FC1  39                 	db	57	;'9'
  2953  007FC2  00                 	db	0
  2954  007FC3                     STR_101:
  2955  007FC3  4D                 	db	77	;'M'
  2956  007FC4  69                 	db	105	;'i'
  2957  007FC5  6E                 	db	110	;'n'
  2958  007FC6  73                 	db	115	;'s'
  2959  007FC7  00                 	db	0
  2960  007FC8                     STR_117:
  2961  007FC8  20                 	db	32
  2962  007FC9  30                 	db	48	;'0'
  2963  007FCA  20                 	db	32
  2964  007FCB  00                 	db	0
  2965  007FCC                     STR_118:
  2966  007FCC  20                 	db	32
  2967  007FCD  31                 	db	49	;'1'
  2968  007FCE  20                 	db	32
  2969  007FCF  00                 	db	0
  2970  007FD0                     STR_119:
  2971  007FD0  20                 	db	32
  2972  007FD1  32                 	db	50	;'2'
  2973  007FD2  20                 	db	32
  2974  007FD3  00                 	db	0
  2975  007FD4                     STR_120:
  2976  007FD4  20                 	db	32
  2977  007FD5  33                 	db	51	;'3'
  2978  007FD6  20                 	db	32
  2979  007FD7  00                 	db	0
  2980  007FD8                     STR_121:
  2981  007FD8  20                 	db	32
  2982  007FD9  34                 	db	52	;'4'
  2983  007FDA  20                 	db	32
  2984  007FDB  00                 	db	0
  2985  007FDC                     STR_122:
  2986  007FDC  20                 	db	32
  2987  007FDD  35                 	db	53	;'5'
  2988  007FDE  20                 	db	32
  2989  007FDF  00                 	db	0
  2990  007FE0                     STR_125:
  2991  007FE0  20                 	db	32
  2992  007FE1  31                 	db	49	;'1'
  2993  007FE2  30                 	db	48	;'0'
  2994  007FE3  00                 	db	0
  2995  007FE4                     STR_127:
  2996  007FE4  20                 	db	32
  2997  007FE5  33                 	db	51	;'3'
  2998  007FE6  30                 	db	48	;'0'
  2999  007FE7  00                 	db	0
  3000  007FE8                     STR_128:
  3001  007FE8  20                 	db	32
  3002  007FE9  36                 	db	54	;'6'
  3003  007FEA  30                 	db	48	;'0'
  3004  007FEB  00                 	db	0
  3005  007FEC                     STR_126:
  3006  007FEC  20                 	db	32
  3007  007FED  31                 	db	49	;'1'
  3008  007FEE  35                 	db	53	;'5'
  3009  007FEF  00                 	db	0
  3010  007FF0                     STR_107:
  3011  007FF0  4F                 	db	79	;'O'
  3012  007FF1  46                 	db	70	;'F'
  3013  007FF2  46                 	db	70	;'F'
  3014  007FF3  00                 	db	0
  3015  007FF4                     STR_123:
  3016  007FF4  41                 	db	65	;'A'
  3017  007FF5  44                 	db	68	;'D'
  3018  007FF6  52                 	db	82	;'R'
  3019  007FF7  00                 	db	0
  3020  007FF8                     STR_23:
  3021  007FF8  6F                 	db	111	;'o'
  3022  007FF9  6B                 	db	107	;'k'
  3023  007FFA  00                 	db	0
  3024  007FFB                     STR_97:
  3025  007FFB  43                 	db	67	;'C'
  3026  007FFC  00                 	db	0
  3027  007FFD                     STR_4:
  3028  007FFD  7A                 	db	122	;'z'
  3029  007FFE  00                 	db	0
  3030  0000                     
  3031                           ; #config settings
  3032  007FFF  00                 	db	0	; dummy byte at the end
  3033  0000                     
  3034                           	psect	cinit
  3035  004336                     __pcinit:
  3036                           	opt stack 0
  3037  004336                     start_initialization:
  3038                           	opt stack 0
  3039  004336                     __initialization:
  3040                           	opt stack 0
  3041                           
  3042                           ; Initialize objects allocated to BANK1 (2 bytes)
  3043                           ; load TBLPTR registers with __pidataBANK1
  3044  004336  0ECA               	movlw	low __pidataBANK1
  3045  004338  6EF6               	movwf	tblptrl,c
  3046  00433A  0E57               	movlw	high __pidataBANK1
  3047  00433C  6EF7               	movwf	tblptrh,c
  3048  00433E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3049  004340  6EF8               	movwf	tblptru,c
  3050  004342  0009               	tblrd		*+	;fetch initializer
  3051  004344  CFF5 F1F0          	movff	tablat,__pdataBANK1
  3052  004348  0009               	tblrd		*+	;fetch initializer
  3053  00434A  CFF5 F1F1          	movff	tablat,__pdataBANK1+1
  3054                           
  3055                           ; Initialize objects allocated to BANK0 (8 bytes)
  3056                           ; load TBLPTR registers with __pidataBANK0
  3057  00434E  0E7A               	movlw	low __pidataBANK0
  3058  004350  6EF6               	movwf	tblptrl,c
  3059  004352  0E57               	movlw	high __pidataBANK0
  3060  004354  6EF7               	movwf	tblptrh,c
  3061  004356  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3062  004358  6EF8               	movwf	tblptru,c
  3063  00435A  EE00  F0F8         	lfsr	0,__pdataBANK0
  3064  00435E  EE10 F008          	lfsr	1,8
  3065  004362                     copy_data0:
  3066  004362  0009               	tblrd		*+
  3067  004364  CFF5 FFEE          	movff	tablat,postinc0
  3068  004368  50E5               	movf	postdec1,w,c
  3069  00436A  50E1               	movf	fsr1l,w,c
  3070  00436C  E1FA               	bnz	copy_data0
  3071                           
  3072                           ; Initialize objects allocated to COMRAM (2 bytes)
  3073                           ; load TBLPTR registers with __pidataCOMRAM
  3074  00436E  0EC8               	movlw	low __pidataCOMRAM
  3075  004370  6EF6               	movwf	tblptrl,c
  3076  004372  0E57               	movlw	high __pidataCOMRAM
  3077  004374  6EF7               	movwf	tblptrh,c
  3078  004376  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3079  004378  6EF8               	movwf	tblptru,c
  3080  00437A  0009               	tblrd		*+	;fetch initializer
  3081  00437C  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  3082  004380  0009               	tblrd		*+	;fetch initializer
  3083  004382  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
  3084                           
  3085                           ; Clear objects allocated to BANK2 (192 bytes)
  3086  004386  EE02  F000         	lfsr	0,__pbssBANK2
  3087  00438A  0EC0               	movlw	192
  3088  00438C                     clear_0:
  3089  00438C  6AEE               	clrf	postinc0,c
  3090  00438E  06E8               	decf	wreg,f,c
  3091  004390  E1FD               	bnz	clear_0
  3092                           
  3093                           ; Clear objects allocated to BANK1 (240 bytes)
  3094  004392  EE01  F000         	lfsr	0,__pbssBANK1
  3095  004396  0EF0               	movlw	240
  3096  004398                     clear_1:
  3097  004398  6AEE               	clrf	postinc0,c
  3098  00439A  06E8               	decf	wreg,f,c
  3099  00439C  E1FD               	bnz	clear_1
  3100                           
  3101                           ; Clear objects allocated to BANK0 (60 bytes)
  3102  00439E  EE00  F0BC         	lfsr	0,__pbssBANK0
  3103  0043A2  0E3C               	movlw	60
  3104  0043A4                     clear_2:
  3105  0043A4  6AEE               	clrf	postinc0,c
  3106  0043A6  06E8               	decf	wreg,f,c
  3107  0043A8  E1FD               	bnz	clear_2
  3108                           
  3109                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3110  0043AA  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3111                           
  3112                           ; Clear objects allocated to COMRAM (41 bytes)
  3113  0043AC  EE00  F032         	lfsr	0,__pbssCOMRAM
  3114  0043B0  0E29               	movlw	41
  3115  0043B2                     clear_3:
  3116  0043B2  6AEE               	clrf	postinc0,c
  3117  0043B4  06E8               	decf	wreg,f,c
  3118  0043B6  E1FD               	bnz	clear_3
  3119  0043B8                     end_of_initialization:
  3120                           	opt stack 0
  3121  0043B8                     __end_of__initialization:
  3122                           	opt stack 0
  3123  0043B8  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3124  0043BA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3125  0043BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3126  0043BE  6EF8               	movwf	tblptru,c
  3127  0043C0  0100               	movlb	0
  3128  0043C2  EF25  F016         	goto	_main	;jump to C main() function
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           postdec1	equ	0xFE5
  3136                           fsr1l	equ	0xFE1
  3137                           
  3138                           	psect	bitbssCOMRAM
  3139  0002E8                     __pbitbssCOMRAM:
  3140                           	opt stack 0
  3141  0002E8                     _log:
  3142                           	opt stack 0
  3143  0002E8                     	ds	1
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           
  3153                           	psect	bssCOMRAM
  3154  000032                     __pbssCOMRAM:
  3155                           	opt stack 0
  3156  000032                     _CDCDataInHandle:
  3157                           	opt stack 0
  3158  000032                     	ds	2
  3159  000034                     _pBDTEntryEP0OutNext:
  3160                           	opt stack 0
  3161  000034                     	ds	2
  3162  000036                     _pBDTEntryEP0OutCurrent:
  3163                           	opt stack 0
  3164  000036                     	ds	2
  3165  000038                     _timer3ReloadVal:
  3166                           	opt stack 0
  3167  000038                     	ds	2
  3168  00003A                     _timer1ReloadVal:
  3169                           	opt stack 0
  3170  00003A                     	ds	2
  3171  00003C                     _timerMinTickCount:
  3172                           	opt stack 0
  3173  00003C                     	ds	2
  3174  00003E                     USBapp_LEDUpdateStatus@ledCount:
  3175                           	opt stack 0
  3176  00003E                     	ds	2
  3177  000040                     _control_signal_bitmap:
  3178                           	opt stack 0
  3179  000040                     	ds	1
  3180  000041                     _USBDeferOUTDataStagePackets:
  3181                           	opt stack 0
  3182  000041                     	ds	1
  3183  000042                     _USBDeferINDataStagePackets:
  3184                           	opt stack 0
  3185  000042                     	ds	1
  3186  000043                     _USBStatusStageEnabledFlag2:
  3187                           	opt stack 0
  3188  000043                     	ds	1
  3189  000044                     _USBStatusStageEnabledFlag1:
  3190                           	opt stack 0
  3191  000044                     	ds	1
  3192  000045                     _USBDeferStatusStagePacket:
  3193                           	opt stack 0
  3194  000045                     	ds	1
  3195  000046                     _USBStatusStageTimeoutCounter:
  3196                           	opt stack 0
  3197  000046                     	ds	1
  3198  000047                     _BothEP0OutUOWNsSet:
  3199                           	opt stack 0
  3200  000047                     	ds	1
  3201  000048                     _endpoint_number:
  3202                           	opt stack 0
  3203  000048                     	ds	1
  3204  000049                     _USBBusIsSuspended:
  3205                           	opt stack 0
  3206  000049                     	ds	1
  3207  00004A                     _RemoteWakeup:
  3208                           	opt stack 0
  3209  00004A                     	ds	1
  3210  00004B                     _controlTransferState:
  3211                           	opt stack 0
  3212  00004B                     	ds	1
  3213  00004C                     _shortPacketStatus:
  3214                           	opt stack 0
  3215  00004C                     	ds	1
  3216  00004D                     	ds	1
  3217  00004E                     	ds	1
  3218  00004F                     _minTicker:
  3219                           	opt stack 0
  3220  00004F                     	ds	1
  3221  000050                     	ds	1
  3222  000051                     	ds	1
  3223  000052                     _responseReady:
  3224                           	opt stack 0
  3225  000052                     	ds	1
  3226  000053                     	ds	1
  3227  000054                     _moteModeState:
  3228                           	opt stack 0
  3229  000054                     	ds	1
  3230  000055                     _appState:
  3231                           	opt stack 0
  3232  000055                     	ds	1
  3233  000056                     _mainState:
  3234                           	opt stack 0
  3235  000056                     	ds	1
  3236  000057                     _USBAlternateInterface:
  3237                           	opt stack 0
  3238  000057                     	ds	2
  3239  000059                     _USTATcopy:
  3240                           	opt stack 0
  3241  000059                     	ds	1
  3242  00005A                     _USBActiveConfiguration:
  3243                           	opt stack 0
  3244  00005A                     	ds	1
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           postdec1	equ	0xFE5
  3252                           fsr1l	equ	0xFE1
  3253                           
  3254                           	psect	dataCOMRAM
  3255  00005B                     __pdataCOMRAM:
  3256                           	opt stack 0
  3257  00005B                     _Contrast_level:
  3258                           	opt stack 0
  3259  00005B                     	ds	1
  3260  00005C                     	ds	1
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           fsr1l	equ	0xFE1
  3269                           
  3270                           	psect	bssBANK0
  3271  0000BC                     __pbssBANK0:
  3272                           	opt stack 0
  3273  0000BC                     _outPipes:
  3274                           	opt stack 0
  3275  0000BC                     	ds	8
  3276  0000C4                     _inPipes:
  3277                           	opt stack 0
  3278  0000C4                     	ds	6
  3279  0000CA                     _pBDTEntryIn:
  3280                           	opt stack 0
  3281  0000CA                     	ds	6
  3282  0000D0                     _ep_data_out:
  3283                           	opt stack 0
  3284  0000D0                     	ds	3
  3285  0000D3                     _ep_data_in:
  3286                           	opt stack 0
  3287  0000D3                     	ds	3
  3288  0000D6                     _CDCDataOutHandle:
  3289                           	opt stack 0
  3290  0000D6                     	ds	2
  3291  0000D8                     _timerMsTickCount:
  3292                           	opt stack 0
  3293  0000D8                     	ds	2
  3294  0000DA                     _temperature:
  3295                           	opt stack 0
  3296  0000DA                     	ds	2
  3297  0000DC                     _cdc_mem_type:
  3298                           	opt stack 0
  3299  0000DC                     	ds	1
  3300  0000DD                     _cdc_tx_len:
  3301                           	opt stack 0
  3302  0000DD                     	ds	1
  3303  0000DE                     _cdc_rx_len:
  3304                           	opt stack 0
  3305  0000DE                     	ds	1
  3306  0000DF                     _eusartRxTail:
  3307                           	opt stack 0
  3308  0000DF                     	ds	1
  3309  0000E0                     _eusartRxHead:
  3310                           	opt stack 0
  3311  0000E0                     	ds	1
  3312  0000E1                     _eusartTxBufferRemaining:
  3313                           	opt stack 0
  3314  0000E1                     	ds	1
  3315  0000E2                     _eusartTxTail:
  3316                           	opt stack 0
  3317  0000E2                     	ds	1
  3318  0000E3                     _eusartTxHead:
  3319                           	opt stack 0
  3320  0000E3                     	ds	1
  3321  0000E4                     service_pushbutton@Release_Timer:
  3322                           	opt stack 0
  3323  0000E4                     	ds	1
  3324  0000E5                     _RS232cp:
  3325                           	opt stack 0
  3326  0000E5                     	ds	1
  3327  0000E6                     _LastRS232Out:
  3328                           	opt stack 0
  3329  0000E6                     	ds	1
  3330  0000E7                     _RS232_Out_Data_Rdy:
  3331                           	opt stack 0
  3332  0000E7                     	ds	1
  3333  0000E8                     _NextUSBOut:
  3334                           	opt stack 0
  3335  0000E8                     	ds	1
  3336  0000E9                     _rxByteFlag:
  3337                           	opt stack 0
  3338  0000E9                     	ds	1
  3339  0000EA                     _usbState:
  3340                           	opt stack 0
  3341  0000EA                     	ds	1
  3342  0000EB                     _cdc_trf_state:
  3343                           	opt stack 0
  3344  0000EB                     	ds	1
  3345  0000EC                     _USBDeviceState:
  3346                           	opt stack 0
  3347  0000EC                     	ds	1
  3348  0000ED                     _lightStringSize:
  3349                           	opt stack 0
  3350  0000ED                     	ds	1
  3351  0000EE                     _sleepTicker:
  3352                           	opt stack 0
  3353  0000EE                     	ds	1
  3354  0000EF                     _secTicker:
  3355                           	opt stack 0
  3356  0000EF                     	ds	1
  3357  0000F0                     _randomPortNum:
  3358                           	opt stack 0
  3359  0000F0                     	ds	1
  3360  0000F1                     _moduleBufferIndex:
  3361                           	opt stack 0
  3362  0000F1                     	ds	1
  3363  0000F2                     _runningState:
  3364                           	opt stack 0
  3365  0000F2                     	ds	1
  3366  0000F3                     _activeState:
  3367                           	opt stack 0
  3368  0000F3                     	ds	1
  3369  0000F4                     _eusartRxCount:
  3370                           	opt stack 0
  3371  0000F4                     	ds	1
  3372  0000F5                     _powerOnStatus:
  3373                           	opt stack 0
  3374  0000F5                     	ds	1
  3375  0000F6                     _operationType:
  3376                           	opt stack 0
  3377  0000F6                     	ds	1
  3378  0000F7                     _appTimer:
  3379                           	opt stack 0
  3380  0000F7                     	ds	1
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1l	equ	0xFE1
  3389                           
  3390                           	psect	dataBANK0
  3391  0000F8                     __pdataBANK0:
  3392                           	opt stack 0
  3393  0000F8                     _exitUSB:
  3394                           	opt stack 0
  3395  0000F8                     	ds	1
  3396  0000F9                     _rnModule:
  3397                           	opt stack 0
  3398  0000F9                     	ds	1
  3399  0000FA                     _periodicState:
  3400                           	opt stack 0
  3401  0000FA                     	ds	1
  3402  0000FB                     _menuTimeout:
  3403                           	opt stack 0
  3404  0000FB                     	ds	1
  3405  0000FC                     _dataRateValue:
  3406                           	opt stack 0
  3407  0000FC                     	ds	1
  3408  0000FD                     _periodicTimerValue:
  3409                           	opt stack 0
  3410  0000FD                     	ds	1
  3411  0000FE                     _periodicUpValue:
  3412                           	opt stack 0
  3413  0000FE                     	ds	1
  3414  0000FF                     _moteState:
  3415                           	opt stack 0
  3416  0000FF                     	ds	1
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           postdec1	equ	0xFE5
  3424                           fsr1l	equ	0xFE1
  3425                           
  3426                           	psect	bssBANK1
  3427  000100                     __pbssBANK1:
  3428                           	opt stack 0
  3429  000100                     	ds	32
  3430  000120                     	ds	16
  3431  000130                     _responseId:
  3432                           	opt stack 0
  3433  000130                     	ds	16
  3434  000140                     _pBDTEntryOut:
  3435                           	opt stack 0
  3436  000140                     	ds	6
  3437  000146                     _BaudRateGen:
  3438                           	opt stack 0
  3439  000146                     	ds	4
  3440  00014A                     service_pushbutton@PB_Timer:
  3441                           	opt stack 0
  3442  00014A                     	ds	4
  3443  00014E                     _pCDCDst:
  3444                           	opt stack 0
  3445  00014E                     	ds	3
  3446  000151                     _pCDCSrc:
  3447                           	opt stack 0
  3448  000151                     	ds	3
  3449  000154                     _pDst:
  3450                           	opt stack 0
  3451  000154                     	ds	2
  3452  000156                     _m10SecTicker:
  3453                           	opt stack 0
  3454  000156                     	ds	2
  3455  000158                     _light:
  3456                           	opt stack 0
  3457  000158                     	ds	2
  3458  00015A                     _moduleResonseBuffer:
  3459                           	opt stack 0
  3460  00015A                     	ds	64
  3461  00019A                     _responseData:
  3462                           	opt stack 0
  3463  00019A                     	ds	32
  3464  0001BA                     _dataBuffer:
  3465                           	opt stack 0
  3466  0001BA                     	ds	16
  3467  0001CA                     _cdc_notice:
  3468                           	opt stack 0
  3469  0001CA                     	ds	10
  3470  0001D4                     _dummy_encapsulated_cmd_response:
  3471                           	opt stack 0
  3472  0001D4                     	ds	8
  3473  0001DC                     _line_coding:
  3474                           	opt stack 0
  3475  0001DC                     	ds	7
  3476  0001E3                     _clearLight:
  3477                           	opt stack 0
  3478  0001E3                     	ds	5
  3479  0001E8                     _storedLight:
  3480                           	opt stack 0
  3481  0001E8                     	ds	5
  3482  0001ED                     _responsePortNum:
  3483                           	opt stack 0
  3484  0001ED                     	ds	3
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           postdec1	equ	0xFE5
  3492                           fsr1l	equ	0xFE1
  3493                           
  3494                           	psect	dataBANK1
  3495  0001F0                     __pdataBANK1:
  3496                           	opt stack 0
  3497  0001F0                     _selectedFont:
  3498                           	opt stack 0
  3499  0001F0                     	ds	2
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           postinc0	equ	0xFEE
  3505                           wreg	equ	0xFE8
  3506                           postdec1	equ	0xFE5
  3507                           fsr1l	equ	0xFE1
  3508                           
  3509                           	psect	bssBANK2
  3510  000200                     __pbssBANK2:
  3511                           	opt stack 0
  3512  000200                     _eusartRxBuffer:
  3513                           	opt stack 0
  3514  000200                     	ds	64
  3515  000240                     _eusartTxBuffer:
  3516                           	opt stack 0
  3517  000240                     	ds	64
  3518  000280                     _USB_Buffer:
  3519                           	opt stack 0
  3520  000280                     	ds	64
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           postdec1	equ	0xFE5
  3528                           fsr1l	equ	0xFE1
  3529                           
  3530                           	psect	cstackBANK0
  3531  000060                     __pcstackBANK0:
  3532                           	opt stack 0
  3533  000060                     ??_TMR1_Initialize:
  3534  000060                     ?_strncmp:
  3535                           	opt stack 0
  3536  000060                     ?_strcmp:
  3537                           	opt stack 0
  3538  000060                     ?_moteApp_getLightString:
  3539                           	opt stack 0
  3540  000060                     ?_USBTransferOnePacket:
  3541                           	opt stack 0
  3542  000060                     ?___wmul:
  3543                           	opt stack 0
  3544  000060                     ?___awmod:
  3545                           	opt stack 0
  3546  000060                     ?___lwmod:
  3547                           	opt stack 0
  3548  000060                     ?___fladd:
  3549                           	opt stack 0
  3550  000060                     ?___almod:
  3551                           	opt stack 0
  3552  000060                     ?___fltol:
  3553                           	opt stack 0
  3554  000060                     ?___xxtofl:
  3555                           	opt stack 0
  3556  000060                     MOTEapp_handlerState@state:
  3557                           	opt stack 0
  3558  000060                     MOTEapp_TimerBasedTask@timerTask:
  3559                           	opt stack 0
  3560  000060                     hexToStr@character:
  3561                           	opt stack 0
  3562  000060                     moteApp_clearBuffers@counter:
  3563                           	opt stack 0
  3564  000060                     USBapp_handlerState@state:
  3565                           	opt stack 0
  3566  000060                     USBapp_exitCDCState@usbState:
  3567                           	opt stack 0
  3568  000060                     service_pushbutton@bs:
  3569                           	opt stack 0
  3570  000060                     oled_writeCommand@command:
  3571                           	opt stack 0
  3572  000060                     oled_writeData@data:
  3573                           	opt stack 0
  3574  000060                     EUSART_Read@readValue:
  3575                           	opt stack 0
  3576  000060                     EUSART_Write@txData:
  3577                           	opt stack 0
  3578  000060                     EUSART_FlushBuffer@index:
  3579                           	opt stack 0
  3580  000060                     DATAEE_WriteByte@bData:
  3581                           	opt stack 0
  3582  000060                     DATAEE_ReadByte@bAdd:
  3583                           	opt stack 0
  3584  000060                     TMR2_ReadTimer@readVal:
  3585                           	opt stack 0
  3586  000060                     USBTransferOnePacket@dir:
  3587                           	opt stack 0
  3588  000060                     ___lbdiv@divisor:
  3589                           	opt stack 0
  3590  000060                     moteApp_delayms@length:
  3591                           	opt stack 0
  3592  000060                     oled_setFont@font:
  3593                           	opt stack 0
  3594  000060                     putUSBUSART@data:
  3595                           	opt stack 0
  3596  000060                     delayms@t:
  3597                           	opt stack 0
  3598  000060                     ___wmul@multiplier:
  3599                           	opt stack 0
  3600  000060                     ___awmod@dividend:
  3601                           	opt stack 0
  3602  000060                     ___lwmod@dividend:
  3603                           	opt stack 0
  3604  000060                     memcpy@d1:
  3605                           	opt stack 0
  3606  000060                     memset@p1:
  3607                           	opt stack 0
  3608  000060                     strcmp@s1:
  3609                           	opt stack 0
  3610  000060                     strncmp@s1:
  3611                           	opt stack 0
  3612  000060                     ___almod@dividend:
  3613                           	opt stack 0
  3614  000060                     ___fltol@f1:
  3615                           	opt stack 0
  3616  000060                     ___fladd@b:
  3617                           	opt stack 0
  3618  000060                     ___xxtofl@val:
  3619                           	opt stack 0
  3620                           
  3621                           ; 4 bytes @ 0x0
  3622  000060                     	ds	1
  3623  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3624                           	opt stack 0
  3625  000061                     moteApp_clearBuffers@counter_1564:
  3626                           	opt stack 0
  3627  000061                     Set_Page_Address@address:
  3628                           	opt stack 0
  3629  000061                     Set_Column_Address@address:
  3630                           	opt stack 0
  3631  000061                     oled_setDisplay@displayType:
  3632                           	opt stack 0
  3633  000061                     oled_setContrastControlRegister@mod:
  3634                           	opt stack 0
  3635  000061                     oled_initialDispayLine@line:
  3636                           	opt stack 0
  3637  000061                     oled_powerControl@vol:
  3638                           	opt stack 0
  3639  000061                     oled_regulorResistorSelect@r:
  3640                           	opt stack 0
  3641  000061                     DATAEE_WriteByte@bAdd:
  3642                           	opt stack 0
  3643  000061                     ___lbdiv@dividend:
  3644                           	opt stack 0
  3645  000061                     sendCommand@string:
  3646                           	opt stack 0
  3647  000061                     sendDataCommand@string:
  3648                           	opt stack 0
  3649  000061                     USBTransferOnePacket@data:
  3650                           	opt stack 0
  3651                           
  3652                           ; 2 bytes @ 0x1
  3653  000061                     	ds	1
  3654  000062                     ??_moteApp_delayms:
  3655  000062                     ??_oled_devInit:
  3656  000062                     ??_delayms:
  3657  000062                     MOTEapp_getModuleResponse@bufferByte:
  3658                           	opt stack 0
  3659  000062                     moteApp_clearBuffers@counter_1565:
  3660                           	opt stack 0
  3661  000062                     oled_putChar@station_dot:
  3662                           	opt stack 0
  3663  000062                     DATAEE_WriteByte@GIEBitValue:
  3664                           	opt stack 0
  3665  000062                     putUSBUSART@length:
  3666                           	opt stack 0
  3667  000062                     ___lbdiv@counter:
  3668                           	opt stack 0
  3669  000062                     ___wmul@multiplicand:
  3670                           	opt stack 0
  3671  000062                     ___awmod@divisor:
  3672                           	opt stack 0
  3673  000062                     ___lwmod@divisor:
  3674                           	opt stack 0
  3675  000062                     memcpy@s1:
  3676                           	opt stack 0
  3677  000062                     memset@c:
  3678                           	opt stack 0
  3679  000062                     strcmp@s2:
  3680                           	opt stack 0
  3681  000062                     strncmp@s2:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x2
  3685  000062                     	ds	1
  3686  000063                     ??_MOTEapp_SetDataRateSetting:
  3687  000063                     ??_moduleSleep:
  3688  000063                     ??_moteApp_toggleLeds:
  3689  000063                     ?_moteApp_getTempValue:
  3690                           	opt stack 0
  3691  000063                     moteApp_clearBuffers@counter_1566:
  3692                           	opt stack 0
  3693  000063                     oled_putChar@start_page:
  3694                           	opt stack 0
  3695  000063                     USBTransferOnePacket@len:
  3696                           	opt stack 0
  3697  000063                     ___lbdiv@quotient:
  3698                           	opt stack 0
  3699  000063                     moteApp_delayms@counter:
  3700                           	opt stack 0
  3701  000063                     sendDataCommand@appData:
  3702                           	opt stack 0
  3703  000063                     delayms@i:
  3704                           	opt stack 0
  3705                           
  3706                           ; 2 bytes @ 0x3
  3707  000063                     	ds	1
  3708  000064                     ??_strcmp:
  3709  000064                     ??_oled_putChar:
  3710  000064                     ??___fltol:
  3711  000064                     ??___xxtofl:
  3712  000064                     MOTEapp_SetDataRateSetting@dr:
  3713                           	opt stack 0
  3714  000064                     moteApp_toggleLeds@state:
  3715                           	opt stack 0
  3716  000064                     USBTransferOnePacket@ep:
  3717                           	opt stack 0
  3718  000064                     ___awmod@counter:
  3719                           	opt stack 0
  3720  000064                     ___lwmod@counter:
  3721                           	opt stack 0
  3722  000064                     ___wmul@product:
  3723                           	opt stack 0
  3724  000064                     memcpy@n:
  3725                           	opt stack 0
  3726  000064                     memset@n:
  3727                           	opt stack 0
  3728  000064                     strncmp@len:
  3729                           	opt stack 0
  3730  000064                     ___almod@divisor:
  3731                           	opt stack 0
  3732  000064                     ___fladd@a:
  3733                           	opt stack 0
  3734                           
  3735                           ; 4 bytes @ 0x4
  3736  000064                     	ds	1
  3737  000065                     sendDataCommand@dataLength:
  3738                           	opt stack 0
  3739  000065                     ___awmod@sign:
  3740                           	opt stack 0
  3741  000065                     strcmp@r:
  3742                           	opt stack 0
  3743  000065                     moduleResync@escapeCounter:
  3744                           	opt stack 0
  3745  000065                     moteApp_setSensorsInput@escapeCounter:
  3746                           	opt stack 0
  3747  000065                     moteApp_getTempValue@escapeCounter:
  3748                           	opt stack 0
  3749  000065                     USBTransferOnePacket@handle:
  3750                           	opt stack 0
  3751                           
  3752                           ; 2 bytes @ 0x5
  3753  000065                     	ds	1
  3754  000066                     ??_strncmp:
  3755  000066                     ??_sendDataCommand:
  3756  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3757                           	opt stack 0
  3758  000066                     memcpy@d:
  3759                           	opt stack 0
  3760  000066                     memset@p:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x6
  3764  000066                     	ds	1
  3765  000067                     ??_moteApp_add8bToDataBuffer:
  3766  000067                     ??_CDCTxService:
  3767  000067                     moduleResync@escapeEvent:
  3768                           	opt stack 0
  3769  000067                     sendDataCommand@byteCount:
  3770                           	opt stack 0
  3771  000067                     getsUSBUSART@buffer:
  3772                           	opt stack 0
  3773                           
  3774                           ; 2 bytes @ 0x7
  3775  000067                     	ds	1
  3776  000068                     ??___fladd:
  3777  000068                     sendDataCommand@byteCount_1477:
  3778                           	opt stack 0
  3779  000068                     USBDeviceInit@i:
  3780                           	opt stack 0
  3781  000068                     ___almod@counter:
  3782                           	opt stack 0
  3783  000068                     ___fltol@sign1:
  3784                           	opt stack 0
  3785  000068                     ___xxtofl@sign:
  3786                           	opt stack 0
  3787  000068                     _CDCTxService$6155:
  3788                           	opt stack 0
  3789  000068                     memcpy@s:
  3790                           	opt stack 0
  3791                           
  3792                           ; 2 bytes @ 0x8
  3793  000068                     	ds	1
  3794  000069                     moteApp_add8bToDataBuffer@number:
  3795                           	opt stack 0
  3796  000069                     getsUSBUSART@len:
  3797                           	opt stack 0
  3798  000069                     ___almod@sign:
  3799                           	opt stack 0
  3800  000069                     ___fltol@exp1:
  3801                           	opt stack 0
  3802  000069                     ___xxtofl@exp:
  3803                           	opt stack 0
  3804                           
  3805                           ; 1 bytes @ 0x9
  3806  000069                     	ds	1
  3807  00006A                     ??_getsUSBUSART:
  3808  00006A                     oled_putChar@k:
  3809                           	opt stack 0
  3810  00006A                     CDCTxService@i:
  3811                           	opt stack 0
  3812  00006A                     memcpy@tmp:
  3813                           	opt stack 0
  3814  00006A                     ___xxtofl@arg:
  3815                           	opt stack 0
  3816                           
  3817                           ; 4 bytes @ 0xA
  3818  00006A                     	ds	1
  3819  00006B                     oled_putChar@index:
  3820                           	opt stack 0
  3821  00006B                     CDCTxService@byte_to_send:
  3822                           	opt stack 0
  3823  00006B                     moteApp_setLightString@lightString:
  3824                           	opt stack 0
  3825  00006B                     _getsUSBUSART$6107:
  3826                           	opt stack 0
  3827                           
  3828                           ; 2 bytes @ 0xB
  3829  00006B                     	ds	1
  3830  00006C                     oled_clearRow@page:
  3831                           	opt stack 0
  3832                           
  3833                           ; 1 bytes @ 0xC
  3834  00006C                     	ds	1
  3835  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3836  00006D                     moteApp_setLightString@stingPos:
  3837                           	opt stack 0
  3838  00006D                     oled_clearRow@index:
  3839                           	opt stack 0
  3840                           
  3841                           ; 1 bytes @ 0xD
  3842  00006D                     	ds	1
  3843  00006E                     ?_moteApp_getLightValue:
  3844                           	opt stack 0
  3845  00006E                     moteApp_GoToSleep@status:
  3846                           	opt stack 0
  3847                           
  3848                           ; 1 bytes @ 0xE
  3849  00006E                     	ds	2
  3850  000070                     ___fladd@signs:
  3851                           	opt stack 0
  3852  000070                     moteApp_getLightValue@escapeCounter:
  3853                           	opt stack 0
  3854                           
  3855                           ; 2 bytes @ 0x10
  3856  000070                     	ds	1
  3857  000071                     ___fladd@aexp:
  3858                           	opt stack 0
  3859                           
  3860                           ; 1 bytes @ 0x11
  3861  000071                     	ds	1
  3862  000072                     ?_moteApp_convertSensorValue:
  3863                           	opt stack 0
  3864  000072                     ___fladd@bexp:
  3865                           	opt stack 0
  3866  000072                     moteApp_addToDataBuffer@string:
  3867                           	opt stack 0
  3868  000072                     moteApp_convertSensorValue@string:
  3869                           	opt stack 0
  3870  000072                     oled_putString@string:
  3871                           	opt stack 0
  3872                           
  3873                           ; 2 bytes @ 0x12
  3874  000072                     	ds	1
  3875  000073                     ___fladd@grs:
  3876                           	opt stack 0
  3877                           
  3878                           ; 1 bytes @ 0x13
  3879  000073                     	ds	1
  3880  000074                     ??_moteApp_convertSensorValue:
  3881  000074                     ?___flmul:
  3882                           	opt stack 0
  3883  000074                     moteApp_addToDataBuffer@bufferLocation:
  3884                           	opt stack 0
  3885  000074                     oled_putString@station_dot:
  3886                           	opt stack 0
  3887  000074                     ___flmul@b:
  3888                           	opt stack 0
  3889                           
  3890                           ; 4 bytes @ 0x14
  3891  000074                     	ds	1
  3892  000075                     moteApp_addToDataBuffer@index:
  3893                           	opt stack 0
  3894  000075                     oled_putString@start_page:
  3895                           	opt stack 0
  3896                           
  3897                           ; 1 bytes @ 0x15
  3898  000075                     	ds	1
  3899  000076                     oled_putString@index:
  3900                           	opt stack 0
  3901                           
  3902                           ; 1 bytes @ 0x16
  3903  000076                     	ds	1
  3904  000077                     ??_test_switch:
  3905  000077                     moteJoiningProcess@changeStates:
  3906                           	opt stack 0
  3907  000077                     USBapp_Handler@buttonPress:
  3908                           	opt stack 0
  3909  000077                     oled_putUint8@station_dot:
  3910                           	opt stack 0
  3911  000077                     oled_putint8@station_dot:
  3912                           	opt stack 0
  3913  000077                     moteApp_convertSensorValue@convertedValue:
  3914                           	opt stack 0
  3915                           
  3916                           ; 2 bytes @ 0x17
  3917  000077                     	ds	1
  3918  000078                     moteJoiningProcess@selectButton:
  3919                           	opt stack 0
  3920  000078                     oled_putUint8@start_page:
  3921                           	opt stack 0
  3922  000078                     oled_putint8@start_page:
  3923                           	opt stack 0
  3924  000078                     test_switch@timeout:
  3925                           	opt stack 0
  3926  000078                     ___flmul@a:
  3927                           	opt stack 0
  3928                           
  3929                           ; 4 bytes @ 0x18
  3930  000078                     	ds	1
  3931  000079                     ??_moteJoiningProcess:
  3932  000079                     moteApp_convertSensorValue@index:
  3933                           	opt stack 0
  3934  000079                     oled_putUint8@number:
  3935                           	opt stack 0
  3936  000079                     oled_putint8@negative:
  3937                           	opt stack 0
  3938                           
  3939                           ; 1 bytes @ 0x19
  3940  000079                     	ds	1
  3941  00007A                     moteJoiningProcess@readDataRate:
  3942                           	opt stack 0
  3943  00007A                     test_switch@buttonCheck:
  3944                           	opt stack 0
  3945  00007A                     oled_putUint8@numData:
  3946                           	opt stack 0
  3947  00007A                     oled_putint8@numData:
  3948                           	opt stack 0
  3949                           
  3950                           ; 6 bytes @ 0x1A
  3951  00007A                     	ds	1
  3952  00007B                     moteJoiningProcess@joiningComplete:
  3953                           	opt stack 0
  3954                           
  3955                           ; 1 bytes @ 0x1B
  3956  00007B                     	ds	1
  3957  00007C                     ??___flmul:
  3958  00007C                     moteJoiningProcess@messageReady:
  3959                           	opt stack 0
  3960                           
  3961                           ; 1 bytes @ 0x1C
  3962  00007C                     	ds	4
  3963  000080                     oled_putint8@number:
  3964                           	opt stack 0
  3965  000080                     ___flmul@sign:
  3966                           	opt stack 0
  3967                           
  3968                           ; 1 bytes @ 0x20
  3969  000080                     	ds	1
  3970  000081                     ___flmul@grs:
  3971                           	opt stack 0
  3972                           
  3973                           ; 4 bytes @ 0x21
  3974  000081                     	ds	4
  3975  000085                     ___flmul@aexp:
  3976                           	opt stack 0
  3977                           
  3978                           ; 1 bytes @ 0x25
  3979  000085                     	ds	1
  3980  000086                     ___flmul@bexp:
  3981                           	opt stack 0
  3982                           
  3983                           ; 1 bytes @ 0x26
  3984  000086                     	ds	1
  3985  000087                     ___flmul@prod:
  3986                           	opt stack 0
  3987                           
  3988                           ; 4 bytes @ 0x27
  3989  000087                     	ds	4
  3990  00008B                     ___flmul@temp:
  3991                           	opt stack 0
  3992                           
  3993                           ; 2 bytes @ 0x2B
  3994  00008B                     	ds	2
  3995  00008D                     ?___fldiv:
  3996                           	opt stack 0
  3997  00008D                     ___fldiv@b:
  3998                           	opt stack 0
  3999                           
  4000                           ; 4 bytes @ 0x2D
  4001  00008D                     	ds	4
  4002  000091                     ___fldiv@a:
  4003                           	opt stack 0
  4004                           
  4005                           ; 4 bytes @ 0x31
  4006  000091                     	ds	4
  4007  000095                     ??___fldiv:
  4008                           
  4009                           ; 1 bytes @ 0x35
  4010  000095                     	ds	4
  4011  000099                     ___fldiv@sign:
  4012                           	opt stack 0
  4013                           
  4014                           ; 1 bytes @ 0x39
  4015  000099                     	ds	1
  4016  00009A                     ___fldiv@rem:
  4017                           	opt stack 0
  4018                           
  4019                           ; 4 bytes @ 0x3A
  4020  00009A                     	ds	4
  4021  00009E                     ___fldiv@new_exp:
  4022                           	opt stack 0
  4023                           
  4024                           ; 2 bytes @ 0x3E
  4025  00009E                     	ds	2
  4026  0000A0                     ___fldiv@grs:
  4027                           	opt stack 0
  4028                           
  4029                           ; 4 bytes @ 0x40
  4030  0000A0                     	ds	4
  4031  0000A4                     ___fldiv@bexp:
  4032                           	opt stack 0
  4033                           
  4034                           ; 1 bytes @ 0x44
  4035  0000A4                     	ds	1
  4036  0000A5                     ___fldiv@aexp:
  4037                           	opt stack 0
  4038                           
  4039                           ; 1 bytes @ 0x45
  4040  0000A5                     	ds	1
  4041  0000A6                     ADC_TempConversion@tempRaw:
  4042                           	opt stack 0
  4043                           
  4044                           ; 1 bytes @ 0x46
  4045  0000A6                     	ds	1
  4046  0000A7                     ADC_TempConversion@temp:
  4047                           	opt stack 0
  4048                           
  4049                           ; 1 bytes @ 0x47
  4050  0000A7                     	ds	1
  4051  0000A8                     ADC_TempConversion@val:
  4052                           	opt stack 0
  4053                           
  4054                           ; 4 bytes @ 0x48
  4055  0000A8                     	ds	4
  4056  0000AC                     ??_moteApp_testSensors:
  4057  0000AC                     moteRunningProcess@selectButton:
  4058                           	opt stack 0
  4059                           
  4060                           ; 1 bytes @ 0x4C
  4061  0000AC                     	ds	1
  4062  0000AD                     moteRunningProcess@messageReady:
  4063                           	opt stack 0
  4064                           
  4065                           ; 1 bytes @ 0x4D
  4066  0000AD                     	ds	1
  4067  0000AE                     moteRunningProcess@sleepEvent:
  4068                           	opt stack 0
  4069                           
  4070                           ; 1 bytes @ 0x4E
  4071  0000AE                     	ds	1
  4072  0000AF                     ??_moteRunningProcess:
  4073                           
  4074                           ; 1 bytes @ 0x4F
  4075  0000AF                     	ds	1
  4076  0000B0                     moteRunningProcess@readByte:
  4077                           	opt stack 0
  4078                           
  4079                           ; 1 bytes @ 0x50
  4080  0000B0                     	ds	1
  4081  0000B1                     moteRunningProcess@sizeOfUpdate:
  4082                           	opt stack 0
  4083                           
  4084                           ; 1 bytes @ 0x51
  4085  0000B1                     	ds	1
  4086  0000B2                     moteRunningProcess@sizeOfUpdate_1339:
  4087                           	opt stack 0
  4088                           
  4089                           ; 1 bytes @ 0x52
  4090  0000B2                     	ds	1
  4091  0000B3                     moteRunningProcess@counter:
  4092                           	opt stack 0
  4093                           
  4094                           ; 1 bytes @ 0x53
  4095  0000B3                     	ds	1
  4096  0000B4                     moteRunningProcess@bufferReadPos:
  4097                           	opt stack 0
  4098                           
  4099                           ; 1 bytes @ 0x54
  4100  0000B4                     	ds	1
  4101  0000B5                     moteRunningProcess@changeStates:
  4102                           	opt stack 0
  4103                           
  4104                           ; 1 bytes @ 0x55
  4105  0000B5                     	ds	1
  4106  0000B6                     ??_moteHandler:
  4107                           
  4108                           ; 1 bytes @ 0x56
  4109  0000B6                     	ds	1
  4110  0000B7                     moteHandler@gotoSleep:
  4111                           	opt stack 0
  4112                           
  4113                           ; 1 bytes @ 0x57
  4114  0000B7                     	ds	1
  4115  0000B8                     moteHandler@gotoNextState:
  4116                           	opt stack 0
  4117                           
  4118                           ; 1 bytes @ 0x58
  4119  0000B8                     	ds	1
  4120  0000B9                     moteHandler@s2Button:
  4121                           	opt stack 0
  4122                           
  4123                           ; 1 bytes @ 0x59
  4124  0000B9                     	ds	1
  4125  0000BA                     moteHandler@buttonPress:
  4126                           	opt stack 0
  4127                           
  4128                           ; 1 bytes @ 0x5A
  4129  0000BA                     	ds	1
  4130  0000BB                     moteHandler@readMessage:
  4131                           	opt stack 0
  4132                           
  4133                           ; 1 bytes @ 0x5B
  4134  0000BB                     	ds	1
  4135  0000BC                     tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           postinc0	equ	0xFEE
  4140                           wreg	equ	0xFE8
  4141                           postdec1	equ	0xFE5
  4142                           fsr1l	equ	0xFE1
  4143                           
  4144                           ; 1 bytes @ 0x5C
  4145                           
  4146                           	psect	cstackCOMRAM
  4147  000001                     __pcstackCOMRAM:
  4148                           	opt stack 0
  4149  000001                     ??_USBStdGetDscHandler:
  4150  000001                     ??_USBStdGetStatusHandler:
  4151  000001                     ?i2_USBTransferOnePacket:
  4152                           	opt stack 0
  4153  000001                     ?___lldiv:
  4154                           	opt stack 0
  4155  000001                     USBConfigureEndpoint@direction:
  4156                           	opt stack 0
  4157  000001                     USBCtrlTrfTxService@byteToSend:
  4158                           	opt stack 0
  4159  000001                     i2USBTransferOnePacket@dir:
  4160                           	opt stack 0
  4161  000001                     i2memset@p1:
  4162                           	opt stack 0
  4163  000001                     ___lldiv@dividend:
  4164                           	opt stack 0
  4165                           
  4166                           ; 4 bytes @ 0x0
  4167  000001                     	ds	1
  4168  000002                     ??_USBConfigureEndpoint:
  4169  000002                     USBStdGetStatusHandler@p:
  4170                           	opt stack 0
  4171  000002                     i2USBTransferOnePacket@data:
  4172                           	opt stack 0
  4173                           
  4174                           ; 2 bytes @ 0x1
  4175  000002                     	ds	1
  4176  000003                     i2memset@c:
  4177                           	opt stack 0
  4178                           
  4179                           ; 2 bytes @ 0x2
  4180  000003                     	ds	1
  4181  000004                     i2USBTransferOnePacket@len:
  4182                           	opt stack 0
  4183                           
  4184                           ; 1 bytes @ 0x3
  4185  000004                     	ds	1
  4186  000005                     i2USBTransferOnePacket@ep:
  4187                           	opt stack 0
  4188  000005                     i2memset@n:
  4189                           	opt stack 0
  4190  000005                     ___lldiv@divisor:
  4191                           	opt stack 0
  4192                           
  4193                           ; 4 bytes @ 0x4
  4194  000005                     	ds	1
  4195  000006                     USBConfigureEndpoint@EPNum:
  4196                           	opt stack 0
  4197  000006                     i2USBTransferOnePacket@handle:
  4198                           	opt stack 0
  4199                           
  4200                           ; 2 bytes @ 0x5
  4201  000006                     	ds	1
  4202  000007                     USBConfigureEndpoint@handle:
  4203                           	opt stack 0
  4204  000007                     i2memset@p:
  4205                           	opt stack 0
  4206                           
  4207                           ; 2 bytes @ 0x6
  4208  000007                     	ds	2
  4209  000009                     USBEnableEndpoint@options:
  4210                           	opt stack 0
  4211  000009                     i2USBDeviceInit@i:
  4212                           	opt stack 0
  4213  000009                     ___lldiv@quotient:
  4214                           	opt stack 0
  4215                           
  4216                           ; 4 bytes @ 0x8
  4217  000009                     	ds	1
  4218  00000A                     USBEnableEndpoint@p:
  4219                           	opt stack 0
  4220                           
  4221                           ; 2 bytes @ 0x9
  4222  00000A                     	ds	2
  4223  00000C                     USBEnableEndpoint@ep:
  4224                           	opt stack 0
  4225                           
  4226                           ; 1 bytes @ 0xB
  4227  00000C                     	ds	1
  4228  00000D                     USBapp_CdcEmulatorInitialize@i:
  4229                           	opt stack 0
  4230  00000D                     ___lldiv@counter:
  4231                           	opt stack 0
  4232                           
  4233                           ; 1 bytes @ 0xC
  4234  00000D                     	ds	1
  4235  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4236                           	opt stack 0
  4237  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4238                           	opt stack 0
  4239                           
  4240                           ; 4 bytes @ 0xD
  4241  00000E                     	ds	2
  4242  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4243                           	opt stack 0
  4244                           
  4245                           ; 2 bytes @ 0xF
  4246  000010                     	ds	2
  4247  000012                     USBCtrlTrfRxService@i:
  4248                           	opt stack 0
  4249  000012                     USBCtrlTrfInHandler@lastDTS:
  4250                           	opt stack 0
  4251  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4252                           	opt stack 0
  4253                           
  4254                           ; 2 bytes @ 0x11
  4255  000012                     	ds	1
  4256  000013                     USBCtrlTrfRxService@byteToRead:
  4257                           	opt stack 0
  4258                           
  4259                           ; 1 bytes @ 0x12
  4260  000013                     	ds	1
  4261  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4262                           
  4263                           ; 1 bytes @ 0x13
  4264  000014                     	ds	2
  4265  000016                     ??_USBStdFeatureReqHandler:
  4266  000016                     USBStdSetCfgHandler@i:
  4267                           	opt stack 0
  4268                           
  4269                           ; 1 bytes @ 0x15
  4270  000016                     	ds	1
  4271  000017                     USBStdFeatureReqHandler@pUEP:
  4272                           	opt stack 0
  4273                           
  4274                           ; 2 bytes @ 0x16
  4275  000017                     	ds	2
  4276  000019                     USBStdFeatureReqHandler@current_ep_data:
  4277                           	opt stack 0
  4278                           
  4279                           ; 1 bytes @ 0x18
  4280  000019                     	ds	1
  4281  00001A                     USBStdFeatureReqHandler@p:
  4282                           	opt stack 0
  4283                           
  4284                           ; 2 bytes @ 0x19
  4285  00001A                     	ds	2
  4286  00001C                     ??_USBCtrlEPService:
  4287  00001C                     
  4288                           ; 1 bytes @ 0x1B
  4289  00001C                     	ds	2
  4290  00001E                     USBCtrlEPService@setup_cnt:
  4291                           	opt stack 0
  4292                           
  4293                           ; 1 bytes @ 0x1D
  4294  00001E                     	ds	1
  4295  00001F                     USBDeviceTasks@i:
  4296                           	opt stack 0
  4297                           
  4298                           ; 1 bytes @ 0x1E
  4299  00001F                     	ds	1
  4300  000020                     ??_INTERRUPT_InterruptManager:
  4301                           
  4302                           ; 1 bytes @ 0x1F
  4303  000020                     	ds	18
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           postinc0	equ	0xFEE
  4309                           wreg	equ	0xFE8
  4310                           postdec1	equ	0xFE5
  4311                           fsr1l	equ	0xFE1
  4312                           
  4313 ;;
  4314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4315 ;;
  4316 ;; *************** function _main *****************
  4317 ;; Defined at:
  4318 ;;		line 70 in file "main.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels required when called:   20
  4338 ;; This function calls:
  4339 ;;		_DATAEE_ReadByte
  4340 ;;		_DATAEE_WriteByte
  4341 ;;		_MOTEapp_handlerState
  4342 ;;		_PICoRa_Initialize
  4343 ;;		_PICoRa_test_powerup
  4344 ;;		_USBDeviceAttach
  4345 ;;		_USBDeviceInit
  4346 ;;		_USBapp_Handler
  4347 ;;		_USBapp_handlerState
  4348 ;;		_moduleResync
  4349 ;;		_moteApp_clearCommand
  4350 ;;		_moteApp_delayms
  4351 ;;		_moteHandler
  4352 ;;		_oled_clear
  4353 ;;		_oled_init
  4354 ;;		_oled_putString
  4355 ;; This function is called by:
  4356 ;;		Startup code after reset
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text0
  4361  002C4A                     __ptext0:
  4362                           	opt stack 0
  4363  002C4A                     _main:
  4364                           	opt stack 11
  4365                           
  4366                           ;main.c: 73: PICoRa_Initialize();
  4367                           
  4368                           ;incstack = 0
  4369  002C4A  ECB1  F02A         	call	_PICoRa_Initialize	;wreg free
  4370                           
  4371                           ;main.c: 75: oled_init();
  4372  002C4E  EC82  F029         	call	_oled_init	;wreg free
  4373                           
  4374                           ;main.c: 76: USBDeviceInit();
  4375  002C52  ECF9  F014         	call	_USBDeviceInit	;wreg free
  4376                           
  4377                           ;main.c: 78: USBDeviceAttach();
  4378  002C56  EC1D  F029         	call	_USBDeviceAttach	;wreg free
  4379                           
  4380                           ;main.c: 80: LATBbits.LATB5 = 1;
  4381  002C5A  8A8A               	bsf	3978,5,c	;volatile
  4382                           
  4383                           ;main.c: 81: moteApp_delayms(50);
  4384  002C5C  0E00               	movlw	0
  4385  002C5E  0100               	movlb	0	; () banked
  4386  002C60  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4387  002C62  0E32               	movlw	50
  4388  002C64  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4389  002C66  EC50  F029         	call	_moteApp_delayms	;wreg free
  4390                           
  4391                           ;main.c: 82: LATBbits.LATB5 = 0;
  4392  002C6A  9A8A               	bcf	3978,5,c	;volatile
  4393                           
  4394                           ;main.c: 83: moteApp_delayms(500);
  4395  002C6C  0E01               	movlw	1
  4396  002C6E  0100               	movlb	0	; () banked
  4397  002C70  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4398  002C72  0EF4               	movlw	244
  4399  002C74  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4400  002C76  EC50  F029         	call	_moteApp_delayms	;wreg free
  4401                           
  4402                           ;main.c: 85: PEIE = 1;
  4403  002C7A  8CF2               	bsf	intcon,6,c	;volatile
  4404                           
  4405                           ;main.c: 86: GIE = 1;
  4406  002C7C  8EF2               	bsf	intcon,7,c	;volatile
  4407                           
  4408                           ;main.c: 88: moduleResync();
  4409  002C7E  ECB1  F022         	call	_moduleResync	;wreg free
  4410                           
  4411                           ;main.c: 89: moteApp_delayms(20);
  4412  002C82  0E00               	movlw	0
  4413  002C84  0100               	movlb	0	; () banked
  4414  002C86  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4415  002C88  0E14               	movlw	20
  4416  002C8A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4417  002C8C  EC50  F029         	call	_moteApp_delayms	;wreg free
  4418                           
  4419                           ;main.c: 90: moteApp_clearCommand();
  4420  002C90  EC8E  F02B         	call	_moteApp_clearCommand	;wreg free
  4421                           
  4422                           ;main.c: 91: moteApp_delayms(20);
  4423  002C94  0E00               	movlw	0
  4424  002C96  0100               	movlb	0	; () banked
  4425  002C98  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4426  002C9A  0E14               	movlw	20
  4427  002C9C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4428  002C9E  EC50  F029         	call	_moteApp_delayms	;wreg free
  4429                           
  4430                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4431  002CA2  0E00               	movlw	0
  4432  002CA4  EC3A  F02B         	call	_DATAEE_ReadByte
  4433  002CA8  0100               	movlb	0	; () banked
  4434  002CAA  6FF5               	movwf	_powerOnStatus& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4438  002CAC  0E55               	movlw	85
  4439  002CAE  19F5               	xorwf	_powerOnStatus& (0+255),w,b
  4440  002CB0  B4D8               	btfsc	status,2,c
  4441  002CB2  D008               	goto	l57
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;main.c: 95: {
  4445                           ;main.c: 96: PICoRa_test_powerup();
  4446  002CB4  EC72  F024         	call	_PICoRa_test_powerup	;wreg free
  4447                           
  4448                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4449  002CB8  0E55               	movlw	85
  4450  002CBA  0100               	movlb	0	; () banked
  4451  002CBC  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4452  002CBE  0E00               	movlw	0
  4453  002CC0  EC8C  F028         	call	_DATAEE_WriteByte
  4454  002CC4                     l57:
  4455                           
  4456                           ;main.c: 98: }
  4457                           ;main.c: 101: operationType = USB;
  4458  002CC4  0E00               	movlw	0
  4459  002CC6  0100               	movlb	0	; () banked
  4460  002CC8  6FF6               	movwf	_operationType& (0+255),b
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4464  002CCA  0E00               	movlw	0
  4465  002CCC  ECB3  F02B         	call	_USBapp_handlerState
  4466                           
  4467                           ;main.c: 104: oled_clear();
  4468  002CD0  ECFF  F02A         	call	_oled_clear	;wreg free
  4469                           
  4470                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4471  002CD4  0E24               	movlw	low STR_1
  4472  002CD6  0100               	movlb	0	; () banked
  4473  002CD8  6F72               	movwf	oled_putString@string& (0+255),b
  4474  002CDA  0E7D               	movlw	high STR_1
  4475  002CDC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4476  002CDE  0E00               	movlw	0
  4477  002CE0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4478  002CE2  0E00               	movlw	0
  4479  002CE4  6F75               	movwf	oled_putString@start_page& (0+255),b
  4480  002CE6  EC1B  F025         	call	_oled_putString	;wreg free
  4481                           
  4482                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4483  002CEA  0E06               	movlw	low STR_2
  4484  002CEC  0100               	movlb	0	; () banked
  4485  002CEE  6F72               	movwf	oled_putString@string& (0+255),b
  4486  002CF0  0E7D               	movlw	high STR_2
  4487  002CF2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4488  002CF4  0E00               	movlw	0
  4489  002CF6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4490  002CF8  0E01               	movlw	1
  4491  002CFA  6F75               	movwf	oled_putString@start_page& (0+255),b
  4492  002CFC  EC1B  F025         	call	_oled_putString	;wreg free
  4493                           
  4494                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4495  002D00  0E15               	movlw	low STR_3
  4496  002D02  0100               	movlb	0	; () banked
  4497  002D04  6F72               	movwf	oled_putString@string& (0+255),b
  4498  002D06  0E7D               	movlw	high STR_3
  4499  002D08  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4500  002D0A  0E00               	movlw	0
  4501  002D0C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4502  002D0E  0E03               	movlw	3
  4503  002D10  6F75               	movwf	oled_putString@start_page& (0+255),b
  4504  002D12  EC1B  F025         	call	_oled_putString	;wreg free
  4505                           
  4506                           ;main.c: 108: moteApp_delayms(1000);
  4507  002D16  0E03               	movlw	3
  4508  002D18  0100               	movlb	0	; () banked
  4509  002D1A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4510  002D1C  0EE8               	movlw	232
  4511  002D1E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4512  002D20  EC50  F029         	call	_moteApp_delayms	;wreg free
  4513                           
  4514                           ;main.c: 112: {
  4515                           ;main.c: 114: switch (operationType)
  4516                           
  4517                           ;main.c: 111: while(1)
  4518  002D24  D015               	goto	l67
  4519  002D26                     
  4520                           ;main.c: 117: while(1);
  4521  002D26  D7FF               	goto	l60
  4522  002D28                     
  4523                           ;main.c: 120: USBapp_Handler();
  4524  002D28  EC09  F01F         	call	_USBapp_Handler	;wreg free
  4525                           
  4526                           ;main.c: 122: operationType = MOTE;
  4527  002D2C  0E01               	movlw	1
  4528  002D2E  0100               	movlb	0	; () banked
  4529  002D30  6FF6               	movwf	_operationType& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4533  002D32  0E01               	movlw	1
  4534  002D34  ECB8  F02B         	call	_MOTEapp_handlerState
  4535                           
  4536                           ;main.c: 124: break;
  4537  002D38  D00B               	goto	l67
  4538  002D3A                     
  4539                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4540  002D3A  EC25  F010         	call	_moteHandler	;wreg free
  4541  002D3E  0A04               	xorlw	4
  4542  002D40  A4D8               	btfss	status,2,c
  4543  002D42  D006               	goto	l67
  4544                           
  4545                           ;main.c: 127: {
  4546                           ;main.c: 129: operationType = USB;
  4547  002D44  0E00               	movlw	0
  4548  002D46  0100               	movlb	0	; () banked
  4549  002D48  6FF6               	movwf	_operationType& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4553  002D4A  0E00               	movlw	0
  4554  002D4C  ECB3  F02B         	call	_USBapp_handlerState
  4555  002D50                     l67:
  4556                           
  4557                           ;main.c: 133: }
  4558                           
  4559                           ;main.c: 131: }
  4560                           ;main.c: 132: break;
  4561  002D50  0100               	movlb	0	; () banked
  4562  002D52  51F6               	movf	_operationType& (0+255),w,b
  4563                           
  4564                           ; Switch size 1, requested type "space"
  4565                           ; Number of cases is 2, Range of values is 0 to 1
  4566                           ; switch strategies available:
  4567                           ; Name         Instructions Cycles
  4568                           ; simple_byte            7     4 (average)
  4569                           ;	Chosen strategy is simple_byte
  4570  002D54  0A00               	xorlw	0	; case 0
  4571  002D56  B4D8               	btfsc	status,2,c
  4572  002D58  D7E7               	goto	l65
  4573  002D5A  0A01               	xorlw	1	; case 1
  4574  002D5C  B4D8               	btfsc	status,2,c
  4575  002D5E  D7ED               	goto	l66
  4576  002D60  D7E2               	goto	l60
  4577  002D62                     __end_of_main:
  4578                           	opt stack 0
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           intcon	equ	0xFF2
  4584                           postinc0	equ	0xFEE
  4585                           wreg	equ	0xFE8
  4586                           postdec1	equ	0xFE5
  4587                           fsr1l	equ	0xFE1
  4588                           status	equ	0xFD8
  4589                           
  4590 ;; *************** function _moteHandler *****************
  4591 ;; Defined at:
  4592 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  readMessage     1   91[BANK0 ] unsigned char 
  4597 ;;  buttonPress     1   90[BANK0 ] enum E5836
  4598 ;;  s2Button        1   89[BANK0 ] unsigned char 
  4599 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  4600 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      enum E6833
  4603 ;; Registers used:
  4604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4612 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4613 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4614 ;;Total ram usage:        6 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:   19
  4617 ;; This function calls:
  4618 ;;		_ADC_TempConversion
  4619 ;;		_MOTEapp_TimerBasedTask
  4620 ;;		_MOTEapp_getModuleResponse
  4621 ;;		_TMRapp_ClearBitFlags
  4622 ;;		_TMRapp_Handler
  4623 ;;		_USBapp_exitCDC
  4624 ;;		_USBapp_exitCDCState
  4625 ;;		_moteApp_convertSensorValue
  4626 ;;		_moteApp_getLightValue
  4627 ;;		_moteApp_getTempValue
  4628 ;;		_moteJoiningProcess
  4629 ;;		_moteRunningProcess
  4630 ;;		_oled_clear
  4631 ;;		_oled_putString
  4632 ;;		_oled_putint8
  4633 ;;		_service_pushbutton
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text1
  4640  00204A                     __ptext1:
  4641                           	opt stack 0
  4642  00204A                     _moteHandler:
  4643                           	opt stack 11
  4644                           
  4645                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;incstack = 0
  4649  00204A  0E00               	movlw	0
  4650  00204C  0100               	movlb	0	; () banked
  4651  00204E  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  4652                           
  4653                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  4654  002050  0E00               	movlw	0
  4655  002052  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  4656                           
  4657                           ;MOTEapp.c: 192: bool s2Button = 0;
  4658  002054  0E00               	movlw	0
  4659  002056  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  4660                           
  4661                           ;MOTEapp.c: 193: bool readMessage = 0;
  4662  002058  0E00               	movlw	0
  4663  00205A  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  4664                           
  4665                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  4666  00205C  0E03               	movlw	3
  4667  00205E  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  4671  002060  A080               	btfss	3968,0,c	;volatile
  4672  002062  D009               	goto	l286
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;MOTEapp.c: 198: {
  4676                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  4677  002064  ECD0  F02B         	call	_USBapp_exitCDC	;wreg free
  4678  002068  0900               	iorlw	0
  4679  00206A  A4D8               	btfss	status,2,c
  4680  00206C  D007               	goto	l288
  4681                           
  4682                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  4683  00206E  0E04               	movlw	4
  4684  002070  0100               	movlb	0	; () banked
  4685  002072  6FFF               	movwf	_moteState& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;MOTEapp.c: 201: } else {
  4689  002074  D003               	goto	l288
  4690  002076                     l286:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  4694                           
  4695                           ; BSR set to: 0
  4696  002076  0E00               	movlw	0
  4697  002078  ECAE  F02B         	call	_USBapp_exitCDCState
  4698  00207C                     l288:
  4699                           
  4700                           ;MOTEapp.c: 203: }
  4701                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  4702  00207C  0100               	movlb	0	; () banked
  4703  00207E  A1F7               	btfss	_appTimer& (0+255),0,b
  4704  002080  D008               	goto	l289
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;MOTEapp.c: 207: {
  4708                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  4709  002082  ECC5  F02B         	call	_TMRapp_ClearBitFlags	;wreg free
  4710                           
  4711                           ;MOTEapp.c: 211: TMRapp_Handler();
  4712  002086  ECB1  F016         	call	_TMRapp_Handler	;wreg free
  4713                           
  4714                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  4715  00208A  0100               	movlb	0	; () banked
  4716  00208C  51F7               	movf	_appTimer& (0+255),w,b
  4717  00208E  ECD3  F02A         	call	_MOTEapp_TimerBasedTask
  4718  002092                     l289:
  4719                           
  4720                           ;MOTEapp.c: 213: }
  4721                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  4722  002092  ECE4  F024         	call	_service_pushbutton	;wreg free
  4723  002096  0100               	movlb	0	; () banked
  4724  002098  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  4728  00209A  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  4729  00209C  A4D8               	btfss	status,2,c
  4730  00209E  D005               	goto	l290
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;MOTEapp.c: 218: {
  4734                           ;MOTEapp.c: 219: secTicker = 0;
  4735  0020A0  0E00               	movlw	0
  4736  0020A2  6FEF               	movwf	_secTicker& (0+255),b
  4737                           
  4738                           ;MOTEapp.c: 220: gotoNextState = 1;
  4739  0020A4  0E01               	movlw	1
  4740  0020A6  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  4741                           
  4742                           ;MOTEapp.c: 221: }
  4743  0020A8  D008               	goto	l292
  4744  0020AA                     l290:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  4748                           
  4749                           ; BSR set to: 0
  4750  0020AA  0E02               	movlw	2
  4751  0020AC  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  4752  0020AE  A4D8               	btfss	status,2,c
  4753  0020B0  D004               	goto	l292
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;MOTEapp.c: 223: {
  4757                           ;MOTEapp.c: 224: secTicker = 0;
  4758  0020B2  0E00               	movlw	0
  4759  0020B4  6FEF               	movwf	_secTicker& (0+255),b
  4760                           
  4761                           ;MOTEapp.c: 225: s2Button = 1;
  4762  0020B6  0E01               	movlw	1
  4763  0020B8  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  4764  0020BA                     l292:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;MOTEapp.c: 226: }
  4768                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  4769                           
  4770                           ; BSR set to: 0
  4771                           
  4772                           ; BSR set to: 0
  4773  0020BA  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
  4774  0020BE  0900               	iorlw	0
  4775  0020C0  B4D8               	btfsc	status,2,c
  4776  0020C2  D002               	goto	l293
  4777                           
  4778                           ;MOTEapp.c: 230: readMessage = 1;
  4779  0020C4  0E01               	movlw	1
  4780  0020C6  D001               	goto	L1
  4781  0020C8                     l293:
  4782                           
  4783                           ;MOTEapp.c: 231: else
  4784                           ;MOTEapp.c: 232: readMessage = 0;
  4785                           
  4786                           ; BSR set to: 0
  4787  0020C8  0E00               	movlw	0
  4788  0020CA                     L1:
  4789  0020CA  0100               	movlb	0	; () banked
  4790  0020CC  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  4794                           
  4795                           ; BSR set to: 0
  4796  0020CE  0E02               	movlw	2
  4797  0020D0  19F2               	xorwf	_runningState& (0+255),w,b
  4798  0020D2  A4D8               	btfss	status,2,c
  4799  0020D4  D041               	goto	l296
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;MOTEapp.c: 236: {
  4803                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  4804  0020D6  0101               	movlb	1	; () banked
  4805  0020D8  5157               	movf	(_m10SecTicker+1)& (0+255),w,b
  4806  0020DA  E104               	bnz	u9870
  4807  0020DC  0E64               	movlw	100
  4808  0020DE  5D56               	subwf	_m10SecTicker& (0+255),w,b
  4809  0020E0  A0D8               	btfss	status,0,c
  4810  0020E2  D03A               	goto	l296
  4811  0020E4                     u9870:
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;MOTEapp.c: 239: {
  4815                           ;MOTEapp.c: 240: __nop();
  4816  0020E4  F000               	nop	
  4817                           
  4818                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  4819  0020E6  0ECD               	movlw	low (STR_19+12)
  4820  0020E8  0100               	movlb	0	; () banked
  4821  0020EA  6F72               	movwf	oled_putString@string& (0+255),b
  4822  0020EC  0E7A               	movlw	high (STR_19+12)
  4823  0020EE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4824  0020F0  0E06               	movlw	6
  4825  0020F2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4826  0020F4  0E01               	movlw	1
  4827  0020F6  6F75               	movwf	oled_putString@start_page& (0+255),b
  4828  0020F8  EC1B  F025         	call	_oled_putString	;wreg free
  4829                           
  4830                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  4831  0020FC  EC33  F027         	call	_moteApp_getLightValue	;wreg free
  4832  002100  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  4833  002104  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  4834  002108  0E06               	movlw	6
  4835  00210A  0100               	movlb	0	; () banked
  4836  00210C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4837  00210E  0E01               	movlw	1
  4838  002110  6F75               	movwf	oled_putString@start_page& (0+255),b
  4839  002112  EC1B  F025         	call	_oled_putString	;wreg free
  4840                           
  4841                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  4842  002116  EC2E  F028         	call	_moteApp_getTempValue	;wreg free
  4843  00211A  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  4844  00211E  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  4845  002122  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
  4846  002126  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  4847  00212A  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  4848                           
  4849                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  4850  00212E  0100               	movlb	0	; () banked
  4851  002130  51DA               	movf	_temperature& (0+255),w,b
  4852  002132  ECB0  F017         	call	_ADC_TempConversion
  4853  002136  0100               	movlb	0	; () banked
  4854  002138  6FB6               	movwf	??_moteHandler& (0+255),b
  4855  00213A  51B6               	movf	??_moteHandler& (0+255),w,b
  4856  00213C  6FDA               	movwf	_temperature& (0+255),b
  4857  00213E  6BDB               	clrf	(_temperature+1)& (0+255),b
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  4861  002140  0E06               	movlw	6
  4862  002142  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  4863  002144  0E02               	movlw	2
  4864  002146  6F78               	movwf	oled_putint8@start_page& (0+255),b
  4865  002148  51DA               	movf	_temperature& (0+255),w,b
  4866  00214A  EC66  F020         	call	_oled_putint8
  4867                           
  4868                           ;MOTEapp.c: 246: m10SecTicker = 0;
  4869  00214E  0E00               	movlw	0
  4870  002150  0101               	movlb	1	; () banked
  4871  002152  6F57               	movwf	(_m10SecTicker+1)& (0+255),b
  4872  002154  0E00               	movlw	0
  4873  002156  6F56               	movwf	_m10SecTicker& (0+255),b
  4874  002158                     l296:
  4875                           
  4876                           ;MOTEapp.c: 247: }
  4877                           ;MOTEapp.c: 248: }
  4878                           ;MOTEapp.c: 251: if(secTicker)
  4879                           
  4880                           ; BSR set to: 1
  4881                           
  4882                           ; BSR set to: 1
  4883  002158  0100               	movlb	0	; () banked
  4884  00215A  51EF               	movf	_secTicker& (0+255),w,b
  4885  00215C  B4D8               	btfsc	status,2,c
  4886  00215E  D071               	goto	l299
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;MOTEapp.c: 252: {
  4890                           ;MOTEapp.c: 253: if ((secTicker >= 10) && (menuTimeout))
  4891  002160  0E09               	movlw	9
  4892  002162  65EF               	cpfsgt	_secTicker& (0+255),b
  4893  002164  D06E               	goto	l299
  4894                           
  4895                           ; BSR set to: 0
  4896  002166  51FB               	movf	_menuTimeout& (0+255),w,b
  4897  002168  B4D8               	btfsc	status,2,c
  4898  00216A  D06B               	goto	l299
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;MOTEapp.c: 254: {
  4902                           ;MOTEapp.c: 255: gotoSleep = 1;
  4903  00216C  0E01               	movlw	1
  4904  00216E  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  4905                           
  4906                           ;MOTEapp.c: 256: secTicker = 0;
  4907  002170  0E00               	movlw	0
  4908  002172  6FEF               	movwf	_secTicker& (0+255),b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;MOTEapp.c: 257: }
  4912                           ;MOTEapp.c: 258: }
  4913                           ;MOTEapp.c: 260: switch(moteState)
  4914                           
  4915                           ; BSR set to: 0
  4916  002174  D066               	goto	l299
  4917  002176                     
  4918                           ; BSR set to: 0
  4919                           ;MOTEapp.c: 263: while(1);
  4920  002176  D7FF               	goto	l300
  4921  002178                     
  4922                           ;MOTEapp.c: 266: oled_clear();
  4923  002178  ECFF  F02A         	call	_oled_clear	;wreg free
  4924                           
  4925                           ;MOTEapp.c: 267: oled_putString("MOTE Mode",1,0);
  4926  00217C  0EEE               	movlw	low STR_7
  4927  00217E  0100               	movlb	0	; () banked
  4928  002180  6F72               	movwf	oled_putString@string& (0+255),b
  4929  002182  0E7E               	movlw	high STR_7
  4930  002184  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4931  002186  0E01               	movlw	1
  4932  002188  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4933  00218A  0E00               	movlw	0
  4934  00218C  6F75               	movwf	oled_putString@start_page& (0+255),b
  4935  00218E  EC1B  F025         	call	_oled_putString	;wreg free
  4936                           
  4937                           ;MOTEapp.c: 268: oled_putString("Starting",2,1);
  4938  002192  0E55               	movlw	low STR_8
  4939  002194  0100               	movlb	0	; () banked
  4940  002196  6F72               	movwf	oled_putString@string& (0+255),b
  4941  002198  0E7F               	movlw	high STR_8
  4942  00219A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4943  00219C  0E02               	movlw	2
  4944  00219E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4945  0021A0  0E01               	movlw	1
  4946  0021A2  6F75               	movwf	oled_putString@start_page& (0+255),b
  4947  0021A4  EC1B  F025         	call	_oled_putString	;wreg free
  4948                           
  4949                           ;MOTEapp.c: 269: oled_putString("ReRun PwrTst<S2>",0,3);
  4950  0021A8  0EAF               	movlw	low STR_9
  4951  0021AA  0100               	movlb	0	; () banked
  4952  0021AC  6F72               	movwf	oled_putString@string& (0+255),b
  4953  0021AE  0E7B               	movlw	high STR_9
  4954  0021B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4955  0021B2  0E00               	movlw	0
  4956  0021B4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4957  0021B6  0E03               	movlw	3
  4958  0021B8  6F75               	movwf	oled_putString@start_page& (0+255),b
  4959  0021BA  EC1B  F025         	call	_oled_putString	;wreg free
  4960                           
  4961                           ;MOTEapp.c: 270: activeState = moteStartup;
  4962  0021BE  0E00               	movlw	0
  4963  0021C0  0100               	movlb	0	; () banked
  4964  0021C2  6FF3               	movwf	_activeState& (0+255),b
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;MOTEapp.c: 271: moteState = MOTE_JOINING;
  4968  0021C4  0E02               	movlw	2
  4969  0021C6  D031               	goto	L2
  4970  0021C8                     
  4971                           ; BSR set to: 0
  4972                           ;MOTEapp.c: 274: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  4973                           
  4974                           ; BSR set to: 0
  4975  0021C8  C0B8  F077         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  4976  0021CC  C0B9  F078         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  4977  0021D0  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  4978  0021D2  ECF5  F007         	call	_moteJoiningProcess
  4979  0021D6  0900               	iorlw	0
  4980  0021D8  B4D8               	btfsc	status,2,c
  4981  0021DA  D041               	goto	l304
  4982                           
  4983                           ;MOTEapp.c: 275: {
  4984                           ;MOTEapp.c: 276: oled_clear();
  4985  0021DC  ECFF  F02A         	call	_oled_clear	;wreg free
  4986                           
  4987                           ;MOTEapp.c: 277: oled_putString("Mobile Mote -App",0,0);
  4988  0021E0  0E04               	movlw	low STR_10
  4989  0021E2  0100               	movlb	0	; () banked
  4990  0021E4  6F72               	movwf	oled_putString@string& (0+255),b
  4991  0021E6  0E7C               	movlw	high STR_10
  4992  0021E8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4993  0021EA  0E00               	movlw	0
  4994  0021EC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4995  0021EE  0E00               	movlw	0
  4996  0021F0  6F75               	movwf	oled_putString@start_page& (0+255),b
  4997  0021F2  EC1B  F025         	call	_oled_putString	;wreg free
  4998                           
  4999                           ;MOTEapp.c: 278: oled_putString("Navigate  Select", 0,2);
  5000  0021F6  0E15               	movlw	low STR_11
  5001  0021F8  0100               	movlb	0	; () banked
  5002  0021FA  6F72               	movwf	oled_putString@string& (0+255),b
  5003  0021FC  0E7C               	movlw	high STR_11
  5004  0021FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5005  002200  0E00               	movlw	0
  5006  002202  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5007  002204  0E02               	movlw	2
  5008  002206  6F75               	movwf	oled_putString@start_page& (0+255),b
  5009  002208  EC1B  F025         	call	_oled_putString	;wreg free
  5010                           
  5011                           ;MOTEapp.c: 279: oled_putString(" (S2)      (S3) ", 0,3);
  5012  00220C  0E38               	movlw	low STR_12
  5013  00220E  0100               	movlb	0	; () banked
  5014  002210  6F72               	movwf	oled_putString@string& (0+255),b
  5015  002212  0E7B               	movlw	high STR_12
  5016  002214  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5017  002216  0E00               	movlw	0
  5018  002218  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5019  00221A  0E03               	movlw	3
  5020  00221C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5021  00221E  EC1B  F025         	call	_oled_putString	;wreg free
  5022                           
  5023                           ;MOTEapp.c: 280: runningState = runningEnter;
  5024  002222  0E00               	movlw	0
  5025  002224  0100               	movlb	0	; () banked
  5026  002226  6FF2               	movwf	_runningState& (0+255),b
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;MOTEapp.c: 281: moteState = MOTE_RUNNING;
  5030  002228  0E03               	movlw	3
  5031  00222A                     L2:
  5032  00222A  6FFF               	movwf	_moteState& (0+255),b
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;MOTEapp.c: 282: }
  5036                           ;MOTEapp.c: 283: break;
  5037  00222C  D018               	goto	l304
  5038  00222E                     
  5039                           ; BSR set to: 0
  5040                           ;MOTEapp.c: 285: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5041                           
  5042                           ; BSR set to: 0
  5043  00222E  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5044  002232  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5045  002236  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5046  00223A  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  5047  00223C  EC74  F000         	call	_moteRunningProcess
  5048                           
  5049                           ;MOTEapp.c: 290: }
  5050                           
  5051                           ;MOTEapp.c: 289: break;
  5052                           
  5053                           ;MOTEapp.c: 287: case MOTE_SWAP:
  5054                           
  5055                           ;MOTEapp.c: 286: break;
  5056  002240  D00E               	goto	l304
  5057  002242                     l299:
  5058  002242  0100               	movlb	0	; () banked
  5059  002244  51FF               	movf	_moteState& (0+255),w,b
  5060                           
  5061                           ; Switch size 1, requested type "space"
  5062                           ; Number of cases is 4, Range of values is 1 to 4
  5063                           ; switch strategies available:
  5064                           ; Name         Instructions Cycles
  5065                           ; simple_byte           13     7 (average)
  5066                           ;	Chosen strategy is simple_byte
  5067  002246  0A01               	xorlw	1	; case 1
  5068  002248  B4D8               	btfsc	status,2,c
  5069  00224A  D796               	goto	l305
  5070  00224C  0A03               	xorlw	3	; case 2
  5071  00224E  B4D8               	btfsc	status,2,c
  5072  002250  D7BB               	goto	l306
  5073  002252  0A01               	xorlw	1	; case 3
  5074  002254  B4D8               	btfsc	status,2,c
  5075  002256  D7EB               	goto	l308
  5076  002258  0A07               	xorlw	7	; case 4
  5077  00225A  A4D8               	btfss	status,2,c
  5078  00225C  D78C               	goto	l300
  5079  00225E                     l304:
  5080                           
  5081                           ;MOTEapp.c: 291: return moteState;
  5082                           
  5083                           ; BSR set to: 0
  5084  00225E  0100               	movlb	0	; () banked
  5085  002260  51FF               	movf	_moteState& (0+255),w,b
  5086  002262  0012               	return	
  5087  002264                     __end_of_moteHandler:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           intcon	equ	0xFF2
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           fsr1l	equ	0xFE1
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _moteRunningProcess *****************
  5101 ;; Defined at:
  5102 ;;		line 491 in file "../Includes/Board/MOTEapp.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  changeStates    1    wreg     unsigned char 
  5105 ;;  selectButton    1   76[BANK0 ] unsigned char 
  5106 ;;  messageReady    1   77[BANK0 ] unsigned char 
  5107 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  changeStates    1   85[BANK0 ] unsigned char 
  5110 ;;  counter         1   83[BANK0 ] unsigned char 
  5111 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  5112 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  5113 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  5114 ;;  readByte        1   80[BANK0 ] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      enum E6082
  5117 ;; Registers used:
  5118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5124 ;;      Params:         0       3       0       0       0       0       0       0       0
  5125 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5126 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5127 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5128 ;;Total ram usage:       10 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:   18
  5131 ;; This function calls:
  5132 ;;		_ADC_TempConversion
  5133 ;;		_MOTEapp_SetDataRateSetting
  5134 ;;		_TMR2_ReadTimer
  5135 ;;		_moteApp_GoToSleep
  5136 ;;		_moteApp_add8bToDataBuffer
  5137 ;;		_moteApp_addToDataBuffer
  5138 ;;		_moteApp_clearBuffers
  5139 ;;		_moteApp_convertSensorValue
  5140 ;;		_moteApp_delayms
  5141 ;;		_moteApp_getLightString
  5142 ;;		_moteApp_getLightValue
  5143 ;;		_moteApp_getTempValue
  5144 ;;		_moteApp_lightStringSize
  5145 ;;		_moteApp_setSensorsInput
  5146 ;;		_oled_clear
  5147 ;;		_oled_putString
  5148 ;;		_oled_putUint8
  5149 ;;		_oled_putint8
  5150 ;;		_sendDataCommand
  5151 ;;		_strcmp
  5152 ;;		_strncmp
  5153 ;; This function is called by:
  5154 ;;		_moteHandler
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text2
  5159  0000E8                     __ptext2:
  5160                           	opt stack 0
  5161  0000E8                     _moteRunningProcess:
  5162                           	opt stack 11
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;incstack = 0
  5166                           ;moteRunningProcess@changeStates stored from wreg
  5167  0000E8  0100               	movlb	0	; () banked
  5168  0000EA  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  5169                           
  5170                           ;MOTEapp.c: 493: uint8_t readByte = 0;
  5171  0000EC  0E00               	movlw	0
  5172  0000EE  0100               	movlb	0	; () banked
  5173  0000F0  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;MOTEapp.c: 495: if ((sleepEvent) && (periodicState))
  5177  0000F2  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5178  0000F4  B4D8               	btfsc	status,2,c
  5179  0000F6  EFCA  F007         	goto	l387
  5180                           
  5181                           ; BSR set to: 0
  5182  0000FA  51FA               	movf	_periodicState& (0+255),w,b
  5183  0000FC  B4D8               	btfsc	status,2,c
  5184  0000FE  EFCA  F007         	goto	l387
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;MOTEapp.c: 496: {
  5188                           ;MOTEapp.c: 497: if (sleepTicker >= periodicTimerValue)
  5189  000102  51FD               	movf	_periodicTimerValue& (0+255),w,b
  5190  000104  5DEE               	subwf	_sleepTicker& (0+255),w,b
  5191  000106  A0D8               	btfss	status,0,c
  5192  000108  D0C4               	goto	l380
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;MOTEapp.c: 498: {
  5196                           ;MOTEapp.c: 500: moteApp_clearBuffers();
  5197  00010A  EC52  F021         	call	_moteApp_clearBuffers	;wreg free
  5198                           
  5199                           ;MOTEapp.c: 503: light = 0;
  5200  00010E  0E00               	movlw	0
  5201  000110  0101               	movlb	1	; () banked
  5202  000112  6F59               	movwf	(_light+1)& (0+255),b
  5203  000114  0E00               	movlw	0
  5204  000116  6F58               	movwf	_light& (0+255),b
  5205                           
  5206                           ; BSR set to: 1
  5207                           ;MOTEapp.c: 504: temperature = 0;
  5208  000118  0E00               	movlw	0
  5209  00011A  0100               	movlb	0	; () banked
  5210  00011C  6FDB               	movwf	(_temperature+1)& (0+255),b
  5211  00011E  0E00               	movlw	0
  5212  000120  6FDA               	movwf	_temperature& (0+255),b
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;MOTEapp.c: 505: __nop();
  5216  000122  F000               	nop	
  5217                           
  5218                           ;MOTEapp.c: 507: moteApp_setSensorsInput();
  5219  000124  EC36  F024         	call	_moteApp_setSensorsInput	;wreg free
  5220                           
  5221                           ;MOTEapp.c: 508: uint8_t sizeOfUpdate = 0;
  5222  000128  0E00               	movlw	0
  5223  00012A  0100               	movlb	0	; () banked
  5224  00012C  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;MOTEapp.c: 509: light = moteApp_convertSensorValue(moteApp_getLightValue());
  5228  00012E  EC33  F027         	call	_moteApp_getLightValue	;wreg free
  5229  000132  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  5230  000136  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  5231  00013A  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
  5232  00013E  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  5233  000142  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  5234                           
  5235                           ;MOTEapp.c: 510: oled_putString(moteApp_getLightString(), 6, 1);
  5236  000146  EC9D  F02B         	call	_moteApp_getLightString	;wreg free
  5237  00014A  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  5238  00014E  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  5239  000152  0E06               	movlw	6
  5240  000154  0100               	movlb	0	; () banked
  5241  000156  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5242  000158  0E01               	movlw	1
  5243  00015A  6F75               	movwf	oled_putString@start_page& (0+255),b
  5244  00015C  EC1B  F025         	call	_oled_putString	;wreg free
  5245                           
  5246                           ;MOTEapp.c: 511: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  5247  000160  EC9D  F02B         	call	_moteApp_getLightString	;wreg free
  5248  000164  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  5249  000168  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  5250  00016C  0E04               	movlw	4
  5251  00016E  0100               	movlb	0	; () banked
  5252  000170  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  5253  000172  EC50  F026         	call	_moteApp_addToDataBuffer	;wreg free
  5254  000176  0100               	movlb	0	; () banked
  5255  000178  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;MOTEapp.c: 513: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5259  00017A  EC2E  F028         	call	_moteApp_getTempValue	;wreg free
  5260  00017E  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5261  000182  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5262  000186  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
  5263  00018A  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5264  00018E  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5265                           
  5266                           ;MOTEapp.c: 514: temperature = ADC_TempConversion(temperature);
  5267  000192  0100               	movlb	0	; () banked
  5268  000194  51DA               	movf	_temperature& (0+255),w,b
  5269  000196  ECB0  F017         	call	_ADC_TempConversion
  5270  00019A  0100               	movlb	0	; () banked
  5271  00019C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  5272  00019E  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  5273  0001A0  6FDA               	movwf	_temperature& (0+255),b
  5274  0001A2  6BDB               	clrf	(_temperature+1)& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;MOTEapp.c: 515: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  5278  0001A4  ECCD  F02B         	call	_moteApp_lightStringSize	;wreg free
  5279  0001A8  0F05               	addlw	5
  5280  0001AA  0100               	movlb	0	; () banked
  5281  0001AC  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5282  0001AE  51DA               	movf	_temperature& (0+255),w,b
  5283  0001B0  ECAE  F01E         	call	_moteApp_add8bToDataBuffer
  5284                           
  5285                           ;MOTEapp.c: 518: sleepTicker = 0;
  5286  0001B4  0E00               	movlw	0
  5287  0001B6  0100               	movlb	0	; () banked
  5288  0001B8  6FEE               	movwf	_sleepTicker& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;MOTEapp.c: 519: oled_clear();
  5292  0001BA  ECFF  F02A         	call	_oled_clear	;wreg free
  5293                           
  5294                           ;MOTEapp.c: 520: oled_putString("Send Periodic Tx",0,0);
  5295  0001BE  0E37               	movlw	low STR_50
  5296  0001C0  0100               	movlb	0	; () banked
  5297  0001C2  6F72               	movwf	oled_putString@string& (0+255),b
  5298  0001C4  0E7C               	movlw	high STR_50
  5299  0001C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5300  0001C8  0E00               	movlw	0
  5301  0001CA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5302  0001CC  0E00               	movlw	0
  5303  0001CE  6F75               	movwf	oled_putString@start_page& (0+255),b
  5304  0001D0  EC1B  F025         	call	_oled_putString	;wreg free
  5305                           
  5306                           ;MOTEapp.c: 521: oled_putString("On Port #: ",0,1);
  5307  0001D4  0E52               	movlw	low STR_51
  5308  0001D6  0100               	movlb	0	; () banked
  5309  0001D8  6F72               	movwf	oled_putString@string& (0+255),b
  5310  0001DA  0E7E               	movlw	high STR_51
  5311  0001DC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5312  0001DE  0E00               	movlw	0
  5313  0001E0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5314  0001E2  0E01               	movlw	1
  5315  0001E4  6F75               	movwf	oled_putString@start_page& (0+255),b
  5316  0001E6  EC1B  F025         	call	_oled_putString	;wreg free
  5317                           
  5318                           ;MOTEapp.c: 522: oled_putString("L:       T: ",0,2);
  5319  0001EA  0EAC               	movlw	low STR_52
  5320  0001EC  0100               	movlb	0	; () banked
  5321  0001EE  6F72               	movwf	oled_putString@string& (0+255),b
  5322  0001F0  0E7D               	movlw	high STR_52
  5323  0001F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5324  0001F4  0E00               	movlw	0
  5325  0001F6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5326  0001F8  0E02               	movlw	2
  5327  0001FA  6F75               	movwf	oled_putString@start_page& (0+255),b
  5328  0001FC  EC1B  F025         	call	_oled_putString	;wreg free
  5329                           
  5330                           ;MOTEapp.c: 523: oled_putString(moteApp_getLightString(), 3, 2);
  5331  000200  EC9D  F02B         	call	_moteApp_getLightString	;wreg free
  5332  000204  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  5333  000208  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  5334  00020C  0E03               	movlw	3
  5335  00020E  0100               	movlb	0	; () banked
  5336  000210  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5337  000212  0E02               	movlw	2
  5338  000214  6F75               	movwf	oled_putString@start_page& (0+255),b
  5339  000216  EC1B  F025         	call	_oled_putString	;wreg free
  5340                           
  5341                           ;MOTEapp.c: 524: oled_putint8(temperature,11,2);
  5342  00021A  0E0B               	movlw	11
  5343  00021C  0100               	movlb	0	; () banked
  5344  00021E  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5345  000220  0E02               	movlw	2
  5346  000222  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5347  000224  51DA               	movf	_temperature& (0+255),w,b
  5348  000226  EC66  F020         	call	_oled_putint8
  5349                           
  5350                           ;MOTEapp.c: 526: randomPortNum = TMR2_ReadTimer();
  5351  00022A  ECA9  F02B         	call	_TMR2_ReadTimer	;wreg free
  5352  00022E  0100               	movlb	0	; () banked
  5353  000230  6FF0               	movwf	_randomPortNum& (0+255),b
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;MOTEapp.c: 528: if (!randomPortNum)
  5357  000232  51F0               	movf	_randomPortNum& (0+255),w,b
  5358  000234  A4D8               	btfss	status,2,c
  5359  000236  D002               	goto	l381
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;MOTEapp.c: 529: randomPortNum = 5;
  5363  000238  0E05               	movlw	5
  5364  00023A  D005               	goto	L3
  5365  00023C                     l381:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;MOTEapp.c: 530: else if (randomPortNum > 223)
  5369                           
  5370                           ; BSR set to: 0
  5371  00023C  0EDF               	movlw	223
  5372  00023E  65F0               	cpfsgt	_randomPortNum& (0+255),b
  5373  000240  D003               	goto	l383
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;MOTEapp.c: 531: randomPortNum = randomPortNum - 50;
  5377  000242  51F0               	movf	_randomPortNum& (0+255),w,b
  5378  000244  0FCE               	addlw	206
  5379  000246                     L3:
  5380  000246  6FF0               	movwf	_randomPortNum& (0+255),b
  5381  000248                     l383:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;MOTEapp.c: 533: oled_putUint8(randomPortNum,10,1);
  5385                           
  5386                           ; BSR set to: 0
  5387                           
  5388                           ; BSR set to: 0
  5389  000248  0E0A               	movlw	10
  5390  00024A  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  5391  00024C  0E01               	movlw	1
  5392  00024E  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  5393  000250  51F0               	movf	_randomPortNum& (0+255),w,b
  5394  000252  ECE3  F021         	call	_oled_putUint8
  5395                           
  5396                           ;MOTEapp.c: 535: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5397  000256  0E00               	movlw	0
  5398  000258  0100               	movlb	0	; () banked
  5399  00025A  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5400  00025C  51F0               	movf	_randomPortNum& (0+255),w,b
  5401  00025E  ECAE  F01E         	call	_moteApp_add8bToDataBuffer
  5402                           
  5403                           ;MOTEapp.c: 536: dataBuffer[3] = 0x20;
  5404  000262  0E20               	movlw	32
  5405  000264  0101               	movlb	1	; () banked
  5406  000266  6FBD               	movwf	(_dataBuffer+3)& (0+255),b
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;MOTEapp.c: 537: __nop();
  5410  000268  F000               	nop	
  5411                           
  5412                           ;MOTEapp.c: 538: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  5413  00026A  0E33               	movlw	low STR_53
  5414  00026C  0100               	movlb	0	; () banked
  5415  00026E  6F61               	movwf	sendDataCommand@string& (0+255),b
  5416  000270  0E7D               	movlw	high STR_53
  5417  000272  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  5418  000274  0EBA               	movlw	low _dataBuffer
  5419  000276  6F63               	movwf	sendDataCommand@appData& (0+255),b
  5420  000278  0E01               	movlw	high _dataBuffer
  5421  00027A  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  5422  00027C  0E0C               	movlw	12
  5423  00027E  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  5424  000280  EC37  F01D         	call	_sendDataCommand	;wreg free
  5425                           
  5426                           ;MOTEapp.c: 539: secTicker = 10 - (10 / 3);
  5427  000284  0E07               	movlw	7
  5428  000286  0100               	movlb	0	; () banked
  5429  000288  6FEF               	movwf	_secTicker& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;MOTEapp.c: 540: runningState = runningUplinkTransmit;
  5433  00028A  0E08               	movlw	8
  5434  00028C  6FF2               	movwf	_runningState& (0+255),b
  5435                           
  5436                           ;MOTEapp.c: 541: }
  5437  00028E  EFCA  F007         	goto	l387
  5438  000292                     l380:
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;MOTEapp.c: 542: else
  5442                           ;MOTEapp.c: 543: {
  5443                           ;MOTEapp.c: 544: if (menuTimeout)
  5444                           
  5445                           ; BSR set to: 0
  5446  000292  51FB               	movf	_menuTimeout& (0+255),w,b
  5447  000294  B4D8               	btfsc	status,2,c
  5448  000296  D007               	goto	l385
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;MOTEapp.c: 545: {
  5452                           ;MOTEapp.c: 546: sleepTicker++;
  5453  000298  2BEE               	incf	_sleepTicker& (0+255),f,b
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;MOTEapp.c: 547: runningState = runningSleep;
  5457  00029A  0E0F               	movlw	15
  5458  00029C  6FF2               	movwf	_runningState& (0+255),b
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;MOTEapp.c: 548: selectButton = 1;
  5462  00029E  0E01               	movlw	1
  5463  0002A0  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  5464                           
  5465                           ;MOTEapp.c: 549: } else {
  5466  0002A2  EFCA  F007         	goto	l387
  5467  0002A6                     l385:
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;MOTEapp.c: 550: sleepTicker = 0;
  5471                           
  5472                           ; BSR set to: 0
  5473  0002A6  0E00               	movlw	0
  5474  0002A8  6FEE               	movwf	_sleepTicker& (0+255),b
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;MOTEapp.c: 551: }
  5478                           ;MOTEapp.c: 552: }
  5479                           ;MOTEapp.c: 553: }
  5480                           ;MOTEapp.c: 556: switch(runningState)
  5481                           
  5482                           ; BSR set to: 0
  5483                           
  5484                           ; BSR set to: 0
  5485  0002AA  EFCA  F007         	goto	l387
  5486  0002AE                     
  5487                           ; BSR set to: 0
  5488                           ;MOTEapp.c: 559: while(1);
  5489  0002AE  D7FF               	goto	l388
  5490  0002B0                     
  5491                           ;MOTEapp.c: 562: if ( (changeStates) || (selectButton) )
  5492  0002B0  0100               	movlb	0	; () banked
  5493  0002B2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  5494  0002B4  A4D8               	btfss	status,2,c
  5495  0002B6  D003               	goto	u8890
  5496                           
  5497                           ; BSR set to: 0
  5498  0002B8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  5499  0002BA  B4D8               	btfsc	status,2,c
  5500  0002BC  0012               	return	
  5501  0002BE                     u8890:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;MOTEapp.c: 563: {
  5505                           ;MOTEapp.c: 564: oled_clear();
  5506                           
  5507                           ; BSR set to: 0
  5508  0002BE  ECFF  F02A         	call	_oled_clear	;wreg free
  5509                           
  5510                           ;MOTEapp.c: 565: oled_putString("  Issue Uplink  ",0,0);
  5511  0002C2  0E27               	movlw	low STR_54
  5512  0002C4  0100               	movlb	0	; () banked
  5513  0002C6  6F72               	movwf	oled_putString@string& (0+255),b
  5514  0002C8  0E7B               	movlw	high STR_54
  5515  0002CA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5516  0002CC  0E00               	movlw	0
  5517  0002CE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5518  0002D0  0E00               	movlw	0
  5519  0002D2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5520  0002D4  EC1B  F025         	call	_oled_putString	;wreg free
  5521                           
  5522                           ;MOTEapp.c: 566: oled_putString(" LoRaWAN Packet ",0,1);
  5523  0002D8  0E8D               	movlw	low STR_55
  5524  0002DA  0100               	movlb	0	; () banked
  5525  0002DC  6F72               	movwf	oled_putString@string& (0+255),b
  5526  0002DE  0E7B               	movlw	high STR_55
  5527  0002E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5528  0002E2  0E00               	movlw	0
  5529  0002E4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5530  0002E6  0E01               	movlw	1
  5531  0002E8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5532  0002EA  EC1B  F025         	call	_oled_putString	;wreg free
  5533                           
  5534                           ;MOTEapp.c: 567: oled_putString("(NAV)    (SEL) ",0,3);
  5535  0002EE  0E99               	movlw	low STR_56
  5536  0002F0  0100               	movlb	0	; () banked
  5537  0002F2  6F72               	movwf	oled_putString@string& (0+255),b
  5538  0002F4  0E7C               	movlw	high STR_56
  5539  0002F6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5540  0002F8  0E00               	movlw	0
  5541  0002FA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5542  0002FC  0E03               	movlw	3
  5543  0002FE  6F75               	movwf	oled_putString@start_page& (0+255),b
  5544  000300  EC1B  F025         	call	_oled_putString	;wreg free
  5545                           
  5546                           ;MOTEapp.c: 568: runningState = runningUplink;
  5547  000304  0E06               	movlw	6
  5548  000306  0100               	movlb	0	; () banked
  5549  000308  6FF2               	movwf	_runningState& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;MOTEapp.c: 569: }
  5553                           ;MOTEapp.c: 570: break;
  5554  00030A  0012               	return	
  5555  00030C                     
  5556                           ; BSR set to: 0
  5557                           ;MOTEapp.c: 572: if (changeStates)
  5558                           
  5559                           ; BSR set to: 0
  5560  00030C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  5561  00030E  B4D8               	btfsc	status,2,c
  5562  000310  D027               	goto	l398
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;MOTEapp.c: 573: {
  5566                           ;MOTEapp.c: 574: oled_clear();
  5567  000312  ECFF  F02A         	call	_oled_clear	;wreg free
  5568                           
  5569                           ;MOTEapp.c: 575: oled_putString(" View Downlink  ",0,0);
  5570  000316  0E16               	movlw	low STR_57
  5571  000318  0100               	movlb	0	; () banked
  5572  00031A  6F72               	movwf	oled_putString@string& (0+255),b
  5573  00031C  0E7B               	movlw	high STR_57
  5574  00031E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5575  000320  0E00               	movlw	0
  5576  000322  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5577  000324  0E00               	movlw	0
  5578  000326  6F75               	movwf	oled_putString@start_page& (0+255),b
  5579  000328  EC1B  F025         	call	_oled_putString	;wreg free
  5580                           
  5581                           ;MOTEapp.c: 576: oled_putString("  Last Message  ",0,1);
  5582  00032C  0E05               	movlw	low STR_58
  5583  00032E  0100               	movlb	0	; () banked
  5584  000330  6F72               	movwf	oled_putString@string& (0+255),b
  5585  000332  0E7B               	movlw	high STR_58
  5586  000334  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5587  000336  0E00               	movlw	0
  5588  000338  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5589  00033A  0E01               	movlw	1
  5590  00033C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5591  00033E  EC1B  F025         	call	_oled_putString	;wreg free
  5592                           
  5593                           ;MOTEapp.c: 577: oled_putString("(NAV)    (SEL) ",0,3);
  5594  000342  0E99               	movlw	low STR_56
  5595  000344  0100               	movlb	0	; () banked
  5596  000346  6F72               	movwf	oled_putString@string& (0+255),b
  5597  000348  0E7C               	movlw	high STR_56
  5598  00034A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5599  00034C  0E00               	movlw	0
  5600  00034E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5601  000350  0E03               	movlw	3
  5602  000352  6F75               	movwf	oled_putString@start_page& (0+255),b
  5603  000354  EC1B  F025         	call	_oled_putString	;wreg free
  5604                           
  5605                           ;MOTEapp.c: 578: runningState = runningDownlink;
  5606  000358  0E0A               	movlw	10
  5607  00035A  0100               	movlb	0	; () banked
  5608  00035C  6FF2               	movwf	_runningState& (0+255),b
  5609                           
  5610                           ;MOTEapp.c: 579: }
  5611  00035E  0012               	return	
  5612  000360                     l398:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;MOTEapp.c: 580: else if (selectButton)
  5616                           
  5617                           ; BSR set to: 0
  5618  000360  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  5619  000362  B4D8               	btfsc	status,2,c
  5620  000364  0012               	return	
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;MOTEapp.c: 581: {
  5624                           ;MOTEapp.c: 582: sleepTicker = 0;
  5625  000366  0E00               	movlw	0
  5626  000368  6FEE               	movwf	_sleepTicker& (0+255),b
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;MOTEapp.c: 584: oled_clear();
  5630  00036A  ECFF  F02A         	call	_oled_clear	;wreg free
  5631                           
  5632                           ;MOTEapp.c: 585: oled_putString("Uplink Pckt Type",0,0);
  5633  00036E  0EE2               	movlw	low STR_60
  5634  000370  0100               	movlb	0	; () banked
  5635  000372  6F72               	movwf	oled_putString@string& (0+255),b
  5636  000374  0E7B               	movlw	high STR_60
  5637  000376  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5638  000378  0E00               	movlw	0
  5639  00037A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5640  00037C  0E00               	movlw	0
  5641  00037E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5642  000380  EC1B  F025         	call	_oled_putString	;wreg free
  5643                           
  5644                           ;MOTEapp.c: 586: oled_putString("Throu Port# ",0,1);
  5645  000384  0E9F               	movlw	low STR_61
  5646  000386  0100               	movlb	0	; () banked
  5647  000388  6F72               	movwf	oled_putString@string& (0+255),b
  5648  00038A  0E7D               	movlw	high STR_61
  5649  00038C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5650  00038E  0E00               	movlw	0
  5651  000390  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5652  000392  0E01               	movlw	1
  5653  000394  6F75               	movwf	oled_putString@start_page& (0+255),b
  5654  000396  EC1B  F025         	call	_oled_putString	;wreg free
  5655                           
  5656                           ;MOTEapp.c: 588: oled_putString("(UNCNF)    (CNF) ",0,3);
  5657  00039A  0EAF               	movlw	low STR_62
  5658  00039C  0100               	movlb	0	; () banked
  5659  00039E  6F72               	movwf	oled_putString@string& (0+255),b
  5660  0003A0  0E7A               	movlw	high STR_62
  5661  0003A2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5662  0003A4  0E00               	movlw	0
  5663  0003A6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5664  0003A8  0E03               	movlw	3
  5665  0003AA  6F75               	movwf	oled_putString@start_page& (0+255),b
  5666  0003AC  EC1B  F025         	call	_oled_putString	;wreg free
  5667                           
  5668                           ;MOTEapp.c: 590: moteApp_clearBuffers();
  5669  0003B0  EC52  F021         	call	_moteApp_clearBuffers	;wreg free
  5670                           
  5671                           ;MOTEapp.c: 591: randomPortNum = TMR2_ReadTimer();
  5672  0003B4  ECA9  F02B         	call	_TMR2_ReadTimer	;wreg free
  5673  0003B8  0100               	movlb	0	; () banked
  5674  0003BA  6FF0               	movwf	_randomPortNum& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;MOTEapp.c: 593: if (!randomPortNum)
  5678  0003BC  51F0               	movf	_randomPortNum& (0+255),w,b
  5679  0003BE  A4D8               	btfss	status,2,c
  5680  0003C0  D002               	goto	l401
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;MOTEapp.c: 594: randomPortNum = 5;
  5684  0003C2  0E05               	movlw	5
  5685  0003C4  D005               	goto	L4
  5686  0003C6                     l401:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;MOTEapp.c: 595: else if (randomPortNum > 223)
  5690                           
  5691                           ; BSR set to: 0
  5692  0003C6  0EDF               	movlw	223
  5693  0003C8  65F0               	cpfsgt	_randomPortNum& (0+255),b
  5694  0003CA  D003               	goto	l403
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;MOTEapp.c: 596: randomPortNum = randomPortNum - 50;
  5698  0003CC  51F0               	movf	_randomPortNum& (0+255),w,b
  5699  0003CE  0FCE               	addlw	206
  5700  0003D0                     L4:
  5701  0003D0  6FF0               	movwf	_randomPortNum& (0+255),b
  5702  0003D2                     l403:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;MOTEapp.c: 597: oled_putUint8(randomPortNum,12,1);
  5706                           
  5707                           ; BSR set to: 0
  5708                           
  5709                           ; BSR set to: 0
  5710  0003D2  0E0C               	movlw	12
  5711  0003D4  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  5712  0003D6  0E01               	movlw	1
  5713  0003D8  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  5714  0003DA  51F0               	movf	_randomPortNum& (0+255),w,b
  5715  0003DC  ECE3  F021         	call	_oled_putUint8
  5716                           
  5717                           ;MOTEapp.c: 598: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5718  0003E0  0E00               	movlw	0
  5719  0003E2  0100               	movlb	0	; () banked
  5720  0003E4  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5721  0003E6  51F0               	movf	_randomPortNum& (0+255),w,b
  5722  0003E8  ECAE  F01E         	call	_moteApp_add8bToDataBuffer
  5723                           
  5724                           ;MOTEapp.c: 599: dataBuffer[3] = 0x20;
  5725  0003EC  0E20               	movlw	32
  5726  0003EE  0101               	movlb	1	; () banked
  5727  0003F0  6FBD               	movwf	(_dataBuffer+3)& (0+255),b
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;MOTEapp.c: 601: light = 0;
  5731  0003F2  0E00               	movlw	0
  5732  0003F4  6F59               	movwf	(_light+1)& (0+255),b
  5733  0003F6  0E00               	movlw	0
  5734  0003F8  6F58               	movwf	_light& (0+255),b
  5735                           
  5736                           ; BSR set to: 1
  5737                           ;MOTEapp.c: 602: temperature = 0;
  5738  0003FA  0E00               	movlw	0
  5739  0003FC  0100               	movlb	0	; () banked
  5740  0003FE  6FDB               	movwf	(_temperature+1)& (0+255),b
  5741  000400  0E00               	movlw	0
  5742  000402  6FDA               	movwf	_temperature& (0+255),b
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;MOTEapp.c: 603: __nop();
  5746  000404  F000               	nop	
  5747                           
  5748                           ;MOTEapp.c: 604: moteApp_setSensorsInput();
  5749  000406  EC36  F024         	call	_moteApp_setSensorsInput	;wreg free
  5750                           
  5751                           ;MOTEapp.c: 605: moteApp_delayms(500);
  5752  00040A  0E01               	movlw	1
  5753  00040C  0100               	movlb	0	; () banked
  5754  00040E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5755  000410  0EF4               	movlw	244
  5756  000412  6F60               	movwf	moteApp_delayms@length& (0+255),b
  5757  000414  EC50  F029         	call	_moteApp_delayms	;wreg free
  5758                           
  5759                           ;MOTEapp.c: 606: uint8_t sizeOfUpdate = 0;
  5760  000418  0E00               	movlw	0
  5761  00041A  0100               	movlb	0	; () banked
  5762  00041C  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1339& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;MOTEapp.c: 607: light = moteApp_convertSensorValue(moteApp_getLightValue());
  5766  00041E  EC33  F027         	call	_moteApp_getLightValue	;wreg free
  5767  000422  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  5768  000426  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  5769  00042A  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
  5770  00042E  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  5771  000432  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  5772                           
  5773                           ;MOTEapp.c: 608: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  5774  000436  EC33  F027         	call	_moteApp_getLightValue	;wreg free
  5775  00043A  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  5776  00043E  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  5777  000442  0E04               	movlw	4
  5778  000444  0100               	movlb	0	; () banked
  5779  000446  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  5780  000448  EC50  F026         	call	_moteApp_addToDataBuffer	;wreg free
  5781  00044C  0100               	movlb	0	; () banked
  5782  00044E  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1339& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;MOTEapp.c: 609: __nop();
  5786  000450  F000               	nop	
  5787                           
  5788                           ;MOTEapp.c: 610: __nop();
  5789  000452  F000               	nop	
  5790                           
  5791                           ;MOTEapp.c: 611: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5792  000454  EC2E  F028         	call	_moteApp_getTempValue	;wreg free
  5793  000458  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5794  00045C  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5795  000460  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
  5796  000464  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5797  000468  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5798                           
  5799                           ;MOTEapp.c: 612: temperature = ADC_TempConversion(temperature);
  5800  00046C  0100               	movlb	0	; () banked
  5801  00046E  51DA               	movf	_temperature& (0+255),w,b
  5802  000470  ECB0  F017         	call	_ADC_TempConversion
  5803  000474  0100               	movlb	0	; () banked
  5804  000476  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  5805  000478  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  5806  00047A  6FDA               	movwf	_temperature& (0+255),b
  5807  00047C  6BDB               	clrf	(_temperature+1)& (0+255),b
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;MOTEapp.c: 613: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  5811  00047E  ECCD  F02B         	call	_moteApp_lightStringSize	;wreg free
  5812  000482  0F05               	addlw	5
  5813  000484  0100               	movlb	0	; () banked
  5814  000486  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5815  000488  51DA               	movf	_temperature& (0+255),w,b
  5816  00048A  ECAE  F01E         	call	_moteApp_add8bToDataBuffer
  5817                           
  5818                           ;MOTEapp.c: 614: __nop();
  5819  00048E  F000               	nop	
  5820                           
  5821                           ;MOTEapp.c: 616: runningState = runningUplinkSelect;
  5822  000490  0E07               	movlw	7
  5823  000492  0100               	movlb	0	; () banked
  5824  000494  6FF2               	movwf	_runningState& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;MOTEapp.c: 617: }
  5828                           ;MOTEapp.c: 618: break;
  5829                           
  5830                           ; BSR set to: 0
  5831  000496  0012               	return	
  5832  000498                     
  5833                           ; BSR set to: 0
  5834                           ;MOTEapp.c: 620: if (changeStates)
  5835                           
  5836                           ; BSR set to: 0
  5837  000498  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  5838  00049A  B4D8               	btfsc	status,2,c
  5839  00049C  D00C               	goto	l405
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;MOTEapp.c: 621: {
  5843                           ;MOTEapp.c: 622: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  5844  00049E  0E33               	movlw	low STR_53
  5845  0004A0  6F61               	movwf	sendDataCommand@string& (0+255),b
  5846  0004A2  0E7D               	movlw	high STR_53
  5847  0004A4  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  5848  0004A6  0EBA               	movlw	low _dataBuffer
  5849  0004A8  6F63               	movwf	sendDataCommand@appData& (0+255),b
  5850  0004AA  0E01               	movlw	high _dataBuffer
  5851  0004AC  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  5852  0004AE  0E0C               	movlw	12
  5853  0004B0  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  5854  0004B2  EC37  F01D         	call	_sendDataCommand	;wreg free
  5855  0004B6                     l405:
  5856                           
  5857                           ;MOTEapp.c: 624: }
  5858                           ;MOTEapp.c: 625: if (selectButton)
  5859  0004B6  0100               	movlb	0	; () banked
  5860  0004B8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  5861  0004BA  B4D8               	btfsc	status,2,c
  5862  0004BC  D00C               	goto	l406
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;MOTEapp.c: 626: {
  5866                           ;MOTEapp.c: 627: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  5867  0004BE  0E82               	movlw	low STR_64
  5868  0004C0  6F61               	movwf	sendDataCommand@string& (0+255),b
  5869  0004C2  0E7E               	movlw	high STR_64
  5870  0004C4  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  5871  0004C6  0EBA               	movlw	low _dataBuffer
  5872  0004C8  6F63               	movwf	sendDataCommand@appData& (0+255),b
  5873  0004CA  0E01               	movlw	high _dataBuffer
  5874  0004CC  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  5875  0004CE  0E0C               	movlw	12
  5876  0004D0  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  5877  0004D2  EC37  F01D         	call	_sendDataCommand	;wreg free
  5878  0004D6                     l406:
  5879                           
  5880                           ;MOTEapp.c: 628: }
  5881                           ;MOTEapp.c: 630: if ( (changeStates) || (selectButton) )
  5882  0004D6  0100               	movlb	0	; () banked
  5883  0004D8  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  5884  0004DA  A4D8               	btfss	status,2,c
  5885  0004DC  D003               	goto	u8970
  5886                           
  5887                           ; BSR set to: 0
  5888  0004DE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  5889  0004E0  B4D8               	btfsc	status,2,c
  5890  0004E2  0012               	return	
  5891  0004E4                     u8970:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;MOTEapp.c: 631: {
  5895                           ;MOTEapp.c: 632: oled_clear();
  5896                           
  5897                           ; BSR set to: 0
  5898  0004E4  ECFF  F02A         	call	_oled_clear	;wreg free
  5899                           
  5900                           ;MOTEapp.c: 633: oled_putString("Sent Data: ",0,0);
  5901  0004E8  0E6A               	movlw	low STR_65
  5902  0004EA  0100               	movlb	0	; () banked
  5903  0004EC  6F72               	movwf	oled_putString@string& (0+255),b
  5904  0004EE  0E7E               	movlw	high STR_65
  5905  0004F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5906  0004F2  0E00               	movlw	0
  5907  0004F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5908  0004F6  0E00               	movlw	0
  5909  0004F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5910  0004FA  EC1B  F025         	call	_oled_putString	;wreg free
  5911                           
  5912                           ;MOTEapp.c: 634: oled_putString("Tx Port #: ",0,1);
  5913  0004FE  0E5E               	movlw	low STR_66
  5914  000500  0100               	movlb	0	; () banked
  5915  000502  6F72               	movwf	oled_putString@string& (0+255),b
  5916  000504  0E7E               	movlw	high STR_66
  5917  000506  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5918  000508  0E00               	movlw	0
  5919  00050A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5920  00050C  0E01               	movlw	1
  5921  00050E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5922  000510  EC1B  F025         	call	_oled_putString	;wreg free
  5923                           
  5924                           ;MOTEapp.c: 635: oled_putUint8(randomPortNum,12,1);
  5925  000514  0E0C               	movlw	12
  5926  000516  0100               	movlb	0	; () banked
  5927  000518  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  5928  00051A  0E01               	movlw	1
  5929  00051C  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  5930  00051E  51F0               	movf	_randomPortNum& (0+255),w,b
  5931  000520  ECE3  F021         	call	_oled_putUint8
  5932                           
  5933                           ;MOTEapp.c: 636: oled_putString("L:       T: ",0,2);
  5934  000524  0EAC               	movlw	low STR_52
  5935  000526  0100               	movlb	0	; () banked
  5936  000528  6F72               	movwf	oled_putString@string& (0+255),b
  5937  00052A  0E7D               	movlw	high STR_52
  5938  00052C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5939  00052E  0E00               	movlw	0
  5940  000530  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5941  000532  0E02               	movlw	2
  5942  000534  6F75               	movwf	oled_putString@start_page& (0+255),b
  5943  000536  EC1B  F025         	call	_oled_putString	;wreg free
  5944                           
  5945                           ;MOTEapp.c: 637: oled_putString(moteApp_getLightString(), 3, 2);
  5946  00053A  EC9D  F02B         	call	_moteApp_getLightString	;wreg free
  5947  00053E  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  5948  000542  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  5949  000546  0E03               	movlw	3
  5950  000548  0100               	movlb	0	; () banked
  5951  00054A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5952  00054C  0E02               	movlw	2
  5953  00054E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5954  000550  EC1B  F025         	call	_oled_putString	;wreg free
  5955                           
  5956                           ;MOTEapp.c: 638: oled_putint8(temperature,11,2);
  5957  000554  0E0B               	movlw	11
  5958  000556  0100               	movlb	0	; () banked
  5959  000558  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5960  00055A  0E02               	movlw	2
  5961  00055C  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5962  00055E  51DA               	movf	_temperature& (0+255),w,b
  5963  000560  EC66  F020         	call	_oled_putint8
  5964                           
  5965                           ;MOTEapp.c: 639: LATAbits.LATA6 = 0;
  5966  000564  9C89               	bcf	3977,6,c	;volatile
  5967                           
  5968                           ;MOTEapp.c: 640: runningState = runningUplinkTransmit;
  5969  000566  0E08               	movlw	8
  5970  000568  0100               	movlb	0	; () banked
  5971  00056A  6FF2               	movwf	_runningState& (0+255),b
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;MOTEapp.c: 641: }
  5975                           ;MOTEapp.c: 642: break;
  5976  00056C  0012               	return	
  5977  00056E                     
  5978                           ; BSR set to: 0
  5979                           ;MOTEapp.c: 644: if ( messageReady )
  5980                           
  5981                           ; BSR set to: 0
  5982  00056E  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  5983  000570  B4D8               	btfsc	status,2,c
  5984  000572  D103               	goto	l411
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;MOTEapp.c: 645: {
  5988                           ;MOTEapp.c: 646: if(strcmp(moduleResonseBuffer, "ok") == 0)
  5989  000574  0E5A               	movlw	low _moduleResonseBuffer
  5990  000576  6F60               	movwf	strcmp@s1& (0+255),b
  5991  000578  0E01               	movlw	high _moduleResonseBuffer
  5992  00057A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  5993  00057C  0EF8               	movlw	low STR_23
  5994  00057E  6F62               	movwf	strcmp@s2& (0+255),b
  5995  000580  0E7F               	movlw	high STR_23
  5996  000582  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  5997  000584  EC5A  F027         	call	_strcmp	;wreg free
  5998  000588  0100               	movlb	0	; () banked
  5999  00058A  5160               	movf	?_strcmp& (0+255),w,b
  6000  00058C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  6001  00058E  A4D8               	btfss	status,2,c
  6002  000590  D003               	goto	l412
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;MOTEapp.c: 647: {
  6006                           ;MOTEapp.c: 648: LATAbits.LATA6 = 1;
  6007  000592  8C89               	bsf	3977,6,c	;volatile
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;MOTEapp.c: 649: runningState = runningUplinkTransmit;
  6011  000594  0E08               	movlw	8
  6012  000596  6FF2               	movwf	_runningState& (0+255),b
  6013  000598                     l412:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;MOTEapp.c: 650: }
  6017                           ;MOTEapp.c: 651: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  6018                           
  6019                           ; BSR set to: 0
  6020  000598  0E5A               	movlw	low _moduleResonseBuffer
  6021  00059A  6F60               	movwf	strncmp@s1& (0+255),b
  6022  00059C  0E01               	movlw	high _moduleResonseBuffer
  6023  00059E  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  6024  0005A0  0EB0               	movlw	low STR_69
  6025  0005A2  6F62               	movwf	strncmp@s2& (0+255),b
  6026  0005A4  0E7F               	movlw	high STR_69
  6027  0005A6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  6028  0005A8  0E00               	movlw	0
  6029  0005AA  6F65               	movwf	(strncmp@len+1)& (0+255),b
  6030  0005AC  0E06               	movlw	6
  6031  0005AE  6F64               	movwf	strncmp@len& (0+255),b
  6032  0005B0  EC6D  F022         	call	_strncmp	;wreg free
  6033  0005B4  0100               	movlb	0	; () banked
  6034  0005B6  5160               	movf	?_strncmp& (0+255),w,b
  6035  0005B8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6036  0005BA  A4D8               	btfss	status,2,c
  6037  0005BC  D078               	goto	l413
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;MOTEapp.c: 652: {
  6041                           ;MOTEapp.c: 653: uint8_t bufferReadPos = 7;
  6042  0005BE  0E07               	movlw	7
  6043  0005C0  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;MOTEapp.c: 657: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  6047  0005C2  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6048  0005C4  0D01               	mullw	1
  6049  0005C6  0E5A               	movlw	low _moduleResonseBuffer
  6050  0005C8  24F3               	addwf	prodl,w,c
  6051  0005CA  6ED9               	movwf	fsr2l,c
  6052  0005CC  0E01               	movlw	high _moduleResonseBuffer
  6053  0005CE  20F4               	addwfc	prodh,w,c
  6054  0005D0  6EDA               	movwf	fsr2h,c
  6055  0005D2  50DF               	movf	indf2,w,c
  6056  0005D4  0101               	movlb	1	; () banked
  6057  0005D6  6FED               	movwf	_responsePortNum& (0+255),b
  6058                           
  6059                           ; BSR set to: 1
  6060  0005D8  0100               	movlb	0	; () banked
  6061  0005DA  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;MOTEapp.c: 658: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  6065  0005DC  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6066  0005DE  0D01               	mullw	1
  6067  0005E0  0E5A               	movlw	low _moduleResonseBuffer
  6068  0005E2  24F3               	addwf	prodl,w,c
  6069  0005E4  6ED9               	movwf	fsr2l,c
  6070  0005E6  0E01               	movlw	high _moduleResonseBuffer
  6071  0005E8  20F4               	addwfc	prodh,w,c
  6072  0005EA  6EDA               	movwf	fsr2h,c
  6073  0005EC  50DF               	movf	indf2,w,c
  6074  0005EE  0101               	movlb	1	; () banked
  6075  0005F0  6FEE               	movwf	(_responsePortNum+1)& (0+255),b
  6076                           
  6077                           ; BSR set to: 1
  6078  0005F2  0100               	movlb	0	; () banked
  6079  0005F4  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MOTEapp.c: 659: if (responsePortNum[1] != ' ')
  6083  0005F6  0E20               	movlw	32
  6084  0005F8  0101               	movlb	1	; () banked
  6085  0005FA  19EE               	xorwf	(_responsePortNum+1)& (0+255),w,b
  6086  0005FC  B4D8               	btfsc	status,2,c
  6087  0005FE  D015               	goto	l415
  6088                           
  6089                           ; BSR set to: 1
  6090                           ;MOTEapp.c: 660: {
  6091                           ;MOTEapp.c: 661: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  6092  000600  0100               	movlb	0	; () banked
  6093  000602  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6094  000604  0D01               	mullw	1
  6095  000606  0E5A               	movlw	low _moduleResonseBuffer
  6096  000608  24F3               	addwf	prodl,w,c
  6097  00060A  6ED9               	movwf	fsr2l,c
  6098  00060C  0E01               	movlw	high _moduleResonseBuffer
  6099  00060E  20F4               	addwfc	prodh,w,c
  6100  000610  6EDA               	movwf	fsr2h,c
  6101  000612  50DF               	movf	indf2,w,c
  6102  000614  0101               	movlb	1	; () banked
  6103  000616  6FEF               	movwf	(_responsePortNum+2)& (0+255),b
  6104                           
  6105                           ; BSR set to: 1
  6106  000618  0100               	movlb	0	; () banked
  6107  00061A  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;MOTEapp.c: 662: if (responsePortNum[2] != ' ')
  6111  00061C  0E20               	movlw	32
  6112  00061E  0101               	movlb	1	; () banked
  6113  000620  19EF               	xorwf	(_responsePortNum+2)& (0+255),w,b
  6114  000622  B4D8               	btfsc	status,2,c
  6115  000624  D002               	goto	l415
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;MOTEapp.c: 663: {
  6119                           ;MOTEapp.c: 664: bufferReadPos++;
  6120  000626  0100               	movlb	0	; () banked
  6121  000628  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6122  00062A                     l415:
  6123                           
  6124                           ;MOTEapp.c: 665: }
  6125                           ;MOTEapp.c: 666: }
  6126                           ;MOTEapp.c: 668: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  6127                           
  6128                           ; BSR set to: 0
  6129                           
  6130                           ; BSR set to: 0
  6131  00062A  0E00               	movlw	0
  6132  00062C  0100               	movlb	0	; () banked
  6133  00062E  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  6134  000630                     l10194:
  6135                           
  6136                           ; BSR set to: 0
  6137  000630  0E3F               	movlw	63
  6138  000632  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  6139  000634  D001               	goto	l416
  6140  000636  D023               	goto	u9050
  6141  000638                     l416:
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;MOTEapp.c: 669: {
  6145                           ;MOTEapp.c: 670: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  6146                           
  6147                           ; BSR set to: 0
  6148  000638  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  6149  00063A  0D01               	mullw	1
  6150  00063C  0E5A               	movlw	low _moduleResonseBuffer
  6151  00063E  24F3               	addwf	prodl,w,c
  6152  000640  6ED9               	movwf	fsr2l,c
  6153  000642  0E01               	movlw	high _moduleResonseBuffer
  6154  000644  20F4               	addwfc	prodh,w,c
  6155  000646  6EDA               	movwf	fsr2h,c
  6156  000648  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  6157  00064A  0D01               	mullw	1
  6158  00064C  0E9A               	movlw	low _responseData
  6159  00064E  24F3               	addwf	prodl,w,c
  6160  000650  6EE1               	movwf	fsr1l,c
  6161  000652  0E01               	movlw	high _responseData
  6162  000654  20F4               	addwfc	prodh,w,c
  6163  000656  6EE2               	movwf	fsr1h,c
  6164  000658  CFDF FFE7          	movff	indf2,indf1
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 672: if (responseData[counter] != 0x00)
  6168  00065C  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  6169  00065E  0D01               	mullw	1
  6170  000660  0E9A               	movlw	low _responseData
  6171  000662  24F3               	addwf	prodl,w,c
  6172  000664  6ED9               	movwf	fsr2l,c
  6173  000666  0E01               	movlw	high _responseData
  6174  000668  20F4               	addwfc	prodh,w,c
  6175  00066A  6EDA               	movwf	fsr2h,c
  6176  00066C  50DF               	movf	indf2,w,c
  6177  00066E  B4D8               	btfsc	status,2,c
  6178  000670  D002               	goto	l418
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;MOTEapp.c: 673: {
  6182                           ;MOTEapp.c: 674: bufferReadPos++;
  6183  000672  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  6184                           
  6185                           ;MOTEapp.c: 675: } else {
  6186  000674  D002               	goto	l419
  6187  000676                     l418:
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;MOTEapp.c: 676: counter = sizeof(moduleResonseBuffer);
  6191                           
  6192                           ; BSR set to: 0
  6193  000676  0E40               	movlw	64
  6194  000678  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  6195  00067A                     l419:
  6196                           
  6197                           ; BSR set to: 0
  6198                           
  6199                           ; BSR set to: 0
  6200  00067A  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  6201  00067C  D7D9               	goto	l10194
  6202  00067E                     u9050:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;MOTEapp.c: 677: }
  6206                           ;MOTEapp.c: 678: }
  6207                           ;MOTEapp.c: 680: LATAbits.LATA7 = 1;
  6208  00067E  8E89               	bsf	3977,7,c	;volatile
  6209                           
  6210                           ;MOTEapp.c: 681: LATAbits.LATA6 = 0;
  6211  000680  9C89               	bcf	3977,6,c	;volatile
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;MOTEapp.c: 683: oled_putString("Server Response ",0,2);
  6215  000682  0E5A               	movlw	low STR_70
  6216  000684  6F72               	movwf	oled_putString@string& (0+255),b
  6217  000686  0E7B               	movlw	high STR_70
  6218  000688  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6219  00068A  0E00               	movlw	0
  6220  00068C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6221  00068E  0E02               	movlw	2
  6222  000690  6F75               	movwf	oled_putString@start_page& (0+255),b
  6223  000692  EC1B  F025         	call	_oled_putString	;wreg free
  6224                           
  6225                           ;MOTEapp.c: 684: oled_putString("    Received    ",0,3);
  6226  000696  0ED2               	movlw	low STR_71
  6227  000698  0100               	movlb	0	; () banked
  6228  00069A  6F72               	movwf	oled_putString@string& (0+255),b
  6229  00069C  0E7A               	movlw	high STR_71
  6230  00069E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6231  0006A0  0E00               	movlw	0
  6232  0006A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6233  0006A4  0E03               	movlw	3
  6234  0006A6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6235  0006A8  EC1B  F025         	call	_oled_putString	;wreg free
  6236                           
  6237                           ;MOTEapp.c: 685: }
  6238  0006AC  D05D               	goto	l425
  6239  0006AE                     l413:
  6240                           
  6241                           ;MOTEapp.c: 686: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  6242  0006AE  0E5A               	movlw	low _moduleResonseBuffer
  6243  0006B0  0100               	movlb	0	; () banked
  6244  0006B2  6F60               	movwf	strncmp@s1& (0+255),b
  6245  0006B4  0E01               	movlw	high _moduleResonseBuffer
  6246  0006B6  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  6247  0006B8  0EB7               	movlw	low STR_72
  6248  0006BA  6F62               	movwf	strncmp@s2& (0+255),b
  6249  0006BC  0E7F               	movlw	high STR_72
  6250  0006BE  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  6251  0006C0  0E00               	movlw	0
  6252  0006C2  6F65               	movwf	(strncmp@len+1)& (0+255),b
  6253  0006C4  0E06               	movlw	6
  6254  0006C6  6F64               	movwf	strncmp@len& (0+255),b
  6255  0006C8  EC6D  F022         	call	_strncmp	;wreg free
  6256  0006CC  0100               	movlb	0	; () banked
  6257  0006CE  5160               	movf	?_strncmp& (0+255),w,b
  6258  0006D0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6259  0006D2  A4D8               	btfss	status,2,c
  6260  0006D4  D00C               	goto	l421
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;MOTEapp.c: 687: {
  6264                           ;MOTEapp.c: 688: LATAbits.LATA6 = 0;
  6265  0006D6  9C89               	bcf	3977,6,c	;volatile
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;MOTEapp.c: 689: oled_putString("Data Transmitted",0,3);
  6269  0006D8  0EC0               	movlw	low STR_73
  6270  0006DA  6F72               	movwf	oled_putString@string& (0+255),b
  6271  0006DC  0E7B               	movlw	high STR_73
  6272  0006DE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6273  0006E0  0E00               	movlw	0
  6274  0006E2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6275  0006E4  0E03               	movlw	3
  6276  0006E6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6277  0006E8  EC1B  F025         	call	_oled_putString	;wreg free
  6278                           
  6279                           ;MOTEapp.c: 690: }
  6280  0006EC  D03D               	goto	l425
  6281  0006EE                     l421:
  6282                           
  6283                           ;MOTEapp.c: 691: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  6284  0006EE  0E5A               	movlw	low _moduleResonseBuffer
  6285  0006F0  0100               	movlb	0	; () banked
  6286  0006F2  6F60               	movwf	strncmp@s1& (0+255),b
  6287  0006F4  0E01               	movlw	high _moduleResonseBuffer
  6288  0006F6  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  6289  0006F8  0EA9               	movlw	low STR_74
  6290  0006FA  6F62               	movwf	strncmp@s2& (0+255),b
  6291  0006FC  0E7F               	movlw	high STR_74
  6292  0006FE  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  6293  000700  0E00               	movlw	0
  6294  000702  6F65               	movwf	(strncmp@len+1)& (0+255),b
  6295  000704  0E06               	movlw	6
  6296  000706  6F64               	movwf	strncmp@len& (0+255),b
  6297  000708  EC6D  F022         	call	_strncmp	;wreg free
  6298  00070C  0100               	movlb	0	; () banked
  6299  00070E  5160               	movf	?_strncmp& (0+255),w,b
  6300  000710  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6301  000712  A4D8               	btfss	status,2,c
  6302  000714  D00B               	goto	l423
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;MOTEapp.c: 692: {
  6306                           ;MOTEapp.c: 693: oled_putString("Mac Error Occurred",0,3);
  6307  000716  0E9C               	movlw	low STR_75
  6308  000718  6F72               	movwf	oled_putString@string& (0+255),b
  6309  00071A  0E7A               	movlw	high STR_75
  6310  00071C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6311  00071E  0E00               	movlw	0
  6312  000720  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6313  000722  0E03               	movlw	3
  6314  000724  6F75               	movwf	oled_putString@start_page& (0+255),b
  6315  000726  EC1B  F025         	call	_oled_putString	;wreg free
  6316                           
  6317                           ;MOTEapp.c: 694: }
  6318  00072A  D01E               	goto	l425
  6319  00072C                     l423:
  6320                           
  6321                           ;MOTEapp.c: 695: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  6322  00072C  0E5A               	movlw	low _moduleResonseBuffer
  6323  00072E  0100               	movlb	0	; () banked
  6324  000730  6F60               	movwf	strncmp@s1& (0+255),b
  6325  000732  0E01               	movlw	high _moduleResonseBuffer
  6326  000734  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  6327  000736  0EA2               	movlw	low STR_76
  6328  000738  6F62               	movwf	strncmp@s2& (0+255),b
  6329  00073A  0E7F               	movlw	high STR_76
  6330  00073C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  6331  00073E  0E00               	movlw	0
  6332  000740  6F65               	movwf	(strncmp@len+1)& (0+255),b
  6333  000742  0E06               	movlw	6
  6334  000744  6F64               	movwf	strncmp@len& (0+255),b
  6335  000746  EC6D  F022         	call	_strncmp	;wreg free
  6336  00074A  0100               	movlb	0	; () banked
  6337  00074C  5160               	movf	?_strncmp& (0+255),w,b
  6338  00074E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6339  000750  A4D8               	btfss	status,2,c
  6340  000752  D00A               	goto	l425
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;MOTEapp.c: 696: {
  6344                           ;MOTEapp.c: 697: oled_putString("No Free Channel",0,3);
  6345  000754  0EC9               	movlw	low STR_77
  6346  000756  6F72               	movwf	oled_putString@string& (0+255),b
  6347  000758  0E7C               	movlw	high STR_77
  6348  00075A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6349  00075C  0E00               	movlw	0
  6350  00075E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6351  000760  0E03               	movlw	3
  6352  000762  6F75               	movwf	oled_putString@start_page& (0+255),b
  6353  000764  EC1B  F025         	call	_oled_putString	;wreg free
  6354  000768                     l425:
  6355                           
  6356                           ;MOTEapp.c: 698: }
  6357                           ;MOTEapp.c: 699: _delay((unsigned long)((16)*(48000000/4000.0)));
  6358  000768  0EFA               	movlw	250
  6359  00076A  0100               	movlb	0	; () banked
  6360  00076C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6361  00076E  0E58               	movlw	88
  6362  000770                     u10567:
  6363  000770  2EE8               	decfsz	wreg,f,c
  6364  000772  D7FE               	bra	u10567
  6365  000774  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  6366  000776  D7FC               	bra	u10567
  6367  000778  F000               	nop	
  6368  00077A                     l411:
  6369                           
  6370                           ;MOTEapp.c: 700: }
  6371                           ;MOTEapp.c: 701: if ( (changeStates) || (selectButton) )
  6372  00077A  0100               	movlb	0	; () banked
  6373  00077C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6374  00077E  A4D8               	btfss	status,2,c
  6375  000780  D003               	goto	u9100
  6376                           
  6377                           ; BSR set to: 0
  6378  000782  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6379  000784  B4D8               	btfsc	status,2,c
  6380  000786  0012               	return	
  6381  000788                     u9100:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;MOTEapp.c: 702: {
  6385                           ;MOTEapp.c: 703: oled_clear();
  6386                           
  6387                           ; BSR set to: 0
  6388  000788  ECFF  F02A         	call	_oled_clear	;wreg free
  6389                           
  6390                           ;MOTEapp.c: 704: oled_putString("  Issue Uplink  ",0,0);
  6391  00078C  0E27               	movlw	low STR_54
  6392  00078E  0100               	movlb	0	; () banked
  6393  000790  6F72               	movwf	oled_putString@string& (0+255),b
  6394  000792  0E7B               	movlw	high STR_54
  6395  000794  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6396  000796  0E00               	movlw	0
  6397  000798  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6398  00079A  0E00               	movlw	0
  6399  00079C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6400  00079E  EC1B  F025         	call	_oled_putString	;wreg free
  6401                           
  6402                           ;MOTEapp.c: 705: oled_putString(" LoRaWAN Packet ",0,1);
  6403  0007A2  0E8D               	movlw	low STR_55
  6404  0007A4  0100               	movlb	0	; () banked
  6405  0007A6  6F72               	movwf	oled_putString@string& (0+255),b
  6406  0007A8  0E7B               	movlw	high STR_55
  6407  0007AA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6408  0007AC  0E00               	movlw	0
  6409  0007AE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6410  0007B0  0E01               	movlw	1
  6411  0007B2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6412  0007B4  EC1B  F025         	call	_oled_putString	;wreg free
  6413                           
  6414                           ;MOTEapp.c: 706: oled_putString("(NAV)    (SEL) ",0,3);
  6415  0007B8  0E99               	movlw	low STR_56
  6416  0007BA  0100               	movlb	0	; () banked
  6417  0007BC  6F72               	movwf	oled_putString@string& (0+255),b
  6418  0007BE  0E7C               	movlw	high STR_56
  6419  0007C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6420  0007C2  0E00               	movlw	0
  6421  0007C4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6422  0007C6  0E03               	movlw	3
  6423  0007C8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6424  0007CA  EC1B  F025         	call	_oled_putString	;wreg free
  6425                           
  6426                           ;MOTEapp.c: 707: runningState = runningUplink;
  6427  0007CE  0E06               	movlw	6
  6428  0007D0  0100               	movlb	0	; () banked
  6429  0007D2  6FF2               	movwf	_runningState& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;MOTEapp.c: 708: }
  6433                           ;MOTEapp.c: 709: break;
  6434  0007D4  0012               	return	
  6435  0007D6                     
  6436                           ; BSR set to: 0
  6437                           ;MOTEapp.c: 711: if (changeStates)
  6438                           
  6439                           ; BSR set to: 0
  6440  0007D6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6441  0007D8  B4D8               	btfsc	status,2,c
  6442  0007DA  D027               	goto	l430
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;MOTEapp.c: 712: {
  6446                           ;MOTEapp.c: 713: oled_clear();
  6447  0007DC  ECFF  F02A         	call	_oled_clear	;wreg free
  6448                           
  6449                           ;MOTEapp.c: 714: oled_putString("  Sensor Data  ",0,0);
  6450  0007E0  0E79               	movlw	low STR_81
  6451  0007E2  0100               	movlb	0	; () banked
  6452  0007E4  6F72               	movwf	oled_putString@string& (0+255),b
  6453  0007E6  0E7C               	movlw	high STR_81
  6454  0007E8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6455  0007EA  0E00               	movlw	0
  6456  0007EC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6457  0007EE  0E00               	movlw	0
  6458  0007F0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6459  0007F2  EC1B  F025         	call	_oled_putString	;wreg free
  6460                           
  6461                           ;MOTEapp.c: 715: oled_putString("    Display    ",0,1);
  6462  0007F6  0E69               	movlw	low STR_82
  6463  0007F8  0100               	movlb	0	; () banked
  6464  0007FA  6F72               	movwf	oled_putString@string& (0+255),b
  6465  0007FC  0E7C               	movlw	high STR_82
  6466  0007FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6467  000800  0E00               	movlw	0
  6468  000802  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6469  000804  0E01               	movlw	1
  6470  000806  6F75               	movwf	oled_putString@start_page& (0+255),b
  6471  000808  EC1B  F025         	call	_oled_putString	;wreg free
  6472                           
  6473                           ;MOTEapp.c: 716: oled_putString("(NAV)    (SEL) ",0,3);
  6474  00080C  0E99               	movlw	low STR_56
  6475  00080E  0100               	movlb	0	; () banked
  6476  000810  6F72               	movwf	oled_putString@string& (0+255),b
  6477  000812  0E7C               	movlw	high STR_56
  6478  000814  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6479  000816  0E00               	movlw	0
  6480  000818  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6481  00081A  0E03               	movlw	3
  6482  00081C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6483  00081E  EC1B  F025         	call	_oled_putString	;wreg free
  6484                           
  6485                           ;MOTEapp.c: 717: runningState = runningSensor;
  6486  000822  0E01               	movlw	1
  6487  000824  0100               	movlb	0	; () banked
  6488  000826  6FF2               	movwf	_runningState& (0+255),b
  6489                           
  6490                           ;MOTEapp.c: 718: }
  6491  000828  0012               	return	
  6492  00082A                     l430:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;MOTEapp.c: 719: else if (selectButton)
  6496                           
  6497                           ; BSR set to: 0
  6498  00082A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6499  00082C  B4D8               	btfsc	status,2,c
  6500  00082E  0012               	return	
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;MOTEapp.c: 720: {
  6504                           ;MOTEapp.c: 722: oled_clear();
  6505  000830  ECFF  F02A         	call	_oled_clear	;wreg free
  6506                           
  6507                           ;MOTEapp.c: 724: LATAbits.LATA7 = 0;
  6508  000834  9E89               	bcf	3977,7,c	;volatile
  6509                           
  6510                           ;MOTEapp.c: 726: oled_putString("Downlink Display",0,0);
  6511  000836  0E48               	movlw	low STR_84
  6512  000838  0100               	movlb	0	; () banked
  6513  00083A  6F72               	movwf	oled_putString@string& (0+255),b
  6514  00083C  0E7C               	movlw	high STR_84
  6515  00083E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6516  000840  0E00               	movlw	0
  6517  000842  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6518  000844  0E00               	movlw	0
  6519  000846  6F75               	movwf	oled_putString@start_page& (0+255),b
  6520  000848  EC1B  F025         	call	_oled_putString	;wreg free
  6521                           
  6522                           ;MOTEapp.c: 728: oled_putString("Rx Port# ",0,1);
  6523  00084C  0EDA               	movlw	low STR_85
  6524  00084E  0100               	movlb	0	; () banked
  6525  000850  6F72               	movwf	oled_putString@string& (0+255),b
  6526  000852  0E7E               	movlw	high STR_85
  6527  000854  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6528  000856  0E00               	movlw	0
  6529  000858  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6530  00085A  0E01               	movlw	1
  6531  00085C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6532  00085E  EC1B  F025         	call	_oled_putString	;wreg free
  6533                           
  6534                           ;MOTEapp.c: 729: oled_putString(&responsePortNum,9,1);
  6535  000862  0EED               	movlw	low _responsePortNum
  6536  000864  0100               	movlb	0	; () banked
  6537  000866  6F72               	movwf	oled_putString@string& (0+255),b
  6538  000868  0E01               	movlw	high _responsePortNum
  6539  00086A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6540  00086C  0E09               	movlw	9
  6541  00086E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6542  000870  0E01               	movlw	1
  6543  000872  6F75               	movwf	oled_putString@start_page& (0+255),b
  6544  000874  EC1B  F025         	call	_oled_putString	;wreg free
  6545                           
  6546                           ;MOTEapp.c: 731: oled_putString("Data: ",0,2);
  6547  000878  0E6F               	movlw	low (STR_65+5)
  6548  00087A  0100               	movlb	0	; () banked
  6549  00087C  6F72               	movwf	oled_putString@string& (0+255),b
  6550  00087E  0E7E               	movlw	high (STR_65+5)
  6551  000880  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6552  000882  0E00               	movlw	0
  6553  000884  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6554  000886  0E02               	movlw	2
  6555  000888  6F75               	movwf	oled_putString@start_page& (0+255),b
  6556  00088A  EC1B  F025         	call	_oled_putString	;wreg free
  6557                           
  6558                           ;MOTEapp.c: 732: oled_putString(&responseData[0],6,2);
  6559  00088E  0E9A               	movlw	low _responseData
  6560  000890  0100               	movlb	0	; () banked
  6561  000892  6F72               	movwf	oled_putString@string& (0+255),b
  6562  000894  0E01               	movlw	high _responseData
  6563  000896  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6564  000898  0E06               	movlw	6
  6565  00089A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6566  00089C  0E02               	movlw	2
  6567  00089E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6568  0008A0  EC1B  F025         	call	_oled_putString	;wreg free
  6569                           
  6570                           ;MOTEapp.c: 734: oled_putString(&responseData[10],0,3);
  6571  0008A4  0EA4               	movlw	low (_responseData+10)
  6572  0008A6  0100               	movlb	0	; () banked
  6573  0008A8  6F72               	movwf	oled_putString@string& (0+255),b
  6574  0008AA  0E01               	movlw	high (_responseData+10)
  6575  0008AC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6576  0008AE  0E00               	movlw	0
  6577  0008B0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6578  0008B2  0E03               	movlw	3
  6579  0008B4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6580  0008B6  EC1B  F025         	call	_oled_putString	;wreg free
  6581                           
  6582                           ;MOTEapp.c: 736: runningState = runningDownlinkDisplay;
  6583  0008BA  0E0B               	movlw	11
  6584  0008BC  0100               	movlb	0	; () banked
  6585  0008BE  6FF2               	movwf	_runningState& (0+255),b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;MOTEapp.c: 737: }
  6589                           ;MOTEapp.c: 738: break;
  6590                           
  6591                           ; BSR set to: 0
  6592  0008C0  0012               	return	
  6593  0008C2                     
  6594                           ; BSR set to: 0
  6595                           ;MOTEapp.c: 740: if ( (changeStates) || (selectButton) )
  6596                           
  6597                           ; BSR set to: 0
  6598  0008C2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6599  0008C4  A4D8               	btfss	status,2,c
  6600  0008C6  D003               	goto	u9140
  6601                           
  6602                           ; BSR set to: 0
  6603  0008C8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6604  0008CA  B4D8               	btfsc	status,2,c
  6605  0008CC  0012               	return	
  6606  0008CE                     u9140:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;MOTEapp.c: 741: {
  6610                           ;MOTEapp.c: 742: oled_clear();
  6611                           
  6612                           ; BSR set to: 0
  6613  0008CE  ECFF  F02A         	call	_oled_clear	;wreg free
  6614                           
  6615                           ;MOTEapp.c: 743: oled_putString(" View Downlink  ",0,0);
  6616  0008D2  0E16               	movlw	low STR_57
  6617  0008D4  0100               	movlb	0	; () banked
  6618  0008D6  6F72               	movwf	oled_putString@string& (0+255),b
  6619  0008D8  0E7B               	movlw	high STR_57
  6620  0008DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6621  0008DC  0E00               	movlw	0
  6622  0008DE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6623  0008E0  0E00               	movlw	0
  6624  0008E2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6625  0008E4  EC1B  F025         	call	_oled_putString	;wreg free
  6626                           
  6627                           ;MOTEapp.c: 744: oled_putString("  Last Message  ",0,1);
  6628  0008E8  0E05               	movlw	low STR_58
  6629  0008EA  0100               	movlb	0	; () banked
  6630  0008EC  6F72               	movwf	oled_putString@string& (0+255),b
  6631  0008EE  0E7B               	movlw	high STR_58
  6632  0008F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6633  0008F2  0E00               	movlw	0
  6634  0008F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6635  0008F6  0E01               	movlw	1
  6636  0008F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6637  0008FA  EC1B  F025         	call	_oled_putString	;wreg free
  6638                           
  6639                           ;MOTEapp.c: 745: oled_putString("(NAV)    (SEL) ",0,3);
  6640  0008FE  0E99               	movlw	low STR_56
  6641  000900  0100               	movlb	0	; () banked
  6642  000902  6F72               	movwf	oled_putString@string& (0+255),b
  6643  000904  0E7C               	movlw	high STR_56
  6644  000906  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6645  000908  0E00               	movlw	0
  6646  00090A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6647  00090C  0E03               	movlw	3
  6648  00090E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6649  000910  EC1B  F025         	call	_oled_putString	;wreg free
  6650                           
  6651                           ;MOTEapp.c: 746: runningState = runningDownlink;
  6652  000914  0E0A               	movlw	10
  6653  000916  0100               	movlb	0	; () banked
  6654  000918  6FF2               	movwf	_runningState& (0+255),b
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;MOTEapp.c: 747: }
  6658                           ;MOTEapp.c: 748: break;
  6659  00091A  0012               	return	
  6660  00091C                     
  6661                           ; BSR set to: 0
  6662                           ;MOTEapp.c: 750: if (changeStates)
  6663                           
  6664                           ; BSR set to: 0
  6665  00091C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6666  00091E  B4D8               	btfsc	status,2,c
  6667  000920  D036               	goto	l438
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;MOTEapp.c: 751: {
  6671                           ;MOTEapp.c: 752: oled_clear();
  6672  000922  ECFF  F02A         	call	_oled_clear	;wreg free
  6673                           
  6674                           ;MOTEapp.c: 753: oled_putString("Menu Has Timeout",0,0);
  6675  000926  0E26               	movlw	low STR_90
  6676  000928  0100               	movlb	0	; () banked
  6677  00092A  6F72               	movwf	oled_putString@string& (0+255),b
  6678  00092C  0E7C               	movlw	high STR_90
  6679  00092E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6680  000930  0E00               	movlw	0
  6681  000932  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6682  000934  0E00               	movlw	0
  6683  000936  6F75               	movwf	oled_putString@start_page& (0+255),b
  6684  000938  EC1B  F025         	call	_oled_putString	;wreg free
  6685                           
  6686                           ;MOTEapp.c: 754: if (menuTimeout)
  6687  00093C  0100               	movlb	0	; () banked
  6688  00093E  51FB               	movf	_menuTimeout& (0+255),w,b
  6689  000940  B4D8               	btfsc	status,2,c
  6690  000942  D00B               	goto	l439
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;MOTEapp.c: 755: oled_putString("    Enabled   ", 0,2);
  6694  000944  0ED9               	movlw	low STR_91
  6695  000946  6F72               	movwf	oled_putString@string& (0+255),b
  6696  000948  0E7C               	movlw	high STR_91
  6697  00094A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6698  00094C  0E00               	movlw	0
  6699  00094E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6700  000950  0E02               	movlw	2
  6701  000952  6F75               	movwf	oled_putString@start_page& (0+255),b
  6702  000954  EC1B  F025         	call	_oled_putString	;wreg free
  6703  000958  D00B               	goto	l440
  6704  00095A                     l439:
  6705                           
  6706                           ;MOTEapp.c: 756: else
  6707                           ;MOTEapp.c: 757: oled_putString("    Disabled  ", 0,2);
  6708  00095A  0EE8               	movlw	low STR_92
  6709  00095C  0100               	movlb	0	; () banked
  6710  00095E  6F72               	movwf	oled_putString@string& (0+255),b
  6711  000960  0E7C               	movlw	high STR_92
  6712  000962  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6713  000964  0E00               	movlw	0
  6714  000966  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6715  000968  0E02               	movlw	2
  6716  00096A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6717  00096C  EC1B  F025         	call	_oled_putString	;wreg free
  6718  000970                     l440:
  6719                           
  6720                           ;MOTEapp.c: 758: oled_putString("(NAV)    (CNG) ",0,3);
  6721  000970  0E89               	movlw	low STR_93
  6722  000972  0100               	movlb	0	; () banked
  6723  000974  6F72               	movwf	oled_putString@string& (0+255),b
  6724  000976  0E7C               	movlw	high STR_93
  6725  000978  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6726  00097A  0E00               	movlw	0
  6727  00097C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6728  00097E  0E03               	movlw	3
  6729  000980  6F75               	movwf	oled_putString@start_page& (0+255),b
  6730  000982  EC1B  F025         	call	_oled_putString	;wreg free
  6731                           
  6732                           ;MOTEapp.c: 759: runningState = runningMenuTimeout;
  6733  000986  0E0C               	movlw	12
  6734  000988  0100               	movlb	0	; () banked
  6735  00098A  6FF2               	movwf	_runningState& (0+255),b
  6736                           
  6737                           ;MOTEapp.c: 760: }
  6738  00098C  0012               	return	
  6739  00098E                     l438:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;MOTEapp.c: 761: else if (selectButton)
  6743                           
  6744                           ; BSR set to: 0
  6745  00098E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6746  000990  B4D8               	btfsc	status,2,c
  6747  000992  0012               	return	
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;MOTEapp.c: 762: {
  6751                           ;MOTEapp.c: 763: oled_clear();
  6752  000994  ECFF  F02A         	call	_oled_clear	;wreg free
  6753                           
  6754                           ;MOTEapp.c: 764: oled_putString("  Sensor Data  ",0,0);
  6755  000998  0E79               	movlw	low STR_81
  6756  00099A  0100               	movlb	0	; () banked
  6757  00099C  6F72               	movwf	oled_putString@string& (0+255),b
  6758  00099E  0E7C               	movlw	high STR_81
  6759  0009A0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6760  0009A2  0E00               	movlw	0
  6761  0009A4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6762  0009A6  0E00               	movlw	0
  6763  0009A8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6764  0009AA  EC1B  F025         	call	_oled_putString	;wreg free
  6765                           
  6766                           ;MOTEapp.c: 765: oled_putString("Light:",0,1);
  6767  0009AE  0E86               	movlw	low STR_95
  6768  0009B0  0100               	movlb	0	; () banked
  6769  0009B2  6F72               	movwf	oled_putString@string& (0+255),b
  6770  0009B4  0E7F               	movlw	high STR_95
  6771  0009B6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6772  0009B8  0E00               	movlw	0
  6773  0009BA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6774  0009BC  0E01               	movlw	1
  6775  0009BE  6F75               	movwf	oled_putString@start_page& (0+255),b
  6776  0009C0  EC1B  F025         	call	_oled_putString	;wreg free
  6777                           
  6778                           ;MOTEapp.c: 766: oled_putString("Temp :",0,2);
  6779  0009C4  0E7F               	movlw	low STR_96
  6780  0009C6  0100               	movlb	0	; () banked
  6781  0009C8  6F72               	movwf	oled_putString@string& (0+255),b
  6782  0009CA  0E7F               	movlw	high STR_96
  6783  0009CC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6784  0009CE  0E00               	movlw	0
  6785  0009D0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6786  0009D2  0E02               	movlw	2
  6787  0009D4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6788  0009D6  EC1B  F025         	call	_oled_putString	;wreg free
  6789                           
  6790                           ;MOTEapp.c: 767: oled_putString("C",10,2);
  6791  0009DA  0EFB               	movlw	low STR_97
  6792  0009DC  0100               	movlb	0	; () banked
  6793  0009DE  6F72               	movwf	oled_putString@string& (0+255),b
  6794  0009E0  0E7F               	movlw	high STR_97
  6795  0009E2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6796  0009E4  0E0A               	movlw	10
  6797  0009E6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6798  0009E8  0E02               	movlw	2
  6799  0009EA  6F75               	movwf	oled_putString@start_page& (0+255),b
  6800  0009EC  EC1B  F025         	call	_oled_putString	;wreg free
  6801                           
  6802                           ;MOTEapp.c: 769: moteApp_setSensorsInput();
  6803  0009F0  EC36  F024         	call	_moteApp_setSensorsInput	;wreg free
  6804                           
  6805                           ;MOTEapp.c: 770: runningState = runningSensorMenu;
  6806  0009F4  0E02               	movlw	2
  6807  0009F6  0100               	movlb	0	; () banked
  6808  0009F8  6FF2               	movwf	_runningState& (0+255),b
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;MOTEapp.c: 771: }
  6812                           ;MOTEapp.c: 772: break;
  6813                           
  6814                           ; BSR set to: 0
  6815  0009FA  0012               	return	
  6816  0009FC                     
  6817                           ; BSR set to: 0
  6818                           ;MOTEapp.c: 774: if (changeStates)
  6819                           
  6820                           ; BSR set to: 0
  6821  0009FC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6822  0009FE  B4D8               	btfsc	status,2,c
  6823  000A00  D09B               	goto	l444
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;MOTEapp.c: 775: {
  6827                           ;MOTEapp.c: 776: oled_clear();
  6828  000A02  ECFF  F02A         	call	_oled_clear	;wreg free
  6829                           
  6830                           ;MOTEapp.c: 777: oled_putString("Periodic Uplink ",0,0);
  6831  000A06  0E7C               	movlw	low STR_98
  6832  000A08  0100               	movlb	0	; () banked
  6833  000A0A  6F72               	movwf	oled_putString@string& (0+255),b
  6834  000A0C  0E7B               	movlw	high STR_98
  6835  000A0E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6836  000A10  0E00               	movlw	0
  6837  000A12  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6838  000A14  0E00               	movlw	0
  6839  000A16  6F75               	movwf	oled_putString@start_page& (0+255),b
  6840  000A18  EC1B  F025         	call	_oled_putString	;wreg free
  6841                           
  6842                           ;MOTEapp.c: 778: oled_putString("Tx Event Timing ",0,1);
  6843  000A1C  0E6B               	movlw	low STR_99
  6844  000A1E  0100               	movlb	0	; () banked
  6845  000A20  6F72               	movwf	oled_putString@string& (0+255),b
  6846  000A22  0E7B               	movlw	high STR_99
  6847  000A24  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6848  000A26  0E00               	movlw	0
  6849  000A28  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6850  000A2A  0E01               	movlw	1
  6851  000A2C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6852  000A2E  EC1B  F025         	call	_oled_putString	;wreg free
  6853                           
  6854                           ;MOTEapp.c: 779: oled_putString("Every:",0,2);
  6855  000A32  0E8D               	movlw	low STR_100
  6856  000A34  0100               	movlb	0	; () banked
  6857  000A36  6F72               	movwf	oled_putString@string& (0+255),b
  6858  000A38  0E7F               	movlw	high STR_100
  6859  000A3A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6860  000A3C  0E00               	movlw	0
  6861  000A3E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6862  000A40  0E02               	movlw	2
  6863  000A42  6F75               	movwf	oled_putString@start_page& (0+255),b
  6864  000A44  EC1B  F025         	call	_oled_putString	;wreg free
  6865                           
  6866                           ;MOTEapp.c: 780: oled_putString("Mins",12,2);
  6867  000A48  0EC3               	movlw	low STR_101
  6868  000A4A  0100               	movlb	0	; () banked
  6869  000A4C  6F72               	movwf	oled_putString@string& (0+255),b
  6870  000A4E  0E7F               	movlw	high STR_101
  6871  000A50  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6872  000A52  0E0C               	movlw	12
  6873  000A54  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6874  000A56  0E02               	movlw	2
  6875  000A58  6F75               	movwf	oled_putString@start_page& (0+255),b
  6876  000A5A  EC1B  F025         	call	_oled_putString	;wreg free
  6877                           
  6878                           ;MOTEapp.c: 782: switch (periodicUpValue)
  6879  000A5E  D048               	goto	l445
  6880  000A60                     
  6881                           ;MOTEapp.c: 786: oled_putString("5",7,2);
  6882                           
  6883                           ;MOTEapp.c: 785: case 0:
  6884  000A60  0E05               	movlw	low (STR_148+11)
  6885  000A62  0100               	movlb	0	; () banked
  6886  000A64  6F72               	movwf	oled_putString@string& (0+255),b
  6887  000A66  0E7E               	movlw	high (STR_148+11)
  6888  000A68  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6889  000A6A  0E07               	movlw	7
  6890  000A6C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6891  000A6E  0E02               	movlw	2
  6892  000A70  6F75               	movwf	oled_putString@start_page& (0+255),b
  6893  000A72  EC1B  F025         	call	_oled_putString	;wreg free
  6894                           
  6895                           ;MOTEapp.c: 787: break;
  6896  000A76  D051               	goto	l448
  6897  000A78                     
  6898                           ;MOTEapp.c: 789: oled_putString("10",7,2);
  6899  000A78  0EE1               	movlw	low (STR_125+1)
  6900  000A7A  0100               	movlb	0	; () banked
  6901  000A7C  6F72               	movwf	oled_putString@string& (0+255),b
  6902  000A7E  0E7F               	movlw	high (STR_125+1)
  6903  000A80  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6904  000A82  0E07               	movlw	7
  6905  000A84  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6906  000A86  0E02               	movlw	2
  6907  000A88  6F75               	movwf	oled_putString@start_page& (0+255),b
  6908  000A8A  EC1B  F025         	call	_oled_putString	;wreg free
  6909                           
  6910                           ;MOTEapp.c: 790: break;
  6911  000A8E  D045               	goto	l448
  6912  000A90                     
  6913                           ;MOTEapp.c: 792: oled_putString("15",7,2);
  6914  000A90  0EED               	movlw	low (STR_126+1)
  6915  000A92  0100               	movlb	0	; () banked
  6916  000A94  6F72               	movwf	oled_putString@string& (0+255),b
  6917  000A96  0E7F               	movlw	high (STR_126+1)
  6918  000A98  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6919  000A9A  0E07               	movlw	7
  6920  000A9C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6921  000A9E  0E02               	movlw	2
  6922  000AA0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6923  000AA2  EC1B  F025         	call	_oled_putString	;wreg free
  6924                           
  6925                           ;MOTEapp.c: 793: break;
  6926  000AA6  D039               	goto	l448
  6927  000AA8                     
  6928                           ;MOTEapp.c: 795: oled_putString("30",7,2);
  6929  000AA8  0EE5               	movlw	low (STR_127+1)
  6930  000AAA  0100               	movlb	0	; () banked
  6931  000AAC  6F72               	movwf	oled_putString@string& (0+255),b
  6932  000AAE  0E7F               	movlw	high (STR_127+1)
  6933  000AB0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6934  000AB2  0E07               	movlw	7
  6935  000AB4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6936  000AB6  0E02               	movlw	2
  6937  000AB8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6938  000ABA  EC1B  F025         	call	_oled_putString	;wreg free
  6939                           
  6940                           ;MOTEapp.c: 796: break;
  6941  000ABE  D02D               	goto	l448
  6942  000AC0                     
  6943                           ;MOTEapp.c: 798: oled_putString("60",7,2);
  6944  000AC0  0EE9               	movlw	low (STR_128+1)
  6945  000AC2  0100               	movlb	0	; () banked
  6946  000AC4  6F72               	movwf	oled_putString@string& (0+255),b
  6947  000AC6  0E7F               	movlw	high (STR_128+1)
  6948  000AC8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6949  000ACA  0E07               	movlw	7
  6950  000ACC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6951  000ACE  0E02               	movlw	2
  6952  000AD0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6953  000AD2  EC1B  F025         	call	_oled_putString	;wreg free
  6954                           
  6955                           ;MOTEapp.c: 799: break;
  6956  000AD6  D021               	goto	l448
  6957  000AD8                     
  6958                           ;MOTEapp.c: 801: oled_putString("OFF",7,2);
  6959  000AD8  0EF0               	movlw	low STR_107
  6960  000ADA  0100               	movlb	0	; () banked
  6961  000ADC  6F72               	movwf	oled_putString@string& (0+255),b
  6962  000ADE  0E7F               	movlw	high STR_107
  6963  000AE0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6964  000AE2  0E07               	movlw	7
  6965  000AE4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6966  000AE6  0E02               	movlw	2
  6967  000AE8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6968  000AEA  EC1B  F025         	call	_oled_putString	;wreg free
  6969                           
  6970                           ;MOTEapp.c: 803: }
  6971                           
  6972                           ;MOTEapp.c: 802: break;
  6973  000AEE  D015               	goto	l448
  6974  000AF0                     l445:
  6975  000AF0  0100               	movlb	0	; () banked
  6976  000AF2  51FE               	movf	_periodicUpValue& (0+255),w,b
  6977                           
  6978                           ; Switch size 1, requested type "space"
  6979                           ; Number of cases is 6, Range of values is 0 to 5
  6980                           ; switch strategies available:
  6981                           ; Name         Instructions Cycles
  6982                           ; simple_byte           19    10 (average)
  6983                           ;	Chosen strategy is simple_byte
  6984  000AF4  0A00               	xorlw	0	; case 0
  6985  000AF6  B4D8               	btfsc	status,2,c
  6986  000AF8  D7B3               	goto	l446
  6987  000AFA  0A01               	xorlw	1	; case 1
  6988  000AFC  B4D8               	btfsc	status,2,c
  6989  000AFE  D7BC               	goto	l449
  6990  000B00  0A03               	xorlw	3	; case 2
  6991  000B02  B4D8               	btfsc	status,2,c
  6992  000B04  D7C5               	goto	l450
  6993  000B06  0A01               	xorlw	1	; case 3
  6994  000B08  B4D8               	btfsc	status,2,c
  6995  000B0A  D7CE               	goto	l451
  6996  000B0C  0A07               	xorlw	7	; case 4
  6997  000B0E  B4D8               	btfsc	status,2,c
  6998  000B10  D7D7               	goto	l452
  6999  000B12  0A01               	xorlw	1	; case 5
  7000  000B14  B4D8               	btfsc	status,2,c
  7001  000B16  D7E0               	goto	l453
  7002  000B18  D7A3               	goto	l446
  7003  000B1A                     l448:
  7004                           
  7005                           ;MOTEapp.c: 804: oled_putString("(NAV)    (CNG) ",0,3);
  7006                           
  7007                           ; BSR set to: 0
  7008  000B1A  0E89               	movlw	low STR_93
  7009  000B1C  0100               	movlb	0	; () banked
  7010  000B1E  6F72               	movwf	oled_putString@string& (0+255),b
  7011  000B20  0E7C               	movlw	high STR_93
  7012  000B22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7013  000B24  0E00               	movlw	0
  7014  000B26  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7015  000B28  0E03               	movlw	3
  7016  000B2A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7017  000B2C  EC1B  F025         	call	_oled_putString	;wreg free
  7018                           
  7019                           ;MOTEapp.c: 805: runningState = runningPeriodicWakeUpLength;
  7020  000B30  0E0D               	movlw	13
  7021  000B32  0100               	movlb	0	; () banked
  7022  000B34  6FF2               	movwf	_runningState& (0+255),b
  7023                           
  7024                           ;MOTEapp.c: 806: }
  7025  000B36  0012               	return	
  7026  000B38                     l444:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;MOTEapp.c: 807: else if (selectButton)
  7030                           
  7031                           ; BSR set to: 0
  7032  000B38  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7033  000B3A  B4D8               	btfsc	status,2,c
  7034  000B3C  0012               	return	
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;MOTEapp.c: 808: {
  7038                           ;MOTEapp.c: 809: if (menuTimeout)
  7039  000B3E  51FB               	movf	_menuTimeout& (0+255),w,b
  7040  000B40  B4D8               	btfsc	status,2,c
  7041  000B42  D00D               	goto	l456
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;MOTEapp.c: 810: {
  7045                           ;MOTEapp.c: 811: menuTimeout = 0;
  7046  000B44  0E00               	movlw	0
  7047  000B46  6FFB               	movwf	_menuTimeout& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;MOTEapp.c: 812: oled_putString("    Disabled  ", 0,2);
  7051  000B48  0EE8               	movlw	low STR_92
  7052  000B4A  6F72               	movwf	oled_putString@string& (0+255),b
  7053  000B4C  0E7C               	movlw	high STR_92
  7054  000B4E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7055  000B50  0E00               	movlw	0
  7056  000B52  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7057  000B54  0E02               	movlw	2
  7058  000B56  6F75               	movwf	oled_putString@start_page& (0+255),b
  7059  000B58  EC1B  F025         	call	_oled_putString	;wreg free
  7060                           
  7061                           ;MOTEapp.c: 813: }
  7062  000B5C  0012               	return	
  7063  000B5E                     l456:
  7064                           
  7065                           ;MOTEapp.c: 814: else
  7066                           ;MOTEapp.c: 815: {
  7067                           ;MOTEapp.c: 816: menuTimeout = 1;
  7068  000B5E  0E01               	movlw	1
  7069  000B60  0100               	movlb	0	; () banked
  7070  000B62  6FFB               	movwf	_menuTimeout& (0+255),b
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;MOTEapp.c: 817: oled_putString("    Enabled   ", 0,2);
  7074  000B64  0ED9               	movlw	low STR_91
  7075  000B66  6F72               	movwf	oled_putString@string& (0+255),b
  7076  000B68  0E7C               	movlw	high STR_91
  7077  000B6A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7078  000B6C  0E00               	movlw	0
  7079  000B6E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7080  000B70  0E02               	movlw	2
  7081  000B72  6F75               	movwf	oled_putString@start_page& (0+255),b
  7082  000B74  EC1B  F025         	call	_oled_putString	;wreg free
  7083                           
  7084                           ;MOTEapp.c: 818: }
  7085                           ;MOTEapp.c: 819: }
  7086                           ;MOTEapp.c: 820: break;
  7087  000B78  0012               	return	
  7088  000B7A                     
  7089                           ;MOTEapp.c: 823: if ( (changeStates) || (selectButton) )
  7090  000B7A  0100               	movlb	0	; () banked
  7091  000B7C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7092  000B7E  A4D8               	btfss	status,2,c
  7093  000B80  D003               	goto	u9220
  7094                           
  7095                           ; BSR set to: 0
  7096  000B82  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7097  000B84  B4D8               	btfsc	status,2,c
  7098  000B86  0012               	return	
  7099  000B88                     u9220:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;MOTEapp.c: 824: {
  7103                           ;MOTEapp.c: 825: oled_clear();
  7104                           
  7105                           ; BSR set to: 0
  7106  000B88  ECFF  F02A         	call	_oled_clear	;wreg free
  7107                           
  7108                           ;MOTEapp.c: 826: oled_putString("  Sensor Data  ",0,0);
  7109  000B8C  0E79               	movlw	low STR_81
  7110  000B8E  0100               	movlb	0	; () banked
  7111  000B90  6F72               	movwf	oled_putString@string& (0+255),b
  7112  000B92  0E7C               	movlw	high STR_81
  7113  000B94  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7114  000B96  0E00               	movlw	0
  7115  000B98  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7116  000B9A  0E00               	movlw	0
  7117  000B9C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7118  000B9E  EC1B  F025         	call	_oled_putString	;wreg free
  7119                           
  7120                           ;MOTEapp.c: 827: oled_putString("    Display    ",0,1);
  7121  000BA2  0E69               	movlw	low STR_82
  7122  000BA4  0100               	movlb	0	; () banked
  7123  000BA6  6F72               	movwf	oled_putString@string& (0+255),b
  7124  000BA8  0E7C               	movlw	high STR_82
  7125  000BAA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7126  000BAC  0E00               	movlw	0
  7127  000BAE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7128  000BB0  0E01               	movlw	1
  7129  000BB2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7130  000BB4  EC1B  F025         	call	_oled_putString	;wreg free
  7131                           
  7132                           ;MOTEapp.c: 828: oled_putString("(NAV)    (SEL) ",0,3);
  7133  000BB8  0E99               	movlw	low STR_56
  7134  000BBA  0100               	movlb	0	; () banked
  7135  000BBC  6F72               	movwf	oled_putString@string& (0+255),b
  7136  000BBE  0E7C               	movlw	high STR_56
  7137  000BC0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7138  000BC2  0E00               	movlw	0
  7139  000BC4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7140  000BC6  0E03               	movlw	3
  7141  000BC8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7142  000BCA  EC1B  F025         	call	_oled_putString	;wreg free
  7143                           
  7144                           ;MOTEapp.c: 829: runningState = runningSensor;
  7145  000BCE  0E01               	movlw	1
  7146  000BD0  0100               	movlb	0	; () banked
  7147  000BD2  6FF2               	movwf	_runningState& (0+255),b
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;MOTEapp.c: 830: }
  7151                           ;MOTEapp.c: 831: break;
  7152  000BD4  0012               	return	
  7153  000BD6                     
  7154                           ; BSR set to: 0
  7155                           ;MOTEapp.c: 833: if (changeStates)
  7156                           
  7157                           ; BSR set to: 0
  7158  000BD6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7159  000BD8  B4D8               	btfsc	status,2,c
  7160  000BDA  D092               	goto	l467
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;MOTEapp.c: 834: {
  7164                           ;MOTEapp.c: 835: oled_clear();
  7165  000BDC  ECFF  F02A         	call	_oled_clear	;wreg free
  7166                           
  7167                           ;MOTEapp.c: 836: oled_putString("Select Data Rate",0,0);
  7168  000BE0  0EF3               	movlw	low STR_114
  7169  000BE2  0100               	movlb	0	; () banked
  7170  000BE4  6F72               	movwf	oled_putString@string& (0+255),b
  7171  000BE6  0E7B               	movlw	high STR_114
  7172  000BE8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7173  000BEA  0E00               	movlw	0
  7174  000BEC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7175  000BEE  0E00               	movlw	0
  7176  000BF0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7177  000BF2  EC1B  F025         	call	_oled_putString	;wreg free
  7178                           
  7179                           ;MOTEapp.c: 837: oled_putString("Data Rate: ",0,2);
  7180  000BF6  0E76               	movlw	low STR_115
  7181  000BF8  0100               	movlb	0	; () banked
  7182  000BFA  6F72               	movwf	oled_putString@string& (0+255),b
  7183  000BFC  0E7E               	movlw	high STR_115
  7184  000BFE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7185  000C00  0E00               	movlw	0
  7186  000C02  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7187  000C04  0E02               	movlw	2
  7188  000C06  6F75               	movwf	oled_putString@start_page& (0+255),b
  7189  000C08  EC1B  F025         	call	_oled_putString	;wreg free
  7190                           
  7191                           ;MOTEapp.c: 838: oled_putString("(NAV)    (CNG) ",0,3);
  7192  000C0C  0E89               	movlw	low STR_93
  7193  000C0E  0100               	movlb	0	; () banked
  7194  000C10  6F72               	movwf	oled_putString@string& (0+255),b
  7195  000C12  0E7C               	movlw	high STR_93
  7196  000C14  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7197  000C16  0E00               	movlw	0
  7198  000C18  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7199  000C1A  0E03               	movlw	3
  7200  000C1C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7201  000C1E  EC1B  F025         	call	_oled_putString	;wreg free
  7202                           
  7203                           ;MOTEapp.c: 839: runningState = runningDataRateDisplay;
  7204  000C22  0E03               	movlw	3
  7205  000C24  0100               	movlb	0	; () banked
  7206  000C26  6FF2               	movwf	_runningState& (0+255),b
  7207                           
  7208                           ;MOTEapp.c: 842: switch (dataRateValue)
  7209  000C28  D053               	goto	l464
  7210  000C2A                     
  7211                           ; BSR set to: 0
  7212                           ;MOTEapp.c: 846: oled_putString(" 0 ",10,2);
  7213                           
  7214                           ; BSR set to: 0
  7215                           
  7216                           ;MOTEapp.c: 845: case 0:
  7217                           
  7218                           ; BSR set to: 0
  7219  000C2A  0EC8               	movlw	low STR_117
  7220  000C2C  6F72               	movwf	oled_putString@string& (0+255),b
  7221  000C2E  0E7F               	movlw	high STR_117
  7222  000C30  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7223  000C32  0E0A               	movlw	10
  7224  000C34  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7225  000C36  0E02               	movlw	2
  7226  000C38  6F75               	movwf	oled_putString@start_page& (0+255),b
  7227  000C3A  EC1B  F025         	call	_oled_putString	;wreg free
  7228                           
  7229                           ;MOTEapp.c: 847: break;
  7230  000C3E  D060               	goto	l467
  7231  000C40                     
  7232                           ;MOTEapp.c: 849: oled_putString(" 1 ",10,2);
  7233  000C40  0ECC               	movlw	low STR_118
  7234  000C42  0100               	movlb	0	; () banked
  7235  000C44  6F72               	movwf	oled_putString@string& (0+255),b
  7236  000C46  0E7F               	movlw	high STR_118
  7237  000C48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7238  000C4A  0E0A               	movlw	10
  7239  000C4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7240  000C4E  0E02               	movlw	2
  7241  000C50  6F75               	movwf	oled_putString@start_page& (0+255),b
  7242  000C52  EC1B  F025         	call	_oled_putString	;wreg free
  7243                           
  7244                           ;MOTEapp.c: 850: break;
  7245  000C56  D054               	goto	l467
  7246  000C58                     
  7247                           ;MOTEapp.c: 852: oled_putString(" 2 ",10,2);
  7248  000C58  0ED0               	movlw	low STR_119
  7249  000C5A  0100               	movlb	0	; () banked
  7250  000C5C  6F72               	movwf	oled_putString@string& (0+255),b
  7251  000C5E  0E7F               	movlw	high STR_119
  7252  000C60  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7253  000C62  0E0A               	movlw	10
  7254  000C64  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7255  000C66  0E02               	movlw	2
  7256  000C68  6F75               	movwf	oled_putString@start_page& (0+255),b
  7257  000C6A  EC1B  F025         	call	_oled_putString	;wreg free
  7258                           
  7259                           ;MOTEapp.c: 853: break;
  7260  000C6E  D048               	goto	l467
  7261  000C70                     
  7262                           ;MOTEapp.c: 855: oled_putString(" 3 ",10,2);
  7263  000C70  0ED4               	movlw	low STR_120
  7264  000C72  0100               	movlb	0	; () banked
  7265  000C74  6F72               	movwf	oled_putString@string& (0+255),b
  7266  000C76  0E7F               	movlw	high STR_120
  7267  000C78  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7268  000C7A  0E0A               	movlw	10
  7269  000C7C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7270  000C7E  0E02               	movlw	2
  7271  000C80  6F75               	movwf	oled_putString@start_page& (0+255),b
  7272  000C82  EC1B  F025         	call	_oled_putString	;wreg free
  7273                           
  7274                           ;MOTEapp.c: 856: break;
  7275  000C86  D03C               	goto	l467
  7276  000C88                     
  7277                           ;MOTEapp.c: 858: oled_putString(" 4 ",10,2);
  7278  000C88  0ED8               	movlw	low STR_121
  7279  000C8A  0100               	movlb	0	; () banked
  7280  000C8C  6F72               	movwf	oled_putString@string& (0+255),b
  7281  000C8E  0E7F               	movlw	high STR_121
  7282  000C90  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7283  000C92  0E0A               	movlw	10
  7284  000C94  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7285  000C96  0E02               	movlw	2
  7286  000C98  6F75               	movwf	oled_putString@start_page& (0+255),b
  7287  000C9A  EC1B  F025         	call	_oled_putString	;wreg free
  7288                           
  7289                           ;MOTEapp.c: 859: break;
  7290  000C9E  D030               	goto	l467
  7291  000CA0                     
  7292                           ;MOTEapp.c: 861: oled_putString(" 5 ",10,2);
  7293  000CA0  0EDC               	movlw	low STR_122
  7294  000CA2  0100               	movlb	0	; () banked
  7295  000CA4  6F72               	movwf	oled_putString@string& (0+255),b
  7296  000CA6  0E7F               	movlw	high STR_122
  7297  000CA8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7298  000CAA  0E0A               	movlw	10
  7299  000CAC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7300  000CAE  0E02               	movlw	2
  7301  000CB0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7302  000CB2  EC1B  F025         	call	_oled_putString	;wreg free
  7303                           
  7304                           ;MOTEapp.c: 862: break;
  7305  000CB6  D024               	goto	l467
  7306  000CB8                     
  7307                           ;MOTEapp.c: 864: oled_putString("ADR",10,2);
  7308  000CB8  0EF4               	movlw	low STR_123
  7309  000CBA  0100               	movlb	0	; () banked
  7310  000CBC  6F72               	movwf	oled_putString@string& (0+255),b
  7311  000CBE  0E7F               	movlw	high STR_123
  7312  000CC0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7313  000CC2  0E0A               	movlw	10
  7314  000CC4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7315  000CC6  0E02               	movlw	2
  7316  000CC8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7317  000CCA  EC1B  F025         	call	_oled_putString	;wreg free
  7318                           
  7319                           ;MOTEapp.c: 866: }
  7320                           
  7321                           ;MOTEapp.c: 865: break;
  7322  000CCE  D018               	goto	l467
  7323  000CD0                     l464:
  7324  000CD0  0100               	movlb	0	; () banked
  7325  000CD2  51FC               	movf	_dataRateValue& (0+255),w,b
  7326                           
  7327                           ; Switch size 1, requested type "space"
  7328                           ; Number of cases is 7, Range of values is 0 to 6
  7329                           ; switch strategies available:
  7330                           ; Name         Instructions Cycles
  7331                           ; simple_byte           22    12 (average)
  7332                           ;	Chosen strategy is simple_byte
  7333  000CD4  0A00               	xorlw	0	; case 0
  7334  000CD6  B4D8               	btfsc	status,2,c
  7335  000CD8  D7A8               	goto	l465
  7336  000CDA  0A01               	xorlw	1	; case 1
  7337  000CDC  B4D8               	btfsc	status,2,c
  7338  000CDE  D7B0               	goto	l468
  7339  000CE0  0A03               	xorlw	3	; case 2
  7340  000CE2  B4D8               	btfsc	status,2,c
  7341  000CE4  D7B9               	goto	l469
  7342  000CE6  0A01               	xorlw	1	; case 3
  7343  000CE8  B4D8               	btfsc	status,2,c
  7344  000CEA  D7C2               	goto	l470
  7345  000CEC  0A07               	xorlw	7	; case 4
  7346  000CEE  B4D8               	btfsc	status,2,c
  7347  000CF0  D7CB               	goto	l471
  7348  000CF2  0A01               	xorlw	1	; case 5
  7349  000CF4  B4D8               	btfsc	status,2,c
  7350  000CF6  D7D4               	goto	l472
  7351  000CF8  0A03               	xorlw	3	; case 6
  7352  000CFA  B4D8               	btfsc	status,2,c
  7353  000CFC  D7DD               	goto	l473
  7354  000CFE  D795               	goto	l465
  7355  000D00                     l467:
  7356                           
  7357                           ;MOTEapp.c: 867: }
  7358                           ;MOTEapp.c: 868: if (selectButton)
  7359                           
  7360                           ; BSR set to: 0
  7361                           
  7362                           ; BSR set to: 0
  7363  000D00  0100               	movlb	0	; () banked
  7364  000D02  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7365  000D04  B4D8               	btfsc	status,2,c
  7366  000D06  0012               	return	
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;MOTEapp.c: 869: {
  7370                           ;MOTEapp.c: 870: if (periodicUpValue < 5)
  7371  000D08  0E05               	movlw	5
  7372  000D0A  61FE               	cpfslt	_periodicUpValue& (0+255),b
  7373  000D0C  D002               	goto	l475
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;MOTEapp.c: 871: {
  7377                           ;MOTEapp.c: 872: periodicUpValue++;
  7378  000D0E  2BFE               	incf	_periodicUpValue& (0+255),f,b
  7379                           
  7380                           ;MOTEapp.c: 873: } else {
  7381  000D10  D054               	goto	l477
  7382  000D12                     l475:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;MOTEapp.c: 874: periodicUpValue = 0;
  7386                           
  7387                           ; BSR set to: 0
  7388  000D12  0E00               	movlw	0
  7389  000D14  6FFE               	movwf	_periodicUpValue& (0+255),b
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;MOTEapp.c: 875: }
  7393                           ;MOTEapp.c: 877: switch (periodicUpValue)
  7394  000D16  D051               	goto	l477
  7395  000D18                     
  7396                           ; BSR set to: 0
  7397                           ;MOTEapp.c: 881: periodicTimerValue = 9;
  7398                           
  7399                           ; BSR set to: 0
  7400                           
  7401                           ;MOTEapp.c: 880: case 0:
  7402                           
  7403                           ; BSR set to: 0
  7404  000D18  0E09               	movlw	9
  7405  000D1A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;MOTEapp.c: 882: oled_putString(" 5 ",7,2);
  7409  000D1C  0EDC               	movlw	low STR_122
  7410  000D1E  6F72               	movwf	oled_putString@string& (0+255),b
  7411  000D20  0E7F               	movlw	high STR_122
  7412  000D22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7413  000D24  0E07               	movlw	7
  7414  000D26  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7415  000D28  0E02               	movlw	2
  7416  000D2A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7417  000D2C  EC1B  F025         	call	_oled_putString	;wreg free
  7418                           
  7419                           ;MOTEapp.c: 883: break;
  7420  000D30  0012               	return	
  7421  000D32                     
  7422                           ;MOTEapp.c: 885: periodicTimerValue = 18;
  7423  000D32  0E12               	movlw	18
  7424  000D34  0100               	movlb	0	; () banked
  7425  000D36  6FFD               	movwf	_periodicTimerValue& (0+255),b
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;MOTEapp.c: 886: oled_putString(" 10",7,2);
  7429  000D38  0EE0               	movlw	low STR_125
  7430  000D3A  6F72               	movwf	oled_putString@string& (0+255),b
  7431  000D3C  0E7F               	movlw	high STR_125
  7432  000D3E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7433  000D40  0E07               	movlw	7
  7434  000D42  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7435  000D44  0E02               	movlw	2
  7436  000D46  6F75               	movwf	oled_putString@start_page& (0+255),b
  7437  000D48  EC1B  F025         	call	_oled_putString	;wreg free
  7438                           
  7439                           ;MOTEapp.c: 887: break;
  7440  000D4C  0012               	return	
  7441  000D4E                     
  7442                           ;MOTEapp.c: 889: periodicTimerValue = 27;
  7443  000D4E  0E1B               	movlw	27
  7444  000D50  0100               	movlb	0	; () banked
  7445  000D52  6FFD               	movwf	_periodicTimerValue& (0+255),b
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;MOTEapp.c: 890: oled_putString(" 15",7,2);
  7449  000D54  0EEC               	movlw	low STR_126
  7450  000D56  6F72               	movwf	oled_putString@string& (0+255),b
  7451  000D58  0E7F               	movlw	high STR_126
  7452  000D5A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7453  000D5C  0E07               	movlw	7
  7454  000D5E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7455  000D60  0E02               	movlw	2
  7456  000D62  6F75               	movwf	oled_putString@start_page& (0+255),b
  7457  000D64  EC1B  F025         	call	_oled_putString	;wreg free
  7458                           
  7459                           ;MOTEapp.c: 891: break;
  7460  000D68  0012               	return	
  7461  000D6A                     
  7462                           ;MOTEapp.c: 893: periodicTimerValue = 54;
  7463  000D6A  0E36               	movlw	54
  7464  000D6C  0100               	movlb	0	; () banked
  7465  000D6E  6FFD               	movwf	_periodicTimerValue& (0+255),b
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;MOTEapp.c: 894: oled_putString(" 30",7,2);
  7469  000D70  0EE4               	movlw	low STR_127
  7470  000D72  6F72               	movwf	oled_putString@string& (0+255),b
  7471  000D74  0E7F               	movlw	high STR_127
  7472  000D76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7473  000D78  0E07               	movlw	7
  7474  000D7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7475  000D7C  0E02               	movlw	2
  7476  000D7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  7477  000D80  EC1B  F025         	call	_oled_putString	;wreg free
  7478                           
  7479                           ;MOTEapp.c: 895: break;
  7480  000D84  0012               	return	
  7481  000D86                     
  7482                           ;MOTEapp.c: 897: periodicTimerValue = 108;
  7483  000D86  0E6C               	movlw	108
  7484  000D88  0100               	movlb	0	; () banked
  7485  000D8A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;MOTEapp.c: 898: oled_putString(" 60",7,2);
  7489  000D8C  0EE8               	movlw	low STR_128
  7490  000D8E  6F72               	movwf	oled_putString@string& (0+255),b
  7491  000D90  0E7F               	movlw	high STR_128
  7492  000D92  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7493  000D94  0E07               	movlw	7
  7494  000D96  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7495  000D98  0E02               	movlw	2
  7496  000D9A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7497  000D9C  EC1B  F025         	call	_oled_putString	;wreg free
  7498                           
  7499                           ;MOTEapp.c: 899: break;
  7500  000DA0  0012               	return	
  7501  000DA2                     l485:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;MOTEapp.c: 901: periodicTimerValue = 255;
  7505  000DA2  69FD               	setf	_periodicTimerValue& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;MOTEapp.c: 902: oled_putString("OFF",7,2);
  7509  000DA4  0EF0               	movlw	low STR_107
  7510  000DA6  6F72               	movwf	oled_putString@string& (0+255),b
  7511  000DA8  0E7F               	movlw	high STR_107
  7512  000DAA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7513  000DAC  0E07               	movlw	7
  7514  000DAE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7515  000DB0  0E02               	movlw	2
  7516  000DB2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7517  000DB4  EC1B  F025         	call	_oled_putString	;wreg free
  7518                           
  7519                           ;MOTEapp.c: 904: }
  7520                           
  7521                           ;MOTEapp.c: 903: break;
  7522  000DB8  0012               	return	
  7523  000DBA                     l477:
  7524  000DBA  0100               	movlb	0	; () banked
  7525  000DBC  51FE               	movf	_periodicUpValue& (0+255),w,b
  7526                           
  7527                           ; Switch size 1, requested type "space"
  7528                           ; Number of cases is 6, Range of values is 0 to 5
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte           19    10 (average)
  7532                           ;	Chosen strategy is simple_byte
  7533  000DBE  0A00               	xorlw	0	; case 0
  7534  000DC0  B4D8               	btfsc	status,2,c
  7535  000DC2  D7AA               	goto	l478
  7536  000DC4  0A01               	xorlw	1	; case 1
  7537  000DC6  B4D8               	btfsc	status,2,c
  7538  000DC8  D7B4               	goto	l481
  7539  000DCA  0A03               	xorlw	3	; case 2
  7540  000DCC  B4D8               	btfsc	status,2,c
  7541  000DCE  D7BF               	goto	l482
  7542  000DD0  0A01               	xorlw	1	; case 3
  7543  000DD2  B4D8               	btfsc	status,2,c
  7544  000DD4  D7CA               	goto	l483
  7545  000DD6  0A07               	xorlw	7	; case 4
  7546  000DD8  B4D8               	btfsc	status,2,c
  7547  000DDA  D7D5               	goto	l484
  7548  000DDC  0A01               	xorlw	1	; case 5
  7549  000DDE  B4D8               	btfsc	status,2,c
  7550  000DE0  D7E0               	goto	l485
  7551  000DE2  D79A               	goto	l478
  7552  000DE4                     
  7553                           ; BSR set to: 0
  7554                           ;MOTEapp.c: 908: if (changeStates)
  7555                           
  7556                           ; BSR set to: 0
  7557  000DE4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7558  000DE6  B4D8               	btfsc	status,2,c
  7559  000DE8  D01E               	goto	l487
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;MOTEapp.c: 909: {
  7563                           ;MOTEapp.c: 911: MOTEapp_SetDataRateSetting(dataRateValue);
  7564  000DEA  51FC               	movf	_dataRateValue& (0+255),w,b
  7565  000DEC  EC32  F011         	call	_MOTEapp_SetDataRateSetting
  7566                           
  7567                           ;MOTEapp.c: 913: oled_clear();
  7568  000DF0  ECFF  F02A         	call	_oled_clear	;wreg free
  7569                           
  7570                           ;MOTEapp.c: 914: oled_putString("Enter Sleep Mode",0,0);
  7571  000DF4  0ED1               	movlw	low STR_130
  7572  000DF6  0100               	movlb	0	; () banked
  7573  000DF8  6F72               	movwf	oled_putString@string& (0+255),b
  7574  000DFA  0E7B               	movlw	high STR_130
  7575  000DFC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7576  000DFE  0E00               	movlw	0
  7577  000E00  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7578  000E02  0E00               	movlw	0
  7579  000E04  6F75               	movwf	oled_putString@start_page& (0+255),b
  7580  000E06  EC1B  F025         	call	_oled_putString	;wreg free
  7581                           
  7582                           ;MOTEapp.c: 915: oled_putString("(NAV)    (SLP) ",0,3);
  7583  000E0A  0EA9               	movlw	low STR_131
  7584  000E0C  0100               	movlb	0	; () banked
  7585  000E0E  6F72               	movwf	oled_putString@string& (0+255),b
  7586  000E10  0E7C               	movlw	high STR_131
  7587  000E12  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7588  000E14  0E00               	movlw	0
  7589  000E16  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7590  000E18  0E03               	movlw	3
  7591  000E1A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7592  000E1C  EC1B  F025         	call	_oled_putString	;wreg free
  7593                           
  7594                           ;MOTEapp.c: 916: runningState = runningSleep;
  7595  000E20  0E0F               	movlw	15
  7596  000E22  0100               	movlb	0	; () banked
  7597  000E24  6FF2               	movwf	_runningState& (0+255),b
  7598  000E26                     l487:
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;MOTEapp.c: 917: }
  7602                           ;MOTEapp.c: 918: if (selectButton)
  7603                           
  7604                           ; BSR set to: 0
  7605  000E26  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7606  000E28  B4D8               	btfsc	status,2,c
  7607  000E2A  0012               	return	
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;MOTEapp.c: 919: {
  7611                           ;MOTEapp.c: 920: if (dataRateValue < 6)
  7612  000E2C  0E06               	movlw	6
  7613  000E2E  61FC               	cpfslt	_dataRateValue& (0+255),b
  7614  000E30  D00A               	goto	l489
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;MOTEapp.c: 921: {
  7618                           ;MOTEapp.c: 922: if ((rnModule == rn2903) && (dataRateValue > 3))
  7619  000E32  05F9               	decf	_rnModule& (0+255),w,b
  7620  000E34  A4D8               	btfss	status,2,c
  7621  000E36  D005               	goto	l490
  7622                           
  7623                           ; BSR set to: 0
  7624  000E38  0E03               	movlw	3
  7625  000E3A  65FC               	cpfsgt	_dataRateValue& (0+255),b
  7626  000E3C  D002               	goto	l490
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;MOTEapp.c: 923: dataRateValue = 6;
  7630  000E3E  0E06               	movlw	6
  7631  000E40  D003               	goto	L5
  7632  000E42                     l490:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;MOTEapp.c: 924: else
  7636                           ;MOTEapp.c: 925: dataRateValue++;
  7637                           
  7638                           ; BSR set to: 0
  7639  000E42  2BFC               	incf	_dataRateValue& (0+255),f,b
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;MOTEapp.c: 926: }
  7643  000E44  D056               	goto	l493
  7644  000E46                     l489:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;MOTEapp.c: 927: else {
  7648                           ;MOTEapp.c: 928: dataRateValue = 0;
  7649                           
  7650                           ; BSR set to: 0
  7651  000E46  0E00               	movlw	0
  7652  000E48                     L5:
  7653  000E48  6FFC               	movwf	_dataRateValue& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;MOTEapp.c: 929: }
  7657                           ;MOTEapp.c: 931: switch (dataRateValue)
  7658  000E4A  D053               	goto	l493
  7659  000E4C                     
  7660                           ; BSR set to: 0
  7661                           ;MOTEapp.c: 935: oled_putString(" 0 ",10,2);
  7662                           
  7663                           ; BSR set to: 0
  7664                           
  7665                           ;MOTEapp.c: 934: case 0:
  7666                           
  7667                           ; BSR set to: 0
  7668  000E4C  0EC8               	movlw	low STR_117
  7669  000E4E  6F72               	movwf	oled_putString@string& (0+255),b
  7670  000E50  0E7F               	movlw	high STR_117
  7671  000E52  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7672  000E54  0E0A               	movlw	10
  7673  000E56  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7674  000E58  0E02               	movlw	2
  7675  000E5A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7676  000E5C  EC1B  F025         	call	_oled_putString	;wreg free
  7677                           
  7678                           ;MOTEapp.c: 936: break;
  7679  000E60  0012               	return	
  7680  000E62                     
  7681                           ;MOTEapp.c: 938: oled_putString(" 1 ",10,2);
  7682  000E62  0ECC               	movlw	low STR_118
  7683  000E64  0100               	movlb	0	; () banked
  7684  000E66  6F72               	movwf	oled_putString@string& (0+255),b
  7685  000E68  0E7F               	movlw	high STR_118
  7686  000E6A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7687  000E6C  0E0A               	movlw	10
  7688  000E6E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7689  000E70  0E02               	movlw	2
  7690  000E72  6F75               	movwf	oled_putString@start_page& (0+255),b
  7691  000E74  EC1B  F025         	call	_oled_putString	;wreg free
  7692                           
  7693                           ;MOTEapp.c: 939: break;
  7694  000E78  0012               	return	
  7695  000E7A                     
  7696                           ;MOTEapp.c: 941: oled_putString(" 2 ",10,2);
  7697  000E7A  0ED0               	movlw	low STR_119
  7698  000E7C  0100               	movlb	0	; () banked
  7699  000E7E  6F72               	movwf	oled_putString@string& (0+255),b
  7700  000E80  0E7F               	movlw	high STR_119
  7701  000E82  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7702  000E84  0E0A               	movlw	10
  7703  000E86  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7704  000E88  0E02               	movlw	2
  7705  000E8A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7706  000E8C  EC1B  F025         	call	_oled_putString	;wreg free
  7707                           
  7708                           ;MOTEapp.c: 942: break;
  7709  000E90  0012               	return	
  7710  000E92                     
  7711                           ;MOTEapp.c: 944: oled_putString(" 3 ",10,2);
  7712  000E92  0ED4               	movlw	low STR_120
  7713  000E94  0100               	movlb	0	; () banked
  7714  000E96  6F72               	movwf	oled_putString@string& (0+255),b
  7715  000E98  0E7F               	movlw	high STR_120
  7716  000E9A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7717  000E9C  0E0A               	movlw	10
  7718  000E9E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7719  000EA0  0E02               	movlw	2
  7720  000EA2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7721  000EA4  EC1B  F025         	call	_oled_putString	;wreg free
  7722                           
  7723                           ;MOTEapp.c: 945: break;
  7724  000EA8  0012               	return	
  7725  000EAA                     
  7726                           ;MOTEapp.c: 947: oled_putString(" 4 ",10,2);
  7727  000EAA  0ED8               	movlw	low STR_121
  7728  000EAC  0100               	movlb	0	; () banked
  7729  000EAE  6F72               	movwf	oled_putString@string& (0+255),b
  7730  000EB0  0E7F               	movlw	high STR_121
  7731  000EB2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7732  000EB4  0E0A               	movlw	10
  7733  000EB6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7734  000EB8  0E02               	movlw	2
  7735  000EBA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7736  000EBC  EC1B  F025         	call	_oled_putString	;wreg free
  7737                           
  7738                           ;MOTEapp.c: 948: break;
  7739  000EC0  0012               	return	
  7740  000EC2                     
  7741                           ;MOTEapp.c: 950: oled_putString(" 5 ",10,2);
  7742  000EC2  0EDC               	movlw	low STR_122
  7743  000EC4  0100               	movlb	0	; () banked
  7744  000EC6  6F72               	movwf	oled_putString@string& (0+255),b
  7745  000EC8  0E7F               	movlw	high STR_122
  7746  000ECA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7747  000ECC  0E0A               	movlw	10
  7748  000ECE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7749  000ED0  0E02               	movlw	2
  7750  000ED2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7751  000ED4  EC1B  F025         	call	_oled_putString	;wreg free
  7752                           
  7753                           ;MOTEapp.c: 951: break;
  7754  000ED8  0012               	return	
  7755  000EDA                     
  7756                           ;MOTEapp.c: 953: oled_putString("ADR",10,2);
  7757  000EDA  0EF4               	movlw	low STR_123
  7758  000EDC  0100               	movlb	0	; () banked
  7759  000EDE  6F72               	movwf	oled_putString@string& (0+255),b
  7760  000EE0  0E7F               	movlw	high STR_123
  7761  000EE2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7762  000EE4  0E0A               	movlw	10
  7763  000EE6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7764  000EE8  0E02               	movlw	2
  7765  000EEA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7766  000EEC  EC1B  F025         	call	_oled_putString	;wreg free
  7767                           
  7768                           ;MOTEapp.c: 955: }
  7769                           
  7770                           ;MOTEapp.c: 954: break;
  7771  000EF0  0012               	return	
  7772  000EF2                     l493:
  7773  000EF2  0100               	movlb	0	; () banked
  7774  000EF4  51FC               	movf	_dataRateValue& (0+255),w,b
  7775                           
  7776                           ; Switch size 1, requested type "space"
  7777                           ; Number of cases is 7, Range of values is 0 to 6
  7778                           ; switch strategies available:
  7779                           ; Name         Instructions Cycles
  7780                           ; simple_byte           22    12 (average)
  7781                           ;	Chosen strategy is simple_byte
  7782  000EF6  0A00               	xorlw	0	; case 0
  7783  000EF8  B4D8               	btfsc	status,2,c
  7784  000EFA  D7A8               	goto	l494
  7785  000EFC  0A01               	xorlw	1	; case 1
  7786  000EFE  B4D8               	btfsc	status,2,c
  7787  000F00  D7B0               	goto	l497
  7788  000F02  0A03               	xorlw	3	; case 2
  7789  000F04  B4D8               	btfsc	status,2,c
  7790  000F06  D7B9               	goto	l498
  7791  000F08  0A01               	xorlw	1	; case 3
  7792  000F0A  B4D8               	btfsc	status,2,c
  7793  000F0C  D7C2               	goto	l499
  7794  000F0E  0A07               	xorlw	7	; case 4
  7795  000F10  B4D8               	btfsc	status,2,c
  7796  000F12  D7CB               	goto	l500
  7797  000F14  0A01               	xorlw	1	; case 5
  7798  000F16  B4D8               	btfsc	status,2,c
  7799  000F18  D7D4               	goto	l501
  7800  000F1A  0A03               	xorlw	3	; case 6
  7801  000F1C  B4D8               	btfsc	status,2,c
  7802  000F1E  D7DD               	goto	l502
  7803  000F20  D795               	goto	l494
  7804  000F22                     
  7805                           ; BSR set to: 0
  7806                           ;MOTEapp.c: 959: if (selectButton)
  7807                           
  7808                           ; BSR set to: 0
  7809  000F22  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7810  000F24  B4D8               	btfsc	status,2,c
  7811  000F26  D00C               	goto	l506
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;MOTEapp.c: 960: {
  7815                           ;MOTEapp.c: 961: if( moteApp_GoToSleep() )
  7816  000F28  ECEC  F019         	call	_moteApp_GoToSleep	;wreg free
  7817  000F2C  0900               	iorlw	0
  7818  000F2E  B4D8               	btfsc	status,2,c
  7819  000F30  D004               	goto	l505
  7820                           
  7821                           ;MOTEapp.c: 962: {
  7822                           ;MOTEapp.c: 963: changeStates = 1;
  7823  000F32  0E01               	movlw	1
  7824  000F34  0100               	movlb	0	; () banked
  7825  000F36  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  7826                           
  7827                           ;MOTEapp.c: 964: }
  7828  000F38  D003               	goto	l506
  7829  000F3A                     l505:
  7830                           
  7831                           ;MOTEapp.c: 965: else
  7832                           ;MOTEapp.c: 966: {
  7833                           ;MOTEapp.c: 967: secTicker = 10 - 1;
  7834                           
  7835                           ; BSR set to: 0
  7836  000F3A  0E09               	movlw	9
  7837  000F3C  0100               	movlb	0	; () banked
  7838  000F3E  6FEF               	movwf	_secTicker& (0+255),b
  7839  000F40                     l506:
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;MOTEapp.c: 968: }
  7843                           ;MOTEapp.c: 969: }
  7844                           ;MOTEapp.c: 970: if (changeStates)
  7845                           
  7846                           ; BSR set to: 0
  7847  000F40  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7848  000F42  B4D8               	btfsc	status,2,c
  7849  000F44  0012               	return	
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;MOTEapp.c: 971: {
  7853                           ;MOTEapp.c: 972: oled_clear();
  7854  000F46  ECFF  F02A         	call	_oled_clear	;wreg free
  7855                           
  7856                           ;MOTEapp.c: 973: oled_putString("  Issue Uplink  ",0,0);
  7857  000F4A  0E27               	movlw	low STR_54
  7858  000F4C  0100               	movlb	0	; () banked
  7859  000F4E  6F72               	movwf	oled_putString@string& (0+255),b
  7860  000F50  0E7B               	movlw	high STR_54
  7861  000F52  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7862  000F54  0E00               	movlw	0
  7863  000F56  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7864  000F58  0E00               	movlw	0
  7865  000F5A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7866  000F5C  EC1B  F025         	call	_oled_putString	;wreg free
  7867                           
  7868                           ;MOTEapp.c: 974: oled_putString(" LoRaWAN Packet ",0,1);
  7869  000F60  0E8D               	movlw	low STR_55
  7870  000F62  0100               	movlb	0	; () banked
  7871  000F64  6F72               	movwf	oled_putString@string& (0+255),b
  7872  000F66  0E7B               	movlw	high STR_55
  7873  000F68  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7874  000F6A  0E00               	movlw	0
  7875  000F6C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7876  000F6E  0E01               	movlw	1
  7877  000F70  6F75               	movwf	oled_putString@start_page& (0+255),b
  7878  000F72  EC1B  F025         	call	_oled_putString	;wreg free
  7879                           
  7880                           ;MOTEapp.c: 975: oled_putString("(NAV)    (SEL) ",0,3);
  7881  000F76  0E99               	movlw	low STR_56
  7882  000F78  0100               	movlb	0	; () banked
  7883  000F7A  6F72               	movwf	oled_putString@string& (0+255),b
  7884  000F7C  0E7C               	movlw	high STR_56
  7885  000F7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7886  000F80  0E00               	movlw	0
  7887  000F82  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7888  000F84  0E03               	movlw	3
  7889  000F86  6F75               	movwf	oled_putString@start_page& (0+255),b
  7890  000F88  EC1B  F025         	call	_oled_putString	;wreg free
  7891                           
  7892                           ;MOTEapp.c: 976: runningState = runningUplink;
  7893  000F8C  0E06               	movlw	6
  7894  000F8E  0100               	movlb	0	; () banked
  7895  000F90  6FF2               	movwf	_runningState& (0+255),b
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;MOTEapp.c: 979: }
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;MOTEapp.c: 977: }
  7902                           ;MOTEapp.c: 978: break;
  7903  000F92  0012               	return	
  7904  000F94                     l387:
  7905                           
  7906                           ; BSR set to: 0
  7907                           
  7908                           ; BSR set to: 0
  7909  000F94  51F2               	movf	_runningState& (0+255),w,b
  7910                           
  7911                           ; Switch size 1, requested type "space"
  7912                           ; Number of cases is 12, Range of values is 0 to 15
  7913                           ; switch strategies available:
  7914                           ; Name         Instructions Cycles
  7915                           ; simple_byte           37    19 (average)
  7916                           ;	Chosen strategy is simple_byte
  7917  000F96  0A00               	xorlw	0	; case 0
  7918  000F98  B4D8               	btfsc	status,2,c
  7919  000F9A  EF58  F001         	goto	l393
  7920  000F9E  0A01               	xorlw	1	; case 1
  7921  000FA0  B4D8               	btfsc	status,2,c
  7922  000FA2  D4BC               	goto	l437
  7923  000FA4  0A03               	xorlw	3	; case 2
  7924  000FA6  B4D8               	btfsc	status,2,c
  7925  000FA8  D5E8               	goto	l458
  7926  000FAA  0A01               	xorlw	1	; case 3
  7927  000FAC  B4D8               	btfsc	status,2,c
  7928  000FAE  D71A               	goto	l486
  7929  000FB0  0A05               	xorlw	5	; case 6
  7930  000FB2  B4D8               	btfsc	status,2,c
  7931  000FB4  EF86  F001         	goto	l397
  7932  000FB8  0A01               	xorlw	1	; case 7
  7933  000FBA  B4D8               	btfsc	status,2,c
  7934  000FBC  EF4C  F002         	goto	l404
  7935  000FC0  0A0F               	xorlw	15	; case 8
  7936  000FC2  B4D8               	btfsc	status,2,c
  7937  000FC4  EFB7  F002         	goto	l410
  7938  000FC8  0A02               	xorlw	2	; case 10
  7939  000FCA  B4D8               	btfsc	status,2,c
  7940  000FCC  D404               	goto	l429
  7941  000FCE  0A01               	xorlw	1	; case 11
  7942  000FD0  B4D8               	btfsc	status,2,c
  7943  000FD2  D477               	goto	l433
  7944  000FD4  0A07               	xorlw	7	; case 12
  7945  000FD6  B4D8               	btfsc	status,2,c
  7946  000FD8  D511               	goto	l443
  7947  000FDA  0A01               	xorlw	1	; case 13
  7948  000FDC  B4D8               	btfsc	status,2,c
  7949  000FDE  D5FB               	goto	l462
  7950  000FE0  0A02               	xorlw	2	; case 15
  7951  000FE2  B4D8               	btfsc	status,2,c
  7952  000FE4  D79E               	goto	l503
  7953  000FE6  EF57  F001         	goto	l388
  7954  000FEA                     __end_of_moteRunningProcess:
  7955                           	opt stack 0
  7956                           tblptru	equ	0xFF8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           tablat	equ	0xFF5
  7960                           prodh	equ	0xFF4
  7961                           prodl	equ	0xFF3
  7962                           intcon	equ	0xFF2
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           indf1	equ	0xFE7
  7966                           postdec1	equ	0xFE5
  7967                           fsr1h	equ	0xFE2
  7968                           fsr1l	equ	0xFE1
  7969                           indf2	equ	0xFDF
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function _sendDataCommand *****************
  7975 ;; Defined at:
  7976 ;;		line 1127 in file "../Includes/Board/MOTEapp.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  7979 ;;		 -> STR_64(12), STR_63(14), STR_53(14), 
  7980 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  7981 ;;		 -> dataBuffer(16), 
  7982 ;;  dataLength      1    5[BANK0 ] unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  byteCount       1    8[BANK0 ] unsigned char 
  7985 ;;  byteCount       1    7[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7995 ;;      Params:         0       5       0       0       0       0       0       0       0
  7996 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7997 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7998 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7999 ;;Total ram usage:        8 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   13
  8002 ;; This function calls:
  8003 ;;		_EUSART_Write
  8004 ;;		_EndLine
  8005 ;;		_hexToStr
  8006 ;; This function is called by:
  8007 ;;		_moteRunningProcess
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text3
  8012  003A6E                     __ptext3:
  8013                           	opt stack 0
  8014  003A6E                     _sendDataCommand:
  8015                           	opt stack 15
  8016                           
  8017                           ;MOTEapp.c: 1130: while (*string)
  8018                           
  8019                           ;incstack = 0
  8020  003A6E  D00B               	goto	l563
  8021  003A70                     
  8022                           ;MOTEapp.c: 1131: {
  8023                           ;MOTEapp.c: 1132: EUSART_Write(*string++);
  8024  003A70  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  8025  003A74  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  8026  003A78                     	if	0	;tblptru may be non-zero
  8027  003A78                     	endif
  8028  003A78                     	if	0	;tblptru may be non-zero
  8029  003A78                     	endif
  8030  003A78  0008               	tblrd		*
  8031  003A7A  50F5               	movf	tablat,w,c
  8032  003A7C  EC6D  F028         	call	_EUSART_Write
  8033  003A80  0100               	movlb	0	; () banked
  8034  003A82  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  8035  003A84  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  8036  003A86                     l563:
  8037                           
  8038                           ; BSR set to: 0
  8039  003A86  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  8040  003A8A  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  8041  003A8E                     	if	0	;tblptru may be non-zero
  8042  003A8E                     	endif
  8043  003A8E                     	if	0	;tblptru may be non-zero
  8044  003A8E                     	endif
  8045  003A8E  0008               	tblrd		*
  8046  003A90  50F5               	movf	tablat,w,c
  8047  003A92  0900               	iorlw	0
  8048  003A94  A4D8               	btfss	status,2,c
  8049  003A96  D7EC               	goto	l564
  8050                           
  8051                           ;MOTEapp.c: 1133: }
  8052                           ;MOTEapp.c: 1135: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  8053  003A98  0E00               	movlw	0
  8054  003A9A  0100               	movlb	0	; () banked
  8055  003A9C  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  8056  003A9E                     l9254:
  8057                           
  8058                           ; BSR set to: 0
  8059  003A9E  0E02               	movlw	2
  8060  003AA0  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  8061  003AA2  D001               	goto	l566
  8062  003AA4  D00E               	goto	u7940
  8063  003AA6                     l566:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;MOTEapp.c: 1136: {
  8067                           ;MOTEapp.c: 1137: EUSART_Write(appData[byteCount]);
  8068                           
  8069                           ; BSR set to: 0
  8070  003AA6  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  8071  003AA8  0D01               	mullw	1
  8072  003AAA  50F3               	movf	prodl,w,c
  8073  003AAC  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  8074  003AAE  6ED9               	movwf	fsr2l,c
  8075  003AB0  50F4               	movf	prodh,w,c
  8076  003AB2  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8077  003AB4  6EDA               	movwf	fsr2h,c
  8078  003AB6  50DF               	movf	indf2,w,c
  8079  003AB8  EC6D  F028         	call	_EUSART_Write
  8080  003ABC  0100               	movlb	0	; () banked
  8081  003ABE  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  8082  003AC0  D7EE               	goto	l9254
  8083  003AC2                     u7940:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;MOTEapp.c: 1138: }
  8087                           ;MOTEapp.c: 1140: EUSART_Write(appData[3]);
  8088                           
  8089                           ; BSR set to: 0
  8090  003AC2  EE20 F003          	lfsr	2,3
  8091  003AC6  5163               	movf	sendDataCommand@appData& (0+255),w,b
  8092  003AC8  26D9               	addwf	fsr2l,f,c
  8093  003ACA  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  8094  003ACC  22DA               	addwfc	fsr2h,f,c
  8095  003ACE  50DF               	movf	indf2,w,c
  8096  003AD0  EC6D  F028         	call	_EUSART_Write
  8097                           
  8098                           ;MOTEapp.c: 1142: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  8099  003AD4  0E04               	movlw	4
  8100  003AD6  0100               	movlb	0	; () banked
  8101  003AD8  6F68               	movwf	sendDataCommand@byteCount_1477& (0+255),b
  8102  003ADA  D021               	goto	l568
  8103  003ADC                     
  8104                           ; BSR set to: 0
  8105                           ;MOTEapp.c: 1143: {
  8106                           ;MOTEapp.c: 1144: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  8107                           
  8108                           ; BSR set to: 0
  8109  003ADC  5168               	movf	sendDataCommand@byteCount_1477& (0+255),w,b
  8110  003ADE  0D01               	mullw	1
  8111  003AE0  50F3               	movf	prodl,w,c
  8112  003AE2  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  8113  003AE4  6ED9               	movwf	fsr2l,c
  8114  003AE6  50F4               	movf	prodh,w,c
  8115  003AE8  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8116  003AEA  6EDA               	movwf	fsr2h,c
  8117  003AEC  50DF               	movf	indf2,w,c
  8118  003AEE  6F66               	movwf	??_sendDataCommand& (0+255),b
  8119  003AF0  3966               	swapf	??_sendDataCommand& (0+255),w,b
  8120  003AF2  0B0F               	andlw	15
  8121  003AF4  ECFA  F029         	call	_hexToStr
  8122  003AF8  EC6D  F028         	call	_EUSART_Write
  8123                           
  8124                           ;MOTEapp.c: 1145: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  8125  003AFC  0100               	movlb	0	; () banked
  8126  003AFE  5168               	movf	sendDataCommand@byteCount_1477& (0+255),w,b
  8127  003B00  0D01               	mullw	1
  8128  003B02  50F3               	movf	prodl,w,c
  8129  003B04  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  8130  003B06  6ED9               	movwf	fsr2l,c
  8131  003B08  50F4               	movf	prodh,w,c
  8132  003B0A  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  8133  003B0C  6EDA               	movwf	fsr2h,c
  8134  003B0E  50DF               	movf	indf2,w,c
  8135  003B10  0B0F               	andlw	15
  8136  003B12  ECFA  F029         	call	_hexToStr
  8137  003B16  EC6D  F028         	call	_EUSART_Write
  8138  003B1A  0100               	movlb	0	; () banked
  8139  003B1C  2B68               	incf	sendDataCommand@byteCount_1477& (0+255),f,b
  8140  003B1E                     l568:
  8141                           
  8142                           ; BSR set to: 0
  8143                           
  8144                           ; BSR set to: 0
  8145  003B1E  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  8146  003B20  5D68               	subwf	sendDataCommand@byteCount_1477& (0+255),w,b
  8147  003B22  A0D8               	btfss	status,0,c
  8148  003B24  D7DB               	goto	l569
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;MOTEapp.c: 1146: }
  8152                           ;MOTEapp.c: 1147: EndLine();
  8153                           
  8154                           ; BSR set to: 0
  8155  003B26  EC96  F02B         	call	_EndLine	;wreg free
  8156  003B2A  0012               	return		;funcret
  8157  003B2C                     __end_of_sendDataCommand:
  8158                           	opt stack 0
  8159                           tblptru	equ	0xFF8
  8160                           tblptrh	equ	0xFF7
  8161                           tblptrl	equ	0xFF6
  8162                           tablat	equ	0xFF5
  8163                           prodh	equ	0xFF4
  8164                           prodl	equ	0xFF3
  8165                           intcon	equ	0xFF2
  8166                           postinc0	equ	0xFEE
  8167                           wreg	equ	0xFE8
  8168                           indf1	equ	0xFE7
  8169                           postdec1	equ	0xFE5
  8170                           fsr1h	equ	0xFE2
  8171                           fsr1l	equ	0xFE1
  8172                           indf2	equ	0xFDF
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function _hexToStr *****************
  8178 ;; Defined at:
  8179 ;;		line 1159 in file "../Includes/Board/MOTEapp.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  character       1    wreg     unsigned char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  character       1    0[BANK0 ] unsigned char 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      unsigned char 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0
  8194 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8196 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8197 ;;Total ram usage:        1 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:   11
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_sendDataCommand
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text4
  8208  0053F4                     __ptext4:
  8209                           	opt stack 0
  8210  0053F4                     _hexToStr:
  8211                           	opt stack 16
  8212                           
  8213                           ;incstack = 0
  8214                           ;hexToStr@character stored from wreg
  8215  0053F4  0100               	movlb	0	; () banked
  8216  0053F6  6F60               	movwf	hexToStr@character& (0+255),b
  8217                           
  8218                           ;MOTEapp.c: 1162: character = character & 0x0F;
  8219  0053F8  0100               	movlb	0	; () banked
  8220  0053FA  5160               	movf	hexToStr@character& (0+255),w,b
  8221  0053FC  0B0F               	andlw	15
  8222  0053FE  6F60               	movwf	hexToStr@character& (0+255),b
  8223                           
  8224                           ;MOTEapp.c: 1164: if (character < 0x0A)
  8225  005400  0E0A               	movlw	10
  8226  005402  6160               	cpfslt	hexToStr@character& (0+255),b
  8227  005404  D003               	goto	l579
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;MOTEapp.c: 1165: {
  8231                           ;MOTEapp.c: 1166: return character + '0';
  8232  005406  5160               	movf	hexToStr@character& (0+255),w,b
  8233  005408  0F30               	addlw	48
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;MOTEapp.c: 1167: }
  8237                           
  8238                           ; BSR set to: 0
  8239  00540A  0012               	return	
  8240  00540C                     l579:
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;MOTEapp.c: 1168: else if ( (character >= 0x0A) && (character <= 0x0F) )
  8244                           
  8245                           ; BSR set to: 0
  8246  00540C  0E09               	movlw	9
  8247  00540E  6560               	cpfsgt	hexToStr@character& (0+255),b
  8248  005410  D006               	goto	l582
  8249                           
  8250                           ; BSR set to: 0
  8251  005412  0E10               	movlw	16
  8252  005414  6160               	cpfslt	hexToStr@character& (0+255),b
  8253  005416  D003               	goto	l582
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;MOTEapp.c: 1169: {
  8257                           ;MOTEapp.c: 1170: return character + '0' + 7;
  8258  005418  5160               	movf	hexToStr@character& (0+255),w,b
  8259  00541A  0F37               	addlw	55
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;MOTEapp.c: 1171: }
  8263                           
  8264                           ; BSR set to: 0
  8265  00541C  0012               	return	
  8266  00541E                     l582:
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;MOTEapp.c: 1172: else
  8270                           ;MOTEapp.c: 1173: {
  8271                           ;MOTEapp.c: 1174: return 0;
  8272                           
  8273                           ; BSR set to: 0
  8274  00541E  0E00               	movlw	0
  8275                           
  8276                           ; BSR set to: 0
  8277                           
  8278                           ; BSR set to: 0
  8279  005420  0012               	return	
  8280  005422                     __end_of_hexToStr:
  8281                           	opt stack 0
  8282                           tblptru	equ	0xFF8
  8283                           tblptrh	equ	0xFF7
  8284                           tblptrl	equ	0xFF6
  8285                           tablat	equ	0xFF5
  8286                           prodh	equ	0xFF4
  8287                           prodl	equ	0xFF3
  8288                           intcon	equ	0xFF2
  8289                           postinc0	equ	0xFEE
  8290                           wreg	equ	0xFE8
  8291                           indf1	equ	0xFE7
  8292                           postdec1	equ	0xFE5
  8293                           fsr1h	equ	0xFE2
  8294                           fsr1l	equ	0xFE1
  8295                           indf2	equ	0xFDF
  8296                           fsr2h	equ	0xFDA
  8297                           fsr2l	equ	0xFD9
  8298                           status	equ	0xFD8
  8299                           
  8300 ;; *************** function _oled_putUint8 *****************
  8301 ;; Defined at:
  8302 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  number          1    wreg     unsigned char 
  8305 ;;  station_dot     1   23[BANK0 ] unsigned char 
  8306 ;;  start_page      1   24[BANK0 ] unsigned char 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  number          1   25[BANK0 ] unsigned char 
  8309 ;;  numData         6   26[BANK0 ] struct .
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8319 ;;      Params:         0       2       0       0       0       0       0       0       0
  8320 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8322 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8323 ;;Total ram usage:        9 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:   15
  8326 ;; This function calls:
  8327 ;;		___awmod
  8328 ;;		___lbdiv
  8329 ;;		_oled_putString
  8330 ;; This function is called by:
  8331 ;;		_moteRunningProcess
  8332 ;;		_test_adc
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text5
  8337  0043C6                     __ptext5:
  8338                           	opt stack 0
  8339  0043C6                     _oled_putUint8:
  8340                           	opt stack 13
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;incstack = 0
  8344                           ;oled_putUint8@number stored from wreg
  8345  0043C6  0100               	movlb	0	; () banked
  8346  0043C8  6F79               	movwf	oled_putUint8@number& (0+255),b
  8347                           
  8348                           ;SSD1306oLED.c: 266: display_data_t numData;
  8349                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  8350  0043CA  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  8351  0043CE  0100               	movlb	0	; () banked
  8352  0043D0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8353  0043D2  0E00               	movlw	0
  8354  0043D4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8355  0043D6  0E0A               	movlw	10
  8356  0043D8  6F62               	movwf	___awmod@divisor& (0+255),b
  8357  0043DA  ECAB  F024         	call	___awmod	;wreg free
  8358  0043DE  0100               	movlb	0	; () banked
  8359  0043E0  5160               	movf	?___awmod& (0+255),w,b
  8360  0043E2  0F30               	addlw	48
  8361  0043E4  6F7C               	movwf	(oled_putUint8@numData+2)& (0+255),b
  8362                           
  8363                           ;SSD1306oLED.c: 268: number /= 10;
  8364  0043E6  0E0A               	movlw	10
  8365  0043E8  6F60               	movwf	___lbdiv@divisor& (0+255),b
  8366  0043EA  5179               	movf	oled_putUint8@number& (0+255),w,b
  8367  0043EC  EC4E  F028         	call	___lbdiv
  8368  0043F0  0100               	movlb	0	; () banked
  8369  0043F2  6F79               	movwf	oled_putUint8@number& (0+255),b
  8370                           
  8371                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  8372  0043F4  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  8373  0043F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8374  0043FA  0E00               	movlw	0
  8375  0043FC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8376  0043FE  0E0A               	movlw	10
  8377  004400  6F62               	movwf	___awmod@divisor& (0+255),b
  8378  004402  ECAB  F024         	call	___awmod	;wreg free
  8379  004406  0100               	movlb	0	; () banked
  8380  004408  5160               	movf	?___awmod& (0+255),w,b
  8381  00440A  0F30               	addlw	48
  8382  00440C  6F7B               	movwf	(oled_putUint8@numData+1)& (0+255),b
  8383                           
  8384                           ;SSD1306oLED.c: 270: number /= 10;
  8385  00440E  0E0A               	movlw	10
  8386  004410  6F60               	movwf	___lbdiv@divisor& (0+255),b
  8387  004412  5179               	movf	oled_putUint8@number& (0+255),w,b
  8388  004414  EC4E  F028         	call	___lbdiv
  8389  004418  0100               	movlb	0	; () banked
  8390  00441A  6F79               	movwf	oled_putUint8@number& (0+255),b
  8391                           
  8392                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  8393  00441C  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  8394  004420  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8395  004422  0E00               	movlw	0
  8396  004424  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8397  004426  0E0A               	movlw	10
  8398  004428  6F62               	movwf	___awmod@divisor& (0+255),b
  8399  00442A  ECAB  F024         	call	___awmod	;wreg free
  8400  00442E  0100               	movlb	0	; () banked
  8401  004430  5160               	movf	?___awmod& (0+255),w,b
  8402  004432  0F30               	addlw	48
  8403  004434  6F7A               	movwf	oled_putUint8@numData& (0+255),b
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  8407  004436  0E00               	movlw	0
  8408  004438  6F7D               	movwf	(oled_putUint8@numData+3)& (0+255),b
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  8412  00443A  0E7A               	movlw	low oled_putUint8@numData
  8413  00443C  6F72               	movwf	oled_putString@string& (0+255),b
  8414  00443E  0E00               	movlw	high oled_putUint8@numData
  8415  004440  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8416  004442  C077  F074         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  8417  004446  C078  F075         	movff	oled_putUint8@start_page,oled_putString@start_page
  8418  00444A  EC1B  F025         	call	_oled_putString	;wreg free
  8419  00444E  0012               	return		;funcret
  8420  004450                     __end_of_oled_putUint8:
  8421                           	opt stack 0
  8422                           tblptru	equ	0xFF8
  8423                           tblptrh	equ	0xFF7
  8424                           tblptrl	equ	0xFF6
  8425                           tablat	equ	0xFF5
  8426                           prodh	equ	0xFF4
  8427                           prodl	equ	0xFF3
  8428                           intcon	equ	0xFF2
  8429                           postinc0	equ	0xFEE
  8430                           wreg	equ	0xFE8
  8431                           indf1	equ	0xFE7
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _moteApp_lightStringSize *****************
  8441 ;; Defined at:
  8442 ;;		line 1455 in file "../Includes/Board/MOTEapp.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      unsigned char 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:   11
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_moteRunningProcess
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text6
  8471  00579A                     __ptext6:
  8472                           	opt stack 0
  8473  00579A                     _moteApp_lightStringSize:
  8474                           	opt stack 17
  8475                           
  8476                           ;MOTEapp.c: 1457: return lightStringSize;
  8477                           
  8478                           ;incstack = 0
  8479  00579A  0100               	movlb	0	; () banked
  8480  00579C  51ED               	movf	_lightStringSize& (0+255),w,b
  8481  00579E  0012               	return	
  8482  0057A0                     __end_of_moteApp_lightStringSize:
  8483                           	opt stack 0
  8484                           tblptru	equ	0xFF8
  8485                           tblptrh	equ	0xFF7
  8486                           tblptrl	equ	0xFF6
  8487                           tablat	equ	0xFF5
  8488                           prodh	equ	0xFF4
  8489                           prodl	equ	0xFF3
  8490                           intcon	equ	0xFF2
  8491                           postinc0	equ	0xFEE
  8492                           wreg	equ	0xFE8
  8493                           indf1	equ	0xFE7
  8494                           postdec1	equ	0xFE5
  8495                           fsr1h	equ	0xFE2
  8496                           fsr1l	equ	0xFE1
  8497                           indf2	equ	0xFDF
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function _moteApp_getLightString *****************
  8503 ;; Defined at:
  8504 ;;		line 1459 in file "../Includes/Board/MOTEapp.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  2    0[BANK0 ] PTR unsigned char 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8518 ;;      Params:         0       2       0       0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8521 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8522 ;;Total ram usage:        2 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:   11
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_moteRunningProcess
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text7
  8533  00573A                     __ptext7:
  8534                           	opt stack 0
  8535  00573A                     _moteApp_getLightString:
  8536                           	opt stack 17
  8537                           
  8538                           ;MOTEapp.c: 1461: return &storedLight;
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;incstack = 0
  8542  00573A  0EE8               	movlw	low _storedLight
  8543  00573C  0100               	movlb	0	; () banked
  8544  00573E  6F60               	movwf	?_moteApp_getLightString& (0+255),b
  8545  005740  0E01               	movlw	high _storedLight
  8546  005742  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
  8547  005744  0012               	return	
  8548  005746                     __end_of_moteApp_getLightString:
  8549                           	opt stack 0
  8550                           tblptru	equ	0xFF8
  8551                           tblptrh	equ	0xFF7
  8552                           tblptrl	equ	0xFF6
  8553                           tablat	equ	0xFF5
  8554                           prodh	equ	0xFF4
  8555                           prodl	equ	0xFF3
  8556                           intcon	equ	0xFF2
  8557                           postinc0	equ	0xFEE
  8558                           wreg	equ	0xFE8
  8559                           indf1	equ	0xFE7
  8560                           postdec1	equ	0xFE5
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           indf2	equ	0xFDF
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568 ;; *************** function _moteApp_clearBuffers *****************
  8569 ;; Defined at:
  8570 ;;		line 1290 in file "../Includes/Board/MOTEapp.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  counter         1    3[BANK0 ] unsigned char 
  8575 ;;  counter         1    2[BANK0 ] unsigned char 
  8576 ;;  counter         1    1[BANK0 ] unsigned char 
  8577 ;;  counter         1    0[BANK0 ] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0
  8588 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8590 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8591 ;;Total ram usage:        4 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   11
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_moteRunningProcess
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text8
  8602  0042A4                     __ptext8:
  8603                           	opt stack 0
  8604  0042A4                     _moteApp_clearBuffers:
  8605                           	opt stack 17
  8606                           
  8607                           ;MOTEapp.c: 1292: for (uint8_t counter = 0; counter < 3; counter++)
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;incstack = 0
  8611  0042A4  0E00               	movlw	0
  8612  0042A6  0100               	movlb	0	; () banked
  8613  0042A8  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
  8614  0042AA                     l9124:
  8615                           
  8616                           ; BSR set to: 0
  8617  0042AA  0E02               	movlw	2
  8618  0042AC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  8619  0042AE  D001               	goto	l605
  8620  0042B0  D00C               	goto	u7780
  8621  0042B2                     l605:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;MOTEapp.c: 1293: {
  8625                           ;MOTEapp.c: 1294: responsePortNum[counter] = 0;
  8626                           
  8627                           ; BSR set to: 0
  8628  0042B2  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  8629  0042B4  0D01               	mullw	1
  8630  0042B6  0EED               	movlw	low _responsePortNum
  8631  0042B8  24F3               	addwf	prodl,w,c
  8632  0042BA  6ED9               	movwf	fsr2l,c
  8633  0042BC  0E01               	movlw	high _responsePortNum
  8634  0042BE  20F4               	addwfc	prodh,w,c
  8635  0042C0  6EDA               	movwf	fsr2h,c
  8636  0042C2  0E00               	movlw	0
  8637  0042C4  6EDF               	movwf	indf2,c
  8638                           
  8639                           ; BSR set to: 0
  8640  0042C6  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  8641  0042C8  D7F0               	goto	l9124
  8642  0042CA                     u7780:
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;MOTEapp.c: 1295: }
  8646                           ;MOTEapp.c: 1296: for (uint8_t counter = 0; counter < 34; counter++)
  8647                           
  8648                           ; BSR set to: 0
  8649  0042CA  0E00               	movlw	0
  8650  0042CC  6F61               	movwf	moteApp_clearBuffers@counter_1564& (0+255),b
  8651  0042CE                     l9136:
  8652                           
  8653                           ; BSR set to: 0
  8654  0042CE  0E21               	movlw	33
  8655  0042D0  6561               	cpfsgt	moteApp_clearBuffers@counter_1564& (0+255),b
  8656  0042D2  D001               	goto	l607
  8657  0042D4  D00C               	goto	u7800
  8658  0042D6                     l607:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;MOTEapp.c: 1297: {
  8662                           ;MOTEapp.c: 1298: responseId[counter] = 0;
  8663                           
  8664                           ; BSR set to: 0
  8665  0042D6  5161               	movf	moteApp_clearBuffers@counter_1564& (0+255),w,b
  8666  0042D8  0D01               	mullw	1
  8667  0042DA  0E30               	movlw	low _responseId
  8668  0042DC  24F3               	addwf	prodl,w,c
  8669  0042DE  6ED9               	movwf	fsr2l,c
  8670  0042E0  0E01               	movlw	high _responseId
  8671  0042E2  20F4               	addwfc	prodh,w,c
  8672  0042E4  6EDA               	movwf	fsr2h,c
  8673  0042E6  0E00               	movlw	0
  8674  0042E8  6EDF               	movwf	indf2,c
  8675                           
  8676                           ; BSR set to: 0
  8677  0042EA  2B61               	incf	moteApp_clearBuffers@counter_1564& (0+255),f,b
  8678  0042EC  D7F0               	goto	l9136
  8679  0042EE                     u7800:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;MOTEapp.c: 1299: }
  8683                           ;MOTEapp.c: 1300: for (uint8_t counter = 0; counter < 32; counter++)
  8684                           
  8685                           ; BSR set to: 0
  8686  0042EE  0E00               	movlw	0
  8687  0042F0  6F62               	movwf	moteApp_clearBuffers@counter_1565& (0+255),b
  8688  0042F2                     l9148:
  8689                           
  8690                           ; BSR set to: 0
  8691  0042F2  0E1F               	movlw	31
  8692  0042F4  6562               	cpfsgt	moteApp_clearBuffers@counter_1565& (0+255),b
  8693  0042F6  D001               	goto	l609
  8694  0042F8  D00C               	goto	u7820
  8695  0042FA                     l609:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;MOTEapp.c: 1301: {
  8699                           ;MOTEapp.c: 1302: responseData[counter] = 0;
  8700                           
  8701                           ; BSR set to: 0
  8702  0042FA  5162               	movf	moteApp_clearBuffers@counter_1565& (0+255),w,b
  8703  0042FC  0D01               	mullw	1
  8704  0042FE  0E9A               	movlw	low _responseData
  8705  004300  24F3               	addwf	prodl,w,c
  8706  004302  6ED9               	movwf	fsr2l,c
  8707  004304  0E01               	movlw	high _responseData
  8708  004306  20F4               	addwfc	prodh,w,c
  8709  004308  6EDA               	movwf	fsr2h,c
  8710  00430A  0E00               	movlw	0
  8711  00430C  6EDF               	movwf	indf2,c
  8712                           
  8713                           ; BSR set to: 0
  8714  00430E  2B62               	incf	moteApp_clearBuffers@counter_1565& (0+255),f,b
  8715  004310  D7F0               	goto	l9148
  8716  004312                     u7820:
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;MOTEapp.c: 1303: }
  8720                           ;MOTEapp.c: 1304: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
  8721                           
  8722                           ; BSR set to: 0
  8723  004312  0E00               	movlw	0
  8724  004314  6F63               	movwf	moteApp_clearBuffers@counter_1566& (0+255),b
  8725  004316                     l9160:
  8726                           
  8727                           ; BSR set to: 0
  8728  004316  0E0F               	movlw	15
  8729  004318  6563               	cpfsgt	moteApp_clearBuffers@counter_1566& (0+255),b
  8730  00431A  D001               	goto	l611
  8731  00431C  0012               	return	
  8732  00431E                     l611:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;MOTEapp.c: 1305: {
  8736                           ;MOTEapp.c: 1306: dataBuffer[counter] = 0;
  8737                           
  8738                           ; BSR set to: 0
  8739  00431E  5163               	movf	moteApp_clearBuffers@counter_1566& (0+255),w,b
  8740  004320  0D01               	mullw	1
  8741  004322  0EBA               	movlw	low _dataBuffer
  8742  004324  24F3               	addwf	prodl,w,c
  8743  004326  6ED9               	movwf	fsr2l,c
  8744  004328  0E01               	movlw	high _dataBuffer
  8745  00432A  20F4               	addwfc	prodh,w,c
  8746  00432C  6EDA               	movwf	fsr2h,c
  8747  00432E  0E00               	movlw	0
  8748  004330  6EDF               	movwf	indf2,c
  8749                           
  8750                           ; BSR set to: 0
  8751  004332  2B63               	incf	moteApp_clearBuffers@counter_1566& (0+255),f,b
  8752  004334  D7F0               	goto	l9160
  8753  004336                     __end_of_moteApp_clearBuffers:
  8754                           	opt stack 0
  8755                           tblptru	equ	0xFF8
  8756                           tblptrh	equ	0xFF7
  8757                           tblptrl	equ	0xFF6
  8758                           tablat	equ	0xFF5
  8759                           prodh	equ	0xFF4
  8760                           prodl	equ	0xFF3
  8761                           intcon	equ	0xFF2
  8762                           postinc0	equ	0xFEE
  8763                           wreg	equ	0xFE8
  8764                           indf1	equ	0xFE7
  8765                           postdec1	equ	0xFE5
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           fsr2h	equ	0xFDA
  8770                           fsr2l	equ	0xFD9
  8771                           status	equ	0xFD8
  8772                           
  8773 ;; *************** function _moteApp_addToDataBuffer *****************
  8774 ;; Defined at:
  8775 ;;		line 1332 in file "../Includes/Board/MOTEapp.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  string          2   18[BANK0 ] PTR const unsigned char 
  8778 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
  8779 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  index           1   21[BANK0 ] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      unsigned char 
  8784 ;; Registers used:
  8785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8791 ;;      Params:         0       3       0       0       0       0       0       0       0
  8792 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8794 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8795 ;;Total ram usage:        4 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:   11
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_moteRunningProcess
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text9
  8806  004CA0                     __ptext9:
  8807                           	opt stack 0
  8808  004CA0                     _moteApp_addToDataBuffer:
  8809                           	opt stack 17
  8810                           
  8811                           ;MOTEapp.c: 1334: uint8_t index;
  8812                           ;MOTEapp.c: 1335: for(index = 0; index < 6; index++)
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;incstack = 0
  8816  004CA0  0E00               	movlw	0
  8817  004CA2  0100               	movlb	0	; () banked
  8818  004CA4  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
  8819  004CA6                     l9198:
  8820                           
  8821                           ; BSR set to: 0
  8822  004CA6  0E05               	movlw	5
  8823  004CA8  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
  8824  004CAA  D001               	goto	l622
  8825  004CAC  D026               	goto	u7910
  8826  004CAE                     l622:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;MOTEapp.c: 1336: {
  8830                           ;MOTEapp.c: 1337: if (*string != 0)
  8831                           
  8832                           ; BSR set to: 0
  8833  004CAE  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
  8834  004CB2  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
  8835  004CB6  50DF               	movf	indf2,w,c
  8836  004CB8  B4D8               	btfsc	status,2,c
  8837  004CBA  D012               	goto	l624
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;MOTEapp.c: 1338: {
  8841                           ;MOTEapp.c: 1339: dataBuffer[bufferLocation++] = *string++;
  8842  004CBC  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
  8843  004CC0  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
  8844  004CC4  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
  8845  004CC6  0D01               	mullw	1
  8846  004CC8  0EBA               	movlw	low _dataBuffer
  8847  004CCA  24F3               	addwf	prodl,w,c
  8848  004CCC  6EE1               	movwf	fsr1l,c
  8849  004CCE  0E01               	movlw	high _dataBuffer
  8850  004CD0  20F4               	addwfc	prodh,w,c
  8851  004CD2  6EE2               	movwf	fsr1h,c
  8852  004CD4  CFDF FFE7          	movff	indf2,indf1
  8853                           
  8854                           ; BSR set to: 0
  8855  004CD8  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
  8856  004CDA  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
  8857                           
  8858                           ; BSR set to: 0
  8859  004CDC  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
  8860                           
  8861                           ;MOTEapp.c: 1340: }
  8862  004CDE  D00B               	goto	l625
  8863  004CE0                     l624:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;MOTEapp.c: 1341: else
  8867                           ;MOTEapp.c: 1342: {
  8868                           ;MOTEapp.c: 1343: dataBuffer[bufferLocation] = 0x20;
  8869                           
  8870                           ; BSR set to: 0
  8871  004CE0  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
  8872  004CE2  0D01               	mullw	1
  8873  004CE4  0EBA               	movlw	low _dataBuffer
  8874  004CE6  24F3               	addwf	prodl,w,c
  8875  004CE8  6ED9               	movwf	fsr2l,c
  8876  004CEA  0E01               	movlw	high _dataBuffer
  8877  004CEC  20F4               	addwfc	prodh,w,c
  8878  004CEE  6EDA               	movwf	fsr2h,c
  8879  004CF0  0E20               	movlw	32
  8880  004CF2  6EDF               	movwf	indf2,c
  8881                           
  8882                           ;MOTEapp.c: 1344: break;
  8883  004CF4  D002               	goto	u7910
  8884  004CF6                     l625:
  8885                           
  8886                           ; BSR set to: 0
  8887                           
  8888                           ; BSR set to: 0
  8889  004CF6  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
  8890  004CF8  D7D6               	goto	l9198
  8891  004CFA                     u7910:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;MOTEapp.c: 1345: }
  8895                           ;MOTEapp.c: 1346: }
  8896                           ;MOTEapp.c: 1347: return index;
  8897                           
  8898                           ; BSR set to: 0
  8899  004CFA  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
  8900  004CFC  0012               	return	
  8901  004CFE                     __end_of_moteApp_addToDataBuffer:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           postinc0	equ	0xFEE
  8911                           wreg	equ	0xFE8
  8912                           indf1	equ	0xFE7
  8913                           postdec1	equ	0xFE5
  8914                           fsr1h	equ	0xFE2
  8915                           fsr1l	equ	0xFE1
  8916                           indf2	equ	0xFDF
  8917                           fsr2h	equ	0xFDA
  8918                           fsr2l	equ	0xFD9
  8919                           status	equ	0xFD8
  8920                           
  8921 ;; *************** function _moteApp_add8bToDataBuffer *****************
  8922 ;; Defined at:
  8923 ;;		line 1310 in file "../Includes/Board/MOTEapp.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  number          1    wreg     unsigned char 
  8926 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  number          1    9[BANK0 ] unsigned char 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8938 ;;      Params:         0       1       0       0       0       0       0       0       0
  8939 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8940 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8941 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8942 ;;Total ram usage:        4 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:   12
  8945 ;; This function calls:
  8946 ;;		___awmod
  8947 ;;		___lbdiv
  8948 ;; This function is called by:
  8949 ;;		_moteRunningProcess
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text10
  8954  003D5C                     __ptext10:
  8955                           	opt stack 0
  8956  003D5C                     _moteApp_add8bToDataBuffer:
  8957                           	opt stack 16
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;incstack = 0
  8961                           ;moteApp_add8bToDataBuffer@number stored from wreg
  8962  003D5C  0100               	movlb	0	; () banked
  8963  003D5E  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  8964                           
  8965                           ;MOTEapp.c: 1312: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  8966  003D60  0100               	movlb	0	; () banked
  8967  003D62  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  8968  003D64  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
  8969  003D66  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
  8970  003D68  0E02               	movlw	2
  8971  003D6A  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
  8972  003D6C  0E00               	movlw	0
  8973  003D6E  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
  8974  003D70  0EBA               	movlw	low _dataBuffer
  8975  003D72  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
  8976  003D74  6ED9               	movwf	fsr2l,c
  8977  003D76  0E01               	movlw	high _dataBuffer
  8978  003D78  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
  8979  003D7A  6EDA               	movwf	fsr2h,c
  8980  003D7C  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  8981  003D80  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8982  003D82  0E00               	movlw	0
  8983  003D84  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8984  003D86  0E0A               	movlw	10
  8985  003D88  6F62               	movwf	___awmod@divisor& (0+255),b
  8986  003D8A  ECAB  F024         	call	___awmod	;wreg free
  8987  003D8E  0100               	movlb	0	; () banked
  8988  003D90  5160               	movf	?___awmod& (0+255),w,b
  8989  003D92  0F30               	addlw	48
  8990  003D94  6EDF               	movwf	indf2,c
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;MOTEapp.c: 1313: number /= 10;
  8994  003D96  0E0A               	movlw	10
  8995  003D98  6F60               	movwf	___lbdiv@divisor& (0+255),b
  8996  003D9A  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  8997  003D9C  EC4E  F028         	call	___lbdiv
  8998  003DA0  0100               	movlb	0	; () banked
  8999  003DA2  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;MOTEapp.c: 1314: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9003  003DA4  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9004  003DA6  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
  9005  003DA8  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
  9006  003DAA  0E01               	movlw	1
  9007  003DAC  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
  9008  003DAE  0E00               	movlw	0
  9009  003DB0  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
  9010  003DB2  0EBA               	movlw	low _dataBuffer
  9011  003DB4  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
  9012  003DB6  6ED9               	movwf	fsr2l,c
  9013  003DB8  0E01               	movlw	high _dataBuffer
  9014  003DBA  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
  9015  003DBC  6EDA               	movwf	fsr2h,c
  9016  003DBE  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  9017  003DC2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9018  003DC4  0E00               	movlw	0
  9019  003DC6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9020  003DC8  0E0A               	movlw	10
  9021  003DCA  6F62               	movwf	___awmod@divisor& (0+255),b
  9022  003DCC  ECAB  F024         	call	___awmod	;wreg free
  9023  003DD0  0100               	movlb	0	; () banked
  9024  003DD2  5160               	movf	?___awmod& (0+255),w,b
  9025  003DD4  0F30               	addlw	48
  9026  003DD6  6EDF               	movwf	indf2,c
  9027                           
  9028                           ;MOTEapp.c: 1315: number /= 10;
  9029  003DD8  0E0A               	movlw	10
  9030  003DDA  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9031  003DDC  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9032  003DDE  EC4E  F028         	call	___lbdiv
  9033  003DE2  0100               	movlb	0	; () banked
  9034  003DE4  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;MOTEapp.c: 1316: dataBuffer[bufferLocation] = '0' + (number % 10);
  9038  003DE6  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9039  003DE8  0D01               	mullw	1
  9040  003DEA  0EBA               	movlw	low _dataBuffer
  9041  003DEC  24F3               	addwf	prodl,w,c
  9042  003DEE  6ED9               	movwf	fsr2l,c
  9043  003DF0  0E01               	movlw	high _dataBuffer
  9044  003DF2  20F4               	addwfc	prodh,w,c
  9045  003DF4  6EDA               	movwf	fsr2h,c
  9046  003DF6  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
  9047  003DFA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9048  003DFC  0E00               	movlw	0
  9049  003DFE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9050  003E00  0E0A               	movlw	10
  9051  003E02  6F62               	movwf	___awmod@divisor& (0+255),b
  9052  003E04  ECAB  F024         	call	___awmod	;wreg free
  9053  003E08  0100               	movlb	0	; () banked
  9054  003E0A  5160               	movf	?___awmod& (0+255),w,b
  9055  003E0C  0F30               	addlw	48
  9056  003E0E  6EDF               	movwf	indf2,c
  9057                           
  9058                           ; BSR set to: 0
  9059  003E10  0012               	return		;funcret
  9060  003E12                     __end_of_moteApp_add8bToDataBuffer:
  9061                           	opt stack 0
  9062                           tblptru	equ	0xFF8
  9063                           tblptrh	equ	0xFF7
  9064                           tblptrl	equ	0xFF6
  9065                           tablat	equ	0xFF5
  9066                           prodh	equ	0xFF4
  9067                           prodl	equ	0xFF3
  9068                           intcon	equ	0xFF2
  9069                           postinc0	equ	0xFEE
  9070                           wreg	equ	0xFE8
  9071                           indf1	equ	0xFE7
  9072                           postdec1	equ	0xFE5
  9073                           fsr1h	equ	0xFE2
  9074                           fsr1l	equ	0xFE1
  9075                           indf2	equ	0xFDF
  9076                           fsr2h	equ	0xFDA
  9077                           fsr2l	equ	0xFD9
  9078                           status	equ	0xFD8
  9079                           
  9080 ;; *************** function _moteApp_GoToSleep *****************
  9081 ;; Defined at:
  9082 ;;		line 1178 in file "../Includes/Board/MOTEapp.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;		None
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  status          1   14[BANK0 ] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      unsigned char 
  9089 ;; Registers used:
  9090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0
  9097 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9099 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9100 ;;Total ram usage:        1 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:   17
  9103 ;; This function calls:
  9104 ;;		_EUSART_FlushBuffer
  9105 ;;		_PIN_MANAGER_Initialize
  9106 ;;		_moduleResync
  9107 ;;		_moduleSleep
  9108 ;;		_moteApp_delayms
  9109 ;;		_oled_displayOff
  9110 ;;		_oled_init
  9111 ;; This function is called by:
  9112 ;;		_moteRunningProcess
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text11
  9117  0033D8                     __ptext11:
  9118                           	opt stack 0
  9119  0033D8                     _moteApp_GoToSleep:
  9120                           	opt stack 11
  9121                           
  9122                           ;MOTEapp.c: 1180: uint8_t status = 0;
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;incstack = 0
  9126  0033D8  0E00               	movlw	0
  9127  0033DA  0100               	movlb	0	; () banked
  9128  0033DC  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9129  0033DE                     
  9130                           ; BSR set to: 0
  9131  0033DE  A081               	btfss	3969,0,c	;volatile
  9132  0033E0  D7FE               	goto	l587
  9133                           
  9134                           ;MOTEapp.c: 1182: moduleSleep();
  9135  0033E2  EC7A  F02A         	call	_moduleSleep	;wreg free
  9136                           
  9137                           ;MOTEapp.c: 1183: oled_displayOff(1);
  9138  0033E6  0E01               	movlw	1
  9139  0033E8  ECC1  F02B         	call	_oled_displayOff
  9140                           
  9141                           ;MOTEapp.c: 1184: ADCON0bits.ADON = 0;
  9142  0033EC  90C2               	bcf	4034,0,c	;volatile
  9143                           
  9144                           ;MOTEapp.c: 1185: INTCONbits.GIE = 0;
  9145  0033EE  9EF2               	bcf	intcon,7,c	;volatile
  9146                           
  9147                           ;MOTEapp.c: 1186: GIE = 0;
  9148  0033F0  9EF2               	bcf	intcon,7,c	;volatile
  9149                           
  9150                           ;MOTEapp.c: 1187: PEIE = 0;
  9151  0033F2  9CF2               	bcf	intcon,6,c	;volatile
  9152                           
  9153                           ;MOTEapp.c: 1189: LATEbits.LATE2 = 0;
  9154  0033F4  948D               	bcf	3981,2,c	;volatile
  9155                           
  9156                           ;MOTEapp.c: 1190: PIE2bits.TMR3IE = 0;
  9157  0033F6  92A0               	bcf	4000,1,c	;volatile
  9158                           
  9159                           ;MOTEapp.c: 1192: ANSELAbits.ANSA0 = 1;
  9160  0033F8  010F               	movlb	15	; () banked
  9161  0033FA  815B               	bsf	91,0,b	;volatile
  9162                           
  9163                           ; BSR set to: 15
  9164                           ;MOTEapp.c: 1194: PIE2bits.C1IE = 1;
  9165  0033FC  8CA0               	bsf	4000,6,c	;volatile
  9166                           
  9167                           ; BSR set to: 15
  9168                           ;MOTEapp.c: 1195: INTCON3bits.INT1IE = 1;
  9169  0033FE  86F0               	bsf	intcon3,3,c	;volatile
  9170                           
  9171                           ; BSR set to: 15
  9172                           ;MOTEapp.c: 1196: INTCONbits.INT0IE = 1;
  9173  003400  88F2               	bsf	intcon,4,c	;volatile
  9174                           
  9175                           ; BSR set to: 15
  9176                           ;MOTEapp.c: 1197: IOCCbits.IOCC2 = 1;
  9177  003402  8487               	bsf	3975,2,c	;volatile
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;MOTEapp.c: 1198: INTCONbits.IOCIE = 1;
  9181  003404  86F2               	bsf	intcon,3,c	;volatile
  9182                           
  9183                           ; BSR set to: 15
  9184                           ;MOTEapp.c: 1200: status = PORTBbits.RB1;
  9185  003406  0E00               	movlw	0
  9186  003408  B281               	btfsc	3969,1,c	;volatile
  9187  00340A  0E01               	movlw	1
  9188  00340C  0100               	movlb	0	; () banked
  9189  00340E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;MOTEapp.c: 1201: status = PORTBbits.RB0;
  9193  003410  0E00               	movlw	0
  9194  003412  B081               	btfsc	3969,0,c	;volatile
  9195  003414  0E01               	movlw	1
  9196  003416  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;MOTEapp.c: 1202: status = PORTCbits.RC2;
  9200  003418  0E00               	movlw	0
  9201  00341A  B482               	btfsc	3970,2,c	;volatile
  9202  00341C  0E01               	movlw	1
  9203  00341E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;MOTEapp.c: 1204: if (periodicState)
  9207  003420  51FA               	movf	_periodicState& (0+255),w,b
  9208  003422  A4D8               	btfss	status,2,c
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;MOTEapp.c: 1205: {
  9212                           ;MOTEapp.c: 1206: WDTCONbits.SWDTEN = 1;
  9213  003424  80D1               	bsf	4049,0,c	;volatile
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;MOTEapp.c: 1207: }
  9217                           ;MOTEapp.c: 1209: INTCONbits.IOCIF = 0;
  9218  003426  90F2               	bcf	intcon,0,c	;volatile
  9219                           
  9220                           ;MOTEapp.c: 1210: INTCONbits.INT0IF = 0;
  9221  003428  92F2               	bcf	intcon,1,c	;volatile
  9222                           
  9223                           ;MOTEapp.c: 1211: INTCON3bits.INT1IF = 0;
  9224  00342A  90F0               	bcf	intcon3,0,c	;volatile
  9225                           
  9226                           ;MOTEapp.c: 1212: PIR2bits.C1IF = 0;
  9227  00342C  9CA1               	bcf	4001,6,c	;volatile
  9228                           
  9229                           ;MOTEapp.c: 1213: __nop();
  9230  00342E  F000               	nop	
  9231  003430  0003               	sleep		;# 
  9232                           
  9233                           ;MOTEapp.c: 1215: __nop();
  9234  003432  F000               	nop	
  9235                           
  9236                           ;MOTEapp.c: 1217: WDTCONbits.SWDTEN = 0;
  9237  003434  90D1               	bcf	4049,0,c	;volatile
  9238                           
  9239                           ;MOTEapp.c: 1218: EUSART_FlushBuffer();
  9240  003436  ECEC  F027         	call	_EUSART_FlushBuffer	;wreg free
  9241                           
  9242                           ;MOTEapp.c: 1220: INTCONbits.IOCIE = 0;
  9243  00343A  96F2               	bcf	intcon,3,c	;volatile
  9244                           
  9245                           ;MOTEapp.c: 1221: INTCON3bits.INT1IE = 0;
  9246  00343C  96F0               	bcf	intcon3,3,c	;volatile
  9247                           
  9248                           ;MOTEapp.c: 1222: INTCONbits.INT0IE = 0;
  9249  00343E  98F2               	bcf	intcon,4,c	;volatile
  9250                           
  9251                           ;MOTEapp.c: 1223: IOCCbits.IOCC2 = 0;
  9252  003440  9487               	bcf	3975,2,c	;volatile
  9253                           
  9254                           ;MOTEapp.c: 1224: PIE2bits.C1IE = 0;
  9255  003442  9CA0               	bcf	4000,6,c	;volatile
  9256                           
  9257                           ;MOTEapp.c: 1225: GIE = 1;
  9258  003444  8EF2               	bsf	intcon,7,c	;volatile
  9259                           
  9260                           ;MOTEapp.c: 1227: PIN_MANAGER_Initialize();
  9261  003446  EC80  F027         	call	_PIN_MANAGER_Initialize	;wreg free
  9262                           
  9263                           ;MOTEapp.c: 1229: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
  9264  00344A  A0F2               	btfss	intcon,0,c	;volatile
  9265  00344C  B2F2               	btfsc	intcon,1,c	;volatile
  9266  00344E  D004               	goto	u8020
  9267  003450  B0F0               	btfsc	intcon3,0,c	;volatile
  9268  003452  D002               	goto	u8020
  9269  003454  ACA1               	btfss	4001,6,c	;volatile
  9270  003456  D012               	goto	l590
  9271  003458                     u8020:
  9272                           
  9273                           ;MOTEapp.c: 1230: {
  9274                           ;MOTEapp.c: 1231: INTCONbits.IOCIF = 0;
  9275  003458  90F2               	bcf	intcon,0,c	;volatile
  9276                           
  9277                           ;MOTEapp.c: 1232: INTCONbits.INT0IF = 0;
  9278  00345A  92F2               	bcf	intcon,1,c	;volatile
  9279                           
  9280                           ;MOTEapp.c: 1233: INTCON3bits.INT1IF = 0;
  9281  00345C  90F0               	bcf	intcon3,0,c	;volatile
  9282                           
  9283                           ;MOTEapp.c: 1234: status = 1;
  9284  00345E  0E01               	movlw	1
  9285  003460  0100               	movlb	0	; () banked
  9286  003462  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;MOTEapp.c: 1237: oled_displayOff(0);
  9290  003464  0E00               	movlw	0
  9291  003466  ECC1  F02B         	call	_oled_displayOff
  9292                           
  9293                           ;MOTEapp.c: 1238: oled_init();
  9294  00346A  EC82  F029         	call	_oled_init	;wreg free
  9295                           
  9296                           ;MOTEapp.c: 1240: LATEbits.LATE2 = 1;
  9297  00346E  848D               	bsf	3981,2,c	;volatile
  9298                           
  9299                           ;MOTEapp.c: 1241: TMR3H = 0xFB;
  9300  003470  0EFB               	movlw	251
  9301  003472  6EB3               	movwf	4019,c	;volatile
  9302                           
  9303                           ;MOTEapp.c: 1242: TMR3L = 0x50;
  9304  003474  0E50               	movlw	80
  9305  003476  6EB2               	movwf	4018,c	;volatile
  9306                           
  9307                           ;MOTEapp.c: 1243: PIE2bits.TMR3IE = 1;
  9308  003478  82A0               	bsf	4000,1,c	;volatile
  9309                           
  9310                           ;MOTEapp.c: 1244: }
  9311  00347A  D007               	goto	l593
  9312  00347C                     l590:
  9313                           
  9314                           ;MOTEapp.c: 1245: else
  9315                           ;MOTEapp.c: 1246: {
  9316                           ;MOTEapp.c: 1247: secTicker = 10;
  9317  00347C  0E0A               	movlw	10
  9318  00347E  0100               	movlb	0	; () banked
  9319  003480  6FEF               	movwf	_secTicker& (0+255),b
  9320                           
  9321                           ;MOTEapp.c: 1248: status = 0;
  9322  003482  0E00               	movlw	0
  9323  003484  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;MOTEapp.c: 1250: LATEbits.LATE2 = 0;
  9327  003486  948D               	bcf	3981,2,c	;volatile
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;MOTEapp.c: 1251: PIE2bits.TMR3IE = 0;
  9331  003488  92A0               	bcf	4000,1,c	;volatile
  9332  00348A                     l593:
  9333                           
  9334                           ;MOTEapp.c: 1252: }
  9335                           ;MOTEapp.c: 1253: ANSELAbits.ANSA0 = 0;
  9336                           
  9337                           ; BSR set to: 0
  9338  00348A  010F               	movlb	15	; () banked
  9339  00348C  915B               	bcf	91,0,b	;volatile
  9340                           
  9341                           ; BSR set to: 15
  9342                           ;MOTEapp.c: 1255: moduleResync();
  9343  00348E  ECB1  F022         	call	_moduleResync	;wreg free
  9344                           
  9345                           ;MOTEapp.c: 1256: moteApp_delayms(40);
  9346  003492  0E00               	movlw	0
  9347  003494  0100               	movlb	0	; () banked
  9348  003496  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9349  003498  0E28               	movlw	40
  9350  00349A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  9351  00349C  EC50  F029         	call	_moteApp_delayms	;wreg free
  9352                           
  9353                           ;MOTEapp.c: 1257: moduleResync();
  9354  0034A0  ECB1  F022         	call	_moduleResync	;wreg free
  9355                           
  9356                           ;MOTEapp.c: 1258: moteApp_delayms(40);
  9357  0034A4  0E00               	movlw	0
  9358  0034A6  0100               	movlb	0	; () banked
  9359  0034A8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9360  0034AA  0E28               	movlw	40
  9361  0034AC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  9362  0034AE  EC50  F029         	call	_moteApp_delayms	;wreg free
  9363                           
  9364                           ;MOTEapp.c: 1259: return status;
  9365  0034B2  0100               	movlb	0	; () banked
  9366  0034B4  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
  9367  0034B6  0012               	return	
  9368  0034B8                     __end_of_moteApp_GoToSleep:
  9369                           	opt stack 0
  9370                           tblptru	equ	0xFF8
  9371                           tblptrh	equ	0xFF7
  9372                           tblptrl	equ	0xFF6
  9373                           tablat	equ	0xFF5
  9374                           prodh	equ	0xFF4
  9375                           prodl	equ	0xFF3
  9376                           intcon	equ	0xFF2
  9377                           intcon3	equ	0xFF0
  9378                           postinc0	equ	0xFEE
  9379                           wreg	equ	0xFE8
  9380                           indf1	equ	0xFE7
  9381                           postdec1	equ	0xFE5
  9382                           fsr1h	equ	0xFE2
  9383                           fsr1l	equ	0xFE1
  9384                           indf2	equ	0xFDF
  9385                           fsr2h	equ	0xFDA
  9386                           fsr2l	equ	0xFD9
  9387                           status	equ	0xFD8
  9388                           
  9389 ;; *************** function _oled_init *****************
  9390 ;; Defined at:
  9391 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;		None
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1    wreg      void 
  9398 ;; Registers used:
  9399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9405 ;;      Params:         0       0       0       0       0       0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9409 ;;Total ram usage:        0 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:   16
  9412 ;; This function calls:
  9413 ;;		_oled_clear
  9414 ;;		_oled_devInit
  9415 ;;		_oled_setDisplay
  9416 ;;		_oled_setFont
  9417 ;; This function is called by:
  9418 ;;		_main
  9419 ;;		_moteApp_GoToSleep
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text12
  9424  005304                     __ptext12:
  9425                           	opt stack 0
  9426  005304                     _oled_init:
  9427                           	opt stack 14
  9428                           
  9429                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;incstack = 0
  9433  005304  9496               	bcf	3990,2,c	;volatile
  9434                           
  9435                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
  9436  005306  848D               	bsf	3981,2,c	;volatile
  9437                           
  9438                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
  9439  005308  9493               	bcf	3987,2,c	;volatile
  9440                           
  9441                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
  9442  00530A  9693               	bcf	3987,3,c	;volatile
  9443                           
  9444                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
  9445  00530C  9893               	bcf	3987,4,c	;volatile
  9446                           
  9447                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
  9448  00530E  9094               	bcf	3988,0,c	;volatile
  9449                           
  9450                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
  9451  005310  9294               	bcf	3988,1,c	;volatile
  9452                           
  9453                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
  9454  005312  868A               	bsf	3978,3,c	;volatile
  9455                           
  9456                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
  9457  005314  988A               	bcf	3978,4,c	;volatile
  9458                           
  9459                           ;SSD1306oLED.c: 381: oled_devInit();
  9460  005316  ECB7  F023         	call	_oled_devInit	;wreg free
  9461                           
  9462                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
  9463  00531A  0E01               	movlw	1
  9464  00531C  EC3E  F02A         	call	_oled_setDisplay
  9465                           
  9466                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
  9467  005320  0EFD               	movlw	low _OledFont0
  9468  005322  0100               	movlb	0	; () banked
  9469  005324  6F60               	movwf	oled_setFont@font& (0+255),b
  9470  005326  0E75               	movlw	high _OledFont0
  9471  005328  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
  9472  00532A  EC45  F02B         	call	_oled_setFont	;wreg free
  9473                           
  9474                           ;SSD1306oLED.c: 385: oled_clear();
  9475  00532E  ECFF  F02A         	call	_oled_clear	;wreg free
  9476  005332  0012               	return		;funcret
  9477  005334                     __end_of_oled_init:
  9478                           	opt stack 0
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon	equ	0xFF2
  9486                           intcon3	equ	0xFF0
  9487                           postinc0	equ	0xFEE
  9488                           wreg	equ	0xFE8
  9489                           indf1	equ	0xFE7
  9490                           postdec1	equ	0xFE5
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           fsr2h	equ	0xFDA
  9495                           fsr2l	equ	0xFD9
  9496                           status	equ	0xFD8
  9497                           
  9498 ;; *************** function _oled_setFont *****************
  9499 ;; Defined at:
  9500 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  font            2    0[BANK0 ] PTR const unsigned char 
  9503 ;;		 -> OledFont0(768), 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, status,0
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9515 ;;      Params:         0       2       0       0       0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9518 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:   11
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_oled_init
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text13
  9530  00568A                     __ptext13:
  9531                           	opt stack 0
  9532  00568A                     _oled_setFont:
  9533                           	opt stack 18
  9534                           
  9535                           ;SSD1306oLED.c: 258: if(font!=0)
  9536                           
  9537                           ;incstack = 0
  9538  00568A  0100               	movlb	0	; () banked
  9539  00568C  5160               	movf	oled_setFont@font& (0+255),w,b
  9540  00568E  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
  9541  005690  B4D8               	btfsc	status,2,c
  9542  005692  0012               	return	
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;SSD1306oLED.c: 259: {
  9546                           ;SSD1306oLED.c: 260: selectedFont=font;
  9547  005694  C060  F1F0         	movff	oled_setFont@font,_selectedFont
  9548  005698  C061  F1F1         	movff	oled_setFont@font+1,_selectedFont+1
  9549  00569C  0012               	return	
  9550  00569E                     __end_of_oled_setFont:
  9551                           	opt stack 0
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           intcon3	equ	0xFF0
  9560                           postinc0	equ	0xFEE
  9561                           wreg	equ	0xFE8
  9562                           indf1	equ	0xFE7
  9563                           postdec1	equ	0xFE5
  9564                           fsr1h	equ	0xFE2
  9565                           fsr1l	equ	0xFE1
  9566                           indf2	equ	0xFDF
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function _oled_setDisplay *****************
  9572 ;; Defined at:
  9573 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  displayType     1    wreg     enum E5868
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  displayType     1    1[BANK0 ] enum E5868
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      void 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, cstack
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9587 ;;      Params:         0       0       0       0       0       0       0       0       0
  9588 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9590 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9591 ;;Total ram usage:        1 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:   12
  9594 ;; This function calls:
  9595 ;;		_oled_writeCommand
  9596 ;; This function is called by:
  9597 ;;		_oled_init
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text14
  9602  00547C                     __ptext14:
  9603                           	opt stack 0
  9604  00547C                     _oled_setDisplay:
  9605                           	opt stack 17
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;incstack = 0
  9609                           ;oled_setDisplay@displayType stored from wreg
  9610  00547C  0100               	movlb	0	; () banked
  9611  00547E  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
  9612                           
  9613                           ;SSD1306oLED.c: 413: if (displayType == Normal)
  9614  005480  0100               	movlb	0	; () banked
  9615  005482  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
  9616  005484  A4D8               	btfss	status,2,c
  9617  005486  D007               	goto	l984
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;SSD1306oLED.c: 414: {
  9621                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
  9622  005488  0EA0               	movlw	160
  9623  00548A  EC24  F02B         	call	_oled_writeCommand
  9624                           
  9625                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
  9626  00548E  0EC8               	movlw	200
  9627  005490  EC24  F02B         	call	_oled_writeCommand
  9628                           
  9629                           ;SSD1306oLED.c: 417: }
  9630  005494  0012               	return	
  9631  005496                     l984:
  9632                           
  9633                           ;SSD1306oLED.c: 418: else
  9634                           ;SSD1306oLED.c: 419: {
  9635                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
  9636  005496  0EA1               	movlw	161
  9637  005498  EC24  F02B         	call	_oled_writeCommand
  9638                           
  9639                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
  9640  00549C  0EC0               	movlw	192
  9641  00549E  EC24  F02B         	call	_oled_writeCommand
  9642  0054A2  0012               	return	
  9643  0054A4                     __end_of_oled_setDisplay:
  9644                           	opt stack 0
  9645                           tblptru	equ	0xFF8
  9646                           tblptrh	equ	0xFF7
  9647                           tblptrl	equ	0xFF6
  9648                           tablat	equ	0xFF5
  9649                           prodh	equ	0xFF4
  9650                           prodl	equ	0xFF3
  9651                           intcon	equ	0xFF2
  9652                           intcon3	equ	0xFF0
  9653                           postinc0	equ	0xFEE
  9654                           wreg	equ	0xFE8
  9655                           indf1	equ	0xFE7
  9656                           postdec1	equ	0xFE5
  9657                           fsr1h	equ	0xFE2
  9658                           fsr1l	equ	0xFE1
  9659                           indf2	equ	0xFDF
  9660                           fsr2h	equ	0xFDA
  9661                           fsr2l	equ	0xFD9
  9662                           status	equ	0xFD8
  9663                           
  9664 ;; *************** function _oled_devInit *****************
  9665 ;; Defined at:
  9666 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2, status,0, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9682 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9683 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9684 ;;Total ram usage:        1 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:   13
  9687 ;; This function calls:
  9688 ;;		_oled_initialDispayLine
  9689 ;;		_oled_powerControl
  9690 ;;		_oled_regulorResistorSelect
  9691 ;;		_oled_setContrastControlRegister
  9692 ;;		_oled_writeCommand
  9693 ;; This function is called by:
  9694 ;;		_oled_init
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text15
  9699  00476E                     __ptext15:
  9700                           	opt stack 0
  9701  00476E                     _oled_devInit:
  9702                           	opt stack 16
  9703                           
  9704                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
  9705                           
  9706                           ;incstack = 0
  9707  00476E  0EE2               	movlw	226
  9708  004770  EC24  F02B         	call	_oled_writeCommand
  9709                           
  9710                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
  9711  004774  848A               	bsf	3978,2,c	;volatile
  9712                           
  9713                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
  9714  004776  0E04               	movlw	4
  9715  004778  0100               	movlb	0	; () banked
  9716  00477A  6F62               	movwf	??_oled_devInit& (0+255),b
  9717  00477C  0E1C               	movlw	28
  9718  00477E                     u10577:
  9719  00477E  2EE8               	decfsz	wreg,f,c
  9720  004780  D7FE               	bra	u10577
  9721  004782  2F62               	decfsz	??_oled_devInit& (0+255),f,b
  9722  004784  D7FC               	bra	u10577
  9723  004786  F000               	nop	
  9724                           
  9725                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
  9726  004788  948A               	bcf	3978,2,c	;volatile
  9727                           
  9728                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
  9729  00478A  0E20               	movlw	32
  9730  00478C  0100               	movlb	0	; () banked
  9731  00478E  6F62               	movwf	??_oled_devInit& (0+255),b
  9732  004790  0E29               	movlw	41
  9733  004792                     u10587:
  9734  004792  2EE8               	decfsz	wreg,f,c
  9735  004794  D7FE               	bra	u10587
  9736  004796  2F62               	decfsz	??_oled_devInit& (0+255),f,b
  9737  004798  D7FC               	bra	u10587
  9738  00479A  D000               	nop2	
  9739                           
  9740                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
  9741  00479C  848A               	bsf	3978,2,c	;volatile
  9742                           
  9743                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
  9744  00479E  0E10               	movlw	16
  9745  0047A0  0100               	movlb	0	; () banked
  9746  0047A2  6F62               	movwf	??_oled_devInit& (0+255),b
  9747  0047A4  0E94               	movlw	148
  9748  0047A6                     u10597:
  9749  0047A6  2EE8               	decfsz	wreg,f,c
  9750  0047A8  D7FE               	bra	u10597
  9751  0047AA  2F62               	decfsz	??_oled_devInit& (0+255),f,b
  9752  0047AC  D7FC               	bra	u10597
  9753  0047AE  F000               	nop	
  9754                           
  9755                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
  9756  0047B0  0EA1               	movlw	161
  9757  0047B2  EC24  F02B         	call	_oled_writeCommand
  9758                           
  9759                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
  9760  0047B6  0EC0               	movlw	192
  9761  0047B8  EC24  F02B         	call	_oled_writeCommand
  9762                           
  9763                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
  9764  0047BC  0EA3               	movlw	163
  9765  0047BE  EC24  F02B         	call	_oled_writeCommand
  9766                           
  9767                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
  9768  0047C2  0E07               	movlw	7
  9769  0047C4  EC7E  F02B         	call	_oled_powerControl
  9770                           
  9771                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
  9772  0047C8  0E05               	movlw	5
  9773  0047CA  EC76  F02B         	call	_oled_regulorResistorSelect
  9774                           
  9775                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
  9776  0047CE  505B               	movf	_Contrast_level,w,c
  9777  0047D0  EC4F  F02B         	call	_oled_setContrastControlRegister
  9778                           
  9779                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
  9780  0047D4  0E00               	movlw	0
  9781  0047D6  EC86  F02B         	call	_oled_initialDispayLine
  9782                           
  9783                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
  9784  0047DA  0EF8               	movlw	248
  9785  0047DC  EC24  F02B         	call	_oled_writeCommand
  9786                           
  9787                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
  9788  0047E0  0E00               	movlw	0
  9789  0047E2  EC24  F02B         	call	_oled_writeCommand
  9790                           
  9791                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
  9792  0047E6  0EAF               	movlw	175
  9793  0047E8  EC24  F02B         	call	_oled_writeCommand
  9794  0047EC  0012               	return		;funcret
  9795  0047EE                     __end_of_oled_devInit:
  9796                           	opt stack 0
  9797                           tblptru	equ	0xFF8
  9798                           tblptrh	equ	0xFF7
  9799                           tblptrl	equ	0xFF6
  9800                           tablat	equ	0xFF5
  9801                           prodh	equ	0xFF4
  9802                           prodl	equ	0xFF3
  9803                           intcon	equ	0xFF2
  9804                           intcon3	equ	0xFF0
  9805                           postinc0	equ	0xFEE
  9806                           wreg	equ	0xFE8
  9807                           indf1	equ	0xFE7
  9808                           postdec1	equ	0xFE5
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           indf2	equ	0xFDF
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function _oled_setContrastControlRegister *****************
  9817 ;; Defined at:
  9818 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  mod             1    wreg     unsigned char 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  mod             1    1[BANK0 ] unsigned char 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9832 ;;      Params:         0       0       0       0       0       0       0       0       0
  9833 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9835 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9836 ;;Total ram usage:        1 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:   12
  9839 ;; This function calls:
  9840 ;;		_oled_writeCommand
  9841 ;; This function is called by:
  9842 ;;		_oled_devInit
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text16
  9847  00569E                     __ptext16:
  9848                           	opt stack 0
  9849  00569E                     _oled_setContrastControlRegister:
  9850                           	opt stack 16
  9851                           
  9852                           ;incstack = 0
  9853                           ;oled_setContrastControlRegister@mod stored from wreg
  9854  00569E  0100               	movlb	0	; () banked
  9855  0056A0  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
  9856                           
  9857                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
  9858  0056A2  0E81               	movlw	129
  9859  0056A4  EC24  F02B         	call	_oled_writeCommand
  9860                           
  9861                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
  9862  0056A8  0100               	movlb	0	; () banked
  9863  0056AA  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
  9864  0056AC  EC24  F02B         	call	_oled_writeCommand
  9865  0056B0  0012               	return	
  9866  0056B2                     __end_of_oled_setContrastControlRegister:
  9867                           	opt stack 0
  9868                           tblptru	equ	0xFF8
  9869                           tblptrh	equ	0xFF7
  9870                           tblptrl	equ	0xFF6
  9871                           tablat	equ	0xFF5
  9872                           prodh	equ	0xFF4
  9873                           prodl	equ	0xFF3
  9874                           intcon	equ	0xFF2
  9875                           intcon3	equ	0xFF0
  9876                           postinc0	equ	0xFEE
  9877                           wreg	equ	0xFE8
  9878                           indf1	equ	0xFE7
  9879                           postdec1	equ	0xFE5
  9880                           fsr1h	equ	0xFE2
  9881                           fsr1l	equ	0xFE1
  9882                           indf2	equ	0xFDF
  9883                           fsr2h	equ	0xFDA
  9884                           fsr2l	equ	0xFD9
  9885                           status	equ	0xFD8
  9886                           
  9887 ;; *************** function _oled_regulorResistorSelect *****************
  9888 ;; Defined at:
  9889 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  r               1    wreg     unsigned char 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;  r               1    1[BANK0 ] unsigned char 
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		wreg, status,2, status,0, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0
  9904 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9906 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9907 ;;Total ram usage:        1 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:   12
  9910 ;; This function calls:
  9911 ;;		_oled_writeCommand
  9912 ;; This function is called by:
  9913 ;;		_oled_devInit
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text17
  9918  0056EC                     __ptext17:
  9919                           	opt stack 0
  9920  0056EC                     _oled_regulorResistorSelect:
  9921                           	opt stack 16
  9922                           
  9923                           ;incstack = 0
  9924                           ;oled_regulorResistorSelect@r stored from wreg
  9925  0056EC  0100               	movlb	0	; () banked
  9926  0056EE  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
  9927                           
  9928                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
  9929  0056F0  0100               	movlb	0	; () banked
  9930  0056F2  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
  9931  0056F4  0920               	iorlw	32
  9932  0056F6  EC24  F02B         	call	_oled_writeCommand
  9933  0056FA  0012               	return	
  9934  0056FC                     __end_of_oled_regulorResistorSelect:
  9935                           	opt stack 0
  9936                           tblptru	equ	0xFF8
  9937                           tblptrh	equ	0xFF7
  9938                           tblptrl	equ	0xFF6
  9939                           tablat	equ	0xFF5
  9940                           prodh	equ	0xFF4
  9941                           prodl	equ	0xFF3
  9942                           intcon	equ	0xFF2
  9943                           intcon3	equ	0xFF0
  9944                           postinc0	equ	0xFEE
  9945                           wreg	equ	0xFE8
  9946                           indf1	equ	0xFE7
  9947                           postdec1	equ	0xFE5
  9948                           fsr1h	equ	0xFE2
  9949                           fsr1l	equ	0xFE1
  9950                           indf2	equ	0xFDF
  9951                           fsr2h	equ	0xFDA
  9952                           fsr2l	equ	0xFD9
  9953                           status	equ	0xFD8
  9954                           
  9955 ;; *************** function _oled_powerControl *****************
  9956 ;; Defined at:
  9957 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  vol             1    wreg     unsigned char 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  vol             1    1[BANK0 ] unsigned char 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1    wreg      void 
  9964 ;; Registers used:
  9965 ;;		wreg, status,2, status,0, cstack
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9971 ;;      Params:         0       0       0       0       0       0       0       0       0
  9972 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9974 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9975 ;;Total ram usage:        1 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:   12
  9978 ;; This function calls:
  9979 ;;		_oled_writeCommand
  9980 ;; This function is called by:
  9981 ;;		_oled_devInit
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text18
  9986  0056FC                     __ptext18:
  9987                           	opt stack 0
  9988  0056FC                     _oled_powerControl:
  9989                           	opt stack 16
  9990                           
  9991                           ;incstack = 0
  9992                           ;oled_powerControl@vol stored from wreg
  9993  0056FC  0100               	movlb	0	; () banked
  9994  0056FE  6F61               	movwf	oled_powerControl@vol& (0+255),b
  9995                           
  9996                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
  9997  005700  0100               	movlb	0	; () banked
  9998  005702  5161               	movf	oled_powerControl@vol& (0+255),w,b
  9999  005704  0928               	iorlw	40
 10000  005706  EC24  F02B         	call	_oled_writeCommand
 10001  00570A  0012               	return	
 10002  00570C                     __end_of_oled_powerControl:
 10003                           	opt stack 0
 10004                           tblptru	equ	0xFF8
 10005                           tblptrh	equ	0xFF7
 10006                           tblptrl	equ	0xFF6
 10007                           tablat	equ	0xFF5
 10008                           prodh	equ	0xFF4
 10009                           prodl	equ	0xFF3
 10010                           intcon	equ	0xFF2
 10011                           intcon3	equ	0xFF0
 10012                           postinc0	equ	0xFEE
 10013                           wreg	equ	0xFE8
 10014                           indf1	equ	0xFE7
 10015                           postdec1	equ	0xFE5
 10016                           fsr1h	equ	0xFE2
 10017                           fsr1l	equ	0xFE1
 10018                           indf2	equ	0xFDF
 10019                           fsr2h	equ	0xFDA
 10020                           fsr2l	equ	0xFD9
 10021                           status	equ	0xFD8
 10022                           
 10023 ;; *************** function _oled_initialDispayLine *****************
 10024 ;; Defined at:
 10025 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  line            1    wreg     unsigned char 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;  line            1    1[BANK0 ] unsigned char 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2, status,0, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0
 10040 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10042 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10043 ;;Total ram usage:        1 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:   12
 10046 ;; This function calls:
 10047 ;;		_oled_writeCommand
 10048 ;; This function is called by:
 10049 ;;		_oled_devInit
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text19
 10054  00570C                     __ptext19:
 10055                           	opt stack 0
 10056  00570C                     _oled_initialDispayLine:
 10057                           	opt stack 16
 10058                           
 10059                           ;incstack = 0
 10060                           ;oled_initialDispayLine@line stored from wreg
 10061  00570C  0100               	movlb	0	; () banked
 10062  00570E  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 10063                           
 10064                           ;SSD1306oLED.c: 464: line|=0x40;
 10065  005710  0100               	movlb	0	; () banked
 10066  005712  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 10070  005714  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 10071  005716  EC24  F02B         	call	_oled_writeCommand
 10072  00571A  0012               	return	
 10073  00571C                     __end_of_oled_initialDispayLine:
 10074                           	opt stack 0
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           intcon	equ	0xFF2
 10082                           intcon3	equ	0xFF0
 10083                           postinc0	equ	0xFEE
 10084                           wreg	equ	0xFE8
 10085                           indf1	equ	0xFE7
 10086                           postdec1	equ	0xFE5
 10087                           fsr1h	equ	0xFE2
 10088                           fsr1l	equ	0xFE1
 10089                           indf2	equ	0xFDF
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _oled_displayOff *****************
 10095 ;; Defined at:
 10096 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  state           1    wreg     unsigned char 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  state           1    0[COMRAM] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      void 
 10103 ;; Registers used:
 10104 ;;		wreg, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   12
 10117 ;; This function calls:
 10118 ;;		_oled_writeCommand
 10119 ;; This function is called by:
 10120 ;;		_moteApp_GoToSleep
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text20
 10125  005782                     __ptext20:
 10126                           	opt stack 0
 10127  005782                     _oled_displayOff:
 10128                           	opt stack 15
 10129                           
 10130                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 10131                           
 10132                           ;incstack = 0
 10133  005782  0EAE               	movlw	174
 10134  005784  EC24  F02B         	call	_oled_writeCommand
 10135  005788  0012               	return		;funcret
 10136  00578A                     __end_of_oled_displayOff:
 10137                           	opt stack 0
 10138                           tblptru	equ	0xFF8
 10139                           tblptrh	equ	0xFF7
 10140                           tblptrl	equ	0xFF6
 10141                           tablat	equ	0xFF5
 10142                           prodh	equ	0xFF4
 10143                           prodl	equ	0xFF3
 10144                           intcon	equ	0xFF2
 10145                           intcon3	equ	0xFF0
 10146                           postinc0	equ	0xFEE
 10147                           wreg	equ	0xFE8
 10148                           indf1	equ	0xFE7
 10149                           postdec1	equ	0xFE5
 10150                           fsr1h	equ	0xFE2
 10151                           fsr1l	equ	0xFE1
 10152                           indf2	equ	0xFDF
 10153                           fsr2h	equ	0xFDA
 10154                           fsr2l	equ	0xFD9
 10155                           status	equ	0xFD8
 10156                           
 10157 ;; *************** function _moduleSleep *****************
 10158 ;; Defined at:
 10159 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10175 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10176 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10177 ;;Total ram usage:        1 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:   14
 10180 ;; This function calls:
 10181 ;;		_sendCommand
 10182 ;; This function is called by:
 10183 ;;		_moteApp_GoToSleep
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text21
 10188  0054F4                     __ptext21:
 10189                           	opt stack 0
 10190  0054F4                     _moduleSleep:
 10191                           	opt stack 13
 10192                           
 10193                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 10194                           
 10195                           ;incstack = 0
 10196  0054F4  0E88               	movlw	low STR_5
 10197  0054F6  0100               	movlb	0	; () banked
 10198  0054F8  6F61               	movwf	sendCommand@string& (0+255),b
 10199  0054FA  0E7A               	movlw	high STR_5
 10200  0054FC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10201  0054FE  ECB2  F029         	call	_sendCommand	;wreg free
 10202  005502                     
 10203                           ;MOTEapp.c: 179: ;
 10204  005502  B89D               	btfsc	3997,4,c	;volatile
 10205  005504  D7FE               	goto	l278
 10206                           
 10207                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 10208  005506  0EFA               	movlw	250
 10209  005508  0100               	movlb	0	; () banked
 10210  00550A  6F63               	movwf	??_moduleSleep& (0+255),b
 10211  00550C  0E58               	movlw	88
 10212  00550E                     u10607:
 10213  00550E  2EE8               	decfsz	wreg,f,c
 10214  005510  D7FE               	bra	u10607
 10215  005512  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 10216  005514  D7FC               	bra	u10607
 10217  005516  F000               	nop	
 10218  005518  0012               	return		;funcret
 10219  00551A                     __end_of_moduleSleep:
 10220                           	opt stack 0
 10221                           tblptru	equ	0xFF8
 10222                           tblptrh	equ	0xFF7
 10223                           tblptrl	equ	0xFF6
 10224                           tablat	equ	0xFF5
 10225                           prodh	equ	0xFF4
 10226                           prodl	equ	0xFF3
 10227                           intcon	equ	0xFF2
 10228                           intcon3	equ	0xFF0
 10229                           postinc0	equ	0xFEE
 10230                           wreg	equ	0xFE8
 10231                           indf1	equ	0xFE7
 10232                           postdec1	equ	0xFE5
 10233                           fsr1h	equ	0xFE2
 10234                           fsr1l	equ	0xFE1
 10235                           indf2	equ	0xFDF
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function _moduleResync *****************
 10241 ;; Defined at:
 10242 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10247 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10257 ;;      Params:         0       0       0       0       0       0       0       0       0
 10258 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10260 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10261 ;;Total ram usage:        3 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:   14
 10264 ;; This function calls:
 10265 ;;		_MOTEapp_getModuleResponse
 10266 ;;		_moteApp_delayms
 10267 ;;		_sendCommand
 10268 ;; This function is called by:
 10269 ;;		_main
 10270 ;;		_moteApp_GoToSleep
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text22
 10275  004562                     __ptext22:
 10276                           	opt stack 0
 10277  004562                     _moduleResync:
 10278                           	opt stack 13
 10279                           
 10280                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 10281                           
 10282                           ;incstack = 0
 10283  004562  0E00               	movlw	0
 10284  004564  0100               	movlb	0	; () banked
 10285  004566  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 10286                           
 10287                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 10288  004568  0E00               	movlw	0
 10289  00456A  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 10290  00456C  0E00               	movlw	0
 10291  00456E  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 10295  004570  9AAC               	bcf	4012,5,c	;volatile
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 10299  004572  9C8B               	bcf	3979,6,c	;volatile
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;MOTEapp.c: 147: moteApp_delayms(10);
 10303  004574  0E00               	movlw	0
 10304  004576  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10305  004578  0E0A               	movlw	10
 10306  00457A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10307  00457C  EC50  F029         	call	_moteApp_delayms	;wreg free
 10308                           
 10309                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 10310  004580  8AAC               	bsf	4012,5,c	;volatile
 10311                           
 10312                           ;MOTEapp.c: 149: moteApp_delayms(5);
 10313  004582  0E00               	movlw	0
 10314  004584  0100               	movlb	0	; () banked
 10315  004586  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10316  004588  0E05               	movlw	5
 10317  00458A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10318  00458C  EC50  F029         	call	_moteApp_delayms	;wreg free
 10319                           
 10320                           ;MOTEapp.c: 151: TXREG = 0x55;
 10321  004590  0E55               	movlw	85
 10322  004592  6EAD               	movwf	4013,c	;volatile
 10323  004594                     
 10324                           ;MOTEapp.c: 153: {};
 10325  004594  A2AC               	btfss	4012,1,c	;volatile
 10326  004596  D7FE               	goto	l260
 10327                           
 10328                           ;MOTEapp.c: 155: sendCommand("z");
 10329  004598  0EFD               	movlw	low STR_4
 10330  00459A  0100               	movlb	0	; () banked
 10331  00459C  6F61               	movwf	sendCommand@string& (0+255),b
 10332  00459E  0E7F               	movlw	high STR_4
 10333  0045A0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10334  0045A2  ECB2  F029         	call	_sendCommand	;wreg free
 10335                           
 10336                           ;MOTEapp.c: 157: moteApp_delayms(40);
 10337  0045A6  0E00               	movlw	0
 10338  0045A8  0100               	movlb	0	; () banked
 10339  0045AA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10340  0045AC  0E28               	movlw	40
 10341  0045AE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10342  0045B0  EC50  F029         	call	_moteApp_delayms	;wreg free
 10343                           
 10344                           ;MOTEapp.c: 158: while (escapeEvent)
 10345  0045B4  D013               	goto	l266
 10346  0045B6                     
 10347                           ;MOTEapp.c: 159: {
 10348                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 10349  0045B6  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
 10350  0045BA  0900               	iorlw	0
 10351  0045BC  B4D8               	btfsc	status,2,c
 10352  0045BE  D003               	goto	l264
 10353                           
 10354                           ;MOTEapp.c: 161: escapeEvent = 1;
 10355  0045C0  0E01               	movlw	1
 10356  0045C2  0100               	movlb	0	; () banked
 10357  0045C4  D00A               	goto	L6
 10358  0045C6                     l264:
 10359                           
 10360                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 10361                           
 10362                           ; BSR set to: 0
 10363  0045C6  0100               	movlb	0	; () banked
 10364  0045C8  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 10365  0045CA  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 10366  0045CC  0E89               	movlw	137
 10367  0045CE  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 10368  0045D0  0E13               	movlw	19
 10369  0045D2  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 10370  0045D4  A0D8               	btfss	status,0,c
 10371  0045D6  D002               	goto	l266
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;MOTEapp.c: 163: escapeEvent = 1;
 10375  0045D8  0E01               	movlw	1
 10376  0045DA                     L6:
 10377  0045DA  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 10378  0045DC                     l266:
 10379                           
 10380                           ; BSR set to: 0
 10381                           
 10382                           ; BSR set to: 0
 10383  0045DC  0100               	movlb	0	; () banked
 10384  0045DE  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 10385  0045E0  B4D8               	btfsc	status,2,c
 10386  0045E2  0012               	return	
 10387  0045E4  D7E8               	goto	l263
 10388  0045E6                     __end_of_moduleResync:
 10389                           	opt stack 0
 10390                           tblptru	equ	0xFF8
 10391                           tblptrh	equ	0xFF7
 10392                           tblptrl	equ	0xFF6
 10393                           tablat	equ	0xFF5
 10394                           prodh	equ	0xFF4
 10395                           prodl	equ	0xFF3
 10396                           intcon	equ	0xFF2
 10397                           intcon3	equ	0xFF0
 10398                           postinc0	equ	0xFEE
 10399                           wreg	equ	0xFE8
 10400                           indf1	equ	0xFE7
 10401                           postdec1	equ	0xFE5
 10402                           fsr1h	equ	0xFE2
 10403                           fsr1l	equ	0xFE1
 10404                           indf2	equ	0xFDF
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           
 10409 ;; *************** function _TMR2_ReadTimer *****************
 10410 ;; Defined at:
 10411 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  readVal         1    0[BANK0 ] unsigned char 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      unsigned char 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10425 ;;      Params:         0       0       0       0       0       0       0       0       0
 10426 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10428 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10429 ;;Total ram usage:        1 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:   11
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_moteRunningProcess
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text23
 10440  005752                     __ptext23:
 10441                           	opt stack 0
 10442  005752                     _TMR2_ReadTimer:
 10443                           	opt stack 17
 10444                           
 10445                           ;tmr2.c: 88: uint8_t readVal;
 10446                           ;tmr2.c: 90: readVal = TMR2;
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;incstack = 0
 10450  005752  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 10451                           
 10452                           ;tmr2.c: 92: return readVal;
 10453  005756  0100               	movlb	0	; () banked
 10454  005758  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 10455  00575A  0012               	return	
 10456  00575C                     __end_of_TMR2_ReadTimer:
 10457                           	opt stack 0
 10458                           tblptru	equ	0xFF8
 10459                           tblptrh	equ	0xFF7
 10460                           tblptrl	equ	0xFF6
 10461                           tablat	equ	0xFF5
 10462                           prodh	equ	0xFF4
 10463                           prodl	equ	0xFF3
 10464                           intcon	equ	0xFF2
 10465                           intcon3	equ	0xFF0
 10466                           postinc0	equ	0xFEE
 10467                           wreg	equ	0xFE8
 10468                           indf1	equ	0xFE7
 10469                           postdec1	equ	0xFE5
 10470                           fsr1h	equ	0xFE2
 10471                           fsr1l	equ	0xFE1
 10472                           indf2	equ	0xFDF
 10473                           fsr2h	equ	0xFDA
 10474                           fsr2l	equ	0xFD9
 10475                           status	equ	0xFD8
 10476                           
 10477 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 10478 ;; Defined at:
 10479 ;;		line 983 in file "../Includes/Board/MOTEapp.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  dr              1    wreg     unsigned char 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  dr              1    4[BANK0 ] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0
 10494 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10495 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10496 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10497 ;;Total ram usage:        2 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:   14
 10500 ;; This function calls:
 10501 ;;		_sendCommand
 10502 ;; This function is called by:
 10503 ;;		_moteRunningProcess
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text24
 10508  002264                     __ptext24:
 10509                           	opt stack 0
 10510  002264                     _MOTEapp_SetDataRateSetting:
 10511                           	opt stack 14
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;incstack = 0
 10515                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 10516  002264  0100               	movlb	0	; () banked
 10517  002266  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 10518                           
 10519                           ;MOTEapp.c: 985: if (dr != 8)
 10520  002268  0E08               	movlw	8
 10521  00226A  0100               	movlb	0	; () banked
 10522  00226C  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 10523  00226E  B4D8               	btfsc	status,2,c
 10524  002270  D06A               	goto	l512
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;MOTEapp.c: 986: {
 10528                           ;MOTEapp.c: 987: sendCommand("mac set adr off");
 10529  002272  0EB9               	movlw	low STR_142
 10530  002274  6F61               	movwf	sendCommand@string& (0+255),b
 10531  002276  0E7C               	movlw	high STR_142
 10532  002278  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10533  00227A  ECB2  F029         	call	_sendCommand	;wreg free
 10534                           
 10535                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 10536  00227E  0EFA               	movlw	250
 10537  002280  0100               	movlb	0	; () banked
 10538  002282  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10539  002284  0E58               	movlw	88
 10540  002286                     u10617:
 10541  002286  2EE8               	decfsz	wreg,f,c
 10542  002288  D7FE               	bra	u10617
 10543  00228A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10544  00228C  D7FC               	bra	u10617
 10545  00228E  F000               	nop	
 10546                           
 10547                           ;MOTEapp.c: 989: _delay((unsigned long)((16)*(48000000/4000.0)));
 10548  002290  0EFA               	movlw	250
 10549  002292  0100               	movlb	0	; () banked
 10550  002294  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10551  002296  0E58               	movlw	88
 10552  002298                     u10627:
 10553  002298  2EE8               	decfsz	wreg,f,c
 10554  00229A  D7FE               	bra	u10627
 10555  00229C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10556  00229E  D7FC               	bra	u10627
 10557  0022A0  F000               	nop	
 10558                           
 10559                           ;MOTEapp.c: 990: _delay((unsigned long)((16)*(48000000/4000.0)));
 10560  0022A2  0EFA               	movlw	250
 10561  0022A4  0100               	movlb	0	; () banked
 10562  0022A6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10563  0022A8  0E58               	movlw	88
 10564  0022AA                     u10637:
 10565  0022AA  2EE8               	decfsz	wreg,f,c
 10566  0022AC  D7FE               	bra	u10637
 10567  0022AE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10568  0022B0  D7FC               	bra	u10637
 10569  0022B2  F000               	nop	
 10570                           
 10571                           ;MOTEapp.c: 991: }
 10572                           ;MOTEapp.c: 993: switch (dr)
 10573  0022B4  D048               	goto	l512
 10574  0022B6                     
 10575                           ;MOTEapp.c: 996: sendCommand("mac set dr 0");
 10576  0022B6  0EB9               	movlw	low STR_143
 10577  0022B8  0100               	movlb	0	; () banked
 10578  0022BA  6F61               	movwf	sendCommand@string& (0+255),b
 10579  0022BC  0E7D               	movlw	high STR_143
 10580  0022BE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10581  0022C0  ECB2  F029         	call	_sendCommand	;wreg free
 10582                           
 10583                           ;MOTEapp.c: 997: break;
 10584  0022C4  D05D               	goto	l514
 10585  0022C6                     
 10586                           ;MOTEapp.c: 999: sendCommand("mac set dr 1");
 10587  0022C6  0EC6               	movlw	low STR_144
 10588  0022C8  0100               	movlb	0	; () banked
 10589  0022CA  6F61               	movwf	sendCommand@string& (0+255),b
 10590  0022CC  0E7D               	movlw	high STR_144
 10591  0022CE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10592  0022D0  ECB2  F029         	call	_sendCommand	;wreg free
 10593                           
 10594                           ;MOTEapp.c: 1000: break;
 10595  0022D4  D055               	goto	l514
 10596  0022D6                     
 10597                           ;MOTEapp.c: 1002: sendCommand("mac set dr 2");
 10598  0022D6  0ED3               	movlw	low STR_145
 10599  0022D8  0100               	movlb	0	; () banked
 10600  0022DA  6F61               	movwf	sendCommand@string& (0+255),b
 10601  0022DC  0E7D               	movlw	high STR_145
 10602  0022DE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10603  0022E0  ECB2  F029         	call	_sendCommand	;wreg free
 10604                           
 10605                           ;MOTEapp.c: 1003: break;
 10606  0022E4  D04D               	goto	l514
 10607  0022E6                     
 10608                           ;MOTEapp.c: 1005: sendCommand("mac set dr 3");
 10609  0022E6  0EE0               	movlw	low STR_146
 10610  0022E8  0100               	movlb	0	; () banked
 10611  0022EA  6F61               	movwf	sendCommand@string& (0+255),b
 10612  0022EC  0E7D               	movlw	high STR_146
 10613  0022EE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10614  0022F0  ECB2  F029         	call	_sendCommand	;wreg free
 10615                           
 10616                           ;MOTEapp.c: 1006: break;
 10617  0022F4  D045               	goto	l514
 10618  0022F6                     
 10619                           ;MOTEapp.c: 1008: sendCommand("mac set dr 4");
 10620  0022F6  0EED               	movlw	low STR_147
 10621  0022F8  0100               	movlb	0	; () banked
 10622  0022FA  6F61               	movwf	sendCommand@string& (0+255),b
 10623  0022FC  0E7D               	movlw	high STR_147
 10624  0022FE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10625  002300  ECB2  F029         	call	_sendCommand	;wreg free
 10626                           
 10627                           ;MOTEapp.c: 1009: break;
 10628  002304  D03D               	goto	l514
 10629  002306                     
 10630                           ;MOTEapp.c: 1011: sendCommand("mac set dr 5");
 10631  002306  0EFA               	movlw	low STR_148
 10632  002308  0100               	movlb	0	; () banked
 10633  00230A  6F61               	movwf	sendCommand@string& (0+255),b
 10634  00230C  0E7D               	movlw	high STR_148
 10635  00230E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10636  002310  ECB2  F029         	call	_sendCommand	;wreg free
 10637                           
 10638                           ;MOTEapp.c: 1012: break;
 10639  002314  D035               	goto	l514
 10640  002316                     
 10641                           ;MOTEapp.c: 1014: sendCommand("mac set dr 6");
 10642  002316  0E07               	movlw	low STR_149
 10643  002318  0100               	movlb	0	; () banked
 10644  00231A  6F61               	movwf	sendCommand@string& (0+255),b
 10645  00231C  0E7E               	movlw	high STR_149
 10646  00231E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10647  002320  ECB2  F029         	call	_sendCommand	;wreg free
 10648                           
 10649                           ;MOTEapp.c: 1015: break;
 10650  002324  D02D               	goto	l514
 10651  002326                     
 10652                           ;MOTEapp.c: 1017: sendCommand("mac set dr 7");
 10653  002326  0E14               	movlw	low STR_150
 10654  002328  0100               	movlb	0	; () banked
 10655  00232A  6F61               	movwf	sendCommand@string& (0+255),b
 10656  00232C  0E7E               	movlw	high STR_150
 10657  00232E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10658  002330  ECB2  F029         	call	_sendCommand	;wreg free
 10659                           
 10660                           ;MOTEapp.c: 1018: break;
 10661  002334  D025               	goto	l514
 10662  002336                     
 10663                           ;MOTEapp.c: 1020: sendCommand("mac set adr on");
 10664  002336  0EF7               	movlw	low STR_151
 10665  002338  0100               	movlb	0	; () banked
 10666  00233A  6F61               	movwf	sendCommand@string& (0+255),b
 10667  00233C  0E7C               	movlw	high STR_151
 10668  00233E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10669  002340  ECB2  F029         	call	_sendCommand	;wreg free
 10670                           
 10671                           ;MOTEapp.c: 1022: }
 10672                           
 10673                           ;MOTEapp.c: 1021: break;
 10674  002344  D01D               	goto	l514
 10675  002346                     l512:
 10676  002346  0100               	movlb	0	; () banked
 10677  002348  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 10678                           
 10679                           ; Switch size 1, requested type "space"
 10680                           ; Number of cases is 9, Range of values is 0 to 8
 10681                           ; switch strategies available:
 10682                           ; Name         Instructions Cycles
 10683                           ; simple_byte           28    15 (average)
 10684                           ;	Chosen strategy is simple_byte
 10685  00234A  0A00               	xorlw	0	; case 0
 10686  00234C  B4D8               	btfsc	status,2,c
 10687  00234E  D7B3               	goto	l513
 10688  002350  0A01               	xorlw	1	; case 1
 10689  002352  B4D8               	btfsc	status,2,c
 10690  002354  D7B8               	goto	l515
 10691  002356  0A03               	xorlw	3	; case 2
 10692  002358  B4D8               	btfsc	status,2,c
 10693  00235A  D7BD               	goto	l516
 10694  00235C  0A01               	xorlw	1	; case 3
 10695  00235E  B4D8               	btfsc	status,2,c
 10696  002360  D7C2               	goto	l517
 10697  002362  0A07               	xorlw	7	; case 4
 10698  002364  B4D8               	btfsc	status,2,c
 10699  002366  D7C7               	goto	l518
 10700  002368  0A01               	xorlw	1	; case 5
 10701  00236A  B4D8               	btfsc	status,2,c
 10702  00236C  D7CC               	goto	l519
 10703  00236E  0A03               	xorlw	3	; case 6
 10704  002370  B4D8               	btfsc	status,2,c
 10705  002372  D7D1               	goto	l520
 10706  002374  0A01               	xorlw	1	; case 7
 10707  002376  B4D8               	btfsc	status,2,c
 10708  002378  D7D6               	goto	l521
 10709  00237A  0A0F               	xorlw	15	; case 8
 10710  00237C  B4D8               	btfsc	status,2,c
 10711  00237E  D7DB               	goto	l522
 10712  002380                     l514:
 10713                           
 10714                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 10715                           
 10716                           ; BSR set to: 0
 10717  002380  0EFA               	movlw	250
 10718  002382  0100               	movlb	0	; () banked
 10719  002384  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10720  002386  0E58               	movlw	88
 10721  002388                     u10647:
 10722  002388  2EE8               	decfsz	wreg,f,c
 10723  00238A  D7FE               	bra	u10647
 10724  00238C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10725  00238E  D7FC               	bra	u10647
 10726  002390  F000               	nop	
 10727                           
 10728                           ;MOTEapp.c: 1024: _delay((unsigned long)((16)*(48000000/4000.0)));
 10729  002392  0EFA               	movlw	250
 10730  002394  0100               	movlb	0	; () banked
 10731  002396  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10732  002398  0E58               	movlw	88
 10733  00239A                     u10657:
 10734  00239A  2EE8               	decfsz	wreg,f,c
 10735  00239C  D7FE               	bra	u10657
 10736  00239E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10737  0023A0  D7FC               	bra	u10657
 10738  0023A2  F000               	nop	
 10739                           
 10740                           ;MOTEapp.c: 1025: _delay((unsigned long)((16)*(48000000/4000.0)));
 10741  0023A4  0EFA               	movlw	250
 10742  0023A6  0100               	movlb	0	; () banked
 10743  0023A8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 10744  0023AA  0E58               	movlw	88
 10745  0023AC                     u10667:
 10746  0023AC  2EE8               	decfsz	wreg,f,c
 10747  0023AE  D7FE               	bra	u10667
 10748  0023B0  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 10749  0023B2  D7FC               	bra	u10667
 10750  0023B4  F000               	nop	
 10751                           
 10752                           ;MOTEapp.c: 1026: sendCommand("mac save");
 10753  0023B6  0E4C               	movlw	low STR_152
 10754  0023B8  0100               	movlb	0	; () banked
 10755  0023BA  6F61               	movwf	sendCommand@string& (0+255),b
 10756  0023BC  0E7F               	movlw	high STR_152
 10757  0023BE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10758  0023C0  ECB2  F029         	call	_sendCommand	;wreg free
 10759  0023C4  0012               	return		;funcret
 10760  0023C6                     __end_of_MOTEapp_SetDataRateSetting:
 10761                           	opt stack 0
 10762                           tblptru	equ	0xFF8
 10763                           tblptrh	equ	0xFF7
 10764                           tblptrl	equ	0xFF6
 10765                           tablat	equ	0xFF5
 10766                           prodh	equ	0xFF4
 10767                           prodl	equ	0xFF3
 10768                           intcon	equ	0xFF2
 10769                           intcon3	equ	0xFF0
 10770                           postinc0	equ	0xFEE
 10771                           wreg	equ	0xFE8
 10772                           indf1	equ	0xFE7
 10773                           postdec1	equ	0xFE5
 10774                           fsr1h	equ	0xFE2
 10775                           fsr1l	equ	0xFE1
 10776                           indf2	equ	0xFDF
 10777                           fsr2h	equ	0xFDA
 10778                           fsr2l	equ	0xFD9
 10779                           status	equ	0xFD8
 10780                           
 10781 ;; *************** function _moteJoiningProcess *****************
 10782 ;; Defined at:
 10783 ;;		line 294 in file "../Includes/Board/MOTEapp.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  messageReady    1    wreg     unsigned char 
 10786 ;;  changeStates    1   23[BANK0 ] unsigned char 
 10787 ;;  selectButton    1   24[BANK0 ] unsigned char 
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;  messageReady    1   28[BANK0 ] unsigned char 
 10790 ;;  readDataRate    1   26[BANK0 ] unsigned char 
 10791 ;;  joiningCompl    1   27[BANK0 ] unsigned char 
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      enum E6062
 10794 ;; Registers used:
 10795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10801 ;;      Params:         0       2       0       0       0       0       0       0       0
 10802 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10803 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10804 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10805 ;;Total ram usage:        6 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:   16
 10808 ;; This function calls:
 10809 ;;		_DATAEE_WriteByte
 10810 ;;		_moteApp_delayms
 10811 ;;		_oled_clear
 10812 ;;		_oled_putString
 10813 ;;		_sendCommand
 10814 ;;		_strcmp
 10815 ;;		_strncmp
 10816 ;; This function is called by:
 10817 ;;		_moteHandler
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text25
 10822  000FEA                     __ptext25:
 10823                           	opt stack 0
 10824  000FEA                     _moteJoiningProcess:
 10825                           	opt stack 13
 10826                           
 10827                           ;incstack = 0
 10828                           ;moteJoiningProcess@messageReady stored from wreg
 10829  000FEA  0100               	movlb	0	; () banked
 10830  000FEC  6F7C               	movwf	moteJoiningProcess@messageReady& (0+255),b
 10831                           
 10832                           ;MOTEapp.c: 296: bool joiningComplete = 0;
 10833  000FEE  0E00               	movlw	0
 10834  000FF0  0100               	movlb	0	; () banked
 10835  000FF2  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 10836                           
 10837                           ;MOTEapp.c: 298: switch (activeState)
 10838  000FF4  D22E               	goto	l313
 10839  000FF6                     
 10840                           ; BSR set to: 0
 10841                           ;MOTEapp.c: 301: while(1);
 10842  000FF6  D7FF               	goto	l314
 10843  000FF8                     
 10844                           ;MOTEapp.c: 304: sendCommand("sys reset");
 10845  000FF8  0E0C               	movlw	low STR_13
 10846  000FFA  0100               	movlb	0	; () banked
 10847  000FFC  6F61               	movwf	sendCommand@string& (0+255),b
 10848  000FFE  0E7F               	movlw	high STR_13
 10849  001000  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10850  001002  ECB2  F029         	call	_sendCommand	;wreg free
 10851  001006                     l9794:
 10852                           
 10853                           ;MOTEapp.c: 305: activeState = moteReset;
 10854  001006  0E01               	movlw	1
 10855  001008  D1D3               	goto	L21
 10856  00100A                     
 10857                           ; BSR set to: 0
 10858                           ;MOTEapp.c: 308: if (selectButton)
 10859                           
 10860                           ; BSR set to: 0
 10861  00100A  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 10862  00100C  B4D8               	btfsc	status,2,c
 10863  00100E  D002               	goto	l321
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;MOTEapp.c: 309: {
 10867                           ;MOTEapp.c: 310: activeState = moteComFailure;
 10868  001010  0E0A               	movlw	10
 10869  001012  6FF3               	movwf	_activeState& (0+255),b
 10870  001014                     l321:
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;MOTEapp.c: 311: }
 10874                           ;MOTEapp.c: 312: if ( messageReady )
 10875  001014  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 10876  001016  B4D8               	btfsc	status,2,c
 10877  001018  D240               	goto	l318
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;MOTEapp.c: 313: {
 10881                           ;MOTEapp.c: 324: if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 10882  00101A  0E5A               	movlw	low _moduleResonseBuffer
 10883  00101C  6F60               	movwf	strncmp@s1& (0+255),b
 10884  00101E  0E01               	movlw	high _moduleResonseBuffer
 10885  001020  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 10886  001022  0EBE               	movlw	low STR_14
 10887  001024  6F62               	movwf	strncmp@s2& (0+255),b
 10888  001026  0E7F               	movlw	high STR_14
 10889  001028  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 10890  00102A  0E00               	movlw	0
 10891  00102C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 10892  00102E  0E04               	movlw	4
 10893  001030  6F64               	movwf	strncmp@len& (0+255),b
 10894  001032  EC6D  F022         	call	_strncmp	;wreg free
 10895  001036  0100               	movlb	0	; () banked
 10896  001038  5160               	movf	?_strncmp& (0+255),w,b
 10897  00103A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 10898  00103C  A4D8               	btfss	status,2,c
 10899  00103E  D027               	goto	l323
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;MOTEapp.c: 325: {
 10903                           ;MOTEapp.c: 326: rnModule = rn2903;
 10904  001040  0E01               	movlw	1
 10905  001042  6FF9               	movwf	_rnModule& (0+255),b
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;MOTEapp.c: 327: oled_clear();
 10909  001044  ECFF  F02A         	call	_oled_clear	;wreg free
 10910                           
 10911                           ;MOTEapp.c: 328: oled_putString(" Joining Method ",0,0);
 10912  001048  0E49               	movlw	low STR_15
 10913  00104A  0100               	movlb	0	; () banked
 10914  00104C  6F72               	movwf	oled_putString@string& (0+255),b
 10915  00104E  0E7B               	movlw	high STR_15
 10916  001050  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10917  001052  0E00               	movlw	0
 10918  001054  6F74               	movwf	oled_putString@station_dot& (0+255),b
 10919  001056  0E00               	movlw	0
 10920  001058  6F75               	movwf	oled_putString@start_page& (0+255),b
 10921  00105A  EC1B  F025         	call	_oled_putString	;wreg free
 10922                           
 10923                           ;MOTEapp.c: 329: oled_putString("<- ABP   OTAA ->", 0,2);
 10924  00105E  0E9E               	movlw	low STR_16
 10925  001060  0100               	movlb	0	; () banked
 10926  001062  6F72               	movwf	oled_putString@string& (0+255),b
 10927  001064  0E7B               	movlw	high STR_16
 10928  001066  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10929  001068  0E00               	movlw	0
 10930  00106A  6F74               	movwf	oled_putString@station_dot& (0+255),b
 10931  00106C  0E02               	movlw	2
 10932  00106E  6F75               	movwf	oled_putString@start_page& (0+255),b
 10933  001070  EC1B  F025         	call	_oled_putString	;wreg free
 10934                           
 10935                           ;MOTEapp.c: 330: oled_putString("  (S2)   (S3)   ", 0,3);
 10936  001074  0EF4               	movlw	low STR_17
 10937  001076  0100               	movlb	0	; () banked
 10938  001078  6F72               	movwf	oled_putString@string& (0+255),b
 10939  00107A  0E7A               	movlw	high STR_17
 10940  00107C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10941  00107E  0E00               	movlw	0
 10942  001080  6F74               	movwf	oled_putString@station_dot& (0+255),b
 10943  001082  0E03               	movlw	3
 10944  001084  6F75               	movwf	oled_putString@start_page& (0+255),b
 10945  001086  EC1B  F025         	call	_oled_putString	;wreg free
 10946                           
 10947                           ;MOTEapp.c: 331: activeState = moteJoinMethod;
 10948  00108A  0E02               	movlw	2
 10949  00108C  D191               	goto	L21
 10950  00108E                     l323:
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;MOTEapp.c: 333: else
 10954                           ;MOTEapp.c: 334: {
 10955                           ;MOTEapp.c: 335: sendCommand("sys reset");
 10956                           
 10957                           ; BSR set to: 0
 10958  00108E  0E0C               	movlw	low STR_13
 10959  001090  6F61               	movwf	sendCommand@string& (0+255),b
 10960  001092  0E7F               	movlw	high STR_13
 10961  001094  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10962  001096  ECB2  F029         	call	_sendCommand	;wreg free
 10963                           
 10964                           ;MOTEapp.c: 336: moteApp_delayms(25);
 10965  00109A  0E00               	movlw	0
 10966  00109C  0100               	movlb	0	; () banked
 10967  00109E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10968  0010A0  0E19               	movlw	25
 10969  0010A2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10970  0010A4  EC50  F029         	call	_moteApp_delayms	;wreg free
 10971                           
 10972                           ;MOTEapp.c: 337: activeState = moteStartup;
 10973  0010A8  0E00               	movlw	0
 10974  0010AA  D182               	goto	L21
 10975  0010AC                     
 10976                           ; BSR set to: 0
 10977                           ;MOTEapp.c: 342: if (changeStates)
 10978                           
 10979                           ; BSR set to: 0
 10980  0010AC  5177               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 10981  0010AE  B4D8               	btfsc	status,2,c
 10982  0010B0  D01A               	goto	l326
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;MOTEapp.c: 343: {
 10986                           ;MOTEapp.c: 344: oled_putString("  (S2)          ", 0,3);
 10987  0010B2  0EC1               	movlw	low STR_19
 10988  0010B4  6F72               	movwf	oled_putString@string& (0+255),b
 10989  0010B6  0E7A               	movlw	high STR_19
 10990  0010B8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10991  0010BA  0E00               	movlw	0
 10992  0010BC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 10993  0010BE  0E03               	movlw	3
 10994  0010C0  6F75               	movwf	oled_putString@start_page& (0+255),b
 10995  0010C2  EC1B  F025         	call	_oled_putString	;wreg free
 10996                           
 10997                           ;MOTEapp.c: 345: moteApp_delayms(500);
 10998  0010C6  0E01               	movlw	1
 10999  0010C8  0100               	movlb	0	; () banked
 11000  0010CA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11001  0010CC  0EF4               	movlw	244
 11002  0010CE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11003  0010D0  EC50  F029         	call	_moteApp_delayms	;wreg free
 11004                           
 11005                           ;MOTEapp.c: 346: sendCommand("mac join abp");
 11006  0010D4  0E21               	movlw	low STR_20
 11007  0010D6  0100               	movlb	0	; () banked
 11008  0010D8  6F61               	movwf	sendCommand@string& (0+255),b
 11009  0010DA  0E7E               	movlw	high STR_20
 11010  0010DC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11011  0010DE  ECB2  F029         	call	_sendCommand	;wreg free
 11012  0010E2                     l9828:
 11013                           
 11014                           ;MOTEapp.c: 347: activeState = moteCheckAbp;
 11015  0010E2  0E03               	movlw	3
 11016  0010E4  D165               	goto	L21
 11017  0010E6                     l326:
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;MOTEapp.c: 349: else if (selectButton)
 11021                           
 11022                           ; BSR set to: 0
 11023  0010E6  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 11024  0010E8  B4D8               	btfsc	status,2,c
 11025  0010EA  D1D7               	goto	l318
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;MOTEapp.c: 350: {
 11029                           ;MOTEapp.c: 351: oled_putString("         (S3)   ", 0,3);
 11030  0010EC  0EE3               	movlw	low STR_21
 11031  0010EE  6F72               	movwf	oled_putString@string& (0+255),b
 11032  0010F0  0E7A               	movlw	high STR_21
 11033  0010F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11034  0010F4  0E00               	movlw	0
 11035  0010F6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11036  0010F8  0E03               	movlw	3
 11037  0010FA  6F75               	movwf	oled_putString@start_page& (0+255),b
 11038  0010FC  EC1B  F025         	call	_oled_putString	;wreg free
 11039                           
 11040                           ;MOTEapp.c: 352: moteApp_delayms(500);
 11041  001100  0E01               	movlw	1
 11042  001102  0100               	movlb	0	; () banked
 11043  001104  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11044  001106  0EF4               	movlw	244
 11045  001108  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11046  00110A  EC50  F029         	call	_moteApp_delayms	;wreg free
 11047                           
 11048                           ;MOTEapp.c: 353: sendCommand("mac join otaa");
 11049  00110E  0E41               	movlw	low STR_22
 11050  001110  0100               	movlb	0	; () banked
 11051  001112  6F61               	movwf	sendCommand@string& (0+255),b
 11052  001114  0E7D               	movlw	high STR_22
 11053  001116  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11054  001118  ECB2  F029         	call	_sendCommand	;wreg free
 11055  00111C                     l9838:
 11056                           
 11057                           ;MOTEapp.c: 354: activeState = moteCheckOtaa;
 11058  00111C  0E05               	movlw	5
 11059  00111E  D148               	goto	L21
 11060  001120                     
 11061                           ; BSR set to: 0
 11062                           ;MOTEapp.c: 358: if ( messageReady )
 11063                           
 11064                           ; BSR set to: 0
 11065  001120  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11066  001122  B4D8               	btfsc	status,2,c
 11067  001124  D1BA               	goto	l318
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;MOTEapp.c: 359: {
 11071                           ;MOTEapp.c: 360: if(strcmp(moduleResonseBuffer, "ok") == 0)
 11072  001126  0E5A               	movlw	low _moduleResonseBuffer
 11073  001128  6F60               	movwf	strcmp@s1& (0+255),b
 11074  00112A  0E01               	movlw	high _moduleResonseBuffer
 11075  00112C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11076  00112E  0EF8               	movlw	low STR_23
 11077  001130  6F62               	movwf	strcmp@s2& (0+255),b
 11078  001132  0E7F               	movlw	high STR_23
 11079  001134  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11080  001136  EC5A  F027         	call	_strcmp	;wreg free
 11081  00113A  0100               	movlb	0	; () banked
 11082  00113C  5160               	movf	?_strcmp& (0+255),w,b
 11083  00113E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11084  001140  A4D8               	btfss	status,2,c
 11085  001142  D002               	goto	l331
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;MOTEapp.c: 361: {
 11089                           ;MOTEapp.c: 362: activeState = moteWaitAbp;
 11090  001144  0E04               	movlw	4
 11091  001146  D029               	goto	L12
 11092  001148                     l331:
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;MOTEapp.c: 364: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 11096                           
 11097                           ; BSR set to: 0
 11098  001148  0E5A               	movlw	low _moduleResonseBuffer
 11099  00114A  6F60               	movwf	strcmp@s1& (0+255),b
 11100  00114C  0E01               	movlw	high _moduleResonseBuffer
 11101  00114E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11102  001150  0E5D               	movlw	low STR_24
 11103  001152  6F62               	movwf	strcmp@s2& (0+255),b
 11104  001154  0E7D               	movlw	high STR_24
 11105  001156  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11106  001158  EC5A  F027         	call	_strcmp	;wreg free
 11107  00115C  0100               	movlb	0	; () banked
 11108  00115E  5160               	movf	?_strcmp& (0+255),w,b
 11109  001160  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11110  001162  A4D8               	btfss	status,2,c
 11111  001164  D01C               	goto	l333
 11112                           
 11113                           ; BSR set to: 0
 11114                           ;MOTEapp.c: 365: {
 11115                           ;MOTEapp.c: 366: oled_clear();
 11116  001166  ECFF  F02A         	call	_oled_clear	;wreg free
 11117                           
 11118                           ;MOTEapp.c: 367: oled_putString("Valid Keys",0,0);
 11119  00116A  0EC5               	movlw	low STR_25
 11120  00116C  0100               	movlb	0	; () banked
 11121  00116E  6F72               	movwf	oled_putString@string& (0+255),b
 11122  001170  0E7E               	movlw	high STR_25
 11123  001172  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11124  001174  0E00               	movlw	0
 11125  001176  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11126  001178  0E00               	movlw	0
 11127  00117A  6F75               	movwf	oled_putString@start_page& (0+255),b
 11128  00117C  EC1B  F025         	call	_oled_putString	;wreg free
 11129                           
 11130                           ;MOTEapp.c: 368: oled_putString("Required",0,1);
 11131  001180  0E3A               	movlw	low STR_26
 11132  001182  0100               	movlb	0	; () banked
 11133  001184  6F72               	movwf	oled_putString@string& (0+255),b
 11134  001186  0E7F               	movlw	high STR_26
 11135  001188  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11136  00118A  0E00               	movlw	0
 11137  00118C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11138  00118E  0E01               	movlw	1
 11139  001190  6F75               	movwf	oled_putString@start_page& (0+255),b
 11140  001192  EC1B  F025         	call	_oled_putString	;wreg free
 11141  001196                     l9854:
 11142                           
 11143                           ;MOTEapp.c: 369: activeState = moteNeedKeys;
 11144  001196  0E09               	movlw	9
 11145  001198  D10B               	goto	L21
 11146  00119A                     L12:
 11147  00119A  6FF3               	movwf	_activeState& (0+255),b
 11148                           
 11149                           ;MOTEapp.c: 370: }
 11150  00119C  D17E               	goto	l318
 11151  00119E                     l333:
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;MOTEapp.c: 371: else
 11155                           ;MOTEapp.c: 372: {
 11156                           ;MOTEapp.c: 373: sendCommand("mac join abp");
 11157                           
 11158                           ; BSR set to: 0
 11159  00119E  0E21               	movlw	low STR_20
 11160  0011A0  6F61               	movwf	sendCommand@string& (0+255),b
 11161  0011A2  0E7E               	movlw	high STR_20
 11162  0011A4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11163  0011A6  ECB2  F029         	call	_sendCommand	;wreg free
 11164  0011AA  D79B               	goto	l9828
 11165  0011AC                     
 11166                           ; BSR set to: 0
 11167                           ;MOTEapp.c: 379: if ( messageReady )
 11168                           
 11169                           ; BSR set to: 0
 11170  0011AC  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11171  0011AE  B4D8               	btfsc	status,2,c
 11172  0011B0  D174               	goto	l318
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;MOTEapp.c: 380: {
 11176                           ;MOTEapp.c: 381: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 11177  0011B2  0E5A               	movlw	low _moduleResonseBuffer
 11178  0011B4  6F60               	movwf	strcmp@s1& (0+255),b
 11179  0011B6  0E01               	movlw	high _moduleResonseBuffer
 11180  0011B8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11181  0011BA  0E43               	movlw	low STR_28
 11182  0011BC  6F62               	movwf	strcmp@s2& (0+255),b
 11183  0011BE  0E7F               	movlw	high STR_28
 11184  0011C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11185  0011C2  EC5A  F027         	call	_strcmp	;wreg free
 11186  0011C6  0100               	movlb	0	; () banked
 11187  0011C8  5160               	movf	?_strcmp& (0+255),w,b
 11188  0011CA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11189  0011CC  A4D8               	btfss	status,2,c
 11190  0011CE  D01A               	goto	l337
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;MOTEapp.c: 382: {
 11194                           ;MOTEapp.c: 383: oled_clear();
 11195  0011D0  ECFF  F02A         	call	_oled_clear	;wreg free
 11196                           
 11197                           ;MOTEapp.c: 384: oled_putString("ABP Join ",0,0);
 11198  0011D4  0EE4               	movlw	low STR_29
 11199  0011D6  0100               	movlb	0	; () banked
 11200  0011D8  6F72               	movwf	oled_putString@string& (0+255),b
 11201  0011DA  0E7E               	movlw	high STR_29
 11202  0011DC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11203  0011DE  0E00               	movlw	0
 11204  0011E0  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11205  0011E2  0E00               	movlw	0
 11206  0011E4  6F75               	movwf	oled_putString@start_page& (0+255),b
 11207  0011E6  EC1B  F025         	call	_oled_putString	;wreg free
 11208                           
 11209                           ;MOTEapp.c: 385: oled_putString("Successful",0,1);
 11210  0011EA  0EAF               	movlw	low STR_30
 11211  0011EC  0100               	movlb	0	; () banked
 11212  0011EE  6F72               	movwf	oled_putString@string& (0+255),b
 11213  0011F0  0E7E               	movlw	high STR_30
 11214  0011F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11215  0011F4  0E00               	movlw	0
 11216  0011F6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11217  0011F8  0E01               	movlw	1
 11218  0011FA  6F75               	movwf	oled_putString@start_page& (0+255),b
 11219  0011FC  EC1B  F025         	call	_oled_putString	;wreg free
 11220  001200                     l9870:
 11221                           
 11222                           ;MOTEapp.c: 386: activeState = moteJoined;
 11223  001200  0E07               	movlw	7
 11224  001202  D0D6               	goto	L21
 11225  001204                     l337:
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;MOTEapp.c: 388: else
 11229                           ;MOTEapp.c: 389: {
 11230                           ;MOTEapp.c: 390: sendCommand("mac reset");
 11231                           
 11232                           ; BSR set to: 0
 11233  001204  0E02               	movlw	low STR_31
 11234  001206  6F61               	movwf	sendCommand@string& (0+255),b
 11235  001208  0E7F               	movlw	high STR_31
 11236  00120A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11237  00120C  ECB2  F029         	call	_sendCommand	;wreg free
 11238  001210  D6FA               	goto	l9794
 11239  001212                     
 11240                           ; BSR set to: 0
 11241                           ;MOTEapp.c: 397: if ( messageReady )
 11242                           
 11243                           ; BSR set to: 0
 11244  001212  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11245  001214  B4D8               	btfsc	status,2,c
 11246  001216  D141               	goto	l318
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;MOTEapp.c: 398: {
 11250                           ;MOTEapp.c: 399: if(strcmp(moduleResonseBuffer, "ok") == 0)
 11251  001218  0E5A               	movlw	low _moduleResonseBuffer
 11252  00121A  6F60               	movwf	strcmp@s1& (0+255),b
 11253  00121C  0E01               	movlw	high _moduleResonseBuffer
 11254  00121E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11255  001220  0EF8               	movlw	low STR_23
 11256  001222  6F62               	movwf	strcmp@s2& (0+255),b
 11257  001224  0E7F               	movlw	high STR_23
 11258  001226  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11259  001228  EC5A  F027         	call	_strcmp	;wreg free
 11260  00122C  0100               	movlb	0	; () banked
 11261  00122E  5160               	movf	?_strcmp& (0+255),w,b
 11262  001230  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11263  001232  A4D8               	btfss	status,2,c
 11264  001234  D002               	goto	l341
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;MOTEapp.c: 400: {
 11268                           ;MOTEapp.c: 401: activeState = moteWaitOtaa;
 11269  001236  0E06               	movlw	6
 11270  001238  D7B0               	goto	L12
 11271  00123A                     l341:
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;MOTEapp.c: 403: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 11275                           
 11276                           ; BSR set to: 0
 11277  00123A  0E5A               	movlw	low _moduleResonseBuffer
 11278  00123C  6F60               	movwf	strcmp@s1& (0+255),b
 11279  00123E  0E01               	movlw	high _moduleResonseBuffer
 11280  001240  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11281  001242  0E5D               	movlw	low STR_24
 11282  001244  6F62               	movwf	strcmp@s2& (0+255),b
 11283  001246  0E7D               	movlw	high STR_24
 11284  001248  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11285  00124A  EC5A  F027         	call	_strcmp	;wreg free
 11286  00124E  0100               	movlb	0	; () banked
 11287  001250  5160               	movf	?_strcmp& (0+255),w,b
 11288  001252  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11289  001254  A4D8               	btfss	status,2,c
 11290  001256  D019               	goto	l343
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;MOTEapp.c: 404: {
 11294                           ;MOTEapp.c: 405: oled_clear();
 11295  001258  ECFF  F02A         	call	_oled_clear	;wreg free
 11296                           
 11297                           ;MOTEapp.c: 406: oled_putString("Valid Keys",0,0);
 11298  00125C  0EC5               	movlw	low STR_25
 11299  00125E  0100               	movlb	0	; () banked
 11300  001260  6F72               	movwf	oled_putString@string& (0+255),b
 11301  001262  0E7E               	movlw	high STR_25
 11302  001264  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11303  001266  0E00               	movlw	0
 11304  001268  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11305  00126A  0E00               	movlw	0
 11306  00126C  6F75               	movwf	oled_putString@start_page& (0+255),b
 11307  00126E  EC1B  F025         	call	_oled_putString	;wreg free
 11308                           
 11309                           ;MOTEapp.c: 407: oled_putString("Required",0,1);
 11310  001272  0E3A               	movlw	low STR_26
 11311  001274  0100               	movlb	0	; () banked
 11312  001276  6F72               	movwf	oled_putString@string& (0+255),b
 11313  001278  0E7F               	movlw	high STR_26
 11314  00127A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11315  00127C  0E00               	movlw	0
 11316  00127E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11317  001280  0E01               	movlw	1
 11318  001282  6F75               	movwf	oled_putString@start_page& (0+255),b
 11319  001284  EC1B  F025         	call	_oled_putString	;wreg free
 11320  001288  D786               	goto	l9854
 11321  00128A                     l343:
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;MOTEapp.c: 410: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 11325                           
 11326                           ; BSR set to: 0
 11327  00128A  0E5A               	movlw	low _moduleResonseBuffer
 11328  00128C  6F60               	movwf	strcmp@s1& (0+255),b
 11329  00128E  0E01               	movlw	high _moduleResonseBuffer
 11330  001290  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11331  001292  0E4F               	movlw	low STR_36
 11332  001294  6F62               	movwf	strcmp@s2& (0+255),b
 11333  001296  0E7D               	movlw	high STR_36
 11334  001298  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11335  00129A  EC5A  F027         	call	_strcmp	;wreg free
 11336  00129E  0100               	movlb	0	; () banked
 11337  0012A0  5160               	movf	?_strcmp& (0+255),w,b
 11338  0012A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11339  0012A4  A4D8               	btfss	status,2,c
 11340  0012A6  D007               	goto	l345
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;MOTEapp.c: 411: {
 11344                           ;MOTEapp.c: 412: sendCommand("mac join otaa");
 11345  0012A8  0E41               	movlw	low STR_22
 11346  0012AA  6F61               	movwf	sendCommand@string& (0+255),b
 11347  0012AC  0E7D               	movlw	high STR_22
 11348  0012AE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11349  0012B0  ECB2  F029         	call	_sendCommand	;wreg free
 11350  0012B4  D733               	goto	l9838
 11351  0012B6                     l345:
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;MOTEapp.c: 415: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 11355                           
 11356                           ; BSR set to: 0
 11357  0012B6  0E5A               	movlw	low _moduleResonseBuffer
 11358  0012B8  6F60               	movwf	strcmp@s1& (0+255),b
 11359  0012BA  0E01               	movlw	high _moduleResonseBuffer
 11360  0012BC  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11361  0012BE  0EA4               	movlw	low STR_38
 11362  0012C0  6F62               	movwf	strcmp@s2& (0+255),b
 11363  0012C2  0E7E               	movlw	high STR_38
 11364  0012C4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11365  0012C6  EC5A  F027         	call	_strcmp	;wreg free
 11366  0012CA  D064               	goto	L19
 11367  0012CC                     
 11368                           ; BSR set to: 0
 11369                           ;MOTEapp.c: 422: if ( messageReady )
 11370                           
 11371                           ; BSR set to: 0
 11372  0012CC  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11373  0012CE  B4D8               	btfsc	status,2,c
 11374  0012D0  D0E4               	goto	l318
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;MOTEapp.c: 423: {
 11378                           ;MOTEapp.c: 424: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 11379  0012D2  0E5A               	movlw	low _moduleResonseBuffer
 11380  0012D4  6F60               	movwf	strcmp@s1& (0+255),b
 11381  0012D6  0E01               	movlw	high _moduleResonseBuffer
 11382  0012D8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11383  0012DA  0E43               	movlw	low STR_28
 11384  0012DC  6F62               	movwf	strcmp@s2& (0+255),b
 11385  0012DE  0E7F               	movlw	high STR_28
 11386  0012E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11387  0012E2  EC5A  F027         	call	_strcmp	;wreg free
 11388  0012E6  0100               	movlb	0	; () banked
 11389  0012E8  5160               	movf	?_strcmp& (0+255),w,b
 11390  0012EA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11391  0012EC  A4D8               	btfss	status,2,c
 11392  0012EE  D019               	goto	l350
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;MOTEapp.c: 425: {
 11396                           ;MOTEapp.c: 426: oled_clear();
 11397  0012F0  ECFF  F02A         	call	_oled_clear	;wreg free
 11398                           
 11399                           ;MOTEapp.c: 427: oled_putString("OTAA Join ",0,0);
 11400  0012F4  0E99               	movlw	low STR_40
 11401  0012F6  0100               	movlb	0	; () banked
 11402  0012F8  6F72               	movwf	oled_putString@string& (0+255),b
 11403  0012FA  0E7E               	movlw	high STR_40
 11404  0012FC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11405  0012FE  0E00               	movlw	0
 11406  001300  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11407  001302  0E00               	movlw	0
 11408  001304  6F75               	movwf	oled_putString@start_page& (0+255),b
 11409  001306  EC1B  F025         	call	_oled_putString	;wreg free
 11410                           
 11411                           ;MOTEapp.c: 428: oled_putString("Successful",0,1);
 11412  00130A  0EAF               	movlw	low STR_30
 11413  00130C  0100               	movlb	0	; () banked
 11414  00130E  6F72               	movwf	oled_putString@string& (0+255),b
 11415  001310  0E7E               	movlw	high STR_30
 11416  001312  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11417  001314  0E00               	movlw	0
 11418  001316  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11419  001318  0E01               	movlw	1
 11420  00131A  6F75               	movwf	oled_putString@start_page& (0+255),b
 11421  00131C  EC1B  F025         	call	_oled_putString	;wreg free
 11422  001320  D76F               	goto	l9870
 11423  001322                     l350:
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;MOTEapp.c: 431: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 11427                           
 11428                           ; BSR set to: 0
 11429  001322  0E5A               	movlw	low _moduleResonseBuffer
 11430  001324  6F60               	movwf	strcmp@s1& (0+255),b
 11431  001326  0E01               	movlw	high _moduleResonseBuffer
 11432  001328  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11433  00132A  0E9B               	movlw	low STR_42
 11434  00132C  6F62               	movwf	strcmp@s2& (0+255),b
 11435  00132E  0E7F               	movlw	high STR_42
 11436  001330  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11437  001332  EC5A  F027         	call	_strcmp	;wreg free
 11438  001336  0100               	movlb	0	; () banked
 11439  001338  5160               	movf	?_strcmp& (0+255),w,b
 11440  00133A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11441  00133C  A4D8               	btfss	status,2,c
 11442  00133E  D020               	goto	l352
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;MOTEapp.c: 432: {
 11446                           ;MOTEapp.c: 433: oled_clear();
 11447  001340  ECFF  F02A         	call	_oled_clear	;wreg free
 11448                           
 11449                           ;MOTEapp.c: 434: oled_putString("OTAA Join",1,0);
 11450  001344  0EF8               	movlw	low STR_43
 11451  001346  0100               	movlb	0	; () banked
 11452  001348  6F72               	movwf	oled_putString@string& (0+255),b
 11453  00134A  0E7E               	movlw	high STR_43
 11454  00134C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11455  00134E  0E01               	movlw	1
 11456  001350  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11457  001352  0E00               	movlw	0
 11458  001354  6F75               	movwf	oled_putString@start_page& (0+255),b
 11459  001356  EC1B  F025         	call	_oled_putString	;wreg free
 11460                           
 11461                           ;MOTEapp.c: 435: oled_putString("Denied",2,1);
 11462  00135A  0E94               	movlw	low STR_44
 11463  00135C  0100               	movlb	0	; () banked
 11464  00135E  6F72               	movwf	oled_putString@string& (0+255),b
 11465  001360  0E7F               	movlw	high STR_44
 11466  001362  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 11467  001364  0E02               	movlw	2
 11468  001366  6F74               	movwf	oled_putString@station_dot& (0+255),b
 11469  001368  0E01               	movlw	1
 11470  00136A  6F75               	movwf	oled_putString@start_page& (0+255),b
 11471  00136C  EC1B  F025         	call	_oled_putString	;wreg free
 11472                           
 11473                           ;MOTEapp.c: 436: sendCommand("mac join otaa");
 11474  001370  0E41               	movlw	low STR_22
 11475  001372  0100               	movlb	0	; () banked
 11476  001374  6F61               	movwf	sendCommand@string& (0+255),b
 11477  001376  0E7D               	movlw	high STR_22
 11478  001378  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11479  00137A  ECB2  F029         	call	_sendCommand	;wreg free
 11480  00137E  D6CE               	goto	l9838
 11481  001380                     l352:
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;MOTEapp.c: 439: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 11485                           
 11486                           ; BSR set to: 0
 11487  001380  0E5A               	movlw	low _moduleResonseBuffer
 11488  001382  6F60               	movwf	strcmp@s1& (0+255),b
 11489  001384  0E01               	movlw	high _moduleResonseBuffer
 11490  001386  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11491  001388  0EA4               	movlw	low STR_38
 11492  00138A  6F62               	movwf	strcmp@s2& (0+255),b
 11493  00138C  0E7E               	movlw	high STR_38
 11494  00138E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11495  001390  EC5A  F027         	call	_strcmp	;wreg free
 11496  001394                     L19:
 11497  001394  0100               	movlb	0	; () banked
 11498  001396  5160               	movf	?_strcmp& (0+255),w,b
 11499  001398  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11500  00139A  A4D8               	btfss	status,2,c
 11501  00139C  D07E               	goto	l318
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;MOTEapp.c: 440: {
 11505                           ;MOTEapp.c: 441: activeState = moteStartup;
 11506  00139E  0E00               	movlw	0
 11507  0013A0  D6FC               	goto	L12
 11508  0013A2                     
 11509                           ; BSR set to: 0
 11510                           ;MOTEapp.c: 446: sendCommand("mac get dr");
 11511                           
 11512                           ; BSR set to: 0
 11513  0013A2  0EBA               	movlw	low STR_47
 11514  0013A4  6F61               	movwf	sendCommand@string& (0+255),b
 11515  0013A6  0E7E               	movlw	high STR_47
 11516  0013A8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11517  0013AA  ECB2  F029         	call	_sendCommand	;wreg free
 11518  0013AE  D01A               	goto	l9940
 11519  0013B0                     L21:
 11520  0013B0  0100               	movlb	0	; () banked
 11521  0013B2  D6F3               	goto	L12
 11522  0013B4                     
 11523                           ; BSR set to: 0
 11524                           ;MOTEapp.c: 450: if ( messageReady )
 11525                           
 11526                           ; BSR set to: 0
 11527  0013B4  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11528  0013B6  B4D8               	btfsc	status,2,c
 11529  0013B8  D070               	goto	l318
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;MOTEapp.c: 451: {
 11533                           ;MOTEapp.c: 452: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 11534  0013BA  0E5A               	movlw	low _moduleResonseBuffer
 11535  0013BC  6F60               	movwf	strcmp@s1& (0+255),b
 11536  0013BE  0E01               	movlw	high _moduleResonseBuffer
 11537  0013C0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 11538  0013C2  0E4F               	movlw	low STR_36
 11539  0013C4  6F62               	movwf	strcmp@s2& (0+255),b
 11540  0013C6  0E7D               	movlw	high STR_36
 11541  0013C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 11542  0013CA  EC5A  F027         	call	_strcmp	;wreg free
 11543  0013CE  0100               	movlb	0	; () banked
 11544  0013D0  5160               	movf	?_strcmp& (0+255),w,b
 11545  0013D2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 11546  0013D4  A4D8               	btfss	status,2,c
 11547  0013D6  D008               	goto	l358
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;MOTEapp.c: 453: {
 11551                           ;MOTEapp.c: 454: sendCommand("mac get dr");
 11552  0013D8  0EBA               	movlw	low STR_47
 11553  0013DA  6F61               	movwf	sendCommand@string& (0+255),b
 11554  0013DC  0E7E               	movlw	high STR_47
 11555  0013DE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11556  0013E0  ECB2  F029         	call	_sendCommand	;wreg free
 11557  0013E4                     l9940:
 11558                           
 11559                           ;MOTEapp.c: 455: activeState = moteGetDr;
 11560  0013E4  0E08               	movlw	8
 11561  0013E6  D7E4               	goto	L21
 11562  0013E8                     l358:
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;MOTEapp.c: 457: else
 11566                           ;MOTEapp.c: 458: {
 11567                           ;MOTEapp.c: 459: uint8_t readDataRate;
 11568                           ;MOTEapp.c: 460: readDataRate = moduleResonseBuffer[0] - '0';
 11569                           
 11570                           ; BSR set to: 0
 11571  0013E8  0101               	movlb	1	; () banked
 11572  0013EA  515A               	movf	_moduleResonseBuffer& (0+255),w,b
 11573  0013EC  0FD0               	addlw	208
 11574  0013EE  0100               	movlb	0	; () banked
 11575  0013F0  6F7A               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;MOTEapp.c: 461: dataRateValue = readDataRate;
 11579  0013F2  C07A  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;MOTEapp.c: 462: joiningComplete = 1;
 11583  0013F6  0E01               	movlw	1
 11584  0013F8  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;MOTEapp.c: 463: }
 11588                           ;MOTEapp.c: 464: }
 11589                           ;MOTEapp.c: 465: break;
 11590                           
 11591                           ; BSR set to: 0
 11592  0013FA  D04F               	goto	l318
 11593  0013FC                     
 11594                           ; BSR set to: 0
 11595                           ;MOTEapp.c: 467: if (selectButton)
 11596                           
 11597                           ; BSR set to: 0
 11598  0013FC  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 11599  0013FE  B4D8               	btfsc	status,2,c
 11600  001400  D04C               	goto	l318
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;MOTEapp.c: 468: {
 11604                           ;MOTEapp.c: 469: activeState = moteComFailure;
 11605  001402  0E0A               	movlw	10
 11606  001404  D6CA               	goto	L12
 11607  001406                     
 11608                           ; BSR set to: 0
 11609                           ;MOTEapp.c: 474: DATAEE_WriteByte(0x00, 0x00);
 11610                           
 11611                           ; BSR set to: 0
 11612  001406  0E00               	movlw	0
 11613  001408  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 11614  00140A  0E00               	movlw	0
 11615  00140C  EC8C  F028         	call	_DATAEE_WriteByte
 11616  001410  B281               	btfsc	3969,1,c	;volatile
 11617  001412  D002               	goto	u8810
 11618  001414  A081               	btfss	3969,0,c	;volatile
 11619  001416  D7FC               	goto	l364
 11620  001418                     u8810:
 11621                           
 11622                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 11623  001418  0EFA               	movlw	250
 11624  00141A  0100               	movlb	0	; () banked
 11625  00141C  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 11626  00141E  0E58               	movlw	88
 11627  001420                     u10677:
 11628  001420  2EE8               	decfsz	wreg,f,c
 11629  001422  D7FE               	bra	u10677
 11630  001424  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 11631  001426  D7FC               	bra	u10677
 11632  001428  F000               	nop	
 11633                           
 11634                           ;MOTEapp.c: 477: _delay((unsigned long)((16)*(48000000/4000.0)));
 11635  00142A  0EFA               	movlw	250
 11636  00142C  0100               	movlb	0	; () banked
 11637  00142E  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 11638  001430  0E58               	movlw	88
 11639  001432                     u10687:
 11640  001432  2EE8               	decfsz	wreg,f,c
 11641  001434  D7FE               	bra	u10687
 11642  001436  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 11643  001438  D7FC               	bra	u10687
 11644  00143A  F000               	nop	
 11645                           
 11646                           ;MOTEapp.c: 478: _delay((unsigned long)((16)*(48000000/4000.0)));
 11647  00143C  0EFA               	movlw	250
 11648  00143E  0100               	movlb	0	; () banked
 11649  001440  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 11650  001442  0E58               	movlw	88
 11651  001444                     u10697:
 11652  001444  2EE8               	decfsz	wreg,f,c
 11653  001446  D7FE               	bra	u10697
 11654  001448  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 11655  00144A  D7FC               	bra	u10697
 11656  00144C  F000               	nop	
 11657  00144E  00FF               	reset		;# 
 11658                           
 11659                           ;MOTEapp.c: 482: }
 11660                           
 11661                           ;MOTEapp.c: 481: break;
 11662  001450  D024               	goto	l318
 11663  001452                     l313:
 11664  001452  0100               	movlb	0	; () banked
 11665  001454  51F3               	movf	_activeState& (0+255),w,b
 11666                           
 11667                           ; Switch size 1, requested type "space"
 11668                           ; Number of cases is 11, Range of values is 0 to 10
 11669                           ; switch strategies available:
 11670                           ; Name         Instructions Cycles
 11671                           ; simple_byte           34    18 (average)
 11672                           ;	Chosen strategy is simple_byte
 11673  001456  0A00               	xorlw	0	; case 0
 11674  001458  B4D8               	btfsc	status,2,c
 11675  00145A  D5CE               	goto	l319
 11676  00145C  0A01               	xorlw	1	; case 1
 11677  00145E  B4D8               	btfsc	status,2,c
 11678  001460  D5D4               	goto	l320
 11679  001462  0A03               	xorlw	3	; case 2
 11680  001464  B4D8               	btfsc	status,2,c
 11681  001466  D622               	goto	l325
 11682  001468  0A01               	xorlw	1	; case 3
 11683  00146A  B4D8               	btfsc	status,2,c
 11684  00146C  D659               	goto	l329
 11685  00146E  0A07               	xorlw	7	; case 4
 11686  001470  B4D8               	btfsc	status,2,c
 11687  001472  D69C               	goto	l335
 11688  001474  0A01               	xorlw	1	; case 5
 11689  001476  B4D8               	btfsc	status,2,c
 11690  001478  D6CC               	goto	l339
 11691  00147A  0A03               	xorlw	3	; case 6
 11692  00147C  B4D8               	btfsc	status,2,c
 11693  00147E  D726               	goto	l348
 11694  001480  0A01               	xorlw	1	; case 7
 11695  001482  B4D8               	btfsc	status,2,c
 11696  001484  D78E               	goto	l355
 11697  001486  0A0F               	xorlw	15	; case 8
 11698  001488  B4D8               	btfsc	status,2,c
 11699  00148A  D794               	goto	l356
 11700  00148C  0A01               	xorlw	1	; case 9
 11701  00148E  B4D8               	btfsc	status,2,c
 11702  001490  D7B5               	goto	l360
 11703  001492  0A03               	xorlw	3	; case 10
 11704  001494  B4D8               	btfsc	status,2,c
 11705  001496  D7B7               	goto	l362
 11706  001498  D5AE               	goto	l314
 11707  00149A                     l318:
 11708                           
 11709                           ;MOTEapp.c: 483: return joiningComplete;
 11710                           
 11711                           ; BSR set to: 0
 11712  00149A  0100               	movlb	0	; () banked
 11713  00149C  517B               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 11714  00149E  0012               	return	
 11715  0014A0                     __end_of_moteJoiningProcess:
 11716                           	opt stack 0
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           intcon	equ	0xFF2
 11724                           intcon3	equ	0xFF0
 11725                           postinc0	equ	0xFEE
 11726                           wreg	equ	0xFE8
 11727                           indf1	equ	0xFE7
 11728                           postdec1	equ	0xFE5
 11729                           fsr1h	equ	0xFE2
 11730                           fsr1l	equ	0xFE1
 11731                           indf2	equ	0xFDF
 11732                           fsr2h	equ	0xFDA
 11733                           fsr2l	equ	0xFD9
 11734                           status	equ	0xFD8
 11735                           
 11736 ;; *************** function _strncmp *****************
 11737 ;; Defined at:
 11738 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 11741 ;;		 -> moduleResonseBuffer(64), 
 11742 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 11743 ;;		 -> STR_76(7), STR_74(7), STR_72(7), STR_69(7), 
 11744 ;;		 -> STR_14(5), 
 11745 ;;  len             2    4[BANK0 ] unsigned int 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  2    0[BANK0 ] int 
 11750 ;; Registers used:
 11751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11757 ;;      Params:         0       6       0       0       0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11759 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11760 ;;      Totals:         0       9       0       0       0       0       0       0       0
 11761 ;;Total ram usage:        9 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:   11
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_moteJoiningProcess
 11768 ;;		_moteRunningProcess
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text26
 11773  0044DA                     __ptext26:
 11774                           	opt stack 0
 11775  0044DA                     _strncmp:
 11776                           	opt stack 17
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;incstack = 0
 11780  0044DA  D035               	goto	l2667
 11781  0044DC                     l9094:
 11782  0044DC  C060  FFD9         	movff	strncmp@s1,fsr2l
 11783  0044E0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 11784  0044E4  50DF               	movf	indf2,w,c
 11785  0044E6  B4D8               	btfsc	status,2,c
 11786  0044E8  D010               	goto	u7730
 11787  0044EA  C060  FFD9         	movff	strncmp@s1,fsr2l
 11788  0044EE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 11789  0044F2  50DF               	movf	indf2,w,c
 11790  0044F4  0100               	movlb	0	; () banked
 11791  0044F6  6F66               	movwf	??_strncmp& (0+255),b
 11792  0044F8  C062  FFF6         	movff	strncmp@s2,tblptrl
 11793  0044FC  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 11794  004500                     	if	0	;tblptru may be non-zero
 11795  004500                     	endif
 11796  004500                     	if	0	;tblptru may be non-zero
 11797  004500                     	endif
 11798  004500  0008               	tblrd		*
 11799  004502  50F5               	movf	tablat,w,c
 11800  004504  1966               	xorwf	??_strncmp& (0+255),w,b
 11801  004506  B4D8               	btfsc	status,2,c
 11802  004508  D01A               	goto	l2669
 11803  00450A                     u7730:
 11804                           
 11805                           ; BSR set to: 0
 11806  00450A  C062  FFF6         	movff	strncmp@s2,tblptrl
 11807  00450E  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 11808  004512                     	if	0	;tblptru may be non-zero
 11809  004512                     	endif
 11810  004512                     	if	0	;tblptru may be non-zero
 11811  004512                     	endif
 11812  004512  0008               	tblrd		*
 11813  004514  50F5               	movf	tablat,w,c
 11814  004516  0100               	movlb	0	; () banked
 11815  004518  6F66               	movwf	??_strncmp& (0+255),b
 11816  00451A  6B67               	clrf	(??_strncmp+1)& (0+255),b
 11817  00451C  1F66               	comf	??_strncmp& (0+255),f,b
 11818  00451E  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 11819  004520  4B66               	infsnz	??_strncmp& (0+255),f,b
 11820  004522  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 11821  004524  C060  FFD9         	movff	strncmp@s1,fsr2l
 11822  004528  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 11823  00452C  50DF               	movf	indf2,w,c
 11824  00452E  6F68               	movwf	(??_strncmp+2)& (0+255),b
 11825  004530  5168               	movf	(??_strncmp+2)& (0+255),w,b
 11826  004532  2566               	addwf	??_strncmp& (0+255),w,b
 11827  004534  6F60               	movwf	?_strncmp& (0+255),b
 11828  004536  0E00               	movlw	0
 11829  004538  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 11830  00453A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 11831                           
 11832                           ; BSR set to: 0
 11833  00453C  0012               	return	
 11834  00453E                     l2669:
 11835                           
 11836                           ; BSR set to: 0
 11837                           
 11838                           ; BSR set to: 0
 11839  00453E  4B60               	infsnz	strncmp@s1& (0+255),f,b
 11840  004540  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 11841  004542  4B62               	infsnz	strncmp@s2& (0+255),f,b
 11842  004544  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 11843  004546                     l2667:
 11844                           
 11845                           ; BSR set to: 0
 11846  004546  0100               	movlb	0	; () banked
 11847  004548  0764               	decf	strncmp@len& (0+255),f,b
 11848  00454A  A0D8               	btfss	status,0,c
 11849  00454C  0765               	decf	(strncmp@len+1)& (0+255),f,b
 11850  00454E  2964               	incf	strncmp@len& (0+255),w,b
 11851  004550  E1C5               	bnz	l9094
 11852  004552  2965               	incf	(strncmp@len+1)& (0+255),w,b
 11853  004554  A4D8               	btfss	status,2,c
 11854  004556  D7C2               	goto	l2668
 11855                           
 11856                           ; BSR set to: 0
 11857                           
 11858                           ; BSR set to: 0
 11859  004558  0E00               	movlw	0
 11860  00455A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 11861  00455C  0E00               	movlw	0
 11862  00455E  6F60               	movwf	?_strncmp& (0+255),b
 11863  004560  0012               	return	
 11864  004562                     __end_of_strncmp:
 11865                           	opt stack 0
 11866                           tblptru	equ	0xFF8
 11867                           tblptrh	equ	0xFF7
 11868                           tblptrl	equ	0xFF6
 11869                           tablat	equ	0xFF5
 11870                           prodh	equ	0xFF4
 11871                           prodl	equ	0xFF3
 11872                           intcon	equ	0xFF2
 11873                           intcon3	equ	0xFF0
 11874                           postinc0	equ	0xFEE
 11875                           wreg	equ	0xFE8
 11876                           indf1	equ	0xFE7
 11877                           postdec1	equ	0xFE5
 11878                           fsr1h	equ	0xFE2
 11879                           fsr1l	equ	0xFE1
 11880                           indf2	equ	0xFDF
 11881                           fsr2h	equ	0xFDA
 11882                           fsr2l	equ	0xFD9
 11883                           status	equ	0xFD8
 11884                           
 11885 ;; *************** function _strcmp *****************
 11886 ;; Defined at:
 11887 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 11890 ;;		 -> moduleResonseBuffer(64), 
 11891 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 11892 ;;		 -> STR_68(3), STR_48(14), STR_46(11), STR_42(7), 
 11893 ;;		 -> STR_39(9), STR_38(11), STR_36(14), STR_33(14), 
 11894 ;;		 -> STR_32(3), STR_28(9), STR_24(14), STR_23(3), 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  r               1    5[BANK0 ] char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  2    0[BANK0 ] int 
 11899 ;; Registers used:
 11900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11906 ;;      Params:         0       4       0       0       0       0       0       0       0
 11907 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11908 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11909 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11910 ;;Total ram usage:        6 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:   11
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_moteJoiningProcess
 11917 ;;		_moteRunningProcess
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           	psect	text27
 11922  004EB4                     __ptext27:
 11923                           	opt stack 0
 11924  004EB4                     _strcmp:
 11925                           	opt stack 17
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;incstack = 0
 11929  004EB4  D005               	goto	l2659
 11930  004EB6  0100               	movlb	0	; () banked
 11931  004EB8  4B60               	infsnz	strcmp@s1& (0+255),f,b
 11932  004EBA  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 11933  004EBC  4B62               	infsnz	strcmp@s2& (0+255),f,b
 11934  004EBE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 11935  004EC0                     l2659:
 11936                           
 11937                           ; BSR set to: 0
 11938  004EC0  C060  FFD9         	movff	strcmp@s1,fsr2l
 11939  004EC4  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 11940  004EC8  50DF               	movf	indf2,w,c
 11941  004ECA  0100               	movlb	0	; () banked
 11942  004ECC  6F64               	movwf	??_strcmp& (0+255),b
 11943  004ECE  C062  FFF6         	movff	strcmp@s2,tblptrl
 11944  004ED2  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 11945  004ED6                     	if	0	;tblptru may be non-zero
 11946  004ED6                     	endif
 11947  004ED6                     	if	0	;tblptru may be non-zero
 11948  004ED6                     	endif
 11949  004ED6  0008               	tblrd		*
 11950  004ED8  50F5               	movf	tablat,w,c
 11951  004EDA  0800               	sublw	0
 11952  004EDC  2564               	addwf	??_strcmp& (0+255),w,b
 11953  004EDE  6F65               	movwf	strcmp@r& (0+255),b
 11954  004EE0  5165               	movf	strcmp@r& (0+255),w,b
 11955  004EE2  A4D8               	btfss	status,2,c
 11956  004EE4  D007               	goto	u7760
 11957                           
 11958                           ; BSR set to: 0
 11959  004EE6  C060  FFD9         	movff	strcmp@s1,fsr2l
 11960  004EEA  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 11961  004EEE  50DF               	movf	indf2,w,c
 11962  004EF0  A4D8               	btfss	status,2,c
 11963  004EF2  D7E1               	goto	l2660
 11964  004EF4                     u7760:
 11965                           
 11966                           ; BSR set to: 0
 11967                           
 11968                           ; BSR set to: 0
 11969                           
 11970                           ; BSR set to: 0
 11971  004EF4  5165               	movf	strcmp@r& (0+255),w,b
 11972  004EF6  6F60               	movwf	?_strcmp& (0+255),b
 11973  004EF8  6B61               	clrf	(?_strcmp+1)& (0+255),b
 11974  004EFA  BF60               	btfsc	?_strcmp& (0+255),7,b
 11975  004EFC  0761               	decf	(?_strcmp+1)& (0+255),f,b
 11976  004EFE  0012               	return	
 11977  004F00                     __end_of_strcmp:
 11978                           	opt stack 0
 11979                           tblptru	equ	0xFF8
 11980                           tblptrh	equ	0xFF7
 11981                           tblptrl	equ	0xFF6
 11982                           tablat	equ	0xFF5
 11983                           prodh	equ	0xFF4
 11984                           prodl	equ	0xFF3
 11985                           intcon	equ	0xFF2
 11986                           intcon3	equ	0xFF0
 11987                           postinc0	equ	0xFEE
 11988                           wreg	equ	0xFE8
 11989                           indf1	equ	0xFE7
 11990                           postdec1	equ	0xFE5
 11991                           fsr1h	equ	0xFE2
 11992                           fsr1l	equ	0xFE1
 11993                           indf2	equ	0xFDF
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998 ;; *************** function _DATAEE_WriteByte *****************
 11999 ;; Defined at:
 12000 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  bAdd            1    wreg     unsigned char 
 12003 ;;  bData           1    0[BANK0 ] unsigned char 
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;  bAdd            1    1[BANK0 ] unsigned char 
 12006 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12016 ;;      Params:         0       1       0       0       0       0       0       0       0
 12017 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12019 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12020 ;;Total ram usage:        3 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:   11
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_main
 12027 ;;		_moteJoiningProcess
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text28
 12032  005118                     __ptext28:
 12033                           	opt stack 0
 12034  005118                     _DATAEE_WriteByte:
 12035                           	opt stack 17
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;incstack = 0
 12039                           ;DATAEE_WriteByte@bAdd stored from wreg
 12040  005118  0100               	movlb	0	; () banked
 12041  00511A  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 12042                           
 12043                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 12044  00511C  0E00               	movlw	0
 12045  00511E  BEF2               	btfsc	intcon,7,c	;volatile
 12046  005120  0E01               	movlw	1
 12047  005122  0100               	movlb	0	; () banked
 12048  005124  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 12052  005126  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;memory.c: 171: EEDATA = bData;
 12056  00512A  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 12060  00512E  9EA6               	bcf	4006,7,c	;volsfr
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;memory.c: 173: EECON1bits.CFGS = 0;
 12064  005130  9CA6               	bcf	4006,6,c	;volsfr
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;memory.c: 174: EECON1bits.WREN = 1;
 12068  005132  84A6               	bsf	4006,2,c	;volsfr
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;memory.c: 175: INTCONbits.GIE = 0;
 12072  005134  9EF2               	bcf	intcon,7,c	;volatile
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;memory.c: 176: EECON2 = 0x55;
 12076  005136  0E55               	movlw	85
 12077  005138  6EA7               	movwf	4007,c	;volsfr
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;memory.c: 177: EECON2 = 0xAA;
 12081  00513A  0EAA               	movlw	170
 12082  00513C  6EA7               	movwf	4007,c	;volsfr
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;memory.c: 178: EECON1bits.WR = 1;
 12086  00513E  82A6               	bsf	4006,1,c	;volsfr
 12087  005140                     
 12088                           ; BSR set to: 0
 12089                           ;memory.c: 181: {
 12090  005140  B2A6               	btfsc	4006,1,c	;volsfr
 12091  005142  D7FE               	goto	l1364
 12092                           
 12093                           ;memory.c: 182: }
 12094                           ;memory.c: 184: EECON1bits.WREN = 0;
 12095  005144  94A6               	bcf	4006,2,c	;volsfr
 12096                           
 12097                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 12098  005146  0100               	movlb	0	; () banked
 12099  005148  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 12100  00514A  D002               	bra	u7615
 12101  00514C  9EF2               	bcf	intcon,7,c	;volatile
 12102  00514E  D001               	bra	u7616
 12103  005150                     u7615:
 12104  005150  8EF2               	bsf	intcon,7,c	;volatile
 12105  005152                     u7616:
 12106  005152  0012               	return		;funcret
 12107  005154                     __end_of_DATAEE_WriteByte:
 12108                           	opt stack 0
 12109                           tblptru	equ	0xFF8
 12110                           tblptrh	equ	0xFF7
 12111                           tblptrl	equ	0xFF6
 12112                           tablat	equ	0xFF5
 12113                           prodh	equ	0xFF4
 12114                           prodl	equ	0xFF3
 12115                           intcon	equ	0xFF2
 12116                           intcon3	equ	0xFF0
 12117                           postinc0	equ	0xFEE
 12118                           wreg	equ	0xFE8
 12119                           indf1	equ	0xFE7
 12120                           postdec1	equ	0xFE5
 12121                           fsr1h	equ	0xFE2
 12122                           fsr1l	equ	0xFE1
 12123                           indf2	equ	0xFDF
 12124                           fsr2h	equ	0xFDA
 12125                           fsr2l	equ	0xFD9
 12126                           status	equ	0xFD8
 12127                           
 12128 ;; *************** function _USBapp_exitCDCState *****************
 12129 ;; Defined at:
 12130 ;;		line 139 in file "../Includes/Board/USBapp.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  usbState        1    wreg     enum E5838
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;  usbState        1    0[BANK0 ] enum E5838
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12144 ;;      Params:         0       0       0       0       0       0       0       0       0
 12145 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12147 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12148 ;;Total ram usage:        1 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:   11
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_moteHandler
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           	psect	text29
 12159  00575C                     __ptext29:
 12160                           	opt stack 0
 12161  00575C                     _USBapp_exitCDCState:
 12162                           	opt stack 18
 12163                           
 12164                           ;incstack = 0
 12165                           ;USBapp_exitCDCState@usbState stored from wreg
 12166  00575C  0100               	movlb	0	; () banked
 12167  00575E  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 12168                           
 12169                           ;USBapp.c: 141: exitUSB = usbState;
 12170  005760  C060  F0F8         	movff	USBapp_exitCDCState@usbState,_exitUSB
 12171  005764  0012               	return		;funcret
 12172  005766                     __end_of_USBapp_exitCDCState:
 12173                           	opt stack 0
 12174                           tblptru	equ	0xFF8
 12175                           tblptrh	equ	0xFF7
 12176                           tblptrl	equ	0xFF6
 12177                           tablat	equ	0xFF5
 12178                           prodh	equ	0xFF4
 12179                           prodl	equ	0xFF3
 12180                           intcon	equ	0xFF2
 12181                           intcon3	equ	0xFF0
 12182                           postinc0	equ	0xFEE
 12183                           wreg	equ	0xFE8
 12184                           indf1	equ	0xFE7
 12185                           postdec1	equ	0xFE5
 12186                           fsr1h	equ	0xFE2
 12187                           fsr1l	equ	0xFE1
 12188                           indf2	equ	0xFDF
 12189                           fsr2h	equ	0xFDA
 12190                           fsr2l	equ	0xFD9
 12191                           status	equ	0xFD8
 12192                           
 12193 ;; *************** function _USBapp_exitCDC *****************
 12194 ;; Defined at:
 12195 ;;		line 134 in file "../Includes/Board/USBapp.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;		None
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;		None
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      enum E5902
 12202 ;; Registers used:
 12203 ;;		wreg, status,2
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12209 ;;      Params:         0       0       0       0       0       0       0       0       0
 12210 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12212 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12213 ;;Total ram usage:        0 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:   11
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_moteHandler
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text30
 12224  0057A0                     __ptext30:
 12225                           	opt stack 0
 12226  0057A0                     _USBapp_exitCDC:
 12227                           	opt stack 18
 12228                           
 12229                           ;USBapp.c: 136: return exitUSB;
 12230                           
 12231                           ;incstack = 0
 12232  0057A0  0100               	movlb	0	; () banked
 12233  0057A2  51F8               	movf	_exitUSB& (0+255),w,b
 12234  0057A4  0012               	return	
 12235  0057A6                     __end_of_USBapp_exitCDC:
 12236                           	opt stack 0
 12237                           tblptru	equ	0xFF8
 12238                           tblptrh	equ	0xFF7
 12239                           tblptrl	equ	0xFF6
 12240                           tablat	equ	0xFF5
 12241                           prodh	equ	0xFF4
 12242                           prodl	equ	0xFF3
 12243                           intcon	equ	0xFF2
 12244                           intcon3	equ	0xFF0
 12245                           postinc0	equ	0xFEE
 12246                           wreg	equ	0xFE8
 12247                           indf1	equ	0xFE7
 12248                           postdec1	equ	0xFE5
 12249                           fsr1h	equ	0xFE2
 12250                           fsr1l	equ	0xFE1
 12251                           indf2	equ	0xFDF
 12252                           fsr2h	equ	0xFDA
 12253                           fsr2l	equ	0xFD9
 12254                           status	equ	0xFD8
 12255                           
 12256 ;; *************** function _TMRapp_Handler *****************
 12257 ;; Defined at:
 12258 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0, cstack
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12272 ;;      Params:         0       0       0       0       0       0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12275 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12276 ;;Total ram usage:        0 bytes
 12277 ;; Hardware stack levels used:    1
 12278 ;; Hardware stack levels required when called:   12
 12279 ;; This function calls:
 12280 ;;		___almod
 12281 ;;		___lwmod
 12282 ;; This function is called by:
 12283 ;;		_moteHandler
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text31
 12288  002D62                     __ptext31:
 12289                           	opt stack 0
 12290  002D62                     _TMRapp_Handler:
 12291                           	opt stack 17
 12292                           
 12293                           ;TMRapp.c: 60: timerMsTickCount++;
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;incstack = 0
 12297  002D62  0100               	movlb	0	; () banked
 12298  002D64  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 12299  002D66  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 12303  002D68  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 12304  002D6C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12305  002D70  0E00               	movlw	0
 12306  002D72  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12307  002D74  0E0A               	movlw	10
 12308  002D76  6F62               	movwf	___lwmod@divisor& (0+255),b
 12309  002D78  ECCA  F027         	call	___lwmod	;wreg free
 12310  002D7C  0100               	movlb	0	; () banked
 12311  002D7E  5160               	movf	?___lwmod& (0+255),w,b
 12312  002D80  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12313  002D82  A4D8               	btfss	status,2,c
 12314  002D84  0012               	return	
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;TMRapp.c: 63: {
 12318                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 12319  002D86  83F7               	bsf	_appTimer& (0+255),1,b
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 12323  002D88  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 12324  002D8C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12325  002D90  0E00               	movlw	0
 12326  002D92  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12327  002D94  0E64               	movlw	100
 12328  002D96  6F62               	movwf	___lwmod@divisor& (0+255),b
 12329  002D98  ECCA  F027         	call	___lwmod	;wreg free
 12330  002D9C  0100               	movlb	0	; () banked
 12331  002D9E  5160               	movf	?___lwmod& (0+255),w,b
 12332  002DA0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12333  002DA2  A4D8               	btfss	status,2,c
 12334  002DA4  0012               	return	
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;TMRapp.c: 66: {
 12338                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 12339  002DA6  85F7               	bsf	_appTimer& (0+255),2,b
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 12343  002DA8  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 12344  002DAC  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12345  002DB0  0E03               	movlw	3
 12346  002DB2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12347  002DB4  0EE8               	movlw	232
 12348  002DB6  6F62               	movwf	___lwmod@divisor& (0+255),b
 12349  002DB8  ECCA  F027         	call	___lwmod	;wreg free
 12350  002DBC  0100               	movlb	0	; () banked
 12351  002DBE  5160               	movf	?___lwmod& (0+255),w,b
 12352  002DC0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12353  002DC2  A4D8               	btfss	status,2,c
 12354  002DC4  0012               	return	
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;TMRapp.c: 69: {
 12358                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 12359  002DC6  87F7               	bsf	_appTimer& (0+255),3,b
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 12363  002DC8  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 12364  002DCC  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 12365  002DD0  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 12366  002DD2  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 12367  002DD4  0E60               	movlw	96
 12368  002DD6  6F64               	movwf	___almod@divisor& (0+255),b
 12369  002DD8  0EEA               	movlw	234
 12370  002DDA  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 12371  002DDC  0E00               	movlw	0
 12372  002DDE  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 12373  002DE0  0E00               	movlw	0
 12374  002DE2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 12375  002DE4  ECBB  F01F         	call	___almod	;wreg free
 12376  002DE8  0100               	movlb	0	; () banked
 12377  002DEA  5160               	movf	?___almod& (0+255),w,b
 12378  002DEC  1161               	iorwf	(?___almod+1)& (0+255),w,b
 12379  002DEE  1162               	iorwf	(?___almod+2)& (0+255),w,b
 12380  002DF0  1163               	iorwf	(?___almod+3)& (0+255),w,b
 12381  002DF2  A4D8               	btfss	status,2,c
 12382  002DF4  0012               	return	
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;TMRapp.c: 72: {
 12386                           ;TMRapp.c: 73: timerMinTickCount++;
 12387  002DF6  4A3C               	infsnz	_timerMinTickCount,f,c
 12388  002DF8  2A3D               	incf	_timerMinTickCount+1,f,c
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 12392  002DFA  89F7               	bsf	_appTimer& (0+255),4,b
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 12396  002DFC  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 12397  002E00  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12398  002E04  0E00               	movlw	0
 12399  002E06  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12400  002E08  0E3C               	movlw	60
 12401  002E0A  6F62               	movwf	___lwmod@divisor& (0+255),b
 12402  002E0C  ECCA  F027         	call	___lwmod	;wreg free
 12403  002E10  0100               	movlb	0	; () banked
 12404  002E12  5160               	movf	?___lwmod& (0+255),w,b
 12405  002E14  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12406  002E16  A4D8               	btfss	status,2,c
 12407  002E18  0012               	return	
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;TMRapp.c: 76: {
 12411                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 12412  002E1A  8BF7               	bsf	_appTimer& (0+255),5,b
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 12416  002E1C  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 12417  002E20  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12418  002E24  0E02               	movlw	2
 12419  002E26  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12420  002E28  0ED0               	movlw	208
 12421  002E2A  6F62               	movwf	___lwmod@divisor& (0+255),b
 12422  002E2C  ECCA  F027         	call	___lwmod	;wreg free
 12423  002E30  0100               	movlb	0	; () banked
 12424  002E32  5160               	movf	?___lwmod& (0+255),w,b
 12425  002E34  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12426  002E36  A4D8               	btfss	status,2,c
 12427  002E38  0012               	return	
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;TMRapp.c: 79: {
 12431                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 12432  002E3A  8DF7               	bsf	_appTimer& (0+255),6,b
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 12436  002E3C  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 12437  002E40  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12438  002E44  0E05               	movlw	5
 12439  002E46  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12440  002E48  0EA0               	movlw	160
 12441  002E4A  6F62               	movwf	___lwmod@divisor& (0+255),b
 12442  002E4C  ECCA  F027         	call	___lwmod	;wreg free
 12443  002E50  0100               	movlb	0	; () banked
 12444  002E52  5160               	movf	?___lwmod& (0+255),w,b
 12445  002E54  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 12446  002E56  A4D8               	btfss	status,2,c
 12447  002E58  0012               	return	
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;TMRapp.c: 82: {
 12451                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 12452  002E5A  8FF7               	bsf	_appTimer& (0+255),7,b
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;TMRapp.c: 85: timerMsTickCount = 0;
 12456  002E5C  0E00               	movlw	0
 12457  002E5E  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 12458  002E60  0E00               	movlw	0
 12459  002E62  6FD8               	movwf	_timerMsTickCount& (0+255),b
 12460                           
 12461                           ;TMRapp.c: 86: timerMinTickCount = 0;
 12462  002E64  0E00               	movlw	0
 12463  002E66  6E3D               	movwf	_timerMinTickCount+1,c
 12464  002E68  0E00               	movlw	0
 12465  002E6A  6E3C               	movwf	_timerMinTickCount,c
 12466                           
 12467                           ; BSR set to: 0
 12468                           
 12469                           ; BSR set to: 0
 12470                           
 12471                           ; BSR set to: 0
 12472                           
 12473                           ; BSR set to: 0
 12474                           
 12475                           ; BSR set to: 0
 12476                           
 12477                           ; BSR set to: 0
 12478  002E6C  0012               	return	
 12479  002E6E                     __end_of_TMRapp_Handler:
 12480                           	opt stack 0
 12481                           tblptru	equ	0xFF8
 12482                           tblptrh	equ	0xFF7
 12483                           tblptrl	equ	0xFF6
 12484                           tablat	equ	0xFF5
 12485                           prodh	equ	0xFF4
 12486                           prodl	equ	0xFF3
 12487                           intcon	equ	0xFF2
 12488                           intcon3	equ	0xFF0
 12489                           postinc0	equ	0xFEE
 12490                           wreg	equ	0xFE8
 12491                           indf1	equ	0xFE7
 12492                           postdec1	equ	0xFE5
 12493                           fsr1h	equ	0xFE2
 12494                           fsr1l	equ	0xFE1
 12495                           indf2	equ	0xFDF
 12496                           fsr2h	equ	0xFDA
 12497                           fsr2l	equ	0xFD9
 12498                           status	equ	0xFD8
 12499                           
 12500 ;; *************** function ___lwmod *****************
 12501 ;; Defined at:
 12502 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  dividend        2    0[BANK0 ] unsigned int 
 12505 ;;  divisor         2    2[BANK0 ] unsigned int 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  counter         1    4[BANK0 ] unsigned char 
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  2    0[BANK0 ] unsigned int 
 12510 ;; Registers used:
 12511 ;;		wreg, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12517 ;;      Params:         0       4       0       0       0       0       0       0       0
 12518 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12520 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12521 ;;Total ram usage:        5 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:   11
 12524 ;; This function calls:
 12525 ;;		Nothing
 12526 ;; This function is called by:
 12527 ;;		_TMRapp_Handler
 12528 ;;		_moteApp_add16bToDataBuffer
 12529 ;;		_oled_putUint16
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text32
 12534  004F94                     __ptext32:
 12535                           	opt stack 0
 12536  004F94                     ___lwmod:
 12537                           	opt stack 17
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;incstack = 0
 12541  004F94  0100               	movlb	0	; () banked
 12542  004F96  5162               	movf	___lwmod@divisor& (0+255),w,b
 12543  004F98  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12544  004F9A  B4D8               	btfsc	status,2,c
 12545  004F9C  D018               	goto	l2518
 12546                           
 12547                           ; BSR set to: 0
 12548  004F9E  0E01               	movlw	1
 12549  004FA0  6F64               	movwf	___lwmod@counter& (0+255),b
 12550  004FA2  D004               	goto	l2513
 12551  004FA4                     
 12552                           ; BSR set to: 0
 12553                           
 12554                           ; BSR set to: 0
 12555  004FA4  90D8               	bcf	status,0,c
 12556  004FA6  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 12557  004FA8  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12558  004FAA  2B64               	incf	___lwmod@counter& (0+255),f,b
 12559  004FAC                     l2513:
 12560                           
 12561                           ; BSR set to: 0
 12562                           
 12563                           ; BSR set to: 0
 12564  004FAC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12565  004FAE  D7FA               	goto	l2514
 12566  004FB0                     u8410:
 12567                           
 12568                           ; BSR set to: 0
 12569                           
 12570                           ; BSR set to: 0
 12571                           
 12572                           ; BSR set to: 0
 12573  004FB0  5162               	movf	___lwmod@divisor& (0+255),w,b
 12574  004FB2  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 12575  004FB4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12576  004FB6  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12577  004FB8  A0D8               	btfss	status,0,c
 12578  004FBA  D004               	goto	l2517
 12579                           
 12580                           ; BSR set to: 0
 12581  004FBC  5162               	movf	___lwmod@divisor& (0+255),w,b
 12582  004FBE  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 12583  004FC0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12584  004FC2  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12585  004FC4                     l2517:
 12586                           
 12587                           ; BSR set to: 0
 12588                           
 12589                           ; BSR set to: 0
 12590  004FC4  90D8               	bcf	status,0,c
 12591  004FC6  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12592  004FC8  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 12593                           
 12594                           ; BSR set to: 0
 12595  004FCA  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 12596  004FCC  D7F1               	goto	u8410
 12597  004FCE                     l2518:
 12598                           
 12599                           ; BSR set to: 0
 12600                           
 12601                           ; BSR set to: 0
 12602  004FCE  C060  F060         	movff	___lwmod@dividend,?___lwmod
 12603  004FD2  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 12604                           
 12605                           ; BSR set to: 0
 12606  004FD6  0012               	return		;funcret
 12607  004FD8                     __end_of___lwmod:
 12608                           	opt stack 0
 12609                           tblptru	equ	0xFF8
 12610                           tblptrh	equ	0xFF7
 12611                           tblptrl	equ	0xFF6
 12612                           tablat	equ	0xFF5
 12613                           prodh	equ	0xFF4
 12614                           prodl	equ	0xFF3
 12615                           intcon	equ	0xFF2
 12616                           intcon3	equ	0xFF0
 12617                           postinc0	equ	0xFEE
 12618                           wreg	equ	0xFE8
 12619                           indf1	equ	0xFE7
 12620                           postdec1	equ	0xFE5
 12621                           fsr1h	equ	0xFE2
 12622                           fsr1l	equ	0xFE1
 12623                           indf2	equ	0xFDF
 12624                           fsr2h	equ	0xFDA
 12625                           fsr2l	equ	0xFD9
 12626                           status	equ	0xFD8
 12627                           
 12628 ;; *************** function ___almod *****************
 12629 ;; Defined at:
 12630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  dividend        4    0[BANK0 ] long 
 12633 ;;  divisor         4    4[BANK0 ] long 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  sign            1    9[BANK0 ] unsigned char 
 12636 ;;  counter         1    8[BANK0 ] unsigned char 
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  4    0[BANK0 ] long 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12646 ;;      Params:         0       8       0       0       0       0       0       0       0
 12647 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12649 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12650 ;;Total ram usage:       10 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:   11
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_TMRapp_Handler
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	text33
 12661  003F76                     __ptext33:
 12662                           	opt stack 0
 12663  003F76                     ___almod:
 12664                           	opt stack 17
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;incstack = 0
 12668  003F76  0E00               	movlw	0
 12669  003F78  0100               	movlb	0	; () banked
 12670  003F7A  6F69               	movwf	___almod@sign& (0+255),b
 12671                           
 12672                           ; BSR set to: 0
 12673  003F7C  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 12674  003F7E  D00A               	goto	l2168
 12675                           
 12676                           ; BSR set to: 0
 12677  003F80  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 12678  003F82  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 12679  003F84  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 12680  003F86  6D60               	negf	___almod@dividend& (0+255),b
 12681  003F88  0E00               	movlw	0
 12682  003F8A  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 12683  003F8C  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 12684  003F8E  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 12685                           
 12686                           ; BSR set to: 0
 12687  003F90  0E01               	movlw	1
 12688  003F92  6F69               	movwf	___almod@sign& (0+255),b
 12689  003F94                     l2168:
 12690                           
 12691                           ; BSR set to: 0
 12692                           
 12693                           ; BSR set to: 0
 12694  003F94  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 12695  003F96  D008               	goto	l2169
 12696                           
 12697                           ; BSR set to: 0
 12698  003F98  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 12699  003F9A  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 12700  003F9C  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 12701  003F9E  6D64               	negf	___almod@divisor& (0+255),b
 12702  003FA0  0E00               	movlw	0
 12703  003FA2  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 12704  003FA4  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 12705  003FA6  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 12706  003FA8                     l2169:
 12707                           
 12708                           ; BSR set to: 0
 12709                           
 12710                           ; BSR set to: 0
 12711  003FA8  5164               	movf	___almod@divisor& (0+255),w,b
 12712  003FAA  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 12713  003FAC  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 12714  003FAE  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 12715  003FB0  B4D8               	btfsc	status,2,c
 12716  003FB2  D024               	goto	l2176
 12717                           
 12718                           ; BSR set to: 0
 12719  003FB4  0E01               	movlw	1
 12720  003FB6  6F68               	movwf	___almod@counter& (0+255),b
 12721  003FB8  D006               	goto	l2171
 12722  003FBA                     
 12723                           ; BSR set to: 0
 12724                           
 12725                           ; BSR set to: 0
 12726  003FBA  90D8               	bcf	status,0,c
 12727  003FBC  3764               	rlcf	___almod@divisor& (0+255),f,b
 12728  003FBE  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 12729  003FC0  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 12730  003FC2  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 12731  003FC4  2B68               	incf	___almod@counter& (0+255),f,b
 12732  003FC6                     l2171:
 12733                           
 12734                           ; BSR set to: 0
 12735                           
 12736                           ; BSR set to: 0
 12737  003FC6  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 12738  003FC8  D7F8               	goto	l2172
 12739  003FCA                     u8370:
 12740                           
 12741                           ; BSR set to: 0
 12742                           
 12743                           ; BSR set to: 0
 12744                           
 12745                           ; BSR set to: 0
 12746  003FCA  5164               	movf	___almod@divisor& (0+255),w,b
 12747  003FCC  5D60               	subwf	___almod@dividend& (0+255),w,b
 12748  003FCE  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 12749  003FD0  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 12750  003FD2  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 12751  003FD4  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 12752  003FD6  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 12753  003FD8  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 12754  003FDA  A0D8               	btfss	status,0,c
 12755  003FDC  D008               	goto	l2175
 12756                           
 12757                           ; BSR set to: 0
 12758  003FDE  5164               	movf	___almod@divisor& (0+255),w,b
 12759  003FE0  5F60               	subwf	___almod@dividend& (0+255),f,b
 12760  003FE2  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 12761  003FE4  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 12762  003FE6  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 12763  003FE8  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 12764  003FEA  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 12765  003FEC  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 12766  003FEE                     l2175:
 12767                           
 12768                           ; BSR set to: 0
 12769                           
 12770                           ; BSR set to: 0
 12771  003FEE  90D8               	bcf	status,0,c
 12772  003FF0  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 12773  003FF2  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 12774  003FF4  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 12775  003FF6  3364               	rrcf	___almod@divisor& (0+255),f,b
 12776                           
 12777                           ; BSR set to: 0
 12778  003FF8  2F68               	decfsz	___almod@counter& (0+255),f,b
 12779  003FFA  D7E7               	goto	u8370
 12780  003FFC                     l2176:
 12781                           
 12782                           ; BSR set to: 0
 12783                           
 12784                           ; BSR set to: 0
 12785                           
 12786                           ; BSR set to: 0
 12787  003FFC  5169               	movf	___almod@sign& (0+255),w,b
 12788  003FFE  B4D8               	btfsc	status,2,c
 12789  004000  D008               	goto	l2177
 12790                           
 12791                           ; BSR set to: 0
 12792  004002  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 12793  004004  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 12794  004006  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 12795  004008  6D60               	negf	___almod@dividend& (0+255),b
 12796  00400A  0E00               	movlw	0
 12797  00400C  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 12798  00400E  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 12799  004010  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 12800  004012                     l2177:
 12801                           
 12802                           ; BSR set to: 0
 12803                           
 12804                           ; BSR set to: 0
 12805  004012  C060  F060         	movff	___almod@dividend,?___almod
 12806  004016  C061  F061         	movff	___almod@dividend+1,?___almod+1
 12807  00401A  C062  F062         	movff	___almod@dividend+2,?___almod+2
 12808  00401E  C063  F063         	movff	___almod@dividend+3,?___almod+3
 12809  004022  0012               	return	
 12810  004024                     __end_of___almod:
 12811                           	opt stack 0
 12812                           tblptru	equ	0xFF8
 12813                           tblptrh	equ	0xFF7
 12814                           tblptrl	equ	0xFF6
 12815                           tablat	equ	0xFF5
 12816                           prodh	equ	0xFF4
 12817                           prodl	equ	0xFF3
 12818                           intcon	equ	0xFF2
 12819                           intcon3	equ	0xFF0
 12820                           postinc0	equ	0xFEE
 12821                           wreg	equ	0xFE8
 12822                           indf1	equ	0xFE7
 12823                           postdec1	equ	0xFE5
 12824                           fsr1h	equ	0xFE2
 12825                           fsr1l	equ	0xFE1
 12826                           indf2	equ	0xFDF
 12827                           fsr2h	equ	0xFDA
 12828                           fsr2l	equ	0xFD9
 12829                           status	equ	0xFD8
 12830                           
 12831 ;; *************** function _TMRapp_ClearBitFlags *****************
 12832 ;; Defined at:
 12833 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        0 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:   11
 12854 ;; This function calls:
 12855 ;;		Nothing
 12856 ;; This function is called by:
 12857 ;;		_moteHandler
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text34
 12862  00578A                     __ptext34:
 12863                           	opt stack 0
 12864  00578A                     _TMRapp_ClearBitFlags:
 12865                           	opt stack 18
 12866                           
 12867                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;incstack = 0
 12871  00578A  0E00               	movlw	0
 12872  00578C  0100               	movlb	0	; () banked
 12873  00578E  6FF7               	movwf	_appTimer& (0+255),b
 12874                           
 12875                           ; BSR set to: 0
 12876  005790  0012               	return		;funcret
 12877  005792                     __end_of_TMRapp_ClearBitFlags:
 12878                           	opt stack 0
 12879                           tblptru	equ	0xFF8
 12880                           tblptrh	equ	0xFF7
 12881                           tblptrl	equ	0xFF6
 12882                           tablat	equ	0xFF5
 12883                           prodh	equ	0xFF4
 12884                           prodl	equ	0xFF3
 12885                           intcon	equ	0xFF2
 12886                           intcon3	equ	0xFF0
 12887                           postinc0	equ	0xFEE
 12888                           wreg	equ	0xFE8
 12889                           indf1	equ	0xFE7
 12890                           postdec1	equ	0xFE5
 12891                           fsr1h	equ	0xFE2
 12892                           fsr1l	equ	0xFE1
 12893                           indf2	equ	0xFDF
 12894                           fsr2h	equ	0xFDA
 12895                           fsr2l	equ	0xFD9
 12896                           status	equ	0xFD8
 12897                           
 12898 ;; *************** function _MOTEapp_TimerBasedTask *****************
 12899 ;; Defined at:
 12900 ;;		line 1029 in file "../Includes/Board/MOTEapp.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  timerTask       1    wreg     struct .
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  timerTask       1    0[BANK0 ] struct .
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      void 
 12907 ;; Registers used:
 12908 ;;		wreg, status,2, status,0
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12914 ;;      Params:         0       0       0       0       0       0       0       0       0
 12915 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12917 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12918 ;;Total ram usage:        1 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:   11
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_moteHandler
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           	psect	text35
 12929  0055A6                     __ptext35:
 12930                           	opt stack 0
 12931  0055A6                     _MOTEapp_TimerBasedTask:
 12932                           	opt stack 18
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;incstack = 0
 12936                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 12937  0055A6  0100               	movlb	0	; () banked
 12938  0055A8  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 12939                           
 12940                           ;MOTEapp.c: 1034: if (timerTask.mSecTenTick)
 12941  0055AA  0100               	movlb	0	; () banked
 12942  0055AC  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 12943  0055AE  D003               	goto	l526
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;MOTEapp.c: 1035: {
 12947                           ;MOTEapp.c: 1037: m10SecTicker++;
 12948  0055B0  0101               	movlb	1	; () banked
 12949  0055B2  4B56               	infsnz	_m10SecTicker& (0+255),f,b
 12950  0055B4  2B57               	incf	(_m10SecTicker+1)& (0+255),f,b
 12951  0055B6                     l526:
 12952                           
 12953                           ;MOTEapp.c: 1043: }
 12954                           ;MOTEapp.c: 1044: if (timerTask.SecTick)
 12955                           
 12956                           ; BSR set to: 1
 12957                           
 12958                           ;MOTEapp.c: 1040: {
 12959                           
 12960                           ; BSR set to: 1
 12961                           
 12962                           ; BSR set to: 1
 12963  0055B6  0100               	movlb	0	; () banked
 12964  0055B8  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;MOTEapp.c: 1045: {
 12968                           ;MOTEapp.c: 1047: secTicker++;
 12969  0055BA  2BEF               	incf	_secTicker& (0+255),f,b
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;MOTEapp.c: 1048: }
 12973                           ;MOTEapp.c: 1049: if (timerTask.MinTick)
 12974                           
 12975                           ; BSR set to: 0
 12976  0055BC  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 12977  0055BE  0012               	return	
 12978                           
 12979                           ; BSR set to: 0
 12980                           ;MOTEapp.c: 1050: {
 12981                           ;MOTEapp.c: 1052: minTicker++;
 12982  0055C0  2A4F               	incf	_minTicker,f,c
 12983                           
 12984                           ; BSR set to: 0
 12985                           
 12986                           ; BSR set to: 0
 12987                           
 12988                           ;MOTEapp.c: 1059: {
 12989                           
 12990                           ; BSR set to: 0
 12991                           
 12992                           ; BSR set to: 0
 12993                           
 12994                           ;MOTEapp.c: 1055: {
 12995                           
 12996                           ; BSR set to: 0
 12997                           
 12998                           ; BSR set to: 0
 12999  0055C2  0012               	return	
 13000  0055C4                     __end_of_MOTEapp_TimerBasedTask:
 13001                           	opt stack 0
 13002                           tblptru	equ	0xFF8
 13003                           tblptrh	equ	0xFF7
 13004                           tblptrl	equ	0xFF6
 13005                           tablat	equ	0xFF5
 13006                           prodh	equ	0xFF4
 13007                           prodl	equ	0xFF3
 13008                           intcon	equ	0xFF2
 13009                           intcon3	equ	0xFF0
 13010                           postinc0	equ	0xFEE
 13011                           wreg	equ	0xFE8
 13012                           indf1	equ	0xFE7
 13013                           postdec1	equ	0xFE5
 13014                           fsr1h	equ	0xFE2
 13015                           fsr1l	equ	0xFE1
 13016                           indf2	equ	0xFDF
 13017                           fsr2h	equ	0xFDA
 13018                           fsr2l	equ	0xFD9
 13019                           status	equ	0xFD8
 13020                           
 13021 ;; *************** function _moteApp_clearCommand *****************
 13022 ;; Defined at:
 13023 ;;		line 1262 in file "../Includes/Board/MOTEapp.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;		None
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      void 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13037 ;;      Params:         0       0       0       0       0       0       0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13040 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13041 ;;Total ram usage:        0 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:   14
 13044 ;; This function calls:
 13045 ;;		_sendCommand
 13046 ;; This function is called by:
 13047 ;;		_main
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text36
 13052  00571C                     __ptext36:
 13053                           	opt stack 0
 13054  00571C                     _moteApp_clearCommand:
 13055                           	opt stack 16
 13056                           
 13057                           ;MOTEapp.c: 1264: sendCommand("\r\n");
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;incstack = 0
 13061  00571C  0E0B               	movlw	low (STR_156+23)
 13062  00571E  0100               	movlb	0	; () banked
 13063  005720  6F61               	movwf	sendCommand@string& (0+255),b
 13064  005722  0E7A               	movlw	high (STR_156+23)
 13065  005724  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13066  005726  ECB2  F029         	call	_sendCommand	;wreg free
 13067  00572A  0012               	return		;funcret
 13068  00572C                     __end_of_moteApp_clearCommand:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           intcon3	equ	0xFF0
 13078                           postinc0	equ	0xFEE
 13079                           wreg	equ	0xFE8
 13080                           indf1	equ	0xFE7
 13081                           postdec1	equ	0xFE5
 13082                           fsr1h	equ	0xFE2
 13083                           fsr1l	equ	0xFE1
 13084                           indf2	equ	0xFDF
 13085                           fsr2h	equ	0xFDA
 13086                           fsr2l	equ	0xFD9
 13087                           status	equ	0xFD8
 13088                           
 13089 ;; *************** function _USBapp_handlerState *****************
 13090 ;; Defined at:
 13091 ;;		line 78 in file "../Includes/Board/USBapp.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;  state           1    wreg     enum E5833
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;  state           1    0[BANK0 ] enum E5833
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1    wreg      void 
 13098 ;; Registers used:
 13099 ;;		wreg
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13105 ;;      Params:         0       0       0       0       0       0       0       0       0
 13106 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13108 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13109 ;;Total ram usage:        1 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:   11
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		_main
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text37
 13120  005766                     __ptext37:
 13121                           	opt stack 0
 13122  005766                     _USBapp_handlerState:
 13123                           	opt stack 19
 13124                           
 13125                           ;incstack = 0
 13126                           ;USBapp_handlerState@state stored from wreg
 13127  005766  0100               	movlb	0	; () banked
 13128  005768  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 13129                           
 13130                           ;USBapp.c: 80: usbState = state;
 13131  00576A  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 13132  00576E  0012               	return		;funcret
 13133  005770                     __end_of_USBapp_handlerState:
 13134                           	opt stack 0
 13135                           tblptru	equ	0xFF8
 13136                           tblptrh	equ	0xFF7
 13137                           tblptrl	equ	0xFF6
 13138                           tablat	equ	0xFF5
 13139                           prodh	equ	0xFF4
 13140                           prodl	equ	0xFF3
 13141                           intcon	equ	0xFF2
 13142                           intcon3	equ	0xFF0
 13143                           postinc0	equ	0xFEE
 13144                           wreg	equ	0xFE8
 13145                           indf1	equ	0xFE7
 13146                           postdec1	equ	0xFE5
 13147                           fsr1h	equ	0xFE2
 13148                           fsr1l	equ	0xFE1
 13149                           indf2	equ	0xFDF
 13150                           fsr2h	equ	0xFDA
 13151                           fsr2l	equ	0xFD9
 13152                           status	equ	0xFD8
 13153                           
 13154 ;; *************** function _USBapp_Handler *****************
 13155 ;; Defined at:
 13156 ;;		line 86 in file "../Includes/Board/USBapp.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;		None
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;  buttonPress     1   23[BANK0 ] enum E5867
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1    wreg      void 
 13163 ;; Registers used:
 13164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13170 ;;      Params:         0       0       0       0       0       0       0       0       0
 13171 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13173 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13174 ;;Total ram usage:        1 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; Hardware stack levels required when called:   16
 13177 ;; This function calls:
 13178 ;;		_USBapp_DeviceCdcEmulatorHandler
 13179 ;;		_oled_clear
 13180 ;;		_oled_putString
 13181 ;;		_service_pushbutton
 13182 ;; This function is called by:
 13183 ;;		_main
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text38
 13188  003E12                     __ptext38:
 13189                           	opt stack 0
 13190  003E12                     _USBapp_Handler:
 13191                           	opt stack 14
 13192                           
 13193                           ;USBapp.c: 90: {
 13194                           ;USBapp.c: 91: switch(usbState)
 13195                           
 13196                           ;incstack = 0
 13197                           ;USBapp.c: 89: do
 13198  003E12  D03E               	goto	l763
 13199  003E14                     
 13200                           ;USBapp.c: 94: while(1);
 13201  003E14  D7FF               	goto	l764
 13202  003E16                     
 13203                           ;USBapp.c: 98: oled_clear();
 13204  003E16  ECFF  F02A         	call	_oled_clear	;wreg free
 13205                           
 13206                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 13207  003E1A  0E31               	movlw	low STR_166
 13208  003E1C  0100               	movlb	0	; () banked
 13209  003E1E  6F72               	movwf	oled_putString@string& (0+255),b
 13210  003E20  0E7F               	movlw	high STR_166
 13211  003E22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 13212  003E24  0E01               	movlw	1
 13213  003E26  6F74               	movwf	oled_putString@station_dot& (0+255),b
 13214  003E28  0E00               	movlw	0
 13215  003E2A  6F75               	movwf	oled_putString@start_page& (0+255),b
 13216  003E2C  EC1B  F025         	call	_oled_putString	;wreg free
 13217                           
 13218                           ;USBapp.c: 100: oled_putString("Command",2,1);
 13219  003E30  0E67               	movlw	low STR_167
 13220  003E32  0100               	movlb	0	; () banked
 13221  003E34  6F72               	movwf	oled_putString@string& (0+255),b
 13222  003E36  0E7F               	movlw	high STR_167
 13223  003E38  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 13224  003E3A  0E02               	movlw	2
 13225  003E3C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 13226  003E3E  0E01               	movlw	1
 13227  003E40  6F75               	movwf	oled_putString@start_page& (0+255),b
 13228  003E42  EC1B  F025         	call	_oled_putString	;wreg free
 13229                           
 13230                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 13231  003E46  0E46               	movlw	low STR_168
 13232  003E48  0100               	movlb	0	; () banked
 13233  003E4A  6F72               	movwf	oled_putString@string& (0+255),b
 13234  003E4C  0E7E               	movlw	high STR_168
 13235  003E4E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 13236  003E50  0E00               	movlw	0
 13237  003E52  6F74               	movwf	oled_putString@station_dot& (0+255),b
 13238  003E54  0E02               	movlw	2
 13239  003E56  6F75               	movwf	oled_putString@start_page& (0+255),b
 13240  003E58  EC1B  F025         	call	_oled_putString	;wreg free
 13241                           
 13242                           ;USBapp.c: 103: usbState = USB_RUNNING;
 13243  003E5C  0E01               	movlw	1
 13244  003E5E  0100               	movlb	0	; () banked
 13245  003E60  D005               	goto	L22
 13246  003E62                     
 13247                           ; BSR set to: 0
 13248                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 13249                           
 13250                           ; BSR set to: 0
 13251  003E62  0E20               	movlw	32
 13252  003E64  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 13253  003E66  D001               	goto	l771
 13254  003E68  D01F               	goto	l768
 13255  003E6A                     l771:
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;USBapp.c: 111: }
 13259                           ;USBapp.c: 112: usbState = USB_CDC;
 13260                           
 13261                           ; BSR set to: 0
 13262  003E6A  0E02               	movlw	2
 13263  003E6C                     L22:
 13264  003E6C  6FEA               	movwf	_usbState& (0+255),b
 13265                           
 13266                           ;USBapp.c: 113: break;
 13267  003E6E  D01C               	goto	l768
 13268  003E70                     
 13269                           ; BSR set to: 0
 13270                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 13271                           
 13272                           ; BSR set to: 0
 13273  003E70  EC5C  F01A         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 13274                           
 13275                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 13276  003E74  0E03               	movlw	3
 13277  003E76  0100               	movlb	0	; () banked
 13278  003E78  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 13282  003E7A  ECE4  F024         	call	_service_pushbutton	;wreg free
 13283  003E7E  0100               	movlb	0	; () banked
 13284  003E80  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;USBapp.c: 122: if (buttonPress != Released )
 13288  003E82  0E03               	movlw	3
 13289  003E84  1977               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 13290  003E86  B4D8               	btfsc	status,2,c
 13291  003E88  D00F               	goto	l768
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;USBapp.c: 123: {
 13295                           ;USBapp.c: 124: exitUSB = USB_BAT;
 13296  003E8A  0E02               	movlw	2
 13297  003E8C  6FF8               	movwf	_exitUSB& (0+255),b
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;USBapp.c: 127: }
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;USBapp.c: 125: }
 13304                           ;USBapp.c: 126: break;
 13305  003E8E  D00C               	goto	l768
 13306  003E90                     l763:
 13307                           
 13308                           ; BSR set to: 0
 13309  003E90  0100               	movlb	0	; () banked
 13310  003E92  51EA               	movf	_usbState& (0+255),w,b
 13311                           
 13312                           ; Switch size 1, requested type "space"
 13313                           ; Number of cases is 3, Range of values is 0 to 2
 13314                           ; switch strategies available:
 13315                           ; Name         Instructions Cycles
 13316                           ; simple_byte           10     6 (average)
 13317                           ;	Chosen strategy is simple_byte
 13318  003E94  0A00               	xorlw	0	; case 0
 13319  003E96  B4D8               	btfsc	status,2,c
 13320  003E98  D7BE               	goto	l769
 13321  003E9A  0A01               	xorlw	1	; case 1
 13322  003E9C  B4D8               	btfsc	status,2,c
 13323  003E9E  D7E1               	goto	l770
 13324  003EA0  0A03               	xorlw	3	; case 2
 13325  003EA2  B4D8               	btfsc	status,2,c
 13326  003EA4  D7E5               	goto	l773
 13327  003EA6  D7B6               	goto	l764
 13328  003EA8                     l768:
 13329                           
 13330                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 13331                           
 13332                           ; BSR set to: 0
 13333  003EA8  A080               	btfss	3968,0,c	;volatile
 13334  003EAA  D004               	goto	u9780
 13335  003EAC  0100               	movlb	0	; () banked
 13336  003EAE  51F8               	movf	_exitUSB& (0+255),w,b
 13337  003EB0  B4D8               	btfsc	status,2,c
 13338  003EB2  D7EE               	goto	l763
 13339  003EB4                     u9780:
 13340                           
 13341                           ;USBapp.c: 129: __nop();
 13342                           
 13343                           ; BSR set to: 0
 13344  003EB4  F000               	nop	
 13345                           
 13346                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 13347  003EB6  0E02               	movlw	2
 13348  003EB8  0100               	movlb	0	; () banked
 13349  003EBA  19F8               	xorwf	_exitUSB& (0+255),w,b
 13350  003EBC  B4D8               	btfsc	status,2,c
 13351  003EBE  0012               	return	
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;USBapp.c: 131: exitUSB = NO_USB;
 13355  003EC0  0E00               	movlw	0
 13356  003EC2  6FF8               	movwf	_exitUSB& (0+255),b
 13357  003EC4  0012               	return	
 13358  003EC6                     __end_of_USBapp_Handler:
 13359                           	opt stack 0
 13360                           tblptru	equ	0xFF8
 13361                           tblptrh	equ	0xFF7
 13362                           tblptrl	equ	0xFF6
 13363                           tablat	equ	0xFF5
 13364                           prodh	equ	0xFF4
 13365                           prodl	equ	0xFF3
 13366                           intcon	equ	0xFF2
 13367                           intcon3	equ	0xFF0
 13368                           postinc0	equ	0xFEE
 13369                           wreg	equ	0xFE8
 13370                           indf1	equ	0xFE7
 13371                           postdec1	equ	0xFE5
 13372                           fsr1h	equ	0xFE2
 13373                           fsr1l	equ	0xFE1
 13374                           indf2	equ	0xFDF
 13375                           fsr2h	equ	0xFDA
 13376                           fsr2l	equ	0xFD9
 13377                           status	equ	0xFD8
 13378                           
 13379 ;; *************** function _service_pushbutton *****************
 13380 ;; Defined at:
 13381 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;		None
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;  bs              1    0[BANK0 ] enum E5748
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  1    wreg      enum E5836
 13388 ;; Registers used:
 13389 ;;		wreg, status,2, status,0
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/0
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13395 ;;      Params:         0       0       0       0       0       0       0       0       0
 13396 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13398 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13399 ;;Total ram usage:        1 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:   11
 13402 ;; This function calls:
 13403 ;;		Nothing
 13404 ;; This function is called by:
 13405 ;;		_moteHandler
 13406 ;;		_USBapp_Handler
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text39
 13411  0049C8                     __ptext39:
 13412                           	opt stack 0
 13413  0049C8                     _service_pushbutton:
 13414                           	opt stack 18
 13415                           
 13416                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 13417                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 13418                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;incstack = 0
 13422  0049C8  0E00               	movlw	0
 13423  0049CA  0100               	movlb	0	; () banked
 13424  0049CC  6F60               	movwf	service_pushbutton@bs& (0+255),b
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 13428  0049CE  A281               	btfss	3969,1,c	;volatile
 13429  0049D0  D002               	goto	u8540
 13430                           
 13431                           ; BSR set to: 0
 13432  0049D2  B081               	btfsc	3969,0,c	;volatile
 13433  0049D4  D01A               	goto	l856
 13434  0049D6                     u8540:
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;buttons.c: 56: {
 13438                           ;buttons.c: 57: ++PB_Timer;
 13439                           
 13440                           ; BSR set to: 0
 13441  0049D6  0E01               	movlw	1
 13442  0049D8  0101               	movlb	1	; () banked
 13443  0049DA  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 13444  0049DC  0E00               	movlw	0
 13445  0049DE  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 13446  0049E0  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 13447  0049E2  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 13448                           
 13449                           ;buttons.c: 61: if (PB_Timer == 55)
 13450  0049E4  0E37               	movlw	55
 13451  0049E6  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 13452  0049E8  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 13453  0049EA  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 13454  0049EC  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 13455  0049EE  A4D8               	btfss	status,2,c
 13456  0049F0  D009               	goto	l859
 13457                           
 13458                           ; BSR set to: 1
 13459                           ;buttons.c: 62: {
 13460                           ;buttons.c: 63: Release_Timer = 0;
 13461  0049F2  0E00               	movlw	0
 13462  0049F4  0100               	movlb	0	; () banked
 13463  0049F6  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 13467  0049F8  B281               	btfsc	3969,1,c	;volatile
 13468  0049FA  D002               	goto	l860
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;buttons.c: 66: {
 13472                           ;buttons.c: 67: bs = ShortPress1;
 13473  0049FC  0E01               	movlw	1
 13474  0049FE  D018               	goto	L25
 13475  004A00                     l860:
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;buttons.c: 69: else
 13479                           ;buttons.c: 70: {
 13480                           ;buttons.c: 71: bs = ShortPress2;
 13481                           
 13482                           ; BSR set to: 0
 13483  004A00  0E02               	movlw	2
 13484  004A02  D016               	goto	L25
 13485  004A04                     l859:
 13486                           
 13487                           ;buttons.c: 74: else
 13488                           ;buttons.c: 75: {
 13489                           ;buttons.c: 76: bs = NoButton;
 13490                           
 13491                           ; BSR set to: 0
 13492  004A04  0E00               	movlw	0
 13493  004A06  0100               	movlb	0	; () banked
 13494  004A08  D013               	goto	L25
 13495  004A0A                     l856:
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;buttons.c: 79: else
 13499                           ;buttons.c: 80: {
 13500                           ;buttons.c: 81: if (Release_Timer == 20)
 13501                           
 13502                           ; BSR set to: 0
 13503  004A0A  0E14               	movlw	20
 13504  004A0C  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 13505  004A0E  A4D8               	btfss	status,2,c
 13506  004A10  D00D               	goto	l864
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;buttons.c: 82: {
 13510                           ;buttons.c: 83: PB_Timer = 0;
 13511  004A12  0E00               	movlw	0
 13512  004A14  0101               	movlb	1	; () banked
 13513  004A16  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 13514  004A18  0E00               	movlw	0
 13515  004A1A  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 13516  004A1C  0E00               	movlw	0
 13517  004A1E  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 13518  004A20  0E00               	movlw	0
 13519  004A22  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 13520                           
 13521                           ;buttons.c: 84: Release_Timer = 0;
 13522  004A24  0E00               	movlw	0
 13523  004A26  0100               	movlb	0	; () banked
 13524  004A28  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 13525                           
 13526                           ;buttons.c: 85: }
 13527  004A2A  D001               	goto	l865
 13528  004A2C                     l864:
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;buttons.c: 86: else
 13532                           ;buttons.c: 87: {
 13533                           ;buttons.c: 88: Release_Timer++;
 13534                           
 13535                           ; BSR set to: 0
 13536  004A2C  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 13537  004A2E                     l865:
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;buttons.c: 89: }
 13541                           ;buttons.c: 90: bs = Released;
 13542                           
 13543                           ; BSR set to: 0
 13544  004A2E  0E03               	movlw	3
 13545  004A30                     L25:
 13546  004A30  6F60               	movwf	service_pushbutton@bs& (0+255),b
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;buttons.c: 91: }
 13550                           ;buttons.c: 93: return bs;
 13551                           
 13552                           ; BSR set to: 0
 13553  004A32  5160               	movf	service_pushbutton@bs& (0+255),w,b
 13554  004A34  0012               	return	
 13555  004A36                     __end_of_service_pushbutton:
 13556                           	opt stack 0
 13557                           tblptru	equ	0xFF8
 13558                           tblptrh	equ	0xFF7
 13559                           tblptrl	equ	0xFF6
 13560                           tablat	equ	0xFF5
 13561                           prodh	equ	0xFF4
 13562                           prodl	equ	0xFF3
 13563                           intcon	equ	0xFF2
 13564                           intcon3	equ	0xFF0
 13565                           postinc0	equ	0xFEE
 13566                           wreg	equ	0xFE8
 13567                           indf1	equ	0xFE7
 13568                           postdec1	equ	0xFE5
 13569                           fsr1h	equ	0xFE2
 13570                           fsr1l	equ	0xFE1
 13571                           indf2	equ	0xFDF
 13572                           fsr2h	equ	0xFDA
 13573                           fsr2l	equ	0xFD9
 13574                           status	equ	0xFD8
 13575                           
 13576 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 13577 ;; Defined at:
 13578 ;;		line 162 in file "../Includes/Board/USBapp.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13594 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13595 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13596 ;;Total ram usage:        1 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:   13
 13599 ;; This function calls:
 13600 ;;		_CDCTxService
 13601 ;;		_EUSART_Read
 13602 ;;		_EUSART_Write
 13603 ;;		_MOTEapp_setResponseReady
 13604 ;;		_USBapp_getrxByteFlag
 13605 ;;		_getsUSBUSART
 13606 ;;		_putUSBUSART
 13607 ;; This function is called by:
 13608 ;;		_USBapp_Handler
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           	psect	text40
 13613  0034B8                     __ptext40:
 13614                           	opt stack 0
 13615  0034B8                     _USBapp_DeviceCdcEmulatorHandler:
 13616                           	opt stack 16
 13617                           
 13618                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;incstack = 0
 13622  0034B8  0E1F               	movlw	31
 13623  0034BA  0100               	movlb	0	; () banked
 13624  0034BC  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 13625  0034BE  0012               	return	
 13626                           
 13627                           ; BSR set to: 0
 13628  0034C0  B260               	btfsc	3936,1,c	;volatile
 13629  0034C2  0012               	return	
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 13633                           
 13634                           ; BSR set to: 0
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;USBapp.c: 166: return;
 13638  0034C4  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 13639  0034C6  A4D8               	btfss	status,2,c
 13640  0034C8  D011               	goto	l798
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;USBapp.c: 169: {
 13644                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 13645  0034CA  0E80               	movlw	low _USB_Buffer
 13646  0034CC  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 13647  0034CE  0E02               	movlw	high _USB_Buffer
 13648  0034D0  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13649  0034D2  0E40               	movlw	64
 13650  0034D4  6F69               	movwf	getsUSBUSART@len& (0+255),b
 13651  0034D6  EC52  F01E         	call	_getsUSBUSART	;wreg free
 13652  0034DA  0100               	movlb	0	; () banked
 13653  0034DC  6FE6               	movwf	_LastRS232Out& (0+255),b
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;USBapp.c: 171: if(LastRS232Out > 0)
 13657  0034DE  51E6               	movf	_LastRS232Out& (0+255),w,b
 13658  0034E0  B4D8               	btfsc	status,2,c
 13659  0034E2  D004               	goto	l798
 13660                           
 13661                           ; BSR set to: 0
 13662                           ;USBapp.c: 172: {
 13663                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 13664  0034E4  0E01               	movlw	1
 13665  0034E6  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 13666                           
 13667                           ;USBapp.c: 174: RS232cp = 0;
 13668  0034E8  0E00               	movlw	0
 13669  0034EA  6FE5               	movwf	_RS232cp& (0+255),b
 13670  0034EC                     l798:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;USBapp.c: 175: }
 13674                           ;USBapp.c: 176: }
 13675                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 13676                           
 13677                           ; BSR set to: 0
 13678  0034EC  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 13679  0034EE  A4D8               	btfss	status,2,c
 13680                           
 13681                           ; BSR set to: 0
 13682  0034F0  A2AC               	btfss	4012,1,c	;volatile
 13683  0034F2  D013               	goto	l800
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;USBapp.c: 180: {
 13687                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 13688  0034F4  51E5               	movf	_RS232cp& (0+255),w,b
 13689  0034F6  0D01               	mullw	1
 13690  0034F8  0E80               	movlw	low _USB_Buffer
 13691  0034FA  24F3               	addwf	prodl,w,c
 13692  0034FC  6ED9               	movwf	fsr2l,c
 13693  0034FE  0E02               	movlw	high _USB_Buffer
 13694  003500  20F4               	addwfc	prodh,w,c
 13695  003502  6EDA               	movwf	fsr2h,c
 13696  003504  50DF               	movf	indf2,w,c
 13697  003506  EC6D  F028         	call	_EUSART_Write
 13698                           
 13699                           ;USBapp.c: 183: ++RS232cp;
 13700  00350A  0100               	movlb	0	; () banked
 13701  00350C  2BE5               	incf	_RS232cp& (0+255),f,b
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 13705  00350E  51E6               	movf	_LastRS232Out& (0+255),w,b
 13706  003510  19E5               	xorwf	_RS232cp& (0+255),w,b
 13707  003512  A4D8               	btfss	status,2,c
 13708  003514  D002               	goto	l800
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 13712  003516  0E00               	movlw	0
 13713  003518  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 13714  00351A                     l800:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;USBapp.c: 186: }
 13718                           ;USBapp.c: 189: if ((eusartRxCount))
 13719                           
 13720                           ; BSR set to: 0
 13721  00351A  51F4               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13722  00351C  B4D8               	btfsc	status,2,c
 13723  00351E  D025               	goto	l802
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;USBapp.c: 190: {
 13727                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 13728  003520  ECD3  F02B         	call	_USBapp_getrxByteFlag	;wreg free
 13729  003524  0900               	iorlw	0
 13730  003526  B4D8               	btfsc	status,2,c
 13731  003528  D020               	goto	l802
 13732  00352A  0E3F               	movlw	63
 13733  00352C  0100               	movlb	0	; () banked
 13734  00352E  61E8               	cpfslt	_NextUSBOut& (0+255),b
 13735  003530  D01C               	goto	l802
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;USBapp.c: 192: {
 13739                           ;USBapp.c: 193: __nop();
 13740  003532  F000               	nop	
 13741                           
 13742                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 13743  003534  ECC8  F028         	call	_EUSART_Read	;wreg free
 13744  003538  0100               	movlb	0	; () banked
 13745  00353A  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 13746  00353C  51E8               	movf	_NextUSBOut& (0+255),w,b
 13747  00353E  0D01               	mullw	1
 13748  003540  0E80               	movlw	low _USB_Buffer
 13749  003542  24F3               	addwf	prodl,w,c
 13750  003544  6ED9               	movwf	fsr2l,c
 13751  003546  0E02               	movlw	high _USB_Buffer
 13752  003548  20F4               	addwfc	prodh,w,c
 13753  00354A  6EDA               	movwf	fsr2h,c
 13754  00354C  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;USBapp.c: 195: ++NextUSBOut;
 13758  003550  2BE8               	incf	_NextUSBOut& (0+255),f,b
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 13762  003552  51E8               	movf	_NextUSBOut& (0+255),w,b
 13763  003554  0D01               	mullw	1
 13764  003556  0E80               	movlw	low _USB_Buffer
 13765  003558  24F3               	addwf	prodl,w,c
 13766  00355A  6ED9               	movwf	fsr2l,c
 13767  00355C  0E02               	movlw	high _USB_Buffer
 13768  00355E  20F4               	addwfc	prodh,w,c
 13769  003560  6EDA               	movwf	fsr2h,c
 13770  003562  0E00               	movlw	0
 13771  003564  6EDF               	movwf	indf2,c
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;USBapp.c: 197: rxByteFlag = 0;
 13775  003566  0E00               	movlw	0
 13776  003568  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 13777  00356A                     l802:
 13778                           
 13779                           ;USBapp.c: 198: }
 13780                           ;USBapp.c: 199: }
 13781                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 13782                           
 13783                           ; BSR set to: 0
 13784                           
 13785                           ; BSR set to: 0
 13786  00356A  0100               	movlb	0	; () banked
 13787  00356C  51EB               	movf	_cdc_trf_state& (0+255),w,b
 13788  00356E  A4D8               	btfss	status,2,c
 13789  003570  D010               	goto	l803
 13790                           
 13791                           ; BSR set to: 0
 13792  003572  51E8               	movf	_NextUSBOut& (0+255),w,b
 13793  003574  B4D8               	btfsc	status,2,c
 13794  003576  D00D               	goto	l803
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;USBapp.c: 204: {
 13798                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 13799  003578  0E80               	movlw	low _USB_Buffer
 13800  00357A  6F60               	movwf	putUSBUSART@data& (0+255),b
 13801  00357C  0E02               	movlw	high _USB_Buffer
 13802  00357E  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 13803  003580  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 13804  003584  ECA0  F02A         	call	_putUSBUSART	;wreg free
 13805                           
 13806                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 13807  003588  ECD6  F02B         	call	_MOTEapp_setResponseReady	;wreg free
 13808                           
 13809                           ;USBapp.c: 207: NextUSBOut = 0;
 13810  00358C  0E00               	movlw	0
 13811  00358E  0100               	movlb	0	; () banked
 13812  003590  6FE8               	movwf	_NextUSBOut& (0+255),b
 13813  003592                     l803:
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;USBapp.c: 208: }
 13817                           ;USBapp.c: 210: CDCTxService();
 13818                           
 13819                           ; BSR set to: 0
 13820  003592  EC8D  F012         	call	_CDCTxService	;wreg free
 13821  003596  0012               	return		;funcret
 13822  003598                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 13823                           	opt stack 0
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           intcon3	equ	0xFF0
 13832                           postinc0	equ	0xFEE
 13833                           wreg	equ	0xFE8
 13834                           indf1	equ	0xFE7
 13835                           postdec1	equ	0xFE5
 13836                           fsr1h	equ	0xFE2
 13837                           fsr1l	equ	0xFE1
 13838                           indf2	equ	0xFDF
 13839                           fsr2h	equ	0xFDA
 13840                           fsr2l	equ	0xFD9
 13841                           status	equ	0xFD8
 13842                           
 13843 ;; *************** function _putUSBUSART *****************
 13844 ;; Defined at:
 13845 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 13846 ;; Parameters:    Size  Location     Type
 13847 ;;  data            2    0[BANK0 ] PTR unsigned char 
 13848 ;;		 -> USB_Buffer(64), 
 13849 ;;  length          1    2[BANK0 ] unsigned char 
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;		None
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13861 ;;      Params:         0       3       0       0       0       0       0       0       0
 13862 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13864 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13865 ;;Total ram usage:        3 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:   11
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_USBapp_DeviceCdcEmulatorHandler
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text41
 13876  005540                     __ptext41:
 13877                           	opt stack 0
 13878  005540                     _putUSBUSART:
 13879                           	opt stack 17
 13880                           
 13881                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 13882                           
 13883                           ;incstack = 0
 13884  005540  94A3               	bcf	4003,2,c	;volatile
 13885                           
 13886                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 13887  005542  0100               	movlb	0	; () banked
 13888  005544  51EB               	movf	_cdc_trf_state& (0+255),w,b
 13889  005546  A4D8               	btfss	status,2,c
 13890  005548  D00A               	goto	l1967
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;usb_device_cdc.c: 530: {
 13894                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 13895  00554A  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 13896  00554E  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 13897                           
 13898                           ; BSR set to: 0
 13899  005552  C062  F0DD         	movff	putUSBUSART@length,_cdc_tx_len
 13900                           
 13901                           ; BSR set to: 0
 13902  005556  0E01               	movlw	1
 13903  005558  6FDC               	movwf	_cdc_mem_type& (0+255),b
 13904                           
 13905                           ; BSR set to: 0
 13906  00555A  0E01               	movlw	1
 13907  00555C  6FEB               	movwf	_cdc_trf_state& (0+255),b
 13908  00555E                     l1967:
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;usb_device_cdc.c: 532: }
 13912                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 13913                           
 13914                           ; BSR set to: 0
 13915  00555E  84A3               	bsf	4003,2,c	;volatile
 13916                           
 13917                           ; BSR set to: 0
 13918  005560  0012               	return		;funcret
 13919  005562                     __end_of_putUSBUSART:
 13920                           	opt stack 0
 13921                           tblptru	equ	0xFF8
 13922                           tblptrh	equ	0xFF7
 13923                           tblptrl	equ	0xFF6
 13924                           tablat	equ	0xFF5
 13925                           prodh	equ	0xFF4
 13926                           prodl	equ	0xFF3
 13927                           intcon	equ	0xFF2
 13928                           intcon3	equ	0xFF0
 13929                           postinc0	equ	0xFEE
 13930                           wreg	equ	0xFE8
 13931                           indf1	equ	0xFE7
 13932                           postdec1	equ	0xFE5
 13933                           fsr1h	equ	0xFE2
 13934                           fsr1l	equ	0xFE1
 13935                           indf2	equ	0xFDF
 13936                           fsr2h	equ	0xFDA
 13937                           fsr2l	equ	0xFD9
 13938                           status	equ	0xFD8
 13939                           
 13940 ;; *************** function _getsUSBUSART *****************
 13941 ;; Defined at:
 13942 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 13945 ;;		 -> USB_Buffer(64), 
 13946 ;;  len             1    9[BANK0 ] unsigned char 
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;		None
 13949 ;; Return value:  Size  Location     Type
 13950 ;;                  1    wreg      unsigned char 
 13951 ;; Registers used:
 13952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/0
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13958 ;;      Params:         0       3       0       0       0       0       0       0       0
 13959 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13960 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13961 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13962 ;;Total ram usage:        6 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:   12
 13965 ;; This function calls:
 13966 ;;		_USBTransferOnePacket
 13967 ;; This function is called by:
 13968 ;;		_USBapp_DeviceCdcEmulatorHandler
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           
 13972                           	psect	text42
 13973  003CA4                     __ptext42:
 13974                           	opt stack 0
 13975  003CA4                     _getsUSBUSART:
 13976                           	opt stack 16
 13977                           
 13978                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;incstack = 0
 13982  003CA4  0E00               	movlw	0
 13983  003CA6  0100               	movlb	0	; () banked
 13984  003CA8  6FDE               	movwf	_cdc_rx_len& (0+255),b
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 13988  003CAA  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 13989  003CAC  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 13990  003CAE  B4D8               	btfsc	status,2,c
 13991  003CB0  D00F               	goto	l1957
 13992                           
 13993                           ; BSR set to: 0
 13994  003CB2  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 13995  003CB6  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 13996  003CBA  AEDF               	btfss	indf2,7,c
 13997  003CBC  D003               	goto	u8050
 13998  003CBE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 13999  003CC0  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 14000  003CC2  D002               	goto	u8058
 14001  003CC4                     u8050:
 14002  003CC4  0100               	movlb	0	; () banked
 14003  003CC6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 14004  003CC8                     u8058:
 14005  003CC8  516A               	movf	??_getsUSBUSART& (0+255),w,b
 14006  003CCA  6F6B               	movwf	_getsUSBUSART$6107& (0+255),b
 14007  003CCC  6B6C               	clrf	(_getsUSBUSART$6107+1)& (0+255),b
 14008  003CCE  D004               	goto	l1959
 14009  003CD0                     l1957:
 14010                           
 14011                           ; BSR set to: 0
 14012                           
 14013                           ; BSR set to: 0
 14014  003CD0  0E00               	movlw	0
 14015  003CD2  6F6C               	movwf	(_getsUSBUSART$6107+1)& (0+255),b
 14016  003CD4  0E00               	movlw	0
 14017  003CD6  6F6B               	movwf	_getsUSBUSART$6107& (0+255),b
 14018  003CD8                     l1959:
 14019                           
 14020                           ; BSR set to: 0
 14021                           
 14022                           ; BSR set to: 0
 14023  003CD8  516B               	movf	_getsUSBUSART$6107& (0+255),w,b
 14024  003CDA  116C               	iorwf	(_getsUSBUSART$6107+1)& (0+255),w,b
 14025  003CDC  A4D8               	btfss	status,2,c
 14026  003CDE  D03B               	goto	l1955
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;usb_device_cdc.c: 437: {
 14030                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 14031  003CE0  EE20 F001          	lfsr	2,1
 14032  003CE4  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 14033  003CE6  26D9               	addwf	fsr2l,f,c
 14034  003CE8  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14035  003CEA  22DA               	addwfc	fsr2h,f,c
 14036  003CEC  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14037  003CEE  5CDE               	subwf	postinc2,w,c
 14038  003CF0  B0D8               	btfsc	status,0,c
 14039  003CF2  D008               	goto	l1960
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 14043  003CF4  EE20 F001          	lfsr	2,1
 14044  003CF8  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 14045  003CFA  26D9               	addwf	fsr2l,f,c
 14046  003CFC  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14047  003CFE  22DA               	addwfc	fsr2h,f,c
 14048  003D00  50DF               	movf	indf2,w,c
 14049  003D02  6F69               	movwf	getsUSBUSART@len& (0+255),b
 14050  003D04                     l1960:
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 14054                           
 14055                           ; BSR set to: 0
 14056  003D04  0E00               	movlw	0
 14057  003D06  6FDE               	movwf	_cdc_rx_len& (0+255),b
 14058  003D08  D013               	goto	l1961
 14059  003D0A                     
 14060                           ; BSR set to: 0
 14061                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 14062                           
 14063                           ; BSR set to: 0
 14064  003D0A  51DE               	movf	_cdc_rx_len& (0+255),w,b
 14065  003D0C  0D01               	mullw	1
 14066  003D0E  0E40               	movlw	64
 14067  003D10  24F3               	addwf	prodl,w,c
 14068  003D12  6ED9               	movwf	fsr2l,c
 14069  003D14  0E05               	movlw	5
 14070  003D16  20F4               	addwfc	prodh,w,c
 14071  003D18  6EDA               	movwf	fsr2h,c
 14072  003D1A  51DE               	movf	_cdc_rx_len& (0+255),w,b
 14073  003D1C  0D01               	mullw	1
 14074  003D1E  50F3               	movf	prodl,w,c
 14075  003D20  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 14076  003D22  6EE1               	movwf	fsr1l,c
 14077  003D24  50F4               	movf	prodh,w,c
 14078  003D26  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 14079  003D28  6EE2               	movwf	fsr1h,c
 14080  003D2A  CFDF FFE7          	movff	indf2,indf1
 14081                           
 14082                           ; BSR set to: 0
 14083  003D2E  2BDE               	incf	_cdc_rx_len& (0+255),f,b
 14084  003D30                     l1961:
 14085                           
 14086                           ; BSR set to: 0
 14087                           
 14088                           ; BSR set to: 0
 14089  003D30  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14090  003D32  5DDE               	subwf	_cdc_rx_len& (0+255),w,b
 14091  003D34  A0D8               	btfss	status,0,c
 14092  003D36  D7E9               	goto	l1962
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14096                           
 14097                           ; BSR set to: 0
 14098  003D38  0E00               	movlw	0
 14099  003D3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14100  003D3C  0E40               	movlw	64
 14101  003D3E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14102  003D40  0E05               	movlw	5
 14103  003D42  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14104  003D44  0E40               	movlw	64
 14105  003D46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14106  003D48  0E02               	movlw	2
 14107  003D4A  EC96  F01D         	call	_USBTransferOnePacket
 14108  003D4E  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 14109  003D52  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 14110  003D56                     l1955:
 14111                           
 14112                           ;usb_device_cdc.c: 457: }
 14113                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 14114  003D56  0100               	movlb	0	; () banked
 14115  003D58  51DE               	movf	_cdc_rx_len& (0+255),w,b
 14116  003D5A  0012               	return	
 14117  003D5C                     __end_of_getsUSBUSART:
 14118                           	opt stack 0
 14119                           tblptru	equ	0xFF8
 14120                           tblptrh	equ	0xFF7
 14121                           tblptrl	equ	0xFF6
 14122                           tablat	equ	0xFF5
 14123                           prodh	equ	0xFF4
 14124                           prodl	equ	0xFF3
 14125                           intcon	equ	0xFF2
 14126                           intcon3	equ	0xFF0
 14127                           postinc0	equ	0xFEE
 14128                           wreg	equ	0xFE8
 14129                           indf1	equ	0xFE7
 14130                           postdec1	equ	0xFE5
 14131                           fsr1h	equ	0xFE2
 14132                           fsr1l	equ	0xFE1
 14133                           indf2	equ	0xFDF
 14134                           postinc2	equ	0xFDE
 14135                           fsr2h	equ	0xFDA
 14136                           fsr2l	equ	0xFD9
 14137                           status	equ	0xFD8
 14138                           
 14139 ;; *************** function _USBapp_getrxByteFlag *****************
 14140 ;; Defined at:
 14141 ;;		line 268 in file "../Includes/Board/USBapp.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;		None
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;		None
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  1    wreg      unsigned char 
 14148 ;; Registers used:
 14149 ;;		wreg, status,2
 14150 ;; Tracked objects:
 14151 ;;		On entry : 0/0
 14152 ;;		On exit  : 0/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14155 ;;      Params:         0       0       0       0       0       0       0       0       0
 14156 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14157 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14158 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14159 ;;Total ram usage:        0 bytes
 14160 ;; Hardware stack levels used:    1
 14161 ;; Hardware stack levels required when called:   11
 14162 ;; This function calls:
 14163 ;;		Nothing
 14164 ;; This function is called by:
 14165 ;;		_USBapp_DeviceCdcEmulatorHandler
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           	psect	text43
 14170  0057A6                     __ptext43:
 14171                           	opt stack 0
 14172  0057A6                     _USBapp_getrxByteFlag:
 14173                           	opt stack 17
 14174                           
 14175                           ;USBapp.c: 270: return rxByteFlag;
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;incstack = 0
 14179  0057A6  0100               	movlb	0	; () banked
 14180  0057A8  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 14181  0057AA  0012               	return	
 14182  0057AC                     __end_of_USBapp_getrxByteFlag:
 14183                           	opt stack 0
 14184                           tblptru	equ	0xFF8
 14185                           tblptrh	equ	0xFF7
 14186                           tblptrl	equ	0xFF6
 14187                           tablat	equ	0xFF5
 14188                           prodh	equ	0xFF4
 14189                           prodl	equ	0xFF3
 14190                           intcon	equ	0xFF2
 14191                           intcon3	equ	0xFF0
 14192                           postinc0	equ	0xFEE
 14193                           wreg	equ	0xFE8
 14194                           indf1	equ	0xFE7
 14195                           postdec1	equ	0xFE5
 14196                           fsr1h	equ	0xFE2
 14197                           fsr1l	equ	0xFE1
 14198                           indf2	equ	0xFDF
 14199                           postinc2	equ	0xFDE
 14200                           fsr2h	equ	0xFDA
 14201                           fsr2l	equ	0xFD9
 14202                           status	equ	0xFD8
 14203                           
 14204 ;; *************** function _MOTEapp_setResponseReady *****************
 14205 ;; Defined at:
 14206 ;;		line 1106 in file "../Includes/Board/MOTEapp.c"
 14207 ;; Parameters:    Size  Location     Type
 14208 ;;		None
 14209 ;; Auto vars:     Size  Location     Type
 14210 ;;		None
 14211 ;; Return value:  Size  Location     Type
 14212 ;;                  1    wreg      void 
 14213 ;; Registers used:
 14214 ;;		wreg, status,2
 14215 ;; Tracked objects:
 14216 ;;		On entry : 0/0
 14217 ;;		On exit  : 0/0
 14218 ;;		Unchanged: 0/0
 14219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14220 ;;      Params:         0       0       0       0       0       0       0       0       0
 14221 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14223 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14224 ;;Total ram usage:        0 bytes
 14225 ;; Hardware stack levels used:    1
 14226 ;; Hardware stack levels required when called:   11
 14227 ;; This function calls:
 14228 ;;		Nothing
 14229 ;; This function is called by:
 14230 ;;		_USBapp_DeviceCdcEmulatorHandler
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text44
 14235  0057AC                     __ptext44:
 14236                           	opt stack 0
 14237  0057AC                     _MOTEapp_setResponseReady:
 14238                           	opt stack 17
 14239                           
 14240                           ;MOTEapp.c: 1108: responseReady = 1;
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;incstack = 0
 14244  0057AC  0E01               	movlw	1
 14245  0057AE  6E52               	movwf	_responseReady,c
 14246  0057B0  0012               	return		;funcret
 14247  0057B2                     __end_of_MOTEapp_setResponseReady:
 14248                           	opt stack 0
 14249                           tblptru	equ	0xFF8
 14250                           tblptrh	equ	0xFF7
 14251                           tblptrl	equ	0xFF6
 14252                           tablat	equ	0xFF5
 14253                           prodh	equ	0xFF4
 14254                           prodl	equ	0xFF3
 14255                           intcon	equ	0xFF2
 14256                           intcon3	equ	0xFF0
 14257                           postinc0	equ	0xFEE
 14258                           wreg	equ	0xFE8
 14259                           indf1	equ	0xFE7
 14260                           postdec1	equ	0xFE5
 14261                           fsr1h	equ	0xFE2
 14262                           fsr1l	equ	0xFE1
 14263                           indf2	equ	0xFDF
 14264                           postinc2	equ	0xFDE
 14265                           fsr2h	equ	0xFDA
 14266                           fsr2l	equ	0xFD9
 14267                           status	equ	0xFD8
 14268                           
 14269 ;; *************** function _CDCTxService *****************
 14270 ;; Defined at:
 14271 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 14276 ;;  i               1   10[BANK0 ] unsigned char 
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      void 
 14279 ;; Registers used:
 14280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14286 ;;      Params:         0       0       0       0       0       0       0       0       0
 14287 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14288 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14289 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14290 ;;Total ram usage:        5 bytes
 14291 ;; Hardware stack levels used:    1
 14292 ;; Hardware stack levels required when called:   12
 14293 ;; This function calls:
 14294 ;;		_USBTransferOnePacket
 14295 ;; This function is called by:
 14296 ;;		_USBapp_DeviceCdcEmulatorHandler
 14297 ;; This function uses a non-reentrant model
 14298 ;;
 14299                           
 14300                           	psect	text45
 14301  00251A                     __ptext45:
 14302                           	opt stack 0
 14303  00251A                     _CDCTxService:
 14304                           	opt stack 16
 14305                           
 14306                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 14307                           ;usb_device_cdc.c: 786: uint8_t i;
 14308                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 14309                           
 14310                           ;incstack = 0
 14311  00251A  94A3               	bcf	4003,2,c	;volatile
 14312                           
 14313                           ;usb_device_cdc.c: 790: {};
 14314                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 14315  00251C  5032               	movf	_CDCDataInHandle,w,c
 14316  00251E  1033               	iorwf	_CDCDataInHandle+1,w,c
 14317  002520  B4D8               	btfsc	status,2,c
 14318  002522  D010               	goto	l1987
 14319  002524  C032  FFD9         	movff	_CDCDataInHandle,fsr2l
 14320  002528  C033  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 14321  00252C  AEDF               	btfss	indf2,7,c
 14322  00252E  D004               	goto	u8110
 14323  002530  0100               	movlb	0	; () banked
 14324  002532  6B67               	clrf	??_CDCTxService& (0+255),b
 14325  002534  2B67               	incf	??_CDCTxService& (0+255),f,b
 14326  002536  D002               	goto	u8118
 14327  002538                     u8110:
 14328  002538  0100               	movlb	0	; () banked
 14329  00253A  6B67               	clrf	??_CDCTxService& (0+255),b
 14330  00253C                     u8118:
 14331  00253C  5167               	movf	??_CDCTxService& (0+255),w,b
 14332  00253E  6F68               	movwf	_CDCTxService$6155& (0+255),b
 14333  002540  6B69               	clrf	(_CDCTxService$6155+1)& (0+255),b
 14334  002542  D005               	goto	l1989
 14335  002544                     l1987:
 14336                           
 14337                           ; BSR set to: 0
 14338  002544  0E00               	movlw	0
 14339  002546  0100               	movlb	0	; () banked
 14340  002548  6F69               	movwf	(_CDCTxService$6155+1)& (0+255),b
 14341  00254A  0E00               	movlw	0
 14342  00254C  6F68               	movwf	_CDCTxService$6155& (0+255),b
 14343  00254E                     l1989:
 14344                           
 14345                           ; BSR set to: 0
 14346                           
 14347                           ; BSR set to: 0
 14348  00254E  5168               	movf	_CDCTxService$6155& (0+255),w,b
 14349  002550  1169               	iorwf	(_CDCTxService$6155+1)& (0+255),w,b
 14350  002552  B4D8               	btfsc	status,2,c
 14351  002554  D002               	goto	l1985
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;usb_device_cdc.c: 793: {
 14355                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 14356  002556  84A3               	bsf	4003,2,c	;volatile
 14357                           
 14358                           ;usb_device_cdc.c: 795: return;
 14359  002558  0012               	return	
 14360  00255A                     l1985:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;usb_device_cdc.c: 796: }
 14364                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 14365                           
 14366                           ; BSR set to: 0
 14367  00255A  0E03               	movlw	3
 14368  00255C  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 14369  00255E  A4D8               	btfss	status,2,c
 14370  002560  D002               	goto	l1991
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 14374  002562  0E00               	movlw	0
 14375  002564  6FEB               	movwf	_cdc_trf_state& (0+255),b
 14376  002566                     l1991:
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 14380  002566  51EB               	movf	_cdc_trf_state& (0+255),w,b
 14381  002568  A4D8               	btfss	status,2,c
 14382  00256A  D002               	goto	l1992
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;usb_device_cdc.c: 810: {
 14386                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 14387  00256C  84A3               	bsf	4003,2,c	;volatile
 14388                           
 14389                           ;usb_device_cdc.c: 812: return;
 14390  00256E  0012               	return	
 14391  002570                     l1992:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;usb_device_cdc.c: 813: }
 14395                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 14396                           
 14397                           ; BSR set to: 0
 14398  002570  0E02               	movlw	2
 14399  002572  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 14400  002574  A4D8               	btfss	status,2,c
 14401  002576  D013               	goto	l1993
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;usb_device_cdc.c: 819: {
 14405                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 14406  002578  0E01               	movlw	1
 14407  00257A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14408  00257C  0E00               	movlw	0
 14409  00257E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14410  002580  0E00               	movlw	0
 14411  002582  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14412  002584  0E00               	movlw	0
 14413  002586  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14414  002588  0E02               	movlw	2
 14415  00258A  EC96  F01D         	call	_USBTransferOnePacket
 14416  00258E  C060  F032         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14417  002592  C061  F033         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14418                           
 14419                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 14420  002596  0E03               	movlw	3
 14421  002598  0100               	movlb	0	; () banked
 14422  00259A  6FEB               	movwf	_cdc_trf_state& (0+255),b
 14423                           
 14424                           ;usb_device_cdc.c: 823: }
 14425  00259C  D05E               	goto	l1995
 14426  00259E                     l1993:
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 14430                           
 14431                           ; BSR set to: 0
 14432  00259E  05EB               	decf	_cdc_trf_state& (0+255),w,b
 14433  0025A0  A4D8               	btfss	status,2,c
 14434  0025A2  D05B               	goto	l1995
 14435                           
 14436                           ; BSR set to: 0
 14437                           ;usb_device_cdc.c: 825: {
 14438                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 14439  0025A4  0E40               	movlw	64
 14440  0025A6  65DD               	cpfsgt	_cdc_tx_len& (0+255),b
 14441  0025A8  D003               	goto	l1996
 14442                           
 14443                           ; BSR set to: 0
 14444                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 14445  0025AA  0E40               	movlw	64
 14446  0025AC  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 14447  0025AE  D002               	goto	l1997
 14448  0025B0                     l1996:
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;usb_device_cdc.c: 831: else
 14452                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 14453  0025B0  C0DD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 14454  0025B4                     l1997:
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 14458                           
 14459                           ; BSR set to: 0
 14460  0025B4  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 14461  0025B6  0800               	sublw	0
 14462  0025B8  25DD               	addwf	_cdc_tx_len& (0+255),w,b
 14463  0025BA  6FDD               	movwf	_cdc_tx_len& (0+255),b
 14464                           
 14465                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 14466  0025BC  0E00               	movlw	0
 14467  0025BE  0101               	movlb	1	; () banked
 14468  0025C0  6F4E               	movwf	_pCDCDst& (0+255),b
 14469  0025C2  0E05               	movlw	5
 14470  0025C4  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 14471                           
 14472                           ; BSR set to: 1
 14473                           ;usb_device_cdc.c: 841: i = byte_to_send;
 14474  0025C6  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 14475                           
 14476                           ; BSR set to: 1
 14477                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 14478  0025CA  0100               	movlb	0	; () banked
 14479  0025CC  51DC               	movf	_cdc_mem_type& (0+255),w,b
 14480  0025CE  B4D8               	btfsc	status,2,c
 14481  0025D0  D012               	goto	l1999
 14482  0025D2  D026               	goto	l2003
 14483  0025D4                     
 14484                           ; BSR set to: 0
 14485                           ;usb_device_cdc.c: 845: {
 14486                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 14487                           
 14488                           ; BSR set to: 0
 14489  0025D4  C151  FFD9         	movff	_pCDCSrc,fsr2l
 14490  0025D8  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 14491  0025DC  C14E  FFE1         	movff	_pCDCDst,fsr1l
 14492  0025E0  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 14493  0025E4  CFDF FFE7          	movff	indf2,indf1
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 14497  0025E8  0101               	movlb	1	; () banked
 14498  0025EA  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 14499  0025EC  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 14500                           
 14501                           ; BSR set to: 1
 14502                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 14503  0025EE  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 14504  0025F0  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 14505                           
 14506                           ; BSR set to: 1
 14507                           ;usb_device_cdc.c: 849: i--;
 14508  0025F2  0100               	movlb	0	; () banked
 14509  0025F4  076A               	decf	CDCTxService@i& (0+255),f,b
 14510  0025F6                     l1999:
 14511                           
 14512                           ; BSR set to: 0
 14513                           
 14514                           ; BSR set to: 0
 14515  0025F6  516A               	movf	CDCTxService@i& (0+255),w,b
 14516  0025F8  B4D8               	btfsc	status,2,c
 14517  0025FA  D015               	goto	u8200
 14518  0025FC  D7EB               	goto	l2000
 14519  0025FE                     
 14520                           ; BSR set to: 0
 14521                           ;usb_device_cdc.c: 855: {
 14522                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 14523                           
 14524                           ; BSR set to: 0
 14525  0025FE  C151  FFD9         	movff	_pCDCSrc,fsr2l
 14526  002602  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 14527  002606  C14E  FFE1         	movff	_pCDCDst,fsr1l
 14528  00260A  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 14529  00260E  CFDF FFE7          	movff	indf2,indf1
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 14533  002612  0101               	movlb	1	; () banked
 14534  002614  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 14535  002616  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 14536                           
 14537                           ; BSR set to: 1
 14538                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 14539  002618  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 14540  00261A  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 14541                           
 14542                           ; BSR set to: 1
 14543                           ;usb_device_cdc.c: 859: i--;
 14544  00261C  0100               	movlb	0	; () banked
 14545  00261E  076A               	decf	CDCTxService@i& (0+255),f,b
 14546  002620                     l2003:
 14547                           
 14548                           ; BSR set to: 0
 14549                           
 14550                           ; BSR set to: 0
 14551  002620  516A               	movf	CDCTxService@i& (0+255),w,b
 14552  002622  A4D8               	btfss	status,2,c
 14553  002624  D7EC               	goto	l2004
 14554  002626                     u8200:
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;usb_device_cdc.c: 860: }
 14558                           ;usb_device_cdc.c: 861: }
 14559                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 14560                           
 14561                           ; BSR set to: 0
 14562                           
 14563                           ; BSR set to: 0
 14564  002626  51DD               	movf	_cdc_tx_len& (0+255),w,b
 14565  002628  A4D8               	btfss	status,2,c
 14566  00262A  D008               	goto	l2008
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;usb_device_cdc.c: 868: {
 14570                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 14571  00262C  0E40               	movlw	64
 14572  00262E  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14573  002630  A4D8               	btfss	status,2,c
 14574  002632  D002               	goto	l2007
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 14578  002634  0E02               	movlw	2
 14579  002636  D001               	goto	L26
 14580  002638                     l2007:
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;usb_device_cdc.c: 871: else
 14584                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 14585                           
 14586                           ; BSR set to: 0
 14587  002638  0E03               	movlw	3
 14588  00263A                     L26:
 14589  00263A  6FEB               	movwf	_cdc_trf_state& (0+255),b
 14590  00263C                     l2008:
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;usb_device_cdc.c: 873: }
 14594                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14595                           
 14596                           ; BSR set to: 0
 14597                           
 14598                           ; BSR set to: 0
 14599  00263C  0E01               	movlw	1
 14600  00263E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14601  002640  0E00               	movlw	0
 14602  002642  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14603  002644  0E05               	movlw	5
 14604  002646  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14605  002648  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14606  00264C  0E02               	movlw	2
 14607  00264E  EC96  F01D         	call	_USBTransferOnePacket
 14608  002652  C060  F032         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14609  002656  C061  F033         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14610  00265A                     l1995:
 14611                           
 14612                           ;usb_device_cdc.c: 876: }
 14613                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 14614  00265A  84A3               	bsf	4003,2,c	;volatile
 14615  00265C  0012               	return		;funcret
 14616  00265E                     __end_of_CDCTxService:
 14617                           	opt stack 0
 14618                           tblptru	equ	0xFF8
 14619                           tblptrh	equ	0xFF7
 14620                           tblptrl	equ	0xFF6
 14621                           tablat	equ	0xFF5
 14622                           prodh	equ	0xFF4
 14623                           prodl	equ	0xFF3
 14624                           intcon	equ	0xFF2
 14625                           intcon3	equ	0xFF0
 14626                           postinc0	equ	0xFEE
 14627                           wreg	equ	0xFE8
 14628                           indf1	equ	0xFE7
 14629                           postdec1	equ	0xFE5
 14630                           fsr1h	equ	0xFE2
 14631                           fsr1l	equ	0xFE1
 14632                           indf2	equ	0xFDF
 14633                           postinc2	equ	0xFDE
 14634                           fsr2h	equ	0xFDA
 14635                           fsr2l	equ	0xFD9
 14636                           status	equ	0xFD8
 14637                           
 14638 ;; *************** function _USBTransferOnePacket *****************
 14639 ;; Defined at:
 14640 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  ep              1    wreg     unsigned char 
 14643 ;;  dir             1    0[BANK0 ] unsigned char 
 14644 ;;  data            2    1[BANK0 ] PTR unsigned char 
 14645 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 14646 ;;  len             1    3[BANK0 ] unsigned char 
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;  ep              1    4[BANK0 ] unsigned char 
 14649 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 14650 ;;		 -> BDT(48), NULL(0), 
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  2    0[BANK0 ] PTR void 
 14653 ;; Registers used:
 14654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14660 ;;      Params:         0       4       0       0       0       0       0       0       0
 14661 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14663 ;;      Totals:         0       7       0       0       0       0       0       0       0
 14664 ;;Total ram usage:        7 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; Hardware stack levels required when called:   11
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		_getsUSBUSART
 14671 ;;		_CDCTxService
 14672 ;;		_USBCDCEventHandler
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text46
 14677  003B2C                     __ptext46:
 14678                           	opt stack 0
 14679  003B2C                     _USBTransferOnePacket:
 14680                           	opt stack 16
 14681                           
 14682                           ;incstack = 0
 14683                           ;USBTransferOnePacket@ep stored from wreg
 14684  003B2C  0100               	movlb	0	; () banked
 14685  003B2E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 14686                           
 14687                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 14688                           ;usb_device.c: 762: if(dir != 0)
 14689  003B30  0100               	movlb	0	; () banked
 14690  003B32  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 14691  003B34  B4D8               	btfsc	status,2,c
 14692  003B36  D007               	goto	l1670
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;usb_device.c: 763: {
 14696                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 14697  003B38  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 14698  003B3A  0D02               	mullw	2
 14699  003B3C  0ECA               	movlw	low _pBDTEntryIn
 14700  003B3E  24F3               	addwf	prodl,w,c
 14701  003B40  6ED9               	movwf	fsr2l,c
 14702  003B42  0E00               	movlw	high _pBDTEntryIn
 14703  003B44  D006               	goto	L27
 14704  003B46                     l1670:
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;usb_device.c: 767: else
 14708                           ;usb_device.c: 768: {
 14709                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 14710                           
 14711                           ; BSR set to: 0
 14712  003B46  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 14713  003B48  0D02               	mullw	2
 14714  003B4A  0E40               	movlw	low _pBDTEntryOut
 14715  003B4C  24F3               	addwf	prodl,w,c
 14716  003B4E  6ED9               	movwf	fsr2l,c
 14717  003B50  0E01               	movlw	high _pBDTEntryOut
 14718  003B52                     L27:
 14719  003B52  20F4               	addwfc	prodh,w,c
 14720  003B54  6EDA               	movwf	fsr2h,c
 14721  003B56  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 14722  003B5A  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 14723                           
 14724                           ; BSR set to: 0
 14725                           ;usb_device.c: 771: }
 14726                           ;usb_device.c: 775: if(handle == 0)
 14727                           
 14728                           ; BSR set to: 0
 14729  003B5E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 14730  003B60  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 14731  003B62  A4D8               	btfss	status,2,c
 14732  003B64  D005               	goto	l1672
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;usb_device.c: 776: {
 14736                           ;usb_device.c: 777: return 0;
 14737  003B66  0E00               	movlw	0
 14738  003B68  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 14739  003B6A  0E00               	movlw	0
 14740  003B6C  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 14741                           
 14742                           ; BSR set to: 0
 14743  003B6E  0012               	return	
 14744  003B70                     l1672:
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;usb_device.c: 778: }
 14748                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 14749                           
 14750                           ; BSR set to: 0
 14751  003B70  EE20 F002          	lfsr	2,2
 14752  003B74  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 14753  003B76  26D9               	addwf	fsr2l,f,c
 14754  003B78  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 14755  003B7A  22DA               	addwfc	fsr2h,f,c
 14756  003B7C  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 14757  003B80  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 14758                           
 14759                           ;usb_device.c: 781: handle->CNT = len;
 14760  003B84  EE20 F001          	lfsr	2,1
 14761  003B88  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 14762  003B8A  26D9               	addwf	fsr2l,f,c
 14763  003B8C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 14764  003B8E  22DA               	addwfc	fsr2h,f,c
 14765  003B90  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 14769  003B94  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 14770  003B98  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 14771  003B9C  0E40               	movlw	64
 14772  003B9E  16DF               	andwf	indf2,f,c
 14773                           
 14774                           ; BSR set to: 0
 14775                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 14776  003BA0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 14777  003BA4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 14778  003BA8  0E00               	movlw	0
 14779  003BAA  86DB               	bsf	plusw2,3,c
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 14783  003BAC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 14784  003BB0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 14785  003BB4  0E00               	movlw	0
 14786  003BB6  8EDB               	bsf	plusw2,7,c
 14787                           
 14788                           ; BSR set to: 0
 14789                           ;usb_device.c: 787: if(dir != 0)
 14790  003BB8  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 14791  003BBA  B4D8               	btfsc	status,2,c
 14792  003BBC  D007               	goto	l1674
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;usb_device.c: 788: {
 14796                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 14797  003BBE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 14798  003BC0  0D02               	mullw	2
 14799  003BC2  0ECA               	movlw	low _pBDTEntryIn
 14800  003BC4  24F3               	addwf	prodl,w,c
 14801  003BC6  6ED9               	movwf	fsr2l,c
 14802  003BC8  0E00               	movlw	high _pBDTEntryIn
 14803  003BCA  D006               	goto	L28
 14804  003BCC                     l1674:
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;usb_device.c: 792: else
 14808                           ;usb_device.c: 793: {
 14809                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 14810                           
 14811                           ; BSR set to: 0
 14812  003BCC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 14813  003BCE  0D02               	mullw	2
 14814  003BD0  0E40               	movlw	low _pBDTEntryOut
 14815  003BD2  24F3               	addwf	prodl,w,c
 14816  003BD4  6ED9               	movwf	fsr2l,c
 14817  003BD6  0E01               	movlw	high _pBDTEntryOut
 14818  003BD8                     L28:
 14819  003BD8  20F4               	addwfc	prodh,w,c
 14820  003BDA  6EDA               	movwf	fsr2h,c
 14821  003BDC  0E04               	movlw	4
 14822  003BDE  1ADF               	xorwf	indf2,f,c
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;usb_device.c: 796: }
 14826                           ;usb_device.c: 797: return (void*)handle;
 14827                           
 14828                           ; BSR set to: 0
 14829  003BE0  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 14830  003BE4  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 14831  003BE8  0012               	return	
 14832  003BEA                     __end_of_USBTransferOnePacket:
 14833                           	opt stack 0
 14834                           tblptru	equ	0xFF8
 14835                           tblptrh	equ	0xFF7
 14836                           tblptrl	equ	0xFF6
 14837                           tablat	equ	0xFF5
 14838                           prodh	equ	0xFF4
 14839                           prodl	equ	0xFF3
 14840                           intcon	equ	0xFF2
 14841                           intcon3	equ	0xFF0
 14842                           postinc0	equ	0xFEE
 14843                           wreg	equ	0xFE8
 14844                           indf1	equ	0xFE7
 14845                           postdec1	equ	0xFE5
 14846                           fsr1h	equ	0xFE2
 14847                           fsr1l	equ	0xFE1
 14848                           indf2	equ	0xFDF
 14849                           postinc2	equ	0xFDE
 14850                           postdec2	equ	0xFDD
 14851                           plusw2	equ	0xFDB
 14852                           fsr2h	equ	0xFDA
 14853                           fsr2l	equ	0xFD9
 14854                           status	equ	0xFD8
 14855                           
 14856 ;; *************** function _USBDeviceInit *****************
 14857 ;; Defined at:
 14858 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;		None
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;  i               1    8[BANK0 ] unsigned char 
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  1    wreg      void 
 14865 ;; Registers used:
 14866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14867 ;; Tracked objects:
 14868 ;;		On entry : 0/0
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14872 ;;      Params:         0       0       0       0       0       0       0       0       0
 14873 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14875 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14876 ;;Total ram usage:        1 bytes
 14877 ;; Hardware stack levels used:    1
 14878 ;; Hardware stack levels required when called:   12
 14879 ;; This function calls:
 14880 ;;		_memset
 14881 ;; This function is called by:
 14882 ;;		_main
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           	psect	text47
 14887  0029F2                     __ptext47:
 14888                           	opt stack 0
 14889  0029F2                     _USBDeviceInit:
 14890                           	opt stack 18
 14891                           
 14892                           ;usb_device.c: 239: uint8_t i;
 14893                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;incstack = 0
 14897  0029F2  94A3               	bcf	4003,2,c	;volatile
 14898                           
 14899                           ;usb_device.c: 244: {UEIR = 0;};
 14900  0029F4  0E00               	movlw	0
 14901  0029F6  6E67               	movwf	3943,c	;volatile
 14902                           
 14903                           ;usb_device.c: 247: {UIR = 0;};
 14904  0029F8  0E00               	movlw	0
 14905  0029FA  6E65               	movwf	3941,c	;volatile
 14906                           
 14907                           ;usb_device.c: 250: UEP0 = 0;
 14908  0029FC  0E00               	movlw	0
 14909  0029FE  6E6A               	movwf	3946,c	;volatile
 14910                           
 14911                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 14912  002A00  0E6B               	movlw	107
 14913  002A02  0100               	movlb	0	; () banked
 14914  002A04  6F60               	movwf	memset@p1& (0+255),b
 14915  002A06  0E0F               	movlw	15
 14916  002A08  6F61               	movwf	(memset@p1+1)& (0+255),b
 14917  002A0A  0E00               	movlw	0
 14918  002A0C  6F63               	movwf	(memset@c+1)& (0+255),b
 14919  002A0E  0E00               	movlw	0
 14920  002A10  6F62               	movwf	memset@c& (0+255),b
 14921  002A12  0E00               	movlw	0
 14922  002A14  6F65               	movwf	(memset@n+1)& (0+255),b
 14923  002A16  0E02               	movlw	2
 14924  002A18  6F64               	movwf	memset@n& (0+255),b
 14925  002A1A  EC9A  F029         	call	_memset	;wreg free
 14926                           
 14927                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14928  002A1E  0E16               	movlw	22
 14929  002A20  6E62               	movwf	3938,c	;volatile
 14930  002A22  0E9F               	movlw	159
 14931  002A24  6E66               	movwf	3942,c	;volatile
 14932  002A26  0E7B               	movlw	123
 14933  002A28  6E64               	movwf	3940,c	;volatile
 14934                           
 14935                           ;usb_device.c: 257: ;
 14936                           ;usb_device.c: 260: ;
 14937                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14938  002A2A  0E00               	movlw	0
 14939  002A2C  0100               	movlb	0	; () banked
 14940  002A2E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 14941  002A30                     l10896:
 14942                           
 14943                           ; BSR set to: 0
 14944  002A30  0E0B               	movlw	11
 14945  002A32  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 14946  002A34  D001               	goto	l1630
 14947  002A36  D00E               	goto	u9690
 14948  002A38                     l1630:
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;usb_device.c: 264: {
 14952                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 14953                           
 14954                           ; BSR set to: 0
 14955  002A38  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14956  002A3A  0D04               	mullw	4
 14957  002A3C  0E00               	movlw	0
 14958  002A3E  24F3               	addwf	prodl,w,c
 14959  002A40  6ED9               	movwf	fsr2l,c
 14960  002A42  0E04               	movlw	4
 14961  002A44  20F4               	addwfc	prodh,w,c
 14962  002A46  6EDA               	movwf	fsr2h,c
 14963  002A48  6ADE               	clrf	postinc2,c
 14964  002A4A  6ADE               	clrf	postinc2,c
 14965  002A4C  6ADE               	clrf	postinc2,c
 14966  002A4E  6ADD               	clrf	postdec2,c
 14967                           
 14968                           ; BSR set to: 0
 14969  002A50  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 14970  002A52  D7EE               	goto	l10896
 14971  002A54                     u9690:
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;usb_device.c: 266: }
 14975                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 14976  002A54  8C60               	bsf	3936,6,c	;volatile
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;usb_device.c: 272: UADDR = 0x00;
 14980  002A56  0E00               	movlw	0
 14981  002A58  6E63               	movwf	3939,c	;volatile
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 14985  002A5A  9860               	bcf	3936,4,c	;volatile
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 14989  002A5C  9C60               	bcf	3936,6,c	;volatile
 14990                           
 14991                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 14992  002A5E  D009               	goto	l1632
 14993  002A60                     
 14994                           ; BSR set to: 0
 14995                           ;usb_device.c: 282: {
 14996                           ;usb_device.c: 283: (UIR &= 0xF7);
 14997                           
 14998                           ; BSR set to: 0
 14999  002A60  9665               	bcf	3941,3,c	;volatile
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 15003  002A62  0E00               	movlw	0
 15004  002A64  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15005                           
 15006                           ; BSR set to: 0
 15007                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 15008  002A66  0E00               	movlw	0
 15009  002A68  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 15013  002A6A  0E00               	movlw	0
 15014  002A6C  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 15015  002A6E  0E00               	movlw	0
 15016  002A70  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 15017  002A72                     l1632:
 15018                           
 15019                           ; BSR set to: 0
 15020                           
 15021                           ; BSR set to: 0
 15022  002A72  B665               	btfsc	3941,3,c	;volatile
 15023  002A74  D7F5               	goto	l1633
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;usb_device.c: 288: }
 15027                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 15028                           
 15029                           ; BSR set to: 0
 15030  002A76  0E01               	movlw	1
 15031  002A78  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15032                           
 15033                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 15034  002A7A  0E01               	movlw	1
 15035  002A7C  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15036                           
 15037                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 15038  002A7E  0E00               	movlw	0
 15039  002A80  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15040                           
 15041                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 15042  002A82  0E00               	movlw	0
 15043  002A84  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15044                           
 15045                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 15046  002A86  0E00               	movlw	0
 15047  002A88  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 15048                           
 15049                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 15050  002A8A  0E00               	movlw	0
 15051  002A8C  6F68               	movwf	USBDeviceInit@i& (0+255),b
 15052  002A8E                     l10924:
 15053                           
 15054                           ; BSR set to: 0
 15055  002A8E  0E02               	movlw	2
 15056  002A90  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 15057  002A92  D001               	goto	l1635
 15058  002A94  D02E               	goto	u9720
 15059  002A96                     l1635:
 15060                           
 15061                           ; BSR set to: 0
 15062                           ;usb_device.c: 302: {
 15063                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 15064                           
 15065                           ; BSR set to: 0
 15066  002A96  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15067  002A98  0D02               	mullw	2
 15068  002A9A  0ECA               	movlw	low _pBDTEntryIn
 15069  002A9C  24F3               	addwf	prodl,w,c
 15070  002A9E  6ED9               	movwf	fsr2l,c
 15071  002AA0  0E00               	movlw	high _pBDTEntryIn
 15072  002AA2  20F4               	addwfc	prodh,w,c
 15073  002AA4  6EDA               	movwf	fsr2h,c
 15074  002AA6  0E00               	movlw	0
 15075  002AA8  6EDE               	movwf	postinc2,c
 15076  002AAA  0E00               	movlw	0
 15077  002AAC  6EDD               	movwf	postdec2,c
 15078                           
 15079                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 15080  002AAE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15081  002AB0  0D02               	mullw	2
 15082  002AB2  0E40               	movlw	low _pBDTEntryOut
 15083  002AB4  24F3               	addwf	prodl,w,c
 15084  002AB6  6ED9               	movwf	fsr2l,c
 15085  002AB8  0E01               	movlw	high _pBDTEntryOut
 15086  002ABA  20F4               	addwfc	prodh,w,c
 15087  002ABC  6EDA               	movwf	fsr2h,c
 15088  002ABE  0E00               	movlw	0
 15089  002AC0  6EDE               	movwf	postinc2,c
 15090  002AC2  0E00               	movlw	0
 15091  002AC4  6EDD               	movwf	postdec2,c
 15092                           
 15093                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 15094  002AC6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15095  002AC8  0D01               	mullw	1
 15096  002ACA  0ED3               	movlw	low _ep_data_in
 15097  002ACC  24F3               	addwf	prodl,w,c
 15098  002ACE  6ED9               	movwf	fsr2l,c
 15099  002AD0  0E00               	movlw	high _ep_data_in
 15100  002AD2  20F4               	addwfc	prodh,w,c
 15101  002AD4  6EDA               	movwf	fsr2h,c
 15102  002AD6  0E00               	movlw	0
 15103  002AD8  6EDF               	movwf	indf2,c
 15104                           
 15105                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 15106  002ADA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15107  002ADC  0D01               	mullw	1
 15108  002ADE  0ED0               	movlw	low _ep_data_out
 15109  002AE0  24F3               	addwf	prodl,w,c
 15110  002AE2  6ED9               	movwf	fsr2l,c
 15111  002AE4  0E00               	movlw	high _ep_data_out
 15112  002AE6  20F4               	addwfc	prodh,w,c
 15113  002AE8  6EDA               	movwf	fsr2h,c
 15114  002AEA  0E00               	movlw	0
 15115  002AEC  6EDF               	movwf	indf2,c
 15116                           
 15117                           ; BSR set to: 0
 15118  002AEE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 15119  002AF0  D7CE               	goto	l10924
 15120  002AF2                     u9720:
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;usb_device.c: 307: }
 15124                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15125                           
 15126                           ; BSR set to: 0
 15127  002AF2  0E08               	movlw	8
 15128  002AF4  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 15129  002AF6  0E04               	movlw	4
 15130  002AF8  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 15134  002AFA  0E16               	movlw	22
 15135  002AFC  6E6A               	movwf	3946,c	;volatile
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15139  002AFE  0E04               	movlw	4
 15140  002B00  0104               	movlb	4	; () banked
 15141  002B02  6F03               	movwf	3,b	;volatile
 15142  002B04  0E30               	movlw	48
 15143  002B06  6F02               	movwf	2,b	;volatile
 15144                           
 15145                           ; BSR set to: 4
 15146                           ;usb_device.c: 315: BDT[0].CNT = 8;
 15147  002B08  0E08               	movlw	8
 15148  002B0A  6F01               	movwf	1,b	;volatile
 15149                           
 15150                           ; BSR set to: 4
 15151                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 15152  002B0C  0E04               	movlw	4
 15153  002B0E  6F00               	movwf	0,b	;volatile
 15154                           
 15155                           ; BSR set to: 4
 15156                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 15157  002B10  8F00               	bsf	0,7,b	;volatile
 15158                           
 15159                           ; BSR set to: 4
 15160                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 15161  002B12  0E00               	movlw	0
 15162  002B14  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 15163                           
 15164                           ; BSR set to: 4
 15165                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 15166  002B16  0E00               	movlw	0
 15167  002B18  0100               	movlb	0	; () banked
 15168  002B1A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 15169                           
 15170                           ; BSR set to: 0
 15171  002B1C  0012               	return		;funcret
 15172  002B1E                     __end_of_USBDeviceInit:
 15173                           	opt stack 0
 15174                           tblptru	equ	0xFF8
 15175                           tblptrh	equ	0xFF7
 15176                           tblptrl	equ	0xFF6
 15177                           tablat	equ	0xFF5
 15178                           prodh	equ	0xFF4
 15179                           prodl	equ	0xFF3
 15180                           intcon	equ	0xFF2
 15181                           intcon3	equ	0xFF0
 15182                           postinc0	equ	0xFEE
 15183                           wreg	equ	0xFE8
 15184                           indf1	equ	0xFE7
 15185                           postdec1	equ	0xFE5
 15186                           fsr1h	equ	0xFE2
 15187                           fsr1l	equ	0xFE1
 15188                           indf2	equ	0xFDF
 15189                           postinc2	equ	0xFDE
 15190                           postdec2	equ	0xFDD
 15191                           plusw2	equ	0xFDB
 15192                           fsr2h	equ	0xFDA
 15193                           fsr2l	equ	0xFD9
 15194                           status	equ	0xFD8
 15195                           
 15196 ;; *************** function _memset *****************
 15197 ;; Defined at:
 15198 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  p1              2    0[BANK0 ] PTR void 
 15201 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15202 ;;  c               2    2[BANK0 ] int 
 15203 ;;  n               2    4[BANK0 ] unsigned int 
 15204 ;; Auto vars:     Size  Location     Type
 15205 ;;  p               2    6[BANK0 ] PTR unsigned char 
 15206 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  2    0[BANK0 ] PTR void 
 15209 ;; Registers used:
 15210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15216 ;;      Params:         0       6       0       0       0       0       0       0       0
 15217 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15219 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15220 ;;Total ram usage:        8 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:   11
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_USBDeviceInit
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text48
 15231  005334                     __ptext48:
 15232                           	opt stack 0
 15233  005334                     _memset:
 15234                           	opt stack 18
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;incstack = 0
 15238  005334  C060  F066         	movff	memset@p1,memset@p
 15239  005338  C061  F067         	movff	memset@p1+1,memset@p+1
 15240  00533C  D009               	goto	l2533
 15241  00533E                     l10634:
 15242  00533E  C066  FFD9         	movff	memset@p,fsr2l
 15243  005342  C067  FFDA         	movff	memset@p+1,fsr2h
 15244  005346  C062  FFDF         	movff	memset@c,indf2
 15245  00534A  0100               	movlb	0	; () banked
 15246  00534C  4B66               	infsnz	memset@p& (0+255),f,b
 15247  00534E  2B67               	incf	(memset@p+1)& (0+255),f,b
 15248  005350                     l2533:
 15249                           
 15250                           ; BSR set to: 0
 15251  005350  0100               	movlb	0	; () banked
 15252  005352  0764               	decf	memset@n& (0+255),f,b
 15253  005354  A0D8               	btfss	status,0,c
 15254  005356  0765               	decf	(memset@n+1)& (0+255),f,b
 15255  005358  2964               	incf	memset@n& (0+255),w,b
 15256  00535A  E1F1               	bnz	l10634
 15257  00535C  2965               	incf	(memset@n+1)& (0+255),w,b
 15258  00535E  B4D8               	btfsc	status,2,c
 15259  005360  0012               	return	
 15260  005362  D7ED               	goto	l2534
 15261  005364                     __end_of_memset:
 15262                           	opt stack 0
 15263                           tblptru	equ	0xFF8
 15264                           tblptrh	equ	0xFF7
 15265                           tblptrl	equ	0xFF6
 15266                           tablat	equ	0xFF5
 15267                           prodh	equ	0xFF4
 15268                           prodl	equ	0xFF3
 15269                           intcon	equ	0xFF2
 15270                           intcon3	equ	0xFF0
 15271                           postinc0	equ	0xFEE
 15272                           wreg	equ	0xFE8
 15273                           indf1	equ	0xFE7
 15274                           postdec1	equ	0xFE5
 15275                           fsr1h	equ	0xFE2
 15276                           fsr1l	equ	0xFE1
 15277                           indf2	equ	0xFDF
 15278                           postinc2	equ	0xFDE
 15279                           postdec2	equ	0xFDD
 15280                           plusw2	equ	0xFDB
 15281                           fsr2h	equ	0xFDA
 15282                           fsr2l	equ	0xFD9
 15283                           status	equ	0xFD8
 15284                           
 15285 ;; *************** function _USBDeviceAttach *****************
 15286 ;; Defined at:
 15287 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;		None
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, status,2
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15301 ;;      Params:         0       0       0       0       0       0       0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15304 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15305 ;;Total ram usage:        0 bytes
 15306 ;; Hardware stack levels used:    1
 15307 ;; Hardware stack levels required when called:   11
 15308 ;; This function calls:
 15309 ;;		Nothing
 15310 ;; This function is called by:
 15311 ;;		_main
 15312 ;; This function uses a non-reentrant model
 15313 ;;
 15314                           
 15315                           	psect	text49
 15316  00523A                     __ptext49:
 15317                           	opt stack 0
 15318  00523A                     _USBDeviceAttach:
 15319                           	opt stack 19
 15320                           
 15321                           ;usb_device.c: 1050: {
 15322                           ;usb_device.c: 1051: if(1 == 1)
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;incstack = 0
 15326  00523A  0100               	movlb	0	; () banked
 15327  00523C  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 15328  00523E  A4D8               	btfss	status,2,c
 15329  005240  0012               	return	
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;usb_device.c: 1052: {
 15333                           ;usb_device.c: 1054: UCON = 0;
 15334  005242  0E00               	movlw	0
 15335  005244  6E60               	movwf	3936,c	;volatile
 15336                           
 15337                           ;usb_device.c: 1057: UIE = 0;
 15338  005246  0E00               	movlw	0
 15339  005248  6E64               	movwf	3940,c	;volatile
 15340                           
 15341                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 15342  00524A  0E16               	movlw	22
 15343  00524C  6E62               	movwf	3938,c	;volatile
 15344  00524E  0E9F               	movlw	159
 15345  005250  6E66               	movwf	3942,c	;volatile
 15346  005252  0E7B               	movlw	123
 15347  005254  6E64               	movwf	3940,c	;volatile
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 15351  005256  8ED0               	bsf	4048,7,c	;volatile
 15352                           
 15353                           ; BSR set to: 0
 15354  005258  84A5               	bsf	4005,2,c	;volatile
 15355                           
 15356                           ; BSR set to: 0
 15357  00525A  84A3               	bsf	4003,2,c	;volatile
 15358                           
 15359                           ; BSR set to: 0
 15360  00525C  8EF2               	bsf	intcon,7,c	;volatile
 15361                           
 15362                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15363  00525E  D001               	goto	l1692
 15364  005260                     l1693:
 15365  005260  8660               	bsf	3936,3,c	;volatile
 15366  005262                     l1692:
 15367  005262  A660               	btfss	3936,3,c	;volatile
 15368  005264  D7FD               	goto	l1693
 15369                           
 15370                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 15371  005266  0E01               	movlw	1
 15372  005268  0100               	movlb	0	; () banked
 15373  00526A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 15374                           
 15375                           ; BSR set to: 0
 15376  00526C  0012               	return	
 15377  00526E                     __end_of_USBDeviceAttach:
 15378                           	opt stack 0
 15379                           tblptru	equ	0xFF8
 15380                           tblptrh	equ	0xFF7
 15381                           tblptrl	equ	0xFF6
 15382                           tablat	equ	0xFF5
 15383                           prodh	equ	0xFF4
 15384                           prodl	equ	0xFF3
 15385                           intcon	equ	0xFF2
 15386                           intcon3	equ	0xFF0
 15387                           postinc0	equ	0xFEE
 15388                           wreg	equ	0xFE8
 15389                           indf1	equ	0xFE7
 15390                           postdec1	equ	0xFE5
 15391                           fsr1h	equ	0xFE2
 15392                           fsr1l	equ	0xFE1
 15393                           indf2	equ	0xFDF
 15394                           postinc2	equ	0xFDE
 15395                           postdec2	equ	0xFDD
 15396                           plusw2	equ	0xFDB
 15397                           fsr2h	equ	0xFDA
 15398                           fsr2l	equ	0xFD9
 15399                           status	equ	0xFD8
 15400                           
 15401 ;; *************** function _PICoRa_test_powerup *****************
 15402 ;; Defined at:
 15403 ;;		line 62 in file "../Includes/Board/PICoRatestAll.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:   17
 15424 ;; This function calls:
 15425 ;;		_EUSART_FlushBuffer
 15426 ;;		_moteApp_delayms
 15427 ;;		_moteApp_testSensors
 15428 ;;		_oled_clear
 15429 ;;		_test_comms
 15430 ;;		_test_leds
 15431 ;;		_test_oled
 15432 ;;		_test_switch
 15433 ;; This function is called by:
 15434 ;;		_main
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           	psect	text50
 15439  0048E4                     __ptext50:
 15440                           	opt stack 0
 15441  0048E4                     _PICoRa_test_powerup:
 15442                           	opt stack 13
 15443                           
 15444                           ;PICoRatestAll.c: 65: test_oled();
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;incstack = 0
 15448  0048E4  EC28  F022         	call	_test_oled	;wreg free
 15449                           
 15450                           ;PICoRatestAll.c: 66: moteApp_delayms(20);
 15451  0048E8  0E00               	movlw	0
 15452  0048EA  0100               	movlb	0	; () banked
 15453  0048EC  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15454  0048EE  0E14               	movlw	20
 15455  0048F0  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15456  0048F2  EC50  F029         	call	_moteApp_delayms	;wreg free
 15457                           
 15458                           ;PICoRatestAll.c: 68: test_switch();
 15459  0048F6  EC0C  F01C         	call	_test_switch	;wreg free
 15460                           
 15461                           ;PICoRatestAll.c: 70: oled_clear();
 15462  0048FA  ECFF  F02A         	call	_oled_clear	;wreg free
 15463                           
 15464                           ;PICoRatestAll.c: 71: moteApp_delayms(20);
 15465  0048FE  0E00               	movlw	0
 15466  004900  0100               	movlb	0	; () banked
 15467  004902  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15468  004904  0E14               	movlw	20
 15469  004906  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15470  004908  EC50  F029         	call	_moteApp_delayms	;wreg free
 15471                           
 15472                           ;PICoRatestAll.c: 72: test_comms();
 15473  00490C  EC86  F025         	call	_test_comms	;wreg free
 15474                           
 15475                           ;PICoRatestAll.c: 73: moteApp_delayms(20);
 15476  004910  0E00               	movlw	0
 15477  004912  0100               	movlb	0	; () banked
 15478  004914  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15479  004916  0E14               	movlw	20
 15480  004918  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15481  00491A  EC50  F029         	call	_moteApp_delayms	;wreg free
 15482                           
 15483                           ;PICoRatestAll.c: 75: test_leds();
 15484  00491E  EC20  F026         	call	_test_leds	;wreg free
 15485                           
 15486                           ;PICoRatestAll.c: 78: moteApp_delayms(20);
 15487  004922  0E00               	movlw	0
 15488  004924  0100               	movlb	0	; () banked
 15489  004926  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15490  004928  0E14               	movlw	20
 15491  00492A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15492  00492C  EC50  F029         	call	_moteApp_delayms	;wreg free
 15493                           
 15494                           ;PICoRatestAll.c: 79: EUSART_FlushBuffer();
 15495  004930  ECEC  F027         	call	_EUSART_FlushBuffer	;wreg free
 15496                           
 15497                           ;PICoRatestAll.c: 80: moteApp_delayms(20);
 15498  004934  0E00               	movlw	0
 15499  004936  0100               	movlb	0	; () banked
 15500  004938  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15501  00493A  0E14               	movlw	20
 15502  00493C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15503  00493E  EC50  F029         	call	_moteApp_delayms	;wreg free
 15504                           
 15505                           ;PICoRatestAll.c: 81: moteApp_testSensors();
 15506  004942  EC72  F01C         	call	_moteApp_testSensors	;wreg free
 15507                           
 15508                           ;PICoRatestAll.c: 82: moteApp_delayms(3000);
 15509  004946  0E0B               	movlw	11
 15510  004948  0100               	movlb	0	; () banked
 15511  00494A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 15512  00494C  0EB8               	movlw	184
 15513  00494E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 15514  004950  EC50  F029         	call	_moteApp_delayms	;wreg free
 15515  004954  0012               	return		;funcret
 15516  004956                     __end_of_PICoRa_test_powerup:
 15517                           	opt stack 0
 15518                           tblptru	equ	0xFF8
 15519                           tblptrh	equ	0xFF7
 15520                           tblptrl	equ	0xFF6
 15521                           tablat	equ	0xFF5
 15522                           prodh	equ	0xFF4
 15523                           prodl	equ	0xFF3
 15524                           intcon	equ	0xFF2
 15525                           intcon3	equ	0xFF0
 15526                           postinc0	equ	0xFEE
 15527                           wreg	equ	0xFE8
 15528                           indf1	equ	0xFE7
 15529                           postdec1	equ	0xFE5
 15530                           fsr1h	equ	0xFE2
 15531                           fsr1l	equ	0xFE1
 15532                           indf2	equ	0xFDF
 15533                           postinc2	equ	0xFDE
 15534                           postdec2	equ	0xFDD
 15535                           plusw2	equ	0xFDB
 15536                           fsr2h	equ	0xFDA
 15537                           fsr2l	equ	0xFD9
 15538                           status	equ	0xFD8
 15539                           
 15540 ;; *************** function _test_switch *****************
 15541 ;; Defined at:
 15542 ;;		line 99 in file "../Includes/Board/PICoRatestAll.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;		None
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;  timeout         2   24[BANK0 ] unsigned int 
 15547 ;;  buttonCheck     1   26[BANK0 ] unsigned char 
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  1    wreg      void 
 15550 ;; Registers used:
 15551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0
 15558 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15559 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15560 ;;      Totals:         0       4       0       0       0       0       0       0       0
 15561 ;;Total ram usage:        4 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; Hardware stack levels required when called:   16
 15564 ;; This function calls:
 15565 ;;		_oled_clear
 15566 ;;		_oled_putString
 15567 ;; This function is called by:
 15568 ;;		_PICoRa_test_powerup
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           	psect	text51
 15573  003818                     __ptext51:
 15574                           	opt stack 0
 15575  003818                     _test_switch:
 15576                           	opt stack 13
 15577                           
 15578                           ;PICoRatestAll.c: 101: uint16_t timeout = 500;
 15579                           
 15580                           ;incstack = 0
 15581  003818  0E01               	movlw	1
 15582  00381A  0100               	movlb	0	; () banked
 15583  00381C  6F79               	movwf	(test_switch@timeout+1)& (0+255),b
 15584  00381E  0EF4               	movlw	244
 15585  003820  6F78               	movwf	test_switch@timeout& (0+255),b
 15586                           
 15587                           ;PICoRatestAll.c: 102: uint8_t buttonCheck = 0x00;
 15588  003822  0E00               	movlw	0
 15589  003824  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;PICoRatestAll.c: 103: oled_clear();
 15593  003826  ECFF  F02A         	call	_oled_clear	;wreg free
 15594                           
 15595                           ;PICoRatestAll.c: 104: oled_putString("Button Test:",0,0);
 15596  00382A  0E6B               	movlw	low STR_175
 15597  00382C  0100               	movlb	0	; () banked
 15598  00382E  6F72               	movwf	oled_putString@string& (0+255),b
 15599  003830  0E7D               	movlw	high STR_175
 15600  003832  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15601  003834  0E00               	movlw	0
 15602  003836  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15603  003838  0E00               	movlw	0
 15604  00383A  6F75               	movwf	oled_putString@start_page& (0+255),b
 15605  00383C  EC1B  F025         	call	_oled_putString	;wreg free
 15606                           
 15607                           ;PICoRatestAll.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 15608  003840  A281               	btfss	3969,1,c	;volatile
 15609  003842  D002               	goto	u9580
 15610  003844  B081               	btfsc	3969,0,c	;volatile
 15611  003846  D00C               	goto	l2075
 15612  003848                     u9580:
 15613                           
 15614                           ;PICoRatestAll.c: 107: {
 15615                           ;PICoRatestAll.c: 108: oled_putString("Button FAIL",0,3);
 15616  003848  0E3A               	movlw	low STR_176
 15617  00384A  0100               	movlb	0	; () banked
 15618  00384C  6F72               	movwf	oled_putString@string& (0+255),b
 15619  00384E  0E7E               	movlw	high STR_176
 15620  003850  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15621  003852  0E00               	movlw	0
 15622  003854  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15623  003856  0E03               	movlw	3
 15624  003858  6F75               	movwf	oled_putString@start_page& (0+255),b
 15625  00385A  EC1B  F025         	call	_oled_putString	;wreg free
 15626                           
 15627                           ;PICoRatestAll.c: 109: }
 15628  00385E  D038               	goto	l2079
 15629  003860                     l2075:
 15630                           
 15631                           ;PICoRatestAll.c: 110: else
 15632                           ;PICoRatestAll.c: 111: {
 15633                           ;PICoRatestAll.c: 112: oled_putString("Press Button",0,1);
 15634  003860  0E92               	movlw	low STR_177
 15635  003862  0100               	movlb	0	; () banked
 15636  003864  6F72               	movwf	oled_putString@string& (0+255),b
 15637  003866  0E7D               	movlw	high STR_177
 15638  003868  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15639  00386A  0E00               	movlw	0
 15640  00386C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15641  00386E  0E01               	movlw	1
 15642  003870  6F75               	movwf	oled_putString@start_page& (0+255),b
 15643  003872  EC1B  F025         	call	_oled_putString	;wreg free
 15644                           
 15645                           ;PICoRatestAll.c: 113: }
 15646                           ;PICoRatestAll.c: 114: while(timeout--)
 15647  003876  D02C               	goto	l2079
 15648  003878                     l2080:
 15649                           
 15650                           ; BSR set to: 0
 15651                           ;PICoRatestAll.c: 115: {
 15652                           ;PICoRatestAll.c: 116: if(PORTBbits.RB1 == 0)
 15653  003878  B281               	btfsc	3969,1,c	;volatile
 15654  00387A  D00E               	goto	l2081
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;PICoRatestAll.c: 117: {
 15658                           ;PICoRatestAll.c: 118: oled_putString("Button1 PASS",0,2);
 15659  00387C  0E78               	movlw	low STR_178
 15660  00387E  6F72               	movwf	oled_putString@string& (0+255),b
 15661  003880  0E7D               	movlw	high STR_178
 15662  003882  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15663  003884  0E00               	movlw	0
 15664  003886  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15665  003888  0E02               	movlw	2
 15666  00388A  6F75               	movwf	oled_putString@start_page& (0+255),b
 15667  00388C  EC1B  F025         	call	_oled_putString	;wreg free
 15668                           
 15669                           ;PICoRatestAll.c: 119: buttonCheck = buttonCheck + 0x08;
 15670  003890  0100               	movlb	0	; () banked
 15671  003892  517A               	movf	test_switch@buttonCheck& (0+255),w,b
 15672  003894  0F08               	addlw	8
 15673  003896  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
 15674  003898                     l2081:
 15675                           
 15676                           ; BSR set to: 0
 15677                           ;PICoRatestAll.c: 120: }
 15678                           ;PICoRatestAll.c: 121: if(PORTBbits.RB0 == 0)
 15679                           
 15680                           ; BSR set to: 0
 15681  003898  B081               	btfsc	3969,0,c	;volatile
 15682  00389A  D00E               	goto	l2082
 15683                           
 15684                           ; BSR set to: 0
 15685                           ;PICoRatestAll.c: 122: {
 15686                           ;PICoRatestAll.c: 123: oled_putString("Button2 PASS",0,3);
 15687  00389C  0E85               	movlw	low STR_179
 15688  00389E  6F72               	movwf	oled_putString@string& (0+255),b
 15689  0038A0  0E7D               	movlw	high STR_179
 15690  0038A2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15691  0038A4  0E00               	movlw	0
 15692  0038A6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15693  0038A8  0E03               	movlw	3
 15694  0038AA  6F75               	movwf	oled_putString@start_page& (0+255),b
 15695  0038AC  EC1B  F025         	call	_oled_putString	;wreg free
 15696                           
 15697                           ;PICoRatestAll.c: 124: buttonCheck = buttonCheck + 0x80;
 15698  0038B0  0100               	movlb	0	; () banked
 15699  0038B2  517A               	movf	test_switch@buttonCheck& (0+255),w,b
 15700  0038B4  0F80               	addlw	128
 15701  0038B6  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
 15702  0038B8                     l2082:
 15703                           
 15704                           ; BSR set to: 0
 15705                           ;PICoRatestAll.c: 125: }
 15706                           ;PICoRatestAll.c: 126: if (buttonCheck == 0x88)
 15707                           
 15708                           ; BSR set to: 0
 15709  0038B8  0E88               	movlw	136
 15710  0038BA  197A               	xorwf	test_switch@buttonCheck& (0+255),w,b
 15711  0038BC  B4D8               	btfsc	status,2,c
 15712  0038BE  0012               	return	
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;PICoRatestAll.c: 129: }
 15716                           ;PICoRatestAll.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
 15717                           
 15718                           ; BSR set to: 0
 15719                           
 15720                           ; BSR set to: 0
 15721                           ;PICoRatestAll.c: 127: {
 15722                           ;PICoRatestAll.c: 128: break;
 15723  0038C0  0E9C               	movlw	156
 15724  0038C2  0100               	movlb	0	; () banked
 15725  0038C4  6F77               	movwf	??_test_switch& (0+255),b
 15726  0038C6  0ED7               	movlw	215
 15727  0038C8                     u10707:
 15728  0038C8  2EE8               	decfsz	wreg,f,c
 15729  0038CA  D7FE               	bra	u10707
 15730  0038CC  2F77               	decfsz	??_test_switch& (0+255),f,b
 15731  0038CE  D7FC               	bra	u10707
 15732  0038D0                     l2079:
 15733  0038D0  0100               	movlb	0	; () banked
 15734  0038D2  0778               	decf	test_switch@timeout& (0+255),f,b
 15735  0038D4  A0D8               	btfss	status,0,c
 15736  0038D6  0779               	decf	(test_switch@timeout+1)& (0+255),f,b
 15737  0038D8  2978               	incf	test_switch@timeout& (0+255),w,b
 15738  0038DA  E1CE               	bnz	l2080
 15739  0038DC  2979               	incf	(test_switch@timeout+1)& (0+255),w,b
 15740  0038DE  B4D8               	btfsc	status,2,c
 15741  0038E0  0012               	return	
 15742  0038E2  D7CA               	goto	l2080
 15743  0038E4                     __end_of_test_switch:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon3	equ	0xFF0
 15753                           postinc0	equ	0xFEE
 15754                           wreg	equ	0xFE8
 15755                           indf1	equ	0xFE7
 15756                           postdec1	equ	0xFE5
 15757                           fsr1h	equ	0xFE2
 15758                           fsr1l	equ	0xFE1
 15759                           indf2	equ	0xFDF
 15760                           postinc2	equ	0xFDE
 15761                           postdec2	equ	0xFDD
 15762                           plusw2	equ	0xFDB
 15763                           fsr2h	equ	0xFDA
 15764                           fsr2l	equ	0xFD9
 15765                           status	equ	0xFD8
 15766                           
 15767 ;; *************** function _test_oled *****************
 15768 ;; Defined at:
 15769 ;;		line 86 in file "../Includes/Board/PICoRatestAll.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;		None
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;		None
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  1    wreg      void 
 15776 ;; Registers used:
 15777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15783 ;;      Params:         0       0       0       0       0       0       0       0       0
 15784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15786 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15787 ;;Total ram usage:        0 bytes
 15788 ;; Hardware stack levels used:    1
 15789 ;; Hardware stack levels required when called:   16
 15790 ;; This function calls:
 15791 ;;		_oled_clear
 15792 ;;		_oled_putString
 15793 ;; This function is called by:
 15794 ;;		_PICoRa_test_powerup
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text52
 15799  004450                     __ptext52:
 15800                           	opt stack 0
 15801  004450                     _test_oled:
 15802                           	opt stack 13
 15803                           
 15804                           ;PICoRatestAll.c: 88: oled_clear();
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;incstack = 0
 15808  004450  ECFF  F02A         	call	_oled_clear	;wreg free
 15809                           
 15810                           ;PICoRatestAll.c: 90: oled_putString("MoTe v .",0,0);
 15811  004454  0E16               	movlw	low STR_169
 15812  004456  0100               	movlb	0	; () banked
 15813  004458  6F72               	movwf	oled_putString@string& (0+255),b
 15814  00445A  0E7F               	movlw	high STR_169
 15815  00445C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15816  00445E  0E00               	movlw	0
 15817  004460  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15818  004462  0E00               	movlw	0
 15819  004464  6F75               	movwf	oled_putString@start_page& (0+255),b
 15820  004466  EC1B  F025         	call	_oled_putString	;wreg free
 15821                           
 15822                           ;PICoRatestAll.c: 91: oled_putString("0",0,6);
 15823  00446A  0EC4               	movlw	low (STR_143+11)
 15824  00446C  0100               	movlb	0	; () banked
 15825  00446E  6F72               	movwf	oled_putString@string& (0+255),b
 15826  004470  0E7D               	movlw	high (STR_143+11)
 15827  004472  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15828  004474  0E00               	movlw	0
 15829  004476  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15830  004478  0E06               	movlw	6
 15831  00447A  6F75               	movwf	oled_putString@start_page& (0+255),b
 15832  00447C  EC1B  F025         	call	_oled_putString	;wreg free
 15833                           
 15834                           ;PICoRatestAll.c: 92: oled_putString("1",0,8);
 15835  004480  0ED1               	movlw	low (STR_144+11)
 15836  004482  0100               	movlb	0	; () banked
 15837  004484  6F72               	movwf	oled_putString@string& (0+255),b
 15838  004486  0E7D               	movlw	high (STR_144+11)
 15839  004488  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15840  00448A  0E00               	movlw	0
 15841  00448C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15842  00448E  0E08               	movlw	8
 15843  004490  6F75               	movwf	oled_putString@start_page& (0+255),b
 15844  004492  EC1B  F025         	call	_oled_putString	;wreg free
 15845                           
 15846                           ;PICoRatestAll.c: 93: oled_putString("Build Date/Time",0,1);
 15847  004496  0E59               	movlw	low STR_172
 15848  004498  0100               	movlb	0	; () banked
 15849  00449A  6F72               	movwf	oled_putString@string& (0+255),b
 15850  00449C  0E7C               	movlw	high STR_172
 15851  00449E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15852  0044A0  0E00               	movlw	0
 15853  0044A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15854  0044A4  0E01               	movlw	1
 15855  0044A6  6F75               	movwf	oled_putString@start_page& (0+255),b
 15856  0044A8  EC1B  F025         	call	_oled_putString	;wreg free
 15857                           
 15858                           ;PICoRatestAll.c: 94: oled_putString("Nov 22 2018",0,2);
 15859  0044AC  0E2E               	movlw	low STR_173
 15860  0044AE  0100               	movlb	0	; () banked
 15861  0044B0  6F72               	movwf	oled_putString@string& (0+255),b
 15862  0044B2  0E7E               	movlw	high STR_173
 15863  0044B4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15864  0044B6  0E00               	movlw	0
 15865  0044B8  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15866  0044BA  0E02               	movlw	2
 15867  0044BC  6F75               	movwf	oled_putString@start_page& (0+255),b
 15868  0044BE  EC1B  F025         	call	_oled_putString	;wreg free
 15869                           
 15870                           ;PICoRatestAll.c: 95: oled_putString("10:14:20",0,3);
 15871  0044C2  0E1F               	movlw	low STR_174
 15872  0044C4  0100               	movlb	0	; () banked
 15873  0044C6  6F72               	movwf	oled_putString@string& (0+255),b
 15874  0044C8  0E7F               	movlw	high STR_174
 15875  0044CA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15876  0044CC  0E00               	movlw	0
 15877  0044CE  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15878  0044D0  0E03               	movlw	3
 15879  0044D2  6F75               	movwf	oled_putString@start_page& (0+255),b
 15880  0044D4  EC1B  F025         	call	_oled_putString	;wreg free
 15881  0044D8  0012               	return		;funcret
 15882  0044DA                     __end_of_test_oled:
 15883                           	opt stack 0
 15884                           tblptru	equ	0xFF8
 15885                           tblptrh	equ	0xFF7
 15886                           tblptrl	equ	0xFF6
 15887                           tablat	equ	0xFF5
 15888                           prodh	equ	0xFF4
 15889                           prodl	equ	0xFF3
 15890                           intcon	equ	0xFF2
 15891                           intcon3	equ	0xFF0
 15892                           postinc0	equ	0xFEE
 15893                           wreg	equ	0xFE8
 15894                           indf1	equ	0xFE7
 15895                           postdec1	equ	0xFE5
 15896                           fsr1h	equ	0xFE2
 15897                           fsr1l	equ	0xFE1
 15898                           indf2	equ	0xFDF
 15899                           postinc2	equ	0xFDE
 15900                           postdec2	equ	0xFDD
 15901                           plusw2	equ	0xFDB
 15902                           fsr2h	equ	0xFDA
 15903                           fsr2l	equ	0xFD9
 15904                           status	equ	0xFD8
 15905                           
 15906 ;; *************** function _test_leds *****************
 15907 ;; Defined at:
 15908 ;;		line 147 in file "../Includes/Board/PICoRatestAll.c"
 15909 ;; Parameters:    Size  Location     Type
 15910 ;;		None
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;		None
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  1    wreg      void 
 15915 ;; Registers used:
 15916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15917 ;; Tracked objects:
 15918 ;;		On entry : 0/0
 15919 ;;		On exit  : 0/0
 15920 ;;		Unchanged: 0/0
 15921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15922 ;;      Params:         0       0       0       0       0       0       0       0       0
 15923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15926 ;;Total ram usage:        0 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:   15
 15929 ;; This function calls:
 15930 ;;		_delayms
 15931 ;;		_oled_putString
 15932 ;; This function is called by:
 15933 ;;		_PICoRa_test_powerup
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           	psect	text53
 15938  004C40                     __ptext53:
 15939                           	opt stack 0
 15940  004C40                     _test_leds:
 15941                           	opt stack 14
 15942                           
 15943                           ;PICoRatestAll.c: 149: oled_putString("LED Test:",0,1);
 15944                           
 15945                           ;incstack = 0
 15946  004C40  0ED0               	movlw	low STR_181
 15947  004C42  0100               	movlb	0	; () banked
 15948  004C44  6F72               	movwf	oled_putString@string& (0+255),b
 15949  004C46  0E7E               	movlw	high STR_181
 15950  004C48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 15951  004C4A  0E00               	movlw	0
 15952  004C4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 15953  004C4E  0E01               	movlw	1
 15954  004C50  6F75               	movwf	oled_putString@start_page& (0+255),b
 15955  004C52  EC1B  F025         	call	_oled_putString	;wreg free
 15956                           
 15957                           ;PICoRatestAll.c: 151: LATAbits.LATA6 = 1;
 15958  004C56  8C89               	bsf	3977,6,c	;volatile
 15959                           
 15960                           ;PICoRatestAll.c: 152: LATAbits.LATA7 = 1;
 15961  004C58  8E89               	bsf	3977,7,c	;volatile
 15962                           
 15963                           ;PICoRatestAll.c: 153: delayms(500);
 15964  004C5A  0E01               	movlw	1
 15965  004C5C  0100               	movlb	0	; () banked
 15966  004C5E  6F61               	movwf	(delayms@t+1)& (0+255),b
 15967  004C60  0EF4               	movlw	244
 15968  004C62  6F60               	movwf	delayms@t& (0+255),b
 15969  004C64  EC37  F029         	call	_delayms	;wreg free
 15970                           
 15971                           ;PICoRatestAll.c: 154: LATAbits.LATA6 = 0;
 15972  004C68  9C89               	bcf	3977,6,c	;volatile
 15973                           
 15974                           ;PICoRatestAll.c: 155: LATAbits.LATA7 = 0;
 15975  004C6A  9E89               	bcf	3977,7,c	;volatile
 15976                           
 15977                           ;PICoRatestAll.c: 156: delayms(500);
 15978  004C6C  0E01               	movlw	1
 15979  004C6E  0100               	movlb	0	; () banked
 15980  004C70  6F61               	movwf	(delayms@t+1)& (0+255),b
 15981  004C72  0EF4               	movlw	244
 15982  004C74  6F60               	movwf	delayms@t& (0+255),b
 15983  004C76  EC37  F029         	call	_delayms	;wreg free
 15984                           
 15985                           ;PICoRatestAll.c: 157: LATAbits.LATA6 = 1;
 15986  004C7A  8C89               	bsf	3977,6,c	;volatile
 15987                           
 15988                           ;PICoRatestAll.c: 158: LATAbits.LATA7 = 1;
 15989  004C7C  8E89               	bsf	3977,7,c	;volatile
 15990                           
 15991                           ;PICoRatestAll.c: 159: delayms(500);
 15992  004C7E  0E01               	movlw	1
 15993  004C80  0100               	movlb	0	; () banked
 15994  004C82  6F61               	movwf	(delayms@t+1)& (0+255),b
 15995  004C84  0EF4               	movlw	244
 15996  004C86  6F60               	movwf	delayms@t& (0+255),b
 15997  004C88  EC37  F029         	call	_delayms	;wreg free
 15998                           
 15999                           ;PICoRatestAll.c: 160: LATAbits.LATA6 = 0;
 16000  004C8C  9C89               	bcf	3977,6,c	;volatile
 16001                           
 16002                           ;PICoRatestAll.c: 161: LATAbits.LATA7 = 0;
 16003  004C8E  9E89               	bcf	3977,7,c	;volatile
 16004                           
 16005                           ;PICoRatestAll.c: 162: delayms(500);
 16006  004C90  0E01               	movlw	1
 16007  004C92  0100               	movlb	0	; () banked
 16008  004C94  6F61               	movwf	(delayms@t+1)& (0+255),b
 16009  004C96  0EF4               	movlw	244
 16010  004C98  6F60               	movwf	delayms@t& (0+255),b
 16011  004C9A  EC37  F029         	call	_delayms	;wreg free
 16012  004C9E  0012               	return		;funcret
 16013  004CA0                     __end_of_test_leds:
 16014                           	opt stack 0
 16015                           tblptru	equ	0xFF8
 16016                           tblptrh	equ	0xFF7
 16017                           tblptrl	equ	0xFF6
 16018                           tablat	equ	0xFF5
 16019                           prodh	equ	0xFF4
 16020                           prodl	equ	0xFF3
 16021                           intcon	equ	0xFF2
 16022                           intcon3	equ	0xFF0
 16023                           postinc0	equ	0xFEE
 16024                           wreg	equ	0xFE8
 16025                           indf1	equ	0xFE7
 16026                           postdec1	equ	0xFE5
 16027                           fsr1h	equ	0xFE2
 16028                           fsr1l	equ	0xFE1
 16029                           indf2	equ	0xFDF
 16030                           postinc2	equ	0xFDE
 16031                           postdec2	equ	0xFDD
 16032                           plusw2	equ	0xFDB
 16033                           fsr2h	equ	0xFDA
 16034                           fsr2l	equ	0xFD9
 16035                           status	equ	0xFD8
 16036                           
 16037 ;; *************** function _test_comms *****************
 16038 ;; Defined at:
 16039 ;;		line 134 in file "../Includes/Board/PICoRatestAll.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;		None
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;		None
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16053 ;;      Params:         0       0       0       0       0       0       0       0       0
 16054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16056 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16057 ;;Total ram usage:        0 bytes
 16058 ;; Hardware stack levels used:    1
 16059 ;; Hardware stack levels required when called:   15
 16060 ;; This function calls:
 16061 ;;		_delayms
 16062 ;;		_moteApp_toggleLeds
 16063 ;;		_oled_putString
 16064 ;; This function is called by:
 16065 ;;		_PICoRa_test_powerup
 16066 ;; This function uses a non-reentrant model
 16067 ;;
 16068                           
 16069                           	psect	text54
 16070  004B0C                     __ptext54:
 16071                           	opt stack 0
 16072  004B0C                     _test_comms:
 16073                           	opt stack 14
 16074                           
 16075                           ;PICoRatestAll.c: 136: oled_putString("Comm Test:",0,0);
 16076                           
 16077                           ;incstack = 0
 16078  004B0C  0E8E               	movlw	low STR_180
 16079  004B0E  0100               	movlb	0	; () banked
 16080  004B10  6F72               	movwf	oled_putString@string& (0+255),b
 16081  004B12  0E7E               	movlw	high STR_180
 16082  004B14  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16083  004B16  0E00               	movlw	0
 16084  004B18  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16085  004B1A  0E00               	movlw	0
 16086  004B1C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16087  004B1E  EC1B  F025         	call	_oled_putString	;wreg free
 16088                           
 16089                           ;PICoRatestAll.c: 137: moteApp_toggleLeds(1);
 16090  004B22  0E01               	movlw	1
 16091  004B24  EC25  F018         	call	_moteApp_toggleLeds
 16092                           
 16093                           ;PICoRatestAll.c: 138: delayms(500);
 16094  004B28  0E01               	movlw	1
 16095  004B2A  0100               	movlb	0	; () banked
 16096  004B2C  6F61               	movwf	(delayms@t+1)& (0+255),b
 16097  004B2E  0EF4               	movlw	244
 16098  004B30  6F60               	movwf	delayms@t& (0+255),b
 16099  004B32  EC37  F029         	call	_delayms	;wreg free
 16100                           
 16101                           ;PICoRatestAll.c: 139: moteApp_toggleLeds(0);
 16102  004B36  0E00               	movlw	0
 16103  004B38  EC25  F018         	call	_moteApp_toggleLeds
 16104                           
 16105                           ;PICoRatestAll.c: 140: delayms(500);
 16106  004B3C  0E01               	movlw	1
 16107  004B3E  0100               	movlb	0	; () banked
 16108  004B40  6F61               	movwf	(delayms@t+1)& (0+255),b
 16109  004B42  0EF4               	movlw	244
 16110  004B44  6F60               	movwf	delayms@t& (0+255),b
 16111  004B46  EC37  F029         	call	_delayms	;wreg free
 16112                           
 16113                           ;PICoRatestAll.c: 141: moteApp_toggleLeds(1);
 16114  004B4A  0E01               	movlw	1
 16115  004B4C  EC25  F018         	call	_moteApp_toggleLeds
 16116                           
 16117                           ;PICoRatestAll.c: 142: delayms(500);
 16118  004B50  0E01               	movlw	1
 16119  004B52  0100               	movlb	0	; () banked
 16120  004B54  6F61               	movwf	(delayms@t+1)& (0+255),b
 16121  004B56  0EF4               	movlw	244
 16122  004B58  6F60               	movwf	delayms@t& (0+255),b
 16123  004B5A  EC37  F029         	call	_delayms	;wreg free
 16124                           
 16125                           ;PICoRatestAll.c: 143: moteApp_toggleLeds(0);
 16126  004B5E  0E00               	movlw	0
 16127  004B60  EC25  F018         	call	_moteApp_toggleLeds
 16128                           
 16129                           ;PICoRatestAll.c: 144: delayms(500);
 16130  004B64  0E01               	movlw	1
 16131  004B66  0100               	movlb	0	; () banked
 16132  004B68  6F61               	movwf	(delayms@t+1)& (0+255),b
 16133  004B6A  0EF4               	movlw	244
 16134  004B6C  6F60               	movwf	delayms@t& (0+255),b
 16135  004B6E  EC37  F029         	call	_delayms	;wreg free
 16136  004B72  0012               	return		;funcret
 16137  004B74                     __end_of_test_comms:
 16138                           	opt stack 0
 16139                           tblptru	equ	0xFF8
 16140                           tblptrh	equ	0xFF7
 16141                           tblptrl	equ	0xFF6
 16142                           tablat	equ	0xFF5
 16143                           prodh	equ	0xFF4
 16144                           prodl	equ	0xFF3
 16145                           intcon	equ	0xFF2
 16146                           intcon3	equ	0xFF0
 16147                           postinc0	equ	0xFEE
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postdec1	equ	0xFE5
 16151                           fsr1h	equ	0xFE2
 16152                           fsr1l	equ	0xFE1
 16153                           indf2	equ	0xFDF
 16154                           postinc2	equ	0xFDE
 16155                           postdec2	equ	0xFDD
 16156                           plusw2	equ	0xFDB
 16157                           fsr2h	equ	0xFDA
 16158                           fsr2l	equ	0xFD9
 16159                           status	equ	0xFD8
 16160                           
 16161 ;; *************** function _moteApp_toggleLeds *****************
 16162 ;; Defined at:
 16163 ;;		line 1267 in file "../Includes/Board/MOTEapp.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;  state           1    wreg     unsigned char 
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;  state           1    4[BANK0 ] unsigned char 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  1    wreg      void 
 16170 ;; Registers used:
 16171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16177 ;;      Params:         0       0       0       0       0       0       0       0       0
 16178 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16179 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16180 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16181 ;;Total ram usage:        2 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:   14
 16184 ;; This function calls:
 16185 ;;		_sendCommand
 16186 ;; This function is called by:
 16187 ;;		_test_comms
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text55
 16192  00304A                     __ptext55:
 16193                           	opt stack 0
 16194  00304A                     _moteApp_toggleLeds:
 16195                           	opt stack 14
 16196                           
 16197                           ;incstack = 0
 16198                           ;moteApp_toggleLeds@state stored from wreg
 16199  00304A  0100               	movlb	0	; () banked
 16200  00304C  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
 16201                           
 16202                           ;MOTEapp.c: 1269: _delay((unsigned long)((16)*(48000000/4000.0)));
 16203  00304E  0EFA               	movlw	250
 16204  003050  0100               	movlb	0	; () banked
 16205  003052  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16206  003054  0E58               	movlw	88
 16207  003056                     u10717:
 16208  003056  2EE8               	decfsz	wreg,f,c
 16209  003058  D7FE               	bra	u10717
 16210  00305A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16211  00305C  D7FC               	bra	u10717
 16212  00305E  F000               	nop	
 16213                           
 16214                           ;MOTEapp.c: 1270: _delay((unsigned long)((16)*(48000000/4000.0)));
 16215  003060  0EFA               	movlw	250
 16216  003062  0100               	movlb	0	; () banked
 16217  003064  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16218  003066  0E58               	movlw	88
 16219  003068                     u10727:
 16220  003068  2EE8               	decfsz	wreg,f,c
 16221  00306A  D7FE               	bra	u10727
 16222  00306C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16223  00306E  D7FC               	bra	u10727
 16224  003070  F000               	nop	
 16225                           
 16226                           ;MOTEapp.c: 1271: _delay((unsigned long)((16)*(48000000/4000.0)));
 16227  003072  0EFA               	movlw	250
 16228  003074  0100               	movlb	0	; () banked
 16229  003076  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16230  003078  0E58               	movlw	88
 16231  00307A                     u10737:
 16232  00307A  2EE8               	decfsz	wreg,f,c
 16233  00307C  D7FE               	bra	u10737
 16234  00307E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16235  003080  D7FC               	bra	u10737
 16236  003082  F000               	nop	
 16237                           
 16238                           ;MOTEapp.c: 1272: if (state)
 16239  003084  0100               	movlb	0	; () banked
 16240  003086  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
 16241  003088  B4D8               	btfsc	status,2,c
 16242  00308A  D029               	goto	l600
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;MOTEapp.c: 1273: {
 16246                           ;MOTEapp.c: 1274: sendCommand("sys set pindig GPIO10 1\r\n");
 16247  00308C  0E28               	movlw	low STR_154
 16248  00308E  6F61               	movwf	sendCommand@string& (0+255),b
 16249  003090  0E7A               	movlw	high STR_154
 16250  003092  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16251  003094  ECB2  F029         	call	_sendCommand	;wreg free
 16252                           
 16253                           ;MOTEapp.c: 1275: _delay((unsigned long)((16)*(48000000/4000.0)));
 16254  003098  0EFA               	movlw	250
 16255  00309A  0100               	movlb	0	; () banked
 16256  00309C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16257  00309E  0E58               	movlw	88
 16258  0030A0                     u10747:
 16259  0030A0  2EE8               	decfsz	wreg,f,c
 16260  0030A2  D7FE               	bra	u10747
 16261  0030A4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16262  0030A6  D7FC               	bra	u10747
 16263  0030A8  F000               	nop	
 16264                           
 16265                           ;MOTEapp.c: 1276: _delay((unsigned long)((16)*(48000000/4000.0)));
 16266  0030AA  0EFA               	movlw	250
 16267  0030AC  0100               	movlb	0	; () banked
 16268  0030AE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16269  0030B0  0E58               	movlw	88
 16270  0030B2                     u10757:
 16271  0030B2  2EE8               	decfsz	wreg,f,c
 16272  0030B4  D7FE               	bra	u10757
 16273  0030B6  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16274  0030B8  D7FC               	bra	u10757
 16275  0030BA  F000               	nop	
 16276                           
 16277                           ;MOTEapp.c: 1277: _delay((unsigned long)((16)*(48000000/4000.0)));
 16278  0030BC  0EFA               	movlw	250
 16279  0030BE  0100               	movlb	0	; () banked
 16280  0030C0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16281  0030C2  0E58               	movlw	88
 16282  0030C4                     u10767:
 16283  0030C4  2EE8               	decfsz	wreg,f,c
 16284  0030C6  D7FE               	bra	u10767
 16285  0030C8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16286  0030CA  D7FC               	bra	u10767
 16287  0030CC  F000               	nop	
 16288                           
 16289                           ;MOTEapp.c: 1278: sendCommand("sys set pindig GPIO11 1\r\n");
 16290  0030CE  0E42               	movlw	low STR_155
 16291  0030D0  0100               	movlb	0	; () banked
 16292  0030D2  6F61               	movwf	sendCommand@string& (0+255),b
 16293  0030D4  0E7A               	movlw	high STR_155
 16294  0030D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16295  0030D8  ECB2  F029         	call	_sendCommand	;wreg free
 16296                           
 16297                           ;MOTEapp.c: 1279: }
 16298  0030DC  0012               	return	
 16299  0030DE                     l600:
 16300                           
 16301                           ;MOTEapp.c: 1280: else
 16302                           ;MOTEapp.c: 1281: {
 16303                           ;MOTEapp.c: 1282: sendCommand("sys set pindig GPIO10 0\r\n");
 16304  0030DE  0EF4               	movlw	low STR_156
 16305  0030E0  0100               	movlb	0	; () banked
 16306  0030E2  6F61               	movwf	sendCommand@string& (0+255),b
 16307  0030E4  0E79               	movlw	high STR_156
 16308  0030E6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16309  0030E8  ECB2  F029         	call	_sendCommand	;wreg free
 16310                           
 16311                           ;MOTEapp.c: 1283: _delay((unsigned long)((16)*(48000000/4000.0)));
 16312  0030EC  0EFA               	movlw	250
 16313  0030EE  0100               	movlb	0	; () banked
 16314  0030F0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16315  0030F2  0E58               	movlw	88
 16316  0030F4                     u10777:
 16317  0030F4  2EE8               	decfsz	wreg,f,c
 16318  0030F6  D7FE               	bra	u10777
 16319  0030F8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16320  0030FA  D7FC               	bra	u10777
 16321  0030FC  F000               	nop	
 16322                           
 16323                           ;MOTEapp.c: 1284: _delay((unsigned long)((16)*(48000000/4000.0)));
 16324  0030FE  0EFA               	movlw	250
 16325  003100  0100               	movlb	0	; () banked
 16326  003102  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16327  003104  0E58               	movlw	88
 16328  003106                     u10787:
 16329  003106  2EE8               	decfsz	wreg,f,c
 16330  003108  D7FE               	bra	u10787
 16331  00310A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16332  00310C  D7FC               	bra	u10787
 16333  00310E  F000               	nop	
 16334                           
 16335                           ;MOTEapp.c: 1285: _delay((unsigned long)((16)*(48000000/4000.0)));
 16336  003110  0EFA               	movlw	250
 16337  003112  0100               	movlb	0	; () banked
 16338  003114  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
 16339  003116  0E58               	movlw	88
 16340  003118                     u10797:
 16341  003118  2EE8               	decfsz	wreg,f,c
 16342  00311A  D7FE               	bra	u10797
 16343  00311C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
 16344  00311E  D7FC               	bra	u10797
 16345  003120  F000               	nop	
 16346                           
 16347                           ;MOTEapp.c: 1286: sendCommand("sys set pindig GPIO11 0\r\n");
 16348  003122  0E0E               	movlw	low STR_157
 16349  003124  0100               	movlb	0	; () banked
 16350  003126  6F61               	movwf	sendCommand@string& (0+255),b
 16351  003128  0E7A               	movlw	high STR_157
 16352  00312A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16353  00312C  ECB2  F029         	call	_sendCommand	;wreg free
 16354  003130  0012               	return	
 16355  003132                     __end_of_moteApp_toggleLeds:
 16356                           	opt stack 0
 16357                           tblptru	equ	0xFF8
 16358                           tblptrh	equ	0xFF7
 16359                           tblptrl	equ	0xFF6
 16360                           tablat	equ	0xFF5
 16361                           prodh	equ	0xFF4
 16362                           prodl	equ	0xFF3
 16363                           intcon	equ	0xFF2
 16364                           intcon3	equ	0xFF0
 16365                           postinc0	equ	0xFEE
 16366                           wreg	equ	0xFE8
 16367                           indf1	equ	0xFE7
 16368                           postdec1	equ	0xFE5
 16369                           fsr1h	equ	0xFE2
 16370                           fsr1l	equ	0xFE1
 16371                           indf2	equ	0xFDF
 16372                           postinc2	equ	0xFDE
 16373                           postdec2	equ	0xFDD
 16374                           plusw2	equ	0xFDB
 16375                           fsr2h	equ	0xFDA
 16376                           fsr2l	equ	0xFD9
 16377                           status	equ	0xFD8
 16378                           
 16379 ;; *************** function _delayms *****************
 16380 ;; Defined at:
 16381 ;;		line 54 in file "../Includes/Board/PICoRatestAll.c"
 16382 ;; Parameters:    Size  Location     Type
 16383 ;;  t               2    0[BANK0 ] unsigned int 
 16384 ;; Auto vars:     Size  Location     Type
 16385 ;;  i               2    3[BANK0 ] unsigned int 
 16386 ;; Return value:  Size  Location     Type
 16387 ;;                  1    wreg      void 
 16388 ;; Registers used:
 16389 ;;		wreg, status,2, status,0
 16390 ;; Tracked objects:
 16391 ;;		On entry : 0/0
 16392 ;;		On exit  : 0/0
 16393 ;;		Unchanged: 0/0
 16394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16395 ;;      Params:         0       2       0       0       0       0       0       0       0
 16396 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16397 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16398 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16399 ;;Total ram usage:        5 bytes
 16400 ;; Hardware stack levels used:    1
 16401 ;; Hardware stack levels required when called:   11
 16402 ;; This function calls:
 16403 ;;		Nothing
 16404 ;; This function is called by:
 16405 ;;		_test_comms
 16406 ;;		_test_leds
 16407 ;; This function uses a non-reentrant model
 16408 ;;
 16409                           
 16410                           	psect	text56
 16411  00526E                     __ptext56:
 16412                           	opt stack 0
 16413  00526E                     _delayms:
 16414                           	opt stack 17
 16415                           
 16416                           ;PICoRatestAll.c: 56: uint16_t i;
 16417                           ;PICoRatestAll.c: 57: for(i = 0; i < t; i++)
 16418                           
 16419                           ;incstack = 0
 16420  00526E  0E00               	movlw	0
 16421  005270  0100               	movlb	0	; () banked
 16422  005272  6F64               	movwf	(delayms@i+1)& (0+255),b
 16423  005274  0E00               	movlw	0
 16424  005276  6F63               	movwf	delayms@i& (0+255),b
 16425  005278  D00C               	goto	l2063
 16426  00527A                     
 16427                           ; BSR set to: 0
 16428                           ;PICoRatestAll.c: 58: {
 16429                           ;PICoRatestAll.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
 16430                           
 16431                           ; BSR set to: 0
 16432  00527A  0E10               	movlw	16
 16433  00527C  0100               	movlb	0	; () banked
 16434  00527E  6F62               	movwf	??_delayms& (0+255),b
 16435  005280  0E94               	movlw	148
 16436  005282                     u10807:
 16437  005282  2EE8               	decfsz	wreg,f,c
 16438  005284  D7FE               	bra	u10807
 16439  005286  2F62               	decfsz	??_delayms& (0+255),f,b
 16440  005288  D7FC               	bra	u10807
 16441  00528A  F000               	nop	
 16442  00528C  0100               	movlb	0	; () banked
 16443  00528E  4B63               	infsnz	delayms@i& (0+255),f,b
 16444  005290  2B64               	incf	(delayms@i+1)& (0+255),f,b
 16445  005292                     l2063:
 16446                           
 16447                           ; BSR set to: 0
 16448  005292  5160               	movf	delayms@t& (0+255),w,b
 16449  005294  5D63               	subwf	delayms@i& (0+255),w,b
 16450  005296  5161               	movf	(delayms@t+1)& (0+255),w,b
 16451  005298  5964               	subwfb	(delayms@i+1)& (0+255),w,b
 16452  00529A  B0D8               	btfsc	status,0,c
 16453  00529C  0012               	return	
 16454  00529E  D7ED               	goto	l2064
 16455  0052A0                     __end_of_delayms:
 16456                           	opt stack 0
 16457                           tblptru	equ	0xFF8
 16458                           tblptrh	equ	0xFF7
 16459                           tblptrl	equ	0xFF6
 16460                           tablat	equ	0xFF5
 16461                           prodh	equ	0xFF4
 16462                           prodl	equ	0xFF3
 16463                           intcon	equ	0xFF2
 16464                           intcon3	equ	0xFF0
 16465                           postinc0	equ	0xFEE
 16466                           wreg	equ	0xFE8
 16467                           indf1	equ	0xFE7
 16468                           postdec1	equ	0xFE5
 16469                           fsr1h	equ	0xFE2
 16470                           fsr1l	equ	0xFE1
 16471                           indf2	equ	0xFDF
 16472                           postinc2	equ	0xFDE
 16473                           postdec2	equ	0xFDD
 16474                           plusw2	equ	0xFDB
 16475                           fsr2h	equ	0xFDA
 16476                           fsr2l	equ	0xFD9
 16477                           status	equ	0xFD8
 16478                           
 16479 ;; *************** function _moteApp_testSensors *****************
 16480 ;; Defined at:
 16481 ;;		line 1371 in file "../Includes/Board/MOTEapp.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;		None
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  dummyValue      2    0        unsigned int 
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  1    wreg      void 
 16488 ;; Registers used:
 16489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16497 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16498 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16499 ;;Total ram usage:        1 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:   16
 16502 ;; This function calls:
 16503 ;;		_ADC_TempConversion
 16504 ;;		_moteApp_convertSensorValue
 16505 ;;		_moteApp_getLightValue
 16506 ;;		_moteApp_getTempValue
 16507 ;;		_moteApp_setSensorsInput
 16508 ;;		_oled_clear
 16509 ;;		_oled_putChar
 16510 ;;		_oled_putString
 16511 ;;		_oled_putint8
 16512 ;; This function is called by:
 16513 ;;		_PICoRa_test_powerup
 16514 ;; This function uses a non-reentrant model
 16515 ;;
 16516                           
 16517                           	psect	text57
 16518  0038E4                     __ptext57:
 16519                           	opt stack 0
 16520  0038E4                     _moteApp_testSensors:
 16521                           	opt stack 13
 16522                           
 16523                           ;MOTEapp.c: 1374: moteApp_setSensorsInput();
 16524                           
 16525                           ; BSR set to: 0
 16526                           ;incstack = 0
 16527  0038E4  EC36  F024         	call	_moteApp_setSensorsInput	;wreg free
 16528                           
 16529                           ;MOTEapp.c: 1376: uint16_t dummyValue;
 16530                           ;MOTEapp.c: 1377: oled_clear();
 16531  0038E8  ECFF  F02A         	call	_oled_clear	;wreg free
 16532                           
 16533                           ;MOTEapp.c: 1378: oled_putString("ADC Test",0,0);
 16534  0038EC  0E5E               	movlw	low STR_158
 16535  0038EE  0100               	movlb	0	; () banked
 16536  0038F0  6F72               	movwf	oled_putString@string& (0+255),b
 16537  0038F2  0E7F               	movlw	high STR_158
 16538  0038F4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16539  0038F6  0E00               	movlw	0
 16540  0038F8  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16541  0038FA  0E00               	movlw	0
 16542  0038FC  6F75               	movwf	oled_putString@start_page& (0+255),b
 16543  0038FE  EC1B  F025         	call	_oled_putString	;wreg free
 16544                           
 16545                           ;MOTEapp.c: 1379: oled_putString("Light =",0,1);
 16546  003902  0E77               	movlw	low STR_159
 16547  003904  0100               	movlb	0	; () banked
 16548  003906  6F72               	movwf	oled_putString@string& (0+255),b
 16549  003908  0E7F               	movlw	high STR_159
 16550  00390A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16551  00390C  0E00               	movlw	0
 16552  00390E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16553  003910  0E01               	movlw	1
 16554  003912  6F75               	movwf	oled_putString@start_page& (0+255),b
 16555  003914  EC1B  F025         	call	_oled_putString	;wreg free
 16556                           
 16557                           ;MOTEapp.c: 1380: oled_putString("Temp  =",0,2);
 16558  003918  0E6F               	movlw	low STR_160
 16559  00391A  0100               	movlb	0	; () banked
 16560  00391C  6F72               	movwf	oled_putString@string& (0+255),b
 16561  00391E  0E7F               	movlw	high STR_160
 16562  003920  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16563  003922  0E00               	movlw	0
 16564  003924  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16565  003926  0E02               	movlw	2
 16566  003928  6F75               	movwf	oled_putString@start_page& (0+255),b
 16567  00392A  EC1B  F025         	call	_oled_putString	;wreg free
 16568                           
 16569                           ;MOTEapp.c: 1381: oled_putChar('C',14,2);
 16570  00392E  0E0E               	movlw	14
 16571  003930  0100               	movlb	0	; () banked
 16572  003932  6F62               	movwf	oled_putChar@station_dot& (0+255),b
 16573  003934  0E02               	movlw	2
 16574  003936  6F63               	movwf	oled_putChar@start_page& (0+255),b
 16575  003938  0E43               	movlw	67
 16576  00393A  EC35  F023         	call	_oled_putChar
 16577                           
 16578                           ;MOTEapp.c: 1382: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
 16579  00393E  EC2E  F028         	call	_moteApp_getTempValue	;wreg free
 16580  003942  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
 16581  003946  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
 16582  00394A  ECF7  F023         	call	_moteApp_convertSensorValue	;wreg free
 16583  00394E  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
 16584  003952  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
 16585                           
 16586                           ;MOTEapp.c: 1383: temperature = ADC_TempConversion(temperature);
 16587  003956  0100               	movlb	0	; () banked
 16588  003958  51DA               	movf	_temperature& (0+255),w,b
 16589  00395A  ECB0  F017         	call	_ADC_TempConversion
 16590  00395E  0100               	movlb	0	; () banked
 16591  003960  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
 16592  003962  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
 16593  003964  6FDA               	movwf	_temperature& (0+255),b
 16594  003966  6BDB               	clrf	(_temperature+1)& (0+255),b
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;MOTEapp.c: 1384: oled_putint8(temperature, 10, 2);
 16598  003968  0E0A               	movlw	10
 16599  00396A  6F77               	movwf	oled_putint8@station_dot& (0+255),b
 16600  00396C  0E02               	movlw	2
 16601  00396E  6F78               	movwf	oled_putint8@start_page& (0+255),b
 16602  003970  51DA               	movf	_temperature& (0+255),w,b
 16603  003972  EC66  F020         	call	_oled_putint8
 16604                           
 16605                           ;MOTEapp.c: 1385: __nop();
 16606  003976  F000               	nop	
 16607                           
 16608                           ;MOTEapp.c: 1386: oled_putString("    ", 10, 1);
 16609  003978  0ECD               	movlw	low (STR_19+12)
 16610  00397A  0100               	movlb	0	; () banked
 16611  00397C  6F72               	movwf	oled_putString@string& (0+255),b
 16612  00397E  0E7A               	movlw	high (STR_19+12)
 16613  003980  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16614  003982  0E0A               	movlw	10
 16615  003984  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16616  003986  0E01               	movlw	1
 16617  003988  6F75               	movwf	oled_putString@start_page& (0+255),b
 16618  00398A  EC1B  F025         	call	_oled_putString	;wreg free
 16619                           
 16620                           ;MOTEapp.c: 1387: oled_putString(moteApp_getLightValue(), 10, 1);
 16621  00398E  EC33  F027         	call	_moteApp_getLightValue	;wreg free
 16622  003992  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
 16623  003996  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
 16624  00399A  0E0A               	movlw	10
 16625  00399C  0100               	movlb	0	; () banked
 16626  00399E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16627  0039A0  0E01               	movlw	1
 16628  0039A2  6F75               	movwf	oled_putString@start_page& (0+255),b
 16629  0039A4  EC1B  F025         	call	_oled_putString	;wreg free
 16630  0039A8  0012               	return		;funcret
 16631  0039AA                     __end_of_moteApp_testSensors:
 16632                           	opt stack 0
 16633                           tblptru	equ	0xFF8
 16634                           tblptrh	equ	0xFF7
 16635                           tblptrl	equ	0xFF6
 16636                           tablat	equ	0xFF5
 16637                           prodh	equ	0xFF4
 16638                           prodl	equ	0xFF3
 16639                           intcon	equ	0xFF2
 16640                           intcon3	equ	0xFF0
 16641                           postinc0	equ	0xFEE
 16642                           wreg	equ	0xFE8
 16643                           indf1	equ	0xFE7
 16644                           postdec1	equ	0xFE5
 16645                           fsr1h	equ	0xFE2
 16646                           fsr1l	equ	0xFE1
 16647                           indf2	equ	0xFDF
 16648                           postinc2	equ	0xFDE
 16649                           postdec2	equ	0xFDD
 16650                           plusw2	equ	0xFDB
 16651                           fsr2h	equ	0xFDA
 16652                           fsr2l	equ	0xFD9
 16653                           status	equ	0xFD8
 16654                           
 16655 ;; *************** function _oled_putint8 *****************
 16656 ;; Defined at:
 16657 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  number          1    wreg     unsigned char 
 16660 ;;  station_dot     1   23[BANK0 ] unsigned char 
 16661 ;;  start_page      1   24[BANK0 ] unsigned char 
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  number          1   32[BANK0 ] unsigned char 
 16664 ;;  numData         6   26[BANK0 ] struct .
 16665 ;;  negative        1   25[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      void 
 16668 ;; Registers used:
 16669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16675 ;;      Params:         0       2       0       0       0       0       0       0       0
 16676 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16678 ;;      Totals:         0      10       0       0       0       0       0       0       0
 16679 ;;Total ram usage:       10 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:   15
 16682 ;; This function calls:
 16683 ;;		___awmod
 16684 ;;		___lbdiv
 16685 ;;		_oled_putString
 16686 ;; This function is called by:
 16687 ;;		_moteHandler
 16688 ;;		_moteRunningProcess
 16689 ;;		_moteApp_testSensors
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text58
 16694  0040CC                     __ptext58:
 16695                           	opt stack 0
 16696  0040CC                     _oled_putint8:
 16697                           	opt stack 14
 16698                           
 16699                           ;incstack = 0
 16700                           ;oled_putint8@number stored from wreg
 16701  0040CC  0100               	movlb	0	; () banked
 16702  0040CE  6F80               	movwf	oled_putint8@number& (0+255),b
 16703                           
 16704                           ;SSD1306oLED.c: 280: display_data_t numData;
 16705                           ;SSD1306oLED.c: 281: bool negative = 0;
 16706  0040D0  0E00               	movlw	0
 16707  0040D2  0100               	movlb	0	; () banked
 16708  0040D4  6F79               	movwf	oled_putint8@negative& (0+255),b
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;SSD1306oLED.c: 283: if(number & 0x80)
 16712  0040D6  AF80               	btfss	oled_putint8@number& (0+255),7,b
 16713  0040D8  D002               	goto	l950
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;SSD1306oLED.c: 284: negative = 1;
 16717  0040DA  0E01               	movlw	1
 16718  0040DC  6F79               	movwf	oled_putint8@negative& (0+255),b
 16719  0040DE                     l950:
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 16723                           
 16724                           ; BSR set to: 0
 16725  0040DE  5180               	movf	oled_putint8@number& (0+255),w,b
 16726  0040E0  0B7F               	andlw	127
 16727  0040E2  6F80               	movwf	oled_putint8@number& (0+255),b
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 16731  0040E4  C080  F060         	movff	oled_putint8@number,___awmod@dividend
 16732  0040E8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16733  0040EA  0E00               	movlw	0
 16734  0040EC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16735  0040EE  0E0A               	movlw	10
 16736  0040F0  6F62               	movwf	___awmod@divisor& (0+255),b
 16737  0040F2  ECAB  F024         	call	___awmod	;wreg free
 16738  0040F6  0100               	movlb	0	; () banked
 16739  0040F8  5160               	movf	?___awmod& (0+255),w,b
 16740  0040FA  0F30               	addlw	48
 16741  0040FC  6F7C               	movwf	(oled_putint8@numData+2)& (0+255),b
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;SSD1306oLED.c: 288: number /= 10;
 16745  0040FE  0E0A               	movlw	10
 16746  004100  6F60               	movwf	___lbdiv@divisor& (0+255),b
 16747  004102  5180               	movf	oled_putint8@number& (0+255),w,b
 16748  004104  EC4E  F028         	call	___lbdiv
 16749  004108  0100               	movlb	0	; () banked
 16750  00410A  6F80               	movwf	oled_putint8@number& (0+255),b
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 16754  00410C  C080  F060         	movff	oled_putint8@number,___awmod@dividend
 16755  004110  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16756  004112  0E00               	movlw	0
 16757  004114  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16758  004116  0E0A               	movlw	10
 16759  004118  6F62               	movwf	___awmod@divisor& (0+255),b
 16760  00411A  ECAB  F024         	call	___awmod	;wreg free
 16761  00411E  0100               	movlb	0	; () banked
 16762  004120  5160               	movf	?___awmod& (0+255),w,b
 16763  004122  0F30               	addlw	48
 16764  004124  6F7B               	movwf	(oled_putint8@numData+1)& (0+255),b
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;SSD1306oLED.c: 290: number /= 10;
 16768  004126  0E0A               	movlw	10
 16769  004128  6F60               	movwf	___lbdiv@divisor& (0+255),b
 16770  00412A  5180               	movf	oled_putint8@number& (0+255),w,b
 16771  00412C  EC4E  F028         	call	___lbdiv
 16772  004130  0100               	movlb	0	; () banked
 16773  004132  6F80               	movwf	oled_putint8@number& (0+255),b
 16774                           
 16775                           ; BSR set to: 0
 16776                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 16777  004134  C080  F060         	movff	oled_putint8@number,___awmod@dividend
 16778  004138  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16779  00413A  0E00               	movlw	0
 16780  00413C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16781  00413E  0E0A               	movlw	10
 16782  004140  6F62               	movwf	___awmod@divisor& (0+255),b
 16783  004142  ECAB  F024         	call	___awmod	;wreg free
 16784  004146  0100               	movlb	0	; () banked
 16785  004148  5160               	movf	?___awmod& (0+255),w,b
 16786  00414A  0F30               	addlw	48
 16787  00414C  6F7A               	movwf	oled_putint8@numData& (0+255),b
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;SSD1306oLED.c: 292: if(negative)
 16791  00414E  5179               	movf	oled_putint8@negative& (0+255),w,b
 16792  004150  B4D8               	btfsc	status,2,c
 16793  004152  D002               	goto	l951
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 16797  004154  0E2D               	movlw	45
 16798  004156  6F7A               	movwf	oled_putint8@numData& (0+255),b
 16799  004158                     l951:
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 16803  004158  0E00               	movlw	0
 16804  00415A  6F7D               	movwf	(oled_putint8@numData+3)& (0+255),b
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 16808  00415C  0E7A               	movlw	low oled_putint8@numData
 16809  00415E  6F72               	movwf	oled_putString@string& (0+255),b
 16810  004160  0E00               	movlw	high oled_putint8@numData
 16811  004162  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16812  004164  C077  F074         	movff	oled_putint8@station_dot,oled_putString@station_dot
 16813  004168  C078  F075         	movff	oled_putint8@start_page,oled_putString@start_page
 16814  00416C  EC1B  F025         	call	_oled_putString	;wreg free
 16815  004170  0012               	return		;funcret
 16816  004172                     __end_of_oled_putint8:
 16817                           	opt stack 0
 16818                           tblptru	equ	0xFF8
 16819                           tblptrh	equ	0xFF7
 16820                           tblptrl	equ	0xFF6
 16821                           tablat	equ	0xFF5
 16822                           prodh	equ	0xFF4
 16823                           prodl	equ	0xFF3
 16824                           intcon	equ	0xFF2
 16825                           intcon3	equ	0xFF0
 16826                           postinc0	equ	0xFEE
 16827                           wreg	equ	0xFE8
 16828                           indf1	equ	0xFE7
 16829                           postdec1	equ	0xFE5
 16830                           fsr1h	equ	0xFE2
 16831                           fsr1l	equ	0xFE1
 16832                           indf2	equ	0xFDF
 16833                           postinc2	equ	0xFDE
 16834                           postdec2	equ	0xFDD
 16835                           plusw2	equ	0xFDB
 16836                           fsr2h	equ	0xFDA
 16837                           fsr2l	equ	0xFD9
 16838                           status	equ	0xFD8
 16839                           
 16840 ;; *************** function _oled_putString *****************
 16841 ;; Defined at:
 16842 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 16845 ;;		 -> STR_185(9), STR_184(8), STR_183(8), STR_182(9), 
 16846 ;;		 -> STR_181(10), STR_180(11), STR_179(13), STR_178(13), 
 16847 ;;		 -> STR_177(13), STR_176(12), STR_175(13), STR_174(9), 
 16848 ;;		 -> STR_173(12), STR_172(16), STR_171(2), STR_170(2), 
 16849 ;;		 -> STR_169(9), oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), 
 16850 ;;		 -> STR_168(12), STR_167(8), STR_166(9), storedLight(5), 
 16851 ;;		 -> STR_161(5), STR_160(8), STR_159(8), STR_158(9), 
 16852 ;;		 -> STR_141(16), STR_140(17), STR_139(17), STR_138(4), 
 16853 ;;		 -> STR_137(4), STR_136(4), STR_135(4), STR_134(4), 
 16854 ;;		 -> STR_133(4), STR_132(4), STR_131(16), STR_130(17), 
 16855 ;;		 -> STR_129(4), STR_128(4), STR_127(4), STR_126(4), 
 16856 ;;		 -> STR_125(4), STR_124(4), STR_123(4), STR_122(4), 
 16857 ;;		 -> STR_121(4), STR_120(4), STR_119(4), STR_118(4), 
 16858 ;;		 -> STR_117(4), STR_116(16), STR_115(12), STR_114(17), 
 16859 ;;		 -> STR_113(16), STR_112(16), STR_111(16), STR_110(15), 
 16860 ;;		 -> STR_109(15), STR_108(16), STR_107(4), STR_106(3), 
 16861 ;;		 -> STR_105(3), STR_104(3), STR_103(3), STR_102(2), 
 16862 ;;		 -> STR_101(5), STR_100(7), STR_99(17), STR_98(17), 
 16863 ;;		 -> STR_97(2), STR_96(7), STR_95(7), STR_94(16), 
 16864 ;;		 -> STR_93(16), STR_92(15), STR_91(15), STR_90(17), 
 16865 ;;		 -> STR_89(16), STR_88(17), STR_87(17), STR_86(7), 
 16866 ;;		 -> STR_85(10), STR_84(17), STR_83(16), STR_82(16), 
 16867 ;;		 -> STR_81(16), STR_80(16), STR_79(17), STR_78(17), 
 16868 ;;		 -> STR_77(16), STR_75(19), STR_73(17), STR_71(17), 
 16869 ;;		 -> STR_70(17), responseData(32), responsePortNum(3), STR_67(13), 
 16870 ;;		 -> STR_66(12), STR_65(12), STR_62(18), STR_61(13), 
 16871 ;;		 -> STR_60(17), STR_59(16), STR_58(17), STR_57(17), 
 16872 ;;		 -> STR_56(16), STR_55(17), STR_54(17), STR_52(13), 
 16873 ;;		 -> STR_51(12), STR_50(17), STR_44(7), STR_43(10), 
 16874 ;;		 -> STR_41(11), STR_40(11), STR_35(9), STR_34(11), 
 16875 ;;		 -> STR_30(11), STR_29(10), STR_26(9), STR_25(11), 
 16876 ;;		 -> STR_21(17), STR_19(17), STR_17(17), STR_16(17), 
 16877 ;;		 -> STR_15(17), moduleResonseBuffer(64), STR_12(17), STR_11(17), 
 16878 ;;		 -> STR_10(17), STR_9(17), STR_8(9), STR_7(10), 
 16879 ;;		 -> STR_6(5), STR_3(15), STR_2(15), STR_1(15), 
 16880 ;;  station_dot     1   20[BANK0 ] unsigned char 
 16881 ;;  start_page      1   21[BANK0 ] unsigned char 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  index           1   22[BANK0 ] unsigned char 
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      void 
 16886 ;; Registers used:
 16887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16893 ;;      Params:         0       4       0       0       0       0       0       0       0
 16894 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16896 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16897 ;;Total ram usage:        5 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:   14
 16900 ;; This function calls:
 16901 ;;		_oled_putChar
 16902 ;; This function is called by:
 16903 ;;		_main
 16904 ;;		_moteHandler
 16905 ;;		_moteJoiningProcess
 16906 ;;		_moteRunningProcess
 16907 ;;		_moteApp_testSensors
 16908 ;;		_USBapp_Handler
 16909 ;;		_oled_putUint8
 16910 ;;		_oled_putint8
 16911 ;;		_test_oled
 16912 ;;		_test_switch
 16913 ;;		_test_comms
 16914 ;;		_test_leds
 16915 ;;		_oled_putUint16
 16916 ;;		_test_adc
 16917 ;;		_test_rf
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text59
 16922  004A36                     __ptext59:
 16923                           	opt stack 0
 16924  004A36                     _oled_putString:
 16925                           	opt stack 16
 16926                           
 16927                           ;SSD1306oLED.c: 333: uint8_t index;
 16928                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 16929                           
 16930                           ;incstack = 0
 16931  004A36  C074  F076         	movff	oled_putString@station_dot,oled_putString@index
 16932  004A3A  0E0F               	movlw	15
 16933  004A3C  0100               	movlb	0	; () banked
 16934  004A3E  6576               	cpfsgt	oled_putString@index& (0+255),b
 16935  004A40  D001               	goto	l963
 16936  004A42  0012               	return	
 16937  004A44                     l963:
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;SSD1306oLED.c: 335: {
 16941                           ;SSD1306oLED.c: 336: if (*string != 0)
 16942                           
 16943                           ; BSR set to: 0
 16944  004A44  C072  FFF6         	movff	oled_putString@string,tblptrl
 16945  004A48  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 16946  004A4C  6AF8               	clrf	tblptru,c
 16947  004A4E  0E07               	movlw	(high __ramtop+-1)
 16948  004A50  64F7               	cpfsgt	tblptrh,c
 16949  004A52  D003               	bra	u6227
 16950  004A54  0008               	tblrd		*
 16951  004A56  50F5               	movf	tablat,w,c
 16952  004A58  D005               	bra	u6220
 16953  004A5A                     u6227:
 16954  004A5A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16955  004A5E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16956  004A62  50EF               	movf	indf0,w,c
 16957  004A64                     u6220:
 16958  004A64  0900               	iorlw	0
 16959  004A66  B4D8               	btfsc	status,2,c
 16960  004A68  0012               	return	
 16961                           
 16962                           ;SSD1306oLED.c: 337: {
 16963                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 16964  004A6A  C076  F062         	movff	oled_putString@index,oled_putChar@station_dot
 16965  004A6E  C075  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 16966  004A72  C072  FFF6         	movff	oled_putString@string,tblptrl
 16967  004A76  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 16968  004A7A  6AF8               	clrf	tblptru,c
 16969  004A7C  0E07               	movlw	(high __ramtop+-1)
 16970  004A7E  64F7               	cpfsgt	tblptrh,c
 16971  004A80  D003               	bra	u6247
 16972  004A82  0008               	tblrd		*
 16973  004A84  50F5               	movf	tablat,w,c
 16974  004A86  D005               	bra	u6240
 16975  004A88                     u6247:
 16976  004A88  CFF6 FFE9          	movff	tblptrl,fsr0l
 16977  004A8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16978  004A90  50EF               	movf	indf0,w,c
 16979  004A92                     u6240:
 16980  004A92  EC35  F023         	call	_oled_putChar
 16981                           
 16982                           ;SSD1306oLED.c: 339: *string++;
 16983  004A96  0100               	movlb	0	; () banked
 16984  004A98  4B72               	infsnz	oled_putString@string& (0+255),f,b
 16985  004A9A  2B73               	incf	(oled_putString@string+1)& (0+255),f,b
 16986                           
 16987                           ; BSR set to: 0
 16988                           
 16989                           ; BSR set to: 0
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;SSD1306oLED.c: 341: else
 16993                           ;SSD1306oLED.c: 342: {
 16994                           ;SSD1306oLED.c: 343: break;
 16995                           
 16996                           ;SSD1306oLED.c: 340: }
 16997  004A9C  2B76               	incf	oled_putString@index& (0+255),f,b
 16998                           
 16999                           ; BSR set to: 0
 17000  004A9E  0E0F               	movlw	15
 17001  004AA0  D7CE               	goto	L29
 17002  004AA2                     __end_of_oled_putString:
 17003                           	opt stack 0
 17004                           tblptru	equ	0xFF8
 17005                           tblptrh	equ	0xFF7
 17006                           tblptrl	equ	0xFF6
 17007                           tablat	equ	0xFF5
 17008                           prodh	equ	0xFF4
 17009                           prodl	equ	0xFF3
 17010                           intcon	equ	0xFF2
 17011                           intcon3	equ	0xFF0
 17012                           indf0	equ	0xFEF
 17013                           postinc0	equ	0xFEE
 17014                           fsr0h	equ	0xFEA
 17015                           fsr0l	equ	0xFE9
 17016                           wreg	equ	0xFE8
 17017                           indf1	equ	0xFE7
 17018                           postdec1	equ	0xFE5
 17019                           fsr1h	equ	0xFE2
 17020                           fsr1l	equ	0xFE1
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           postdec2	equ	0xFDD
 17024                           plusw2	equ	0xFDB
 17025                           fsr2h	equ	0xFDA
 17026                           fsr2l	equ	0xFD9
 17027                           status	equ	0xFD8
 17028                           
 17029 ;; *************** function ___lbdiv *****************
 17030 ;; Defined at:
 17031 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 17032 ;; Parameters:    Size  Location     Type
 17033 ;;  dividend        1    wreg     unsigned char 
 17034 ;;  divisor         1    0[BANK0 ] unsigned char 
 17035 ;; Auto vars:     Size  Location     Type
 17036 ;;  dividend        1    1[BANK0 ] unsigned char 
 17037 ;;  quotient        1    3[BANK0 ] unsigned char 
 17038 ;;  counter         1    2[BANK0 ] unsigned char 
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  1    wreg      unsigned char 
 17041 ;; Registers used:
 17042 ;;		wreg, status,2, status,0
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17048 ;;      Params:         0       1       0       0       0       0       0       0       0
 17049 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17051 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17052 ;;Total ram usage:        4 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:   11
 17055 ;; This function calls:
 17056 ;;		Nothing
 17057 ;; This function is called by:
 17058 ;;		_moteApp_add8bToDataBuffer
 17059 ;;		_oled_putUint8
 17060 ;;		_oled_putint8
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text60
 17065  00509C                     __ptext60:
 17066                           	opt stack 0
 17067  00509C                     ___lbdiv:
 17068                           	opt stack 17
 17069                           
 17070                           ;incstack = 0
 17071                           ;___lbdiv@dividend stored from wreg
 17072  00509C  0100               	movlb	0	; () banked
 17073  00509E  6F61               	movwf	___lbdiv@dividend& (0+255),b
 17074  0050A0  0E00               	movlw	0
 17075  0050A2  0100               	movlb	0	; () banked
 17076  0050A4  6F63               	movwf	___lbdiv@quotient& (0+255),b
 17077                           
 17078                           ; BSR set to: 0
 17079  0050A6  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17080  0050A8  B4D8               	btfsc	status,2,c
 17081  0050AA  D015               	goto	l2434
 17082                           
 17083                           ; BSR set to: 0
 17084  0050AC  0E01               	movlw	1
 17085  0050AE  6F62               	movwf	___lbdiv@counter& (0+255),b
 17086  0050B0  D003               	goto	l2429
 17087  0050B2                     
 17088                           ; BSR set to: 0
 17089                           
 17090                           ; BSR set to: 0
 17091  0050B2  90D8               	bcf	status,0,c
 17092  0050B4  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 17093                           
 17094                           ; BSR set to: 0
 17095  0050B6  2B62               	incf	___lbdiv@counter& (0+255),f,b
 17096  0050B8                     l2429:
 17097                           
 17098                           ; BSR set to: 0
 17099                           
 17100                           ; BSR set to: 0
 17101  0050B8  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 17102  0050BA  D7FB               	goto	l2430
 17103  0050BC                     u7480:
 17104                           
 17105                           ; BSR set to: 0
 17106                           
 17107                           ; BSR set to: 0
 17108                           
 17109                           ; BSR set to: 0
 17110  0050BC  90D8               	bcf	status,0,c
 17111  0050BE  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 17112  0050C0  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17113  0050C2  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 17114  0050C4  A0D8               	btfss	status,0,c
 17115  0050C6  D003               	goto	l2433
 17116                           
 17117                           ; BSR set to: 0
 17118  0050C8  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17119  0050CA  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 17120                           
 17121                           ; BSR set to: 0
 17122  0050CC  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 17123  0050CE                     l2433:
 17124                           
 17125                           ; BSR set to: 0
 17126                           
 17127                           ; BSR set to: 0
 17128  0050CE  90D8               	bcf	status,0,c
 17129  0050D0  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 17130                           
 17131                           ; BSR set to: 0
 17132  0050D2  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 17133  0050D4  D7F3               	goto	u7480
 17134  0050D6                     l2434:
 17135                           
 17136                           ; BSR set to: 0
 17137                           
 17138                           ; BSR set to: 0
 17139                           
 17140                           ; BSR set to: 0
 17141  0050D6  5163               	movf	___lbdiv@quotient& (0+255),w,b
 17142  0050D8  0012               	return	
 17143  0050DA                     __end_of___lbdiv:
 17144                           	opt stack 0
 17145                           tblptru	equ	0xFF8
 17146                           tblptrh	equ	0xFF7
 17147                           tblptrl	equ	0xFF6
 17148                           tablat	equ	0xFF5
 17149                           prodh	equ	0xFF4
 17150                           prodl	equ	0xFF3
 17151                           intcon	equ	0xFF2
 17152                           intcon3	equ	0xFF0
 17153                           indf0	equ	0xFEF
 17154                           postinc0	equ	0xFEE
 17155                           fsr0h	equ	0xFEA
 17156                           fsr0l	equ	0xFE9
 17157                           wreg	equ	0xFE8
 17158                           indf1	equ	0xFE7
 17159                           postdec1	equ	0xFE5
 17160                           fsr1h	equ	0xFE2
 17161                           fsr1l	equ	0xFE1
 17162                           indf2	equ	0xFDF
 17163                           postinc2	equ	0xFDE
 17164                           postdec2	equ	0xFDD
 17165                           plusw2	equ	0xFDB
 17166                           fsr2h	equ	0xFDA
 17167                           fsr2l	equ	0xFD9
 17168                           status	equ	0xFD8
 17169                           
 17170 ;; *************** function ___awmod *****************
 17171 ;; Defined at:
 17172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;  dividend        2    0[BANK0 ] int 
 17175 ;;  divisor         2    2[BANK0 ] int 
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;  sign            1    5[BANK0 ] unsigned char 
 17178 ;;  counter         1    4[BANK0 ] unsigned char 
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  2    0[BANK0 ] int 
 17181 ;; Registers used:
 17182 ;;		wreg, status,2, status,0
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17188 ;;      Params:         0       4       0       0       0       0       0       0       0
 17189 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17191 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17192 ;;Total ram usage:        6 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:   11
 17195 ;; This function calls:
 17196 ;;		Nothing
 17197 ;; This function is called by:
 17198 ;;		_moteApp_add8bToDataBuffer
 17199 ;;		_oled_putUint8
 17200 ;;		_oled_putint8
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text61
 17205  004956                     __ptext61:
 17206                           	opt stack 0
 17207  004956                     ___awmod:
 17208                           	opt stack 17
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;incstack = 0
 17212  004956  0E00               	movlw	0
 17213  004958  0100               	movlb	0	; () banked
 17214  00495A  6F65               	movwf	___awmod@sign& (0+255),b
 17215                           
 17216                           ; BSR set to: 0
 17217  00495C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17218  00495E  D006               	goto	l2280
 17219                           
 17220                           ; BSR set to: 0
 17221  004960  6D60               	negf	___awmod@dividend& (0+255),b
 17222  004962  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 17223  004964  B0D8               	btfsc	status,0,c
 17224  004966  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 17225                           
 17226                           ; BSR set to: 0
 17227  004968  0E01               	movlw	1
 17228  00496A  6F65               	movwf	___awmod@sign& (0+255),b
 17229  00496C                     l2280:
 17230                           
 17231                           ; BSR set to: 0
 17232                           
 17233                           ; BSR set to: 0
 17234  00496C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17235  00496E  D004               	goto	l2281
 17236                           
 17237                           ; BSR set to: 0
 17238  004970  6D62               	negf	___awmod@divisor& (0+255),b
 17239  004972  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 17240  004974  B0D8               	btfsc	status,0,c
 17241  004976  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 17242  004978                     l2281:
 17243                           
 17244                           ; BSR set to: 0
 17245                           
 17246                           ; BSR set to: 0
 17247  004978  5162               	movf	___awmod@divisor& (0+255),w,b
 17248  00497A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17249  00497C  B4D8               	btfsc	status,2,c
 17250  00497E  D018               	goto	l2288
 17251                           
 17252                           ; BSR set to: 0
 17253  004980  0E01               	movlw	1
 17254  004982  6F64               	movwf	___awmod@counter& (0+255),b
 17255  004984  D004               	goto	l2283
 17256  004986                     
 17257                           ; BSR set to: 0
 17258                           
 17259                           ; BSR set to: 0
 17260  004986  90D8               	bcf	status,0,c
 17261  004988  3762               	rlcf	___awmod@divisor& (0+255),f,b
 17262  00498A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17263  00498C  2B64               	incf	___awmod@counter& (0+255),f,b
 17264  00498E                     l2283:
 17265                           
 17266                           ; BSR set to: 0
 17267                           
 17268                           ; BSR set to: 0
 17269  00498E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17270  004990  D7FA               	goto	l2284
 17271  004992                     u7370:
 17272                           
 17273                           ; BSR set to: 0
 17274                           
 17275                           ; BSR set to: 0
 17276                           
 17277                           ; BSR set to: 0
 17278  004992  5162               	movf	___awmod@divisor& (0+255),w,b
 17279  004994  5D60               	subwf	___awmod@dividend& (0+255),w,b
 17280  004996  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 17281  004998  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17282  00499A  A0D8               	btfss	status,0,c
 17283  00499C  D004               	goto	l2287
 17284                           
 17285                           ; BSR set to: 0
 17286  00499E  5162               	movf	___awmod@divisor& (0+255),w,b
 17287  0049A0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 17288  0049A2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 17289  0049A4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17290  0049A6                     l2287:
 17291                           
 17292                           ; BSR set to: 0
 17293                           
 17294                           ; BSR set to: 0
 17295  0049A6  90D8               	bcf	status,0,c
 17296  0049A8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17297  0049AA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 17298                           
 17299                           ; BSR set to: 0
 17300  0049AC  2F64               	decfsz	___awmod@counter& (0+255),f,b
 17301  0049AE  D7F1               	goto	u7370
 17302  0049B0                     l2288:
 17303                           
 17304                           ; BSR set to: 0
 17305                           
 17306                           ; BSR set to: 0
 17307                           
 17308                           ; BSR set to: 0
 17309  0049B0  5165               	movf	___awmod@sign& (0+255),w,b
 17310  0049B2  B4D8               	btfsc	status,2,c
 17311  0049B4  D004               	goto	l2289
 17312                           
 17313                           ; BSR set to: 0
 17314  0049B6  6D60               	negf	___awmod@dividend& (0+255),b
 17315  0049B8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 17316  0049BA  B0D8               	btfsc	status,0,c
 17317  0049BC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 17318  0049BE                     l2289:
 17319                           
 17320                           ; BSR set to: 0
 17321                           
 17322                           ; BSR set to: 0
 17323  0049BE  C060  F060         	movff	___awmod@dividend,?___awmod
 17324  0049C2  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 17325  0049C6  0012               	return	
 17326  0049C8                     __end_of___awmod:
 17327                           	opt stack 0
 17328                           tblptru	equ	0xFF8
 17329                           tblptrh	equ	0xFF7
 17330                           tblptrl	equ	0xFF6
 17331                           tablat	equ	0xFF5
 17332                           prodh	equ	0xFF4
 17333                           prodl	equ	0xFF3
 17334                           intcon	equ	0xFF2
 17335                           intcon3	equ	0xFF0
 17336                           indf0	equ	0xFEF
 17337                           postinc0	equ	0xFEE
 17338                           fsr0h	equ	0xFEA
 17339                           fsr0l	equ	0xFE9
 17340                           wreg	equ	0xFE8
 17341                           indf1	equ	0xFE7
 17342                           postdec1	equ	0xFE5
 17343                           fsr1h	equ	0xFE2
 17344                           fsr1l	equ	0xFE1
 17345                           indf2	equ	0xFDF
 17346                           postinc2	equ	0xFDE
 17347                           postdec2	equ	0xFDD
 17348                           plusw2	equ	0xFDB
 17349                           fsr2h	equ	0xFDA
 17350                           fsr2l	equ	0xFD9
 17351                           status	equ	0xFD8
 17352                           
 17353 ;; *************** function _oled_clear *****************
 17354 ;; Defined at:
 17355 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 17356 ;; Parameters:    Size  Location     Type
 17357 ;;		None
 17358 ;; Auto vars:     Size  Location     Type
 17359 ;;		None
 17360 ;; Return value:  Size  Location     Type
 17361 ;;                  1    wreg      void 
 17362 ;; Registers used:
 17363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17364 ;; Tracked objects:
 17365 ;;		On entry : 0/0
 17366 ;;		On exit  : 0/0
 17367 ;;		Unchanged: 0/0
 17368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17369 ;;      Params:         0       0       0       0       0       0       0       0       0
 17370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17372 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17373 ;;Total ram usage:        0 bytes
 17374 ;; Hardware stack levels used:    1
 17375 ;; Hardware stack levels required when called:   15
 17376 ;; This function calls:
 17377 ;;		_oled_clearRow
 17378 ;; This function is called by:
 17379 ;;		_main
 17380 ;;		_moteHandler
 17381 ;;		_moteJoiningProcess
 17382 ;;		_moteRunningProcess
 17383 ;;		_moteApp_testSensors
 17384 ;;		_USBapp_Handler
 17385 ;;		_oled_init
 17386 ;;		_PICoRa_test_powerup
 17387 ;;		_test_oled
 17388 ;;		_test_switch
 17389 ;;		_test_adc
 17390 ;;		_test_rf
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           	psect	text62
 17395  0055FE                     __ptext62:
 17396                           	opt stack 0
 17397  0055FE                     _oled_clear:
 17398                           	opt stack 14
 17399                           
 17400                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;incstack = 0
 17404  0055FE  0E00               	movlw	0
 17405  005600  EC8D  F02A         	call	_oled_clearRow
 17406                           
 17407                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 17408  005604  0E01               	movlw	1
 17409  005606  EC8D  F02A         	call	_oled_clearRow
 17410                           
 17411                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 17412  00560A  0E02               	movlw	2
 17413  00560C  EC8D  F02A         	call	_oled_clearRow
 17414                           
 17415                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 17416  005610  0E03               	movlw	3
 17417  005612  EC8D  F02A         	call	_oled_clearRow
 17418  005616  0012               	return		;funcret
 17419  005618                     __end_of_oled_clear:
 17420                           	opt stack 0
 17421                           tblptru	equ	0xFF8
 17422                           tblptrh	equ	0xFF7
 17423                           tblptrl	equ	0xFF6
 17424                           tablat	equ	0xFF5
 17425                           prodh	equ	0xFF4
 17426                           prodl	equ	0xFF3
 17427                           intcon	equ	0xFF2
 17428                           intcon3	equ	0xFF0
 17429                           indf0	equ	0xFEF
 17430                           postinc0	equ	0xFEE
 17431                           fsr0h	equ	0xFEA
 17432                           fsr0l	equ	0xFE9
 17433                           wreg	equ	0xFE8
 17434                           indf1	equ	0xFE7
 17435                           postdec1	equ	0xFE5
 17436                           fsr1h	equ	0xFE2
 17437                           fsr1l	equ	0xFE1
 17438                           indf2	equ	0xFDF
 17439                           postinc2	equ	0xFDE
 17440                           postdec2	equ	0xFDD
 17441                           plusw2	equ	0xFDB
 17442                           fsr2h	equ	0xFDA
 17443                           fsr2l	equ	0xFD9
 17444                           status	equ	0xFD8
 17445                           
 17446 ;; *************** function _oled_clearRow *****************
 17447 ;; Defined at:
 17448 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 17449 ;; Parameters:    Size  Location     Type
 17450 ;;  page            1    wreg     unsigned char 
 17451 ;; Auto vars:     Size  Location     Type
 17452 ;;  page            1   12[BANK0 ] unsigned char 
 17453 ;;  index           1   13[BANK0 ] unsigned char 
 17454 ;; Return value:  Size  Location     Type
 17455 ;;                  1    wreg      void 
 17456 ;; Registers used:
 17457 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17458 ;; Tracked objects:
 17459 ;;		On entry : 0/0
 17460 ;;		On exit  : 0/0
 17461 ;;		Unchanged: 0/0
 17462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17463 ;;      Params:         0       0       0       0       0       0       0       0       0
 17464 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17466 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17467 ;;Total ram usage:        2 bytes
 17468 ;; Hardware stack levels used:    1
 17469 ;; Hardware stack levels required when called:   14
 17470 ;; This function calls:
 17471 ;;		_oled_putChar
 17472 ;; This function is called by:
 17473 ;;		_oled_clear
 17474 ;; This function uses a non-reentrant model
 17475 ;;
 17476                           
 17477                           	psect	text63
 17478  00551A                     __ptext63:
 17479                           	opt stack 0
 17480  00551A                     _oled_clearRow:
 17481                           	opt stack 14
 17482                           
 17483                           ;incstack = 0
 17484                           ;oled_clearRow@page stored from wreg
 17485  00551A  0100               	movlb	0	; () banked
 17486  00551C  6F6C               	movwf	oled_clearRow@page& (0+255),b
 17487                           
 17488                           ;SSD1306oLED.c: 358: uint8_t index;
 17489                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 17490  00551E  0E00               	movlw	0
 17491  005520  0100               	movlb	0	; () banked
 17492  005522  6F6D               	movwf	oled_clearRow@index& (0+255),b
 17493  005524                     l7608:
 17494                           
 17495                           ; BSR set to: 0
 17496  005524  0E0F               	movlw	15
 17497  005526  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 17498  005528  D001               	goto	l973
 17499  00552A  0012               	return	
 17500  00552C                     l973:
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;SSD1306oLED.c: 361: {
 17504                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 17505                           
 17506                           ; BSR set to: 0
 17507  00552C  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 17508  005530  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 17509  005534  0E20               	movlw	32
 17510  005536  EC35  F023         	call	_oled_putChar
 17511  00553A  0100               	movlb	0	; () banked
 17512  00553C  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 17513  00553E  D7F2               	goto	l7608
 17514  005540                     __end_of_oled_clearRow:
 17515                           	opt stack 0
 17516                           tblptru	equ	0xFF8
 17517                           tblptrh	equ	0xFF7
 17518                           tblptrl	equ	0xFF6
 17519                           tablat	equ	0xFF5
 17520                           prodh	equ	0xFF4
 17521                           prodl	equ	0xFF3
 17522                           intcon	equ	0xFF2
 17523                           intcon3	equ	0xFF0
 17524                           indf0	equ	0xFEF
 17525                           postinc0	equ	0xFEE
 17526                           fsr0h	equ	0xFEA
 17527                           fsr0l	equ	0xFE9
 17528                           wreg	equ	0xFE8
 17529                           indf1	equ	0xFE7
 17530                           postdec1	equ	0xFE5
 17531                           fsr1h	equ	0xFE2
 17532                           fsr1l	equ	0xFE1
 17533                           indf2	equ	0xFDF
 17534                           postinc2	equ	0xFDE
 17535                           postdec2	equ	0xFDD
 17536                           plusw2	equ	0xFDB
 17537                           fsr2h	equ	0xFDA
 17538                           fsr2l	equ	0xFD9
 17539                           status	equ	0xFD8
 17540                           
 17541 ;; *************** function _oled_putChar *****************
 17542 ;; Defined at:
 17543 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 17544 ;; Parameters:    Size  Location     Type
 17545 ;;  k               1    wreg     unsigned char 
 17546 ;;  station_dot     1    2[BANK0 ] unsigned char 
 17547 ;;  start_page      1    3[BANK0 ] unsigned char 
 17548 ;; Auto vars:     Size  Location     Type
 17549 ;;  k               1   10[BANK0 ] unsigned char 
 17550 ;;  index           1   11[BANK0 ] unsigned char 
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  1    wreg      void 
 17553 ;; Registers used:
 17554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17560 ;;      Params:         0       2       0       0       0       0       0       0       0
 17561 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17562 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17563 ;;      Totals:         0      10       0       0       0       0       0       0       0
 17564 ;;Total ram usage:       10 bytes
 17565 ;; Hardware stack levels used:    1
 17566 ;; Hardware stack levels required when called:   13
 17567 ;; This function calls:
 17568 ;;		_Set_Column_Address
 17569 ;;		_Set_Page_Address
 17570 ;;		_oled_writeData
 17571 ;; This function is called by:
 17572 ;;		_moteApp_testSensors
 17573 ;;		_oled_putString
 17574 ;;		_oled_clearRow
 17575 ;;		_test_adc
 17576 ;; This function uses a non-reentrant model
 17577 ;;
 17578                           
 17579                           	psect	text64
 17580  00466A                     __ptext64:
 17581                           	opt stack 0
 17582  00466A                     _oled_putChar:
 17583                           	opt stack 16
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;incstack = 0
 17587                           ;oled_putChar@k stored from wreg
 17588  00466A  0100               	movlb	0	; () banked
 17589  00466C  6F6A               	movwf	oled_putChar@k& (0+255),b
 17590                           
 17591                           ;SSD1306oLED.c: 320: uint8_t index;
 17592                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 17593  00466E  0100               	movlb	0	; () banked
 17594  004670  5163               	movf	oled_putChar@start_page& (0+255),w,b
 17595  004672  EC59  F02B         	call	_Set_Page_Address
 17596                           
 17597                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 17598  004676  0100               	movlb	0	; () banked
 17599  004678  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 17600  00467A  0D08               	mullw	8
 17601  00467C  50F3               	movf	prodl,w,c
 17602  00467E  0F04               	addlw	4
 17603  004680  ECF1  F02A         	call	_Set_Column_Address
 17604                           
 17605                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 17606  004684  0E00               	movlw	0
 17607  004686  0100               	movlb	0	; () banked
 17608  004688  6F6B               	movwf	oled_putChar@index& (0+255),b
 17609  00468A                     l7490:
 17610                           
 17611                           ; BSR set to: 0
 17612  00468A  0E07               	movlw	7
 17613  00468C  656B               	cpfsgt	oled_putChar@index& (0+255),b
 17614  00468E  D001               	goto	l958
 17615  004690  0012               	return	
 17616  004692                     l958:
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;SSD1306oLED.c: 326: {
 17620                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 17621                           
 17622                           ; BSR set to: 0
 17623  004692  516B               	movf	oled_putChar@index& (0+255),w,b
 17624  004694  0D01               	mullw	1
 17625  004696  0E00               	movlw	0
 17626  004698  6F64               	movwf	??_oled_putChar& (0+255),b
 17627  00469A  0EFF               	movlw	255
 17628  00469C  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 17629  00469E  516A               	movf	oled_putChar@k& (0+255),w,b
 17630  0046A0  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 17631  0046A2  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 17632  0046A4  90D8               	bcf	status,0,c
 17633  0046A6  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17634  0046A8  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17635  0046AA  90D8               	bcf	status,0,c
 17636  0046AC  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17637  0046AE  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17638  0046B0  90D8               	bcf	status,0,c
 17639  0046B2  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17640  0046B4  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17641  0046B6  5164               	movf	??_oled_putChar& (0+255),w,b
 17642  0046B8  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 17643  0046BA  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 17644  0046BC  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 17645  0046BE  C1F0  F068         	movff	_selectedFont,??_oled_putChar+4
 17646  0046C2  C1F1  F069         	movff	_selectedFont+1,??_oled_putChar+5
 17647  0046C6  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 17648  0046C8  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 17649  0046CA  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 17650  0046CC  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 17651  0046CE  50F3               	movf	prodl,w,c
 17652  0046D0  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 17653  0046D2  50F4               	movf	prodh,w,c
 17654  0046D4  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 17655  0046D6  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 17656  0046DA  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 17657  0046DE                     	if	0	;tblptru may be non-zero
 17658  0046DE                     	endif
 17659  0046DE                     	if	0	;tblptru may be non-zero
 17660  0046DE                     	endif
 17661  0046DE  0008               	tblrd		*
 17662  0046E0  50F5               	movf	tablat,w,c
 17663  0046E2  EC19  F02B         	call	_oled_writeData
 17664  0046E6  0100               	movlb	0	; () banked
 17665  0046E8  2B6B               	incf	oled_putChar@index& (0+255),f,b
 17666  0046EA  D7CF               	goto	l7490
 17667  0046EC                     __end_of_oled_putChar:
 17668                           	opt stack 0
 17669                           tblptru	equ	0xFF8
 17670                           tblptrh	equ	0xFF7
 17671                           tblptrl	equ	0xFF6
 17672                           tablat	equ	0xFF5
 17673                           prodh	equ	0xFF4
 17674                           prodl	equ	0xFF3
 17675                           intcon	equ	0xFF2
 17676                           intcon3	equ	0xFF0
 17677                           indf0	equ	0xFEF
 17678                           postinc0	equ	0xFEE
 17679                           fsr0h	equ	0xFEA
 17680                           fsr0l	equ	0xFE9
 17681                           wreg	equ	0xFE8
 17682                           indf1	equ	0xFE7
 17683                           postdec1	equ	0xFE5
 17684                           fsr1h	equ	0xFE2
 17685                           fsr1l	equ	0xFE1
 17686                           indf2	equ	0xFDF
 17687                           postinc2	equ	0xFDE
 17688                           postdec2	equ	0xFDD
 17689                           plusw2	equ	0xFDB
 17690                           fsr2h	equ	0xFDA
 17691                           fsr2l	equ	0xFD9
 17692                           status	equ	0xFD8
 17693                           
 17694 ;; *************** function _oled_writeData *****************
 17695 ;; Defined at:
 17696 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;  data            1    wreg     unsigned char 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  data            1    0[BANK0 ] unsigned char 
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		wreg
 17705 ;; Tracked objects:
 17706 ;;		On entry : 0/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17710 ;;      Params:         0       0       0       0       0       0       0       0       0
 17711 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17713 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17714 ;;Total ram usage:        1 bytes
 17715 ;; Hardware stack levels used:    1
 17716 ;; Hardware stack levels required when called:   11
 17717 ;; This function calls:
 17718 ;;		Nothing
 17719 ;; This function is called by:
 17720 ;;		_oled_putChar
 17721 ;; This function uses a non-reentrant model
 17722 ;;
 17723                           
 17724                           	psect	text65
 17725  005632                     __ptext65:
 17726                           	opt stack 0
 17727  005632                     _oled_writeData:
 17728                           	opt stack 17
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;incstack = 0
 17732                           ;oled_writeData@data stored from wreg
 17733  005632  0100               	movlb	0	; () banked
 17734  005634  6F60               	movwf	oled_writeData@data& (0+255),b
 17735                           
 17736                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 17737  005636  988A               	bcf	3978,4,c	;volatile
 17738                           
 17739                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 17740  005638  808B               	bsf	3979,0,c	;volatile
 17741                           
 17742                           ;SSD1306oLED.c: 446: LATD=data;
 17743  00563A  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 17744                           
 17745                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 17746  00563E  928B               	bcf	3979,1,c	;volatile
 17747                           
 17748                           ;SSD1306oLED.c: 448: __nop();
 17749  005640  F000               	nop	
 17750                           
 17751                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 17752  005642  828B               	bsf	3979,1,c	;volatile
 17753                           
 17754                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 17755  005644  888A               	bsf	3978,4,c	;volatile
 17756  005646  0012               	return	
 17757  005648                     __end_of_oled_writeData:
 17758                           	opt stack 0
 17759                           tblptru	equ	0xFF8
 17760                           tblptrh	equ	0xFF7
 17761                           tblptrl	equ	0xFF6
 17762                           tablat	equ	0xFF5
 17763                           prodh	equ	0xFF4
 17764                           prodl	equ	0xFF3
 17765                           intcon	equ	0xFF2
 17766                           intcon3	equ	0xFF0
 17767                           indf0	equ	0xFEF
 17768                           postinc0	equ	0xFEE
 17769                           fsr0h	equ	0xFEA
 17770                           fsr0l	equ	0xFE9
 17771                           wreg	equ	0xFE8
 17772                           indf1	equ	0xFE7
 17773                           postdec1	equ	0xFE5
 17774                           fsr1h	equ	0xFE2
 17775                           fsr1l	equ	0xFE1
 17776                           indf2	equ	0xFDF
 17777                           postinc2	equ	0xFDE
 17778                           postdec2	equ	0xFDD
 17779                           plusw2	equ	0xFDB
 17780                           fsr2h	equ	0xFDA
 17781                           fsr2l	equ	0xFD9
 17782                           status	equ	0xFD8
 17783                           
 17784 ;; *************** function _Set_Page_Address *****************
 17785 ;; Defined at:
 17786 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 17787 ;; Parameters:    Size  Location     Type
 17788 ;;  address         1    wreg     unsigned char 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;  address         1    1[BANK0 ] unsigned char 
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		wreg, status,2, status,0, cstack
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0
 17801 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17803 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17804 ;;Total ram usage:        1 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; Hardware stack levels required when called:   12
 17807 ;; This function calls:
 17808 ;;		_oled_writeCommand
 17809 ;; This function is called by:
 17810 ;;		_oled_putChar
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814                           	psect	text66
 17815  0056B2                     __ptext66:
 17816                           	opt stack 0
 17817  0056B2                     _Set_Page_Address:
 17818                           	opt stack 16
 17819                           
 17820                           ;incstack = 0
 17821                           ;Set_Page_Address@address stored from wreg
 17822  0056B2  0100               	movlb	0	; () banked
 17823  0056B4  6F61               	movwf	Set_Page_Address@address& (0+255),b
 17824                           
 17825                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 17826  0056B6  0100               	movlb	0	; () banked
 17827  0056B8  5161               	movf	Set_Page_Address@address& (0+255),w,b
 17828  0056BA  09B0               	iorlw	176
 17829  0056BC  6F61               	movwf	Set_Page_Address@address& (0+255),b
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 17833  0056BE  5161               	movf	Set_Page_Address@address& (0+255),w,b
 17834  0056C0  EC24  F02B         	call	_oled_writeCommand
 17835  0056C4  0012               	return	
 17836  0056C6                     __end_of_Set_Page_Address:
 17837                           	opt stack 0
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodh	equ	0xFF4
 17843                           prodl	equ	0xFF3
 17844                           intcon	equ	0xFF2
 17845                           intcon3	equ	0xFF0
 17846                           indf0	equ	0xFEF
 17847                           postinc0	equ	0xFEE
 17848                           fsr0h	equ	0xFEA
 17849                           fsr0l	equ	0xFE9
 17850                           wreg	equ	0xFE8
 17851                           indf1	equ	0xFE7
 17852                           postdec1	equ	0xFE5
 17853                           fsr1h	equ	0xFE2
 17854                           fsr1l	equ	0xFE1
 17855                           indf2	equ	0xFDF
 17856                           postinc2	equ	0xFDE
 17857                           postdec2	equ	0xFDD
 17858                           plusw2	equ	0xFDB
 17859                           fsr2h	equ	0xFDA
 17860                           fsr2l	equ	0xFD9
 17861                           status	equ	0xFD8
 17862                           
 17863 ;; *************** function _Set_Column_Address *****************
 17864 ;; Defined at:
 17865 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 17866 ;; Parameters:    Size  Location     Type
 17867 ;;  address         1    wreg     unsigned char 
 17868 ;; Auto vars:     Size  Location     Type
 17869 ;;  address         1    1[BANK0 ] unsigned char 
 17870 ;; Return value:  Size  Location     Type
 17871 ;;                  1    wreg      void 
 17872 ;; Registers used:
 17873 ;;		wreg, status,2, status,0, cstack
 17874 ;; Tracked objects:
 17875 ;;		On entry : 0/0
 17876 ;;		On exit  : 0/0
 17877 ;;		Unchanged: 0/0
 17878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17879 ;;      Params:         0       0       0       0       0       0       0       0       0
 17880 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17881 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17882 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17883 ;;Total ram usage:        1 bytes
 17884 ;; Hardware stack levels used:    1
 17885 ;; Hardware stack levels required when called:   12
 17886 ;; This function calls:
 17887 ;;		_oled_writeCommand
 17888 ;; This function is called by:
 17889 ;;		_oled_putChar
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text67
 17894  0055E2                     __ptext67:
 17895                           	opt stack 0
 17896  0055E2                     _Set_Column_Address:
 17897                           	opt stack 16
 17898                           
 17899                           ;incstack = 0
 17900                           ;Set_Column_Address@address stored from wreg
 17901  0055E2  0100               	movlb	0	; () banked
 17902  0055E4  6F61               	movwf	Set_Column_Address@address& (0+255),b
 17903                           
 17904                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 17905  0055E6  0100               	movlb	0	; () banked
 17906  0055E8  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 17907  0055EA  0B0F               	andlw	15
 17908  0055EC  0910               	iorlw	16
 17909  0055EE  EC24  F02B         	call	_oled_writeCommand
 17910                           
 17911                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 17912  0055F2  0100               	movlb	0	; () banked
 17913  0055F4  5161               	movf	Set_Column_Address@address& (0+255),w,b
 17914  0055F6  0B0F               	andlw	15
 17915  0055F8  EC24  F02B         	call	_oled_writeCommand
 17916  0055FC  0012               	return	
 17917  0055FE                     __end_of_Set_Column_Address:
 17918                           	opt stack 0
 17919                           tblptru	equ	0xFF8
 17920                           tblptrh	equ	0xFF7
 17921                           tblptrl	equ	0xFF6
 17922                           tablat	equ	0xFF5
 17923                           prodh	equ	0xFF4
 17924                           prodl	equ	0xFF3
 17925                           intcon	equ	0xFF2
 17926                           intcon3	equ	0xFF0
 17927                           indf0	equ	0xFEF
 17928                           postinc0	equ	0xFEE
 17929                           fsr0h	equ	0xFEA
 17930                           fsr0l	equ	0xFE9
 17931                           wreg	equ	0xFE8
 17932                           indf1	equ	0xFE7
 17933                           postdec1	equ	0xFE5
 17934                           fsr1h	equ	0xFE2
 17935                           fsr1l	equ	0xFE1
 17936                           indf2	equ	0xFDF
 17937                           postinc2	equ	0xFDE
 17938                           postdec2	equ	0xFDD
 17939                           plusw2	equ	0xFDB
 17940                           fsr2h	equ	0xFDA
 17941                           fsr2l	equ	0xFD9
 17942                           status	equ	0xFD8
 17943                           
 17944 ;; *************** function _oled_writeCommand *****************
 17945 ;; Defined at:
 17946 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 17947 ;; Parameters:    Size  Location     Type
 17948 ;;  command         1    wreg     unsigned char 
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  command         1    0[BANK0 ] unsigned char 
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  1    wreg      void 
 17953 ;; Registers used:
 17954 ;;		wreg
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17960 ;;      Params:         0       0       0       0       0       0       0       0       0
 17961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17964 ;;Total ram usage:        1 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:   11
 17967 ;; This function calls:
 17968 ;;		Nothing
 17969 ;; This function is called by:
 17970 ;;		_Set_Page_Address
 17971 ;;		_Set_Column_Address
 17972 ;;		_oled_devInit
 17973 ;;		_oled_setDisplay
 17974 ;;		_oled_displayOff
 17975 ;;		_oled_setContrastControlRegister
 17976 ;;		_oled_initialDispayLine
 17977 ;;		_oled_powerControl
 17978 ;;		_oled_regulorResistorSelect
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           	psect	text68
 17983  005648                     __ptext68:
 17984                           	opt stack 0
 17985  005648                     _oled_writeCommand:
 17986                           	opt stack 16
 17987                           
 17988                           ;incstack = 0
 17989                           ;oled_writeCommand@command stored from wreg
 17990  005648  0100               	movlb	0	; () banked
 17991  00564A  6F60               	movwf	oled_writeCommand@command& (0+255),b
 17992                           
 17993                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 17994  00564C  988A               	bcf	3978,4,c	;volatile
 17995                           
 17996                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 17997  00564E  908B               	bcf	3979,0,c	;volatile
 17998                           
 17999                           ;SSD1306oLED.c: 434: LATD=command;
 18000  005650  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 18001                           
 18002                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 18003  005654  928B               	bcf	3979,1,c	;volatile
 18004                           
 18005                           ;SSD1306oLED.c: 436: __nop();
 18006  005656  F000               	nop	
 18007                           
 18008                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 18009  005658  828B               	bsf	3979,1,c	;volatile
 18010                           
 18011                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 18012  00565A  888A               	bsf	3978,4,c	;volatile
 18013  00565C  0012               	return	
 18014  00565E                     __end_of_oled_writeCommand:
 18015                           	opt stack 0
 18016                           tblptru	equ	0xFF8
 18017                           tblptrh	equ	0xFF7
 18018                           tblptrl	equ	0xFF6
 18019                           tablat	equ	0xFF5
 18020                           prodh	equ	0xFF4
 18021                           prodl	equ	0xFF3
 18022                           intcon	equ	0xFF2
 18023                           intcon3	equ	0xFF0
 18024                           indf0	equ	0xFEF
 18025                           postinc0	equ	0xFEE
 18026                           fsr0h	equ	0xFEA
 18027                           fsr0l	equ	0xFE9
 18028                           wreg	equ	0xFE8
 18029                           indf1	equ	0xFE7
 18030                           postdec1	equ	0xFE5
 18031                           fsr1h	equ	0xFE2
 18032                           fsr1l	equ	0xFE1
 18033                           indf2	equ	0xFDF
 18034                           postinc2	equ	0xFDE
 18035                           postdec2	equ	0xFDD
 18036                           plusw2	equ	0xFDB
 18037                           fsr2h	equ	0xFDA
 18038                           fsr2l	equ	0xFD9
 18039                           status	equ	0xFD8
 18040                           
 18041 ;; *************** function _moteApp_setSensorsInput *****************
 18042 ;; Defined at:
 18043 ;;		line 1390 in file "../Includes/Board/MOTEapp.c"
 18044 ;; Parameters:    Size  Location     Type
 18045 ;;		None
 18046 ;; Auto vars:     Size  Location     Type
 18047 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 18048 ;; Return value:  Size  Location     Type
 18049 ;;                  1    wreg      void 
 18050 ;; Registers used:
 18051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18052 ;; Tracked objects:
 18053 ;;		On entry : 0/0
 18054 ;;		On exit  : 0/0
 18055 ;;		Unchanged: 0/0
 18056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18057 ;;      Params:         0       0       0       0       0       0       0       0       0
 18058 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18060 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18061 ;;Total ram usage:        2 bytes
 18062 ;; Hardware stack levels used:    1
 18063 ;; Hardware stack levels required when called:   14
 18064 ;; This function calls:
 18065 ;;		_MOTEapp_getModuleResponse
 18066 ;;		_moteApp_delayms
 18067 ;;		_sendCommand
 18068 ;; This function is called by:
 18069 ;;		_moteRunningProcess
 18070 ;;		_moteApp_testSensors
 18071 ;; This function uses a non-reentrant model
 18072 ;;
 18073                           
 18074                           	psect	text69
 18075  00486C                     __ptext69:
 18076                           	opt stack 0
 18077  00486C                     _moteApp_setSensorsInput:
 18078                           	opt stack 14
 18079                           
 18080                           ;MOTEapp.c: 1392: uint16_t escapeCounter = 0;
 18081                           
 18082                           ;incstack = 0
 18083  00486C  0E00               	movlw	0
 18084  00486E  0100               	movlb	0	; () banked
 18085  004870  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 18086  004872  0E00               	movlw	0
 18087  004874  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;MOTEapp.c: 1393: sendCommand("sys set pinmode GPIO13 ana");
 18091  004876  0ED9               	movlw	low STR_162
 18092  004878  6F61               	movwf	sendCommand@string& (0+255),b
 18093  00487A  0E79               	movlw	high STR_162
 18094  00487C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18095  00487E  ECB2  F029         	call	_sendCommand	;wreg free
 18096                           
 18097                           ;MOTEapp.c: 1394: while ( !MOTEapp_getModuleResponse() )
 18098  004882  D009               	goto	l642
 18099  004884                     
 18100                           ;MOTEapp.c: 1395: {
 18101                           ;MOTEapp.c: 1396: if (++escapeCounter > 50000)
 18102  004884  0100               	movlb	0	; () banked
 18103  004886  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 18104  004888  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 18105  00488A  0E51               	movlw	81
 18106  00488C  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 18107  00488E  0EC3               	movlw	195
 18108  004890  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 18109  004892  B0D8               	btfsc	status,0,c
 18110  004894  D005               	goto	u7860
 18111  004896                     l642:
 18112                           
 18113                           ; BSR set to: 0
 18114                           
 18115                           ; BSR set to: 0
 18116  004896  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
 18117  00489A  0900               	iorlw	0
 18118  00489C  B4D8               	btfsc	status,2,c
 18119  00489E  D7F2               	goto	l641
 18120  0048A0                     u7860:
 18121                           
 18122                           ;MOTEapp.c: 1398: }
 18123                           ;MOTEapp.c: 1399: escapeCounter = 0;
 18124  0048A0  0E00               	movlw	0
 18125  0048A2  0100               	movlb	0	; () banked
 18126  0048A4  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 18127  0048A6  0E00               	movlw	0
 18128  0048A8  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 18129                           
 18130                           ; BSR set to: 0
 18131                           ;MOTEapp.c: 1400: sendCommand("sys set pinmode GPIO12 ana");
 18132  0048AA  0EBE               	movlw	low STR_163
 18133  0048AC  6F61               	movwf	sendCommand@string& (0+255),b
 18134  0048AE  0E79               	movlw	high STR_163
 18135  0048B0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18136  0048B2  ECB2  F029         	call	_sendCommand	;wreg free
 18137                           
 18138                           ;MOTEapp.c: 1401: while ( !MOTEapp_getModuleResponse() )
 18139  0048B6  D009               	goto	l646
 18140  0048B8                     
 18141                           ;MOTEapp.c: 1402: {
 18142                           ;MOTEapp.c: 1403: if (++escapeCounter > 50000)
 18143  0048B8  0100               	movlb	0	; () banked
 18144  0048BA  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 18145  0048BC  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 18146  0048BE  0E51               	movlw	81
 18147  0048C0  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 18148  0048C2  0EC3               	movlw	195
 18149  0048C4  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 18150  0048C6  B0D8               	btfsc	status,0,c
 18151  0048C8  D005               	goto	u7880
 18152  0048CA                     l646:
 18153                           
 18154                           ; BSR set to: 0
 18155                           
 18156                           ; BSR set to: 0
 18157  0048CA  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
 18158  0048CE  0900               	iorlw	0
 18159  0048D0  B4D8               	btfsc	status,2,c
 18160  0048D2  D7F2               	goto	l645
 18161  0048D4                     u7880:
 18162                           
 18163                           ;MOTEapp.c: 1405: }
 18164                           ;MOTEapp.c: 1406: moteApp_delayms(100);
 18165  0048D4  0E00               	movlw	0
 18166  0048D6  0100               	movlb	0	; () banked
 18167  0048D8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18168  0048DA  0E64               	movlw	100
 18169  0048DC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18170  0048DE  EC50  F029         	call	_moteApp_delayms	;wreg free
 18171  0048E2  0012               	return		;funcret
 18172  0048E4                     __end_of_moteApp_setSensorsInput:
 18173                           	opt stack 0
 18174                           tblptru	equ	0xFF8
 18175                           tblptrh	equ	0xFF7
 18176                           tblptrl	equ	0xFF6
 18177                           tablat	equ	0xFF5
 18178                           prodh	equ	0xFF4
 18179                           prodl	equ	0xFF3
 18180                           intcon	equ	0xFF2
 18181                           intcon3	equ	0xFF0
 18182                           indf0	equ	0xFEF
 18183                           postinc0	equ	0xFEE
 18184                           fsr0h	equ	0xFEA
 18185                           fsr0l	equ	0xFE9
 18186                           wreg	equ	0xFE8
 18187                           indf1	equ	0xFE7
 18188                           postdec1	equ	0xFE5
 18189                           fsr1h	equ	0xFE2
 18190                           fsr1l	equ	0xFE1
 18191                           indf2	equ	0xFDF
 18192                           postinc2	equ	0xFDE
 18193                           postdec2	equ	0xFDD
 18194                           plusw2	equ	0xFDB
 18195                           fsr2h	equ	0xFDA
 18196                           fsr2l	equ	0xFD9
 18197                           status	equ	0xFD8
 18198                           
 18199 ;; *************** function _moteApp_delayms *****************
 18200 ;; Defined at:
 18201 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 18202 ;; Parameters:    Size  Location     Type
 18203 ;;  length          2    0[BANK0 ] unsigned int 
 18204 ;; Auto vars:     Size  Location     Type
 18205 ;;  counter         2    3[BANK0 ] unsigned int 
 18206 ;; Return value:  Size  Location     Type
 18207 ;;                  1    wreg      void 
 18208 ;; Registers used:
 18209 ;;		wreg, status,2, status,0
 18210 ;; Tracked objects:
 18211 ;;		On entry : 0/0
 18212 ;;		On exit  : 0/0
 18213 ;;		Unchanged: 0/0
 18214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18215 ;;      Params:         0       2       0       0       0       0       0       0       0
 18216 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18217 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18218 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18219 ;;Total ram usage:        5 bytes
 18220 ;; Hardware stack levels used:    1
 18221 ;; Hardware stack levels required when called:   11
 18222 ;; This function calls:
 18223 ;;		Nothing
 18224 ;; This function is called by:
 18225 ;;		_main
 18226 ;;		_moduleResync
 18227 ;;		_moteJoiningProcess
 18228 ;;		_moteRunningProcess
 18229 ;;		_moteApp_GoToSleep
 18230 ;;		_moteApp_setSensorsInput
 18231 ;;		_PICoRa_test_powerup
 18232 ;; This function uses a non-reentrant model
 18233 ;;
 18234                           
 18235                           	psect	text70
 18236  0052A0                     __ptext70:
 18237                           	opt stack 0
 18238  0052A0                     _moteApp_delayms:
 18239                           	opt stack 16
 18240                           
 18241                           ;MOTEapp.c: 169: uint16_t counter;
 18242                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 18243                           
 18244                           ;incstack = 0
 18245  0052A0  0E00               	movlw	0
 18246  0052A2  0100               	movlb	0	; () banked
 18247  0052A4  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 18248  0052A6  0E00               	movlw	0
 18249  0052A8  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 18250  0052AA  D00C               	goto	l271
 18251  0052AC                     
 18252                           ; BSR set to: 0
 18253                           ;MOTEapp.c: 171: {
 18254                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 18255                           
 18256                           ; BSR set to: 0
 18257  0052AC  0E10               	movlw	16
 18258  0052AE  0100               	movlb	0	; () banked
 18259  0052B0  6F62               	movwf	??_moteApp_delayms& (0+255),b
 18260  0052B2  0E94               	movlw	148
 18261  0052B4                     u10817:
 18262  0052B4  2EE8               	decfsz	wreg,f,c
 18263  0052B6  D7FE               	bra	u10817
 18264  0052B8  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 18265  0052BA  D7FC               	bra	u10817
 18266  0052BC  F000               	nop	
 18267  0052BE  0100               	movlb	0	; () banked
 18268  0052C0  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 18269  0052C2  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 18270  0052C4                     l271:
 18271                           
 18272                           ; BSR set to: 0
 18273  0052C4  5160               	movf	moteApp_delayms@length& (0+255),w,b
 18274  0052C6  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 18275  0052C8  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 18276  0052CA  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 18277  0052CC  B0D8               	btfsc	status,0,c
 18278  0052CE  0012               	return	
 18279  0052D0  D7ED               	goto	l272
 18280  0052D2                     __end_of_moteApp_delayms:
 18281                           	opt stack 0
 18282                           tblptru	equ	0xFF8
 18283                           tblptrh	equ	0xFF7
 18284                           tblptrl	equ	0xFF6
 18285                           tablat	equ	0xFF5
 18286                           prodh	equ	0xFF4
 18287                           prodl	equ	0xFF3
 18288                           intcon	equ	0xFF2
 18289                           intcon3	equ	0xFF0
 18290                           indf0	equ	0xFEF
 18291                           postinc0	equ	0xFEE
 18292                           fsr0h	equ	0xFEA
 18293                           fsr0l	equ	0xFE9
 18294                           wreg	equ	0xFE8
 18295                           indf1	equ	0xFE7
 18296                           postdec1	equ	0xFE5
 18297                           fsr1h	equ	0xFE2
 18298                           fsr1l	equ	0xFE1
 18299                           indf2	equ	0xFDF
 18300                           postinc2	equ	0xFDE
 18301                           postdec2	equ	0xFDD
 18302                           plusw2	equ	0xFDB
 18303                           fsr2h	equ	0xFDA
 18304                           fsr2l	equ	0xFD9
 18305                           status	equ	0xFD8
 18306                           
 18307 ;; *************** function _moteApp_getTempValue *****************
 18308 ;; Defined at:
 18309 ;;		line 1408 in file "../Includes/Board/MOTEapp.c"
 18310 ;; Parameters:    Size  Location     Type
 18311 ;;		None
 18312 ;; Auto vars:     Size  Location     Type
 18313 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 18314 ;; Return value:  Size  Location     Type
 18315 ;;                  2    3[BANK0 ] PTR unsigned char 
 18316 ;; Registers used:
 18317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18318 ;; Tracked objects:
 18319 ;;		On entry : 0/0
 18320 ;;		On exit  : 0/0
 18321 ;;		Unchanged: 0/0
 18322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18323 ;;      Params:         0       2       0       0       0       0       0       0       0
 18324 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18326 ;;      Totals:         0       4       0       0       0       0       0       0       0
 18327 ;;Total ram usage:        4 bytes
 18328 ;; Hardware stack levels used:    1
 18329 ;; Hardware stack levels required when called:   14
 18330 ;; This function calls:
 18331 ;;		_MOTEapp_getModuleResponse
 18332 ;;		_sendCommand
 18333 ;; This function is called by:
 18334 ;;		_moteHandler
 18335 ;;		_moteRunningProcess
 18336 ;;		_moteApp_testSensors
 18337 ;; This function uses a non-reentrant model
 18338 ;;
 18339                           
 18340                           	psect	text71
 18341  00505C                     __ptext71:
 18342                           	opt stack 0
 18343  00505C                     _moteApp_getTempValue:
 18344                           	opt stack 14
 18345                           
 18346                           ;MOTEapp.c: 1410: uint16_t escapeCounter = 0;
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;incstack = 0
 18350  00505C  0E00               	movlw	0
 18351  00505E  0100               	movlb	0	; () banked
 18352  005060  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 18353  005062  0E00               	movlw	0
 18354  005064  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;MOTEapp.c: 1412: sendCommand("sys get pinana GPIO12");
 18358  005066  0E5C               	movlw	low STR_164
 18359  005068  6F61               	movwf	sendCommand@string& (0+255),b
 18360  00506A  0E7A               	movlw	high STR_164
 18361  00506C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18362  00506E  ECB2  F029         	call	_sendCommand	;wreg free
 18363                           
 18364                           ;MOTEapp.c: 1413: while ( !MOTEapp_getModuleResponse() )
 18365  005072  D009               	goto	l653
 18366  005074                     
 18367                           ;MOTEapp.c: 1414: {
 18368                           ;MOTEapp.c: 1415: if (++escapeCounter > 50000)
 18369  005074  0100               	movlb	0	; () banked
 18370  005076  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 18371  005078  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 18372  00507A  0E51               	movlw	81
 18373  00507C  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 18374  00507E  0EC3               	movlw	195
 18375  005080  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 18376  005082  B0D8               	btfsc	status,0,c
 18377  005084  D005               	goto	u7650
 18378  005086                     l653:
 18379                           
 18380                           ; BSR set to: 0
 18381                           
 18382                           ; BSR set to: 0
 18383  005086  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
 18384  00508A  0900               	iorlw	0
 18385  00508C  B4D8               	btfsc	status,2,c
 18386  00508E  D7F2               	goto	l652
 18387  005090                     u7650:
 18388                           
 18389                           ;MOTEapp.c: 1417: }
 18390                           ;MOTEapp.c: 1419: return &moduleResonseBuffer;
 18391  005090  0E5A               	movlw	low _moduleResonseBuffer
 18392  005092  0100               	movlb	0	; () banked
 18393  005094  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 18394  005096  0E01               	movlw	high _moduleResonseBuffer
 18395  005098  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 18396  00509A  0012               	return	
 18397  00509C                     __end_of_moteApp_getTempValue:
 18398                           	opt stack 0
 18399                           tblptru	equ	0xFF8
 18400                           tblptrh	equ	0xFF7
 18401                           tblptrl	equ	0xFF6
 18402                           tablat	equ	0xFF5
 18403                           prodh	equ	0xFF4
 18404                           prodl	equ	0xFF3
 18405                           intcon	equ	0xFF2
 18406                           intcon3	equ	0xFF0
 18407                           indf0	equ	0xFEF
 18408                           postinc0	equ	0xFEE
 18409                           fsr0h	equ	0xFEA
 18410                           fsr0l	equ	0xFE9
 18411                           wreg	equ	0xFE8
 18412                           indf1	equ	0xFE7
 18413                           postdec1	equ	0xFE5
 18414                           fsr1h	equ	0xFE2
 18415                           fsr1l	equ	0xFE1
 18416                           indf2	equ	0xFDF
 18417                           postinc2	equ	0xFDE
 18418                           postdec2	equ	0xFDD
 18419                           plusw2	equ	0xFDB
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function _moteApp_getLightValue *****************
 18425 ;; Defined at:
 18426 ;;		line 1422 in file "../Includes/Board/MOTEapp.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;		None
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  2   14[BANK0 ] PTR unsigned char 
 18433 ;; Registers used:
 18434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18440 ;;      Params:         0       2       0       0       0       0       0       0       0
 18441 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18443 ;;      Totals:         0       4       0       0       0       0       0       0       0
 18444 ;;Total ram usage:        4 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; Hardware stack levels required when called:   14
 18447 ;; This function calls:
 18448 ;;		_MOTEapp_getModuleResponse
 18449 ;;		_moteApp_setLightString
 18450 ;;		_sendCommand
 18451 ;; This function is called by:
 18452 ;;		_moteHandler
 18453 ;;		_moteRunningProcess
 18454 ;;		_moteApp_testSensors
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458                           	psect	text72
 18459  004E66                     __ptext72:
 18460                           	opt stack 0
 18461  004E66                     _moteApp_getLightValue:
 18462                           	opt stack 14
 18463                           
 18464                           ;MOTEapp.c: 1424: uint16_t escapeCounter = 0;
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;incstack = 0
 18468  004E66  0E00               	movlw	0
 18469  004E68  0100               	movlb	0	; () banked
 18470  004E6A  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 18471  004E6C  0E00               	movlw	0
 18472  004E6E  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;MOTEapp.c: 1426: sendCommand("sys get pinana GPIO13");
 18476  004E70  0E72               	movlw	low STR_165
 18477  004E72  6F61               	movwf	sendCommand@string& (0+255),b
 18478  004E74  0E7A               	movlw	high STR_165
 18479  004E76  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18480  004E78  ECB2  F029         	call	_sendCommand	;wreg free
 18481                           
 18482                           ;MOTEapp.c: 1427: while ( !MOTEapp_getModuleResponse() )
 18483  004E7C  D009               	goto	l660
 18484  004E7E                     
 18485                           ;MOTEapp.c: 1428: {
 18486                           ;MOTEapp.c: 1429: if (++escapeCounter > 50000)
 18487  004E7E  0100               	movlb	0	; () banked
 18488  004E80  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 18489  004E82  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 18490  004E84  0E51               	movlw	81
 18491  004E86  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 18492  004E88  0EC3               	movlw	195
 18493  004E8A  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 18494  004E8C  B0D8               	btfsc	status,0,c
 18495  004E8E  D005               	goto	u7630
 18496  004E90                     l660:
 18497                           
 18498                           ; BSR set to: 0
 18499                           
 18500                           ; BSR set to: 0
 18501  004E90  ECBA  F025         	call	_MOTEapp_getModuleResponse	;wreg free
 18502  004E94  0900               	iorlw	0
 18503  004E96  B4D8               	btfsc	status,2,c
 18504  004E98  D7F2               	goto	l659
 18505  004E9A                     u7630:
 18506                           
 18507                           ;MOTEapp.c: 1431: }
 18508                           ;MOTEapp.c: 1432: moteApp_setLightString(moduleResonseBuffer);
 18509  004E9A  0E5A               	movlw	low _moduleResonseBuffer
 18510  004E9C  0100               	movlb	0	; () banked
 18511  004E9E  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 18512  004EA0  0E01               	movlw	high _moduleResonseBuffer
 18513  004EA2  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 18514  004EA4  EC51  F025         	call	_moteApp_setLightString	;wreg free
 18515                           
 18516                           ;MOTEapp.c: 1433: return &moduleResonseBuffer;
 18517  004EA8  0E5A               	movlw	low _moduleResonseBuffer
 18518  004EAA  0100               	movlb	0	; () banked
 18519  004EAC  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 18520  004EAE  0E01               	movlw	high _moduleResonseBuffer
 18521  004EB0  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 18522  004EB2  0012               	return	
 18523  004EB4                     __end_of_moteApp_getLightValue:
 18524                           	opt stack 0
 18525                           tblptru	equ	0xFF8
 18526                           tblptrh	equ	0xFF7
 18527                           tblptrl	equ	0xFF6
 18528                           tablat	equ	0xFF5
 18529                           prodh	equ	0xFF4
 18530                           prodl	equ	0xFF3
 18531                           intcon	equ	0xFF2
 18532                           intcon3	equ	0xFF0
 18533                           indf0	equ	0xFEF
 18534                           postinc0	equ	0xFEE
 18535                           fsr0h	equ	0xFEA
 18536                           fsr0l	equ	0xFE9
 18537                           wreg	equ	0xFE8
 18538                           indf1	equ	0xFE7
 18539                           postdec1	equ	0xFE5
 18540                           fsr1h	equ	0xFE2
 18541                           fsr1l	equ	0xFE1
 18542                           indf2	equ	0xFDF
 18543                           postinc2	equ	0xFDE
 18544                           postdec2	equ	0xFDD
 18545                           plusw2	equ	0xFDB
 18546                           fsr2h	equ	0xFDA
 18547                           fsr2l	equ	0xFD9
 18548                           status	equ	0xFD8
 18549                           
 18550 ;; *************** function _sendCommand *****************
 18551 ;; Defined at:
 18552 ;;		line 1117 in file "../Includes/Board/MOTEapp.c"
 18553 ;; Parameters:    Size  Location     Type
 18554 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18555 ;;		 -> STR_165(22), STR_164(22), STR_163(27), STR_162(27), 
 18556 ;;		 -> STR_157(26), STR_156(26), STR_155(26), STR_154(26), 
 18557 ;;		 -> STR_153(3), STR_152(9), STR_151(15), STR_150(13), 
 18558 ;;		 -> STR_149(13), STR_148(13), STR_147(13), STR_146(13), 
 18559 ;;		 -> STR_145(13), STR_144(13), STR_143(13), STR_142(16), 
 18560 ;;		 -> STR_49(11), STR_47(11), STR_45(14), STR_37(14), 
 18561 ;;		 -> STR_31(10), STR_27(13), STR_22(14), STR_20(13), 
 18562 ;;		 -> STR_18(10), STR_13(10), STR_5(20), STR_4(2), 
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;		None
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  1    wreg      void 
 18567 ;; Registers used:
 18568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18574 ;;      Params:         0       2       0       0       0       0       0       0       0
 18575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18577 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18578 ;;Total ram usage:        2 bytes
 18579 ;; Hardware stack levels used:    1
 18580 ;; Hardware stack levels required when called:   13
 18581 ;; This function calls:
 18582 ;;		_EUSART_Write
 18583 ;;		_EndLine
 18584 ;; This function is called by:
 18585 ;;		_moduleResync
 18586 ;;		_moduleSleep
 18587 ;;		_moteJoiningProcess
 18588 ;;		_MOTEapp_SetDataRateSetting
 18589 ;;		_moteApp_clearCommand
 18590 ;;		_moteApp_toggleLeds
 18591 ;;		_moteApp_setSensorsInput
 18592 ;;		_moteApp_getTempValue
 18593 ;;		_moteApp_getLightValue
 18594 ;; This function uses a non-reentrant model
 18595 ;;
 18596                           
 18597                           	psect	text73
 18598  005364                     __ptext73:
 18599                           	opt stack 0
 18600  005364                     _sendCommand:
 18601                           	opt stack 14
 18602                           
 18603                           ;MOTEapp.c: 1120: while (*string)
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;incstack = 0
 18607  005364  D00B               	goto	l557
 18608  005366                     
 18609                           ;MOTEapp.c: 1121: {
 18610                           ;MOTEapp.c: 1122: EUSART_Write(*string++);
 18611  005366  C061  FFF6         	movff	sendCommand@string,tblptrl
 18612  00536A  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18613  00536E                     	if	0	;tblptru may be non-zero
 18614  00536E                     	endif
 18615  00536E                     	if	0	;tblptru may be non-zero
 18616  00536E                     	endif
 18617  00536E  0008               	tblrd		*
 18618  005370  50F5               	movf	tablat,w,c
 18619  005372  EC6D  F028         	call	_EUSART_Write
 18620  005376  0100               	movlb	0	; () banked
 18621  005378  4B61               	infsnz	sendCommand@string& (0+255),f,b
 18622  00537A  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 18623  00537C                     l557:
 18624                           
 18625                           ; BSR set to: 0
 18626  00537C  C061  FFF6         	movff	sendCommand@string,tblptrl
 18627  005380  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18628  005384                     	if	0	;tblptru may be non-zero
 18629  005384                     	endif
 18630  005384                     	if	0	;tblptru may be non-zero
 18631  005384                     	endif
 18632  005384  0008               	tblrd		*
 18633  005386  50F5               	movf	tablat,w,c
 18634  005388  0900               	iorlw	0
 18635  00538A  A4D8               	btfss	status,2,c
 18636  00538C  D7EC               	goto	l558
 18637                           
 18638                           ;MOTEapp.c: 1123: }
 18639                           ;MOTEapp.c: 1124: EndLine();
 18640  00538E  EC96  F02B         	call	_EndLine	;wreg free
 18641  005392  0012               	return		;funcret
 18642  005394                     __end_of_sendCommand:
 18643                           	opt stack 0
 18644                           tblptru	equ	0xFF8
 18645                           tblptrh	equ	0xFF7
 18646                           tblptrl	equ	0xFF6
 18647                           tablat	equ	0xFF5
 18648                           prodh	equ	0xFF4
 18649                           prodl	equ	0xFF3
 18650                           intcon	equ	0xFF2
 18651                           intcon3	equ	0xFF0
 18652                           indf0	equ	0xFEF
 18653                           postinc0	equ	0xFEE
 18654                           fsr0h	equ	0xFEA
 18655                           fsr0l	equ	0xFE9
 18656                           wreg	equ	0xFE8
 18657                           indf1	equ	0xFE7
 18658                           postdec1	equ	0xFE5
 18659                           fsr1h	equ	0xFE2
 18660                           fsr1l	equ	0xFE1
 18661                           indf2	equ	0xFDF
 18662                           postinc2	equ	0xFDE
 18663                           postdec2	equ	0xFDD
 18664                           plusw2	equ	0xFDB
 18665                           fsr2h	equ	0xFDA
 18666                           fsr2l	equ	0xFD9
 18667                           status	equ	0xFD8
 18668                           
 18669 ;; *************** function _EndLine *****************
 18670 ;; Defined at:
 18671 ;;		line 1111 in file "../Includes/Board/MOTEapp.c"
 18672 ;; Parameters:    Size  Location     Type
 18673 ;;		None
 18674 ;; Auto vars:     Size  Location     Type
 18675 ;;		None
 18676 ;; Return value:  Size  Location     Type
 18677 ;;                  1    wreg      void 
 18678 ;; Registers used:
 18679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18680 ;; Tracked objects:
 18681 ;;		On entry : 0/0
 18682 ;;		On exit  : 0/0
 18683 ;;		Unchanged: 0/0
 18684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18685 ;;      Params:         0       0       0       0       0       0       0       0       0
 18686 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18687 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18688 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18689 ;;Total ram usage:        0 bytes
 18690 ;; Hardware stack levels used:    1
 18691 ;; Hardware stack levels required when called:   12
 18692 ;; This function calls:
 18693 ;;		_EUSART_Write
 18694 ;; This function is called by:
 18695 ;;		_sendCommand
 18696 ;;		_sendDataCommand
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           	psect	text74
 18701  00572C                     __ptext74:
 18702                           	opt stack 0
 18703  00572C                     _EndLine:
 18704                           	opt stack 15
 18705                           
 18706                           ;MOTEapp.c: 1113: EUSART_Write(0x0D);
 18707                           
 18708                           ;incstack = 0
 18709  00572C  0E0D               	movlw	13
 18710  00572E  EC6D  F028         	call	_EUSART_Write
 18711                           
 18712                           ;MOTEapp.c: 1114: EUSART_Write(0x0A);
 18713  005732  0E0A               	movlw	10
 18714  005734  EC6D  F028         	call	_EUSART_Write
 18715  005738  0012               	return		;funcret
 18716  00573A                     __end_of_EndLine:
 18717                           	opt stack 0
 18718                           tblptru	equ	0xFF8
 18719                           tblptrh	equ	0xFF7
 18720                           tblptrl	equ	0xFF6
 18721                           tablat	equ	0xFF5
 18722                           prodh	equ	0xFF4
 18723                           prodl	equ	0xFF3
 18724                           intcon	equ	0xFF2
 18725                           intcon3	equ	0xFF0
 18726                           indf0	equ	0xFEF
 18727                           postinc0	equ	0xFEE
 18728                           fsr0h	equ	0xFEA
 18729                           fsr0l	equ	0xFE9
 18730                           wreg	equ	0xFE8
 18731                           indf1	equ	0xFE7
 18732                           postdec1	equ	0xFE5
 18733                           fsr1h	equ	0xFE2
 18734                           fsr1l	equ	0xFE1
 18735                           indf2	equ	0xFDF
 18736                           postinc2	equ	0xFDE
 18737                           postdec2	equ	0xFDD
 18738                           plusw2	equ	0xFDB
 18739                           fsr2h	equ	0xFDA
 18740                           fsr2l	equ	0xFD9
 18741                           status	equ	0xFD8
 18742                           
 18743 ;; *************** function _EUSART_Write *****************
 18744 ;; Defined at:
 18745 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 18746 ;; Parameters:    Size  Location     Type
 18747 ;;  txData          1    wreg     unsigned char 
 18748 ;; Auto vars:     Size  Location     Type
 18749 ;;  txData          1    0[BANK0 ] unsigned char 
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  1    wreg      void 
 18752 ;; Registers used:
 18753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18754 ;; Tracked objects:
 18755 ;;		On entry : 0/0
 18756 ;;		On exit  : 0/0
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18759 ;;      Params:         0       0       0       0       0       0       0       0       0
 18760 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18762 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18763 ;;Total ram usage:        1 bytes
 18764 ;; Hardware stack levels used:    1
 18765 ;; Hardware stack levels required when called:   11
 18766 ;; This function calls:
 18767 ;;		Nothing
 18768 ;; This function is called by:
 18769 ;;		_EndLine
 18770 ;;		_sendCommand
 18771 ;;		_sendDataCommand
 18772 ;;		_USBapp_DeviceCdcEmulatorHandler
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           	psect	text75
 18777  0050DA                     __ptext75:
 18778                           	opt stack 0
 18779  0050DA                     _EUSART_Write:
 18780                           	opt stack 15
 18781                           
 18782                           ;incstack = 0
 18783                           ;EUSART_Write@txData stored from wreg
 18784  0050DA  0100               	movlb	0	; () banked
 18785  0050DC  6F60               	movwf	EUSART_Write@txData& (0+255),b
 18786  0050DE                     
 18787                           ;eusart.c: 142: {
 18788                           
 18789                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 18790  0050DE  0100               	movlb	0	; () banked
 18791  0050E0  51E1               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 18792  0050E2  B4D8               	btfsc	status,2,c
 18793  0050E4  D7FC               	goto	l7466
 18794                           
 18795                           ; BSR set to: 0
 18796                           ;eusart.c: 143: }
 18797                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 18798  0050E6  B89D               	btfsc	3997,4,c	;volatile
 18799  0050E8  D003               	goto	l1059
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;eusart.c: 146: {
 18803                           ;eusart.c: 147: TXREG = txData;
 18804  0050EA  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 18805                           
 18806                           ;eusart.c: 148: }
 18807  0050EE  D012               	goto	l1060
 18808  0050F0                     l1059:
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;eusart.c: 149: else
 18812                           ;eusart.c: 150: {
 18813                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 18814  0050F0  989D               	bcf	3997,4,c	;volatile
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 18818  0050F2  51E3               	movf	_eusartTxHead& (0+255),w,b
 18819  0050F4  0D01               	mullw	1
 18820  0050F6  0E40               	movlw	low _eusartTxBuffer
 18821  0050F8  24F3               	addwf	prodl,w,c
 18822  0050FA  6ED9               	movwf	fsr2l,c
 18823  0050FC  0E02               	movlw	high _eusartTxBuffer
 18824  0050FE  20F4               	addwfc	prodh,w,c
 18825  005100  6EDA               	movwf	fsr2h,c
 18826  005102  C060  FFDF         	movff	EUSART_Write@txData,indf2
 18827                           
 18828                           ; BSR set to: 0
 18829  005106  2BE3               	incf	_eusartTxHead& (0+255),f,b
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18833  005108  0E3F               	movlw	63
 18834  00510A  65E3               	cpfsgt	_eusartTxHead& (0+255),b
 18835  00510C  D002               	goto	l1061
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;eusart.c: 154: {
 18839                           ;eusart.c: 155: eusartTxHead = 0;
 18840  00510E  0E00               	movlw	0
 18841  005110  6FE3               	movwf	_eusartTxHead& (0+255),b
 18842  005112                     l1061:
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;eusart.c: 156: }
 18846                           ;eusart.c: 157: eusartTxBufferRemaining--;
 18847                           
 18848                           ; BSR set to: 0
 18849  005112  07E1               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 18850  005114                     l1060:
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;eusart.c: 158: }
 18854                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 18855                           
 18856                           ; BSR set to: 0
 18857  005114  889D               	bsf	3997,4,c	;volatile
 18858                           
 18859                           ; BSR set to: 0
 18860  005116  0012               	return		;funcret
 18861  005118                     __end_of_EUSART_Write:
 18862                           	opt stack 0
 18863                           tblptru	equ	0xFF8
 18864                           tblptrh	equ	0xFF7
 18865                           tblptrl	equ	0xFF6
 18866                           tablat	equ	0xFF5
 18867                           prodh	equ	0xFF4
 18868                           prodl	equ	0xFF3
 18869                           intcon	equ	0xFF2
 18870                           intcon3	equ	0xFF0
 18871                           indf0	equ	0xFEF
 18872                           postinc0	equ	0xFEE
 18873                           fsr0h	equ	0xFEA
 18874                           fsr0l	equ	0xFE9
 18875                           wreg	equ	0xFE8
 18876                           indf1	equ	0xFE7
 18877                           postdec1	equ	0xFE5
 18878                           fsr1h	equ	0xFE2
 18879                           fsr1l	equ	0xFE1
 18880                           indf2	equ	0xFDF
 18881                           postinc2	equ	0xFDE
 18882                           postdec2	equ	0xFDD
 18883                           plusw2	equ	0xFDB
 18884                           fsr2h	equ	0xFDA
 18885                           fsr2l	equ	0xFD9
 18886                           status	equ	0xFD8
 18887                           
 18888 ;; *************** function _moteApp_setLightString *****************
 18889 ;; Defined at:
 18890 ;;		line 1440 in file "../Includes/Board/MOTEapp.c"
 18891 ;; Parameters:    Size  Location     Type
 18892 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 18893 ;;		 -> moduleResonseBuffer(64), 
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;  stingPos        1   13[BANK0 ] unsigned char 
 18896 ;; Return value:  Size  Location     Type
 18897 ;;                  1    wreg      void 
 18898 ;; Registers used:
 18899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/0
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18905 ;;      Params:         0       2       0       0       0       0       0       0       0
 18906 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18908 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18909 ;;Total ram usage:        3 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:   12
 18912 ;; This function calls:
 18913 ;;		_memcpy
 18914 ;; This function is called by:
 18915 ;;		_moteApp_getLightValue
 18916 ;; This function uses a non-reentrant model
 18917 ;;
 18918                           
 18919                           	psect	text76
 18920  004AA2                     __ptext76:
 18921                           	opt stack 0
 18922  004AA2                     _moteApp_setLightString:
 18923                           	opt stack 15
 18924                           
 18925                           ;MOTEapp.c: 1442: memcpy(storedLight, clearLight, sizeof(storedLight));
 18926                           
 18927                           ; BSR set to: 0
 18928                           ;incstack = 0
 18929  004AA2  0EE8               	movlw	low _storedLight
 18930  004AA4  0100               	movlb	0	; () banked
 18931  004AA6  6F60               	movwf	memcpy@d1& (0+255),b
 18932  004AA8  0E01               	movlw	high _storedLight
 18933  004AAA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18934  004AAC  0EE3               	movlw	low _clearLight
 18935  004AAE  6F62               	movwf	memcpy@s1& (0+255),b
 18936  004AB0  0E01               	movlw	high _clearLight
 18937  004AB2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18938  004AB4  0E00               	movlw	0
 18939  004AB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18940  004AB8  0E05               	movlw	5
 18941  004ABA  6F64               	movwf	memcpy@n& (0+255),b
 18942  004ABC  ECA6  F027         	call	_memcpy	;wreg free
 18943                           
 18944                           ;MOTEapp.c: 1443: memcpy(storedLight, lightString, sizeof(storedLight));
 18945  004AC0  0EE8               	movlw	low _storedLight
 18946  004AC2  0100               	movlb	0	; () banked
 18947  004AC4  6F60               	movwf	memcpy@d1& (0+255),b
 18948  004AC6  0E01               	movlw	high _storedLight
 18949  004AC8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18950  004ACA  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 18951  004ACE  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 18952  004AD2  0E00               	movlw	0
 18953  004AD4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18954  004AD6  0E05               	movlw	5
 18955  004AD8  6F64               	movwf	memcpy@n& (0+255),b
 18956  004ADA  ECA6  F027         	call	_memcpy	;wreg free
 18957                           
 18958                           ;MOTEapp.c: 1445: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 18959  004ADE  0E00               	movlw	0
 18960  004AE0  0100               	movlb	0	; () banked
 18961  004AE2  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 18962  004AE4                     l8190:
 18963                           
 18964                           ; BSR set to: 0
 18965  004AE4  0E04               	movlw	4
 18966  004AE6  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 18967  004AE8  D001               	goto	l671
 18968  004AEA  D00E               	goto	u6340
 18969  004AEC                     l671:
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;MOTEapp.c: 1446: {
 18973                           ;MOTEapp.c: 1447: if (storedLight[stingPos] == 0x00)
 18974                           
 18975                           ; BSR set to: 0
 18976  004AEC  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 18977  004AEE  0D01               	mullw	1
 18978  004AF0  0EE8               	movlw	low _storedLight
 18979  004AF2  24F3               	addwf	prodl,w,c
 18980  004AF4  6ED9               	movwf	fsr2l,c
 18981  004AF6  0E01               	movlw	high _storedLight
 18982  004AF8  20F4               	addwfc	prodh,w,c
 18983  004AFA  6EDA               	movwf	fsr2h,c
 18984  004AFC  50DF               	movf	indf2,w,c
 18985  004AFE  B4D8               	btfsc	status,2,c
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;MOTEapp.c: 1448: {
 18989                           ;MOTEapp.c: 1449: lightStringSize = stingPos;
 18990  004B00  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 18991                           
 18992                           ; BSR set to: 0
 18993                           
 18994                           ; BSR set to: 0
 18995  004B04  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 18996  004B06  D7EE               	goto	l8190
 18997  004B08                     u6340:
 18998                           
 18999                           ; BSR set to: 0
 19000                           ;MOTEapp.c: 1450: }
 19001                           ;MOTEapp.c: 1451: }
 19002                           ;MOTEapp.c: 1452: __nop();
 19003  004B08  F000               	nop	
 19004  004B0A  0012               	return		;funcret
 19005  004B0C                     __end_of_moteApp_setLightString:
 19006                           	opt stack 0
 19007                           tblptru	equ	0xFF8
 19008                           tblptrh	equ	0xFF7
 19009                           tblptrl	equ	0xFF6
 19010                           tablat	equ	0xFF5
 19011                           prodh	equ	0xFF4
 19012                           prodl	equ	0xFF3
 19013                           intcon	equ	0xFF2
 19014                           intcon3	equ	0xFF0
 19015                           indf0	equ	0xFEF
 19016                           postinc0	equ	0xFEE
 19017                           fsr0h	equ	0xFEA
 19018                           fsr0l	equ	0xFE9
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postdec1	equ	0xFE5
 19022                           fsr1h	equ	0xFE2
 19023                           fsr1l	equ	0xFE1
 19024                           indf2	equ	0xFDF
 19025                           postinc2	equ	0xFDE
 19026                           postdec2	equ	0xFDD
 19027                           plusw2	equ	0xFDB
 19028                           fsr2h	equ	0xFDA
 19029                           fsr2l	equ	0xFD9
 19030                           status	equ	0xFD8
 19031                           
 19032 ;; *************** function _memcpy *****************
 19033 ;; Defined at:
 19034 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 19035 ;; Parameters:    Size  Location     Type
 19036 ;;  d1              2    0[BANK0 ] PTR void 
 19037 ;;		 -> storedLight(5), 
 19038 ;;  s1              2    2[BANK0 ] PTR const void 
 19039 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 19040 ;;  n               2    4[BANK0 ] unsigned int 
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 19043 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 19044 ;;  d               2    6[BANK0 ] PTR unsigned char 
 19045 ;;		 -> storedLight(5), 
 19046 ;;  tmp             1   10[BANK0 ] unsigned char 
 19047 ;; Return value:  Size  Location     Type
 19048 ;;                  2    0[BANK0 ] PTR void 
 19049 ;; Registers used:
 19050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19051 ;; Tracked objects:
 19052 ;;		On entry : 0/0
 19053 ;;		On exit  : 0/0
 19054 ;;		Unchanged: 0/0
 19055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19056 ;;      Params:         0       6       0       0       0       0       0       0       0
 19057 ;;      Locals:         0       5       0       0       0       0       0       0       0
 19058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19059 ;;      Totals:         0      11       0       0       0       0       0       0       0
 19060 ;;Total ram usage:       11 bytes
 19061 ;; Hardware stack levels used:    1
 19062 ;; Hardware stack levels required when called:   11
 19063 ;; This function calls:
 19064 ;;		Nothing
 19065 ;; This function is called by:
 19066 ;;		_moteApp_setLightString
 19067 ;; This function uses a non-reentrant model
 19068 ;;
 19069                           
 19070                           	psect	text77
 19071  004F4C                     __ptext77:
 19072                           	opt stack 0
 19073  004F4C                     _memcpy:
 19074                           	opt stack 15
 19075                           
 19076                           ;incstack = 0
 19077  004F4C  C062  F068         	movff	memcpy@s1,memcpy@s
 19078  004F50  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 19079  004F54  C060  F066         	movff	memcpy@d1,memcpy@d
 19080  004F58  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 19081  004F5C  D011               	goto	l2527
 19082  004F5E                     l7758:
 19083  004F5E  C068  FFD9         	movff	memcpy@s,fsr2l
 19084  004F62  C069  FFDA         	movff	memcpy@s+1,fsr2h
 19085  004F66  50DF               	movf	indf2,w,c
 19086  004F68  0100               	movlb	0	; () banked
 19087  004F6A  6F6A               	movwf	memcpy@tmp& (0+255),b
 19088                           
 19089                           ; BSR set to: 0
 19090  004F6C  4B68               	infsnz	memcpy@s& (0+255),f,b
 19091  004F6E  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 19092                           
 19093                           ; BSR set to: 0
 19094  004F70  C066  FFD9         	movff	memcpy@d,fsr2l
 19095  004F74  C067  FFDA         	movff	memcpy@d+1,fsr2h
 19096  004F78  C06A  FFDF         	movff	memcpy@tmp,indf2
 19097                           
 19098                           ; BSR set to: 0
 19099  004F7C  4B66               	infsnz	memcpy@d& (0+255),f,b
 19100  004F7E  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 19101  004F80                     l2527:
 19102                           
 19103                           ; BSR set to: 0
 19104  004F80  0100               	movlb	0	; () banked
 19105  004F82  0764               	decf	memcpy@n& (0+255),f,b
 19106  004F84  A0D8               	btfss	status,0,c
 19107  004F86  0765               	decf	(memcpy@n+1)& (0+255),f,b
 19108  004F88  2964               	incf	memcpy@n& (0+255),w,b
 19109  004F8A  E1E9               	bnz	l7758
 19110  004F8C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 19111  004F8E  B4D8               	btfsc	status,2,c
 19112  004F90  0012               	return	
 19113  004F92  D7E5               	goto	l2528
 19114  004F94                     __end_of_memcpy:
 19115                           	opt stack 0
 19116                           tblptru	equ	0xFF8
 19117                           tblptrh	equ	0xFF7
 19118                           tblptrl	equ	0xFF6
 19119                           tablat	equ	0xFF5
 19120                           prodh	equ	0xFF4
 19121                           prodl	equ	0xFF3
 19122                           intcon	equ	0xFF2
 19123                           intcon3	equ	0xFF0
 19124                           indf0	equ	0xFEF
 19125                           postinc0	equ	0xFEE
 19126                           fsr0h	equ	0xFEA
 19127                           fsr0l	equ	0xFE9
 19128                           wreg	equ	0xFE8
 19129                           indf1	equ	0xFE7
 19130                           postdec1	equ	0xFE5
 19131                           fsr1h	equ	0xFE2
 19132                           fsr1l	equ	0xFE1
 19133                           indf2	equ	0xFDF
 19134                           postinc2	equ	0xFDE
 19135                           postdec2	equ	0xFDD
 19136                           plusw2	equ	0xFDB
 19137                           fsr2h	equ	0xFDA
 19138                           fsr2l	equ	0xFD9
 19139                           status	equ	0xFD8
 19140                           
 19141 ;; *************** function _MOTEapp_getModuleResponse *****************
 19142 ;; Defined at:
 19143 ;;		line 1076 in file "../Includes/Board/MOTEapp.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;		None
 19146 ;; Auto vars:     Size  Location     Type
 19147 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 19148 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  1    wreg      unsigned char 
 19151 ;; Registers used:
 19152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19158 ;;      Params:         0       0       0       0       0       0       0       0       0
 19159 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19161 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19162 ;;Total ram usage:        2 bytes
 19163 ;; Hardware stack levels used:    1
 19164 ;; Hardware stack levels required when called:   12
 19165 ;; This function calls:
 19166 ;;		_EUSART_Read
 19167 ;; This function is called by:
 19168 ;;		_moduleResync
 19169 ;;		_moteHandler
 19170 ;;		_moteApp_setSensorsInput
 19171 ;;		_moteApp_getTempValue
 19172 ;;		_moteApp_getLightValue
 19173 ;; This function uses a non-reentrant model
 19174 ;;
 19175                           
 19176                           	psect	text78
 19177  004B74                     __ptext78:
 19178                           	opt stack 0
 19179  004B74                     _MOTEapp_getModuleResponse:
 19180                           	opt stack 15
 19181                           
 19182                           ;MOTEapp.c: 1078: bool terminatorReceived = 0;
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;incstack = 0
 19186  004B74  0E00               	movlw	0
 19187  004B76  0100               	movlb	0	; () banked
 19188  004B78  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 19189                           
 19190                           ;MOTEapp.c: 1080: if ((eusartRxCount))
 19191  004B7A  51F4               	movf	_eusartRxCount& (0+255),w,b	;volatile
 19192  004B7C  B4D8               	btfsc	status,2,c
 19193  004B7E  D02B               	goto	l547
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;MOTEapp.c: 1081: {
 19197                           ;MOTEapp.c: 1082: uint8_t bufferByte = 0;
 19198  004B80  0E00               	movlw	0
 19199  004B82  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;MOTEapp.c: 1083: bufferByte = EUSART_Read();
 19203  004B84  ECC8  F028         	call	_EUSART_Read	;wreg free
 19204  004B88  0100               	movlb	0	; () banked
 19205  004B8A  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;MOTEapp.c: 1085: if (bufferByte == 0x0D)
 19209  004B8C  0E0D               	movlw	13
 19210  004B8E  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 19211  004B90  A4D8               	btfss	status,2,c
 19212  004B92  D00D               	goto	l542
 19213                           
 19214                           ; BSR set to: 0
 19215                           ;MOTEapp.c: 1086: {
 19216                           ;MOTEapp.c: 1087: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 19217  004B94  51F1               	movf	_moduleBufferIndex& (0+255),w,b
 19218  004B96  0D01               	mullw	1
 19219  004B98  0E5A               	movlw	low _moduleResonseBuffer
 19220  004B9A  24F3               	addwf	prodl,w,c
 19221  004B9C  6ED9               	movwf	fsr2l,c
 19222  004B9E  0E01               	movlw	high _moduleResonseBuffer
 19223  004BA0  20F4               	addwfc	prodh,w,c
 19224  004BA2  6EDA               	movwf	fsr2h,c
 19225  004BA4  0E00               	movlw	0
 19226  004BA6  6EDF               	movwf	indf2,c
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;MOTEapp.c: 1089: moduleBufferIndex = 0;
 19230  004BA8  0E00               	movlw	0
 19231  004BAA  6FF1               	movwf	_moduleBufferIndex& (0+255),b
 19232                           
 19233                           ;MOTEapp.c: 1090: }
 19234  004BAC  D014               	goto	l547
 19235  004BAE                     l542:
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;MOTEapp.c: 1091: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 19239                           
 19240                           ; BSR set to: 0
 19241  004BAE  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 19242  004BB0  B4D8               	btfsc	status,2,c
 19243  004BB2  D011               	goto	l547
 19244                           
 19245                           ; BSR set to: 0
 19246  004BB4  0E0A               	movlw	10
 19247  004BB6  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 19248  004BB8  B4D8               	btfsc	status,2,c
 19249  004BBA  D00D               	goto	l547
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;MOTEapp.c: 1095: else
 19253                           ;MOTEapp.c: 1096: {
 19254                           ;MOTEapp.c: 1097: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 19255                           
 19256                           ; BSR set to: 0
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;MOTEapp.c: 1092: {
 19260                           ;MOTEapp.c: 1094: }
 19261  004BBC  51F1               	movf	_moduleBufferIndex& (0+255),w,b
 19262  004BBE  0D01               	mullw	1
 19263  004BC0  0E5A               	movlw	low _moduleResonseBuffer
 19264  004BC2  24F3               	addwf	prodl,w,c
 19265  004BC4  6ED9               	movwf	fsr2l,c
 19266  004BC6  0E01               	movlw	high _moduleResonseBuffer
 19267  004BC8  20F4               	addwfc	prodh,w,c
 19268  004BCA  6EDA               	movwf	fsr2h,c
 19269  004BCC  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;MOTEapp.c: 1098: terminatorReceived = 1;
 19273  004BD0  0E01               	movlw	1
 19274  004BD2  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;MOTEapp.c: 1100: moduleBufferIndex++;
 19278  004BD4  2BF1               	incf	_moduleBufferIndex& (0+255),f,b
 19279  004BD6                     l547:
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;MOTEapp.c: 1101: }
 19283                           ;MOTEapp.c: 1102: }
 19284                           ;MOTEapp.c: 1103: return terminatorReceived;
 19285                           
 19286                           ; BSR set to: 0
 19287                           
 19288                           ; BSR set to: 0
 19289                           
 19290                           ; BSR set to: 0
 19291  004BD6  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 19292  004BD8  0012               	return	
 19293  004BDA                     __end_of_MOTEapp_getModuleResponse:
 19294                           	opt stack 0
 19295                           tblptru	equ	0xFF8
 19296                           tblptrh	equ	0xFF7
 19297                           tblptrl	equ	0xFF6
 19298                           tablat	equ	0xFF5
 19299                           prodh	equ	0xFF4
 19300                           prodl	equ	0xFF3
 19301                           intcon	equ	0xFF2
 19302                           intcon3	equ	0xFF0
 19303                           indf0	equ	0xFEF
 19304                           postinc0	equ	0xFEE
 19305                           fsr0h	equ	0xFEA
 19306                           fsr0l	equ	0xFE9
 19307                           wreg	equ	0xFE8
 19308                           indf1	equ	0xFE7
 19309                           postdec1	equ	0xFE5
 19310                           fsr1h	equ	0xFE2
 19311                           fsr1l	equ	0xFE1
 19312                           indf2	equ	0xFDF
 19313                           postinc2	equ	0xFDE
 19314                           postdec2	equ	0xFDD
 19315                           plusw2	equ	0xFDB
 19316                           fsr2h	equ	0xFDA
 19317                           fsr2l	equ	0xFD9
 19318                           status	equ	0xFD8
 19319                           
 19320 ;; *************** function _EUSART_Read *****************
 19321 ;; Defined at:
 19322 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 19323 ;; Parameters:    Size  Location     Type
 19324 ;;		None
 19325 ;; Auto vars:     Size  Location     Type
 19326 ;;  readValue       1    0[BANK0 ] unsigned char 
 19327 ;; Return value:  Size  Location     Type
 19328 ;;                  1    wreg      unsigned char 
 19329 ;; Registers used:
 19330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19331 ;; Tracked objects:
 19332 ;;		On entry : 0/0
 19333 ;;		On exit  : 0/0
 19334 ;;		Unchanged: 0/0
 19335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19336 ;;      Params:         0       0       0       0       0       0       0       0       0
 19337 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19339 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19340 ;;Total ram usage:        1 bytes
 19341 ;; Hardware stack levels used:    1
 19342 ;; Hardware stack levels required when called:   11
 19343 ;; This function calls:
 19344 ;;		Nothing
 19345 ;; This function is called by:
 19346 ;;		_MOTEapp_getModuleResponse
 19347 ;;		_USBapp_DeviceCdcEmulatorHandler
 19348 ;; This function uses a non-reentrant model
 19349 ;;
 19350                           
 19351                           	psect	text79
 19352  005190                     __ptext79:
 19353                           	opt stack 0
 19354  005190                     _EUSART_Read:
 19355                           	opt stack 15
 19356                           
 19357                           ;eusart.c: 119: uint8_t readValue = 0;
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;incstack = 0
 19361  005190  0E00               	movlw	0
 19362  005192  0100               	movlb	0	; () banked
 19363  005194  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 19364                           
 19365                           ;eusart.c: 121: while(0 == eusartRxCount)
 19366  005196  D001               	goto	l1049
 19367  005198                     l1050:
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;eusart.c: 122: {
 19371                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 19372  005198  8E89               	bsf	3977,7,c	;volatile
 19373  00519A                     l1049:
 19374                           
 19375                           ; BSR set to: 0
 19376                           
 19377                           ; BSR set to: 0
 19378  00519A  51F4               	movf	_eusartRxCount& (0+255),w,b	;volatile
 19379  00519C  B4D8               	btfsc	status,2,c
 19380  00519E  D7FC               	goto	l1050
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;eusart.c: 124: }
 19384                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 19385  0051A0  9A9D               	bcf	3997,5,c	;volatile
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 19389  0051A2  51DF               	movf	_eusartRxTail& (0+255),w,b
 19390  0051A4  0D01               	mullw	1
 19391  0051A6  0E00               	movlw	low _eusartRxBuffer
 19392  0051A8  24F3               	addwf	prodl,w,c
 19393  0051AA  6ED9               	movwf	fsr2l,c
 19394  0051AC  0E02               	movlw	high _eusartRxBuffer
 19395  0051AE  20F4               	addwfc	prodh,w,c
 19396  0051B0  6EDA               	movwf	fsr2h,c
 19397  0051B2  50DF               	movf	indf2,w,c
 19398  0051B4  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 19399                           
 19400                           ; BSR set to: 0
 19401  0051B6  2BDF               	incf	_eusartRxTail& (0+255),f,b
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 19405  0051B8  0E3F               	movlw	63
 19406  0051BA  65DF               	cpfsgt	_eusartRxTail& (0+255),b
 19407  0051BC  D002               	goto	l1052
 19408                           
 19409                           ; BSR set to: 0
 19410                           ;eusart.c: 130: {
 19411                           ;eusart.c: 131: eusartRxTail = 0;
 19412  0051BE  0E00               	movlw	0
 19413  0051C0  6FDF               	movwf	_eusartRxTail& (0+255),b
 19414  0051C2                     l1052:
 19415                           
 19416                           ; BSR set to: 0
 19417                           ;eusart.c: 132: }
 19418                           ;eusart.c: 133: eusartRxCount--;
 19419                           
 19420                           ; BSR set to: 0
 19421  0051C2  07F4               	decf	_eusartRxCount& (0+255),f,b	;volatile
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 19425  0051C4  8A9D               	bsf	3997,5,c	;volatile
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;eusart.c: 136: return readValue;
 19429  0051C6  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 19430  0051C8  0012               	return	
 19431  0051CA                     __end_of_EUSART_Read:
 19432                           	opt stack 0
 19433                           tblptru	equ	0xFF8
 19434                           tblptrh	equ	0xFF7
 19435                           tblptrl	equ	0xFF6
 19436                           tablat	equ	0xFF5
 19437                           prodh	equ	0xFF4
 19438                           prodl	equ	0xFF3
 19439                           intcon	equ	0xFF2
 19440                           intcon3	equ	0xFF0
 19441                           indf0	equ	0xFEF
 19442                           postinc0	equ	0xFEE
 19443                           fsr0h	equ	0xFEA
 19444                           fsr0l	equ	0xFE9
 19445                           wreg	equ	0xFE8
 19446                           indf1	equ	0xFE7
 19447                           postdec1	equ	0xFE5
 19448                           fsr1h	equ	0xFE2
 19449                           fsr1l	equ	0xFE1
 19450                           indf2	equ	0xFDF
 19451                           postinc2	equ	0xFDE
 19452                           postdec2	equ	0xFDD
 19453                           plusw2	equ	0xFDB
 19454                           fsr2h	equ	0xFDA
 19455                           fsr2l	equ	0xFD9
 19456                           status	equ	0xFD8
 19457                           
 19458 ;; *************** function _moteApp_convertSensorValue *****************
 19459 ;; Defined at:
 19460 ;;		line 1350 in file "../Includes/Board/MOTEapp.c"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 19463 ;;		 -> moduleResonseBuffer(64), 
 19464 ;; Auto vars:     Size  Location     Type
 19465 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 19466 ;;  index           1   25[BANK0 ] unsigned char 
 19467 ;; Return value:  Size  Location     Type
 19468 ;;                  2   18[BANK0 ] unsigned int 
 19469 ;; Registers used:
 19470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/0
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19476 ;;      Params:         0       2       0       0       0       0       0       0       0
 19477 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19478 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19479 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19480 ;;Total ram usage:        8 bytes
 19481 ;; Hardware stack levels used:    1
 19482 ;; Hardware stack levels required when called:   12
 19483 ;; This function calls:
 19484 ;;		___wmul
 19485 ;; This function is called by:
 19486 ;;		_moteHandler
 19487 ;;		_moteRunningProcess
 19488 ;;		_moteApp_testSensors
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           	psect	text80
 19493  0047EE                     __ptext80:
 19494                           	opt stack 0
 19495  0047EE                     _moteApp_convertSensorValue:
 19496                           	opt stack 16
 19497                           
 19498                           ;MOTEapp.c: 1352: uint8_t index;
 19499                           ;MOTEapp.c: 1353: uint16_t convertedValue = 0;
 19500                           
 19501                           ; BSR set to: 0
 19502                           ;incstack = 0
 19503  0047EE  0E00               	movlw	0
 19504  0047F0  0100               	movlb	0	; () banked
 19505  0047F2  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 19506  0047F4  0E00               	movlw	0
 19507  0047F6  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 19508                           
 19509                           ;MOTEapp.c: 1354: for(index = 0; index < 4; index++)
 19510  0047F8  0E00               	movlw	0
 19511  0047FA  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 19512  0047FC                     l9042:
 19513                           
 19514                           ; BSR set to: 0
 19515  0047FC  0E03               	movlw	3
 19516  0047FE  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 19517  004800  D001               	goto	l629
 19518  004802  D02F               	goto	u7690
 19519  004804                     l629:
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;MOTEapp.c: 1355: {
 19523                           ;MOTEapp.c: 1356: if (*string != 0)
 19524                           
 19525                           ; BSR set to: 0
 19526  004804  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 19527  004808  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 19528  00480C  50DF               	movf	indf2,w,c
 19529  00480E  B4D8               	btfsc	status,2,c
 19530  004810  D028               	goto	u7690
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;MOTEapp.c: 1357: {
 19534                           ;MOTEapp.c: 1358: if (index != 0)
 19535  004812  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 19536  004814  B4D8               	btfsc	status,2,c
 19537  004816  D00E               	goto	l632
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;MOTEapp.c: 1359: convertedValue = convertedValue * 10;
 19541  004818  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 19542  00481C  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 19543  004820  0E00               	movlw	0
 19544  004822  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19545  004824  0E0A               	movlw	10
 19546  004826  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19547  004828  EC52  F02A         	call	___wmul	;wreg free
 19548  00482C  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 19549  004830  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 19550  004834                     l632:
 19551                           
 19552                           ;MOTEapp.c: 1361: convertedValue = (*string++ - '0') + convertedValue;
 19553  004834  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 19554  004838  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 19555  00483C  50DF               	movf	indf2,w,c
 19556  00483E  0100               	movlb	0	; () banked
 19557  004840  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 19558  004842  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 19559  004844  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 19560  004846  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 19561  004848  0E00               	movlw	0
 19562  00484A  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 19563  00484C  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 19564  00484E  0ED0               	movlw	208
 19565  004850  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 19566  004852  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 19567  004854  0EFF               	movlw	255
 19568  004856  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 19569  004858  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 19570                           
 19571                           ; BSR set to: 0
 19572  00485A  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 19573  00485C  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 19574                           
 19575                           ; BSR set to: 0
 19576                           
 19577                           ; BSR set to: 0
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;MOTEapp.c: 1363: else
 19581                           ;MOTEapp.c: 1364: {
 19582                           ;MOTEapp.c: 1365: break;
 19583                           
 19584                           ;MOTEapp.c: 1362: }
 19585  00485E  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 19586  004860  D7CD               	goto	l9042
 19587  004862                     u7690:
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;MOTEapp.c: 1366: }
 19591                           ;MOTEapp.c: 1367: }
 19592                           ;MOTEapp.c: 1368: return convertedValue;
 19593  004862  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 19594  004866  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 19595                           
 19596                           ; BSR set to: 0
 19597  00486A  0012               	return		;funcret
 19598  00486C                     __end_of_moteApp_convertSensorValue:
 19599                           	opt stack 0
 19600                           tblptru	equ	0xFF8
 19601                           tblptrh	equ	0xFF7
 19602                           tblptrl	equ	0xFF6
 19603                           tablat	equ	0xFF5
 19604                           prodh	equ	0xFF4
 19605                           prodl	equ	0xFF3
 19606                           intcon	equ	0xFF2
 19607                           intcon3	equ	0xFF0
 19608                           indf0	equ	0xFEF
 19609                           postinc0	equ	0xFEE
 19610                           fsr0h	equ	0xFEA
 19611                           fsr0l	equ	0xFE9
 19612                           wreg	equ	0xFE8
 19613                           indf1	equ	0xFE7
 19614                           postdec1	equ	0xFE5
 19615                           fsr1h	equ	0xFE2
 19616                           fsr1l	equ	0xFE1
 19617                           indf2	equ	0xFDF
 19618                           postinc2	equ	0xFDE
 19619                           postdec2	equ	0xFDD
 19620                           plusw2	equ	0xFDB
 19621                           fsr2h	equ	0xFDA
 19622                           fsr2l	equ	0xFD9
 19623                           status	equ	0xFD8
 19624                           
 19625 ;; *************** function ___wmul *****************
 19626 ;; Defined at:
 19627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 19628 ;; Parameters:    Size  Location     Type
 19629 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19630 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19631 ;; Auto vars:     Size  Location     Type
 19632 ;;  product         2    4[BANK0 ] unsigned int 
 19633 ;; Return value:  Size  Location     Type
 19634 ;;                  2    0[BANK0 ] unsigned int 
 19635 ;; Registers used:
 19636 ;;		wreg, status,2, status,0, prodl, prodh
 19637 ;; Tracked objects:
 19638 ;;		On entry : 0/0
 19639 ;;		On exit  : 0/0
 19640 ;;		Unchanged: 0/0
 19641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19642 ;;      Params:         0       4       0       0       0       0       0       0       0
 19643 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19645 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19646 ;;Total ram usage:        6 bytes
 19647 ;; Hardware stack levels used:    1
 19648 ;; Hardware stack levels required when called:   11
 19649 ;; This function calls:
 19650 ;;		Nothing
 19651 ;; This function is called by:
 19652 ;;		_moteApp_convertSensorValue
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656                           	psect	text81
 19657  0054A4                     __ptext81:
 19658                           	opt stack 0
 19659  0054A4                     ___wmul:
 19660                           	opt stack 16
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;incstack = 0
 19664  0054A4  0100               	movlb	0	; () banked
 19665  0054A6  5160               	movf	___wmul@multiplier& (0+255),w,b
 19666  0054A8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19667  0054AA  CFF3 F064          	movff	prodl,___wmul@product
 19668  0054AE  CFF4 F065          	movff	prodh,___wmul@product+1
 19669  0054B2  5160               	movf	___wmul@multiplier& (0+255),w,b
 19670  0054B4  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19671  0054B6  50F3               	movf	prodl,w,c
 19672  0054B8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19673  0054BA  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19674  0054BC  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19675  0054BE  50F3               	movf	prodl,w,c
 19676  0054C0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19677                           
 19678                           ; BSR set to: 0
 19679  0054C2  C064  F060         	movff	___wmul@product,?___wmul
 19680  0054C6  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19681  0054CA  0012               	return	
 19682  0054CC                     __end_of___wmul:
 19683                           	opt stack 0
 19684                           tblptru	equ	0xFF8
 19685                           tblptrh	equ	0xFF7
 19686                           tblptrl	equ	0xFF6
 19687                           tablat	equ	0xFF5
 19688                           prodh	equ	0xFF4
 19689                           prodl	equ	0xFF3
 19690                           intcon	equ	0xFF2
 19691                           intcon3	equ	0xFF0
 19692                           indf0	equ	0xFEF
 19693                           postinc0	equ	0xFEE
 19694                           fsr0h	equ	0xFEA
 19695                           fsr0l	equ	0xFE9
 19696                           wreg	equ	0xFE8
 19697                           indf1	equ	0xFE7
 19698                           postdec1	equ	0xFE5
 19699                           fsr1h	equ	0xFE2
 19700                           fsr1l	equ	0xFE1
 19701                           indf2	equ	0xFDF
 19702                           postinc2	equ	0xFDE
 19703                           postdec2	equ	0xFDD
 19704                           plusw2	equ	0xFDB
 19705                           fsr2h	equ	0xFDA
 19706                           fsr2l	equ	0xFD9
 19707                           status	equ	0xFD8
 19708                           
 19709 ;; *************** function _ADC_TempConversion *****************
 19710 ;; Defined at:
 19711 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;  tempRaw         1    wreg     enum E5749
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;  tempRaw         1   70[BANK0 ] enum E5749
 19716 ;;  val             4   72[BANK0 ] enum E5749
 19717 ;;  temp            1   71[BANK0 ] unsigned char 
 19718 ;; Return value:  Size  Location     Type
 19719 ;;                  1    wreg      unsigned char 
 19720 ;; Registers used:
 19721 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19722 ;; Tracked objects:
 19723 ;;		On entry : 0/0
 19724 ;;		On exit  : 0/0
 19725 ;;		Unchanged: 0/0
 19726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19727 ;;      Params:         0       0       0       0       0       0       0       0       0
 19728 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19730 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19731 ;;Total ram usage:        6 bytes
 19732 ;; Hardware stack levels used:    1
 19733 ;; Hardware stack levels required when called:   12
 19734 ;; This function calls:
 19735 ;;		___fladd
 19736 ;;		___fldiv
 19737 ;;		___flmul
 19738 ;;		___fltol
 19739 ;;		___xxtofl
 19740 ;; This function is called by:
 19741 ;;		_moteHandler
 19742 ;;		_moteRunningProcess
 19743 ;;		_moteApp_testSensors
 19744 ;;		_test_adc
 19745 ;; This function uses a non-reentrant model
 19746 ;;
 19747                           
 19748                           	psect	text82
 19749  002F60                     __ptext82:
 19750                           	opt stack 0
 19751  002F60                     _ADC_TempConversion:
 19752                           	opt stack 16
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;incstack = 0
 19756                           ;ADC_TempConversion@tempRaw stored from wreg
 19757  002F60  0100               	movlb	0	; () banked
 19758  002F62  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 19759                           
 19760                           ;adc.c: 138: uint8_t temp;
 19761                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 19762  002F64  0ECD               	movlw	205
 19763  002F66  0100               	movlb	0	; () banked
 19764  002F68  6F78               	movwf	___flmul@a& (0+255),b
 19765  002F6A  0ECC               	movlw	204
 19766  002F6C  6F79               	movwf	(___flmul@a+1)& (0+255),b
 19767  002F6E  0E4C               	movlw	76
 19768  002F70  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 19769  002F72  0E40               	movlw	64
 19770  002F74  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 19771  002F76  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 19772  002F78  6F60               	movwf	___xxtofl@val& (0+255),b
 19773  002F7A  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 19774  002F7C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 19775  002F7E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 19776  002F80  0E00               	movlw	0
 19777  002F82  ECE3  F011         	call	___xxtofl
 19778  002F86  C060  F074         	movff	?___xxtofl,___flmul@b
 19779  002F8A  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 19780  002F8E  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 19781  002F92  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 19782  002F96  EC50  F00A         	call	___flmul	;wreg free
 19783  002F9A  C074  F08D         	movff	?___flmul,___fldiv@b
 19784  002F9E  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 19785  002FA2  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 19786  002FA6  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 19787  002FAA  0E00               	movlw	0
 19788  002FAC  0100               	movlb	0	; () banked
 19789  002FAE  6F91               	movwf	___fldiv@a& (0+255),b
 19790  002FB0  0E00               	movlw	0
 19791  002FB2  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 19792  002FB4  0E80               	movlw	128
 19793  002FB6  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 19794  002FB8  0E44               	movlw	68
 19795  002FBA  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 19796  002FBC  EC98  F00D         	call	___fldiv	;wreg free
 19797  002FC0  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 19798  002FC4  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 19799  002FC8  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 19800  002FCC  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 19801                           
 19802                           ;adc.c: 141: val = ((val - 0.5)*100);
 19803  002FD0  0E00               	movlw	0
 19804  002FD2  0100               	movlb	0	; () banked
 19805  002FD4  6F64               	movwf	___fladd@a& (0+255),b
 19806  002FD6  0E00               	movlw	0
 19807  002FD8  6F65               	movwf	(___fladd@a+1)& (0+255),b
 19808  002FDA  0E00               	movlw	0
 19809  002FDC  6F66               	movwf	(___fladd@a+2)& (0+255),b
 19810  002FDE  0EBF               	movlw	191
 19811  002FE0  6F67               	movwf	(___fladd@a+3)& (0+255),b
 19812  002FE2  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 19813  002FE6  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 19814  002FEA  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 19815  002FEE  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 19816  002FF2  ECF9  F00B         	call	___fladd	;wreg free
 19817  002FF6  C060  F074         	movff	?___fladd,___flmul@b
 19818  002FFA  C061  F075         	movff	?___fladd+1,___flmul@b+1
 19819  002FFE  C062  F076         	movff	?___fladd+2,___flmul@b+2
 19820  003002  C063  F077         	movff	?___fladd+3,___flmul@b+3
 19821  003006  0E00               	movlw	0
 19822  003008  0100               	movlb	0	; () banked
 19823  00300A  6F78               	movwf	___flmul@a& (0+255),b
 19824  00300C  0E00               	movlw	0
 19825  00300E  6F79               	movwf	(___flmul@a+1)& (0+255),b
 19826  003010  0EC8               	movlw	200
 19827  003012  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 19828  003014  0E42               	movlw	66
 19829  003016  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 19830  003018  EC50  F00A         	call	___flmul	;wreg free
 19831  00301C  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 19832  003020  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 19833  003024  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 19834  003028  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 19835                           
 19836                           ;adc.c: 142: temp = (uint8_t) val;
 19837  00302C  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 19838  003030  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 19839  003034  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 19840  003038  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 19841  00303C  ECCC  F01A         	call	___fltol	;wreg free
 19842  003040  0100               	movlb	0	; () banked
 19843  003042  5160               	movf	?___fltol& (0+255),w,b
 19844  003044  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;adc.c: 144: return temp;
 19848  003046  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 19849  003048  0012               	return	
 19850  00304A                     __end_of_ADC_TempConversion:
 19851                           	opt stack 0
 19852                           tblptru	equ	0xFF8
 19853                           tblptrh	equ	0xFF7
 19854                           tblptrl	equ	0xFF6
 19855                           tablat	equ	0xFF5
 19856                           prodh	equ	0xFF4
 19857                           prodl	equ	0xFF3
 19858                           intcon	equ	0xFF2
 19859                           intcon3	equ	0xFF0
 19860                           indf0	equ	0xFEF
 19861                           postinc0	equ	0xFEE
 19862                           fsr0h	equ	0xFEA
 19863                           fsr0l	equ	0xFE9
 19864                           wreg	equ	0xFE8
 19865                           indf1	equ	0xFE7
 19866                           postdec1	equ	0xFE5
 19867                           fsr1h	equ	0xFE2
 19868                           fsr1l	equ	0xFE1
 19869                           indf2	equ	0xFDF
 19870                           postinc2	equ	0xFDE
 19871                           postdec2	equ	0xFDD
 19872                           plusw2	equ	0xFDB
 19873                           fsr2h	equ	0xFDA
 19874                           fsr2l	equ	0xFD9
 19875                           status	equ	0xFD8
 19876                           
 19877 ;; *************** function ___xxtofl *****************
 19878 ;; Defined at:
 19879 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;  sign            1    wreg     unsigned char 
 19882 ;;  val             4    0[BANK0 ] long 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  sign            1    8[BANK0 ] unsigned char 
 19885 ;;  arg             4   10[BANK0 ] unsigned long 
 19886 ;;  exp             1    9[BANK0 ] unsigned char 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  4    0[BANK0 ] unsigned char 
 19889 ;; Registers used:
 19890 ;;		wreg, status,2, status,0
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19896 ;;      Params:         0       4       0       0       0       0       0       0       0
 19897 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19898 ;;      Temps:          0       4       0       0       0       0       0       0       0
 19899 ;;      Totals:         0      14       0       0       0       0       0       0       0
 19900 ;;Total ram usage:       14 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   11
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_ADC_TempConversion
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text83
 19911  0023C6                     __ptext83:
 19912                           	opt stack 0
 19913  0023C6                     ___xxtofl:
 19914                           	opt stack 16
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;incstack = 0
 19918                           ;___xxtofl@sign stored from wreg
 19919  0023C6  0100               	movlb	0	; () banked
 19920  0023C8  6F68               	movwf	___xxtofl@sign& (0+255),b
 19921  0023CA  0100               	movlb	0	; () banked
 19922  0023CC  5168               	movf	___xxtofl@sign& (0+255),w,b
 19923  0023CE  A4D8               	btfss	status,2,c
 19924                           
 19925                           ; BSR set to: 0
 19926  0023D0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19927  0023D2  D01A               	goto	l2676
 19928                           
 19929                           ; BSR set to: 0
 19930  0023D4  C060  F064         	movff	___xxtofl@val,??___xxtofl
 19931  0023D8  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 19932  0023DC  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 19933  0023E0  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 19934  0023E4  1F64               	comf	??___xxtofl& (0+255),f,b
 19935  0023E6  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 19936  0023E8  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 19937  0023EA  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 19938  0023EC  2B64               	incf	??___xxtofl& (0+255),f,b
 19939  0023EE  0E00               	movlw	0
 19940  0023F0  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 19941  0023F2  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 19942  0023F4  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 19943  0023F6  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 19944  0023FA  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 19945  0023FE  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 19946  002402  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 19947  002406  D008               	goto	l2677
 19948  002408                     l2676:
 19949                           
 19950                           ; BSR set to: 0
 19951  002408  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 19952  00240C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19953  002410  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19954  002414  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19955  002418                     l2677:
 19956                           
 19957                           ; BSR set to: 0
 19958                           
 19959                           ; BSR set to: 0
 19960  002418  5160               	movf	___xxtofl@val& (0+255),w,b
 19961  00241A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 19962  00241C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 19963  00241E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 19964  002420  A4D8               	btfss	status,2,c
 19965  002422  D009               	goto	l2678
 19966                           
 19967                           ; BSR set to: 0
 19968  002424  0E00               	movlw	0
 19969  002426  6F60               	movwf	?___xxtofl& (0+255),b
 19970  002428  0E00               	movlw	0
 19971  00242A  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 19972  00242C  0E00               	movlw	0
 19973  00242E  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 19974  002430  0E00               	movlw	0
 19975  002432  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 19976                           
 19977                           ; BSR set to: 0
 19978  002434  0012               	return	
 19979  002436                     l2678:
 19980                           
 19981                           ; BSR set to: 0
 19982                           
 19983                           ; BSR set to: 0
 19984  002436  0E96               	movlw	150
 19985  002438  6F69               	movwf	___xxtofl@exp& (0+255),b
 19986  00243A  D006               	goto	l2680
 19987  00243C                     
 19988                           ; BSR set to: 0
 19989                           
 19990                           ; BSR set to: 0
 19991  00243C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 19992  00243E  90D8               	bcf	status,0,c
 19993  002440  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19994  002442  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19995  002444  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19996  002446  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 19997  002448                     l2680:
 19998                           
 19999                           ; BSR set to: 0
 20000                           
 20001                           ; BSR set to: 0
 20002  002448  0E00               	movlw	0
 20003  00244A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 20004  00244C  6F64               	movwf	??___xxtofl& (0+255),b
 20005  00244E  0E00               	movlw	0
 20006  002450  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20007  002452  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 20008  002454  0E00               	movlw	0
 20009  002456  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20010  002458  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 20011  00245A  0EFE               	movlw	254
 20012  00245C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20013  00245E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 20014  002460  5164               	movf	??___xxtofl& (0+255),w,b
 20015  002462  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20016  002464  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20017  002466  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20018  002468  B4D8               	btfsc	status,2,c
 20019  00246A  D00D               	goto	l2683
 20020  00246C  D7E7               	goto	l2681
 20021  00246E                     
 20022                           ; BSR set to: 0
 20023                           
 20024                           ; BSR set to: 0
 20025  00246E  2B69               	incf	___xxtofl@exp& (0+255),f,b
 20026                           
 20027                           ; BSR set to: 0
 20028  002470  0E01               	movlw	1
 20029  002472  276A               	addwf	___xxtofl@arg& (0+255),f,b
 20030  002474  0E00               	movlw	0
 20031  002476  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 20032  002478  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 20033  00247A  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 20034                           
 20035                           ; BSR set to: 0
 20036  00247C  90D8               	bcf	status,0,c
 20037  00247E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 20038  002480  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 20039  002482  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 20040  002484  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 20041  002486                     l2683:
 20042                           
 20043                           ; BSR set to: 0
 20044  002486  0E00               	movlw	0
 20045  002488  156A               	andwf	___xxtofl@arg& (0+255),w,b
 20046  00248A  6F64               	movwf	??___xxtofl& (0+255),b
 20047  00248C  0E00               	movlw	0
 20048  00248E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20049  002490  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 20050  002492  0E00               	movlw	0
 20051  002494  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20052  002496  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 20053  002498  0EFF               	movlw	255
 20054  00249A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20055  00249C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 20056  00249E  5164               	movf	??___xxtofl& (0+255),w,b
 20057  0024A0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20058  0024A2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20059  0024A4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20060  0024A6  B4D8               	btfsc	status,2,c
 20061  0024A8  D007               	goto	l2686
 20062  0024AA  D7E1               	goto	l2684
 20063  0024AC                     
 20064                           ; BSR set to: 0
 20065                           
 20066                           ; BSR set to: 0
 20067  0024AC  0769               	decf	___xxtofl@exp& (0+255),f,b
 20068  0024AE  90D8               	bcf	status,0,c
 20069  0024B0  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 20070  0024B2  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 20071  0024B4  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 20072  0024B6  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 20073  0024B8                     l2686:
 20074                           
 20075                           ; BSR set to: 0
 20076                           
 20077                           ; BSR set to: 0
 20078  0024B8  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 20079  0024BA  D003               	goto	u7560
 20080                           
 20081                           ; BSR set to: 0
 20082  0024BC  0E02               	movlw	2
 20083  0024BE  6169               	cpfslt	___xxtofl@exp& (0+255),b
 20084  0024C0  D7F5               	goto	l2687
 20085  0024C2                     u7560:
 20086                           
 20087                           ; BSR set to: 0
 20088                           
 20089                           ; BSR set to: 0
 20090  0024C2  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 20091  0024C4  D008               	goto	l2691
 20092                           
 20093                           ; BSR set to: 0
 20094  0024C6  0EFF               	movlw	255
 20095  0024C8  176A               	andwf	___xxtofl@arg& (0+255),f,b
 20096  0024CA  0EFF               	movlw	255
 20097  0024CC  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 20098  0024CE  0E7F               	movlw	127
 20099  0024D0  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 20100  0024D2  0EFF               	movlw	255
 20101  0024D4  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 20102  0024D6                     l2691:
 20103                           
 20104                           ; BSR set to: 0
 20105  0024D6  90D8               	bcf	status,0,c
 20106  0024D8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 20107  0024DA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 20108  0024DE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 20109  0024E0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 20110  0024E2  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 20111  0024E4  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 20112  0024E8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 20113  0024EA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 20114  0024EC  6B64               	clrf	??___xxtofl& (0+255),b
 20115  0024EE  5164               	movf	??___xxtofl& (0+255),w,b
 20116  0024F0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 20117  0024F2  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 20118  0024F4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 20119  0024F6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 20120  0024F8  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 20121  0024FA  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 20122  0024FC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 20123                           
 20124                           ; BSR set to: 0
 20125  0024FE  5168               	movf	___xxtofl@sign& (0+255),w,b
 20126  002500  A4D8               	btfss	status,2,c
 20127                           
 20128                           ; BSR set to: 0
 20129  002502  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 20130  002504  D001               	goto	l2692
 20131                           
 20132                           ; BSR set to: 0
 20133  002506  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 20134  002508                     l2692:
 20135                           
 20136                           ; BSR set to: 0
 20137                           
 20138                           ; BSR set to: 0
 20139  002508  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 20140  00250C  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 20141  002510  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 20142  002514  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 20143  002518  0012               	return	
 20144  00251A                     __end_of___xxtofl:
 20145                           	opt stack 0
 20146                           tblptru	equ	0xFF8
 20147                           tblptrh	equ	0xFF7
 20148                           tblptrl	equ	0xFF6
 20149                           tablat	equ	0xFF5
 20150                           prodh	equ	0xFF4
 20151                           prodl	equ	0xFF3
 20152                           intcon	equ	0xFF2
 20153                           intcon3	equ	0xFF0
 20154                           indf0	equ	0xFEF
 20155                           postinc0	equ	0xFEE
 20156                           fsr0h	equ	0xFEA
 20157                           fsr0l	equ	0xFE9
 20158                           wreg	equ	0xFE8
 20159                           indf1	equ	0xFE7
 20160                           postdec1	equ	0xFE5
 20161                           fsr1h	equ	0xFE2
 20162                           fsr1l	equ	0xFE1
 20163                           indf2	equ	0xFDF
 20164                           postinc2	equ	0xFDE
 20165                           postdec2	equ	0xFDD
 20166                           plusw2	equ	0xFDB
 20167                           fsr2h	equ	0xFDA
 20168                           fsr2l	equ	0xFD9
 20169                           status	equ	0xFD8
 20170                           
 20171 ;; *************** function ___fltol *****************
 20172 ;; Defined at:
 20173 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 20174 ;; Parameters:    Size  Location     Type
 20175 ;;  f1              4    0[BANK0 ] unsigned char 
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;  exp1            1    9[BANK0 ] unsigned char 
 20178 ;;  sign1           1    8[BANK0 ] unsigned char 
 20179 ;; Return value:  Size  Location     Type
 20180 ;;                  4    0[BANK0 ] long 
 20181 ;; Registers used:
 20182 ;;		wreg, status,2, status,0
 20183 ;; Tracked objects:
 20184 ;;		On entry : 0/0
 20185 ;;		On exit  : 0/0
 20186 ;;		Unchanged: 0/0
 20187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20188 ;;      Params:         0       4       0       0       0       0       0       0       0
 20189 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20190 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20191 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20192 ;;Total ram usage:       10 bytes
 20193 ;; Hardware stack levels used:    1
 20194 ;; Hardware stack levels required when called:   11
 20195 ;; This function calls:
 20196 ;;		Nothing
 20197 ;; This function is called by:
 20198 ;;		_ADC_TempConversion
 20199 ;; This function uses a non-reentrant model
 20200 ;;
 20201                           
 20202                           	psect	text84
 20203  003598                     __ptext84:
 20204                           	opt stack 0
 20205  003598                     ___fltol:
 20206                           	opt stack 16
 20207                           
 20208                           ; BSR set to: 0
 20209                           ;incstack = 0
 20210  003598  0100               	movlb	0	; () banked
 20211  00359A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 20212  00359C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 20213  00359E  6F69               	movwf	___fltol@exp1& (0+255),b
 20214  0035A0  5169               	movf	___fltol@exp1& (0+255),w,b
 20215  0035A2  A4D8               	btfss	status,2,c
 20216  0035A4  D009               	goto	l2329
 20217                           
 20218                           ; BSR set to: 0
 20219  0035A6  0E00               	movlw	0
 20220  0035A8  6F60               	movwf	?___fltol& (0+255),b
 20221  0035AA  0E00               	movlw	0
 20222  0035AC  6F61               	movwf	(?___fltol+1)& (0+255),b
 20223  0035AE  0E00               	movlw	0
 20224  0035B0  6F62               	movwf	(?___fltol+2)& (0+255),b
 20225  0035B2  0E00               	movlw	0
 20226  0035B4  6F63               	movwf	(?___fltol+3)& (0+255),b
 20227                           
 20228                           ; BSR set to: 0
 20229  0035B6  0012               	return	
 20230  0035B8                     l2329:
 20231                           
 20232                           ; BSR set to: 0
 20233                           
 20234                           ; BSR set to: 0
 20235  0035B8  C060  F064         	movff	___fltol@f1,??___fltol
 20236  0035BC  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 20237  0035C0  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 20238  0035C4  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 20239  0035C8  0E20               	movlw	32
 20240  0035CA  D005               	goto	u7410
 20241  0035CC                     u7415:
 20242  0035CC  90D8               	bcf	status,0,c
 20243  0035CE  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 20244  0035D0  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 20245  0035D2  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 20246  0035D4  3364               	rrcf	??___fltol& (0+255),f,b
 20247  0035D6                     u7410:
 20248  0035D6  2EE8               	decfsz	wreg,f,c
 20249  0035D8  D7F9               	goto	u7415
 20250  0035DA  5164               	movf	??___fltol& (0+255),w,b
 20251  0035DC  6F68               	movwf	___fltol@sign1& (0+255),b
 20252                           
 20253                           ; BSR set to: 0
 20254  0035DE  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 20255                           
 20256                           ; BSR set to: 0
 20257  0035E0  0EFF               	movlw	255
 20258  0035E2  1760               	andwf	___fltol@f1& (0+255),f,b
 20259  0035E4  0EFF               	movlw	255
 20260  0035E6  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 20261  0035E8  0EFF               	movlw	255
 20262  0035EA  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 20263  0035EC  0E00               	movlw	0
 20264  0035EE  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 20265                           
 20266                           ; BSR set to: 0
 20267  0035F0  0E96               	movlw	150
 20268  0035F2  5F69               	subwf	___fltol@exp1& (0+255),f,b
 20269                           
 20270                           ; BSR set to: 0
 20271  0035F4  AF69               	btfss	___fltol@exp1& (0+255),7,b
 20272  0035F6  D016               	goto	l2331
 20273                           
 20274                           ; BSR set to: 0
 20275  0035F8  5169               	movf	___fltol@exp1& (0+255),w,b
 20276  0035FA  0A80               	xorlw	128
 20277  0035FC  0F97               	addlw	151
 20278  0035FE  B0D8               	btfsc	status,0,c
 20279  003600  D009               	goto	l2332
 20280                           
 20281                           ; BSR set to: 0
 20282  003602  0E00               	movlw	0
 20283  003604  6F60               	movwf	?___fltol& (0+255),b
 20284  003606  0E00               	movlw	0
 20285  003608  6F61               	movwf	(?___fltol+1)& (0+255),b
 20286  00360A  0E00               	movlw	0
 20287  00360C  6F62               	movwf	(?___fltol+2)& (0+255),b
 20288  00360E  0E00               	movlw	0
 20289  003610  6F63               	movwf	(?___fltol+3)& (0+255),b
 20290                           
 20291                           ; BSR set to: 0
 20292  003612  0012               	return	
 20293  003614                     l2332:
 20294                           
 20295                           ; BSR set to: 0
 20296                           
 20297                           ; BSR set to: 0
 20298                           
 20299                           ; BSR set to: 0
 20300  003614  90D8               	bcf	status,0,c
 20301  003616  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 20302  003618  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 20303  00361A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 20304  00361C  3360               	rrcf	___fltol@f1& (0+255),f,b
 20305                           
 20306                           ; BSR set to: 0
 20307  00361E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 20308  003620  D7F9               	goto	l2332
 20309                           
 20310                           ; BSR set to: 0
 20311  003622  D015               	goto	u7450
 20312  003624                     l2331:
 20313                           
 20314                           ; BSR set to: 0
 20315                           
 20316                           ; BSR set to: 0
 20317  003624  0E1F               	movlw	31
 20318  003626  6569               	cpfsgt	___fltol@exp1& (0+255),b
 20319  003628  D00F               	goto	l2337
 20320                           
 20321                           ; BSR set to: 0
 20322  00362A  0E00               	movlw	0
 20323  00362C  6F60               	movwf	?___fltol& (0+255),b
 20324  00362E  0E00               	movlw	0
 20325  003630  6F61               	movwf	(?___fltol+1)& (0+255),b
 20326  003632  0E00               	movlw	0
 20327  003634  6F62               	movwf	(?___fltol+2)& (0+255),b
 20328  003636  0E00               	movlw	0
 20329  003638  6F63               	movwf	(?___fltol+3)& (0+255),b
 20330                           
 20331                           ; BSR set to: 0
 20332  00363A  0012               	return	
 20333  00363C                     
 20334                           ; BSR set to: 0
 20335                           
 20336                           ; BSR set to: 0
 20337  00363C  90D8               	bcf	status,0,c
 20338  00363E  3760               	rlcf	___fltol@f1& (0+255),f,b
 20339  003640  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 20340  003642  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 20341  003644  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 20342  003646  0769               	decf	___fltol@exp1& (0+255),f,b
 20343  003648                     l2337:
 20344                           
 20345                           ; BSR set to: 0
 20346                           
 20347                           ; BSR set to: 0
 20348  003648  5169               	movf	___fltol@exp1& (0+255),w,b
 20349  00364A  A4D8               	btfss	status,2,c
 20350  00364C  D7F7               	goto	l2338
 20351  00364E                     u7450:
 20352                           
 20353                           ; BSR set to: 0
 20354                           
 20355                           ; BSR set to: 0
 20356                           
 20357                           ; BSR set to: 0
 20358  00364E  5168               	movf	___fltol@sign1& (0+255),w,b
 20359  003650  B4D8               	btfsc	status,2,c
 20360  003652  D008               	goto	l2340
 20361                           
 20362                           ; BSR set to: 0
 20363  003654  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 20364  003656  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 20365  003658  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 20366  00365A  6D60               	negf	___fltol@f1& (0+255),b
 20367  00365C  0E00               	movlw	0
 20368  00365E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 20369  003660  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 20370  003662  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 20371  003664                     l2340:
 20372                           
 20373                           ; BSR set to: 0
 20374                           
 20375                           ; BSR set to: 0
 20376  003664  C060  F060         	movff	___fltol@f1,?___fltol
 20377  003668  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 20378  00366C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 20379  003670  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 20380  003674  0012               	return	
 20381  003676                     __end_of___fltol:
 20382                           	opt stack 0
 20383                           tblptru	equ	0xFF8
 20384                           tblptrh	equ	0xFF7
 20385                           tblptrl	equ	0xFF6
 20386                           tablat	equ	0xFF5
 20387                           prodh	equ	0xFF4
 20388                           prodl	equ	0xFF3
 20389                           intcon	equ	0xFF2
 20390                           intcon3	equ	0xFF0
 20391                           indf0	equ	0xFEF
 20392                           postinc0	equ	0xFEE
 20393                           fsr0h	equ	0xFEA
 20394                           fsr0l	equ	0xFE9
 20395                           wreg	equ	0xFE8
 20396                           indf1	equ	0xFE7
 20397                           postdec1	equ	0xFE5
 20398                           fsr1h	equ	0xFE2
 20399                           fsr1l	equ	0xFE1
 20400                           indf2	equ	0xFDF
 20401                           postinc2	equ	0xFDE
 20402                           postdec2	equ	0xFDD
 20403                           plusw2	equ	0xFDB
 20404                           fsr2h	equ	0xFDA
 20405                           fsr2l	equ	0xFD9
 20406                           status	equ	0xFD8
 20407                           
 20408 ;; *************** function ___flmul *****************
 20409 ;; Defined at:
 20410 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 20411 ;; Parameters:    Size  Location     Type
 20412 ;;  b               4   20[BANK0 ] long 
 20413 ;;  a               4   24[BANK0 ] long 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;  prod            4   39[BANK0 ] struct .
 20416 ;;  grs             4   33[BANK0 ] unsigned long 
 20417 ;;  temp            2   43[BANK0 ] struct .
 20418 ;;  bexp            1   38[BANK0 ] unsigned char 
 20419 ;;  aexp            1   37[BANK0 ] unsigned char 
 20420 ;;  sign            1   32[BANK0 ] unsigned char 
 20421 ;; Return value:  Size  Location     Type
 20422 ;;                  4   20[BANK0 ] unsigned char 
 20423 ;; Registers used:
 20424 ;;		wreg, status,2, status,0, prodl, prodh
 20425 ;; Tracked objects:
 20426 ;;		On entry : 0/0
 20427 ;;		On exit  : 0/0
 20428 ;;		Unchanged: 0/0
 20429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20430 ;;      Params:         0       8       0       0       0       0       0       0       0
 20431 ;;      Locals:         0      13       0       0       0       0       0       0       0
 20432 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20433 ;;      Totals:         0      25       0       0       0       0       0       0       0
 20434 ;;Total ram usage:       25 bytes
 20435 ;; Hardware stack levels used:    1
 20436 ;; Hardware stack levels required when called:   11
 20437 ;; This function calls:
 20438 ;;		Nothing
 20439 ;; This function is called by:
 20440 ;;		_ADC_TempConversion
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text85
 20445  0014A0                     __ptext85:
 20446                           	opt stack 0
 20447  0014A0                     ___flmul:
 20448                           	opt stack 16
 20449                           
 20450                           ; BSR set to: 0
 20451                           ;incstack = 0
 20452  0014A0  0100               	movlb	0	; () banked
 20453  0014A2  5177               	movf	(___flmul@b+3)& (0+255),w,b
 20454  0014A4  0B80               	andlw	128
 20455  0014A6  6F80               	movwf	___flmul@sign& (0+255),b
 20456  0014A8  5177               	movf	(___flmul@b+3)& (0+255),w,b
 20457  0014AA  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 20458  0014AC  6F86               	movwf	___flmul@bexp& (0+255),b
 20459                           
 20460                           ; BSR set to: 0
 20461  0014AE  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 20462                           
 20463                           ; BSR set to: 0
 20464  0014B0  8186               	bsf	___flmul@bexp& (0+255),0,b
 20465                           
 20466                           ; BSR set to: 0
 20467                           
 20468                           ; BSR set to: 0
 20469  0014B2  5186               	movf	___flmul@bexp& (0+255),w,b
 20470  0014B4  B4D8               	btfsc	status,2,c
 20471  0014B6  D00D               	goto	l2631
 20472                           
 20473                           ; BSR set to: 0
 20474  0014B8  2986               	incf	___flmul@bexp& (0+255),w,b
 20475  0014BA  A4D8               	btfss	status,2,c
 20476  0014BC  D008               	goto	l2632
 20477                           
 20478                           ; BSR set to: 0
 20479  0014BE  0E00               	movlw	0
 20480  0014C0  6F74               	movwf	___flmul@b& (0+255),b
 20481  0014C2  0E00               	movlw	0
 20482  0014C4  6F75               	movwf	(___flmul@b+1)& (0+255),b
 20483  0014C6  0E00               	movlw	0
 20484  0014C8  6F76               	movwf	(___flmul@b+2)& (0+255),b
 20485  0014CA  0E00               	movlw	0
 20486  0014CC  6F77               	movwf	(___flmul@b+3)& (0+255),b
 20487  0014CE                     l2632:
 20488                           
 20489                           ; BSR set to: 0
 20490                           
 20491                           ; BSR set to: 0
 20492  0014CE  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 20493  0014D0  D008               	goto	l2633
 20494  0014D2                     l2631:
 20495                           
 20496                           ; BSR set to: 0
 20497                           
 20498                           ; BSR set to: 0
 20499  0014D2  0E00               	movlw	0
 20500  0014D4  6F74               	movwf	___flmul@b& (0+255),b
 20501  0014D6  0E00               	movlw	0
 20502  0014D8  6F75               	movwf	(___flmul@b+1)& (0+255),b
 20503  0014DA  0E00               	movlw	0
 20504  0014DC  6F76               	movwf	(___flmul@b+2)& (0+255),b
 20505  0014DE  0E00               	movlw	0
 20506  0014E0  6F77               	movwf	(___flmul@b+3)& (0+255),b
 20507  0014E2                     l2633:
 20508                           
 20509                           ; BSR set to: 0
 20510                           
 20511                           ; BSR set to: 0
 20512  0014E2  517B               	movf	(___flmul@a+3)& (0+255),w,b
 20513  0014E4  0B80               	andlw	128
 20514  0014E6  1B80               	xorwf	___flmul@sign& (0+255),f,b
 20515                           
 20516                           ; BSR set to: 0
 20517  0014E8  517B               	movf	(___flmul@a+3)& (0+255),w,b
 20518  0014EA  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 20519  0014EC  6F85               	movwf	___flmul@aexp& (0+255),b
 20520                           
 20521                           ; BSR set to: 0
 20522  0014EE  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 20523                           
 20524                           ; BSR set to: 0
 20525  0014F0  8185               	bsf	___flmul@aexp& (0+255),0,b
 20526                           
 20527                           ; BSR set to: 0
 20528                           
 20529                           ; BSR set to: 0
 20530  0014F2  5185               	movf	___flmul@aexp& (0+255),w,b
 20531  0014F4  B4D8               	btfsc	status,2,c
 20532  0014F6  D00D               	goto	l2635
 20533                           
 20534                           ; BSR set to: 0
 20535  0014F8  2985               	incf	___flmul@aexp& (0+255),w,b
 20536  0014FA  A4D8               	btfss	status,2,c
 20537  0014FC  D008               	goto	l2636
 20538                           
 20539                           ; BSR set to: 0
 20540  0014FE  0E00               	movlw	0
 20541  001500  6F78               	movwf	___flmul@a& (0+255),b
 20542  001502  0E00               	movlw	0
 20543  001504  6F79               	movwf	(___flmul@a+1)& (0+255),b
 20544  001506  0E00               	movlw	0
 20545  001508  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 20546  00150A  0E00               	movlw	0
 20547  00150C  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 20548  00150E                     l2636:
 20549                           
 20550                           ; BSR set to: 0
 20551                           
 20552                           ; BSR set to: 0
 20553  00150E  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 20554  001510  D008               	goto	l2637
 20555  001512                     l2635:
 20556                           
 20557                           ; BSR set to: 0
 20558                           
 20559                           ; BSR set to: 0
 20560  001512  0E00               	movlw	0
 20561  001514  6F78               	movwf	___flmul@a& (0+255),b
 20562  001516  0E00               	movlw	0
 20563  001518  6F79               	movwf	(___flmul@a+1)& (0+255),b
 20564  00151A  0E00               	movlw	0
 20565  00151C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 20566  00151E  0E00               	movlw	0
 20567  001520  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 20568  001522                     l2637:
 20569                           
 20570                           ; BSR set to: 0
 20571  001522  5185               	movf	___flmul@aexp& (0+255),w,b
 20572  001524  B4D8               	btfsc	status,2,c
 20573  001526  D003               	goto	u7220
 20574                           
 20575                           ; BSR set to: 0
 20576  001528  5186               	movf	___flmul@bexp& (0+255),w,b
 20577  00152A  A4D8               	btfss	status,2,c
 20578  00152C  D009               	goto	l2638
 20579  00152E                     u7220:
 20580                           
 20581                           ; BSR set to: 0
 20582                           
 20583                           ; BSR set to: 0
 20584  00152E  0E00               	movlw	0
 20585  001530  6F74               	movwf	?___flmul& (0+255),b
 20586  001532  0E00               	movlw	0
 20587  001534  6F75               	movwf	(?___flmul+1)& (0+255),b
 20588  001536  0E00               	movlw	0
 20589  001538  6F76               	movwf	(?___flmul+2)& (0+255),b
 20590  00153A  0E00               	movlw	0
 20591  00153C  6F77               	movwf	(?___flmul+3)& (0+255),b
 20592                           
 20593                           ; BSR set to: 0
 20594  00153E  0012               	return	
 20595  001540                     l2638:
 20596                           
 20597                           ; BSR set to: 0
 20598                           
 20599                           ; BSR set to: 0
 20600  001540  517A               	movf	(___flmul@a+2)& (0+255),w,b
 20601  001542  0374               	mulwf	___flmul@b& (0+255),b
 20602  001544  CFF3 F08B          	movff	prodl,___flmul@temp
 20603  001548  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20604                           
 20605                           ; BSR set to: 0
 20606  00154C  518B               	movf	___flmul@temp& (0+255),w,b
 20607  00154E  6F81               	movwf	___flmul@grs& (0+255),b
 20608  001550  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 20609  001552  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 20610  001554  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 20611                           
 20612                           ; BSR set to: 0
 20613  001556  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20614  001558  6F87               	movwf	___flmul@prod& (0+255),b
 20615  00155A  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 20616  00155C  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 20617  00155E  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 20618  001560  5179               	movf	(___flmul@a+1)& (0+255),w,b
 20619  001562  0375               	mulwf	(___flmul@b+1)& (0+255),b
 20620  001564  CFF3 F08B          	movff	prodl,___flmul@temp
 20621  001568  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20622                           
 20623                           ; BSR set to: 0
 20624  00156C  518B               	movf	___flmul@temp& (0+255),w,b
 20625  00156E  2781               	addwf	___flmul@grs& (0+255),f,b
 20626  001570  0E00               	movlw	0
 20627  001572  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20628  001574  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20629  001576  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20630                           
 20631                           ; BSR set to: 0
 20632  001578  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20633  00157A  2787               	addwf	___flmul@prod& (0+255),f,b
 20634  00157C  0E00               	movlw	0
 20635  00157E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20636  001580  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20637  001582  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20638  001584  5178               	movf	___flmul@a& (0+255),w,b
 20639  001586  0376               	mulwf	(___flmul@b+2)& (0+255),b
 20640  001588  CFF3 F08B          	movff	prodl,___flmul@temp
 20641  00158C  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20642                           
 20643                           ; BSR set to: 0
 20644  001590  518B               	movf	___flmul@temp& (0+255),w,b
 20645  001592  2781               	addwf	___flmul@grs& (0+255),f,b
 20646  001594  0E00               	movlw	0
 20647  001596  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20648  001598  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20649  00159A  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20650                           
 20651                           ; BSR set to: 0
 20652  00159C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20653  00159E  2787               	addwf	___flmul@prod& (0+255),f,b
 20654  0015A0  0E00               	movlw	0
 20655  0015A2  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20656  0015A4  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20657  0015A6  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20658                           
 20659                           ; BSR set to: 0
 20660  0015A8  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 20661  0015AC  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 20662  0015B0  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 20663  0015B4  6B81               	clrf	___flmul@grs& (0+255),b
 20664                           
 20665                           ; BSR set to: 0
 20666  0015B6  5178               	movf	___flmul@a& (0+255),w,b
 20667  0015B8  0375               	mulwf	(___flmul@b+1)& (0+255),b
 20668  0015BA  CFF3 F08B          	movff	prodl,___flmul@temp
 20669  0015BE  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20670                           
 20671                           ; BSR set to: 0
 20672  0015C2  518B               	movf	___flmul@temp& (0+255),w,b
 20673  0015C4  2781               	addwf	___flmul@grs& (0+255),f,b
 20674  0015C6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20675  0015C8  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20676  0015CA  0E00               	movlw	0
 20677  0015CC  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20678  0015CE  0E00               	movlw	0
 20679  0015D0  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20680                           
 20681                           ; BSR set to: 0
 20682  0015D2  5179               	movf	(___flmul@a+1)& (0+255),w,b
 20683  0015D4  0374               	mulwf	___flmul@b& (0+255),b
 20684  0015D6  CFF3 F08B          	movff	prodl,___flmul@temp
 20685  0015DA  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20686                           
 20687                           ; BSR set to: 0
 20688  0015DE  518B               	movf	___flmul@temp& (0+255),w,b
 20689  0015E0  2781               	addwf	___flmul@grs& (0+255),f,b
 20690  0015E2  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20691  0015E4  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20692  0015E6  0E00               	movlw	0
 20693  0015E8  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20694  0015EA  0E00               	movlw	0
 20695  0015EC  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20696                           
 20697                           ; BSR set to: 0
 20698  0015EE  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 20699  0015F2  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 20700  0015F6  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 20701  0015FA  6B81               	clrf	___flmul@grs& (0+255),b
 20702  0015FC  5178               	movf	___flmul@a& (0+255),w,b
 20703  0015FE  0374               	mulwf	___flmul@b& (0+255),b
 20704  001600  CFF3 F08B          	movff	prodl,___flmul@temp
 20705  001604  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20706                           
 20707                           ; BSR set to: 0
 20708  001608  518B               	movf	___flmul@temp& (0+255),w,b
 20709  00160A  2781               	addwf	___flmul@grs& (0+255),f,b
 20710  00160C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20711  00160E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20712  001610  0E00               	movlw	0
 20713  001612  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20714  001614  0E00               	movlw	0
 20715  001616  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20716                           
 20717                           ; BSR set to: 0
 20718  001618  517A               	movf	(___flmul@a+2)& (0+255),w,b
 20719  00161A  0375               	mulwf	(___flmul@b+1)& (0+255),b
 20720  00161C  CFF3 F08B          	movff	prodl,___flmul@temp
 20721  001620  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20722  001624  518B               	movf	___flmul@temp& (0+255),w,b
 20723  001626  2787               	addwf	___flmul@prod& (0+255),f,b
 20724  001628  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20725  00162A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20726  00162C  0E00               	movlw	0
 20727  00162E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20728  001630  0E00               	movlw	0
 20729  001632  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20730                           
 20731                           ; BSR set to: 0
 20732  001634  5179               	movf	(___flmul@a+1)& (0+255),w,b
 20733  001636  0376               	mulwf	(___flmul@b+2)& (0+255),b
 20734  001638  CFF3 F08B          	movff	prodl,___flmul@temp
 20735  00163C  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20736                           
 20737                           ; BSR set to: 0
 20738  001640  518B               	movf	___flmul@temp& (0+255),w,b
 20739  001642  2787               	addwf	___flmul@prod& (0+255),f,b
 20740  001644  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20741  001646  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20742  001648  0E00               	movlw	0
 20743  00164A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20744  00164C  0E00               	movlw	0
 20745  00164E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20746  001650  517A               	movf	(___flmul@a+2)& (0+255),w,b
 20747  001652  0376               	mulwf	(___flmul@b+2)& (0+255),b
 20748  001654  CFF3 F08B          	movff	prodl,___flmul@temp
 20749  001658  CFF4 F08C          	movff	prodh,___flmul@temp+1
 20750                           
 20751                           ; BSR set to: 0
 20752  00165C  518B               	movf	___flmul@temp& (0+255),w,b
 20753  00165E  6F7C               	movwf	??___flmul& (0+255),b
 20754  001660  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20755  001662  6F7D               	movwf	(??___flmul+1)& (0+255),b
 20756  001664  6B7E               	clrf	(??___flmul+2)& (0+255),b
 20757  001666  6B7F               	clrf	(??___flmul+3)& (0+255),b
 20758  001668  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 20759  00166C  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 20760  001670  C07C  F07D         	movff	??___flmul,??___flmul+1
 20761  001674  6B7C               	clrf	??___flmul& (0+255),b
 20762  001676  517C               	movf	??___flmul& (0+255),w,b
 20763  001678  2787               	addwf	___flmul@prod& (0+255),f,b
 20764  00167A  517D               	movf	(??___flmul+1)& (0+255),w,b
 20765  00167C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20766  00167E  517E               	movf	(??___flmul+2)& (0+255),w,b
 20767  001680  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20768  001682  517F               	movf	(??___flmul+3)& (0+255),w,b
 20769  001684  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20770                           
 20771                           ; BSR set to: 0
 20772  001686  C081  F07C         	movff	___flmul@grs,??___flmul
 20773  00168A  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 20774  00168E  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 20775  001692  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 20776  001696  0E19               	movlw	25
 20777  001698  D005               	goto	u7230
 20778  00169A                     u7235:
 20779  00169A  90D8               	bcf	status,0,c
 20780  00169C  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 20781  00169E  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 20782  0016A0  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 20783  0016A2  337C               	rrcf	??___flmul& (0+255),f,b
 20784  0016A4                     u7230:
 20785  0016A4  2EE8               	decfsz	wreg,f,c
 20786  0016A6  D7F9               	goto	u7235
 20787  0016A8  517C               	movf	??___flmul& (0+255),w,b
 20788  0016AA  2787               	addwf	___flmul@prod& (0+255),f,b
 20789  0016AC  517D               	movf	(??___flmul+1)& (0+255),w,b
 20790  0016AE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20791  0016B0  517E               	movf	(??___flmul+2)& (0+255),w,b
 20792  0016B2  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20793  0016B4  517F               	movf	(??___flmul+3)& (0+255),w,b
 20794  0016B6  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20795                           
 20796                           ; BSR set to: 0
 20797  0016B8  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 20798  0016BC  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 20799  0016C0  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 20800  0016C4  6B81               	clrf	___flmul@grs& (0+255),b
 20801                           
 20802                           ; BSR set to: 0
 20803  0016C6  5185               	movf	___flmul@aexp& (0+255),w,b
 20804  0016C8  C086  F07C         	movff	___flmul@bexp,??___flmul
 20805  0016CC  6B7D               	clrf	(??___flmul+1)& (0+255),b
 20806  0016CE  277C               	addwf	??___flmul& (0+255),f,b
 20807  0016D0  0E00               	movlw	0
 20808  0016D2  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 20809  0016D4  0E82               	movlw	130
 20810  0016D6  257C               	addwf	??___flmul& (0+255),w,b
 20811  0016D8  6F8B               	movwf	___flmul@temp& (0+255),b
 20812  0016DA  0EFF               	movlw	255
 20813  0016DC  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 20814  0016DE  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 20815  0016E0  D00F               	goto	l2642
 20816  0016E2                     
 20817                           ; BSR set to: 0
 20818                           
 20819                           ; BSR set to: 0
 20820  0016E2  90D8               	bcf	status,0,c
 20821  0016E4  3787               	rlcf	___flmul@prod& (0+255),f,b
 20822  0016E6  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 20823  0016E8  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 20824  0016EA  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 20825                           
 20826                           ; BSR set to: 0
 20827  0016EC  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 20828                           
 20829                           ; BSR set to: 0
 20830  0016EE  8187               	bsf	___flmul@prod& (0+255),0,b
 20831                           
 20832                           ; BSR set to: 0
 20833  0016F0  90D8               	bcf	status,0,c
 20834  0016F2  3781               	rlcf	___flmul@grs& (0+255),f,b
 20835  0016F4  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 20836  0016F6  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 20837  0016F8  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 20838  0016FA  078B               	decf	___flmul@temp& (0+255),f,b
 20839  0016FC  A0D8               	btfss	status,0,c
 20840  0016FE  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 20841  001700                     l2642:
 20842                           
 20843                           ; BSR set to: 0
 20844                           
 20845                           ; BSR set to: 0
 20846  001700  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 20847  001702  D7EF               	goto	l2643
 20848                           
 20849                           ; BSR set to: 0
 20850                           
 20851                           ; BSR set to: 0
 20852  001704  0E00               	movlw	0
 20853  001706  6F85               	movwf	___flmul@aexp& (0+255),b
 20854                           
 20855                           ; BSR set to: 0
 20856  001708  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 20857  00170A  D016               	goto	l2649
 20858                           
 20859                           ; BSR set to: 0
 20860  00170C  0EFF               	movlw	255
 20861  00170E  1581               	andwf	___flmul@grs& (0+255),w,b
 20862  001710  6F7C               	movwf	??___flmul& (0+255),b
 20863  001712  0EFF               	movlw	255
 20864  001714  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 20865  001716  6F7D               	movwf	(??___flmul+1)& (0+255),b
 20866  001718  0EFF               	movlw	255
 20867  00171A  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 20868  00171C  6F7E               	movwf	(??___flmul+2)& (0+255),b
 20869  00171E  0E7F               	movlw	127
 20870  001720  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 20871  001722  6F7F               	movwf	(??___flmul+3)& (0+255),b
 20872  001724  517C               	movf	??___flmul& (0+255),w,b
 20873  001726  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 20874  001728  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 20875  00172A  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 20876  00172C  A4D8               	btfss	status,2,c
 20877  00172E  D002               	goto	u7280
 20878                           
 20879                           ; BSR set to: 0
 20880                           
 20881                           ; BSR set to: 0
 20882  001730  A187               	btfss	___flmul@prod& (0+255),0,b
 20883  001732  D002               	goto	l2649
 20884  001734                     u7280:
 20885                           
 20886                           ; BSR set to: 0
 20887  001734  0E01               	movlw	1
 20888  001736  6F85               	movwf	___flmul@aexp& (0+255),b
 20889  001738                     l2649:
 20890                           
 20891                           ; BSR set to: 0
 20892                           
 20893                           ; BSR set to: 0
 20894                           
 20895                           ; BSR set to: 0
 20896  001738  5185               	movf	___flmul@aexp& (0+255),w,b
 20897  00173A  B4D8               	btfsc	status,2,c
 20898  00173C  D01F               	goto	l2651
 20899                           
 20900                           ; BSR set to: 0
 20901  00173E  0E01               	movlw	1
 20902  001740  2787               	addwf	___flmul@prod& (0+255),f,b
 20903  001742  0E00               	movlw	0
 20904  001744  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20905  001746  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20906  001748  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20907                           
 20908                           ; BSR set to: 0
 20909  00174A  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 20910  00174C  D017               	goto	l2651
 20911                           
 20912                           ; BSR set to: 0
 20913  00174E  C087  F07C         	movff	___flmul@prod,??___flmul
 20914  001752  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 20915  001756  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 20916  00175A  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 20917  00175E  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 20918  001760  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 20919  001762  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 20920  001764  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 20921  001766  337C               	rrcf	??___flmul& (0+255),f,b
 20922  001768  C07C  F087         	movff	??___flmul,___flmul@prod
 20923  00176C  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 20924  001770  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 20925  001774  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 20926                           
 20927                           ; BSR set to: 0
 20928  001778  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 20929  00177A  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 20930  00177C                     l2651:
 20931                           
 20932                           ; BSR set to: 0
 20933                           
 20934                           ; BSR set to: 0
 20935                           
 20936                           ; BSR set to: 0
 20937  00177C  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 20938  00177E  D00D               	goto	l2652
 20939  001780  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20940  001782  E103               	bnz	u7310
 20941  001784  298B               	incf	___flmul@temp& (0+255),w,b
 20942  001786  A0D8               	btfss	status,0,c
 20943  001788  D008               	goto	l2652
 20944  00178A                     u7310:
 20945                           
 20946                           ; BSR set to: 0
 20947  00178A  0E00               	movlw	0
 20948  00178C  6F87               	movwf	___flmul@prod& (0+255),b
 20949  00178E  0E00               	movlw	0
 20950  001790  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 20951  001792  0E80               	movlw	128
 20952  001794  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 20953  001796  0E7F               	movlw	127
 20954  001798  D020               	goto	L30
 20955  00179A                     l2652:
 20956                           
 20957                           ; BSR set to: 0
 20958                           
 20959                           ; BSR set to: 0
 20960  00179A  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 20961  00179C  D005               	goto	u7320
 20962  00179E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 20963  0017A0  E10E               	bnz	l2654
 20964  0017A2  058B               	decf	___flmul@temp& (0+255),w,b
 20965  0017A4  B0D8               	btfsc	status,0,c
 20966  0017A6  D00B               	goto	l2654
 20967  0017A8                     u7320:
 20968                           
 20969                           ; BSR set to: 0
 20970  0017A8  0E00               	movlw	0
 20971  0017AA  6F87               	movwf	___flmul@prod& (0+255),b
 20972  0017AC  0E00               	movlw	0
 20973  0017AE  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 20974  0017B0  0E00               	movlw	0
 20975  0017B2  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 20976  0017B4  0E00               	movlw	0
 20977  0017B6  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 20978  0017B8  0E00               	movlw	0
 20979  0017BA  6F80               	movwf	___flmul@sign& (0+255),b
 20980  0017BC  D00F               	goto	l2655
 20981  0017BE                     l2654:
 20982                           
 20983                           ; BSR set to: 0
 20984  0017BE  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 20985                           
 20986                           ; BSR set to: 0
 20987  0017C2  0EFF               	movlw	255
 20988  0017C4  1787               	andwf	___flmul@prod& (0+255),f,b
 20989  0017C6  0EFF               	movlw	255
 20990  0017C8  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 20991  0017CA  0E7F               	movlw	127
 20992  0017CC  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 20993  0017CE  0E00               	movlw	0
 20994  0017D0  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 20995                           
 20996                           ; BSR set to: 0
 20997  0017D2  B186               	btfsc	___flmul@bexp& (0+255),0,b
 20998                           
 20999                           ; BSR set to: 0
 21000  0017D4  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 21001                           
 21002                           ; BSR set to: 0
 21003                           
 21004                           ; BSR set to: 0
 21005  0017D6  90D8               	bcf	status,0,c
 21006  0017D8  3186               	rrcf	___flmul@bexp& (0+255),w,b
 21007  0017DA                     L30:
 21008  0017DA  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 21009  0017DC                     l2655:
 21010                           
 21011                           ; BSR set to: 0
 21012                           
 21013                           ; BSR set to: 0
 21014                           
 21015                           ; BSR set to: 0
 21016  0017DC  5180               	movf	___flmul@sign& (0+255),w,b
 21017  0017DE  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 21018                           
 21019                           ; BSR set to: 0
 21020  0017E0  C087  F074         	movff	___flmul@prod,?___flmul
 21021  0017E4  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 21022  0017E8  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 21023  0017EC  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 21024  0017F0  0012               	return	
 21025  0017F2                     __end_of___flmul:
 21026                           	opt stack 0
 21027                           tblptru	equ	0xFF8
 21028                           tblptrh	equ	0xFF7
 21029                           tblptrl	equ	0xFF6
 21030                           tablat	equ	0xFF5
 21031                           prodh	equ	0xFF4
 21032                           prodl	equ	0xFF3
 21033                           intcon	equ	0xFF2
 21034                           intcon3	equ	0xFF0
 21035                           indf0	equ	0xFEF
 21036                           postinc0	equ	0xFEE
 21037                           fsr0h	equ	0xFEA
 21038                           fsr0l	equ	0xFE9
 21039                           wreg	equ	0xFE8
 21040                           indf1	equ	0xFE7
 21041                           postdec1	equ	0xFE5
 21042                           fsr1h	equ	0xFE2
 21043                           fsr1l	equ	0xFE1
 21044                           indf2	equ	0xFDF
 21045                           postinc2	equ	0xFDE
 21046                           postdec2	equ	0xFDD
 21047                           plusw2	equ	0xFDB
 21048                           fsr2h	equ	0xFDA
 21049                           fsr2l	equ	0xFD9
 21050                           status	equ	0xFD8
 21051                           
 21052 ;; *************** function ___fldiv *****************
 21053 ;; Defined at:
 21054 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;  b               4   45[BANK0 ] unsigned char 
 21057 ;;  a               4   49[BANK0 ] unsigned char 
 21058 ;; Auto vars:     Size  Location     Type
 21059 ;;  grs             4   64[BANK0 ] unsigned long 
 21060 ;;  rem             4   58[BANK0 ] unsigned long 
 21061 ;;  new_exp         2   62[BANK0 ] int 
 21062 ;;  aexp            1   69[BANK0 ] unsigned char 
 21063 ;;  bexp            1   68[BANK0 ] unsigned char 
 21064 ;;  sign            1   57[BANK0 ] unsigned char 
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  4   45[BANK0 ] unsigned char 
 21067 ;; Registers used:
 21068 ;;		wreg, status,2, status,0
 21069 ;; Tracked objects:
 21070 ;;		On entry : 0/0
 21071 ;;		On exit  : 0/0
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21074 ;;      Params:         0       8       0       0       0       0       0       0       0
 21075 ;;      Locals:         0      13       0       0       0       0       0       0       0
 21076 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21077 ;;      Totals:         0      25       0       0       0       0       0       0       0
 21078 ;;Total ram usage:       25 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:   11
 21081 ;; This function calls:
 21082 ;;		Nothing
 21083 ;; This function is called by:
 21084 ;;		_ADC_TempConversion
 21085 ;; This function uses a non-reentrant model
 21086 ;;
 21087                           
 21088                           	psect	text86
 21089  001B30                     __ptext86:
 21090                           	opt stack 0
 21091  001B30                     ___fldiv:
 21092                           	opt stack 16
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;incstack = 0
 21096  001B30  0100               	movlb	0	; () banked
 21097  001B32  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 21098  001B34  0B80               	andlw	128
 21099  001B36  6F99               	movwf	___fldiv@sign& (0+255),b
 21100  001B38  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 21101  001B3A  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 21102  001B3C  6FA4               	movwf	___fldiv@bexp& (0+255),b
 21103                           
 21104                           ; BSR set to: 0
 21105  001B3E  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 21106                           
 21107                           ; BSR set to: 0
 21108  001B40  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 21109                           
 21110                           ; BSR set to: 0
 21111                           
 21112                           ; BSR set to: 0
 21113  001B42  51A4               	movf	___fldiv@bexp& (0+255),w,b
 21114  001B44  B4D8               	btfsc	status,2,c
 21115  001B46  D00D               	goto	l2597
 21116                           
 21117                           ; BSR set to: 0
 21118  001B48  29A4               	incf	___fldiv@bexp& (0+255),w,b
 21119  001B4A  A4D8               	btfss	status,2,c
 21120  001B4C  D008               	goto	l2598
 21121                           
 21122                           ; BSR set to: 0
 21123  001B4E  0E00               	movlw	0
 21124  001B50  6F8D               	movwf	___fldiv@b& (0+255),b
 21125  001B52  0E00               	movlw	0
 21126  001B54  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21127  001B56  0E00               	movlw	0
 21128  001B58  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21129  001B5A  0E00               	movlw	0
 21130  001B5C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21131  001B5E                     l2598:
 21132                           
 21133                           ; BSR set to: 0
 21134                           
 21135                           ; BSR set to: 0
 21136  001B5E  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 21137  001B60  D006               	goto	L31
 21138  001B62                     l2597:
 21139                           
 21140                           ; BSR set to: 0
 21141                           
 21142                           ; BSR set to: 0
 21143  001B62  0E00               	movlw	0
 21144  001B64  6F8D               	movwf	___fldiv@b& (0+255),b
 21145  001B66  0E00               	movlw	0
 21146  001B68  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21147  001B6A  0E00               	movlw	0
 21148  001B6C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21149  001B6E                     L31:
 21150  001B6E  0E00               	movlw	0
 21151  001B70  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21152                           
 21153                           ; BSR set to: 0
 21154                           
 21155                           ; BSR set to: 0
 21156  001B72  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 21157  001B74  0B80               	andlw	128
 21158  001B76  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 21159                           
 21160                           ; BSR set to: 0
 21161  001B78  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 21162  001B7A  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 21163  001B7C  6FA5               	movwf	___fldiv@aexp& (0+255),b
 21164                           
 21165                           ; BSR set to: 0
 21166  001B7E  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 21167                           
 21168                           ; BSR set to: 0
 21169  001B80  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 21170                           
 21171                           ; BSR set to: 0
 21172                           
 21173                           ; BSR set to: 0
 21174  001B82  51A5               	movf	___fldiv@aexp& (0+255),w,b
 21175  001B84  B4D8               	btfsc	status,2,c
 21176  001B86  D00D               	goto	l2601
 21177                           
 21178                           ; BSR set to: 0
 21179  001B88  29A5               	incf	___fldiv@aexp& (0+255),w,b
 21180  001B8A  A4D8               	btfss	status,2,c
 21181  001B8C  D008               	goto	l2602
 21182                           
 21183                           ; BSR set to: 0
 21184  001B8E  0E00               	movlw	0
 21185  001B90  6F91               	movwf	___fldiv@a& (0+255),b
 21186  001B92  0E00               	movlw	0
 21187  001B94  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 21188  001B96  0E00               	movlw	0
 21189  001B98  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 21190  001B9A  0E00               	movlw	0
 21191  001B9C  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 21192  001B9E                     l2602:
 21193                           
 21194                           ; BSR set to: 0
 21195                           
 21196                           ; BSR set to: 0
 21197  001B9E  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 21198  001BA0  D006               	goto	L32
 21199  001BA2                     l2601:
 21200                           
 21201                           ; BSR set to: 0
 21202                           
 21203                           ; BSR set to: 0
 21204  001BA2  0E00               	movlw	0
 21205  001BA4  6F91               	movwf	___fldiv@a& (0+255),b
 21206  001BA6  0E00               	movlw	0
 21207  001BA8  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 21208  001BAA  0E00               	movlw	0
 21209  001BAC  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 21210  001BAE                     L32:
 21211  001BAE  0E00               	movlw	0
 21212  001BB0  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 21213                           
 21214                           ; BSR set to: 0
 21215                           
 21216                           ; BSR set to: 0
 21217  001BB2  5191               	movf	___fldiv@a& (0+255),w,b
 21218  001BB4  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 21219  001BB6  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 21220  001BB8  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 21221  001BBA  A4D8               	btfss	status,2,c
 21222  001BBC  D015               	goto	l2604
 21223                           
 21224                           ; BSR set to: 0
 21225  001BBE  0E00               	movlw	0
 21226  001BC0  6F8D               	movwf	___fldiv@b& (0+255),b
 21227  001BC2  0E00               	movlw	0
 21228  001BC4  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21229  001BC6  0E00               	movlw	0
 21230  001BC8  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21231  001BCA  0E00               	movlw	0
 21232  001BCC  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21233                           
 21234                           ; BSR set to: 0
 21235  001BCE  0E80               	movlw	128
 21236  001BD0  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 21237  001BD2  0E7F               	movlw	127
 21238  001BD4  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 21239                           
 21240                           ; BSR set to: 0
 21241  001BD6  C08D  F08D         	movff	___fldiv@b,?___fldiv
 21242  001BDA  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 21243  001BDE  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 21244  001BE2  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 21245                           
 21246                           ; BSR set to: 0
 21247  001BE6  0012               	return	
 21248  001BE8                     l2604:
 21249                           
 21250                           ; BSR set to: 0
 21251                           
 21252                           ; BSR set to: 0
 21253  001BE8  51A4               	movf	___fldiv@bexp& (0+255),w,b
 21254  001BEA  A4D8               	btfss	status,2,c
 21255  001BEC  D011               	goto	l2606
 21256                           
 21257                           ; BSR set to: 0
 21258  001BEE  0E00               	movlw	0
 21259  001BF0  6F8D               	movwf	___fldiv@b& (0+255),b
 21260  001BF2  0E00               	movlw	0
 21261  001BF4  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21262  001BF6  0E00               	movlw	0
 21263  001BF8  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21264  001BFA  0E00               	movlw	0
 21265  001BFC  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21266                           
 21267                           ; BSR set to: 0
 21268  001BFE  C08D  F08D         	movff	___fldiv@b,?___fldiv
 21269  001C02  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 21270  001C06  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 21271  001C0A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 21272                           
 21273                           ; BSR set to: 0
 21274  001C0E  0012               	return	
 21275  001C10                     l2606:
 21276                           
 21277                           ; BSR set to: 0
 21278                           
 21279                           ; BSR set to: 0
 21280  001C10  51A5               	movf	___fldiv@aexp& (0+255),w,b
 21281  001C12  6F95               	movwf	??___fldiv& (0+255),b
 21282  001C14  6B96               	clrf	(??___fldiv+1)& (0+255),b
 21283  001C16  1F95               	comf	??___fldiv& (0+255),f,b
 21284  001C18  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 21285  001C1A  4B95               	infsnz	??___fldiv& (0+255),f,b
 21286  001C1C  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 21287  001C1E  51A4               	movf	___fldiv@bexp& (0+255),w,b
 21288  001C20  6F97               	movwf	(??___fldiv+2)& (0+255),b
 21289  001C22  6B98               	clrf	(??___fldiv+3)& (0+255),b
 21290  001C24  5195               	movf	??___fldiv& (0+255),w,b
 21291  001C26  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 21292  001C28  5196               	movf	(??___fldiv+1)& (0+255),w,b
 21293  001C2A  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 21294  001C2C  0E7F               	movlw	127
 21295  001C2E  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 21296  001C30  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 21297  001C32  0E00               	movlw	0
 21298  001C34  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 21299  001C36  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 21300                           
 21301                           ; BSR set to: 0
 21302  001C38  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 21303  001C3C  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 21304  001C40  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 21305  001C44  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 21306                           
 21307                           ; BSR set to: 0
 21308  001C48  0E00               	movlw	0
 21309  001C4A  6F8D               	movwf	___fldiv@b& (0+255),b
 21310  001C4C  0E00               	movlw	0
 21311  001C4E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21312  001C50  0E00               	movlw	0
 21313  001C52  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21314  001C54  0E00               	movlw	0
 21315  001C56  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21316                           
 21317                           ; BSR set to: 0
 21318  001C58  0E00               	movlw	0
 21319  001C5A  6FA0               	movwf	___fldiv@grs& (0+255),b
 21320  001C5C  0E00               	movlw	0
 21321  001C5E  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 21322  001C60  0E00               	movlw	0
 21323  001C62  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 21324  001C64  0E00               	movlw	0
 21325  001C66  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 21326                           
 21327                           ; BSR set to: 0
 21328  001C68  0E00               	movlw	0
 21329  001C6A  6FA5               	movwf	___fldiv@aexp& (0+255),b
 21330  001C6C  D028               	goto	l2607
 21331  001C6E                     
 21332                           ; BSR set to: 0
 21333                           
 21334                           ; BSR set to: 0
 21335  001C6E  51A5               	movf	___fldiv@aexp& (0+255),w,b
 21336  001C70  B4D8               	btfsc	status,2,c
 21337  001C72  D011               	goto	l2609
 21338                           
 21339                           ; BSR set to: 0
 21340  001C74  90D8               	bcf	status,0,c
 21341  001C76  379A               	rlcf	___fldiv@rem& (0+255),f,b
 21342  001C78  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 21343  001C7A  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 21344  001C7C  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 21345  001C7E  90D8               	bcf	status,0,c
 21346  001C80  378D               	rlcf	___fldiv@b& (0+255),f,b
 21347  001C82  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 21348  001C84  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 21349  001C86  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 21350                           
 21351                           ; BSR set to: 0
 21352  001C88  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 21353                           
 21354                           ; BSR set to: 0
 21355  001C8A  818D               	bsf	___fldiv@b& (0+255),0,b
 21356                           
 21357                           ; BSR set to: 0
 21358  001C8C  90D8               	bcf	status,0,c
 21359  001C8E  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 21360  001C90  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 21361  001C92  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 21362  001C94  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 21363  001C96                     l2609:
 21364                           
 21365                           ; BSR set to: 0
 21366                           
 21367                           ; BSR set to: 0
 21368  001C96  5191               	movf	___fldiv@a& (0+255),w,b
 21369  001C98  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 21370  001C9A  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 21371  001C9C  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 21372  001C9E  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 21373  001CA0  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 21374  001CA2  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 21375  001CA4  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 21376  001CA6  A0D8               	btfss	status,0,c
 21377  001CA8  D009               	goto	l2611
 21378                           
 21379                           ; BSR set to: 0
 21380  001CAA  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 21381                           
 21382                           ; BSR set to: 0
 21383  001CAC  5191               	movf	___fldiv@a& (0+255),w,b
 21384  001CAE  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 21385  001CB0  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 21386  001CB2  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 21387  001CB4  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 21388  001CB6  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 21389  001CB8  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 21390  001CBA  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 21391  001CBC                     l2611:
 21392                           
 21393                           ; BSR set to: 0
 21394                           
 21395                           ; BSR set to: 0
 21396  001CBC  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 21397  001CBE                     l2607:
 21398                           
 21399                           ; BSR set to: 0
 21400  001CBE  0E19               	movlw	25
 21401  001CC0  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 21402  001CC2  D7D5               	goto	l2608
 21403                           
 21404                           ; BSR set to: 0
 21405                           
 21406                           ; BSR set to: 0
 21407  001CC4  519A               	movf	___fldiv@rem& (0+255),w,b
 21408  001CC6  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 21409  001CC8  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 21410  001CCA  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 21411  001CCC  B4D8               	btfsc	status,2,c
 21412  001CCE  D011               	goto	l2614
 21413                           
 21414                           ; BSR set to: 0
 21415  001CD0  81A0               	bsf	___fldiv@grs& (0+255),0,b
 21416                           
 21417                           ; BSR set to: 0
 21418  001CD2  D00F               	goto	l2614
 21419  001CD4                     
 21420                           ; BSR set to: 0
 21421                           
 21422                           ; BSR set to: 0
 21423  001CD4  90D8               	bcf	status,0,c
 21424  001CD6  378D               	rlcf	___fldiv@b& (0+255),f,b
 21425  001CD8  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 21426  001CDA  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 21427  001CDC  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 21428                           
 21429                           ; BSR set to: 0
 21430  001CDE  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 21431                           
 21432                           ; BSR set to: 0
 21433  001CE0  818D               	bsf	___fldiv@b& (0+255),0,b
 21434                           
 21435                           ; BSR set to: 0
 21436  001CE2  90D8               	bcf	status,0,c
 21437  001CE4  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 21438  001CE6  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 21439  001CE8  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 21440  001CEA  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 21441  001CEC  079E               	decf	___fldiv@new_exp& (0+255),f,b
 21442  001CEE  A0D8               	btfss	status,0,c
 21443  001CF0  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 21444  001CF2                     l2614:
 21445                           
 21446                           ; BSR set to: 0
 21447                           
 21448                           ; BSR set to: 0
 21449  001CF2  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 21450  001CF4  D7EF               	goto	l2615
 21451                           
 21452                           ; BSR set to: 0
 21453                           
 21454                           ; BSR set to: 0
 21455  001CF6  0E00               	movlw	0
 21456  001CF8  6FA5               	movwf	___fldiv@aexp& (0+255),b
 21457                           
 21458                           ; BSR set to: 0
 21459  001CFA  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 21460  001CFC  D016               	goto	l2621
 21461                           
 21462                           ; BSR set to: 0
 21463  001CFE  0EFF               	movlw	255
 21464  001D00  15A0               	andwf	___fldiv@grs& (0+255),w,b
 21465  001D02  6F95               	movwf	??___fldiv& (0+255),b
 21466  001D04  0EFF               	movlw	255
 21467  001D06  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 21468  001D08  6F96               	movwf	(??___fldiv+1)& (0+255),b
 21469  001D0A  0EFF               	movlw	255
 21470  001D0C  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 21471  001D0E  6F97               	movwf	(??___fldiv+2)& (0+255),b
 21472  001D10  0E7F               	movlw	127
 21473  001D12  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 21474  001D14  6F98               	movwf	(??___fldiv+3)& (0+255),b
 21475  001D16  5195               	movf	??___fldiv& (0+255),w,b
 21476  001D18  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 21477  001D1A  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 21478  001D1C  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 21479  001D1E  A4D8               	btfss	status,2,c
 21480  001D20  D002               	goto	u7090
 21481                           
 21482                           ; BSR set to: 0
 21483                           
 21484                           ; BSR set to: 0
 21485  001D22  A18D               	btfss	___fldiv@b& (0+255),0,b
 21486  001D24  D002               	goto	l2621
 21487  001D26                     u7090:
 21488                           
 21489                           ; BSR set to: 0
 21490  001D26  0E01               	movlw	1
 21491  001D28  6FA5               	movwf	___fldiv@aexp& (0+255),b
 21492  001D2A                     l2621:
 21493                           
 21494                           ; BSR set to: 0
 21495                           
 21496                           ; BSR set to: 0
 21497                           
 21498                           ; BSR set to: 0
 21499  001D2A  51A5               	movf	___fldiv@aexp& (0+255),w,b
 21500  001D2C  B4D8               	btfsc	status,2,c
 21501  001D2E  D01F               	goto	l2623
 21502                           
 21503                           ; BSR set to: 0
 21504  001D30  0E01               	movlw	1
 21505  001D32  278D               	addwf	___fldiv@b& (0+255),f,b
 21506  001D34  0E00               	movlw	0
 21507  001D36  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 21508  001D38  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 21509  001D3A  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 21510                           
 21511                           ; BSR set to: 0
 21512  001D3C  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 21513  001D3E  D017               	goto	l2623
 21514                           
 21515                           ; BSR set to: 0
 21516  001D40  C08D  F095         	movff	___fldiv@b,??___fldiv
 21517  001D44  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 21518  001D48  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 21519  001D4C  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 21520  001D50  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 21521  001D52  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 21522  001D54  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 21523  001D56  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 21524  001D58  3395               	rrcf	??___fldiv& (0+255),f,b
 21525  001D5A  C095  F08D         	movff	??___fldiv,___fldiv@b
 21526  001D5E  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 21527  001D62  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 21528  001D66  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 21529                           
 21530                           ; BSR set to: 0
 21531  001D6A  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 21532  001D6C  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 21533  001D6E                     l2623:
 21534                           
 21535                           ; BSR set to: 0
 21536                           
 21537                           ; BSR set to: 0
 21538                           
 21539                           ; BSR set to: 0
 21540  001D6E  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 21541  001D70  D010               	goto	l2624
 21542  001D72  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 21543  001D74  E103               	bnz	u7120
 21544  001D76  299E               	incf	___fldiv@new_exp& (0+255),w,b
 21545  001D78  A0D8               	btfss	status,0,c
 21546  001D7A  D00B               	goto	l2624
 21547  001D7C                     u7120:
 21548                           
 21549                           ; BSR set to: 0
 21550  001D7C  0E00               	movlw	0
 21551  001D7E  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 21552  001D80  699E               	setf	___fldiv@new_exp& (0+255),b
 21553  001D82  0E00               	movlw	0
 21554  001D84  6F8D               	movwf	___fldiv@b& (0+255),b
 21555  001D86  0E00               	movlw	0
 21556  001D88  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21557  001D8A  0E00               	movlw	0
 21558  001D8C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21559  001D8E  0E00               	movlw	0
 21560  001D90  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21561  001D92                     l2624:
 21562                           
 21563                           ; BSR set to: 0
 21564                           
 21565                           ; BSR set to: 0
 21566  001D92  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 21567  001D94  D005               	goto	u7130
 21568  001D96  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 21569  001D98  E111               	bnz	l8696
 21570  001D9A  059E               	decf	___fldiv@new_exp& (0+255),w,b
 21571  001D9C  B0D8               	btfsc	status,0,c
 21572  001D9E  D00E               	goto	l2625
 21573  001DA0                     u7130:
 21574                           
 21575                           ; BSR set to: 0
 21576  001DA0  0E00               	movlw	0
 21577  001DA2  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 21578  001DA4  0E00               	movlw	0
 21579  001DA6  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 21580  001DA8  0E00               	movlw	0
 21581  001DAA  6F8D               	movwf	___fldiv@b& (0+255),b
 21582  001DAC  0E00               	movlw	0
 21583  001DAE  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 21584  001DB0  0E00               	movlw	0
 21585  001DB2  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 21586  001DB4  0E00               	movlw	0
 21587  001DB6  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21588  001DB8  0E00               	movlw	0
 21589  001DBA  6F99               	movwf	___fldiv@sign& (0+255),b
 21590  001DBC                     l2625:
 21591  001DBC                     l8696:
 21592                           
 21593                           ; BSR set to: 0
 21594  001DBC  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 21595                           
 21596                           ; BSR set to: 0
 21597  001DC0  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 21598  001DC2  D002               	goto	l2626
 21599                           
 21600                           ; BSR set to: 0
 21601  001DC4  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 21602  001DC6  D001               	goto	l2627
 21603  001DC8                     l2626:
 21604                           
 21605                           ; BSR set to: 0
 21606                           
 21607                           ; BSR set to: 0
 21608  001DC8  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 21609  001DCA                     l2627:
 21610                           
 21611                           ; BSR set to: 0
 21612                           
 21613                           ; BSR set to: 0
 21614  001DCA  90D8               	bcf	status,0,c
 21615  001DCC  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 21616  001DCE  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 21617                           
 21618                           ; BSR set to: 0
 21619  001DD0  5199               	movf	___fldiv@sign& (0+255),w,b
 21620  001DD2  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 21621                           
 21622                           ; BSR set to: 0
 21623  001DD4  C08D  F08D         	movff	___fldiv@b,?___fldiv
 21624  001DD8  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 21625  001DDC  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 21626  001DE0  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 21627  001DE4  0012               	return	
 21628  001DE6                     __end_of___fldiv:
 21629                           	opt stack 0
 21630                           tblptru	equ	0xFF8
 21631                           tblptrh	equ	0xFF7
 21632                           tblptrl	equ	0xFF6
 21633                           tablat	equ	0xFF5
 21634                           prodh	equ	0xFF4
 21635                           prodl	equ	0xFF3
 21636                           intcon	equ	0xFF2
 21637                           intcon3	equ	0xFF0
 21638                           indf0	equ	0xFEF
 21639                           postinc0	equ	0xFEE
 21640                           fsr0h	equ	0xFEA
 21641                           fsr0l	equ	0xFE9
 21642                           wreg	equ	0xFE8
 21643                           indf1	equ	0xFE7
 21644                           postdec1	equ	0xFE5
 21645                           fsr1h	equ	0xFE2
 21646                           fsr1l	equ	0xFE1
 21647                           indf2	equ	0xFDF
 21648                           postinc2	equ	0xFDE
 21649                           postdec2	equ	0xFDD
 21650                           plusw2	equ	0xFDB
 21651                           fsr2h	equ	0xFDA
 21652                           fsr2l	equ	0xFD9
 21653                           status	equ	0xFD8
 21654                           
 21655 ;; *************** function ___fladd *****************
 21656 ;; Defined at:
 21657 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 21658 ;; Parameters:    Size  Location     Type
 21659 ;;  b               4    0[BANK0 ] unsigned char 
 21660 ;;  a               4    4[BANK0 ] unsigned char 
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;  grs             1   19[BANK0 ] unsigned char 
 21663 ;;  bexp            1   18[BANK0 ] unsigned char 
 21664 ;;  aexp            1   17[BANK0 ] unsigned char 
 21665 ;;  signs           1   16[BANK0 ] unsigned char 
 21666 ;; Return value:  Size  Location     Type
 21667 ;;                  4    0[BANK0 ] unsigned char 
 21668 ;; Registers used:
 21669 ;;		wreg, status,2, status,0
 21670 ;; Tracked objects:
 21671 ;;		On entry : 0/0
 21672 ;;		On exit  : 0/0
 21673 ;;		Unchanged: 0/0
 21674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21675 ;;      Params:         0       8       0       0       0       0       0       0       0
 21676 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21677 ;;      Temps:          0       8       0       0       0       0       0       0       0
 21678 ;;      Totals:         0      20       0       0       0       0       0       0       0
 21679 ;;Total ram usage:       20 bytes
 21680 ;; Hardware stack levels used:    1
 21681 ;; Hardware stack levels required when called:   11
 21682 ;; This function calls:
 21683 ;;		Nothing
 21684 ;; This function is called by:
 21685 ;;		_ADC_TempConversion
 21686 ;; This function uses a non-reentrant model
 21687 ;;
 21688                           
 21689                           	psect	text87
 21690  0017F2                     __ptext87:
 21691                           	opt stack 0
 21692  0017F2                     ___fladd:
 21693                           	opt stack 16
 21694                           
 21695                           ; BSR set to: 0
 21696                           ;incstack = 0
 21697  0017F2  0100               	movlb	0	; () banked
 21698  0017F4  5163               	movf	(___fladd@b+3)& (0+255),w,b
 21699  0017F6  0B80               	andlw	128
 21700  0017F8  6F70               	movwf	___fladd@signs& (0+255),b
 21701  0017FA  5163               	movf	(___fladd@b+3)& (0+255),w,b
 21702  0017FC  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 21703  0017FE  6F72               	movwf	___fladd@bexp& (0+255),b
 21704                           
 21705                           ; BSR set to: 0
 21706  001800  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 21707                           
 21708                           ; BSR set to: 0
 21709  001802  8172               	bsf	___fladd@bexp& (0+255),0,b
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  001804  5172               	movf	___fladd@bexp& (0+255),w,b
 21715  001806  B4D8               	btfsc	status,2,c
 21716  001808  D00D               	goto	l2540
 21717                           
 21718                           ; BSR set to: 0
 21719  00180A  2972               	incf	___fladd@bexp& (0+255),w,b
 21720  00180C  A4D8               	btfss	status,2,c
 21721  00180E  D008               	goto	l2541
 21722                           
 21723                           ; BSR set to: 0
 21724  001810  0E00               	movlw	0
 21725  001812  6F60               	movwf	___fladd@b& (0+255),b
 21726  001814  0E00               	movlw	0
 21727  001816  6F61               	movwf	(___fladd@b+1)& (0+255),b
 21728  001818  0E00               	movlw	0
 21729  00181A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 21730  00181C  0E00               	movlw	0
 21731  00181E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 21732  001820                     l2541:
 21733                           
 21734                           ; BSR set to: 0
 21735                           
 21736                           ; BSR set to: 0
 21737  001820  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 21738  001822  D006               	goto	L33
 21739  001824                     l2540:
 21740                           
 21741                           ; BSR set to: 0
 21742                           
 21743                           ; BSR set to: 0
 21744  001824  0E00               	movlw	0
 21745  001826  6F60               	movwf	___fladd@b& (0+255),b
 21746  001828  0E00               	movlw	0
 21747  00182A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 21748  00182C  0E00               	movlw	0
 21749  00182E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 21750  001830                     L33:
 21751  001830  0E00               	movlw	0
 21752  001832  6F63               	movwf	(___fladd@b+3)& (0+255),b
 21753                           
 21754                           ; BSR set to: 0
 21755                           
 21756                           ; BSR set to: 0
 21757  001834  5167               	movf	(___fladd@a+3)& (0+255),w,b
 21758  001836  0B80               	andlw	128
 21759  001838  6F71               	movwf	___fladd@aexp& (0+255),b
 21760                           
 21761                           ; BSR set to: 0
 21762  00183A  5170               	movf	___fladd@signs& (0+255),w,b
 21763  00183C  1971               	xorwf	___fladd@aexp& (0+255),w,b
 21764  00183E  A4D8               	btfss	status,2,c
 21765                           
 21766                           ; BSR set to: 0
 21767  001840  8D70               	bsf	___fladd@signs& (0+255),6,b
 21768                           
 21769                           ; BSR set to: 0
 21770                           
 21771                           ; BSR set to: 0
 21772  001842  5167               	movf	(___fladd@a+3)& (0+255),w,b
 21773  001844  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 21774  001846  6F71               	movwf	___fladd@aexp& (0+255),b
 21775                           
 21776                           ; BSR set to: 0
 21777  001848  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 21778                           
 21779                           ; BSR set to: 0
 21780  00184A  8171               	bsf	___fladd@aexp& (0+255),0,b
 21781                           
 21782                           ; BSR set to: 0
 21783                           
 21784                           ; BSR set to: 0
 21785  00184C  5171               	movf	___fladd@aexp& (0+255),w,b
 21786  00184E  B4D8               	btfsc	status,2,c
 21787  001850  D00D               	goto	l2545
 21788                           
 21789                           ; BSR set to: 0
 21790  001852  2971               	incf	___fladd@aexp& (0+255),w,b
 21791  001854  A4D8               	btfss	status,2,c
 21792  001856  D008               	goto	l2546
 21793                           
 21794                           ; BSR set to: 0
 21795  001858  0E00               	movlw	0
 21796  00185A  6F64               	movwf	___fladd@a& (0+255),b
 21797  00185C  0E00               	movlw	0
 21798  00185E  6F65               	movwf	(___fladd@a+1)& (0+255),b
 21799  001860  0E00               	movlw	0
 21800  001862  6F66               	movwf	(___fladd@a+2)& (0+255),b
 21801  001864  0E00               	movlw	0
 21802  001866  6F67               	movwf	(___fladd@a+3)& (0+255),b
 21803  001868                     l2546:
 21804                           
 21805                           ; BSR set to: 0
 21806                           
 21807                           ; BSR set to: 0
 21808  001868  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 21809  00186A  D006               	goto	L34
 21810  00186C                     l2545:
 21811                           
 21812                           ; BSR set to: 0
 21813                           
 21814                           ; BSR set to: 0
 21815  00186C  0E00               	movlw	0
 21816  00186E  6F64               	movwf	___fladd@a& (0+255),b
 21817  001870  0E00               	movlw	0
 21818  001872  6F65               	movwf	(___fladd@a+1)& (0+255),b
 21819  001874  0E00               	movlw	0
 21820  001876  6F66               	movwf	(___fladd@a+2)& (0+255),b
 21821  001878                     L34:
 21822  001878  0E00               	movlw	0
 21823  00187A  6F67               	movwf	(___fladd@a+3)& (0+255),b
 21824                           
 21825                           ; BSR set to: 0
 21826                           
 21827                           ; BSR set to: 0
 21828  00187C  5172               	movf	___fladd@bexp& (0+255),w,b
 21829  00187E  5D71               	subwf	___fladd@aexp& (0+255),w,b
 21830  001880  B0D8               	btfsc	status,0,c
 21831  001882  D022               	goto	l2548
 21832                           
 21833                           ; BSR set to: 0
 21834  001884  AD70               	btfss	___fladd@signs& (0+255),6,b
 21835  001886  D002               	goto	l2549
 21836                           
 21837                           ; BSR set to: 0
 21838  001888  0E80               	movlw	128
 21839  00188A  1B70               	xorwf	___fladd@signs& (0+255),f,b
 21840  00188C                     l2549:
 21841                           
 21842                           ; BSR set to: 0
 21843                           
 21844                           ; BSR set to: 0
 21845  00188C  C072  F073         	movff	___fladd@bexp,___fladd@grs
 21846                           
 21847                           ; BSR set to: 0
 21848  001890  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 21849                           
 21850                           ; BSR set to: 0
 21851  001894  C073  F071         	movff	___fladd@grs,___fladd@aexp
 21852                           
 21853                           ; BSR set to: 0
 21854  001898  C060  F073         	movff	___fladd@b,___fladd@grs
 21855                           
 21856                           ; BSR set to: 0
 21857  00189C  C064  F060         	movff	___fladd@a,___fladd@b
 21858                           
 21859                           ; BSR set to: 0
 21860  0018A0  C073  F064         	movff	___fladd@grs,___fladd@a
 21861                           
 21862                           ; BSR set to: 0
 21863  0018A4  C061  F073         	movff	___fladd@b+1,___fladd@grs
 21864                           
 21865                           ; BSR set to: 0
 21866  0018A8  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 21867                           
 21868                           ; BSR set to: 0
 21869  0018AC  C073  F065         	movff	___fladd@grs,___fladd@a+1
 21870                           
 21871                           ; BSR set to: 0
 21872  0018B0  C062  F073         	movff	___fladd@b+2,___fladd@grs
 21873                           
 21874                           ; BSR set to: 0
 21875  0018B4  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 21876                           
 21877                           ; BSR set to: 0
 21878  0018B8  C073  F066         	movff	___fladd@grs,___fladd@a+2
 21879                           
 21880                           ; BSR set to: 0
 21881  0018BC  C063  F073         	movff	___fladd@b+3,___fladd@grs
 21882                           
 21883                           ; BSR set to: 0
 21884  0018C0  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 21885                           
 21886                           ; BSR set to: 0
 21887  0018C4  C073  F067         	movff	___fladd@grs,___fladd@a+3
 21888  0018C8                     l2548:
 21889                           
 21890                           ; BSR set to: 0
 21891                           
 21892                           ; BSR set to: 0
 21893  0018C8  0E00               	movlw	0
 21894  0018CA  6F73               	movwf	___fladd@grs& (0+255),b
 21895                           
 21896                           ; BSR set to: 0
 21897  0018CC  5172               	movf	___fladd@bexp& (0+255),w,b
 21898  0018CE  6F68               	movwf	??___fladd& (0+255),b
 21899  0018D0  6B69               	clrf	(??___fladd+1)& (0+255),b
 21900  0018D2  1F68               	comf	??___fladd& (0+255),f,b
 21901  0018D4  1F69               	comf	(??___fladd+1)& (0+255),f,b
 21902  0018D6  4B68               	infsnz	??___fladd& (0+255),f,b
 21903  0018D8  2B69               	incf	(??___fladd+1)& (0+255),f,b
 21904  0018DA  5171               	movf	___fladd@aexp& (0+255),w,b
 21905  0018DC  6F6A               	movwf	(??___fladd+2)& (0+255),b
 21906  0018DE  6B6B               	clrf	(??___fladd+3)& (0+255),b
 21907  0018E0  5168               	movf	??___fladd& (0+255),w,b
 21908  0018E2  276A               	addwf	(??___fladd+2)& (0+255),f,b
 21909  0018E4  5169               	movf	(??___fladd+1)& (0+255),w,b
 21910  0018E6  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 21911  0018E8  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 21912  0018EA  D02C               	goto	l2552
 21913  0018EC  516B               	movf	(??___fladd+3)& (0+255),w,b
 21914  0018EE  E104               	bnz	u6620
 21915  0018F0  0E1A               	movlw	26
 21916  0018F2  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 21917  0018F4  A0D8               	btfss	status,0,c
 21918  0018F6  D026               	goto	l2552
 21919  0018F8                     u6620:
 21920                           
 21921                           ; BSR set to: 0
 21922  0018F8  5160               	movf	___fladd@b& (0+255),w,b
 21923  0018FA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 21924  0018FC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 21925  0018FE  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 21926  001900  B4D8               	btfsc	status,2,c
 21927  001902  D002               	goto	u6630
 21928  001904  0E01               	movlw	1
 21929  001906  D001               	goto	u6640
 21930  001908                     u6630:
 21931  001908  0E00               	movlw	0
 21932  00190A                     u6640:
 21933  00190A  6F73               	movwf	___fladd@grs& (0+255),b
 21934                           
 21935                           ; BSR set to: 0
 21936  00190C  0E00               	movlw	0
 21937  00190E  6F60               	movwf	___fladd@b& (0+255),b
 21938  001910  0E00               	movlw	0
 21939  001912  6F61               	movwf	(___fladd@b+1)& (0+255),b
 21940  001914  0E00               	movlw	0
 21941  001916  6F62               	movwf	(___fladd@b+2)& (0+255),b
 21942  001918  0E00               	movlw	0
 21943  00191A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 21944                           
 21945                           ; BSR set to: 0
 21946  00191C  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 21947  001920  D015               	goto	u6670
 21948  001922                     l2553:
 21949                           
 21950                           ; BSR set to: 0
 21951  001922  A173               	btfss	___fladd@grs& (0+255),0,b
 21952  001924  D005               	goto	l2554
 21953                           
 21954                           ; BSR set to: 0
 21955  001926  90D8               	bcf	status,0,c
 21956  001928  3173               	rrcf	___fladd@grs& (0+255),w,b
 21957  00192A  0901               	iorlw	1
 21958  00192C  6F73               	movwf	___fladd@grs& (0+255),b
 21959  00192E  D002               	goto	l2555
 21960  001930                     l2554:
 21961                           
 21962                           ; BSR set to: 0
 21963                           
 21964                           ; BSR set to: 0
 21965  001930  90D8               	bcf	status,0,c
 21966  001932  3373               	rrcf	___fladd@grs& (0+255),f,b
 21967  001934                     l2555:
 21968                           
 21969                           ; BSR set to: 0
 21970                           
 21971                           ; BSR set to: 0
 21972  001934  B160               	btfsc	___fladd@b& (0+255),0,b
 21973                           
 21974                           ; BSR set to: 0
 21975  001936  8F73               	bsf	___fladd@grs& (0+255),7,b
 21976                           
 21977                           ; BSR set to: 0
 21978                           
 21979                           ; BSR set to: 0
 21980  001938  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 21981  00193A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 21982  00193C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 21983  00193E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 21984  001940  3360               	rrcf	___fladd@b& (0+255),f,b
 21985                           
 21986                           ; BSR set to: 0
 21987  001942  2B72               	incf	___fladd@bexp& (0+255),f,b
 21988  001944                     l2552:
 21989                           
 21990                           ; BSR set to: 0
 21991  001944  5171               	movf	___fladd@aexp& (0+255),w,b
 21992  001946  5D72               	subwf	___fladd@bexp& (0+255),w,b
 21993  001948  A0D8               	btfss	status,0,c
 21994  00194A  D7EB               	goto	l2553
 21995  00194C                     u6670:
 21996                           
 21997                           ; BSR set to: 0
 21998                           
 21999                           ; BSR set to: 0
 22000  00194C  BD70               	btfsc	___fladd@signs& (0+255),6,b
 22001  00194E  D029               	goto	l2558
 22002                           
 22003                           ; BSR set to: 0
 22004  001950  5172               	movf	___fladd@bexp& (0+255),w,b
 22005  001952  A4D8               	btfss	status,2,c
 22006  001954  D009               	goto	l2559
 22007                           
 22008                           ; BSR set to: 0
 22009  001956  0E00               	movlw	0
 22010  001958  6F60               	movwf	?___fladd& (0+255),b
 22011  00195A  0E00               	movlw	0
 22012  00195C  6F61               	movwf	(?___fladd+1)& (0+255),b
 22013  00195E  0E00               	movlw	0
 22014  001960  6F62               	movwf	(?___fladd+2)& (0+255),b
 22015  001962  0E00               	movlw	0
 22016  001964  6F63               	movwf	(?___fladd+3)& (0+255),b
 22017                           
 22018                           ; BSR set to: 0
 22019  001966  0012               	return	
 22020  001968                     l2559:
 22021                           
 22022                           ; BSR set to: 0
 22023                           
 22024                           ; BSR set to: 0
 22025  001968  5164               	movf	___fladd@a& (0+255),w,b
 22026  00196A  2760               	addwf	___fladd@b& (0+255),f,b
 22027  00196C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 22028  00196E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 22029  001970  5166               	movf	(___fladd@a+2)& (0+255),w,b
 22030  001972  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 22031  001974  5167               	movf	(___fladd@a+3)& (0+255),w,b
 22032  001976  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 22033                           
 22034                           ; BSR set to: 0
 22035  001978  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 22036  00197A  D083               	goto	u6800
 22037                           
 22038                           ; BSR set to: 0
 22039  00197C  A173               	btfss	___fladd@grs& (0+255),0,b
 22040  00197E  D006               	goto	l2562
 22041                           
 22042                           ; BSR set to: 0
 22043  001980  90D8               	bcf	status,0,c
 22044  001982  3373               	rrcf	___fladd@grs& (0+255),f,b
 22045  001984  5173               	movf	___fladd@grs& (0+255),w,b
 22046  001986  0901               	iorlw	1
 22047  001988  6F73               	movwf	___fladd@grs& (0+255),b
 22048  00198A  D002               	goto	l2563
 22049  00198C                     l2562:
 22050                           
 22051                           ; BSR set to: 0
 22052                           
 22053                           ; BSR set to: 0
 22054  00198C  90D8               	bcf	status,0,c
 22055  00198E  3373               	rrcf	___fladd@grs& (0+255),f,b
 22056  001990                     l2563:
 22057                           
 22058                           ; BSR set to: 0
 22059                           
 22060                           ; BSR set to: 0
 22061  001990  B160               	btfsc	___fladd@b& (0+255),0,b
 22062                           
 22063                           ; BSR set to: 0
 22064  001992  8F73               	bsf	___fladd@grs& (0+255),7,b
 22065                           
 22066                           ; BSR set to: 0
 22067                           
 22068                           ; BSR set to: 0
 22069  001994  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 22070  001996  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 22071  001998  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 22072  00199A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 22073  00199C  3360               	rrcf	___fladd@b& (0+255),f,b
 22074                           
 22075                           ; BSR set to: 0
 22076  00199E  2B72               	incf	___fladd@bexp& (0+255),f,b
 22077                           
 22078                           ; BSR set to: 0
 22079  0019A0  D070               	goto	u6800
 22080  0019A2                     l2558:
 22081                           
 22082                           ; BSR set to: 0
 22083                           
 22084                           ; BSR set to: 0
 22085  0019A2  5164               	movf	___fladd@a& (0+255),w,b
 22086  0019A4  5D60               	subwf	___fladd@b& (0+255),w,b
 22087  0019A6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 22088  0019A8  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 22089  0019AA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 22090  0019AC  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 22091  0019AE  5163               	movf	(___fladd@b+3)& (0+255),w,b
 22092  0019B0  0A80               	xorlw	128
 22093  0019B2  6F68               	movwf	??___fladd& (0+255),b
 22094  0019B4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 22095  0019B6  0A80               	xorlw	128
 22096  0019B8  5968               	subwfb	??___fladd& (0+255),w,b
 22097  0019BA  B0D8               	btfsc	status,0,c
 22098  0019BC  D036               	goto	l2566
 22099                           
 22100                           ; BSR set to: 0
 22101  0019BE  C060  F068         	movff	___fladd@b,??___fladd
 22102  0019C2  C061  F069         	movff	___fladd@b+1,??___fladd+1
 22103  0019C6  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 22104  0019CA  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 22105  0019CE  1F68               	comf	??___fladd& (0+255),f,b
 22106  0019D0  1F69               	comf	(??___fladd+1)& (0+255),f,b
 22107  0019D2  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 22108  0019D4  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 22109  0019D6  2B68               	incf	??___fladd& (0+255),f,b
 22110  0019D8  0E00               	movlw	0
 22111  0019DA  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 22112  0019DC  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 22113  0019DE  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 22114  0019E0  5164               	movf	___fladd@a& (0+255),w,b
 22115  0019E2  2568               	addwf	??___fladd& (0+255),w,b
 22116  0019E4  6F6C               	movwf	(??___fladd+4)& (0+255),b
 22117  0019E6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 22118  0019E8  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 22119  0019EA  6F6D               	movwf	(??___fladd+5)& (0+255),b
 22120  0019EC  5166               	movf	(___fladd@a+2)& (0+255),w,b
 22121  0019EE  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 22122  0019F0  6F6E               	movwf	(??___fladd+6)& (0+255),b
 22123  0019F2  5167               	movf	(___fladd@a+3)& (0+255),w,b
 22124  0019F4  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 22125  0019F6  6F6F               	movwf	(??___fladd+7)& (0+255),b
 22126  0019F8  0EFF               	movlw	255
 22127  0019FA  256C               	addwf	(??___fladd+4)& (0+255),w,b
 22128  0019FC  6F60               	movwf	___fladd@b& (0+255),b
 22129  0019FE  0EFF               	movlw	255
 22130  001A00  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 22131  001A02  6F61               	movwf	(___fladd@b+1)& (0+255),b
 22132  001A04  0EFF               	movlw	255
 22133  001A06  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 22134  001A08  6F62               	movwf	(___fladd@b+2)& (0+255),b
 22135  001A0A  0EFF               	movlw	255
 22136  001A0C  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 22137  001A0E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 22138  001A10  0E80               	movlw	128
 22139  001A12  1B70               	xorwf	___fladd@signs& (0+255),f,b
 22140                           
 22141                           ; BSR set to: 0
 22142  001A14  6D73               	negf	___fladd@grs& (0+255),b
 22143                           
 22144                           ; BSR set to: 0
 22145  001A16  5173               	movf	___fladd@grs& (0+255),w,b
 22146  001A18  A4D8               	btfss	status,2,c
 22147  001A1A  D00F               	goto	l2568
 22148                           
 22149                           ; BSR set to: 0
 22150  001A1C  0E01               	movlw	1
 22151  001A1E  2760               	addwf	___fladd@b& (0+255),f,b
 22152  001A20  0E00               	movlw	0
 22153  001A22  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 22154  001A24  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 22155  001A26  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 22156                           
 22157                           ; BSR set to: 0
 22158  001A28  D008               	goto	l2568
 22159  001A2A                     l2566:
 22160                           
 22161                           ; BSR set to: 0
 22162                           
 22163                           ; BSR set to: 0
 22164  001A2A  5164               	movf	___fladd@a& (0+255),w,b
 22165  001A2C  5F60               	subwf	___fladd@b& (0+255),f,b
 22166  001A2E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 22167  001A30  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 22168  001A32  5166               	movf	(___fladd@a+2)& (0+255),w,b
 22169  001A34  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 22170  001A36  5167               	movf	(___fladd@a+3)& (0+255),w,b
 22171  001A38  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 22172  001A3A                     l2568:
 22173                           
 22174                           ; BSR set to: 0
 22175  001A3A  5160               	movf	___fladd@b& (0+255),w,b
 22176  001A3C  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 22177  001A3E  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 22178  001A40  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 22179  001A42  A4D8               	btfss	status,2,c
 22180  001A44  D01C               	goto	l2575
 22181                           
 22182                           ; BSR set to: 0
 22183  001A46  5173               	movf	___fladd@grs& (0+255),w,b
 22184  001A48  A4D8               	btfss	status,2,c
 22185  001A4A  D019               	goto	l2575
 22186                           
 22187                           ; BSR set to: 0
 22188  001A4C  0E00               	movlw	0
 22189  001A4E  6F60               	movwf	?___fladd& (0+255),b
 22190  001A50  0E00               	movlw	0
 22191  001A52  6F61               	movwf	(?___fladd+1)& (0+255),b
 22192  001A54  0E00               	movlw	0
 22193  001A56  6F62               	movwf	(?___fladd+2)& (0+255),b
 22194  001A58  0E00               	movlw	0
 22195  001A5A  6F63               	movwf	(?___fladd+3)& (0+255),b
 22196                           
 22197                           ; BSR set to: 0
 22198  001A5C  0012               	return	
 22199  001A5E                     
 22200                           ; BSR set to: 0
 22201                           
 22202                           ; BSR set to: 0
 22203  001A5E  90D8               	bcf	status,0,c
 22204  001A60  3760               	rlcf	___fladd@b& (0+255),f,b
 22205  001A62  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 22206  001A64  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 22207  001A66  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 22208                           
 22209                           ; BSR set to: 0
 22210  001A68  BF73               	btfsc	___fladd@grs& (0+255),7,b
 22211                           
 22212                           ; BSR set to: 0
 22213  001A6A  8160               	bsf	___fladd@b& (0+255),0,b
 22214                           
 22215                           ; BSR set to: 0
 22216                           
 22217                           ; BSR set to: 0
 22218  001A6C  A173               	btfss	___fladd@grs& (0+255),0,b
 22219  001A6E  D002               	goto	l2573
 22220                           
 22221                           ; BSR set to: 0
 22222  001A70  80D8               	bsf	status,0,c
 22223  001A72  D001               	goto	L35
 22224  001A74                     l2573:
 22225                           
 22226                           ; BSR set to: 0
 22227                           
 22228                           ; BSR set to: 0
 22229  001A74  90D8               	bcf	status,0,c
 22230  001A76                     L35:
 22231  001A76  3773               	rlcf	___fladd@grs& (0+255),f,b
 22232                           
 22233                           ; BSR set to: 0
 22234                           
 22235                           ; BSR set to: 0
 22236  001A78  5172               	movf	___fladd@bexp& (0+255),w,b
 22237  001A7A  A4D8               	btfss	status,2,c
 22238                           
 22239                           ; BSR set to: 0
 22240  001A7C  0772               	decf	___fladd@bexp& (0+255),f,b
 22241  001A7E                     l2575:
 22242                           
 22243                           ; BSR set to: 0
 22244                           
 22245                           ; BSR set to: 0
 22246                           
 22247                           ; BSR set to: 0
 22248  001A7E  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 22249  001A80  D7EE               	goto	l2571
 22250  001A82                     u6800:
 22251                           
 22252                           ; BSR set to: 0
 22253                           
 22254                           ; BSR set to: 0
 22255                           
 22256                           ; BSR set to: 0
 22257  001A82  0E00               	movlw	0
 22258  001A84  6F71               	movwf	___fladd@aexp& (0+255),b
 22259                           
 22260                           ; BSR set to: 0
 22261  001A86  AF73               	btfss	___fladd@grs& (0+255),7,b
 22262  001A88  D00A               	goto	l2580
 22263                           
 22264                           ; BSR set to: 0
 22265  001A8A  C073  F068         	movff	___fladd@grs,??___fladd
 22266  001A8E  0E7F               	movlw	127
 22267  001A90  1768               	andwf	??___fladd& (0+255),f,b
 22268  001A92  A4D8               	btfss	status,2,c
 22269  001A94  D002               	goto	u6830
 22270                           
 22271                           ; BSR set to: 0
 22272                           
 22273                           ; BSR set to: 0
 22274  001A96  A160               	btfss	___fladd@b& (0+255),0,b
 22275  001A98  D002               	goto	l2580
 22276  001A9A                     u6830:
 22277                           
 22278                           ; BSR set to: 0
 22279  001A9A  0E01               	movlw	1
 22280  001A9C  6F71               	movwf	___fladd@aexp& (0+255),b
 22281  001A9E                     l2580:
 22282                           
 22283                           ; BSR set to: 0
 22284                           
 22285                           ; BSR set to: 0
 22286                           
 22287                           ; BSR set to: 0
 22288  001A9E  5171               	movf	___fladd@aexp& (0+255),w,b
 22289  001AA0  B4D8               	btfsc	status,2,c
 22290  001AA2  D020               	goto	l2583
 22291                           
 22292                           ; BSR set to: 0
 22293  001AA4  0E01               	movlw	1
 22294  001AA6  2760               	addwf	___fladd@b& (0+255),f,b
 22295  001AA8  0E00               	movlw	0
 22296  001AAA  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 22297  001AAC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 22298  001AAE  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 22299                           
 22300                           ; BSR set to: 0
 22301  001AB0  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 22302  001AB2  D018               	goto	l2583
 22303                           
 22304                           ; BSR set to: 0
 22305  001AB4  C060  F068         	movff	___fladd@b,??___fladd
 22306  001AB8  C061  F069         	movff	___fladd@b+1,??___fladd+1
 22307  001ABC  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 22308  001AC0  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 22309  001AC4  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 22310  001AC6  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 22311  001AC8  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 22312  001ACA  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 22313  001ACC  3368               	rrcf	??___fladd& (0+255),f,b
 22314  001ACE  C068  F060         	movff	??___fladd,___fladd@b
 22315  001AD2  C069  F061         	movff	??___fladd+1,___fladd@b+1
 22316  001AD6  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 22317  001ADA  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 22318  001ADE  2972               	incf	___fladd@bexp& (0+255),w,b
 22319  001AE0  A4D8               	btfss	status,2,c
 22320                           
 22321                           ; BSR set to: 0
 22322  001AE2  2B72               	incf	___fladd@bexp& (0+255),f,b
 22323  001AE4                     l2583:
 22324                           
 22325                           ; BSR set to: 0
 22326                           
 22327                           ; BSR set to: 0
 22328                           
 22329                           ; BSR set to: 0
 22330                           
 22331                           ; BSR set to: 0
 22332  001AE4  2972               	incf	___fladd@bexp& (0+255),w,b
 22333  001AE6  B4D8               	btfsc	status,2,c
 22334  001AE8  D003               	goto	u6880
 22335                           
 22336                           ; BSR set to: 0
 22337  001AEA  5172               	movf	___fladd@bexp& (0+255),w,b
 22338  001AEC  A4D8               	btfss	status,2,c
 22339  001AEE  D00D               	goto	l2587
 22340  001AF0                     u6880:
 22341                           
 22342                           ; BSR set to: 0
 22343                           
 22344                           ; BSR set to: 0
 22345  001AF0  0E00               	movlw	0
 22346  001AF2  6F60               	movwf	___fladd@b& (0+255),b
 22347  001AF4  0E00               	movlw	0
 22348  001AF6  6F61               	movwf	(___fladd@b+1)& (0+255),b
 22349  001AF8  0E00               	movlw	0
 22350  001AFA  6F62               	movwf	(___fladd@b+2)& (0+255),b
 22351  001AFC  0E00               	movlw	0
 22352  001AFE  6F63               	movwf	(___fladd@b+3)& (0+255),b
 22353  001B00  5172               	movf	___fladd@bexp& (0+255),w,b
 22354  001B02  A4D8               	btfss	status,2,c
 22355  001B04  D002               	goto	l2587
 22356                           
 22357                           ; BSR set to: 0
 22358  001B06  0E00               	movlw	0
 22359  001B08  6F70               	movwf	___fladd@signs& (0+255),b
 22360  001B0A                     l2587:
 22361                           
 22362                           ; BSR set to: 0
 22363                           
 22364                           ; BSR set to: 0
 22365                           
 22366                           ; BSR set to: 0
 22367  001B0A  A172               	btfss	___fladd@bexp& (0+255),0,b
 22368  001B0C  D002               	goto	l2588
 22369                           
 22370                           ; BSR set to: 0
 22371  001B0E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 22372  001B10  D001               	goto	l2589
 22373  001B12                     l2588:
 22374                           
 22375                           ; BSR set to: 0
 22376                           
 22377                           ; BSR set to: 0
 22378  001B12  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 22379  001B14                     l2589:
 22380                           
 22381                           ; BSR set to: 0
 22382                           
 22383                           ; BSR set to: 0
 22384  001B14  90D8               	bcf	status,0,c
 22385  001B16  3172               	rrcf	___fladd@bexp& (0+255),w,b
 22386  001B18  6F63               	movwf	(___fladd@b+3)& (0+255),b
 22387                           
 22388                           ; BSR set to: 0
 22389  001B1A  BF70               	btfsc	___fladd@signs& (0+255),7,b
 22390                           
 22391                           ; BSR set to: 0
 22392  001B1C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 22393                           
 22394                           ; BSR set to: 0
 22395                           
 22396                           ; BSR set to: 0
 22397  001B1E  C060  F060         	movff	___fladd@b,?___fladd
 22398  001B22  C061  F061         	movff	___fladd@b+1,?___fladd+1
 22399  001B26  C062  F062         	movff	___fladd@b+2,?___fladd+2
 22400  001B2A  C063  F063         	movff	___fladd@b+3,?___fladd+3
 22401  001B2E  0012               	return	
 22402  001B30                     __end_of___fladd:
 22403                           	opt stack 0
 22404                           tblptru	equ	0xFF8
 22405                           tblptrh	equ	0xFF7
 22406                           tblptrl	equ	0xFF6
 22407                           tablat	equ	0xFF5
 22408                           prodh	equ	0xFF4
 22409                           prodl	equ	0xFF3
 22410                           intcon	equ	0xFF2
 22411                           intcon3	equ	0xFF0
 22412                           indf0	equ	0xFEF
 22413                           postinc0	equ	0xFEE
 22414                           fsr0h	equ	0xFEA
 22415                           fsr0l	equ	0xFE9
 22416                           wreg	equ	0xFE8
 22417                           indf1	equ	0xFE7
 22418                           postdec1	equ	0xFE5
 22419                           fsr1h	equ	0xFE2
 22420                           fsr1l	equ	0xFE1
 22421                           indf2	equ	0xFDF
 22422                           postinc2	equ	0xFDE
 22423                           postdec2	equ	0xFDD
 22424                           plusw2	equ	0xFDB
 22425                           fsr2h	equ	0xFDA
 22426                           fsr2l	equ	0xFD9
 22427                           status	equ	0xFD8
 22428                           
 22429 ;; *************** function _EUSART_FlushBuffer *****************
 22430 ;; Defined at:
 22431 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 22432 ;; Parameters:    Size  Location     Type
 22433 ;;		None
 22434 ;; Auto vars:     Size  Location     Type
 22435 ;;  index           1    0[BANK0 ] unsigned char 
 22436 ;; Return value:  Size  Location     Type
 22437 ;;                  1    wreg      void 
 22438 ;; Registers used:
 22439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22440 ;; Tracked objects:
 22441 ;;		On entry : 0/0
 22442 ;;		On exit  : 0/0
 22443 ;;		Unchanged: 0/0
 22444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22445 ;;      Params:         0       0       0       0       0       0       0       0       0
 22446 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22448 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22449 ;;Total ram usage:        1 bytes
 22450 ;; Hardware stack levels used:    1
 22451 ;; Hardware stack levels required when called:   11
 22452 ;; This function calls:
 22453 ;;		Nothing
 22454 ;; This function is called by:
 22455 ;;		_moteApp_GoToSleep
 22456 ;;		_PICoRa_test_powerup
 22457 ;; This function uses a non-reentrant model
 22458 ;;
 22459                           
 22460                           	psect	text88
 22461  004FD8                     __ptext88:
 22462                           	opt stack 0
 22463  004FD8                     _EUSART_FlushBuffer:
 22464                           	opt stack 16
 22465                           
 22466                           ;eusart.c: 204: uint8_t index;
 22467                           ;eusart.c: 205: for (index=0; index < 64; index++)
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;incstack = 0
 22471  004FD8  0E00               	movlw	0
 22472  004FDA  0100               	movlb	0	; () banked
 22473  004FDC  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 22474  004FDE                     l8140:
 22475                           
 22476                           ; BSR set to: 0
 22477  004FDE  0E3F               	movlw	63
 22478  004FE0  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 22479  004FE2  D001               	goto	l1077
 22480  004FE4  D00C               	goto	u6310
 22481  004FE6                     l1077:
 22482                           
 22483                           ; BSR set to: 0
 22484                           ;eusart.c: 206: {
 22485                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 22486                           
 22487                           ; BSR set to: 0
 22488  004FE6  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 22489  004FE8  0D01               	mullw	1
 22490  004FEA  0E00               	movlw	low _eusartRxBuffer
 22491  004FEC  24F3               	addwf	prodl,w,c
 22492  004FEE  6ED9               	movwf	fsr2l,c
 22493  004FF0  0E02               	movlw	high _eusartRxBuffer
 22494  004FF2  20F4               	addwfc	prodh,w,c
 22495  004FF4  6EDA               	movwf	fsr2h,c
 22496  004FF6  0E00               	movlw	0
 22497  004FF8  6EDF               	movwf	indf2,c
 22498                           
 22499                           ; BSR set to: 0
 22500  004FFA  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 22501  004FFC  D7F0               	goto	l8140
 22502  004FFE                     u6310:
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;eusart.c: 208: }
 22506                           ;eusart.c: 209: eusartRxHead = 0;
 22507                           
 22508                           ; BSR set to: 0
 22509  004FFE  0E00               	movlw	0
 22510  005000  6FE0               	movwf	_eusartRxHead& (0+255),b
 22511                           
 22512                           ;eusart.c: 210: eusartRxTail = 0;
 22513  005002  0E00               	movlw	0
 22514  005004  6FDF               	movwf	_eusartRxTail& (0+255),b
 22515                           
 22516                           ;eusart.c: 211: eusartRxCount = 0;
 22517  005006  0E00               	movlw	0
 22518  005008  6FF4               	movwf	_eusartRxCount& (0+255),b	;volatile
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 22522  00500A  989D               	bcf	3997,4,c	;volatile
 22523                           
 22524                           ;eusart.c: 214: eusartTxHead = 0;
 22525  00500C  0E00               	movlw	0
 22526  00500E  6FE3               	movwf	_eusartTxHead& (0+255),b
 22527                           
 22528                           ;eusart.c: 215: eusartTxTail = 0;
 22529  005010  0E00               	movlw	0
 22530  005012  6FE2               	movwf	_eusartTxTail& (0+255),b
 22531                           
 22532                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22533  005014  0E40               	movlw	64
 22534  005016  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 22535                           
 22536                           ; BSR set to: 0
 22537  005018  0012               	return		;funcret
 22538  00501A                     __end_of_EUSART_FlushBuffer:
 22539                           	opt stack 0
 22540                           tblptru	equ	0xFF8
 22541                           tblptrh	equ	0xFF7
 22542                           tblptrl	equ	0xFF6
 22543                           tablat	equ	0xFF5
 22544                           prodh	equ	0xFF4
 22545                           prodl	equ	0xFF3
 22546                           intcon	equ	0xFF2
 22547                           intcon3	equ	0xFF0
 22548                           indf0	equ	0xFEF
 22549                           postinc0	equ	0xFEE
 22550                           fsr0h	equ	0xFEA
 22551                           fsr0l	equ	0xFE9
 22552                           wreg	equ	0xFE8
 22553                           indf1	equ	0xFE7
 22554                           postdec1	equ	0xFE5
 22555                           fsr1h	equ	0xFE2
 22556                           fsr1l	equ	0xFE1
 22557                           indf2	equ	0xFDF
 22558                           postinc2	equ	0xFDE
 22559                           postdec2	equ	0xFDD
 22560                           plusw2	equ	0xFDB
 22561                           fsr2h	equ	0xFDA
 22562                           fsr2l	equ	0xFD9
 22563                           status	equ	0xFD8
 22564                           
 22565 ;; *************** function _PICoRa_Initialize *****************
 22566 ;; Defined at:
 22567 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 22568 ;; Parameters:    Size  Location     Type
 22569 ;;		None
 22570 ;; Auto vars:     Size  Location     Type
 22571 ;;		None
 22572 ;; Return value:  Size  Location     Type
 22573 ;;                  1    wreg      void 
 22574 ;; Registers used:
 22575 ;;		wreg, status,2, status,0, cstack
 22576 ;; Tracked objects:
 22577 ;;		On entry : 0/0
 22578 ;;		On exit  : 0/0
 22579 ;;		Unchanged: 0/0
 22580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22581 ;;      Params:         0       0       0       0       0       0       0       0       0
 22582 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22583 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22584 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22585 ;;Total ram usage:        0 bytes
 22586 ;; Hardware stack levels used:    1
 22587 ;; Hardware stack levels required when called:   13
 22588 ;; This function calls:
 22589 ;;		_ADC_Initialize
 22590 ;;		_CMP1_Initialize
 22591 ;;		_EUSART_Initialize
 22592 ;;		_OSCILLATOR_Initialize
 22593 ;;		_PIN_MANAGER_Initialize
 22594 ;;		_TMR1_Initialize
 22595 ;;		_TMR2_Initialize
 22596 ;;		_TMR3_Initialize
 22597 ;; This function is called by:
 22598 ;;		_main
 22599 ;; This function uses a non-reentrant model
 22600 ;;
 22601                           
 22602                           	psect	text89
 22603  005562                     __ptext89:
 22604                           	opt stack 0
 22605  005562                     _PICoRa_Initialize:
 22606                           	opt stack 17
 22607                           
 22608                           ;mcc.c: 95: OSCILLATOR_Initialize();
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;incstack = 0
 22612  005562  EC2F  F02B         	call	_OSCILLATOR_Initialize	;wreg free
 22613                           
 22614                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 22615  005566  EC80  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 22616                           
 22617                           ;mcc.c: 98: TMR1_Initialize();
 22618  00556A  EC69  F029         	call	_TMR1_Initialize	;wreg free
 22619                           
 22620                           ;mcc.c: 99: TMR2_Initialize();
 22621  00556E  EC63  F02B         	call	_TMR2_Initialize	;wreg free
 22622                           
 22623                           ;mcc.c: 100: TMR3_Initialize();
 22624  005572  ECC2  F02A         	call	_TMR3_Initialize	;wreg free
 22625                           
 22626                           ;mcc.c: 101: EUSART_Initialize();
 22627  005576  ECE5  F028         	call	_EUSART_Initialize	;wreg free
 22628                           
 22629                           ;mcc.c: 102: ADC_Initialize();
 22630  00557A  EC0C  F02B         	call	_ADC_Initialize	;wreg free
 22631                           
 22632                           ;mcc.c: 103: CMP1_Initialize();
 22633  00557E  EC6D  F02B         	call	_CMP1_Initialize	;wreg free
 22634  005582  0012               	return		;funcret
 22635  005584                     __end_of_PICoRa_Initialize:
 22636                           	opt stack 0
 22637                           tblptru	equ	0xFF8
 22638                           tblptrh	equ	0xFF7
 22639                           tblptrl	equ	0xFF6
 22640                           tablat	equ	0xFF5
 22641                           prodh	equ	0xFF4
 22642                           prodl	equ	0xFF3
 22643                           intcon	equ	0xFF2
 22644                           intcon3	equ	0xFF0
 22645                           indf0	equ	0xFEF
 22646                           postinc0	equ	0xFEE
 22647                           fsr0h	equ	0xFEA
 22648                           fsr0l	equ	0xFE9
 22649                           wreg	equ	0xFE8
 22650                           indf1	equ	0xFE7
 22651                           postdec1	equ	0xFE5
 22652                           fsr1h	equ	0xFE2
 22653                           fsr1l	equ	0xFE1
 22654                           indf2	equ	0xFDF
 22655                           postinc2	equ	0xFDE
 22656                           postdec2	equ	0xFDD
 22657                           plusw2	equ	0xFDB
 22658                           fsr2h	equ	0xFDA
 22659                           fsr2l	equ	0xFD9
 22660                           status	equ	0xFD8
 22661                           
 22662 ;; *************** function _TMR3_Initialize *****************
 22663 ;; Defined at:
 22664 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22665 ;; Parameters:    Size  Location     Type
 22666 ;;		None
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;		None
 22669 ;; Return value:  Size  Location     Type
 22670 ;;                  1    wreg      void 
 22671 ;; Registers used:
 22672 ;;		wreg, status,2, cstack
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/0
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22678 ;;      Params:         0       0       0       0       0       0       0       0       0
 22679 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22680 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22681 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22682 ;;Total ram usage:        0 bytes
 22683 ;; Hardware stack levels used:    1
 22684 ;; Hardware stack levels required when called:   12
 22685 ;; This function calls:
 22686 ;;		_TMR3_StartTimer
 22687 ;; This function is called by:
 22688 ;;		_PICoRa_Initialize
 22689 ;; This function uses a non-reentrant model
 22690 ;;
 22691                           
 22692                           	psect	text90
 22693  005584                     __ptext90:
 22694                           	opt stack 0
 22695  005584                     _TMR3_Initialize:
 22696                           	opt stack 17
 22697                           
 22698                           ;tmr3.c: 72: T3CON = 0x04;
 22699                           
 22700                           ;incstack = 0
 22701  005584  0E04               	movlw	4
 22702  005586  6EB1               	movwf	4017,c	;volatile
 22703                           
 22704                           ;tmr3.c: 75: T3GCON = 0x00;
 22705  005588  0E00               	movlw	0
 22706  00558A  6EB4               	movwf	4020,c	;volatile
 22707                           
 22708                           ;tmr3.c: 78: TMR3H = 0xD5;
 22709  00558C  0ED5               	movlw	213
 22710  00558E  6EB3               	movwf	4019,c	;volatile
 22711                           
 22712                           ;tmr3.c: 81: TMR3L = 0xD0;
 22713  005590  0ED0               	movlw	208
 22714  005592  6EB2               	movwf	4018,c	;volatile
 22715                           
 22716                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22717  005594  CFB2 F038          	movff	4018,_timer3ReloadVal	;volatile
 22718  005598  CFB3 F039          	movff	4019,_timer3ReloadVal+1	;volatile
 22719                           
 22720                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22721  00559C  92A1               	bcf	4001,1,c	;volatile
 22722                           
 22723                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22724  00559E  82A0               	bsf	4000,1,c	;volatile
 22725                           
 22726                           ;tmr3.c: 93: TMR3_StartTimer();
 22727  0055A0  ECDC  F02B         	call	_TMR3_StartTimer	;wreg free
 22728  0055A4  0012               	return		;funcret
 22729  0055A6                     __end_of_TMR3_Initialize:
 22730                           	opt stack 0
 22731                           tblptru	equ	0xFF8
 22732                           tblptrh	equ	0xFF7
 22733                           tblptrl	equ	0xFF6
 22734                           tablat	equ	0xFF5
 22735                           prodh	equ	0xFF4
 22736                           prodl	equ	0xFF3
 22737                           intcon	equ	0xFF2
 22738                           intcon3	equ	0xFF0
 22739                           indf0	equ	0xFEF
 22740                           postinc0	equ	0xFEE
 22741                           fsr0h	equ	0xFEA
 22742                           fsr0l	equ	0xFE9
 22743                           wreg	equ	0xFE8
 22744                           indf1	equ	0xFE7
 22745                           postdec1	equ	0xFE5
 22746                           fsr1h	equ	0xFE2
 22747                           fsr1l	equ	0xFE1
 22748                           indf2	equ	0xFDF
 22749                           postinc2	equ	0xFDE
 22750                           postdec2	equ	0xFDD
 22751                           plusw2	equ	0xFDB
 22752                           fsr2h	equ	0xFDA
 22753                           fsr2l	equ	0xFD9
 22754                           status	equ	0xFD8
 22755                           
 22756 ;; *************** function _TMR3_StartTimer *****************
 22757 ;; Defined at:
 22758 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;		None
 22761 ;; Auto vars:     Size  Location     Type
 22762 ;;		None
 22763 ;; Return value:  Size  Location     Type
 22764 ;;                  1    wreg      void 
 22765 ;; Registers used:
 22766 ;;		None
 22767 ;; Tracked objects:
 22768 ;;		On entry : 0/0
 22769 ;;		On exit  : 0/0
 22770 ;;		Unchanged: 0/0
 22771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22772 ;;      Params:         0       0       0       0       0       0       0       0       0
 22773 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22774 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22775 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22776 ;;Total ram usage:        0 bytes
 22777 ;; Hardware stack levels used:    1
 22778 ;; Hardware stack levels required when called:   11
 22779 ;; This function calls:
 22780 ;;		Nothing
 22781 ;; This function is called by:
 22782 ;;		_TMR3_Initialize
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text91
 22787  0057B8                     __ptext91:
 22788                           	opt stack 0
 22789  0057B8                     _TMR3_StartTimer:
 22790                           	opt stack 17
 22791                           
 22792                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22793                           
 22794                           ;incstack = 0
 22795  0057B8  80B1               	bsf	4017,0,c	;volatile
 22796  0057BA  0012               	return		;funcret
 22797  0057BC                     __end_of_TMR3_StartTimer:
 22798                           	opt stack 0
 22799                           tblptru	equ	0xFF8
 22800                           tblptrh	equ	0xFF7
 22801                           tblptrl	equ	0xFF6
 22802                           tablat	equ	0xFF5
 22803                           prodh	equ	0xFF4
 22804                           prodl	equ	0xFF3
 22805                           intcon	equ	0xFF2
 22806                           intcon3	equ	0xFF0
 22807                           indf0	equ	0xFEF
 22808                           postinc0	equ	0xFEE
 22809                           fsr0h	equ	0xFEA
 22810                           fsr0l	equ	0xFE9
 22811                           wreg	equ	0xFE8
 22812                           indf1	equ	0xFE7
 22813                           postdec1	equ	0xFE5
 22814                           fsr1h	equ	0xFE2
 22815                           fsr1l	equ	0xFE1
 22816                           indf2	equ	0xFDF
 22817                           postinc2	equ	0xFDE
 22818                           postdec2	equ	0xFDD
 22819                           plusw2	equ	0xFDB
 22820                           fsr2h	equ	0xFDA
 22821                           fsr2l	equ	0xFD9
 22822                           status	equ	0xFD8
 22823                           
 22824 ;; *************** function _TMR2_Initialize *****************
 22825 ;; Defined at:
 22826 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22827 ;; Parameters:    Size  Location     Type
 22828 ;;		None
 22829 ;; Auto vars:     Size  Location     Type
 22830 ;;		None
 22831 ;; Return value:  Size  Location     Type
 22832 ;;                  1    wreg      void 
 22833 ;; Registers used:
 22834 ;;		wreg, status,2, cstack
 22835 ;; Tracked objects:
 22836 ;;		On entry : 0/0
 22837 ;;		On exit  : 0/0
 22838 ;;		Unchanged: 0/0
 22839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22840 ;;      Params:         0       0       0       0       0       0       0       0       0
 22841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22844 ;;Total ram usage:        0 bytes
 22845 ;; Hardware stack levels used:    1
 22846 ;; Hardware stack levels required when called:   12
 22847 ;; This function calls:
 22848 ;;		_TMR2_StartTimer
 22849 ;; This function is called by:
 22850 ;;		_PICoRa_Initialize
 22851 ;; This function uses a non-reentrant model
 22852 ;;
 22853                           
 22854                           	psect	text92
 22855  0056C6                     __ptext92:
 22856                           	opt stack 0
 22857  0056C6                     _TMR2_Initialize:
 22858                           	opt stack 17
 22859                           
 22860                           ;tmr2.c: 62: T2CON = 0x7A;
 22861                           
 22862                           ;incstack = 0
 22863  0056C6  0E7A               	movlw	122
 22864  0056C8  6EBA               	movwf	4026,c	;volatile
 22865                           
 22866                           ;tmr2.c: 65: PR2 = 0x9B;
 22867  0056CA  0E9B               	movlw	155
 22868  0056CC  6EBB               	movwf	4027,c	;volatile
 22869                           
 22870                           ;tmr2.c: 68: TMR2 = 0x00;
 22871  0056CE  0E00               	movlw	0
 22872  0056D0  6EBC               	movwf	4028,c	;volatile
 22873                           
 22874                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22875  0056D2  929E               	bcf	3998,1,c	;volatile
 22876                           
 22877                           ;tmr2.c: 74: TMR2_StartTimer();
 22878  0056D4  ECDE  F02B         	call	_TMR2_StartTimer	;wreg free
 22879  0056D8  0012               	return		;funcret
 22880  0056DA                     __end_of_TMR2_Initialize:
 22881                           	opt stack 0
 22882                           tblptru	equ	0xFF8
 22883                           tblptrh	equ	0xFF7
 22884                           tblptrl	equ	0xFF6
 22885                           tablat	equ	0xFF5
 22886                           prodh	equ	0xFF4
 22887                           prodl	equ	0xFF3
 22888                           intcon	equ	0xFF2
 22889                           intcon3	equ	0xFF0
 22890                           indf0	equ	0xFEF
 22891                           postinc0	equ	0xFEE
 22892                           fsr0h	equ	0xFEA
 22893                           fsr0l	equ	0xFE9
 22894                           wreg	equ	0xFE8
 22895                           indf1	equ	0xFE7
 22896                           postdec1	equ	0xFE5
 22897                           fsr1h	equ	0xFE2
 22898                           fsr1l	equ	0xFE1
 22899                           indf2	equ	0xFDF
 22900                           postinc2	equ	0xFDE
 22901                           postdec2	equ	0xFDD
 22902                           plusw2	equ	0xFDB
 22903                           fsr2h	equ	0xFDA
 22904                           fsr2l	equ	0xFD9
 22905                           status	equ	0xFD8
 22906                           
 22907 ;; *************** function _TMR2_StartTimer *****************
 22908 ;; Defined at:
 22909 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;		None
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;		None
 22914 ;; Return value:  Size  Location     Type
 22915 ;;                  1    wreg      void 
 22916 ;; Registers used:
 22917 ;;		None
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/0
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0
 22924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22927 ;;Total ram usage:        0 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:   11
 22930 ;; This function calls:
 22931 ;;		Nothing
 22932 ;; This function is called by:
 22933 ;;		_TMR2_Initialize
 22934 ;; This function uses a non-reentrant model
 22935 ;;
 22936                           
 22937                           	psect	text93
 22938  0057BC                     __ptext93:
 22939                           	opt stack 0
 22940  0057BC                     _TMR2_StartTimer:
 22941                           	opt stack 17
 22942                           
 22943                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22944                           
 22945                           ;incstack = 0
 22946  0057BC  84BA               	bsf	4026,2,c	;volatile
 22947  0057BE  0012               	return		;funcret
 22948  0057C0                     __end_of_TMR2_StartTimer:
 22949                           	opt stack 0
 22950                           tblptru	equ	0xFF8
 22951                           tblptrh	equ	0xFF7
 22952                           tblptrl	equ	0xFF6
 22953                           tablat	equ	0xFF5
 22954                           prodh	equ	0xFF4
 22955                           prodl	equ	0xFF3
 22956                           intcon	equ	0xFF2
 22957                           intcon3	equ	0xFF0
 22958                           indf0	equ	0xFEF
 22959                           postinc0	equ	0xFEE
 22960                           fsr0h	equ	0xFEA
 22961                           fsr0l	equ	0xFE9
 22962                           wreg	equ	0xFE8
 22963                           indf1	equ	0xFE7
 22964                           postdec1	equ	0xFE5
 22965                           fsr1h	equ	0xFE2
 22966                           fsr1l	equ	0xFE1
 22967                           indf2	equ	0xFDF
 22968                           postinc2	equ	0xFDE
 22969                           postdec2	equ	0xFDD
 22970                           plusw2	equ	0xFDB
 22971                           fsr2h	equ	0xFDA
 22972                           fsr2l	equ	0xFD9
 22973                           status	equ	0xFD8
 22974                           
 22975 ;; *************** function _TMR1_Initialize *****************
 22976 ;; Defined at:
 22977 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22978 ;; Parameters:    Size  Location     Type
 22979 ;;		None
 22980 ;; Auto vars:     Size  Location     Type
 22981 ;;		None
 22982 ;; Return value:  Size  Location     Type
 22983 ;;                  1    wreg      void 
 22984 ;; Registers used:
 22985 ;;		wreg, status,2, status,0, cstack
 22986 ;; Tracked objects:
 22987 ;;		On entry : 0/0
 22988 ;;		On exit  : 0/0
 22989 ;;		Unchanged: 0/0
 22990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22991 ;;      Params:         0       0       0       0       0       0       0       0       0
 22992 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22993 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22994 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22995 ;;Total ram usage:        2 bytes
 22996 ;; Hardware stack levels used:    1
 22997 ;; Hardware stack levels required when called:   12
 22998 ;; This function calls:
 22999 ;;		_TMR1_StartTimer
 23000 ;; This function is called by:
 23001 ;;		_PICoRa_Initialize
 23002 ;; This function uses a non-reentrant model
 23003 ;;
 23004                           
 23005                           	psect	text94
 23006  0052D2                     __ptext94:
 23007                           	opt stack 0
 23008  0052D2                     _TMR1_Initialize:
 23009                           	opt stack 17
 23010                           
 23011                           ;tmr1.c: 68: T1CON = 0x00;
 23012                           
 23013                           ;incstack = 0
 23014  0052D2  0E00               	movlw	0
 23015  0052D4  6ECD               	movwf	4045,c	;volatile
 23016                           
 23017                           ;tmr1.c: 71: T1GCON = 0x00;
 23018  0052D6  0E00               	movlw	0
 23019  0052D8  6ECC               	movwf	4044,c	;volatile
 23020                           
 23021                           ;tmr1.c: 74: TMR1H = 0xD0;
 23022  0052DA  0ED0               	movlw	208
 23023  0052DC  6ECF               	movwf	4047,c	;volatile
 23024                           
 23025                           ;tmr1.c: 77: TMR1L = 0x20;
 23026  0052DE  0E20               	movlw	32
 23027  0052E0  6ECE               	movwf	4046,c	;volatile
 23028                           
 23029                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 23030  0052E2  50CE               	movf	4046,w,c	;volatile
 23031  0052E4  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 23032  0052E8  0100               	movlb	0	; () banked
 23033  0052EA  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 23034  0052EC  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23035  0052F0  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 23036  0052F2  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 23037  0052F4  6E3A               	movwf	_timer1ReloadVal,c	;volatile
 23038  0052F6  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 23039  0052F8  6E3B               	movwf	_timer1ReloadVal+1,c	;volatile
 23040                           
 23041                           ; BSR set to: 0
 23042                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 23043  0052FA  909E               	bcf	3998,0,c	;volatile
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 23047  0052FC  809D               	bsf	3997,0,c	;volatile
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;tmr1.c: 89: TMR1_StartTimer();
 23051  0052FE  ECE0  F02B         	call	_TMR1_StartTimer	;wreg free
 23052  005302  0012               	return		;funcret
 23053  005304                     __end_of_TMR1_Initialize:
 23054                           	opt stack 0
 23055                           tblptru	equ	0xFF8
 23056                           tblptrh	equ	0xFF7
 23057                           tblptrl	equ	0xFF6
 23058                           tablat	equ	0xFF5
 23059                           prodh	equ	0xFF4
 23060                           prodl	equ	0xFF3
 23061                           intcon	equ	0xFF2
 23062                           intcon3	equ	0xFF0
 23063                           indf0	equ	0xFEF
 23064                           postinc0	equ	0xFEE
 23065                           fsr0h	equ	0xFEA
 23066                           fsr0l	equ	0xFE9
 23067                           wreg	equ	0xFE8
 23068                           indf1	equ	0xFE7
 23069                           postdec1	equ	0xFE5
 23070                           fsr1h	equ	0xFE2
 23071                           fsr1l	equ	0xFE1
 23072                           indf2	equ	0xFDF
 23073                           postinc2	equ	0xFDE
 23074                           postdec2	equ	0xFDD
 23075                           plusw2	equ	0xFDB
 23076                           fsr2h	equ	0xFDA
 23077                           fsr2l	equ	0xFD9
 23078                           status	equ	0xFD8
 23079                           
 23080 ;; *************** function _TMR1_StartTimer *****************
 23081 ;; Defined at:
 23082 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23083 ;; Parameters:    Size  Location     Type
 23084 ;;		None
 23085 ;; Auto vars:     Size  Location     Type
 23086 ;;		None
 23087 ;; Return value:  Size  Location     Type
 23088 ;;                  1    wreg      void 
 23089 ;; Registers used:
 23090 ;;		None
 23091 ;; Tracked objects:
 23092 ;;		On entry : 0/0
 23093 ;;		On exit  : 0/0
 23094 ;;		Unchanged: 0/0
 23095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23096 ;;      Params:         0       0       0       0       0       0       0       0       0
 23097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23099 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23100 ;;Total ram usage:        0 bytes
 23101 ;; Hardware stack levels used:    1
 23102 ;; Hardware stack levels required when called:   11
 23103 ;; This function calls:
 23104 ;;		Nothing
 23105 ;; This function is called by:
 23106 ;;		_TMR1_Initialize
 23107 ;; This function uses a non-reentrant model
 23108 ;;
 23109                           
 23110                           	psect	text95
 23111  0057C0                     __ptext95:
 23112                           	opt stack 0
 23113  0057C0                     _TMR1_StartTimer:
 23114                           	opt stack 17
 23115                           
 23116                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23117                           
 23118                           ;incstack = 0
 23119  0057C0  80CD               	bsf	4045,0,c	;volatile
 23120  0057C2  0012               	return		;funcret
 23121  0057C4                     __end_of_TMR1_StartTimer:
 23122                           	opt stack 0
 23123                           tblptru	equ	0xFF8
 23124                           tblptrh	equ	0xFF7
 23125                           tblptrl	equ	0xFF6
 23126                           tablat	equ	0xFF5
 23127                           prodh	equ	0xFF4
 23128                           prodl	equ	0xFF3
 23129                           intcon	equ	0xFF2
 23130                           intcon3	equ	0xFF0
 23131                           indf0	equ	0xFEF
 23132                           postinc0	equ	0xFEE
 23133                           fsr0h	equ	0xFEA
 23134                           fsr0l	equ	0xFE9
 23135                           wreg	equ	0xFE8
 23136                           indf1	equ	0xFE7
 23137                           postdec1	equ	0xFE5
 23138                           fsr1h	equ	0xFE2
 23139                           fsr1l	equ	0xFE1
 23140                           indf2	equ	0xFDF
 23141                           postinc2	equ	0xFDE
 23142                           postdec2	equ	0xFDD
 23143                           plusw2	equ	0xFDB
 23144                           fsr2h	equ	0xFDA
 23145                           fsr2l	equ	0xFD9
 23146                           status	equ	0xFD8
 23147                           
 23148 ;; *************** function _PIN_MANAGER_Initialize *****************
 23149 ;; Defined at:
 23150 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;		None
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;		None
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1    wreg      void 
 23157 ;; Registers used:
 23158 ;;		wreg, status,2
 23159 ;; Tracked objects:
 23160 ;;		On entry : 0/0
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23164 ;;      Params:         0       0       0       0       0       0       0       0       0
 23165 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23167 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23168 ;;Total ram usage:        0 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; Hardware stack levels required when called:   11
 23171 ;; This function calls:
 23172 ;;		Nothing
 23173 ;; This function is called by:
 23174 ;;		_moteApp_GoToSleep
 23175 ;;		_PICoRa_Initialize
 23176 ;; This function uses a non-reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text96
 23180  004F00                     __ptext96:
 23181                           	opt stack 0
 23182  004F00                     _PIN_MANAGER_Initialize:
 23183                           	opt stack 16
 23184                           
 23185                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23186                           
 23187                           ;incstack = 0
 23188  004F00  8092               	bsf	3986,0,c	;volatile
 23189                           
 23190                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23191  004F02  8292               	bsf	3986,1,c	;volatile
 23192                           
 23193                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23194  004F04  8492               	bsf	3986,2,c	;volatile
 23195                           
 23196                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23197  004F06  8692               	bsf	3986,3,c	;volatile
 23198                           
 23199                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23200  004F08  948D               	bcf	3981,2,c	;volatile
 23201                           
 23202                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23203  004F0A  9496               	bcf	3990,2,c	;volatile
 23204                           
 23205                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23206  004F0C  9A92               	bcf	3986,5,c	;volatile
 23207                           
 23208                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23209  004F0E  9C92               	bcf	3986,6,c	;volatile
 23210                           
 23211                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23212  004F10  9E92               	bcf	3986,7,c	;volatile
 23213                           
 23214                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 23215  004F12  8293               	bsf	3987,1,c	;volatile
 23216                           
 23217                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 23218  004F14  8093               	bsf	3987,0,c	;volatile
 23219                           
 23220                           ;pin_manager.c: 68: TRISBbits.TRISB2 = 0;
 23221  004F16  9493               	bcf	3987,2,c	;volatile
 23222                           
 23223                           ;pin_manager.c: 69: TRISBbits.TRISB3 = 0;
 23224  004F18  9693               	bcf	3987,3,c	;volatile
 23225                           
 23226                           ;pin_manager.c: 70: TRISBbits.TRISB4 = 0;
 23227  004F1A  9893               	bcf	3987,4,c	;volatile
 23228                           
 23229                           ;pin_manager.c: 71: TRISBbits.TRISB5 = 0;
 23230  004F1C  9A93               	bcf	3987,5,c	;volatile
 23231                           
 23232                           ;pin_manager.c: 73: TRISCbits.TRISC0 = 0;
 23233  004F1E  9094               	bcf	3988,0,c	;volatile
 23234                           
 23235                           ;pin_manager.c: 74: TRISCbits.TRISC1 = 0;
 23236  004F20  9294               	bcf	3988,1,c	;volatile
 23237                           
 23238                           ;pin_manager.c: 75: TRISCbits.TRISC2 = 1;
 23239  004F22  8494               	bsf	3988,2,c	;volatile
 23240                           
 23241                           ;pin_manager.c: 76: TRISCbits.TRISC6 = 0;
 23242  004F24  9C94               	bcf	3988,6,c	;volatile
 23243                           
 23244                           ;pin_manager.c: 77: TRISCbits.TRISC7 = 1;
 23245  004F26  8E94               	bsf	3988,7,c	;volatile
 23246                           
 23247                           ;pin_manager.c: 79: TRISD = 0b00000000;
 23248  004F28  0E00               	movlw	0
 23249  004F2A  6E95               	movwf	3989,c	;volatile
 23250                           
 23251                           ;pin_manager.c: 81: TRISEbits.TRISE2 = 0;
 23252  004F2C  9496               	bcf	3990,2,c	;volatile
 23253                           
 23254                           ;pin_manager.c: 84: LATAbits.LATA5 = 0;
 23255  004F2E  9A89               	bcf	3977,5,c	;volatile
 23256                           
 23257                           ;pin_manager.c: 85: LATAbits.LATA6 = 0;
 23258  004F30  9C89               	bcf	3977,6,c	;volatile
 23259                           
 23260                           ;pin_manager.c: 86: LATAbits.LATA7 = 0;
 23261  004F32  9E89               	bcf	3977,7,c	;volatile
 23262                           
 23263                           ;pin_manager.c: 88: LATBbits.LATB2 = 0;
 23264  004F34  948A               	bcf	3978,2,c	;volatile
 23265                           
 23266                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 23267  004F36  948B               	bcf	3979,2,c	;volatile
 23268                           
 23269                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 23270  004F38  9C8B               	bcf	3979,6,c	;volatile
 23271                           
 23272                           ;pin_manager.c: 93: LATEbits.LATE2 = 1;
 23273  004F3A  848D               	bsf	3981,2,c	;volatile
 23274                           
 23275                           ;pin_manager.c: 95: ANSELAbits.ANSA0 = 0;
 23276  004F3C  010F               	movlb	15	; () banked
 23277  004F3E  915B               	bcf	91,0,b	;volatile
 23278                           
 23279                           ; BSR set to: 15
 23280                           ;pin_manager.c: 96: ANSELAbits.ANSA1 = 1;
 23281  004F40  835B               	bsf	91,1,b	;volatile
 23282                           
 23283                           ; BSR set to: 15
 23284                           ;pin_manager.c: 97: ANSELAbits.ANSA2 = 1;
 23285  004F42  855B               	bsf	91,2,b	;volatile
 23286                           
 23287                           ; BSR set to: 15
 23288                           ;pin_manager.c: 98: ANSELAbits.ANSA3 = 1;
 23289  004F44  875B               	bsf	91,3,b	;volatile
 23290                           
 23291                           ; BSR set to: 15
 23292                           ;pin_manager.c: 99: ANSELCbits.ANSC7 = 0;
 23293  004F46  9F5D               	bcf	93,7,b	;volatile
 23294                           
 23295                           ; BSR set to: 15
 23296                           ;pin_manager.c: 100: ANSELCbits.ANSC6 = 0;
 23297  004F48  9D5D               	bcf	93,6,b	;volatile
 23298                           
 23299                           ; BSR set to: 15
 23300  004F4A  0012               	return		;funcret
 23301  004F4C                     __end_of_PIN_MANAGER_Initialize:
 23302                           	opt stack 0
 23303                           tblptru	equ	0xFF8
 23304                           tblptrh	equ	0xFF7
 23305                           tblptrl	equ	0xFF6
 23306                           tablat	equ	0xFF5
 23307                           prodh	equ	0xFF4
 23308                           prodl	equ	0xFF3
 23309                           intcon	equ	0xFF2
 23310                           intcon3	equ	0xFF0
 23311                           indf0	equ	0xFEF
 23312                           postinc0	equ	0xFEE
 23313                           fsr0h	equ	0xFEA
 23314                           fsr0l	equ	0xFE9
 23315                           wreg	equ	0xFE8
 23316                           indf1	equ	0xFE7
 23317                           postdec1	equ	0xFE5
 23318                           fsr1h	equ	0xFE2
 23319                           fsr1l	equ	0xFE1
 23320                           indf2	equ	0xFDF
 23321                           postinc2	equ	0xFDE
 23322                           postdec2	equ	0xFDD
 23323                           plusw2	equ	0xFDB
 23324                           fsr2h	equ	0xFDA
 23325                           fsr2l	equ	0xFD9
 23326                           status	equ	0xFD8
 23327                           
 23328 ;; *************** function _OSCILLATOR_Initialize *****************
 23329 ;; Defined at:
 23330 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 23331 ;; Parameters:    Size  Location     Type
 23332 ;;		None
 23333 ;; Auto vars:     Size  Location     Type
 23334 ;;		None
 23335 ;; Return value:  Size  Location     Type
 23336 ;;                  1    wreg      void 
 23337 ;; Registers used:
 23338 ;;		wreg, status,2
 23339 ;; Tracked objects:
 23340 ;;		On entry : 0/0
 23341 ;;		On exit  : 0/0
 23342 ;;		Unchanged: 0/0
 23343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23344 ;;      Params:         0       0       0       0       0       0       0       0       0
 23345 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23347 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23348 ;;Total ram usage:        0 bytes
 23349 ;; Hardware stack levels used:    1
 23350 ;; Hardware stack levels required when called:   11
 23351 ;; This function calls:
 23352 ;;		Nothing
 23353 ;; This function is called by:
 23354 ;;		_PICoRa_Initialize
 23355 ;; This function uses a non-reentrant model
 23356 ;;
 23357                           
 23358                           	psect	text97
 23359  00565E                     __ptext97:
 23360                           	opt stack 0
 23361  00565E                     _OSCILLATOR_Initialize:
 23362                           	opt stack 18
 23363                           
 23364                           ;mcc.c: 108: OSCTUNE = 0x80;
 23365                           
 23366                           ; BSR set to: 15
 23367                           ;incstack = 0
 23368  00565E  0E80               	movlw	128
 23369  005660  6E9B               	movwf	3995,c	;volatile
 23370                           
 23371                           ;mcc.c: 109: OSCCON = 0x70;
 23372  005662  0E70               	movlw	112
 23373  005664  6ED3               	movwf	4051,c	;volatile
 23374                           
 23375                           ;mcc.c: 110: OSCCON2 = 0x10;
 23376  005666  0E10               	movlw	16
 23377  005668  6ED2               	movwf	4050,c	;volatile
 23378  00566A  AED2               	btfss	4050,7,c	;volatile
 23379  00566C  D7FE               	goto	l1152
 23380                           
 23381                           ;mcc.c: 112: ACTCON = 0x90;
 23382  00566E  0E90               	movlw	144
 23383  005670  6EB5               	movwf	4021,c	;volatile
 23384  005672  0012               	return		;funcret
 23385  005674                     __end_of_OSCILLATOR_Initialize:
 23386                           	opt stack 0
 23387                           tblptru	equ	0xFF8
 23388                           tblptrh	equ	0xFF7
 23389                           tblptrl	equ	0xFF6
 23390                           tablat	equ	0xFF5
 23391                           prodh	equ	0xFF4
 23392                           prodl	equ	0xFF3
 23393                           intcon	equ	0xFF2
 23394                           intcon3	equ	0xFF0
 23395                           indf0	equ	0xFEF
 23396                           postinc0	equ	0xFEE
 23397                           fsr0h	equ	0xFEA
 23398                           fsr0l	equ	0xFE9
 23399                           wreg	equ	0xFE8
 23400                           indf1	equ	0xFE7
 23401                           postdec1	equ	0xFE5
 23402                           fsr1h	equ	0xFE2
 23403                           fsr1l	equ	0xFE1
 23404                           indf2	equ	0xFDF
 23405                           postinc2	equ	0xFDE
 23406                           postdec2	equ	0xFDD
 23407                           plusw2	equ	0xFDB
 23408                           fsr2h	equ	0xFDA
 23409                           fsr2l	equ	0xFD9
 23410                           status	equ	0xFD8
 23411                           
 23412 ;; *************** function _EUSART_Initialize *****************
 23413 ;; Defined at:
 23414 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23415 ;; Parameters:    Size  Location     Type
 23416 ;;		None
 23417 ;; Auto vars:     Size  Location     Type
 23418 ;;		None
 23419 ;; Return value:  Size  Location     Type
 23420 ;;                  1    wreg      void 
 23421 ;; Registers used:
 23422 ;;		wreg, status,2
 23423 ;; Tracked objects:
 23424 ;;		On entry : 0/0
 23425 ;;		On exit  : 0/0
 23426 ;;		Unchanged: 0/0
 23427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23428 ;;      Params:         0       0       0       0       0       0       0       0       0
 23429 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23430 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23431 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23432 ;;Total ram usage:        0 bytes
 23433 ;; Hardware stack levels used:    1
 23434 ;; Hardware stack levels required when called:   11
 23435 ;; This function calls:
 23436 ;;		Nothing
 23437 ;; This function is called by:
 23438 ;;		_PICoRa_Initialize
 23439 ;; This function uses a non-reentrant model
 23440 ;;
 23441                           
 23442                           	psect	text98
 23443  0051CA                     __ptext98:
 23444                           	opt stack 0
 23445  0051CA                     _EUSART_Initialize:
 23446                           	opt stack 18
 23447                           
 23448                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23449                           
 23450                           ;incstack = 0
 23451  0051CA  9A9D               	bcf	3997,5,c	;volatile
 23452                           
 23453                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23454  0051CC  989D               	bcf	3997,4,c	;volatile
 23455                           
 23456                           ;eusart.c: 85: BAUDCON = 0x48;
 23457  0051CE  0E48               	movlw	72
 23458  0051D0  6EB8               	movwf	4024,c	;volatile
 23459                           
 23460                           ;eusart.c: 88: RCSTA = 0x90;
 23461  0051D2  0E90               	movlw	144
 23462  0051D4  6EAB               	movwf	4011,c	;volatile
 23463                           
 23464                           ;eusart.c: 91: TXSTA = 0x26;
 23465  0051D6  0E26               	movlw	38
 23466  0051D8  6EAC               	movwf	4012,c	;volatile
 23467                           
 23468                           ;eusart.c: 95: SPBRG = 0xD0;
 23469  0051DA  0ED0               	movlw	208
 23470  0051DC  6EAF               	movwf	4015,c	;volatile
 23471                           
 23472                           ;eusart.c: 100: SPBRGH = 0x00;
 23473  0051DE  0E00               	movlw	0
 23474  0051E0  6EB0               	movwf	4016,c	;volatile
 23475                           
 23476                           ;eusart.c: 103: eusartTxHead = 0;
 23477  0051E2  0E00               	movlw	0
 23478  0051E4  0100               	movlb	0	; () banked
 23479  0051E6  6FE3               	movwf	_eusartTxHead& (0+255),b
 23480                           
 23481                           ;eusart.c: 104: eusartTxTail = 0;
 23482  0051E8  0E00               	movlw	0
 23483  0051EA  6FE2               	movwf	_eusartTxTail& (0+255),b
 23484                           
 23485                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23486  0051EC  0E40               	movlw	64
 23487  0051EE  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 23488                           
 23489                           ;eusart.c: 107: eusartRxHead = 0;
 23490  0051F0  0E00               	movlw	0
 23491  0051F2  6FE0               	movwf	_eusartRxHead& (0+255),b
 23492                           
 23493                           ;eusart.c: 108: eusartRxTail = 0;
 23494  0051F4  0E00               	movlw	0
 23495  0051F6  6FDF               	movwf	_eusartRxTail& (0+255),b
 23496                           
 23497                           ;eusart.c: 109: eusartRxCount = 0;
 23498  0051F8  0E00               	movlw	0
 23499  0051FA  6FF4               	movwf	_eusartRxCount& (0+255),b	;volatile
 23500                           
 23501                           ; BSR set to: 0
 23502                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23503  0051FC  8A9D               	bsf	3997,5,c	;volatile
 23504                           
 23505                           ; BSR set to: 0
 23506                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23507  0051FE  88AB               	bsf	4011,4,c	;volatile
 23508                           
 23509                           ; BSR set to: 0
 23510  005200  0012               	return		;funcret
 23511  005202                     __end_of_EUSART_Initialize:
 23512                           	opt stack 0
 23513                           tblptru	equ	0xFF8
 23514                           tblptrh	equ	0xFF7
 23515                           tblptrl	equ	0xFF6
 23516                           tablat	equ	0xFF5
 23517                           prodh	equ	0xFF4
 23518                           prodl	equ	0xFF3
 23519                           intcon	equ	0xFF2
 23520                           intcon3	equ	0xFF0
 23521                           indf0	equ	0xFEF
 23522                           postinc0	equ	0xFEE
 23523                           fsr0h	equ	0xFEA
 23524                           fsr0l	equ	0xFE9
 23525                           wreg	equ	0xFE8
 23526                           indf1	equ	0xFE7
 23527                           postdec1	equ	0xFE5
 23528                           fsr1h	equ	0xFE2
 23529                           fsr1l	equ	0xFE1
 23530                           indf2	equ	0xFDF
 23531                           postinc2	equ	0xFDE
 23532                           postdec2	equ	0xFDD
 23533                           plusw2	equ	0xFDB
 23534                           fsr2h	equ	0xFDA
 23535                           fsr2l	equ	0xFD9
 23536                           status	equ	0xFD8
 23537                           
 23538 ;; *************** function _CMP1_Initialize *****************
 23539 ;; Defined at:
 23540 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23541 ;; Parameters:    Size  Location     Type
 23542 ;;		None
 23543 ;; Auto vars:     Size  Location     Type
 23544 ;;		None
 23545 ;; Return value:  Size  Location     Type
 23546 ;;                  1    wreg      void 
 23547 ;; Registers used:
 23548 ;;		wreg, status,2
 23549 ;; Tracked objects:
 23550 ;;		On entry : 0/0
 23551 ;;		On exit  : 0/0
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23554 ;;      Params:         0       0       0       0       0       0       0       0       0
 23555 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23557 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23558 ;;Total ram usage:        0 bytes
 23559 ;; Hardware stack levels used:    1
 23560 ;; Hardware stack levels required when called:   11
 23561 ;; This function calls:
 23562 ;;		Nothing
 23563 ;; This function is called by:
 23564 ;;		_PICoRa_Initialize
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text99
 23569  0056DA                     __ptext99:
 23570                           	opt stack 0
 23571  0056DA                     _CMP1_Initialize:
 23572                           	opt stack 18
 23573                           
 23574                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23575                           
 23576                           ; BSR set to: 0
 23577                           ;incstack = 0
 23578  0056DA  9CA0               	bcf	4000,6,c	;volatile
 23579                           
 23580                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23581  0056DC  0E9C               	movlw	156
 23582  0056DE  6E98               	movwf	3992,c	;volatile
 23583                           
 23584                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23585  0056E0  8A9A               	bsf	3994,5,c	;volatile
 23586                           
 23587                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23588  0056E2  929A               	bcf	3994,1,c	;volatile
 23589                           
 23590                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23591  0056E4  969A               	bcf	3994,3,c	;volatile
 23592                           
 23593                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23594  0056E6  9CA1               	bcf	4001,6,c	;volatile
 23595                           
 23596                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23597  0056E8  9CA0               	bcf	4000,6,c	;volatile
 23598  0056EA  0012               	return		;funcret
 23599  0056EC                     __end_of_CMP1_Initialize:
 23600                           	opt stack 0
 23601                           tblptru	equ	0xFF8
 23602                           tblptrh	equ	0xFF7
 23603                           tblptrl	equ	0xFF6
 23604                           tablat	equ	0xFF5
 23605                           prodh	equ	0xFF4
 23606                           prodl	equ	0xFF3
 23607                           intcon	equ	0xFF2
 23608                           intcon3	equ	0xFF0
 23609                           indf0	equ	0xFEF
 23610                           postinc0	equ	0xFEE
 23611                           fsr0h	equ	0xFEA
 23612                           fsr0l	equ	0xFE9
 23613                           wreg	equ	0xFE8
 23614                           indf1	equ	0xFE7
 23615                           postdec1	equ	0xFE5
 23616                           fsr1h	equ	0xFE2
 23617                           fsr1l	equ	0xFE1
 23618                           indf2	equ	0xFDF
 23619                           postinc2	equ	0xFDE
 23620                           postdec2	equ	0xFDD
 23621                           plusw2	equ	0xFDB
 23622                           fsr2h	equ	0xFDA
 23623                           fsr2l	equ	0xFD9
 23624                           status	equ	0xFD8
 23625                           
 23626 ;; *************** function _ADC_Initialize *****************
 23627 ;; Defined at:
 23628 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23629 ;; Parameters:    Size  Location     Type
 23630 ;;		None
 23631 ;; Auto vars:     Size  Location     Type
 23632 ;;		None
 23633 ;; Return value:  Size  Location     Type
 23634 ;;                  1    wreg      void 
 23635 ;; Registers used:
 23636 ;;		wreg, status,2
 23637 ;; Tracked objects:
 23638 ;;		On entry : 0/0
 23639 ;;		On exit  : 0/0
 23640 ;;		Unchanged: 0/0
 23641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23642 ;;      Params:         0       0       0       0       0       0       0       0       0
 23643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23645 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23646 ;;Total ram usage:        0 bytes
 23647 ;; Hardware stack levels used:    1
 23648 ;; Hardware stack levels required when called:   11
 23649 ;; This function calls:
 23650 ;;		Nothing
 23651 ;; This function is called by:
 23652 ;;		_PICoRa_Initialize
 23653 ;; This function uses a non-reentrant model
 23654 ;;
 23655                           
 23656                           	psect	text100
 23657  005618                     __ptext100:
 23658                           	opt stack 0
 23659  005618                     _ADC_Initialize:
 23660                           	opt stack 18
 23661                           
 23662                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23663                           
 23664                           ;incstack = 0
 23665  005618  0EA0               	movlw	160
 23666  00561A  6E7D               	movwf	3965,c	;volatile
 23667                           
 23668                           ;adc.c: 70: ADCON0 = 0x01;
 23669  00561C  0E01               	movlw	1
 23670  00561E  6EC2               	movwf	4034,c	;volatile
 23671                           
 23672                           ;adc.c: 73: ADCON1 = 0x08;
 23673  005620  0E08               	movlw	8
 23674  005622  6EC1               	movwf	4033,c	;volatile
 23675                           
 23676                           ;adc.c: 76: ADCON2 = 0b10001110;
 23677  005624  0E8E               	movlw	142
 23678  005626  6EC0               	movwf	4032,c	;volatile
 23679                           
 23680                           ;adc.c: 79: ADRESL = 0x00;
 23681  005628  0E00               	movlw	0
 23682  00562A  6EC3               	movwf	4035,c	;volatile
 23683                           
 23684                           ;adc.c: 82: ADRESH = 0x00;
 23685  00562C  0E00               	movlw	0
 23686  00562E  6EC4               	movwf	4036,c	;volatile
 23687  005630  0012               	return		;funcret
 23688  005632                     __end_of_ADC_Initialize:
 23689                           	opt stack 0
 23690                           tblptru	equ	0xFF8
 23691                           tblptrh	equ	0xFF7
 23692                           tblptrl	equ	0xFF6
 23693                           tablat	equ	0xFF5
 23694                           prodh	equ	0xFF4
 23695                           prodl	equ	0xFF3
 23696                           intcon	equ	0xFF2
 23697                           intcon3	equ	0xFF0
 23698                           indf0	equ	0xFEF
 23699                           postinc0	equ	0xFEE
 23700                           fsr0h	equ	0xFEA
 23701                           fsr0l	equ	0xFE9
 23702                           wreg	equ	0xFE8
 23703                           indf1	equ	0xFE7
 23704                           postdec1	equ	0xFE5
 23705                           fsr1h	equ	0xFE2
 23706                           fsr1l	equ	0xFE1
 23707                           indf2	equ	0xFDF
 23708                           postinc2	equ	0xFDE
 23709                           postdec2	equ	0xFDD
 23710                           plusw2	equ	0xFDB
 23711                           fsr2h	equ	0xFDA
 23712                           fsr2l	equ	0xFD9
 23713                           status	equ	0xFD8
 23714                           
 23715 ;; *************** function _MOTEapp_handlerState *****************
 23716 ;; Defined at:
 23717 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 23718 ;; Parameters:    Size  Location     Type
 23719 ;;  state           1    wreg     enum E5864
 23720 ;; Auto vars:     Size  Location     Type
 23721 ;;  state           1    0[BANK0 ] enum E5864
 23722 ;; Return value:  Size  Location     Type
 23723 ;;                  1    wreg      void 
 23724 ;; Registers used:
 23725 ;;		wreg
 23726 ;; Tracked objects:
 23727 ;;		On entry : 0/0
 23728 ;;		On exit  : 0/0
 23729 ;;		Unchanged: 0/0
 23730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23731 ;;      Params:         0       0       0       0       0       0       0       0       0
 23732 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23733 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23734 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23735 ;;Total ram usage:        1 bytes
 23736 ;; Hardware stack levels used:    1
 23737 ;; Hardware stack levels required when called:   11
 23738 ;; This function calls:
 23739 ;;		Nothing
 23740 ;; This function is called by:
 23741 ;;		_main
 23742 ;; This function uses a non-reentrant model
 23743 ;;
 23744                           
 23745                           	psect	text101
 23746  005770                     __ptext101:
 23747                           	opt stack 0
 23748  005770                     _MOTEapp_handlerState:
 23749                           	opt stack 19
 23750                           
 23751                           ;incstack = 0
 23752                           ;MOTEapp_handlerState@state stored from wreg
 23753  005770  0100               	movlb	0	; () banked
 23754  005772  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 23755                           
 23756                           ;MOTEapp.c: 185: moteState = state;
 23757  005774  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 23758  005778  0012               	return		;funcret
 23759  00577A                     __end_of_MOTEapp_handlerState:
 23760                           	opt stack 0
 23761                           tblptru	equ	0xFF8
 23762                           tblptrh	equ	0xFF7
 23763                           tblptrl	equ	0xFF6
 23764                           tablat	equ	0xFF5
 23765                           prodh	equ	0xFF4
 23766                           prodl	equ	0xFF3
 23767                           intcon	equ	0xFF2
 23768                           intcon3	equ	0xFF0
 23769                           indf0	equ	0xFEF
 23770                           postinc0	equ	0xFEE
 23771                           fsr0h	equ	0xFEA
 23772                           fsr0l	equ	0xFE9
 23773                           wreg	equ	0xFE8
 23774                           indf1	equ	0xFE7
 23775                           postdec1	equ	0xFE5
 23776                           fsr1h	equ	0xFE2
 23777                           fsr1l	equ	0xFE1
 23778                           indf2	equ	0xFDF
 23779                           postinc2	equ	0xFDE
 23780                           postdec2	equ	0xFDD
 23781                           plusw2	equ	0xFDB
 23782                           fsr2h	equ	0xFDA
 23783                           fsr2l	equ	0xFD9
 23784                           status	equ	0xFD8
 23785                           
 23786 ;; *************** function _DATAEE_ReadByte *****************
 23787 ;; Defined at:
 23788 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 23789 ;; Parameters:    Size  Location     Type
 23790 ;;  bAdd            1    wreg     unsigned char 
 23791 ;; Auto vars:     Size  Location     Type
 23792 ;;  bAdd            1    0[BANK0 ] unsigned char 
 23793 ;; Return value:  Size  Location     Type
 23794 ;;                  1    wreg      unsigned char 
 23795 ;; Registers used:
 23796 ;;		wreg, status,2
 23797 ;; Tracked objects:
 23798 ;;		On entry : 0/0
 23799 ;;		On exit  : 0/0
 23800 ;;		Unchanged: 0/0
 23801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23802 ;;      Params:         0       0       0       0       0       0       0       0       0
 23803 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23804 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23805 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23806 ;;Total ram usage:        1 bytes
 23807 ;; Hardware stack levels used:    1
 23808 ;; Hardware stack levels required when called:   11
 23809 ;; This function calls:
 23810 ;;		Nothing
 23811 ;; This function is called by:
 23812 ;;		_main
 23813 ;; This function uses a non-reentrant model
 23814 ;;
 23815                           
 23816                           	psect	text102
 23817  005674                     __ptext102:
 23818                           	opt stack 0
 23819  005674                     _DATAEE_ReadByte:
 23820                           	opt stack 19
 23821                           
 23822                           ;incstack = 0
 23823                           ;DATAEE_ReadByte@bAdd stored from wreg
 23824  005674  0100               	movlb	0	; () banked
 23825  005676  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 23826                           
 23827                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 23828  005678  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 23829                           
 23830                           ;memory.c: 191: EECON1bits.CFGS = 0;
 23831  00567C  9CA6               	bcf	4006,6,c	;volsfr
 23832                           
 23833                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 23834  00567E  9EA6               	bcf	4006,7,c	;volsfr
 23835                           
 23836                           ;memory.c: 193: EECON1bits.RD = 1;
 23837  005680  80A6               	bsf	4006,0,c	;volsfr
 23838                           
 23839                           ;memory.c: 194: __nop();
 23840  005682  F000               	nop	
 23841                           
 23842                           ;memory.c: 195: __nop();
 23843  005684  F000               	nop	
 23844                           
 23845                           ;memory.c: 197: return (EEDATA);
 23846  005686  50A8               	movf	4008,w,c	;volatile
 23847  005688  0012               	return	
 23848  00568A                     __end_of_DATAEE_ReadByte:
 23849                           	opt stack 0
 23850                           tblptru	equ	0xFF8
 23851                           tblptrh	equ	0xFF7
 23852                           tblptrl	equ	0xFF6
 23853                           tablat	equ	0xFF5
 23854                           prodh	equ	0xFF4
 23855                           prodl	equ	0xFF3
 23856                           intcon	equ	0xFF2
 23857                           intcon3	equ	0xFF0
 23858                           indf0	equ	0xFEF
 23859                           postinc0	equ	0xFEE
 23860                           fsr0h	equ	0xFEA
 23861                           fsr0l	equ	0xFE9
 23862                           wreg	equ	0xFE8
 23863                           indf1	equ	0xFE7
 23864                           postdec1	equ	0xFE5
 23865                           fsr1h	equ	0xFE2
 23866                           fsr1l	equ	0xFE1
 23867                           indf2	equ	0xFDF
 23868                           postinc2	equ	0xFDE
 23869                           postdec2	equ	0xFDD
 23870                           plusw2	equ	0xFDB
 23871                           fsr2h	equ	0xFDA
 23872                           fsr2l	equ	0xFD9
 23873                           status	equ	0xFD8
 23874                           
 23875 ;; *************** function _INTERRUPT_InterruptManager *****************
 23876 ;; Defined at:
 23877 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 23878 ;; Parameters:    Size  Location     Type
 23879 ;;		None
 23880 ;; Auto vars:     Size  Location     Type
 23881 ;;		None
 23882 ;; Return value:  Size  Location     Type
 23883 ;;                  1    wreg      void 
 23884 ;; Registers used:
 23885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23886 ;; Tracked objects:
 23887 ;;		On entry : 0/0
 23888 ;;		On exit  : 0/0
 23889 ;;		Unchanged: 0/0
 23890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23891 ;;      Params:         0       0       0       0       0       0       0       0       0
 23892 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23893 ;;      Temps:         18       0       0       0       0       0       0       0       0
 23894 ;;      Totals:        18       0       0       0       0       0       0       0       0
 23895 ;;Total ram usage:       18 bytes
 23896 ;; Hardware stack levels used:    1
 23897 ;; Hardware stack levels required when called:   10
 23898 ;; This function calls:
 23899 ;;		_CMP1_ISR
 23900 ;;		_EUSART_Receive_ISR
 23901 ;;		_EUSART_Transmit_ISR
 23902 ;;		_TMR1_ISR
 23903 ;;		_TMR3_ISR
 23904 ;;		_TMRapp_Tick
 23905 ;;		_USBDeviceTasks
 23906 ;;		_USBapp_setrxByteFlag
 23907 ;; This function is called by:
 23908 ;;		Interrupt level 2
 23909 ;; This function uses a non-reentrant model
 23910 ;;
 23911                           
 23912                           	psect	intcode
 23913  000008                     __pintcode:
 23914                           	opt stack 0
 23915  000008                     _INTERRUPT_InterruptManager:
 23916                           	opt stack 11
 23917                           
 23918                           ;incstack = 0
 23919  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23920  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 23921  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 23922  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 23923  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 23924  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 23925  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 23926  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 23927  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 23928  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 23929  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 23930  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 23931  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 23932  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 23933  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 23934  000042  C05E  F02E         	movff	btemp,??_INTERRUPT_InterruptManager+14
 23935  000046  C05F  F02F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 23936  00004A  C060  F030         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 23937  00004E  C061  F031         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 23938                           
 23939                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 23940  000052  B09D               	btfsc	3997,0,c	;volatile
 23941  000054  A09E               	btfss	3998,0,c	;volatile
 23942  000056  D004               	goto	i2l1110
 23943                           
 23944                           ;interrupt_manager.c: 59: {
 23945                           ;interrupt_manager.c: 60: TMR1_ISR();
 23946  000058  ECA3  F02B         	call	_TMR1_ISR	;wreg free
 23947                           
 23948                           ;interrupt_manager.c: 62: TMRapp_Tick();
 23949  00005C  ECD9  F02B         	call	_TMRapp_Tick	;wreg free
 23950  000060                     i2l1110:
 23951                           
 23952                           ;interrupt_manager.c: 63: }
 23953                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 23954  000060  B2A0               	btfsc	4000,1,c	;volatile
 23955  000062  A2A1               	btfss	4001,1,c	;volatile
 23956  000064  D003               	goto	i2l1111
 23957                           
 23958                           ;interrupt_manager.c: 65: {
 23959                           ;interrupt_manager.c: 66: TMR3_ISR();
 23960  000066  ECE2  F02A         	call	_TMR3_ISR	;wreg free
 23961                           
 23962                           ;interrupt_manager.c: 67: }
 23963  00006A  D016               	goto	i2l1118
 23964  00006C                     i2l1111:
 23965                           
 23966                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 23967  00006C  BA9D               	btfsc	3997,5,c	;volatile
 23968  00006E  AA9E               	btfss	3998,5,c	;volatile
 23969  000070  D005               	goto	i2l1113
 23970                           
 23971                           ;interrupt_manager.c: 69: {
 23972                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 23973  000072  ECC9  F02B         	call	_USBapp_setrxByteFlag	;wreg free
 23974                           
 23975                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 23976  000076  ECE2  F029         	call	_EUSART_Receive_ISR	;wreg free
 23977                           
 23978                           ;interrupt_manager.c: 72: }
 23979  00007A  D00E               	goto	i2l1118
 23980  00007C                     i2l1113:
 23981                           
 23982                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 23983  00007C  B89D               	btfsc	3997,4,c	;volatile
 23984  00007E  A89E               	btfss	3998,4,c	;volatile
 23985  000080  D003               	goto	i2l1115
 23986                           
 23987                           ;interrupt_manager.c: 74: {
 23988                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 23989  000082  ECCA  F029         	call	_EUSART_Transmit_ISR	;wreg free
 23990                           
 23991                           ;interrupt_manager.c: 76: }
 23992  000086  D008               	goto	i2l1118
 23993  000088                     i2l1115:
 23994                           
 23995                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 23996  000088  BCA0               	btfsc	4000,6,c	;volatile
 23997  00008A  ACA1               	btfss	4001,6,c	;volatile
 23998  00008C  D003               	goto	i2l1117
 23999                           
 24000                           ;interrupt_manager.c: 78: {
 24001                           ;interrupt_manager.c: 79: CMP1_ISR();
 24002  00008E  ECE2  F02B         	call	_CMP1_ISR	;wreg free
 24003                           
 24004                           ;interrupt_manager.c: 80: }
 24005  000092  D002               	goto	i2l1118
 24006  000094                     i2l1117:
 24007                           
 24008                           ;interrupt_manager.c: 81: else
 24009                           ;interrupt_manager.c: 82: {
 24010                           ;interrupt_manager.c: 84: USBDeviceTasks();
 24011  000094  ECC9  F013         	call	_USBDeviceTasks	;wreg free
 24012  000098                     i2l1118:
 24013  000098  C031  F061         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 24014  00009C  C030  F060         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 24015  0000A0  C02F  F05F         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 24016  0000A4  C02E  F05E         	movff	??_INTERRUPT_InterruptManager+14,btemp
 24017  0000A8  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 24018  0000AC  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 24019  0000B0  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 24020  0000B4  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 24021  0000B8  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 24022  0000BC  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 24023  0000C0  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 24024  0000C4  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 24025  0000C8  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 24026  0000CC  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 24027  0000D0  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 24028  0000D4  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 24029  0000D8  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 24030  0000DC  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 24031  0000E0  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24032  0000E2  0011               	retfie		f
 24033  0000E4                     __end_of_INTERRUPT_InterruptManager:
 24034                           	opt stack 0
 24035                           pclatu	equ	0xFFB
 24036                           pclath	equ	0xFFA
 24037                           tblptru	equ	0xFF8
 24038                           tblptrh	equ	0xFF7
 24039                           tblptrl	equ	0xFF6
 24040                           tablat	equ	0xFF5
 24041                           prodh	equ	0xFF4
 24042                           prodl	equ	0xFF3
 24043                           intcon	equ	0xFF2
 24044                           intcon3	equ	0xFF0
 24045                           indf0	equ	0xFEF
 24046                           postinc0	equ	0xFEE
 24047                           fsr0h	equ	0xFEA
 24048                           fsr0l	equ	0xFE9
 24049                           wreg	equ	0xFE8
 24050                           indf1	equ	0xFE7
 24051                           postdec1	equ	0xFE5
 24052                           fsr1h	equ	0xFE2
 24053                           fsr1l	equ	0xFE1
 24054                           indf2	equ	0xFDF
 24055                           postinc2	equ	0xFDE
 24056                           postdec2	equ	0xFDD
 24057                           plusw2	equ	0xFDB
 24058                           fsr2h	equ	0xFDA
 24059                           fsr2l	equ	0xFD9
 24060                           status	equ	0xFD8
 24061                           
 24062 ;; *************** function _USBapp_setrxByteFlag *****************
 24063 ;; Defined at:
 24064 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24065 ;; Parameters:    Size  Location     Type
 24066 ;;		None
 24067 ;; Auto vars:     Size  Location     Type
 24068 ;;		None
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      void 
 24071 ;; Registers used:
 24072 ;;		wreg, status,2
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/0
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24078 ;;      Params:         0       0       0       0       0       0       0       0       0
 24079 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24080 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24081 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24082 ;;Total ram usage:        0 bytes
 24083 ;; Hardware stack levels used:    1
 24084 ;; This function calls:
 24085 ;;		Nothing
 24086 ;; This function is called by:
 24087 ;;		_INTERRUPT_InterruptManager
 24088 ;; This function uses a non-reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text104
 24092  005792                     __ptext104:
 24093                           	opt stack 0
 24094  005792                     _USBapp_setrxByteFlag:
 24095                           	opt stack 20
 24096                           
 24097                           ;USBapp.c: 265: rxByteFlag = 1;
 24098                           
 24099                           ;incstack = 0
 24100  005792  0E01               	movlw	1
 24101  005794  0100               	movlb	0	; () banked
 24102  005796  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 24103                           
 24104                           ; BSR set to: 0
 24105  005798  0012               	return		;funcret
 24106  00579A                     __end_of_USBapp_setrxByteFlag:
 24107                           	opt stack 0
 24108                           pclatu	equ	0xFFB
 24109                           pclath	equ	0xFFA
 24110                           tblptru	equ	0xFF8
 24111                           tblptrh	equ	0xFF7
 24112                           tblptrl	equ	0xFF6
 24113                           tablat	equ	0xFF5
 24114                           prodh	equ	0xFF4
 24115                           prodl	equ	0xFF3
 24116                           intcon	equ	0xFF2
 24117                           intcon3	equ	0xFF0
 24118                           indf0	equ	0xFEF
 24119                           postinc0	equ	0xFEE
 24120                           fsr0h	equ	0xFEA
 24121                           fsr0l	equ	0xFE9
 24122                           wreg	equ	0xFE8
 24123                           indf1	equ	0xFE7
 24124                           postdec1	equ	0xFE5
 24125                           fsr1h	equ	0xFE2
 24126                           fsr1l	equ	0xFE1
 24127                           indf2	equ	0xFDF
 24128                           postinc2	equ	0xFDE
 24129                           postdec2	equ	0xFDD
 24130                           plusw2	equ	0xFDB
 24131                           fsr2h	equ	0xFDA
 24132                           fsr2l	equ	0xFD9
 24133                           status	equ	0xFD8
 24134                           
 24135 ;; *************** function _USBDeviceTasks *****************
 24136 ;; Defined at:
 24137 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24138 ;; Parameters:    Size  Location     Type
 24139 ;;		None
 24140 ;; Auto vars:     Size  Location     Type
 24141 ;;  i               1   30[COMRAM] unsigned char 
 24142 ;; Return value:  Size  Location     Type
 24143 ;;                  1    wreg      void 
 24144 ;; Registers used:
 24145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24146 ;; Tracked objects:
 24147 ;;		On entry : 0/0
 24148 ;;		On exit  : 0/0
 24149 ;;		Unchanged: 0/0
 24150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24151 ;;      Params:         0       0       0       0       0       0       0       0       0
 24152 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24154 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24155 ;;Total ram usage:        1 bytes
 24156 ;; Hardware stack levels used:    1
 24157 ;; Hardware stack levels required when called:    9
 24158 ;; This function calls:
 24159 ;;		_USBCtrlEPAllowStatusStage
 24160 ;;		_USBCtrlEPService
 24161 ;;		_USBStallHandler
 24162 ;;		_USBSuspend
 24163 ;;		_USBWakeFromSuspend
 24164 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24165 ;;		i2_USBDeviceInit
 24166 ;; This function is called by:
 24167 ;;		_INTERRUPT_InterruptManager
 24168 ;; This function uses a non-reentrant model
 24169 ;;
 24170                           
 24171                           	psect	text105
 24172  002792                     __ptext105:
 24173                           	opt stack 0
 24174  002792                     _USBDeviceTasks:
 24175                           	opt stack 11
 24176                           
 24177                           ;usb_device.c: 430: uint8_t i;
 24178                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;incstack = 0
 24182  002792  0100               	movlb	0	; () banked
 24183  002794  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24184  002796  B4D8               	btfsc	status,2,c
 24185                           
 24186                           ; BSR set to: 0
 24187                           ;usb_device.c: 433: {
 24188                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24189  002798  BA60               	btfsc	3936,5,c	;volatile
 24190  00279A  D006               	goto	i2l1641
 24191                           
 24192                           ; BSR set to: 0
 24193                           ;usb_device.c: 444: {
 24194                           ;usb_device.c: 445: {UIR = 0;};
 24195  00279C  0E00               	movlw	0
 24196  00279E  6E65               	movwf	3941,c	;volatile
 24197                           
 24198                           ; BSR set to: 0
 24199                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24200  0027A0  8064               	bsf	3940,0,c	;volatile
 24201                           
 24202                           ; BSR set to: 0
 24203                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24204  0027A2  8864               	bsf	3940,4,c	;volatile
 24205                           
 24206                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24207  0027A4  0E02               	movlw	2
 24208  0027A6  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24209  0027A8                     i2l1641:
 24210                           
 24211                           ; BSR set to: 0
 24212                           ;usb_device.c: 449: }
 24213                           ;usb_device.c: 450: }
 24214                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24215                           
 24216                           ; BSR set to: 0
 24217                           
 24218                           ; BSR set to: 0
 24219  0027A8  B465               	btfsc	3941,2,c	;volatile
 24220                           
 24221                           ; BSR set to: 0
 24222  0027AA  A464               	btfss	3940,2,c	;volatile
 24223  0027AC  D003               	goto	i2l1642
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;usb_device.c: 455: {
 24227                           ;usb_device.c: 456: (UIR &= 0xFB);
 24228  0027AE  9465               	bcf	3941,2,c	;volatile
 24229                           
 24230                           ; BSR set to: 0
 24231                           ;usb_device.c: 457: USBWakeFromSuspend();
 24232  0027B0  EC11  F02A         	call	_USBWakeFromSuspend	;wreg free
 24233  0027B4                     i2l1642:
 24234                           
 24235                           ;usb_device.c: 458: }
 24236                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24237  0027B4  A260               	btfss	3936,1,c	;volatile
 24238  0027B6  D002               	goto	i2l1643
 24239                           
 24240                           ;usb_device.c: 464: {
 24241                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24242  0027B8  94A4               	bcf	4004,2,c	;volatile
 24243                           
 24244                           ;usb_device.c: 466: return;
 24245  0027BA  0012               	return	
 24246  0027BC                     i2l1643:
 24247                           
 24248                           ;usb_device.c: 467: }
 24249                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24250  0027BC  B065               	btfsc	3941,0,c	;volatile
 24251  0027BE  A064               	btfss	3940,0,c	;volatile
 24252  0027C0  D007               	goto	i2l1645
 24253                           
 24254                           ;usb_device.c: 480: {
 24255                           ;usb_device.c: 481: USBDeviceInit();
 24256  0027C2  EC8F  F015         	call	i2_USBDeviceInit	;wreg free
 24257                           
 24258                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24259  0027C6  84A3               	bsf	4003,2,c	;volatile
 24260                           
 24261                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24262  0027C8  0E04               	movlw	4
 24263  0027CA  0100               	movlb	0	; () banked
 24264  0027CC  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24265                           
 24266                           ; BSR set to: 0
 24267                           ;usb_device.c: 489: (UIR &= 0xFE);
 24268  0027CE  9065               	bcf	3941,0,c	;volatile
 24269  0027D0                     i2l1645:
 24270                           
 24271                           ;usb_device.c: 490: }
 24272                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24273                           
 24274                           ; BSR set to: 0
 24275  0027D0  B865               	btfsc	3941,4,c	;volatile
 24276  0027D2  A864               	btfss	3940,4,c	;volatile
 24277  0027D4  D003               	goto	i2l1646
 24278                           
 24279                           ;usb_device.c: 496: {
 24280                           ;usb_device.c: 497: USBSuspend();
 24281  0027D6  EC66  F02A         	call	_USBSuspend	;wreg free
 24282                           
 24283                           ;usb_device.c: 498: (UIR &= 0xEF);
 24284  0027DA  9865               	bcf	3941,4,c	;volatile
 24285  0027DC                     i2l1646:
 24286                           
 24287                           ;usb_device.c: 499: }
 24288                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24289  0027DC  AC65               	btfss	3941,6,c	;volatile
 24290  0027DE  D018               	goto	i2l1650
 24291                           
 24292                           ;usb_device.c: 502: {
 24293                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24294  0027E0  AC64               	btfss	3940,6,c	;volatile
 24295  0027E2  D00E               	goto	i2l1648
 24296                           
 24297                           ;usb_device.c: 504: {
 24298                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24299  0027E4  0E00               	movlw	0
 24300  0027E6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24301  0027E8  0E73               	movlw	115
 24302  0027EA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24303  0027EC  0E00               	movlw	0
 24304  0027EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24305  0027F0  0E00               	movlw	0
 24306  0027F2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24307  0027F4  0E00               	movlw	0
 24308  0027F6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24309  0027F8  0E01               	movlw	1
 24310  0027FA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24311  0027FC  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24312  002800                     i2l1648:
 24313                           
 24314                           ;usb_device.c: 506: }
 24315                           ;usb_device.c: 507: (UIR &= 0xBF);
 24316  002800  9C65               	bcf	3941,6,c	;volatile
 24317                           
 24318                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24319  002802  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24320  002804  A4D8               	btfss	status,2,c
 24321                           
 24322                           ;usb_device.c: 513: {
 24323                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24324  002806  0646               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24325                           
 24326                           ;usb_device.c: 515: }
 24327                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24328  002808  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24329  00280A  B4D8               	btfsc	status,2,c
 24330                           
 24331                           ;usb_device.c: 522: {
 24332                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24333  00280C  ECD5  F01C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24334  002810                     i2l1650:
 24335                           
 24336                           ;usb_device.c: 524: }
 24337                           ;usb_device.c: 525: }
 24338                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24339  002810  BA65               	btfsc	3941,5,c	;volatile
 24340  002812  AA64               	btfss	3940,5,c	;volatile
 24341  002814  D002               	goto	i2l1651
 24342                           
 24343                           ;usb_device.c: 528: {
 24344                           ;usb_device.c: 529: USBStallHandler();
 24345  002816  EC0D  F028         	call	_USBStallHandler	;wreg free
 24346  00281A                     i2l1651:
 24347                           
 24348                           ;usb_device.c: 530: }
 24349                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24350  00281A  B265               	btfsc	3941,1,c	;volatile
 24351  00281C  A264               	btfss	3940,1,c	;volatile
 24352  00281E  D00F               	goto	i2l1652
 24353                           
 24354                           ;usb_device.c: 533: {
 24355                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24356  002820  0E7F               	movlw	127
 24357  002822  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24358  002824  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24359  002826  0E00               	movlw	0
 24360  002828  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24361  00282A  0E00               	movlw	0
 24362  00282C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24363  00282E  0E00               	movlw	0
 24364  002830  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24365  002832  0E01               	movlw	1
 24366  002834  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24367  002836  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24368                           
 24369                           ;usb_device.c: 535: {UEIR = 0;};
 24370  00283A  0E00               	movlw	0
 24371  00283C  6E67               	movwf	3943,c	;volatile
 24372  00283E                     i2l1652:
 24373                           
 24374                           ;usb_device.c: 536: }
 24375                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24376  00283E  0E04               	movlw	4
 24377  002840  0100               	movlb	0	; () banked
 24378  002842  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24379  002844  D002               	goto	i2l1653
 24380                           
 24381                           ; BSR set to: 0
 24382                           ;usb_device.c: 544: {
 24383                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24384  002846  94A4               	bcf	4004,2,c	;volatile
 24385                           
 24386                           ;usb_device.c: 546: return;
 24387  002848  0012               	return	
 24388  00284A                     i2l1653:
 24389                           
 24390                           ; BSR set to: 0
 24391                           ;usb_device.c: 547: }
 24392                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24393  00284A  A664               	btfss	3940,3,c	;volatile
 24394  00284C  D039               	goto	i2u1019_40
 24395                           
 24396                           ; BSR set to: 0
 24397                           ;usb_device.c: 553: {
 24398                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24399  00284E  0E00               	movlw	0
 24400  002850  6E1F               	movwf	USBDeviceTasks@i,c
 24401  002852                     i2l11268:
 24402                           
 24403                           ; BSR set to: 0
 24404  002852  0E03               	movlw	3
 24405  002854  641F               	cpfsgt	USBDeviceTasks@i,c
 24406  002856  D001               	goto	i2l1655
 24407  002858  D033               	goto	i2u1019_40
 24408  00285A                     i2l1655:
 24409                           
 24410                           ;usb_device.c: 555: {
 24411                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24412  00285A  A665               	btfss	3941,3,c	;volatile
 24413  00285C  D031               	goto	i2u1019_40
 24414                           
 24415                           ;usb_device.c: 557: {
 24416                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24417  00285E  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24418                           
 24419                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24420  002862  3059               	rrcf	_USTATcopy,w,c	;volatile
 24421  002864  32E8               	rrcf	wreg,f,c
 24422  002866  32E8               	rrcf	wreg,f,c
 24423  002868  0B0F               	andlw	15
 24424  00286A  6E48               	movwf	_endpoint_number,c	;volatile
 24425                           
 24426                           ;usb_device.c: 562: (UIR &= 0xF7);
 24427  00286C  9665               	bcf	3941,3,c	;volatile
 24428                           
 24429                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24430  00286E  B459               	btfsc	_USTATcopy,2,c	;volatile
 24431  002870  D007               	goto	i2l1658
 24432                           
 24433                           ;usb_device.c: 567: {
 24434                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24435  002872  5048               	movf	_endpoint_number,w,c	;volatile
 24436  002874  0D01               	mullw	1
 24437  002876  0ED0               	movlw	low _ep_data_out
 24438  002878  24F3               	addwf	prodl,w,c
 24439  00287A  6ED9               	movwf	fsr2l,c
 24440  00287C  0E00               	movlw	high _ep_data_out
 24441  00287E  D006               	goto	L36
 24442  002880                     i2l1658:
 24443                           
 24444                           ;usb_device.c: 570: else
 24445                           ;usb_device.c: 571: {
 24446                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24447                           
 24448                           ; BSR set to: 0
 24449  002880  5048               	movf	_endpoint_number,w,c	;volatile
 24450  002882  0D01               	mullw	1
 24451  002884  0ED3               	movlw	low _ep_data_in
 24452  002886  24F3               	addwf	prodl,w,c
 24453  002888  6ED9               	movwf	fsr2l,c
 24454  00288A  0E00               	movlw	high _ep_data_in
 24455  00288C                     L36:
 24456  00288C  20F4               	addwfc	prodh,w,c
 24457  00288E  6EDA               	movwf	fsr2h,c
 24458  002890  0100               	movlb	0	; () banked
 24459  002892  70DF               	btg	indf2,0,c
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;usb_device.c: 573: }
 24463                           ;usb_device.c: 577: if(endpoint_number == 0)
 24464                           
 24465                           ; BSR set to: 0
 24466  002894  5048               	movf	_endpoint_number,w,c	;volatile
 24467  002896  A4D8               	btfss	status,2,c
 24468  002898  D003               	goto	i2l1660
 24469                           
 24470                           ; BSR set to: 0
 24471                           ;usb_device.c: 578: {
 24472                           ;usb_device.c: 579: USBCtrlEPService();
 24473  00289A  ECA5  F01B         	call	_USBCtrlEPService	;wreg free
 24474                           
 24475                           ;usb_device.c: 580: }
 24476  00289E  D00E               	goto	i2l1662
 24477  0028A0                     i2l1660:
 24478                           
 24479                           ;usb_device.c: 581: else
 24480                           ;usb_device.c: 582: {
 24481                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24482  0028A0  0E00               	movlw	0
 24483  0028A2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24484  0028A4  0E72               	movlw	114
 24485  0028A6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24486  0028A8  0E59               	movlw	low _USTATcopy
 24487  0028AA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24488  0028AC  0E00               	movlw	high _USTATcopy
 24489  0028AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24490  0028B0  0E00               	movlw	0
 24491  0028B2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24492  0028B4  0E00               	movlw	0
 24493  0028B6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24494  0028B8  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24495  0028BC                     i2l1662:
 24496  0028BC  2A1F               	incf	USBDeviceTasks@i,f,c
 24497  0028BE  D7C9               	goto	i2l11268
 24498  0028C0                     i2u1019_40:
 24499                           
 24500                           ;usb_device.c: 589: }
 24501                           ;usb_device.c: 590: }
 24502                           ;usb_device.c: 591: }
 24503                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24504  0028C0  94A4               	bcf	4004,2,c	;volatile
 24505  0028C2  0012               	return		;funcret
 24506  0028C4                     __end_of_USBDeviceTasks:
 24507                           	opt stack 0
 24508                           pclatu	equ	0xFFB
 24509                           pclath	equ	0xFFA
 24510                           tblptru	equ	0xFF8
 24511                           tblptrh	equ	0xFF7
 24512                           tblptrl	equ	0xFF6
 24513                           tablat	equ	0xFF5
 24514                           prodh	equ	0xFF4
 24515                           prodl	equ	0xFF3
 24516                           intcon	equ	0xFF2
 24517                           intcon3	equ	0xFF0
 24518                           indf0	equ	0xFEF
 24519                           postinc0	equ	0xFEE
 24520                           fsr0h	equ	0xFEA
 24521                           fsr0l	equ	0xFE9
 24522                           wreg	equ	0xFE8
 24523                           indf1	equ	0xFE7
 24524                           postdec1	equ	0xFE5
 24525                           fsr1h	equ	0xFE2
 24526                           fsr1l	equ	0xFE1
 24527                           indf2	equ	0xFDF
 24528                           postinc2	equ	0xFDE
 24529                           postdec2	equ	0xFDD
 24530                           plusw2	equ	0xFDB
 24531                           fsr2h	equ	0xFDA
 24532                           fsr2l	equ	0xFD9
 24533                           status	equ	0xFD8
 24534                           
 24535 ;; *************** function i2_USBDeviceInit *****************
 24536 ;; Defined at:
 24537 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24538 ;; Parameters:    Size  Location     Type
 24539 ;;		None
 24540 ;; Auto vars:     Size  Location     Type
 24541 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24542 ;; Return value:  Size  Location     Type
 24543 ;;                  1    wreg      void 
 24544 ;; Registers used:
 24545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24546 ;; Tracked objects:
 24547 ;;		On entry : 0/0
 24548 ;;		On exit  : 0/0
 24549 ;;		Unchanged: 0/0
 24550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24551 ;;      Params:         0       0       0       0       0       0       0       0       0
 24552 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24554 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24555 ;;Total ram usage:        1 bytes
 24556 ;; Hardware stack levels used:    1
 24557 ;; Hardware stack levels required when called:    1
 24558 ;; This function calls:
 24559 ;;		i2_memset
 24560 ;; This function is called by:
 24561 ;;		_USBDeviceTasks
 24562 ;; This function uses a non-reentrant model
 24563 ;;
 24564                           
 24565                           	psect	text106
 24566  002B1E                     __ptext106:
 24567                           	opt stack 0
 24568  002B1E                     i2_USBDeviceInit:
 24569                           	opt stack 18
 24570                           
 24571                           ;usb_device.c: 239: uint8_t i;
 24572                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24573                           
 24574                           ;incstack = 0
 24575  002B1E  94A3               	bcf	4003,2,c	;volatile
 24576                           
 24577                           ;usb_device.c: 244: {UEIR = 0;};
 24578  002B20  0E00               	movlw	0
 24579  002B22  6E67               	movwf	3943,c	;volatile
 24580                           
 24581                           ;usb_device.c: 247: {UIR = 0;};
 24582  002B24  0E00               	movlw	0
 24583  002B26  6E65               	movwf	3941,c	;volatile
 24584                           
 24585                           ;usb_device.c: 250: UEP0 = 0;
 24586  002B28  0E00               	movlw	0
 24587  002B2A  6E6A               	movwf	3946,c	;volatile
 24588                           
 24589                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24590  002B2C  0E6B               	movlw	107
 24591  002B2E  6E01               	movwf	i2memset@p1,c
 24592  002B30  0E0F               	movlw	15
 24593  002B32  6E02               	movwf	i2memset@p1+1,c
 24594  002B34  0E00               	movlw	0
 24595  002B36  6E04               	movwf	i2memset@c+1,c
 24596  002B38  0E00               	movlw	0
 24597  002B3A  6E03               	movwf	i2memset@c,c
 24598  002B3C  0E00               	movlw	0
 24599  002B3E  6E06               	movwf	i2memset@n+1,c
 24600  002B40  0E02               	movlw	2
 24601  002B42  6E05               	movwf	i2memset@n,c
 24602  002B44  EC28  F02A         	call	i2_memset	;wreg free
 24603                           
 24604                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24605  002B48  0E16               	movlw	22
 24606  002B4A  6E62               	movwf	3938,c	;volatile
 24607  002B4C  0E9F               	movlw	159
 24608  002B4E  6E66               	movwf	3942,c	;volatile
 24609  002B50  0E7B               	movlw	123
 24610  002B52  6E64               	movwf	3940,c	;volatile
 24611                           
 24612                           ;usb_device.c: 257: ;
 24613                           ;usb_device.c: 260: ;
 24614                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24615  002B54  0E00               	movlw	0
 24616  002B56  6E09               	movwf	i2USBDeviceInit@i,c
 24617  002B58                     i2l10814:
 24618  002B58  0E0B               	movlw	11
 24619  002B5A  6409               	cpfsgt	i2USBDeviceInit@i,c
 24620  002B5C  D001               	goto	i2l1630
 24621  002B5E  D00E               	goto	i2u964_40
 24622  002B60                     i2l1630:
 24623                           
 24624                           ;usb_device.c: 264: {
 24625                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24626  002B60  5009               	movf	i2USBDeviceInit@i,w,c
 24627  002B62  0D04               	mullw	4
 24628  002B64  0E00               	movlw	0
 24629  002B66  24F3               	addwf	prodl,w,c
 24630  002B68  6ED9               	movwf	fsr2l,c
 24631  002B6A  0E04               	movlw	4
 24632  002B6C  20F4               	addwfc	prodh,w,c
 24633  002B6E  6EDA               	movwf	fsr2h,c
 24634  002B70  6ADE               	clrf	postinc2,c
 24635  002B72  6ADE               	clrf	postinc2,c
 24636  002B74  6ADE               	clrf	postinc2,c
 24637  002B76  6ADD               	clrf	postdec2,c
 24638  002B78  2A09               	incf	i2USBDeviceInit@i,f,c
 24639  002B7A  D7EE               	goto	i2l10814
 24640  002B7C                     i2u964_40:
 24641                           
 24642                           ;usb_device.c: 266: }
 24643                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24644  002B7C  8C60               	bsf	3936,6,c	;volatile
 24645                           
 24646                           ;usb_device.c: 272: UADDR = 0x00;
 24647  002B7E  0E00               	movlw	0
 24648  002B80  6E63               	movwf	3939,c	;volatile
 24649                           
 24650                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24651  002B82  9860               	bcf	3936,4,c	;volatile
 24652                           
 24653                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24654  002B84  9C60               	bcf	3936,6,c	;volatile
 24655                           
 24656                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24657  002B86  D00A               	goto	i2l1632
 24658  002B88                     
 24659                           ;usb_device.c: 282: {
 24660                           ;usb_device.c: 283: (UIR &= 0xF7);
 24661  002B88  9665               	bcf	3941,3,c	;volatile
 24662                           
 24663                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24664  002B8A  0E00               	movlw	0
 24665  002B8C  0100               	movlb	0	; () banked
 24666  002B8E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24667                           
 24668                           ; BSR set to: 0
 24669                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24670  002B90  0E00               	movlw	0
 24671  002B92  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24672                           
 24673                           ; BSR set to: 0
 24674                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24675  002B94  0E00               	movlw	0
 24676  002B96  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24677  002B98  0E00               	movlw	0
 24678  002B9A  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24679  002B9C                     i2l1632:
 24680                           
 24681                           ; BSR set to: 0
 24682  002B9C  B665               	btfsc	3941,3,c	;volatile
 24683  002B9E  D7F4               	goto	i2l1633
 24684                           
 24685                           ;usb_device.c: 288: }
 24686                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24687  002BA0  0E01               	movlw	1
 24688  002BA2  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24689                           
 24690                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24691  002BA4  0E01               	movlw	1
 24692  002BA6  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24693                           
 24694                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24695  002BA8  0E00               	movlw	0
 24696  002BAA  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24697                           
 24698                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24699  002BAC  0E00               	movlw	0
 24700  002BAE  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24701                           
 24702                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24703  002BB0  0E00               	movlw	0
 24704  002BB2  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 24705                           
 24706                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24707  002BB4  0E00               	movlw	0
 24708  002BB6  6E09               	movwf	i2USBDeviceInit@i,c
 24709  002BB8                     i2l10842:
 24710  002BB8  0E02               	movlw	2
 24711  002BBA  6409               	cpfsgt	i2USBDeviceInit@i,c
 24712  002BBC  D001               	goto	i2l1635
 24713  002BBE  D02E               	goto	i2u967_40
 24714  002BC0                     i2l1635:
 24715                           
 24716                           ;usb_device.c: 302: {
 24717                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24718  002BC0  5009               	movf	i2USBDeviceInit@i,w,c
 24719  002BC2  0D02               	mullw	2
 24720  002BC4  0ECA               	movlw	low _pBDTEntryIn
 24721  002BC6  24F3               	addwf	prodl,w,c
 24722  002BC8  6ED9               	movwf	fsr2l,c
 24723  002BCA  0E00               	movlw	high _pBDTEntryIn
 24724  002BCC  20F4               	addwfc	prodh,w,c
 24725  002BCE  6EDA               	movwf	fsr2h,c
 24726  002BD0  0E00               	movlw	0
 24727  002BD2  6EDE               	movwf	postinc2,c
 24728  002BD4  0E00               	movlw	0
 24729  002BD6  6EDD               	movwf	postdec2,c
 24730                           
 24731                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24732  002BD8  5009               	movf	i2USBDeviceInit@i,w,c
 24733  002BDA  0D02               	mullw	2
 24734  002BDC  0E40               	movlw	low _pBDTEntryOut
 24735  002BDE  24F3               	addwf	prodl,w,c
 24736  002BE0  6ED9               	movwf	fsr2l,c
 24737  002BE2  0E01               	movlw	high _pBDTEntryOut
 24738  002BE4  20F4               	addwfc	prodh,w,c
 24739  002BE6  6EDA               	movwf	fsr2h,c
 24740  002BE8  0E00               	movlw	0
 24741  002BEA  6EDE               	movwf	postinc2,c
 24742  002BEC  0E00               	movlw	0
 24743  002BEE  6EDD               	movwf	postdec2,c
 24744                           
 24745                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24746  002BF0  5009               	movf	i2USBDeviceInit@i,w,c
 24747  002BF2  0D01               	mullw	1
 24748  002BF4  0ED3               	movlw	low _ep_data_in
 24749  002BF6  24F3               	addwf	prodl,w,c
 24750  002BF8  6ED9               	movwf	fsr2l,c
 24751  002BFA  0E00               	movlw	high _ep_data_in
 24752  002BFC  20F4               	addwfc	prodh,w,c
 24753  002BFE  6EDA               	movwf	fsr2h,c
 24754  002C00  0E00               	movlw	0
 24755  002C02  6EDF               	movwf	indf2,c
 24756                           
 24757                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24758  002C04  5009               	movf	i2USBDeviceInit@i,w,c
 24759  002C06  0D01               	mullw	1
 24760  002C08  0ED0               	movlw	low _ep_data_out
 24761  002C0A  24F3               	addwf	prodl,w,c
 24762  002C0C  6ED9               	movwf	fsr2l,c
 24763  002C0E  0E00               	movlw	high _ep_data_out
 24764  002C10  20F4               	addwfc	prodh,w,c
 24765  002C12  6EDA               	movwf	fsr2h,c
 24766  002C14  0E00               	movlw	0
 24767  002C16  6EDF               	movwf	indf2,c
 24768  002C18  2A09               	incf	i2USBDeviceInit@i,f,c
 24769  002C1A  D7CE               	goto	i2l10842
 24770  002C1C                     i2u967_40:
 24771                           
 24772                           ;usb_device.c: 307: }
 24773                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24774  002C1C  0E08               	movlw	8
 24775  002C1E  0100               	movlb	0	; () banked
 24776  002C20  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 24777  002C22  0E04               	movlw	4
 24778  002C24  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24779                           
 24780                           ; BSR set to: 0
 24781                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24782  002C26  0E16               	movlw	22
 24783  002C28  6E6A               	movwf	3946,c	;volatile
 24784                           
 24785                           ; BSR set to: 0
 24786                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24787  002C2A  0E04               	movlw	4
 24788  002C2C  0104               	movlb	4	; () banked
 24789  002C2E  6F03               	movwf	3,b	;volatile
 24790  002C30  0E30               	movlw	48
 24791  002C32  6F02               	movwf	2,b	;volatile
 24792                           
 24793                           ; BSR set to: 4
 24794                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24795  002C34  0E08               	movlw	8
 24796  002C36  6F01               	movwf	1,b	;volatile
 24797                           
 24798                           ; BSR set to: 4
 24799                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24800  002C38  0E04               	movlw	4
 24801  002C3A  6F00               	movwf	0,b	;volatile
 24802                           
 24803                           ; BSR set to: 4
 24804                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24805  002C3C  8F00               	bsf	0,7,b	;volatile
 24806                           
 24807                           ; BSR set to: 4
 24808                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24809  002C3E  0E00               	movlw	0
 24810  002C40  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 24811                           
 24812                           ; BSR set to: 4
 24813                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24814  002C42  0E00               	movlw	0
 24815  002C44  0100               	movlb	0	; () banked
 24816  002C46  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24817                           
 24818                           ; BSR set to: 0
 24819  002C48  0012               	return		;funcret
 24820  002C4A                     __end_ofi2_USBDeviceInit:
 24821                           	opt stack 0
 24822                           pclatu	equ	0xFFB
 24823                           pclath	equ	0xFFA
 24824                           tblptru	equ	0xFF8
 24825                           tblptrh	equ	0xFF7
 24826                           tblptrl	equ	0xFF6
 24827                           tablat	equ	0xFF5
 24828                           prodh	equ	0xFF4
 24829                           prodl	equ	0xFF3
 24830                           intcon	equ	0xFF2
 24831                           intcon3	equ	0xFF0
 24832                           indf0	equ	0xFEF
 24833                           postinc0	equ	0xFEE
 24834                           fsr0h	equ	0xFEA
 24835                           fsr0l	equ	0xFE9
 24836                           wreg	equ	0xFE8
 24837                           indf1	equ	0xFE7
 24838                           postdec1	equ	0xFE5
 24839                           fsr1h	equ	0xFE2
 24840                           fsr1l	equ	0xFE1
 24841                           indf2	equ	0xFDF
 24842                           postinc2	equ	0xFDE
 24843                           postdec2	equ	0xFDD
 24844                           plusw2	equ	0xFDB
 24845                           fsr2h	equ	0xFDA
 24846                           fsr2l	equ	0xFD9
 24847                           status	equ	0xFD8
 24848                           
 24849 ;; *************** function _USBWakeFromSuspend *****************
 24850 ;; Defined at:
 24851 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 24852 ;; Parameters:    Size  Location     Type
 24853 ;;		None
 24854 ;; Auto vars:     Size  Location     Type
 24855 ;;		None
 24856 ;; Return value:  Size  Location     Type
 24857 ;;                  1    wreg      void 
 24858 ;; Registers used:
 24859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24860 ;; Tracked objects:
 24861 ;;		On entry : 0/0
 24862 ;;		On exit  : 0/0
 24863 ;;		Unchanged: 0/0
 24864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24865 ;;      Params:         0       0       0       0       0       0       0       0       0
 24866 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24867 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24868 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24869 ;;Total ram usage:        0 bytes
 24870 ;; Hardware stack levels used:    1
 24871 ;; Hardware stack levels required when called:    5
 24872 ;; This function calls:
 24873 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24874 ;; This function is called by:
 24875 ;;		_USBDeviceTasks
 24876 ;; This function uses a non-reentrant model
 24877 ;;
 24878                           
 24879                           	psect	text107
 24880  005422                     __ptext107:
 24881                           	opt stack 0
 24882  005422                     _USBWakeFromSuspend:
 24883                           	opt stack 14
 24884                           
 24885                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 24886                           
 24887                           ; BSR set to: 0
 24888                           ;incstack = 0
 24889  005422  0E00               	movlw	0
 24890  005424  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 24891                           
 24892                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24893  005426  0E00               	movlw	0
 24894  005428  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24895  00542A  0E74               	movlw	116
 24896  00542C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24897  00542E  0E00               	movlw	0
 24898  005430  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24899  005432  0E00               	movlw	0
 24900  005434  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24901  005436  0E00               	movlw	0
 24902  005438  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24903  00543A  0E00               	movlw	0
 24904  00543C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24905  00543E  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24906                           
 24907                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 24908  005442  9260               	bcf	3936,1,c	;volatile
 24909                           
 24910                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 24911  005444  9464               	bcf	3940,2,c	;volatile
 24912                           
 24913                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 24914  005446  D001               	goto	i2l1801
 24915  005448                     
 24916                           ;usb_device.c: 1977: {
 24917                           ;usb_device.c: 1978: (UIR &= 0xFB);
 24918  005448  9465               	bcf	3941,2,c	;volatile
 24919  00544A                     i2l1801:
 24920  00544A  A465               	btfss	3941,2,c	;volatile
 24921  00544C  0012               	return	
 24922  00544E  D7FC               	goto	i2l1802
 24923  005450                     __end_of_USBWakeFromSuspend:
 24924                           	opt stack 0
 24925                           pclatu	equ	0xFFB
 24926                           pclath	equ	0xFFA
 24927                           tblptru	equ	0xFF8
 24928                           tblptrh	equ	0xFF7
 24929                           tblptrl	equ	0xFF6
 24930                           tablat	equ	0xFF5
 24931                           prodh	equ	0xFF4
 24932                           prodl	equ	0xFF3
 24933                           intcon	equ	0xFF2
 24934                           intcon3	equ	0xFF0
 24935                           indf0	equ	0xFEF
 24936                           postinc0	equ	0xFEE
 24937                           fsr0h	equ	0xFEA
 24938                           fsr0l	equ	0xFE9
 24939                           wreg	equ	0xFE8
 24940                           indf1	equ	0xFE7
 24941                           postdec1	equ	0xFE5
 24942                           fsr1h	equ	0xFE2
 24943                           fsr1l	equ	0xFE1
 24944                           indf2	equ	0xFDF
 24945                           postinc2	equ	0xFDE
 24946                           postdec2	equ	0xFDD
 24947                           plusw2	equ	0xFDB
 24948                           fsr2h	equ	0xFDA
 24949                           fsr2l	equ	0xFD9
 24950                           status	equ	0xFD8
 24951                           
 24952 ;; *************** function _USBSuspend *****************
 24953 ;; Defined at:
 24954 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 24955 ;; Parameters:    Size  Location     Type
 24956 ;;		None
 24957 ;; Auto vars:     Size  Location     Type
 24958 ;;		None
 24959 ;; Return value:  Size  Location     Type
 24960 ;;                  1    wreg      void 
 24961 ;; Registers used:
 24962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24963 ;; Tracked objects:
 24964 ;;		On entry : 0/0
 24965 ;;		On exit  : 0/0
 24966 ;;		Unchanged: 0/0
 24967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24968 ;;      Params:         0       0       0       0       0       0       0       0       0
 24969 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24971 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24972 ;;Total ram usage:        0 bytes
 24973 ;; Hardware stack levels used:    1
 24974 ;; Hardware stack levels required when called:    5
 24975 ;; This function calls:
 24976 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24977 ;; This function is called by:
 24978 ;;		_USBDeviceTasks
 24979 ;; This function uses a non-reentrant model
 24980 ;;
 24981                           
 24982                           	psect	text108
 24983  0054CC                     __ptext108:
 24984                           	opt stack 0
 24985  0054CC                     _USBSuspend:
 24986                           	opt stack 14
 24987                           
 24988                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 24989                           
 24990                           ;incstack = 0
 24991  0054CC  8464               	bsf	3940,2,c	;volatile
 24992                           
 24993                           ;usb_device.c: 1915: (UIR &= 0xEF);
 24994  0054CE  9865               	bcf	3941,4,c	;volatile
 24995                           
 24996                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 24997  0054D0  8260               	bsf	3936,1,c	;volatile
 24998                           
 24999                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25000  0054D2  0E01               	movlw	1
 25001  0054D4  6E49               	movwf	_USBBusIsSuspended,c	;volatile
 25002                           
 25003                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25004  0054D6  0E00               	movlw	0
 25005  0054D8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25006  0054DA  0E75               	movlw	117
 25007  0054DC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25008  0054DE  0E00               	movlw	0
 25009  0054E0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25010  0054E2  0E00               	movlw	0
 25011  0054E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25012  0054E6  0E00               	movlw	0
 25013  0054E8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25014  0054EA  0E00               	movlw	0
 25015  0054EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25016  0054EE  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25017  0054F2  0012               	return		;funcret
 25018  0054F4                     __end_of_USBSuspend:
 25019                           	opt stack 0
 25020                           pclatu	equ	0xFFB
 25021                           pclath	equ	0xFFA
 25022                           tblptru	equ	0xFF8
 25023                           tblptrh	equ	0xFF7
 25024                           tblptrl	equ	0xFF6
 25025                           tablat	equ	0xFF5
 25026                           prodh	equ	0xFF4
 25027                           prodl	equ	0xFF3
 25028                           intcon	equ	0xFF2
 25029                           intcon3	equ	0xFF0
 25030                           indf0	equ	0xFEF
 25031                           postinc0	equ	0xFEE
 25032                           fsr0h	equ	0xFEA
 25033                           fsr0l	equ	0xFE9
 25034                           wreg	equ	0xFE8
 25035                           indf1	equ	0xFE7
 25036                           postdec1	equ	0xFE5
 25037                           fsr1h	equ	0xFE2
 25038                           fsr1l	equ	0xFE1
 25039                           indf2	equ	0xFDF
 25040                           postinc2	equ	0xFDE
 25041                           postdec2	equ	0xFDD
 25042                           plusw2	equ	0xFDB
 25043                           fsr2h	equ	0xFDA
 25044                           fsr2l	equ	0xFD9
 25045                           status	equ	0xFD8
 25046                           
 25047 ;; *************** function _USBStallHandler *****************
 25048 ;; Defined at:
 25049 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;		None
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;		None
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  1    wreg      void 
 25056 ;; Registers used:
 25057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25058 ;; Tracked objects:
 25059 ;;		On entry : 0/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25063 ;;      Params:         0       0       0       0       0       0       0       0       0
 25064 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25065 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25066 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25067 ;;Total ram usage:        1 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; This function calls:
 25070 ;;		Nothing
 25071 ;; This function is called by:
 25072 ;;		_USBDeviceTasks
 25073 ;; This function uses a non-reentrant model
 25074 ;;
 25075                           
 25076                           	psect	text109
 25077  00501A                     __ptext109:
 25078                           	opt stack 0
 25079  00501A                     _USBStallHandler:
 25080                           	opt stack 19
 25081                           
 25082                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25083                           
 25084                           ;incstack = 0
 25085  00501A  A06A               	btfss	3946,0,c	;volatile
 25086  00501C  D01D               	goto	i2l1793
 25087                           
 25088                           ;usb_device.c: 1859: {
 25089                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25090  00501E  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25091  005022  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25092  005026  0E80               	movlw	128
 25093  005028  18DE               	xorwf	postinc2,w,c
 25094  00502A  A4D8               	btfss	status,2,c
 25095  00502C  D014               	goto	i2l1794
 25096  00502E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25097  005032  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25098  005036  0E84               	movlw	132
 25099  005038  18DE               	xorwf	postinc2,w,c
 25100  00503A  A4D8               	btfss	status,2,c
 25101  00503C  D00C               	goto	i2l1794
 25102                           
 25103                           ;usb_device.c: 1862: {
 25104                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25105  00503E  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25106  005042  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25107  005046  0E0C               	movlw	12
 25108  005048  6EDF               	movwf	indf2,c
 25109                           
 25110                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25111  00504A  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25112  00504E  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25113  005052  0E00               	movlw	0
 25114  005054  8EDB               	bsf	plusw2,7,c
 25115  005056                     i2l1794:
 25116                           
 25117                           ;usb_device.c: 1866: }
 25118                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25119  005056  906A               	bcf	3946,0,c	;volatile
 25120  005058                     i2l1793:
 25121                           
 25122                           ;usb_device.c: 1868: }
 25123                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25124  005058  9A65               	bcf	3941,5,c	;volatile
 25125  00505A  0012               	return		;funcret
 25126  00505C                     __end_of_USBStallHandler:
 25127                           	opt stack 0
 25128                           pclatu	equ	0xFFB
 25129                           pclath	equ	0xFFA
 25130                           tblptru	equ	0xFF8
 25131                           tblptrh	equ	0xFF7
 25132                           tblptrl	equ	0xFF6
 25133                           tablat	equ	0xFF5
 25134                           prodh	equ	0xFF4
 25135                           prodl	equ	0xFF3
 25136                           intcon	equ	0xFF2
 25137                           intcon3	equ	0xFF0
 25138                           indf0	equ	0xFEF
 25139                           postinc0	equ	0xFEE
 25140                           fsr0h	equ	0xFEA
 25141                           fsr0l	equ	0xFE9
 25142                           wreg	equ	0xFE8
 25143                           indf1	equ	0xFE7
 25144                           postdec1	equ	0xFE5
 25145                           fsr1h	equ	0xFE2
 25146                           fsr1l	equ	0xFE1
 25147                           indf2	equ	0xFDF
 25148                           postinc2	equ	0xFDE
 25149                           postdec2	equ	0xFDD
 25150                           plusw2	equ	0xFDB
 25151                           fsr2h	equ	0xFDA
 25152                           fsr2l	equ	0xFD9
 25153                           status	equ	0xFD8
 25154                           
 25155 ;; *************** function _USBCtrlEPService *****************
 25156 ;; Defined at:
 25157 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25158 ;; Parameters:    Size  Location     Type
 25159 ;;		None
 25160 ;; Auto vars:     Size  Location     Type
 25161 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25162 ;; Return value:  Size  Location     Type
 25163 ;;                  1    wreg      void 
 25164 ;; Registers used:
 25165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25166 ;; Tracked objects:
 25167 ;;		On entry : 0/0
 25168 ;;		On exit  : 0/0
 25169 ;;		Unchanged: 0/0
 25170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25171 ;;      Params:         0       0       0       0       0       0       0       0       0
 25172 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25173 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25174 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25175 ;;Total ram usage:        3 bytes
 25176 ;; Hardware stack levels used:    1
 25177 ;; Hardware stack levels required when called:    8
 25178 ;; This function calls:
 25179 ;;		_USBCtrlTrfInHandler
 25180 ;;		_USBCtrlTrfOutHandler
 25181 ;;		_USBCtrlTrfSetupHandler
 25182 ;; This function is called by:
 25183 ;;		_USBDeviceTasks
 25184 ;; This function uses a non-reentrant model
 25185 ;;
 25186                           
 25187                           	psect	text110
 25188  00374A                     __ptext110:
 25189                           	opt stack 0
 25190  00374A                     _USBCtrlEPService:
 25191                           	opt stack 11
 25192                           
 25193                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25194                           
 25195                           ;incstack = 0
 25196  00374A  0E2D               	movlw	45
 25197  00374C  6E46               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25198                           
 25199                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25200  00374E  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25201  003752  0EFD               	movlw	253
 25202  003754  161C               	andwf	??_USBCtrlEPService,f,c
 25203  003756  A4D8               	btfss	status,2,c
 25204  003758  D057               	goto	i2l1807
 25205                           
 25206                           ;usb_device.c: 2013: {
 25207                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25208  00375A  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25209  00375E  90D8               	bcf	status,0,c
 25210  003760  321C               	rrcf	??_USBCtrlEPService,f,c
 25211  003762  0E3F               	movlw	63
 25212  003764  161C               	andwf	??_USBCtrlEPService,f,c
 25213  003766  501C               	movf	??_USBCtrlEPService,w,c
 25214  003768  0D04               	mullw	4
 25215  00376A  0E00               	movlw	0
 25216  00376C  24F3               	addwf	prodl,w,c
 25217  00376E  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 25218  003770  0E04               	movlw	4
 25219  003772  20F4               	addwfc	prodh,w,c
 25220  003774  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25221                           
 25222                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25223  003776  C036  F034         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25224  00377A  C037  F035         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25225                           
 25226                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25227  00377E  0E04               	movlw	4
 25228  003780  1A34               	xorwf	_pBDTEntryEP0OutNext,f,c
 25229                           
 25230                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25231  003782  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25232  003786  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25233  00378A  30DF               	rrcf	indf2,w,c
 25234  00378C  32E8               	rrcf	wreg,f,c
 25235  00378E  0B0F               	andlw	15
 25236  003790  0A0D               	xorlw	13
 25237  003792  A4D8               	btfss	status,2,c
 25238  003794  D036               	goto	i2l1808
 25239                           
 25240                           ;usb_device.c: 2025: {
 25241                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25242                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25243  003796  0E00               	movlw	0
 25244  003798  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25245  00379A                     i2l10688:
 25246  00379A  0E07               	movlw	7
 25247  00379C  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25248  00379E  D001               	goto	i2l1809
 25249  0037A0  D023               	goto	i2u955_40
 25250  0037A2                     i2l1809:
 25251                           
 25252                           ;usb_device.c: 2033: {
 25253                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25254  0037A2  EE20 F002          	lfsr	2,2
 25255  0037A6  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 25256  0037A8  26D9               	addwf	fsr2l,f,c
 25257  0037AA  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25258  0037AC  22DA               	addwfc	fsr2h,f,c
 25259  0037AE  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25260  0037B2  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25261  0037B6  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25262  0037BA  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25263  0037BE  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25264  0037C0  0D01               	mullw	1
 25265  0037C2  0E30               	movlw	48
 25266  0037C4  24F3               	addwf	prodl,w,c
 25267  0037C6  6EE1               	movwf	fsr1l,c
 25268  0037C8  0E04               	movlw	4
 25269  0037CA  20F4               	addwfc	prodh,w,c
 25270  0037CC  6EE2               	movwf	fsr1h,c
 25271  0037CE  CFDF FFE7          	movff	indf2,indf1
 25272                           
 25273                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25274  0037D2  EE20 F002          	lfsr	2,2
 25275  0037D6  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 25276  0037D8  26D9               	addwf	fsr2l,f,c
 25277  0037DA  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25278  0037DC  22DA               	addwfc	fsr2h,f,c
 25279  0037DE  2ADE               	incf	postinc2,f,c
 25280  0037E0  0E00               	movlw	0
 25281  0037E2  22DD               	addwfc	postdec2,f,c
 25282  0037E4  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25283  0037E6  D7D9               	goto	i2l10688
 25284  0037E8                     i2u955_40:
 25285                           
 25286                           ;usb_device.c: 2036: }
 25287                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25288  0037E8  EE20 F002          	lfsr	2,2
 25289  0037EC  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 25290  0037EE  26D9               	addwf	fsr2l,f,c
 25291  0037F0  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25292  0037F2  22DA               	addwfc	fsr2h,f,c
 25293  0037F4  0E30               	movlw	48
 25294  0037F6  6EDE               	movwf	postinc2,c
 25295  0037F8  0E04               	movlw	4
 25296  0037FA  6EDD               	movwf	postdec2,c
 25297                           
 25298                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25299  0037FC  ECF3  F022         	call	_USBCtrlTrfSetupHandler	;wreg free
 25300                           
 25301                           ;usb_device.c: 2041: }
 25302  003800  0012               	return	
 25303  003802                     i2l1808:
 25304                           
 25305                           ;usb_device.c: 2042: else
 25306                           ;usb_device.c: 2043: {
 25307                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25308  003802  ECAD  F026         	call	_USBCtrlTrfOutHandler	;wreg free
 25309                           
 25310                           ;usb_device.c: 2046: }
 25311                           ;usb_device.c: 2047: }
 25312  003806  0012               	return	
 25313  003808                     i2l1807:
 25314                           
 25315                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25316  003808  5059               	movf	_USTATcopy,w,c	;volatile
 25317  00380A  0BFD               	andlw	253
 25318  00380C  0A04               	xorlw	4
 25319  00380E  A4D8               	btfss	status,2,c
 25320  003810  0012               	return	
 25321                           
 25322                           ;usb_device.c: 2049: {
 25323                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25324  003812  EC7B  F019         	call	_USBCtrlTrfInHandler	;wreg free
 25325  003816  0012               	return	
 25326  003818                     __end_of_USBCtrlEPService:
 25327                           	opt stack 0
 25328                           pclatu	equ	0xFFB
 25329                           pclath	equ	0xFFA
 25330                           tblptru	equ	0xFF8
 25331                           tblptrh	equ	0xFF7
 25332                           tblptrl	equ	0xFF6
 25333                           tablat	equ	0xFF5
 25334                           prodh	equ	0xFF4
 25335                           prodl	equ	0xFF3
 25336                           intcon	equ	0xFF2
 25337                           intcon3	equ	0xFF0
 25338                           indf0	equ	0xFEF
 25339                           postinc0	equ	0xFEE
 25340                           fsr0h	equ	0xFEA
 25341                           fsr0l	equ	0xFE9
 25342                           wreg	equ	0xFE8
 25343                           indf1	equ	0xFE7
 25344                           postdec1	equ	0xFE5
 25345                           fsr1h	equ	0xFE2
 25346                           fsr1l	equ	0xFE1
 25347                           indf2	equ	0xFDF
 25348                           postinc2	equ	0xFDE
 25349                           postdec2	equ	0xFDD
 25350                           plusw2	equ	0xFDB
 25351                           fsr2h	equ	0xFDA
 25352                           fsr2l	equ	0xFD9
 25353                           status	equ	0xFD8
 25354                           
 25355 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25356 ;; Defined at:
 25357 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25358 ;; Parameters:    Size  Location     Type
 25359 ;;		None
 25360 ;; Auto vars:     Size  Location     Type
 25361 ;;		None
 25362 ;; Return value:  Size  Location     Type
 25363 ;;                  1    wreg      void 
 25364 ;; Registers used:
 25365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25366 ;; Tracked objects:
 25367 ;;		On entry : 0/0
 25368 ;;		On exit  : 0/0
 25369 ;;		Unchanged: 0/0
 25370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25371 ;;      Params:         0       0       0       0       0       0       0       0       0
 25372 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25374 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25375 ;;Total ram usage:        0 bytes
 25376 ;; Hardware stack levels used:    1
 25377 ;; Hardware stack levels required when called:    7
 25378 ;; This function calls:
 25379 ;;		_USBCheckStdRequest
 25380 ;;		_USBCtrlEPServiceComplete
 25381 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25382 ;; This function is called by:
 25383 ;;		_USBCtrlEPService
 25384 ;; This function uses a non-reentrant model
 25385 ;;
 25386                           
 25387                           	psect	text111
 25388  0045E6                     __ptext111:
 25389                           	opt stack 0
 25390  0045E6                     _USBCtrlTrfSetupHandler:
 25391                           	opt stack 11
 25392                           
 25393                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25394                           
 25395                           ;incstack = 0
 25396  0045E6  0E00               	movlw	0
 25397  0045E8  6E4C               	movwf	_shortPacketStatus,c	;volatile
 25398                           
 25399                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25400  0045EA  0E00               	movlw	0
 25401  0045EC  6E45               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25402                           
 25403                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25404  0045EE  0E00               	movlw	0
 25405  0045F0  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25406                           
 25407                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25408  0045F2  0E00               	movlw	0
 25409  0045F4  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25410                           
 25411                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25412  0045F6  0E00               	movlw	0
 25413  0045F8  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25414                           
 25415                           ;usb_device.c: 2107: controlTransferState = 0;
 25416  0045FA  0E00               	movlw	0
 25417  0045FC  6E4B               	movwf	_controlTransferState,c	;volatile
 25418                           
 25419                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25420  0045FE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25421  004602  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25422  004606  0E7F               	movlw	127
 25423  004608  16DF               	andwf	indf2,f,c
 25424                           
 25425                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25426  00460A  0E04               	movlw	4
 25427  00460C  0100               	movlb	0	; () banked
 25428  00460E  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25429                           
 25430                           ; BSR set to: 0
 25431                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25432  004610  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25433  004614  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25434  004618  0E7F               	movlw	127
 25435  00461A  16DF               	andwf	indf2,f,c
 25436                           
 25437                           ; BSR set to: 0
 25438                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25439  00461C  0E04               	movlw	4
 25440  00461E  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25441                           
 25442                           ; BSR set to: 0
 25443                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25444  004620  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25445  004624  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25446  004628  0E7F               	movlw	127
 25447  00462A  16DF               	andwf	indf2,f,c
 25448                           
 25449                           ; BSR set to: 0
 25450                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25451  00462C  0E00               	movlw	0
 25452  00462E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25453                           
 25454                           ; BSR set to: 0
 25455                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25456  004630  0E00               	movlw	0
 25457  004632  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25458  004634  0E00               	movlw	0
 25459  004636  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25460                           
 25461                           ; BSR set to: 0
 25462                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25463  004638  0E00               	movlw	0
 25464  00463A  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25465                           
 25466                           ; BSR set to: 0
 25467                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25468  00463C  0E00               	movlw	0
 25469  00463E  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25470  004640  0E00               	movlw	0
 25471  004642  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25472                           
 25473                           ; BSR set to: 0
 25474                           ;usb_device.c: 2131: USBCheckStdRequest();
 25475  004644  EC99  F018         	call	_USBCheckStdRequest	;wreg free
 25476                           
 25477                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25478  004648  0E00               	movlw	0
 25479  00464A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25480  00464C  0E03               	movlw	3
 25481  00464E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25482  004650  0E00               	movlw	0
 25483  004652  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25484  004654  0E00               	movlw	0
 25485  004656  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25486  004658  0E00               	movlw	0
 25487  00465A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25488  00465C  0E00               	movlw	0
 25489  00465E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25490  004660  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25491                           
 25492                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25493  004664  EC37  F017         	call	_USBCtrlEPServiceComplete	;wreg free
 25494  004668  0012               	return		;funcret
 25495  00466A                     __end_of_USBCtrlTrfSetupHandler:
 25496                           	opt stack 0
 25497                           pclatu	equ	0xFFB
 25498                           pclath	equ	0xFFA
 25499                           tblptru	equ	0xFF8
 25500                           tblptrh	equ	0xFF7
 25501                           tblptrl	equ	0xFF6
 25502                           tablat	equ	0xFF5
 25503                           prodh	equ	0xFF4
 25504                           prodl	equ	0xFF3
 25505                           intcon	equ	0xFF2
 25506                           intcon3	equ	0xFF0
 25507                           indf0	equ	0xFEF
 25508                           postinc0	equ	0xFEE
 25509                           fsr0h	equ	0xFEA
 25510                           fsr0l	equ	0xFE9
 25511                           wreg	equ	0xFE8
 25512                           indf1	equ	0xFE7
 25513                           postdec1	equ	0xFE5
 25514                           fsr1h	equ	0xFE2
 25515                           fsr1l	equ	0xFE1
 25516                           indf2	equ	0xFDF
 25517                           postinc2	equ	0xFDE
 25518                           postdec2	equ	0xFDD
 25519                           plusw2	equ	0xFDB
 25520                           fsr2h	equ	0xFDA
 25521                           fsr2l	equ	0xFD9
 25522                           status	equ	0xFD8
 25523                           
 25524 ;; *************** function _USBCtrlEPServiceComplete *****************
 25525 ;; Defined at:
 25526 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25527 ;; Parameters:    Size  Location     Type
 25528 ;;		None
 25529 ;; Auto vars:     Size  Location     Type
 25530 ;;		None
 25531 ;; Return value:  Size  Location     Type
 25532 ;;                  1    wreg      void 
 25533 ;; Registers used:
 25534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25535 ;; Tracked objects:
 25536 ;;		On entry : 0/0
 25537 ;;		On exit  : 0/0
 25538 ;;		Unchanged: 0/0
 25539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25540 ;;      Params:         0       0       0       0       0       0       0       0       0
 25541 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25542 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25543 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25544 ;;Total ram usage:        0 bytes
 25545 ;; Hardware stack levels used:    1
 25546 ;; Hardware stack levels required when called:    2
 25547 ;; This function calls:
 25548 ;;		_USBCtrlEPAllowDataStage
 25549 ;;		_USBCtrlEPAllowStatusStage
 25550 ;; This function is called by:
 25551 ;;		_USBCtrlTrfSetupHandler
 25552 ;; This function uses a non-reentrant model
 25553 ;;
 25554                           
 25555                           	psect	text112
 25556  002E6E                     __ptext112:
 25557                           	opt stack 0
 25558  002E6E                     _USBCtrlEPServiceComplete:
 25559                           	opt stack 15
 25560                           
 25561                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25562                           
 25563                           ;incstack = 0
 25564  002E6E  9860               	bcf	3936,4,c	;volatile
 25565                           
 25566                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25567  002E70  0100               	movlb	0	; () banked
 25568  002E72  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25569  002E74  D038               	goto	i2l1717
 25570                           
 25571                           ; BSR set to: 0
 25572                           ;usb_device.c: 1295: {
 25573                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25574  002E76  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25575  002E78  D00B               	goto	i2l1718
 25576                           
 25577                           ; BSR set to: 0
 25578                           ;usb_device.c: 1297: {
 25579                           ;usb_device.c: 1298: controlTransferState = 2;
 25580  002E7A  0E02               	movlw	2
 25581  002E7C  6E4B               	movwf	_controlTransferState,c	;volatile
 25582                           
 25583                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25584  002E7E  5041               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25585  002E80  B4D8               	btfsc	status,2,c
 25586                           
 25587                           ; BSR set to: 0
 25588                           ;usb_device.c: 1310: {
 25589                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25590  002E82  ECB9  F020         	call	_USBCtrlEPAllowDataStage	;wreg free
 25591                           
 25592                           ;usb_device.c: 1312: }
 25593                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25594  002E86  0E00               	movlw	0
 25595  002E88  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25596                           
 25597                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25598  002E8A  0E00               	movlw	0
 25599  002E8C  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25600                           
 25601                           ;usb_device.c: 1318: }
 25602  002E8E  0012               	return	
 25603  002E90                     i2l1718:
 25604                           
 25605                           ;usb_device.c: 1319: else
 25606                           ;usb_device.c: 1320: {
 25607                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25608  002E90  EE20 F001          	lfsr	2,1
 25609  002E94  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25610  002E96  26D9               	addwf	fsr2l,f,c
 25611  002E98  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25612  002E9A  22DA               	addwfc	fsr2h,f,c
 25613  002E9C  0E08               	movlw	8
 25614  002E9E  6EDF               	movwf	indf2,c
 25615                           
 25616                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25617  002EA0  EE20 F002          	lfsr	2,2
 25618  002EA4  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25619  002EA6  26D9               	addwf	fsr2l,f,c
 25620  002EA8  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25621  002EAA  22DA               	addwfc	fsr2h,f,c
 25622  002EAC  0E30               	movlw	48
 25623  002EAE  6EDE               	movwf	postinc2,c
 25624  002EB0  0E04               	movlw	4
 25625  002EB2  6EDD               	movwf	postdec2,c
 25626                           
 25627                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25628  002EB4  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25629  002EB8  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25630  002EBC  0E0C               	movlw	12
 25631  002EBE  6EDF               	movwf	indf2,c
 25632                           
 25633                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25634  002EC0  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25635  002EC4  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25636  002EC8  0E00               	movlw	0
 25637  002ECA  8EDB               	bsf	plusw2,7,c
 25638                           
 25639                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25640  002ECC  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25641  002ED0  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25642  002ED4  0E04               	movlw	4
 25643  002ED6  6EDF               	movwf	indf2,c
 25644                           
 25645                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25646  002ED8  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25647  002EDC  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25648  002EE0  0E00               	movlw	0
 25649  002EE2  8EDB               	bsf	plusw2,7,c
 25650                           
 25651                           ;usb_device.c: 1331: }
 25652                           ;usb_device.c: 1332: }
 25653  002EE4  0012               	return	
 25654  002EE6                     i2l1717:
 25655                           
 25656                           ; BSR set to: 0
 25657                           ;usb_device.c: 1333: else
 25658                           ;usb_device.c: 1334: {
 25659                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25660  002EE6  0104               	movlb	4	; () banked
 25661  002EE8  AF30               	btfss	48,7,b	;volatile
 25662  002EEA  D010               	goto	i2l1722
 25663                           
 25664                           ; BSR set to: 4
 25665                           ;usb_device.c: 1336: {
 25666                           ;usb_device.c: 1337: controlTransferState = 1;
 25667  002EEC  0E01               	movlw	1
 25668  002EEE  6E4B               	movwf	_controlTransferState,c	;volatile
 25669                           
 25670                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25671  002EF0  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25672  002EF2  B4D8               	btfsc	status,2,c
 25673                           
 25674                           ; BSR set to: 4
 25675                           ;usb_device.c: 1352: {
 25676                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 25677  002EF4  ECB9  F020         	call	_USBCtrlEPAllowDataStage	;wreg free
 25678                           
 25679                           ;usb_device.c: 1354: }
 25680                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 25681  002EF8  0E00               	movlw	0
 25682  002EFA  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25683                           
 25684                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 25685  002EFC  0E00               	movlw	0
 25686  002EFE  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25687                           
 25688                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 25689  002F00  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25690  002F02  A4D8               	btfss	status,2,c
 25691  002F04  0012               	return	
 25692                           
 25693                           ;usb_device.c: 1379: {
 25694                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 25695  002F06  ECD5  F01C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25696                           
 25697                           ;usb_device.c: 1381: }
 25698                           ;usb_device.c: 1382: }
 25699  002F0A  0012               	return	
 25700  002F0C                     i2l1722:
 25701                           
 25702                           ;usb_device.c: 1383: else
 25703                           ;usb_device.c: 1384: {
 25704                           ;usb_device.c: 1395: controlTransferState = 2;
 25705  002F0C  0E02               	movlw	2
 25706  002F0E  6E4B               	movwf	_controlTransferState,c	;volatile
 25707                           
 25708                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 25709  002F10  EE20 F001          	lfsr	2,1
 25710  002F14  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25711  002F16  26D9               	addwf	fsr2l,f,c
 25712  002F18  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25713  002F1A  22DA               	addwfc	fsr2h,f,c
 25714  002F1C  0E08               	movlw	8
 25715  002F1E  6EDF               	movwf	indf2,c
 25716                           
 25717                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25718  002F20  EE20 F002          	lfsr	2,2
 25719  002F24  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25720  002F26  26D9               	addwf	fsr2l,f,c
 25721  002F28  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25722  002F2A  22DA               	addwfc	fsr2h,f,c
 25723  002F2C  0E30               	movlw	48
 25724  002F2E  6EDE               	movwf	postinc2,c
 25725  002F30  0E04               	movlw	4
 25726  002F32  6EDD               	movwf	postdec2,c
 25727                           
 25728                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25729  002F34  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25730  002F38  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25731  002F3C  0E04               	movlw	4
 25732  002F3E  6EDF               	movwf	indf2,c
 25733                           
 25734                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25735  002F40  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25736  002F44  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25737  002F48  0E00               	movlw	0
 25738  002F4A  8EDB               	bsf	plusw2,7,c
 25739                           
 25740                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 25741  002F4C  0E00               	movlw	0
 25742  002F4E  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25743                           
 25744                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 25745  002F50  0E00               	movlw	0
 25746  002F52  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25747                           
 25748                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 25749  002F54  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25750  002F56  A4D8               	btfss	status,2,c
 25751  002F58  0012               	return	
 25752                           
 25753                           ;usb_device.c: 1407: {
 25754                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 25755  002F5A  ECD5  F01C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25756  002F5E  0012               	return	
 25757  002F60                     __end_of_USBCtrlEPServiceComplete:
 25758                           	opt stack 0
 25759                           pclatu	equ	0xFFB
 25760                           pclath	equ	0xFFA
 25761                           tblptru	equ	0xFF8
 25762                           tblptrh	equ	0xFF7
 25763                           tblptrl	equ	0xFF6
 25764                           tablat	equ	0xFF5
 25765                           prodh	equ	0xFF4
 25766                           prodl	equ	0xFF3
 25767                           intcon	equ	0xFF2
 25768                           intcon3	equ	0xFF0
 25769                           indf0	equ	0xFEF
 25770                           postinc0	equ	0xFEE
 25771                           fsr0h	equ	0xFEA
 25772                           fsr0l	equ	0xFE9
 25773                           wreg	equ	0xFE8
 25774                           indf1	equ	0xFE7
 25775                           postdec1	equ	0xFE5
 25776                           fsr1h	equ	0xFE2
 25777                           fsr1l	equ	0xFE1
 25778                           indf2	equ	0xFDF
 25779                           postinc2	equ	0xFDE
 25780                           postdec2	equ	0xFDD
 25781                           plusw2	equ	0xFDB
 25782                           fsr2h	equ	0xFDA
 25783                           fsr2l	equ	0xFD9
 25784                           status	equ	0xFD8
 25785                           
 25786 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25787 ;; Defined at:
 25788 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 25789 ;; Parameters:    Size  Location     Type
 25790 ;;		None
 25791 ;; Auto vars:     Size  Location     Type
 25792 ;;		None
 25793 ;; Return value:  Size  Location     Type
 25794 ;;                  1    wreg      void 
 25795 ;; Registers used:
 25796 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25797 ;; Tracked objects:
 25798 ;;		On entry : 0/0
 25799 ;;		On exit  : 0/0
 25800 ;;		Unchanged: 0/0
 25801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25802 ;;      Params:         0       0       0       0       0       0       0       0       0
 25803 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25804 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25805 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25806 ;;Total ram usage:        0 bytes
 25807 ;; Hardware stack levels used:    1
 25808 ;; Hardware stack levels required when called:    1
 25809 ;; This function calls:
 25810 ;;		_USBCtrlTrfTxService
 25811 ;; This function is called by:
 25812 ;;		_USBCtrlEPServiceComplete
 25813 ;; This function uses a non-reentrant model
 25814 ;;
 25815                           
 25816                           	psect	text113
 25817  004172                     __ptext113:
 25818                           	opt stack 0
 25819  004172                     _USBCtrlEPAllowDataStage:
 25820                           	opt stack 15
 25821                           
 25822                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 25823                           
 25824                           ;incstack = 0
 25825  004172  0E00               	movlw	0
 25826  004174  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25827                           
 25828                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 25829  004176  0E00               	movlw	0
 25830  004178  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25831                           
 25832                           ;usb_device.c: 1178: if(controlTransferState == 2)
 25833  00417A  0E02               	movlw	2
 25834  00417C  184B               	xorwf	_controlTransferState,w,c	;volatile
 25835  00417E  A4D8               	btfss	status,2,c
 25836  004180  D01F               	goto	i2l1706
 25837                           
 25838                           ;usb_device.c: 1179: {
 25839                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 25840  004182  EE20 F001          	lfsr	2,1
 25841  004186  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25842  004188  26D9               	addwf	fsr2l,f,c
 25843  00418A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25844  00418C  22DA               	addwfc	fsr2h,f,c
 25845  00418E  0E08               	movlw	8
 25846  004190  6EDF               	movwf	indf2,c
 25847                           
 25848                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25849  004192  EE20 F002          	lfsr	2,2
 25850  004196  5034               	movf	_pBDTEntryEP0OutNext,w,c
 25851  004198  26D9               	addwf	fsr2l,f,c
 25852  00419A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 25853  00419C  22DA               	addwfc	fsr2h,f,c
 25854  00419E  0E38               	movlw	56
 25855  0041A0  6EDE               	movwf	postinc2,c
 25856  0041A2  0E04               	movlw	4
 25857  0041A4  6EDD               	movwf	postdec2,c
 25858                           
 25859                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25860  0041A6  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25861  0041AA  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25862  0041AE  0E48               	movlw	72
 25863  0041B0  6EDF               	movwf	indf2,c
 25864                           
 25865                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25866  0041B2  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25867  0041B6  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25868  0041BA  0E00               	movlw	0
 25869  0041BC  8EDB               	bsf	plusw2,7,c
 25870                           
 25871                           ;usb_device.c: 1185: }
 25872  0041BE  0012               	return	
 25873  0041C0                     i2l1706:
 25874                           
 25875                           ;usb_device.c: 1186: else
 25876                           ;usb_device.c: 1187: {
 25877                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25878  0041C0  0100               	movlb	0	; () banked
 25879  0041C2  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25880  0041C4  0104               	movlb	4	; () banked
 25881  0041C6  5D36               	subwf	54,w,b	;volatile
 25882  0041C8  0100               	movlb	0	; () banked
 25883  0041CA  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25884  0041CC  0104               	movlb	4	; () banked
 25885  0041CE  5937               	subwfb	55,w,b	;volatile
 25886  0041D0  B0D8               	btfsc	status,0,c
 25887  0041D2  D004               	goto	i2l1708
 25888                           
 25889                           ; BSR set to: 4
 25890                           ;usb_device.c: 1191: {
 25891                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 25892  0041D4  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 25893  0041D8  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 25894  0041DC                     i2l1708:
 25895                           
 25896                           ; BSR set to: 4
 25897                           ;usb_device.c: 1193: }
 25898                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 25899                           
 25900                           ; BSR set to: 4
 25901  0041DC  EC3B  F01B         	call	_USBCtrlTrfTxService	;wreg free
 25902                           
 25903                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25904  0041E0  0100               	movlb	0	; () banked
 25905  0041E2  EE20 F002          	lfsr	2,2
 25906  0041E6  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 25907  0041E8  26D9               	addwf	fsr2l,f,c
 25908  0041EA  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25909  0041EC  22DA               	addwfc	fsr2h,f,c
 25910  0041EE  0E38               	movlw	56
 25911  0041F0  6EDE               	movwf	postinc2,c
 25912  0041F2  0E04               	movlw	4
 25913  0041F4  6EDD               	movwf	postdec2,c
 25914                           
 25915                           ; BSR set to: 0
 25916                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25917  0041F6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25918  0041FA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25919  0041FE  0E48               	movlw	72
 25920  004200  6EDF               	movwf	indf2,c
 25921                           
 25922                           ; BSR set to: 0
 25923                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25924  004202  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25925  004206  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25926  00420A  0E00               	movlw	0
 25927  00420C  8EDB               	bsf	plusw2,7,c
 25928  00420E  0012               	return	
 25929  004210                     __end_of_USBCtrlEPAllowDataStage:
 25930                           	opt stack 0
 25931                           pclatu	equ	0xFFB
 25932                           pclath	equ	0xFFA
 25933                           tblptru	equ	0xFF8
 25934                           tblptrh	equ	0xFF7
 25935                           tblptrl	equ	0xFF6
 25936                           tablat	equ	0xFF5
 25937                           prodh	equ	0xFF4
 25938                           prodl	equ	0xFF3
 25939                           intcon	equ	0xFF2
 25940                           intcon3	equ	0xFF0
 25941                           indf0	equ	0xFEF
 25942                           postinc0	equ	0xFEE
 25943                           fsr0h	equ	0xFEA
 25944                           fsr0l	equ	0xFE9
 25945                           wreg	equ	0xFE8
 25946                           indf1	equ	0xFE7
 25947                           postdec1	equ	0xFE5
 25948                           fsr1h	equ	0xFE2
 25949                           fsr1l	equ	0xFE1
 25950                           indf2	equ	0xFDF
 25951                           postinc2	equ	0xFDE
 25952                           postdec2	equ	0xFDD
 25953                           plusw2	equ	0xFDB
 25954                           fsr2h	equ	0xFDA
 25955                           fsr2l	equ	0xFD9
 25956                           status	equ	0xFD8
 25957                           
 25958 ;; *************** function _USBCheckStdRequest *****************
 25959 ;; Defined at:
 25960 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 25961 ;; Parameters:    Size  Location     Type
 25962 ;;		None
 25963 ;; Auto vars:     Size  Location     Type
 25964 ;;		None
 25965 ;; Return value:  Size  Location     Type
 25966 ;;                  1    wreg      void 
 25967 ;; Registers used:
 25968 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25969 ;; Tracked objects:
 25970 ;;		On entry : 0/0
 25971 ;;		On exit  : 0/0
 25972 ;;		Unchanged: 0/0
 25973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25974 ;;      Params:         0       0       0       0       0       0       0       0       0
 25975 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25977 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25978 ;;Total ram usage:        0 bytes
 25979 ;; Hardware stack levels used:    1
 25980 ;; Hardware stack levels required when called:    6
 25981 ;; This function calls:
 25982 ;;		_USBStdFeatureReqHandler
 25983 ;;		_USBStdGetDscHandler
 25984 ;;		_USBStdGetStatusHandler
 25985 ;;		_USBStdSetCfgHandler
 25986 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25987 ;; This function is called by:
 25988 ;;		_USBCtrlTrfSetupHandler
 25989 ;; This function uses a non-reentrant model
 25990 ;;
 25991                           
 25992                           	psect	text114
 25993  003132                     __ptext114:
 25994                           	opt stack 0
 25995  003132                     _USBCheckStdRequest:
 25996                           	opt stack 11
 25997                           
 25998                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 25999                           
 26000                           ;incstack = 0
 26001  003132  0104               	movlb	4	; () banked
 26002  003134  3930               	swapf	48,w,b	;volatile
 26003  003136  32E8               	rrcf	wreg,f,c
 26004  003138  0B03               	andlw	3
 26005  00313A  0900               	iorlw	0
 26006  00313C  A4D8               	btfss	status,2,c
 26007  00313E  0012               	return	
 26008  003140  D047               	goto	i2l1843
 26009  003142                     i2l1844:
 26010                           
 26011                           ; BSR set to: 4
 26012                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26013  003142  0100               	movlb	0	; () banked
 26014  003144  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26015                           
 26016                           ; BSR set to: 0
 26017                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26018  003146  0E08               	movlw	8
 26019  003148  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26020                           
 26021                           ;usb_device.c: 2327: break;
 26022  00314A  0012               	return	
 26023  00314C                     
 26024                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26025                           
 26026                           ; BSR set to: 0
 26027  00314C  EC62  F014         	call	_USBStdGetDscHandler	;wreg free
 26028                           
 26029                           ;usb_device.c: 2330: break;
 26030  003150  0012               	return	
 26031  003152                     
 26032                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26033  003152  EC0A  F019         	call	_USBStdSetCfgHandler	;wreg free
 26034                           
 26035                           ;usb_device.c: 2333: break;
 26036  003156  0012               	return	
 26037  003158                     
 26038                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26039  003158  0E5A               	movlw	low _USBActiveConfiguration
 26040  00315A  0100               	movlb	0	; () banked
 26041  00315C  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26042  00315E  0E00               	movlw	high _USBActiveConfiguration
 26043  003160  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26044                           
 26045                           ; BSR set to: 0
 26046                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26047  003162  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26048                           
 26049                           ; BSR set to: 0
 26050                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26051  003164  0E01               	movlw	1
 26052  003166  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26053                           
 26054                           ; BSR set to: 0
 26055                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26056  003168  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26057                           
 26058                           ;usb_device.c: 2339: break;
 26059  00316A  0012               	return	
 26060  00316C                     
 26061                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26062                           
 26063                           ; BSR set to: 0
 26064  00316C  EC12  F020         	call	_USBStdGetStatusHandler	;wreg free
 26065                           
 26066                           ;usb_device.c: 2342: break;
 26067  003170  0012               	return	
 26068  003172                     
 26069                           ;usb_device.c: 2344: case 3:
 26070                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26071  003172  ECF3  F00E         	call	_USBStdFeatureReqHandler	;wreg free
 26072                           
 26073                           ;usb_device.c: 2346: break;
 26074  003176  0012               	return	
 26075  003178                     
 26076                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26077  003178  0104               	movlb	4	; () banked
 26078  00317A  5134               	movf	52,w,b	;volatile
 26079  00317C  0D01               	mullw	1
 26080  00317E  0E57               	movlw	low _USBAlternateInterface
 26081  003180  24F3               	addwf	prodl,w,c
 26082  003182  0100               	movlb	0	; () banked
 26083  003184  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26084  003186  0E00               	movlw	high _USBAlternateInterface
 26085  003188  20F4               	addwfc	prodh,w,c
 26086  00318A  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26087                           
 26088                           ; BSR set to: 0
 26089                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26090  00318C  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26091                           
 26092                           ; BSR set to: 0
 26093                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26094  00318E  0E01               	movlw	1
 26095  003190  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26096                           
 26097                           ; BSR set to: 0
 26098                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26099  003192  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26100                           
 26101                           ;usb_device.c: 2352: break;
 26102  003194  0012               	return	
 26103  003196                     i2l1853:
 26104                           
 26105                           ; BSR set to: 4
 26106                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26107  003196  0100               	movlb	0	; () banked
 26108  003198  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26109                           
 26110                           ; BSR set to: 0
 26111                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26112  00319A  0104               	movlb	4	; () banked
 26113  00319C  5134               	movf	52,w,b	;volatile
 26114  00319E  0D01               	mullw	1
 26115  0031A0  0E57               	movlw	low _USBAlternateInterface
 26116  0031A2  24F3               	addwf	prodl,w,c
 26117  0031A4  6ED9               	movwf	fsr2l,c
 26118  0031A6  0E00               	movlw	high _USBAlternateInterface
 26119  0031A8  20F4               	addwfc	prodh,w,c
 26120  0031AA  6EDA               	movwf	fsr2h,c
 26121  0031AC  C432 FFDF          	movff	1074,indf2	;volatile
 26122                           
 26123                           ;usb_device.c: 2356: break;
 26124  0031B0  0012               	return	
 26125  0031B2                     
 26126                           ; BSR set to: 4
 26127                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26128                           
 26129                           ; BSR set to: 4
 26130  0031B2  0E00               	movlw	0
 26131  0031B4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26132  0031B6  0E02               	movlw	2
 26133  0031B8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26134  0031BA  0E00               	movlw	0
 26135  0031BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26136  0031BE  0E00               	movlw	0
 26137  0031C0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26138  0031C2  0E00               	movlw	0
 26139  0031C4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26140  0031C6  0E00               	movlw	0
 26141  0031C8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26142  0031CA  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26143                           
 26144                           ;usb_device.c: 2363: }
 26145                           
 26146                           ;usb_device.c: 2362: break;
 26147                           
 26148                           ;usb_device.c: 2361: default:
 26149                           
 26150                           ;usb_device.c: 2360: case 12:
 26151                           
 26152                           ;usb_device.c: 2359: break;
 26153  0031CE  0012               	return	
 26154  0031D0                     i2l1843:
 26155  0031D0  0104               	movlb	4	; () banked
 26156  0031D2  5131               	movf	49,w,b	;volatile
 26157                           
 26158                           ; Switch size 1, requested type "space"
 26159                           ; Number of cases is 11, Range of values is 0 to 12
 26160                           ; switch strategies available:
 26161                           ; Name         Instructions Cycles
 26162                           ; simple_byte           34    18 (average)
 26163                           ;	Chosen strategy is simple_byte
 26164  0031D4  0A00               	xorlw	0	; case 0
 26165  0031D6  B4D8               	btfsc	status,2,c
 26166  0031D8  D7C9               	goto	i2l1849
 26167  0031DA  0A01               	xorlw	1	; case 1
 26168  0031DC  B4D8               	btfsc	status,2,c
 26169  0031DE  D7C9               	goto	i2l1850
 26170  0031E0  0A02               	xorlw	2	; case 3
 26171  0031E2  B4D8               	btfsc	status,2,c
 26172  0031E4  D7C6               	goto	i2l1850
 26173  0031E6  0A06               	xorlw	6	; case 5
 26174  0031E8  B4D8               	btfsc	status,2,c
 26175  0031EA  D7AB               	goto	i2l1844
 26176  0031EC  0A03               	xorlw	3	; case 6
 26177  0031EE  B4D8               	btfsc	status,2,c
 26178  0031F0  D7AD               	goto	i2l1846
 26179  0031F2  0A01               	xorlw	1	; case 7
 26180  0031F4  B4D8               	btfsc	status,2,c
 26181  0031F6  D7DD               	goto	i2l1854
 26182  0031F8  0A0F               	xorlw	15	; case 8
 26183  0031FA  B4D8               	btfsc	status,2,c
 26184  0031FC  D7AD               	goto	i2l1848
 26185  0031FE  0A01               	xorlw	1	; case 9
 26186  003200  B4D8               	btfsc	status,2,c
 26187  003202  D7A7               	goto	i2l1847
 26188  003204  0A03               	xorlw	3	; case 10
 26189  003206  B4D8               	btfsc	status,2,c
 26190  003208  D7B7               	goto	i2l1852
 26191  00320A  0A01               	xorlw	1	; case 11
 26192  00320C  B4D8               	btfsc	status,2,c
 26193  00320E  D7C3               	goto	i2l1853
 26194  003210  0A07               	xorlw	7	; case 12
 26195  003212  0012               	return	
 26196  003214                     __end_of_USBCheckStdRequest:
 26197                           	opt stack 0
 26198                           pclatu	equ	0xFFB
 26199                           pclath	equ	0xFFA
 26200                           tblptru	equ	0xFF8
 26201                           tblptrh	equ	0xFF7
 26202                           tblptrl	equ	0xFF6
 26203                           tablat	equ	0xFF5
 26204                           prodh	equ	0xFF4
 26205                           prodl	equ	0xFF3
 26206                           intcon	equ	0xFF2
 26207                           intcon3	equ	0xFF0
 26208                           indf0	equ	0xFEF
 26209                           postinc0	equ	0xFEE
 26210                           fsr0h	equ	0xFEA
 26211                           fsr0l	equ	0xFE9
 26212                           wreg	equ	0xFE8
 26213                           indf1	equ	0xFE7
 26214                           postdec1	equ	0xFE5
 26215                           fsr1h	equ	0xFE2
 26216                           fsr1l	equ	0xFE1
 26217                           indf2	equ	0xFDF
 26218                           postinc2	equ	0xFDE
 26219                           postdec2	equ	0xFDD
 26220                           plusw2	equ	0xFDB
 26221                           fsr2h	equ	0xFDA
 26222                           fsr2l	equ	0xFD9
 26223                           status	equ	0xFD8
 26224                           
 26225 ;; *************** function _USBStdSetCfgHandler *****************
 26226 ;; Defined at:
 26227 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26228 ;; Parameters:    Size  Location     Type
 26229 ;;		None
 26230 ;; Auto vars:     Size  Location     Type
 26231 ;;  i               1   21[COMRAM] unsigned char 
 26232 ;; Return value:  Size  Location     Type
 26233 ;;                  1    wreg      void 
 26234 ;; Registers used:
 26235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26236 ;; Tracked objects:
 26237 ;;		On entry : 0/0
 26238 ;;		On exit  : 0/0
 26239 ;;		Unchanged: 0/0
 26240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26241 ;;      Params:         0       0       0       0       0       0       0       0       0
 26242 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26244 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26245 ;;Total ram usage:        1 bytes
 26246 ;; Hardware stack levels used:    1
 26247 ;; Hardware stack levels required when called:    5
 26248 ;; This function calls:
 26249 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26250 ;;		i2_memset
 26251 ;; This function is called by:
 26252 ;;		_USBCheckStdRequest
 26253 ;; This function uses a non-reentrant model
 26254 ;;
 26255                           
 26256                           	psect	text115
 26257  003214                     __ptext115:
 26258                           	opt stack 0
 26259  003214                     _USBStdSetCfgHandler:
 26260                           	opt stack 11
 26261                           
 26262                           ;usb_device.c: 1631: uint8_t i;
 26263                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26264                           
 26265                           ;incstack = 0
 26266  003214  0100               	movlb	0	; () banked
 26267  003216  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26271  003218  0E6B               	movlw	107
 26272  00321A  6E01               	movwf	i2memset@p1,c
 26273  00321C  0E0F               	movlw	15
 26274  00321E  6E02               	movwf	i2memset@p1+1,c
 26275  003220  0E00               	movlw	0
 26276  003222  6E04               	movwf	i2memset@c+1,c
 26277  003224  0E00               	movlw	0
 26278  003226  6E03               	movwf	i2memset@c,c
 26279  003228  0E00               	movlw	0
 26280  00322A  6E06               	movwf	i2memset@n+1,c
 26281  00322C  0E02               	movlw	2
 26282  00322E  6E05               	movwf	i2memset@n,c
 26283  003230  EC28  F02A         	call	i2_memset	;wreg free
 26284                           
 26285                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26286  003234  0E00               	movlw	0
 26287  003236  6E01               	movwf	i2memset@p1,c
 26288  003238  0E04               	movlw	4
 26289  00323A  6E02               	movwf	i2memset@p1+1,c
 26290  00323C  0E00               	movlw	0
 26291  00323E  6E04               	movwf	i2memset@c+1,c
 26292  003240  0E00               	movlw	0
 26293  003242  6E03               	movwf	i2memset@c,c
 26294  003244  0E00               	movlw	0
 26295  003246  6E06               	movwf	i2memset@n+1,c
 26296  003248  0E30               	movlw	48
 26297  00324A  6E05               	movwf	i2memset@n,c
 26298  00324C  EC28  F02A         	call	i2_memset	;wreg free
 26299                           
 26300                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26301  003250  8C60               	bsf	3936,6,c	;volatile
 26302                           
 26303                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26304  003252  0E00               	movlw	0
 26305  003254  6E16               	movwf	USBStdSetCfgHandler@i,c
 26306  003256                     i2l7886:
 26307  003256  0E02               	movlw	2
 26308  003258  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26309  00325A  D001               	goto	i2l1758
 26310  00325C  D016               	goto	i2u586_40
 26311  00325E                     i2l1758:
 26312                           
 26313                           ;usb_device.c: 1649: {
 26314                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26315  00325E  5016               	movf	USBStdSetCfgHandler@i,w,c
 26316  003260  0D01               	mullw	1
 26317  003262  0ED3               	movlw	low _ep_data_in
 26318  003264  24F3               	addwf	prodl,w,c
 26319  003266  6ED9               	movwf	fsr2l,c
 26320  003268  0E00               	movlw	high _ep_data_in
 26321  00326A  20F4               	addwfc	prodh,w,c
 26322  00326C  6EDA               	movwf	fsr2h,c
 26323  00326E  0E00               	movlw	0
 26324  003270  6EDF               	movwf	indf2,c
 26325                           
 26326                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26327  003272  5016               	movf	USBStdSetCfgHandler@i,w,c
 26328  003274  0D01               	mullw	1
 26329  003276  0ED0               	movlw	low _ep_data_out
 26330  003278  24F3               	addwf	prodl,w,c
 26331  00327A  6ED9               	movwf	fsr2l,c
 26332  00327C  0E00               	movlw	high _ep_data_out
 26333  00327E  20F4               	addwfc	prodh,w,c
 26334  003280  6EDA               	movwf	fsr2h,c
 26335  003282  0E00               	movlw	0
 26336  003284  6EDF               	movwf	indf2,c
 26337  003286  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26338  003288  D7E6               	goto	i2l7886
 26339  00328A                     i2u586_40:
 26340                           
 26341                           ;usb_device.c: 1652: }
 26342                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26343  00328A  0E57               	movlw	low _USBAlternateInterface
 26344  00328C  6E01               	movwf	i2memset@p1,c
 26345  00328E  0E00               	movlw	high _USBAlternateInterface
 26346  003290  6E02               	movwf	i2memset@p1+1,c
 26347  003292  0E00               	movlw	0
 26348  003294  6E04               	movwf	i2memset@c+1,c
 26349  003296  0E00               	movlw	0
 26350  003298  6E03               	movwf	i2memset@c,c
 26351  00329A  0E00               	movlw	0
 26352  00329C  6E06               	movwf	i2memset@n+1,c
 26353  00329E  0E02               	movlw	2
 26354  0032A0  6E05               	movwf	i2memset@n,c
 26355  0032A2  EC28  F02A         	call	i2_memset	;wreg free
 26356                           
 26357                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26358  0032A6  9C60               	bcf	3936,6,c	;volatile
 26359                           
 26360                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26361  0032A8  0E08               	movlw	8
 26362  0032AA  0100               	movlb	0	; () banked
 26363  0032AC  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 26364  0032AE  0E04               	movlw	4
 26365  0032B0  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26366                           
 26367                           ; BSR set to: 0
 26368                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26369  0032B2  0E00               	movlw	0
 26370  0032B4  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 26371  0032B6  0E04               	movlw	4
 26372  0032B8  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26373                           
 26374                           ; BSR set to: 0
 26375                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26376  0032BA  C036  F034         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26377  0032BE  C037  F035         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26378                           
 26379                           ; BSR set to: 0
 26380                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26381  0032C2  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 26382                           
 26383                           ; BSR set to: 0
 26384                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26385  0032C6  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 26386  0032C8  A4D8               	btfss	status,2,c
 26387  0032CA  D003               	goto	i2l1760
 26388                           
 26389                           ; BSR set to: 0
 26390                           ;usb_device.c: 1671: {
 26391                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26392  0032CC  0E10               	movlw	16
 26393  0032CE  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26394                           
 26395                           ;usb_device.c: 1674: }
 26396  0032D0  0012               	return	
 26397  0032D2                     i2l1760:
 26398                           
 26399                           ; BSR set to: 0
 26400                           ;usb_device.c: 1675: else
 26401                           ;usb_device.c: 1676: {
 26402                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26403                           
 26404                           ; BSR set to: 0
 26405  0032D2  0E00               	movlw	0
 26406  0032D4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26407  0032D6  0E01               	movlw	1
 26408  0032D8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26409  0032DA  0E5A               	movlw	low _USBActiveConfiguration
 26410  0032DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26411  0032DE  0E00               	movlw	high _USBActiveConfiguration
 26412  0032E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26413  0032E2  0E00               	movlw	0
 26414  0032E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26415  0032E6  0E01               	movlw	1
 26416  0032E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26417  0032EA  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26418                           
 26419                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26420  0032EE  0E20               	movlw	32
 26421  0032F0  0100               	movlb	0	; () banked
 26422  0032F2  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26423  0032F4  0012               	return	
 26424  0032F6                     __end_of_USBStdSetCfgHandler:
 26425                           	opt stack 0
 26426                           pclatu	equ	0xFFB
 26427                           pclath	equ	0xFFA
 26428                           tblptru	equ	0xFF8
 26429                           tblptrh	equ	0xFF7
 26430                           tblptrl	equ	0xFF6
 26431                           tablat	equ	0xFF5
 26432                           prodh	equ	0xFF4
 26433                           prodl	equ	0xFF3
 26434                           intcon	equ	0xFF2
 26435                           intcon3	equ	0xFF0
 26436                           indf0	equ	0xFEF
 26437                           postinc0	equ	0xFEE
 26438                           fsr0h	equ	0xFEA
 26439                           fsr0l	equ	0xFE9
 26440                           wreg	equ	0xFE8
 26441                           indf1	equ	0xFE7
 26442                           postdec1	equ	0xFE5
 26443                           fsr1h	equ	0xFE2
 26444                           fsr1l	equ	0xFE1
 26445                           indf2	equ	0xFDF
 26446                           postinc2	equ	0xFDE
 26447                           postdec2	equ	0xFDD
 26448                           plusw2	equ	0xFDB
 26449                           fsr2h	equ	0xFDA
 26450                           fsr2l	equ	0xFD9
 26451                           status	equ	0xFD8
 26452                           
 26453 ;; *************** function i2_memset *****************
 26454 ;; Defined at:
 26455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;  p1              2    0[COMRAM] PTR void 
 26458 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26459 ;;  c               2    2[COMRAM] int 
 26460 ;;  n               2    4[COMRAM] unsigned int 
 26461 ;; Auto vars:     Size  Location     Type
 26462 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26463 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26464 ;; Return value:  Size  Location     Type
 26465 ;;                  2    0[COMRAM] PTR void 
 26466 ;; Registers used:
 26467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26468 ;; Tracked objects:
 26469 ;;		On entry : 0/0
 26470 ;;		On exit  : 0/0
 26471 ;;		Unchanged: 0/0
 26472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26473 ;;      Params:         6       0       0       0       0       0       0       0       0
 26474 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26475 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26476 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26477 ;;Total ram usage:        8 bytes
 26478 ;; Hardware stack levels used:    1
 26479 ;; This function calls:
 26480 ;;		Nothing
 26481 ;; This function is called by:
 26482 ;;		_USBStdSetCfgHandler
 26483 ;;		i2_USBDeviceInit
 26484 ;; This function uses a non-reentrant model
 26485 ;;
 26486                           
 26487                           	psect	text116
 26488  005450                     __ptext116:
 26489                           	opt stack 0
 26490  005450                     i2_memset:
 26491                           	opt stack 18
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;incstack = 0
 26495  005450  C001  F007         	movff	i2memset@p1,i2memset@p
 26496  005454  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26497  005458  D008               	goto	i2l2533
 26498  00545A                     i2l7706:
 26499  00545A  C007  FFD9         	movff	i2memset@p,fsr2l
 26500  00545E  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26501  005462  C003  FFDF         	movff	i2memset@c,indf2
 26502  005466  4A07               	infsnz	i2memset@p,f,c
 26503  005468  2A08               	incf	i2memset@p+1,f,c
 26504  00546A                     i2l2533:
 26505  00546A  0605               	decf	i2memset@n,f,c
 26506  00546C  A0D8               	btfss	status,0,c
 26507  00546E  0606               	decf	i2memset@n+1,f,c
 26508  005470  2805               	incf	i2memset@n,w,c
 26509  005472  E1F3               	bnz	i2l7706
 26510  005474  2806               	incf	i2memset@n+1,w,c
 26511  005476  B4D8               	btfsc	status,2,c
 26512  005478  0012               	return	
 26513  00547A  D7EF               	goto	i2l2534
 26514  00547C                     __end_ofi2_memset:
 26515                           	opt stack 0
 26516                           pclatu	equ	0xFFB
 26517                           pclath	equ	0xFFA
 26518                           tblptru	equ	0xFF8
 26519                           tblptrh	equ	0xFF7
 26520                           tblptrl	equ	0xFF6
 26521                           tablat	equ	0xFF5
 26522                           prodh	equ	0xFF4
 26523                           prodl	equ	0xFF3
 26524                           intcon	equ	0xFF2
 26525                           intcon3	equ	0xFF0
 26526                           indf0	equ	0xFEF
 26527                           postinc0	equ	0xFEE
 26528                           fsr0h	equ	0xFEA
 26529                           fsr0l	equ	0xFE9
 26530                           wreg	equ	0xFE8
 26531                           indf1	equ	0xFE7
 26532                           postdec1	equ	0xFE5
 26533                           fsr1h	equ	0xFE2
 26534                           fsr1l	equ	0xFE1
 26535                           indf2	equ	0xFDF
 26536                           postinc2	equ	0xFDE
 26537                           postdec2	equ	0xFDD
 26538                           plusw2	equ	0xFDB
 26539                           fsr2h	equ	0xFDA
 26540                           fsr2l	equ	0xFD9
 26541                           status	equ	0xFD8
 26542                           
 26543 ;; *************** function _USBStdGetStatusHandler *****************
 26544 ;; Defined at:
 26545 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26546 ;; Parameters:    Size  Location     Type
 26547 ;;		None
 26548 ;; Auto vars:     Size  Location     Type
 26549 ;;  p               2    1[COMRAM] PTR struct __BDT
 26550 ;;		 -> BDT(48), NULL(0), 
 26551 ;; Return value:  Size  Location     Type
 26552 ;;                  1    wreg      void 
 26553 ;; Registers used:
 26554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26555 ;; Tracked objects:
 26556 ;;		On entry : 0/0
 26557 ;;		On exit  : 0/0
 26558 ;;		Unchanged: 0/0
 26559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26560 ;;      Params:         0       0       0       0       0       0       0       0       0
 26561 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26562 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26563 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26564 ;;Total ram usage:        3 bytes
 26565 ;; Hardware stack levels used:    1
 26566 ;; This function calls:
 26567 ;;		Nothing
 26568 ;; This function is called by:
 26569 ;;		_USBCheckStdRequest
 26570 ;; This function uses a non-reentrant model
 26571 ;;
 26572                           
 26573                           	psect	text117
 26574  004024                     __ptext117:
 26575                           	opt stack 0
 26576  004024                     _USBStdGetStatusHandler:
 26577                           	opt stack 16
 26578                           
 26579                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26580                           
 26581                           ;incstack = 0
 26582  004024  0E00               	movlw	0
 26583  004026  0104               	movlb	4	; () banked
 26584  004028  6F38               	movwf	56,b	;volatile
 26585                           
 26586                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26587  00402A  0E00               	movlw	0
 26588  00402C  6F39               	movwf	57,b	;volatile
 26589                           
 26590                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26591  00402E  D038               	goto	i2l1779
 26592  004030                     i2l1780:
 26593                           
 26594                           ; BSR set to: 4
 26595                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26596  004030  0100               	movlb	0	; () banked
 26597  004032  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26598                           
 26599                           ;usb_device.c: 1789: }
 26600                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26601                           
 26602                           ; BSR set to: 4
 26603                           
 26604                           ; BSR set to: 0
 26605                           ;usb_device.c: 1787: {
 26606                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26607                           
 26608                           ;usb_device.c: 1786: if(0 == 1)
 26609  004034  044A               	decf	_RemoteWakeup,w,c	;volatile
 26610  004036  A4D8               	btfss	status,2,c
 26611  004038  D03E               	goto	i2l1783
 26612                           
 26613                           ;usb_device.c: 1792: {
 26614                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26615  00403A  0104               	movlb	4	; () banked
 26616  00403C  8338               	bsf	56,1,b	;volatile
 26617                           
 26618                           ; BSR set to: 4
 26619                           ;usb_device.c: 1794: }
 26620                           ;usb_device.c: 1795: break;
 26621  00403E  D03B               	goto	i2l1783
 26622  004040                     i2l1784:
 26623                           
 26624                           ; BSR set to: 4
 26625                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26626  004040  0100               	movlb	0	; () banked
 26627  004042  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26628                           
 26629                           ;usb_device.c: 1798: break;
 26630  004044  D038               	goto	i2l1783
 26631  004046                     i2l1785:
 26632                           
 26633                           ; BSR set to: 4
 26634                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26635  004046  0100               	movlb	0	; () banked
 26636  004048  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26637                           
 26638                           ;usb_device.c: 1804: {
 26639                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26640                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26641  00404A  0104               	movlb	4	; () banked
 26642  00404C  BF34               	btfsc	52,7,b	;volatile
 26643  00404E  D00A               	goto	i2l1786
 26644                           
 26645                           ; BSR set to: 4
 26646                           ;usb_device.c: 1808: {
 26647                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26648  004050  5134               	movf	52,w,b	;volatile
 26649  004052  0B0F               	andlw	15
 26650  004054  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26651  004056  5001               	movf	??_USBStdGetStatusHandler,w,c
 26652  004058  0D02               	mullw	2
 26653  00405A  0E40               	movlw	low _pBDTEntryOut
 26654  00405C  24F3               	addwf	prodl,w,c
 26655  00405E  6ED9               	movwf	fsr2l,c
 26656  004060  0E01               	movlw	high _pBDTEntryOut
 26657  004062  D009               	goto	L37
 26658  004064                     i2l1786:
 26659                           
 26660                           ; BSR set to: 4
 26661                           ;usb_device.c: 1811: else
 26662                           ;usb_device.c: 1812: {
 26663                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26664                           
 26665                           ; BSR set to: 4
 26666  004064  5134               	movf	52,w,b	;volatile
 26667  004066  0B0F               	andlw	15
 26668  004068  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26669  00406A  5001               	movf	??_USBStdGetStatusHandler,w,c
 26670  00406C  0D02               	mullw	2
 26671  00406E  0ECA               	movlw	low _pBDTEntryIn
 26672  004070  24F3               	addwf	prodl,w,c
 26673  004072  6ED9               	movwf	fsr2l,c
 26674  004074  0E00               	movlw	high _pBDTEntryIn
 26675  004076                     L37:
 26676  004076  20F4               	addwfc	prodh,w,c
 26677  004078  6EDA               	movwf	fsr2h,c
 26678  00407A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26679  00407E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26680                           
 26681                           ; BSR set to: 4
 26682                           ;usb_device.c: 1814: }
 26683                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26684                           
 26685                           ; BSR set to: 4
 26686  004082  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26687  004086  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26688  00408A  AEDF               	btfss	indf2,7,c
 26689  00408C  D014               	goto	i2l1783
 26690                           
 26691                           ; BSR set to: 4
 26692  00408E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26693  004092  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26694  004096  A4DF               	btfss	indf2,2,c
 26695  004098  D00E               	goto	i2l1783
 26696                           
 26697                           ; BSR set to: 4
 26698                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 26699  00409A  0E01               	movlw	1
 26700  00409C  6F38               	movwf	56,b	;volatile
 26701                           
 26702                           ; BSR set to: 4
 26703                           ;usb_device.c: 1819: }
 26704                           ;usb_device.c: 1820: }
 26705                           
 26706                           ; BSR set to: 4
 26707                           ;usb_device.c: 1818: break;
 26708  00409E  D00B               	goto	i2l1783
 26709  0040A0                     i2l1779:
 26710                           
 26711                           ; BSR set to: 4
 26712                           
 26713                           ; BSR set to: 4
 26714  0040A0  5130               	movf	48,w,b	;volatile
 26715  0040A2  0B1F               	andlw	31
 26716                           
 26717                           ; Switch size 1, requested type "space"
 26718                           ; Number of cases is 3, Range of values is 0 to 2
 26719                           ; switch strategies available:
 26720                           ; Name         Instructions Cycles
 26721                           ; simple_byte           10     6 (average)
 26722                           ;	Chosen strategy is simple_byte
 26723  0040A4  0A00               	xorlw	0	; case 0
 26724  0040A6  B4D8               	btfsc	status,2,c
 26725  0040A8  D7C3               	goto	i2l1780
 26726  0040AA  0A01               	xorlw	1	; case 1
 26727  0040AC  B4D8               	btfsc	status,2,c
 26728  0040AE  D7C8               	goto	i2l1784
 26729  0040B0  0A03               	xorlw	3	; case 2
 26730  0040B2  B4D8               	btfsc	status,2,c
 26731  0040B4  D7C8               	goto	i2l1785
 26732  0040B6                     i2l1783:
 26733                           
 26734                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 26735  0040B6  0100               	movlb	0	; () banked
 26736  0040B8  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26737  0040BA  0012               	return	
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;usb_device.c: 1823: {
 26741                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26742  0040BC  0E38               	movlw	56
 26743  0040BE  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26744  0040C0  0E04               	movlw	4
 26745  0040C2  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26746                           
 26747                           ; BSR set to: 0
 26748                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26749  0040C4  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 26753  0040C6  0E02               	movlw	2
 26754  0040C8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26755  0040CA  0012               	return	
 26756  0040CC                     __end_of_USBStdGetStatusHandler:
 26757                           	opt stack 0
 26758                           pclatu	equ	0xFFB
 26759                           pclath	equ	0xFFA
 26760                           tblptru	equ	0xFF8
 26761                           tblptrh	equ	0xFF7
 26762                           tblptrl	equ	0xFF6
 26763                           tablat	equ	0xFF5
 26764                           prodh	equ	0xFF4
 26765                           prodl	equ	0xFF3
 26766                           intcon	equ	0xFF2
 26767                           intcon3	equ	0xFF0
 26768                           indf0	equ	0xFEF
 26769                           postinc0	equ	0xFEE
 26770                           fsr0h	equ	0xFEA
 26771                           fsr0l	equ	0xFE9
 26772                           wreg	equ	0xFE8
 26773                           indf1	equ	0xFE7
 26774                           postdec1	equ	0xFE5
 26775                           fsr1h	equ	0xFE2
 26776                           fsr1l	equ	0xFE1
 26777                           indf2	equ	0xFDF
 26778                           postinc2	equ	0xFDE
 26779                           postdec2	equ	0xFDD
 26780                           plusw2	equ	0xFDB
 26781                           fsr2h	equ	0xFDA
 26782                           fsr2l	equ	0xFD9
 26783                           status	equ	0xFD8
 26784                           
 26785 ;; *************** function _USBStdGetDscHandler *****************
 26786 ;; Defined at:
 26787 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 26788 ;; Parameters:    Size  Location     Type
 26789 ;;		None
 26790 ;; Auto vars:     Size  Location     Type
 26791 ;;		None
 26792 ;; Return value:  Size  Location     Type
 26793 ;;                  1    wreg      void 
 26794 ;; Registers used:
 26795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26796 ;; Tracked objects:
 26797 ;;		On entry : 0/0
 26798 ;;		On exit  : 0/0
 26799 ;;		Unchanged: 0/0
 26800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26801 ;;      Params:         0       0       0       0       0       0       0       0       0
 26802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26803 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26804 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26805 ;;Total ram usage:        2 bytes
 26806 ;; Hardware stack levels used:    1
 26807 ;; This function calls:
 26808 ;;		Nothing
 26809 ;; This function is called by:
 26810 ;;		_USBCheckStdRequest
 26811 ;; This function uses a non-reentrant model
 26812 ;;
 26813                           
 26814                           	psect	text118
 26815  0028C4                     __ptext118:
 26816                           	opt stack 0
 26817  0028C4                     _USBStdGetDscHandler:
 26818                           	opt stack 16
 26819                           
 26820                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 26821                           
 26822                           ; BSR set to: 0
 26823                           ;incstack = 0
 26824  0028C4  0E80               	movlw	128
 26825  0028C6  0104               	movlb	4	; () banked
 26826  0028C8  1930               	xorwf	48,w,b	;volatile
 26827  0028CA  A4D8               	btfss	status,2,c
 26828  0028CC  0012               	return	
 26829                           
 26830                           ; BSR set to: 4
 26831                           ;usb_device.c: 1707: {
 26832                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26833  0028CE  0EC0               	movlw	192
 26834  0028D0  0100               	movlb	0	; () banked
 26835  0028D2  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26836                           
 26837                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 26838  0028D4  D082               	goto	i2l1766
 26839  0028D6                     
 26840                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26841                           
 26842                           ; BSR set to: 0
 26843  0028D6  0EA8               	movlw	low _device_dsc
 26844  0028D8  0100               	movlb	0	; () banked
 26845  0028DA  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26846  0028DC  0E79               	movlw	high _device_dsc
 26847  0028DE  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26848                           
 26849                           ; BSR set to: 0
 26850                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 26851  0028E0  0E00               	movlw	0
 26852  0028E2  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26853  0028E4  0E12               	movlw	18
 26854  0028E6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26855                           
 26856                           ;usb_device.c: 1715: break;
 26857  0028E8  0012               	return	
 26858  0028EA                     
 26859                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 26860                           
 26861                           ; BSR set to: 0
 26862  0028EA  0104               	movlb	4	; () banked
 26863  0028EC  5132               	movf	50,w,b	;volatile
 26864  0028EE  A4D8               	btfss	status,2,c
 26865  0028F0  D040               	goto	i2l1770
 26866                           
 26867                           ; BSR set to: 4
 26868                           ;usb_device.c: 1721: {
 26869                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26870  0028F2  5132               	movf	50,w,b	;volatile
 26871  0028F4  0D02               	mullw	2
 26872  0028F6  0EFB               	movlw	low _USB_CD_Ptr
 26873  0028F8  24F3               	addwf	prodl,w,c
 26874  0028FA  6EF6               	movwf	tblptrl,c
 26875  0028FC  0E75               	movlw	high _USB_CD_Ptr
 26876  0028FE  20F4               	addwfc	prodh,w,c
 26877  002900  6EF7               	movwf	tblptrh,c
 26878  002902                     	if	0	;There are less than 3 active tblptr bytes
 26879  002902                     	endif
 26880  002902  0009               	tblrd		*+
 26881  002904  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 26882  002908  000A               	tblrd		*-
 26883  00290A  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 26884                           
 26885                           ; BSR set to: 4
 26886                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26887  00290E  0E02               	movlw	2
 26888  002910  0100               	movlb	0	; () banked
 26889  002912  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 26890  002914  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26891  002916  0E00               	movlw	0
 26892  002918  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26893  00291A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26894  00291C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26895  002920  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26896  002924  6AF8               	clrf	tblptru,c
 26897  002926  0E07               	movlw	(high __ramtop+-1)
 26898  002928  64F7               	cpfsgt	tblptrh,c
 26899  00292A  D003               	bra	i2u590_47
 26900  00292C  0008               	tblrd		*
 26901  00292E  50F5               	movf	tablat,w,c
 26902  002930  D005               	bra	i2u590_40
 26903  002932                     i2u590_47:
 26904  002932  CFF6 FFE9          	movff	tblptrl,fsr0l
 26905  002936  CFF7 FFEA          	movff	tblptrh,fsr0h
 26906  00293A  50EF               	movf	indf0,w,c
 26907  00293C                     i2u590_40:
 26908  00293C  0100               	movlb	0	; () banked
 26909  00293E  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26913  002940  0E03               	movlw	3
 26914  002942  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 26915  002944  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26916  002946  0E00               	movlw	0
 26917  002948  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26918  00294A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26919  00294C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26920  002950  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26921  002954  6AF8               	clrf	tblptru,c
 26922  002956  0E07               	movlw	(high __ramtop+-1)
 26923  002958  64F7               	cpfsgt	tblptrh,c
 26924  00295A  D003               	bra	i2u591_47
 26925  00295C  0008               	tblrd		*
 26926  00295E  50F5               	movf	tablat,w,c
 26927  002960  D005               	bra	i2u591_40
 26928  002962                     i2u591_47:
 26929  002962  CFF6 FFE9          	movff	tblptrl,fsr0l
 26930  002966  CFF7 FFEA          	movff	tblptrh,fsr0h
 26931  00296A  50EF               	movf	indf0,w,c
 26932  00296C                     i2u591_40:
 26933  00296C  0100               	movlb	0	; () banked
 26934  00296E  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26935                           
 26936                           ;usb_device.c: 1729: }
 26937  002970  0012               	return	
 26938  002972                     i2l1770:
 26939                           
 26940                           ;usb_device.c: 1730: else
 26941                           ;usb_device.c: 1731: {
 26942                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 26943                           
 26944                           ; BSR set to: 0
 26945  002972  0E00               	movlw	0
 26946  002974  0100               	movlb	0	; () banked
 26947  002976  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26948                           
 26949                           ; BSR set to: 0
 26950                           ;usb_device.c: 1733: }
 26951                           ;usb_device.c: 1734: break;
 26952  002978  0012               	return	
 26953  00297A                     
 26954                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 26955                           
 26956                           ; BSR set to: 0
 26957  00297A  0E03               	movlw	3
 26958  00297C  0104               	movlb	4	; () banked
 26959  00297E  6132               	cpfslt	50,b	;volatile
 26960  002980  D024               	goto	i2l1773
 26961                           
 26962                           ; BSR set to: 4
 26963                           ;usb_device.c: 1740: {
 26964                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26965  002982  5132               	movf	50,w,b	;volatile
 26966  002984  0D02               	mullw	2
 26967  002986  0EF5               	movlw	low _USB_SD_Ptr
 26968  002988  24F3               	addwf	prodl,w,c
 26969  00298A  6EF6               	movwf	tblptrl,c
 26970  00298C  0E75               	movlw	high _USB_SD_Ptr
 26971  00298E  20F4               	addwfc	prodh,w,c
 26972  002990  6EF7               	movwf	tblptrh,c
 26973  002992                     	if	0	;There are less than 3 active tblptr bytes
 26974  002992                     	endif
 26975  002992  0009               	tblrd		*+
 26976  002994  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 26977  002998  000A               	tblrd		*-
 26978  00299A  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 26979                           
 26980                           ; BSR set to: 4
 26981                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26982  00299E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 26983  0029A2  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26984  0029A6  6AF8               	clrf	tblptru,c
 26985  0029A8  0E07               	movlw	(high __ramtop+-1)
 26986  0029AA  64F7               	cpfsgt	tblptrh,c
 26987  0029AC  D003               	bra	i2u593_47
 26988  0029AE  0008               	tblrd		*
 26989  0029B0  50F5               	movf	tablat,w,c
 26990  0029B2  D005               	bra	i2u593_40
 26991  0029B4                     i2u593_47:
 26992  0029B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26993  0029B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26994  0029BC  50EF               	movf	indf0,w,c
 26995  0029BE                     i2u593_40:
 26996  0029BE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26997  0029C0  5001               	movf	??_USBStdGetDscHandler,w,c
 26998  0029C2  0100               	movlb	0	; () banked
 26999  0029C4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27000  0029C6  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27001                           
 27002                           ;usb_device.c: 1745: }
 27003  0029C8  0012               	return	
 27004  0029CA                     i2l1773:
 27005                           
 27006                           ;usb_device.c: 1746: else
 27007                           ;usb_device.c: 1747: {
 27008                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27009                           
 27010                           ; BSR set to: 0
 27011  0029CA  0E00               	movlw	0
 27012  0029CC  0100               	movlb	0	; () banked
 27013  0029CE  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;usb_device.c: 1749: }
 27017                           ;usb_device.c: 1750: break;
 27018  0029D0  0012               	return	
 27019  0029D2                     
 27020                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27021                           
 27022                           ; BSR set to: 0
 27023  0029D2  0E00               	movlw	0
 27024  0029D4  0100               	movlb	0	; () banked
 27025  0029D6  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27026                           
 27027                           ; BSR set to: 0
 27028                           ;usb_device.c: 1754: }
 27029                           
 27030                           ;usb_device.c: 1753: break;
 27031  0029D8  0012               	return	
 27032  0029DA                     i2l1766:
 27033                           
 27034                           ; BSR set to: 0
 27035                           
 27036                           ; BSR set to: 0
 27037  0029DA  0104               	movlb	4	; () banked
 27038  0029DC  5133               	movf	51,w,b	;volatile
 27039                           
 27040                           ; Switch size 1, requested type "space"
 27041                           ; Number of cases is 3, Range of values is 1 to 3
 27042                           ; switch strategies available:
 27043                           ; Name         Instructions Cycles
 27044                           ; simple_byte           10     6 (average)
 27045                           ;	Chosen strategy is simple_byte
 27046  0029DE  0A01               	xorlw	1	; case 1
 27047  0029E0  B4D8               	btfsc	status,2,c
 27048  0029E2  D779               	goto	i2l1767
 27049  0029E4  0A03               	xorlw	3	; case 2
 27050  0029E6  B4D8               	btfsc	status,2,c
 27051  0029E8  D780               	goto	i2l1769
 27052  0029EA  0A01               	xorlw	1	; case 3
 27053  0029EC  B4D8               	btfsc	status,2,c
 27054  0029EE  D7C5               	goto	i2l1772
 27055  0029F0  D7F0               	goto	i2l1775
 27056  0029F2                     __end_of_USBStdGetDscHandler:
 27057                           	opt stack 0
 27058                           pclatu	equ	0xFFB
 27059                           pclath	equ	0xFFA
 27060                           tblptru	equ	0xFF8
 27061                           tblptrh	equ	0xFF7
 27062                           tblptrl	equ	0xFF6
 27063                           tablat	equ	0xFF5
 27064                           prodh	equ	0xFF4
 27065                           prodl	equ	0xFF3
 27066                           intcon	equ	0xFF2
 27067                           intcon3	equ	0xFF0
 27068                           indf0	equ	0xFEF
 27069                           postinc0	equ	0xFEE
 27070                           fsr0h	equ	0xFEA
 27071                           fsr0l	equ	0xFE9
 27072                           wreg	equ	0xFE8
 27073                           indf1	equ	0xFE7
 27074                           postdec1	equ	0xFE5
 27075                           fsr1h	equ	0xFE2
 27076                           fsr1l	equ	0xFE1
 27077                           indf2	equ	0xFDF
 27078                           postinc2	equ	0xFDE
 27079                           postdec2	equ	0xFDD
 27080                           plusw2	equ	0xFDB
 27081                           fsr2h	equ	0xFDA
 27082                           fsr2l	equ	0xFD9
 27083                           status	equ	0xFD8
 27084                           
 27085 ;; *************** function _USBStdFeatureReqHandler *****************
 27086 ;; Defined at:
 27087 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27088 ;; Parameters:    Size  Location     Type
 27089 ;;		None
 27090 ;; Auto vars:     Size  Location     Type
 27091 ;;  p               2   25[COMRAM] PTR struct __BDT
 27092 ;;		 -> BDT(48), NULL(0), 
 27093 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27094 ;;		 -> UEP0(1), 
 27095 ;;  current_ep_d    1   24[COMRAM] struct .
 27096 ;; Return value:  Size  Location     Type
 27097 ;;                  1    wreg      void 
 27098 ;; Registers used:
 27099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27100 ;; Tracked objects:
 27101 ;;		On entry : 0/0
 27102 ;;		On exit  : 0/0
 27103 ;;		Unchanged: 0/0
 27104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27105 ;;      Params:         0       0       0       0       0       0       0       0       0
 27106 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27107 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27108 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27109 ;;Total ram usage:        6 bytes
 27110 ;; Hardware stack levels used:    1
 27111 ;; Hardware stack levels required when called:    5
 27112 ;; This function calls:
 27113 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27114 ;; This function is called by:
 27115 ;;		_USBCheckStdRequest
 27116 ;; This function uses a non-reentrant model
 27117 ;;
 27118                           
 27119                           	psect	text119
 27120  001DE6                     __ptext119:
 27121                           	opt stack 0
 27122  001DE6                     _USBStdFeatureReqHandler:
 27123                           	opt stack 11
 27124                           
 27125                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27126                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27127                           ;usb_device.c: 2390: unsigned char* pUEP;
 27128                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27129                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27130                           
 27131                           ;incstack = 0
 27132  001DE6  0104               	movlb	4	; () banked
 27133  001DE8  0532               	decf	50,w,b	;volatile
 27134  001DEA  A4D8               	btfss	status,2,c
 27135  001DEC  D010               	goto	i2l1861
 27136                           
 27137                           ; BSR set to: 4
 27138  001DEE  5130               	movf	48,w,b	;volatile
 27139  001DF0  0B1F               	andlw	31
 27140  001DF2  0900               	iorlw	0
 27141  001DF4  A4D8               	btfss	status,2,c
 27142  001DF6  D00B               	goto	i2l1861
 27143                           
 27144                           ; BSR set to: 4
 27145                           ;usb_device.c: 2395: {
 27146                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27147  001DF8  0100               	movlb	0	; () banked
 27148  001DFA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27152  001DFC  0E03               	movlw	3
 27153  001DFE  0104               	movlb	4	; () banked
 27154  001E00  1931               	xorwf	49,w,b	;volatile
 27155  001E02  A4D8               	btfss	status,2,c
 27156  001E04  D002               	goto	i2l1860
 27157                           
 27158                           ; BSR set to: 4
 27159                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27160  001E06  0E01               	movlw	1
 27161  001E08  D001               	goto	L38
 27162  001E0A                     i2l1860:
 27163                           
 27164                           ; BSR set to: 4
 27165                           ;usb_device.c: 2399: else
 27166                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27167                           
 27168                           ; BSR set to: 4
 27169  001E0A  0E00               	movlw	0
 27170  001E0C                     L38:
 27171  001E0C  6E4A               	movwf	_RemoteWakeup,c	;volatile
 27172  001E0E                     i2l1861:
 27173                           
 27174                           ; BSR set to: 4
 27175                           ;usb_device.c: 2401: }
 27176                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27177                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27178                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27179                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27180                           
 27181                           ; BSR set to: 4
 27182  001E0E  5132               	movf	50,w,b	;volatile
 27183  001E10  A4D8               	btfss	status,2,c
 27184  001E12  0012               	return	
 27185                           
 27186                           ; BSR set to: 4
 27187  001E14  5130               	movf	48,w,b	;volatile
 27188  001E16  0B1F               	andlw	31
 27189  001E18  0A02               	xorlw	2
 27190  001E1A  A4D8               	btfss	status,2,c
 27191  001E1C  0012               	return	
 27192                           
 27193                           ; BSR set to: 4
 27194  001E1E  5134               	movf	52,w,b	;volatile
 27195  001E20  0B0F               	andlw	15
 27196  001E22  0900               	iorlw	0
 27197  001E24  B4D8               	btfsc	status,2,c
 27198  001E26  0012               	return	
 27199                           
 27200                           ; BSR set to: 4
 27201  001E28  5134               	movf	52,w,b	;volatile
 27202  001E2A  0B0F               	andlw	15
 27203  001E2C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27204  001E2E  0E03               	movlw	3
 27205  001E30  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27206  001E32  0012               	return	
 27207                           
 27208                           ; BSR set to: 4
 27209  001E34  0E20               	movlw	32
 27210  001E36  0100               	movlb	0	; () banked
 27211  001E38  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27212  001E3A  A4D8               	btfss	status,2,c
 27213  001E3C  0012               	return	
 27214                           
 27215                           ; BSR set to: 0
 27216                           ;usb_device.c: 2408: {
 27217                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27218  001E3E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27219                           
 27220                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27221  001E40  0104               	movlb	4	; () banked
 27222  001E42  BF34               	btfsc	52,7,b	;volatile
 27223  001E44  D019               	goto	i2l1863
 27224                           
 27225                           ; BSR set to: 4
 27226                           ;usb_device.c: 2415: {
 27227                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27228  001E46  5134               	movf	52,w,b	;volatile
 27229  001E48  0B0F               	andlw	15
 27230  001E4A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27231  001E4C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27232  001E4E  0D02               	mullw	2
 27233  001E50  0E40               	movlw	low _pBDTEntryOut
 27234  001E52  24F3               	addwf	prodl,w,c
 27235  001E54  6ED9               	movwf	fsr2l,c
 27236  001E56  0E01               	movlw	high _pBDTEntryOut
 27237  001E58  20F4               	addwfc	prodh,w,c
 27238  001E5A  6EDA               	movwf	fsr2h,c
 27239  001E5C  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27240  001E60  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27241                           
 27242                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27243  001E64  5134               	movf	52,w,b	;volatile
 27244  001E66  0B0F               	andlw	15
 27245  001E68  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27246  001E6A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27247  001E6C  0D01               	mullw	1
 27248  001E6E  0ED0               	movlw	low _ep_data_out
 27249  001E70  24F3               	addwf	prodl,w,c
 27250  001E72  6ED9               	movwf	fsr2l,c
 27251  001E74  0E00               	movlw	high _ep_data_out
 27252  001E76  D018               	goto	L39
 27253  001E78                     i2l1863:
 27254                           
 27255                           ; BSR set to: 4
 27256                           ;usb_device.c: 2419: else
 27257                           ;usb_device.c: 2420: {
 27258                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27259                           
 27260                           ; BSR set to: 4
 27261  001E78  5134               	movf	52,w,b	;volatile
 27262  001E7A  0B0F               	andlw	15
 27263  001E7C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27264  001E7E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27265  001E80  0D02               	mullw	2
 27266  001E82  0ECA               	movlw	low _pBDTEntryIn
 27267  001E84  24F3               	addwf	prodl,w,c
 27268  001E86  6ED9               	movwf	fsr2l,c
 27269  001E88  0E00               	movlw	high _pBDTEntryIn
 27270  001E8A  20F4               	addwfc	prodh,w,c
 27271  001E8C  6EDA               	movwf	fsr2h,c
 27272  001E8E  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27273  001E92  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27274                           
 27275                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27276  001E96  5134               	movf	52,w,b	;volatile
 27277  001E98  0B0F               	andlw	15
 27278  001E9A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27279  001E9C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27280  001E9E  0D01               	mullw	1
 27281  001EA0  0ED3               	movlw	low _ep_data_in
 27282  001EA2  24F3               	addwf	prodl,w,c
 27283  001EA4  6ED9               	movwf	fsr2l,c
 27284  001EA6  0E00               	movlw	high _ep_data_in
 27285  001EA8                     L39:
 27286  001EA8  20F4               	addwfc	prodh,w,c
 27287  001EAA  6EDA               	movwf	fsr2h,c
 27288  001EAC  50DF               	movf	indf2,w,c
 27289  001EAE  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27290                           
 27291                           ; BSR set to: 4
 27292                           ;usb_device.c: 2423: }
 27293                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27294                           
 27295                           ; BSR set to: 4
 27296  001EB0  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27297  001EB2  D002               	goto	i2l1865
 27298                           
 27299                           ; BSR set to: 4
 27300                           ;usb_device.c: 2429: {
 27301                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27302  001EB4  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27303                           
 27304                           ;usb_device.c: 2431: }
 27305  001EB6  D001               	goto	i2l1866
 27306  001EB8                     i2l1865:
 27307                           
 27308                           ; BSR set to: 4
 27309                           ;usb_device.c: 2432: else
 27310                           ;usb_device.c: 2433: {
 27311                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27312                           
 27313                           ; BSR set to: 4
 27314  001EB8  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27315  001EBA                     i2l1866:
 27316                           
 27317                           ; BSR set to: 4
 27318                           ;usb_device.c: 2435: }
 27319                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27320                           
 27321                           ; BSR set to: 4
 27322  001EBA  BF34               	btfsc	52,7,b	;volatile
 27323  001EBC  D00A               	goto	i2l1867
 27324                           
 27325                           ; BSR set to: 4
 27326                           ;usb_device.c: 2440: {
 27327                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27328  001EBE  5134               	movf	52,w,b	;volatile
 27329  001EC0  0B0F               	andlw	15
 27330  001EC2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27331  001EC4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27332  001EC6  0D02               	mullw	2
 27333  001EC8  0E40               	movlw	low _pBDTEntryOut
 27334  001ECA  24F3               	addwf	prodl,w,c
 27335  001ECC  6ED9               	movwf	fsr2l,c
 27336  001ECE  0E01               	movlw	high _pBDTEntryOut
 27337  001ED0  D009               	goto	L40
 27338  001ED2                     i2l1867:
 27339                           
 27340                           ; BSR set to: 4
 27341                           ;usb_device.c: 2443: else
 27342                           ;usb_device.c: 2444: {
 27343                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27344                           
 27345                           ; BSR set to: 4
 27346  001ED2  5134               	movf	52,w,b	;volatile
 27347  001ED4  0B0F               	andlw	15
 27348  001ED6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27349  001ED8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27350  001EDA  0D02               	mullw	2
 27351  001EDC  0ECA               	movlw	low _pBDTEntryIn
 27352  001EDE  24F3               	addwf	prodl,w,c
 27353  001EE0  6ED9               	movwf	fsr2l,c
 27354  001EE2  0E00               	movlw	high _pBDTEntryIn
 27355  001EE4                     L40:
 27356  001EE4  20F4               	addwfc	prodh,w,c
 27357  001EE6  6EDA               	movwf	fsr2h,c
 27358  001EE8  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27359  001EEC  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27360                           
 27361                           ; BSR set to: 4
 27362                           ;usb_device.c: 2446: }
 27363                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27364                           
 27365                           ; BSR set to: 4
 27366  001EF0  0E03               	movlw	3
 27367  001EF2  1931               	xorwf	49,w,b	;volatile
 27368  001EF4  A4D8               	btfss	status,2,c
 27369  001EF6  D02D               	goto	i2l1869
 27370                           
 27371                           ; BSR set to: 4
 27372                           ;usb_device.c: 2450: {
 27373                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27374  001EF8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27375  001EFC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27376  001F00  AEDF               	btfss	indf2,7,c
 27377  001F02  D01A               	goto	i2l1872
 27378                           
 27379                           ; BSR set to: 4
 27380                           ;usb_device.c: 2452: {
 27381                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27382  001F04  BF34               	btfsc	52,7,b	;volatile
 27383  001F06  D00A               	goto	i2l1871
 27384                           
 27385                           ; BSR set to: 4
 27386                           ;usb_device.c: 2456: {
 27387                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27388  001F08  5134               	movf	52,w,b	;volatile
 27389  001F0A  0B0F               	andlw	15
 27390  001F0C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27391  001F0E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27392  001F10  0D01               	mullw	1
 27393  001F12  0ED0               	movlw	low _ep_data_out
 27394  001F14  24F3               	addwf	prodl,w,c
 27395  001F16  6ED9               	movwf	fsr2l,c
 27396  001F18  0E00               	movlw	high _ep_data_out
 27397  001F1A  D00A               	goto	L41
 27398  001F1C                     i2l1871:
 27399                           
 27400                           ;usb_device.c: 2459: else
 27401                           ;usb_device.c: 2460: {
 27402                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27403                           
 27404                           ; BSR set to: 0
 27405  001F1C  0104               	movlb	4	; () banked
 27406  001F1E  5134               	movf	52,w,b	;volatile
 27407  001F20  0B0F               	andlw	15
 27408  001F22  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27409  001F24  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27410  001F26  0D01               	mullw	1
 27411  001F28  0ED3               	movlw	low _ep_data_in
 27412  001F2A  24F3               	addwf	prodl,w,c
 27413  001F2C  6ED9               	movwf	fsr2l,c
 27414  001F2E  0E00               	movlw	high _ep_data_in
 27415  001F30                     L41:
 27416  001F30  20F4               	addwfc	prodh,w,c
 27417  001F32  6EDA               	movwf	fsr2h,c
 27418  001F34  0100               	movlb	0	; () banked
 27419  001F36  82DF               	bsf	indf2,1,c
 27420  001F38                     i2l1872:
 27421                           
 27422                           ;usb_device.c: 2462: }
 27423                           ;usb_device.c: 2463: }
 27424                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27425                           
 27426                           ; BSR set to: 0
 27427                           
 27428                           ; BSR set to: 0
 27429  001F38  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27430  001F3C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27431  001F40  0E00               	movlw	0
 27432  001F42  84DB               	bsf	plusw2,2,c
 27433                           
 27434                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27435  001F44  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27436  001F48  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27437  001F4C  0E00               	movlw	0
 27438  001F4E  8EDB               	bsf	plusw2,7,c
 27439                           
 27440                           ;usb_device.c: 2468: }
 27441  001F50  0012               	return	
 27442  001F52                     i2l1869:
 27443                           
 27444                           ;usb_device.c: 2469: else
 27445                           ;usb_device.c: 2470: {
 27446                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27447  001F52  0E04               	movlw	4
 27448  001F54  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27449                           
 27450                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27451  001F56  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27452  001F5A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27453  001F5E  AEDF               	btfss	indf2,7,c
 27454  001F60  D01B               	goto	i2l1874
 27455                           
 27456                           ;usb_device.c: 2476: {
 27457                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27458  001F62  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27459  001F66  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27460  001F6A  0E7F               	movlw	127
 27461  001F6C  16DF               	andwf	indf2,f,c
 27462                           
 27463                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27464  001F6E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27465  001F72  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27466  001F76  0E00               	movlw	0
 27467  001F78  8CDB               	bsf	plusw2,6,c
 27468                           
 27469                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27470  001F7A  0E00               	movlw	0
 27471  001F7C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27472  001F7E  0E05               	movlw	5
 27473  001F80  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27474  001F82  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27475  001F86  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27476  001F8A  0E00               	movlw	0
 27477  001F8C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27478  001F8E  0E02               	movlw	2
 27479  001F90  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27480  001F92  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27481                           
 27482                           ;usb_device.c: 2482: }
 27483  001F96  D006               	goto	i2l1875
 27484  001F98                     i2l1874:
 27485                           
 27486                           ;usb_device.c: 2483: else
 27487                           ;usb_device.c: 2484: {
 27488                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27489  001F98  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27490  001F9C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27491  001FA0  0E00               	movlw	0
 27492  001FA2  8CDB               	bsf	plusw2,6,c
 27493  001FA4                     i2l1875:
 27494                           
 27495                           ;usb_device.c: 2487: }
 27496                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27497  001FA4  0E04               	movlw	4
 27498  001FA6  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27499                           
 27500                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27501  001FA8  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27502  001FAA  D006               	goto	i2u615_40
 27503  001FAC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27504  001FB0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27505  001FB4  AEDF               	btfss	indf2,7,c
 27506  001FB6  D030               	goto	i2l1876
 27507  001FB8                     i2u615_40:
 27508                           
 27509                           ;usb_device.c: 2498: {
 27510                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27511  001FB8  0104               	movlb	4	; () banked
 27512  001FBA  BF34               	btfsc	52,7,b	;volatile
 27513  001FBC  D00A               	goto	i2l1879
 27514                           
 27515                           ; BSR set to: 4
 27516                           ;usb_device.c: 2500: {
 27517                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27518  001FBE  5134               	movf	52,w,b	;volatile
 27519  001FC0  0B0F               	andlw	15
 27520  001FC2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27521  001FC4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27522  001FC6  0D01               	mullw	1
 27523  001FC8  0ED0               	movlw	low _ep_data_out
 27524  001FCA  24F3               	addwf	prodl,w,c
 27525  001FCC  6ED9               	movwf	fsr2l,c
 27526  001FCE  0E00               	movlw	high _ep_data_out
 27527  001FD0  D00A               	goto	L42
 27528  001FD2                     i2l1879:
 27529                           
 27530                           ;usb_device.c: 2503: else
 27531                           ;usb_device.c: 2504: {
 27532                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27533                           
 27534                           ; BSR set to: 0
 27535  001FD2  0104               	movlb	4	; () banked
 27536  001FD4  5134               	movf	52,w,b	;volatile
 27537  001FD6  0B0F               	andlw	15
 27538  001FD8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27539  001FDA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27540  001FDC  0D01               	mullw	1
 27541  001FDE  0ED3               	movlw	low _ep_data_in
 27542  001FE0  24F3               	addwf	prodl,w,c
 27543  001FE2  6ED9               	movwf	fsr2l,c
 27544  001FE4  0E00               	movlw	high _ep_data_in
 27545  001FE6                     L42:
 27546  001FE6  20F4               	addwfc	prodh,w,c
 27547  001FE8  6EDA               	movwf	fsr2h,c
 27548  001FEA  0100               	movlb	0	; () banked
 27549  001FEC  92DF               	bcf	indf2,1,c
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;usb_device.c: 2506: }
 27553                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27554                           
 27555                           ; BSR set to: 0
 27556  001FEE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27557  001FF2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27558  001FF6  0E3B               	movlw	59
 27559  001FF8  16DF               	andwf	indf2,f,c
 27560                           
 27561                           ; BSR set to: 0
 27562                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27563  001FFA  0E00               	movlw	0
 27564  001FFC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27565  001FFE  0E05               	movlw	5
 27566  002000  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27567  002002  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27568  002006  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27569  00200A  0E00               	movlw	0
 27570  00200C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27571  00200E  0E02               	movlw	2
 27572  002010  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27573  002012  EC7F  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27574                           
 27575                           ;usb_device.c: 2512: }
 27576  002016  D006               	goto	i2l1881
 27577  002018                     i2l1876:
 27578                           
 27579                           ;usb_device.c: 2513: else
 27580                           ;usb_device.c: 2514: {
 27581                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27582  002018  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27583  00201C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27584  002020  0E3B               	movlw	59
 27585  002022  16DF               	andwf	indf2,f,c
 27586  002024                     i2l1881:
 27587                           
 27588                           ;usb_device.c: 2517: }
 27589                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27590  002024  0104               	movlb	4	; () banked
 27591  002026  5134               	movf	52,w,b	;volatile
 27592  002028  0B0F               	andlw	15
 27593  00202A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27594  00202C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27595  00202E  0D01               	mullw	1
 27596  002030  0E6A               	movlw	106
 27597  002032  24F3               	addwf	prodl,w,c
 27598  002034  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27599  002036  0E0F               	movlw	15
 27600  002038  20F4               	addwfc	prodh,w,c
 27601  00203A  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27602                           
 27603                           ; BSR set to: 4
 27604                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27605  00203C  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27606  002040  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27607  002044  0EFE               	movlw	254
 27608  002046  16DF               	andwf	indf2,f,c
 27609                           
 27610                           ; BSR set to: 4
 27611  002048  0012               	return	
 27612  00204A                     __end_of_USBStdFeatureReqHandler:
 27613                           	opt stack 0
 27614                           pclatu	equ	0xFFB
 27615                           pclath	equ	0xFFA
 27616                           tblptru	equ	0xFF8
 27617                           tblptrh	equ	0xFF7
 27618                           tblptrl	equ	0xFF6
 27619                           tablat	equ	0xFF5
 27620                           prodh	equ	0xFF4
 27621                           prodl	equ	0xFF3
 27622                           intcon	equ	0xFF2
 27623                           intcon3	equ	0xFF0
 27624                           indf0	equ	0xFEF
 27625                           postinc0	equ	0xFEE
 27626                           fsr0h	equ	0xFEA
 27627                           fsr0l	equ	0xFE9
 27628                           wreg	equ	0xFE8
 27629                           indf1	equ	0xFE7
 27630                           postdec1	equ	0xFE5
 27631                           fsr1h	equ	0xFE2
 27632                           fsr1l	equ	0xFE1
 27633                           indf2	equ	0xFDF
 27634                           postinc2	equ	0xFDE
 27635                           postdec2	equ	0xFDD
 27636                           plusw2	equ	0xFDB
 27637                           fsr2h	equ	0xFDA
 27638                           fsr2l	equ	0xFD9
 27639                           status	equ	0xFD8
 27640                           
 27641 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27642 ;; Defined at:
 27643 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27644 ;; Parameters:    Size  Location     Type
 27645 ;;  event           2   13[COMRAM] enum E5981
 27646 ;;  pdata           2   15[COMRAM] PTR void 
 27647 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27648 ;;  size            2   17[COMRAM] unsigned int 
 27649 ;; Auto vars:     Size  Location     Type
 27650 ;;		None
 27651 ;; Return value:  Size  Location     Type
 27652 ;;                  1    wreg      unsigned char 
 27653 ;; Registers used:
 27654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27655 ;; Tracked objects:
 27656 ;;		On entry : 0/0
 27657 ;;		On exit  : 0/0
 27658 ;;		Unchanged: 0/0
 27659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27660 ;;      Params:         6       0       0       0       0       0       0       0       0
 27661 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27662 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27663 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27664 ;;Total ram usage:        8 bytes
 27665 ;; Hardware stack levels used:    1
 27666 ;; Hardware stack levels required when called:    4
 27667 ;; This function calls:
 27668 ;;		_USBCheckCDCRequest
 27669 ;;		_USBapp_CdcEmulatorInitialize
 27670 ;; This function is called by:
 27671 ;;		_USBDeviceTasks
 27672 ;;		_USBStdSetCfgHandler
 27673 ;;		_USBSuspend
 27674 ;;		_USBWakeFromSuspend
 27675 ;;		_USBCtrlTrfSetupHandler
 27676 ;;		_USBCheckStdRequest
 27677 ;;		_USBStdFeatureReqHandler
 27678 ;; This function uses a non-reentrant model
 27679 ;;
 27680                           
 27681                           	psect	text120
 27682  004CFE                     __ptext120:
 27683                           	opt stack 0
 27684  004CFE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27685                           	opt stack 15
 27686                           
 27687                           ;USBapp.c: 310: switch( (int) event )
 27688                           
 27689                           ;incstack = 0
 27690  004CFE  D006               	goto	i2l835
 27691  004D00                     
 27692                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 27693  004D00  EC08  F027         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 27694                           
 27695                           ;USBapp.c: 338: break;
 27696                           
 27697                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 27698                           
 27699                           ;USBapp.c: 335: break;
 27700  004D04  0012               	return	
 27701  004D06                     
 27702                           ;USBapp.c: 343: USBCheckCDCRequest();
 27703  004D06  EC63  F01F         	call	_USBCheckCDCRequest	;wreg free
 27704                           
 27705                           ;USBapp.c: 354: }
 27706                           
 27707                           ;USBapp.c: 353: break;
 27708                           
 27709                           ;USBapp.c: 352: default:
 27710                           
 27711                           ;USBapp.c: 350: break;
 27712                           
 27713                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 27714                           
 27715                           ;USBapp.c: 347: break;
 27716                           
 27717                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 27718                           
 27719                           ;USBapp.c: 344: break;
 27720  004D0A  0012               	return	
 27721  004D0C                     i2l835:
 27722  004D0C  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27723  004D10  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27724                           
 27725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27726                           ; Switch size 1, requested type "space"
 27727                           ; Number of cases is 2, Range of values is 0 to 127
 27728                           ; switch strategies available:
 27729                           ; Name         Instructions Cycles
 27730                           ; simple_byte            7     4 (average)
 27731                           ;	Chosen strategy is simple_byte
 27732  004D14  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27733  004D16  0A00               	xorlw	0	; case 0
 27734  004D18  B4D8               	btfsc	status,2,c
 27735  004D1A  D004               	goto	i2l11660
 27736  004D1C  0A7F               	xorlw	127	; case 127
 27737  004D1E  A4D8               	btfss	status,2,c
 27738  004D20  0012               	return	
 27739  004D22  D018               	goto	i2l11662
 27740  004D24                     i2l11660:
 27741                           
 27742                           ; Switch size 1, requested type "space"
 27743                           ; Number of cases is 8, Range of values is 1 to 117
 27744                           ; switch strategies available:
 27745                           ; Name         Instructions Cycles
 27746                           ; simple_byte           25    13 (average)
 27747                           ;	Chosen strategy is simple_byte
 27748  004D24  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27749  004D26  0A01               	xorlw	1	; case 1
 27750  004D28  B4D8               	btfsc	status,2,c
 27751  004D2A  D7EA               	goto	i2l841
 27752  004D2C  0A03               	xorlw	3	; case 2
 27753  004D2E  B4D8               	btfsc	status,2,c
 27754  004D30  0012               	return	
 27755  004D32  0A01               	xorlw	1	; case 3
 27756  004D34  B4D8               	btfsc	status,2,c
 27757  004D36  D7E7               	goto	i2l843
 27758  004D38  0A06               	xorlw	6	; case 5
 27759  004D3A  B4D8               	btfsc	status,2,c
 27760  004D3C  0012               	return	
 27761  004D3E  0A77               	xorlw	119	; case 114
 27762  004D40  B4D8               	btfsc	status,2,c
 27763  004D42  0012               	return	
 27764  004D44  0A01               	xorlw	1	; case 115
 27765  004D46  B4D8               	btfsc	status,2,c
 27766  004D48  0012               	return	
 27767  004D4A  0A07               	xorlw	7	; case 116
 27768  004D4C  B4D8               	btfsc	status,2,c
 27769  004D4E  0012               	return	
 27770  004D50  0A01               	xorlw	1	; case 117
 27771  004D52  0012               	return	
 27772  004D54                     i2l11662:
 27773                           
 27774                           ; Switch size 1, requested type "space"
 27775                           ; Number of cases is 1, Range of values is 255 to 255
 27776                           ; switch strategies available:
 27777                           ; Name         Instructions Cycles
 27778                           ; simple_byte            4     3 (average)
 27779                           ;	Chosen strategy is simple_byte
 27780  004D54  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27781  004D56  0AFF               	xorlw	255	; case 255
 27782  004D58  0012               	return	
 27783  004D5A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27784                           	opt stack 0
 27785                           pclatu	equ	0xFFB
 27786                           pclath	equ	0xFFA
 27787                           tblptru	equ	0xFF8
 27788                           tblptrh	equ	0xFF7
 27789                           tblptrl	equ	0xFF6
 27790                           tablat	equ	0xFF5
 27791                           prodh	equ	0xFF4
 27792                           prodl	equ	0xFF3
 27793                           intcon	equ	0xFF2
 27794                           intcon3	equ	0xFF0
 27795                           indf0	equ	0xFEF
 27796                           postinc0	equ	0xFEE
 27797                           fsr0h	equ	0xFEA
 27798                           fsr0l	equ	0xFE9
 27799                           wreg	equ	0xFE8
 27800                           indf1	equ	0xFE7
 27801                           postdec1	equ	0xFE5
 27802                           fsr1h	equ	0xFE2
 27803                           fsr1l	equ	0xFE1
 27804                           indf2	equ	0xFDF
 27805                           postinc2	equ	0xFDE
 27806                           postdec2	equ	0xFDD
 27807                           plusw2	equ	0xFDB
 27808                           fsr2h	equ	0xFDA
 27809                           fsr2l	equ	0xFD9
 27810                           status	equ	0xFD8
 27811                           
 27812 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 27813 ;; Defined at:
 27814 ;;		line 144 in file "../Includes/Board/USBapp.c"
 27815 ;; Parameters:    Size  Location     Type
 27816 ;;		None
 27817 ;; Auto vars:     Size  Location     Type
 27818 ;;  i               1   12[COMRAM] unsigned char 
 27819 ;; Return value:  Size  Location     Type
 27820 ;;                  1    wreg      void 
 27821 ;; Registers used:
 27822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27823 ;; Tracked objects:
 27824 ;;		On entry : 0/0
 27825 ;;		On exit  : 0/0
 27826 ;;		Unchanged: 0/0
 27827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27828 ;;      Params:         0       0       0       0       0       0       0       0       0
 27829 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27831 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27832 ;;Total ram usage:        1 bytes
 27833 ;; Hardware stack levels used:    1
 27834 ;; Hardware stack levels required when called:    3
 27835 ;; This function calls:
 27836 ;;		_CDCInitEP
 27837 ;;		i2_EUSART_Initialize
 27838 ;; This function is called by:
 27839 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27840 ;; This function uses a non-reentrant model
 27841 ;;
 27842                           
 27843                           	psect	text121
 27844  004E10                     __ptext121:
 27845                           	opt stack 0
 27846  004E10                     _USBapp_CdcEmulatorInitialize:
 27847                           	opt stack 15
 27848                           
 27849                           ;USBapp.c: 147: CDCInitEP();
 27850                           
 27851                           ;incstack = 0
 27852  004E10  ECED  F025         	call	_CDCInitEP	;wreg free
 27853                           
 27854                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 27855  004E14  0E00               	movlw	0
 27856  004E16  0101               	movlb	1	; () banked
 27857  004E18  6FE0               	movwf	(_line_coding+4)& (0+255),b
 27858                           
 27859                           ; BSR set to: 1
 27860                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 27861  004E1A  0E08               	movlw	8
 27862  004E1C  6FE2               	movwf	(_line_coding+6)& (0+255),b
 27863                           
 27864                           ; BSR set to: 1
 27865                           ;USBapp.c: 150: line_coding.bParityType = 0;
 27866  004E1E  0E00               	movlw	0
 27867  004E20  6FE1               	movwf	(_line_coding+5)& (0+255),b
 27868                           
 27869                           ; BSR set to: 1
 27870                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 27871  004E22  0E00               	movlw	0
 27872  004E24  6FDC               	movwf	_line_coding& (0+255),b
 27873  004E26  0E4B               	movlw	75
 27874  004E28  6FDD               	movwf	(_line_coding+1)& (0+255),b
 27875  004E2A  0E00               	movlw	0
 27876  004E2C  6FDE               	movwf	(_line_coding+2)& (0+255),b
 27877  004E2E  0E00               	movlw	0
 27878  004E30  6FDF               	movwf	(_line_coding+3)& (0+255),b
 27879                           
 27880                           ; BSR set to: 1
 27881                           ;USBapp.c: 152: EUSART_Initialize();
 27882  004E32  EC01  F029         	call	i2_EUSART_Initialize	;wreg free
 27883                           
 27884                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 27885  004E36  0E00               	movlw	0
 27886  004E38  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 27887  004E3A                     i2l7514:
 27888  004E3A  0E3F               	movlw	63
 27889  004E3C  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 27890  004E3E  D001               	goto	i2l788
 27891  004E40  D00C               	goto	i2u549_40
 27892  004E42                     i2l788:
 27893                           
 27894                           ;USBapp.c: 155: {
 27895                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 27896  004E42  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 27897  004E44  0D01               	mullw	1
 27898  004E46  0E80               	movlw	low _USB_Buffer
 27899  004E48  24F3               	addwf	prodl,w,c
 27900  004E4A  6ED9               	movwf	fsr2l,c
 27901  004E4C  0E02               	movlw	high _USB_Buffer
 27902  004E4E  20F4               	addwfc	prodh,w,c
 27903  004E50  6EDA               	movwf	fsr2h,c
 27904  004E52  0E00               	movlw	0
 27905  004E54  6EDF               	movwf	indf2,c
 27906  004E56  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 27907  004E58  D7F0               	goto	i2l7514
 27908  004E5A                     i2u549_40:
 27909                           
 27910                           ;USBapp.c: 157: }
 27911                           ;USBapp.c: 158: NextUSBOut = 0;
 27912  004E5A  0E00               	movlw	0
 27913  004E5C  0100               	movlb	0	; () banked
 27914  004E5E  6FE8               	movwf	_NextUSBOut& (0+255),b
 27915                           
 27916                           ;USBapp.c: 159: LastRS232Out = 0;
 27917  004E60  0E00               	movlw	0
 27918  004E62  6FE6               	movwf	_LastRS232Out& (0+255),b
 27919                           
 27920                           ; BSR set to: 0
 27921  004E64  0012               	return		;funcret
 27922  004E66                     __end_of_USBapp_CdcEmulatorInitialize:
 27923                           	opt stack 0
 27924                           pclatu	equ	0xFFB
 27925                           pclath	equ	0xFFA
 27926                           tblptru	equ	0xFF8
 27927                           tblptrh	equ	0xFF7
 27928                           tblptrl	equ	0xFF6
 27929                           tablat	equ	0xFF5
 27930                           prodh	equ	0xFF4
 27931                           prodl	equ	0xFF3
 27932                           intcon	equ	0xFF2
 27933                           intcon3	equ	0xFF0
 27934                           indf0	equ	0xFEF
 27935                           postinc0	equ	0xFEE
 27936                           fsr0h	equ	0xFEA
 27937                           fsr0l	equ	0xFE9
 27938                           wreg	equ	0xFE8
 27939                           indf1	equ	0xFE7
 27940                           postdec1	equ	0xFE5
 27941                           fsr1h	equ	0xFE2
 27942                           fsr1l	equ	0xFE1
 27943                           indf2	equ	0xFDF
 27944                           postinc2	equ	0xFDE
 27945                           postdec2	equ	0xFDD
 27946                           plusw2	equ	0xFDB
 27947                           fsr2h	equ	0xFDA
 27948                           fsr2l	equ	0xFD9
 27949                           status	equ	0xFD8
 27950                           
 27951 ;; *************** function _CDCInitEP *****************
 27952 ;; Defined at:
 27953 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 27954 ;; Parameters:    Size  Location     Type
 27955 ;;		None
 27956 ;; Auto vars:     Size  Location     Type
 27957 ;;		None
 27958 ;; Return value:  Size  Location     Type
 27959 ;;                  1    wreg      void 
 27960 ;; Registers used:
 27961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27962 ;; Tracked objects:
 27963 ;;		On entry : 0/0
 27964 ;;		On exit  : 0/0
 27965 ;;		Unchanged: 0/0
 27966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27967 ;;      Params:         0       0       0       0       0       0       0       0       0
 27968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27969 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27970 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27971 ;;Total ram usage:        0 bytes
 27972 ;; Hardware stack levels used:    1
 27973 ;; Hardware stack levels required when called:    2
 27974 ;; This function calls:
 27975 ;;		_USBEnableEndpoint
 27976 ;;		i2_USBTransferOnePacket
 27977 ;; This function is called by:
 27978 ;;		_USBapp_CdcEmulatorInitialize
 27979 ;; This function uses a non-reentrant model
 27980 ;;
 27981                           
 27982                           	psect	text122
 27983  004BDA                     __ptext122:
 27984                           	opt stack 0
 27985  004BDA                     _CDCInitEP:
 27986                           	opt stack 15
 27987                           
 27988                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;incstack = 0
 27992  004BDA  0E00               	movlw	0
 27993  004BDC  0101               	movlb	1	; () banked
 27994  004BDE  6FDC               	movwf	_line_coding& (0+255),b
 27995  004BE0  0E4B               	movlw	75
 27996  004BE2  6FDD               	movwf	(_line_coding+1)& (0+255),b
 27997  004BE4  0E00               	movlw	0
 27998  004BE6  6FDE               	movwf	(_line_coding+2)& (0+255),b
 27999  004BE8  0E00               	movlw	0
 28000  004BEA  6FDF               	movwf	(_line_coding+3)& (0+255),b
 28001                           
 28002                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28003  004BEC  0E00               	movlw	0
 28004  004BEE  6FE0               	movwf	(_line_coding+4)& (0+255),b
 28005                           
 28006                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28007  004BF0  0E00               	movlw	0
 28008  004BF2  6FE1               	movwf	(_line_coding+5)& (0+255),b
 28009                           
 28010                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28011  004BF4  0E08               	movlw	8
 28012  004BF6  6FE2               	movwf	(_line_coding+6)& (0+255),b
 28013                           
 28014                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28015  004BF8  0E00               	movlw	0
 28016  004BFA  0100               	movlb	0	; () banked
 28017  004BFC  6FDE               	movwf	_cdc_rx_len& (0+255),b
 28018                           
 28019                           ; BSR set to: 0
 28020                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28021  004BFE  0E1A               	movlw	26
 28022  004C00  6E09               	movwf	USBEnableEndpoint@options,c
 28023  004C02  0E01               	movlw	1
 28024  004C04  ECAA  F028         	call	_USBEnableEndpoint
 28025                           
 28026                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28027  004C08  0E1E               	movlw	30
 28028  004C0A  6E09               	movwf	USBEnableEndpoint@options,c
 28029  004C0C  0E02               	movlw	2
 28030  004C0E  ECAA  F028         	call	_USBEnableEndpoint
 28031                           
 28032                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28033  004C12  0E00               	movlw	0
 28034  004C14  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28035  004C16  0E40               	movlw	64
 28036  004C18  6E02               	movwf	i2USBTransferOnePacket@data,c
 28037  004C1A  0E05               	movlw	5
 28038  004C1C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28039  004C1E  0E40               	movlw	64
 28040  004C20  6E04               	movwf	i2USBTransferOnePacket@len,c
 28041  004C22  0E02               	movlw	2
 28042  004C24  ECF5  F01D         	call	i2_USBTransferOnePacket
 28043  004C28  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28044  004C2C  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28045                           
 28046                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28047  004C30  0E00               	movlw	0
 28048  004C32  6E32               	movwf	_CDCDataInHandle,c
 28049  004C34  0E00               	movlw	0
 28050  004C36  6E33               	movwf	_CDCDataInHandle+1,c
 28051                           
 28052                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28053  004C38  0E00               	movlw	0
 28054  004C3A  0100               	movlb	0	; () banked
 28055  004C3C  6FEB               	movwf	_cdc_trf_state& (0+255),b
 28056                           
 28057                           ; BSR set to: 0
 28058  004C3E  0012               	return		;funcret
 28059  004C40                     __end_of_CDCInitEP:
 28060                           	opt stack 0
 28061                           pclatu	equ	0xFFB
 28062                           pclath	equ	0xFFA
 28063                           tblptru	equ	0xFF8
 28064                           tblptrh	equ	0xFF7
 28065                           tblptrl	equ	0xFF6
 28066                           tablat	equ	0xFF5
 28067                           prodh	equ	0xFF4
 28068                           prodl	equ	0xFF3
 28069                           intcon	equ	0xFF2
 28070                           intcon3	equ	0xFF0
 28071                           indf0	equ	0xFEF
 28072                           postinc0	equ	0xFEE
 28073                           fsr0h	equ	0xFEA
 28074                           fsr0l	equ	0xFE9
 28075                           wreg	equ	0xFE8
 28076                           indf1	equ	0xFE7
 28077                           postdec1	equ	0xFE5
 28078                           fsr1h	equ	0xFE2
 28079                           fsr1l	equ	0xFE1
 28080                           indf2	equ	0xFDF
 28081                           postinc2	equ	0xFDE
 28082                           postdec2	equ	0xFDD
 28083                           plusw2	equ	0xFDB
 28084                           fsr2h	equ	0xFDA
 28085                           fsr2l	equ	0xFD9
 28086                           status	equ	0xFD8
 28087                           
 28088 ;; *************** function i2_USBTransferOnePacket *****************
 28089 ;; Defined at:
 28090 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28091 ;; Parameters:    Size  Location     Type
 28092 ;;  ep              1    wreg     unsigned char 
 28093 ;;  dir             1    0[COMRAM] unsigned char 
 28094 ;;  data            2    1[COMRAM] PTR unsigned char 
 28095 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28096 ;;  len             1    3[COMRAM] unsigned char 
 28097 ;; Auto vars:     Size  Location     Type
 28098 ;;  ep              1    4[COMRAM] unsigned char 
 28099 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28100 ;;		 -> BDT(48), NULL(0), 
 28101 ;; Return value:  Size  Location     Type
 28102 ;;                  2    0[COMRAM] PTR void 
 28103 ;; Registers used:
 28104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28105 ;; Tracked objects:
 28106 ;;		On entry : 0/0
 28107 ;;		On exit  : 0/0
 28108 ;;		Unchanged: 0/0
 28109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28110 ;;      Params:         4       0       0       0       0       0       0       0       0
 28111 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28112 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28113 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28114 ;;Total ram usage:        7 bytes
 28115 ;; Hardware stack levels used:    1
 28116 ;; This function calls:
 28117 ;;		Nothing
 28118 ;; This function is called by:
 28119 ;;		_CDCInitEP
 28120 ;; This function uses a non-reentrant model
 28121 ;;
 28122                           
 28123                           	psect	text123
 28124  003BEA                     __ptext123:
 28125                           	opt stack 0
 28126  003BEA                     i2_USBTransferOnePacket:
 28127                           	opt stack 16
 28128                           
 28129                           ; BSR set to: 0
 28130                           ;incstack = 0
 28131                           ;i2USBTransferOnePacket@ep stored from wreg
 28132  003BEA  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28133                           
 28134                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28135                           ;usb_device.c: 762: if(dir != 0)
 28136  003BEC  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28137  003BEE  B4D8               	btfsc	status,2,c
 28138  003BF0  D007               	goto	i2l1670
 28139                           
 28140                           ;usb_device.c: 763: {
 28141                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28142  003BF2  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28143  003BF4  0D02               	mullw	2
 28144  003BF6  0ECA               	movlw	low _pBDTEntryIn
 28145  003BF8  24F3               	addwf	prodl,w,c
 28146  003BFA  6ED9               	movwf	fsr2l,c
 28147  003BFC  0E00               	movlw	high _pBDTEntryIn
 28148  003BFE  D006               	goto	L43
 28149  003C00                     i2l1670:
 28150                           
 28151                           ;usb_device.c: 767: else
 28152                           ;usb_device.c: 768: {
 28153                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28154  003C00  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28155  003C02  0D02               	mullw	2
 28156  003C04  0E40               	movlw	low _pBDTEntryOut
 28157  003C06  24F3               	addwf	prodl,w,c
 28158  003C08  6ED9               	movwf	fsr2l,c
 28159  003C0A  0E01               	movlw	high _pBDTEntryOut
 28160  003C0C                     L43:
 28161  003C0C  20F4               	addwfc	prodh,w,c
 28162  003C0E  6EDA               	movwf	fsr2h,c
 28163  003C10  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28164  003C14  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28165                           
 28166                           ;usb_device.c: 771: }
 28167                           ;usb_device.c: 775: if(handle == 0)
 28168  003C18  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28169  003C1A  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28170  003C1C  A4D8               	btfss	status,2,c
 28171  003C1E  D005               	goto	i2l1672
 28172                           
 28173                           ;usb_device.c: 776: {
 28174                           ;usb_device.c: 777: return 0;
 28175  003C20  0E00               	movlw	0
 28176  003C22  6E01               	movwf	?i2_USBTransferOnePacket,c
 28177  003C24  0E00               	movlw	0
 28178  003C26  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28179  003C28  0012               	return	
 28180  003C2A                     i2l1672:
 28181                           
 28182                           ;usb_device.c: 778: }
 28183                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28184  003C2A  EE20 F002          	lfsr	2,2
 28185  003C2E  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28186  003C30  26D9               	addwf	fsr2l,f,c
 28187  003C32  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28188  003C34  22DA               	addwfc	fsr2h,f,c
 28189  003C36  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28190  003C3A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28191                           
 28192                           ;usb_device.c: 781: handle->CNT = len;
 28193  003C3E  EE20 F001          	lfsr	2,1
 28194  003C42  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28195  003C44  26D9               	addwf	fsr2l,f,c
 28196  003C46  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28197  003C48  22DA               	addwfc	fsr2h,f,c
 28198  003C4A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28199                           
 28200                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28201  003C4E  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28202  003C52  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28203  003C56  0E40               	movlw	64
 28204  003C58  16DF               	andwf	indf2,f,c
 28205                           
 28206                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28207  003C5A  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28208  003C5E  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28209  003C62  0E00               	movlw	0
 28210  003C64  86DB               	bsf	plusw2,3,c
 28211                           
 28212                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28213  003C66  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28214  003C6A  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28215  003C6E  0E00               	movlw	0
 28216  003C70  8EDB               	bsf	plusw2,7,c
 28217                           
 28218                           ;usb_device.c: 787: if(dir != 0)
 28219  003C72  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28220  003C74  B4D8               	btfsc	status,2,c
 28221  003C76  D007               	goto	i2l1674
 28222                           
 28223                           ;usb_device.c: 788: {
 28224                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28225  003C78  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28226  003C7A  0D02               	mullw	2
 28227  003C7C  0ECA               	movlw	low _pBDTEntryIn
 28228  003C7E  24F3               	addwf	prodl,w,c
 28229  003C80  6ED9               	movwf	fsr2l,c
 28230  003C82  0E00               	movlw	high _pBDTEntryIn
 28231  003C84  D006               	goto	L44
 28232  003C86                     i2l1674:
 28233                           
 28234                           ;usb_device.c: 792: else
 28235                           ;usb_device.c: 793: {
 28236                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28237  003C86  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28238  003C88  0D02               	mullw	2
 28239  003C8A  0E40               	movlw	low _pBDTEntryOut
 28240  003C8C  24F3               	addwf	prodl,w,c
 28241  003C8E  6ED9               	movwf	fsr2l,c
 28242  003C90  0E01               	movlw	high _pBDTEntryOut
 28243  003C92                     L44:
 28244  003C92  20F4               	addwfc	prodh,w,c
 28245  003C94  6EDA               	movwf	fsr2h,c
 28246  003C96  0E04               	movlw	4
 28247  003C98  1ADF               	xorwf	indf2,f,c
 28248                           
 28249                           ;usb_device.c: 796: }
 28250                           ;usb_device.c: 797: return (void*)handle;
 28251  003C9A  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28252  003C9E  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28253  003CA2  0012               	return	
 28254  003CA4                     __end_ofi2_USBTransferOnePacket:
 28255                           	opt stack 0
 28256                           pclatu	equ	0xFFB
 28257                           pclath	equ	0xFFA
 28258                           tblptru	equ	0xFF8
 28259                           tblptrh	equ	0xFF7
 28260                           tblptrl	equ	0xFF6
 28261                           tablat	equ	0xFF5
 28262                           prodh	equ	0xFF4
 28263                           prodl	equ	0xFF3
 28264                           intcon	equ	0xFF2
 28265                           intcon3	equ	0xFF0
 28266                           indf0	equ	0xFEF
 28267                           postinc0	equ	0xFEE
 28268                           fsr0h	equ	0xFEA
 28269                           fsr0l	equ	0xFE9
 28270                           wreg	equ	0xFE8
 28271                           indf1	equ	0xFE7
 28272                           postdec1	equ	0xFE5
 28273                           fsr1h	equ	0xFE2
 28274                           fsr1l	equ	0xFE1
 28275                           indf2	equ	0xFDF
 28276                           postinc2	equ	0xFDE
 28277                           postdec2	equ	0xFDD
 28278                           plusw2	equ	0xFDB
 28279                           fsr2h	equ	0xFDA
 28280                           fsr2l	equ	0xFD9
 28281                           status	equ	0xFD8
 28282                           
 28283 ;; *************** function _USBEnableEndpoint *****************
 28284 ;; Defined at:
 28285 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28286 ;; Parameters:    Size  Location     Type
 28287 ;;  ep              1    wreg     unsigned char 
 28288 ;;  options         1    8[COMRAM] unsigned char 
 28289 ;; Auto vars:     Size  Location     Type
 28290 ;;  ep              1   11[COMRAM] unsigned char 
 28291 ;;  p               2    9[COMRAM] PTR unsigned char 
 28292 ;;		 -> UEP0(1), 
 28293 ;; Return value:  Size  Location     Type
 28294 ;;                  1    wreg      void 
 28295 ;; Registers used:
 28296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28297 ;; Tracked objects:
 28298 ;;		On entry : 0/0
 28299 ;;		On exit  : 0/0
 28300 ;;		Unchanged: 0/0
 28301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28302 ;;      Params:         1       0       0       0       0       0       0       0       0
 28303 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28305 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28306 ;;Total ram usage:        4 bytes
 28307 ;; Hardware stack levels used:    1
 28308 ;; Hardware stack levels required when called:    1
 28309 ;; This function calls:
 28310 ;;		_USBConfigureEndpoint
 28311 ;; This function is called by:
 28312 ;;		_CDCInitEP
 28313 ;; This function uses a non-reentrant model
 28314 ;;
 28315                           
 28316                           	psect	text124
 28317  005154                     __ptext124:
 28318                           	opt stack 0
 28319  005154                     _USBEnableEndpoint:
 28320                           	opt stack 15
 28321                           
 28322                           ;incstack = 0
 28323                           ;USBEnableEndpoint@ep stored from wreg
 28324  005154  6E0C               	movwf	USBEnableEndpoint@ep,c
 28325                           
 28326                           ;usb_device.c: 647: unsigned char* p;
 28327                           ;usb_device.c: 651: if(options & 0x04)
 28328  005156  A409               	btfss	USBEnableEndpoint@options,2,c
 28329  005158  D005               	goto	i2l1665
 28330                           
 28331                           ;usb_device.c: 652: {
 28332                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28333  00515A  0E00               	movlw	0
 28334  00515C  6E01               	movwf	USBConfigureEndpoint@direction,c
 28335  00515E  500C               	movf	USBEnableEndpoint@ep,w,c
 28336  005160  EC08  F021         	call	_USBConfigureEndpoint
 28337  005164                     i2l1665:
 28338                           
 28339                           ;usb_device.c: 654: }
 28340                           ;usb_device.c: 655: if(options & 0x02)
 28341  005164  A209               	btfss	USBEnableEndpoint@options,1,c
 28342  005166  D005               	goto	i2l1666
 28343                           
 28344                           ;usb_device.c: 656: {
 28345                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28346  005168  0E01               	movlw	1
 28347  00516A  6E01               	movwf	USBConfigureEndpoint@direction,c
 28348  00516C  500C               	movf	USBEnableEndpoint@ep,w,c
 28349  00516E  EC08  F021         	call	_USBConfigureEndpoint
 28350  005172                     i2l1666:
 28351                           
 28352                           ;usb_device.c: 658: }
 28353                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28354  005172  500C               	movf	USBEnableEndpoint@ep,w,c
 28355  005174  0D01               	mullw	1
 28356  005176  0E6A               	movlw	106
 28357  005178  24F3               	addwf	prodl,w,c
 28358  00517A  6E0A               	movwf	USBEnableEndpoint@p,c
 28359  00517C  0E0F               	movlw	15
 28360  00517E  20F4               	addwfc	prodh,w,c
 28361  005180  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28362                           
 28363                           ;usb_device.c: 664: *p = options;
 28364  005182  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28365  005186  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28366  00518A  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28367  00518E  0012               	return		;funcret
 28368  005190                     __end_of_USBEnableEndpoint:
 28369                           	opt stack 0
 28370                           pclatu	equ	0xFFB
 28371                           pclath	equ	0xFFA
 28372                           tblptru	equ	0xFF8
 28373                           tblptrh	equ	0xFF7
 28374                           tblptrl	equ	0xFF6
 28375                           tablat	equ	0xFF5
 28376                           prodh	equ	0xFF4
 28377                           prodl	equ	0xFF3
 28378                           intcon	equ	0xFF2
 28379                           intcon3	equ	0xFF0
 28380                           indf0	equ	0xFEF
 28381                           postinc0	equ	0xFEE
 28382                           fsr0h	equ	0xFEA
 28383                           fsr0l	equ	0xFE9
 28384                           wreg	equ	0xFE8
 28385                           indf1	equ	0xFE7
 28386                           postdec1	equ	0xFE5
 28387                           fsr1h	equ	0xFE2
 28388                           fsr1l	equ	0xFE1
 28389                           indf2	equ	0xFDF
 28390                           postinc2	equ	0xFDE
 28391                           postdec2	equ	0xFDD
 28392                           plusw2	equ	0xFDB
 28393                           fsr2h	equ	0xFDA
 28394                           fsr2l	equ	0xFD9
 28395                           status	equ	0xFD8
 28396                           
 28397 ;; *************** function _USBConfigureEndpoint *****************
 28398 ;; Defined at:
 28399 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28400 ;; Parameters:    Size  Location     Type
 28401 ;;  EPNum           1    wreg     unsigned char 
 28402 ;;  direction       1    0[COMRAM] unsigned char 
 28403 ;; Auto vars:     Size  Location     Type
 28404 ;;  EPNum           1    5[COMRAM] unsigned char 
 28405 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28406 ;;		 -> BDT(48), 
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1    wreg      void 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28411 ;; Tracked objects:
 28412 ;;		On entry : 0/0
 28413 ;;		On exit  : 0/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28416 ;;      Params:         1       0       0       0       0       0       0       0       0
 28417 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28418 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28419 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28420 ;;Total ram usage:        8 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; This function calls:
 28423 ;;		Nothing
 28424 ;; This function is called by:
 28425 ;;		_USBEnableEndpoint
 28426 ;; This function uses a non-reentrant model
 28427 ;;
 28428                           
 28429                           	psect	text125
 28430  004210                     __ptext125:
 28431                           	opt stack 0
 28432  004210                     _USBConfigureEndpoint:
 28433                           	opt stack 15
 28434                           
 28435                           ;incstack = 0
 28436                           ;USBConfigureEndpoint@EPNum stored from wreg
 28437  004210  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28438                           
 28439                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28440                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28441  004212  0E00               	movlw	0
 28442  004214  6E07               	movwf	USBConfigureEndpoint@handle,c
 28443  004216  0E04               	movlw	4
 28444  004218  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28445                           
 28446                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28447  00421A  5001               	movf	USBConfigureEndpoint@direction,w,c
 28448  00421C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28449  00421E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28450  004220  90D8               	bcf	status,0,c
 28451  004222  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28452  004224  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28453  004226  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28454  004228  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28455  00422A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28456  00422C  90D8               	bcf	status,0,c
 28457  00422E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28458  004230  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28459  004232  90D8               	bcf	status,0,c
 28460  004234  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28461  004236  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28462  004238  5002               	movf	??_USBConfigureEndpoint,w,c
 28463  00423A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28464  00423C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28465  00423E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28466  004240  90D8               	bcf	status,0,c
 28467  004242  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28468  004244  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28469  004246  90D8               	bcf	status,0,c
 28470  004248  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28471  00424A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28472  00424C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28473  00424E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28474  004250  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28475  004252  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28476                           
 28477                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28478  004254  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28479  004258  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28480  00425C  9EDF               	bcf	indf2,7,c
 28481                           
 28482                           ;usb_device.c: 1242: if(direction == 0)
 28483  00425E  5001               	movf	USBConfigureEndpoint@direction,w,c
 28484  004260  A4D8               	btfss	status,2,c
 28485  004262  D007               	goto	i2l1712
 28486                           
 28487                           ;usb_device.c: 1243: {
 28488                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28489  004264  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28490  004266  0D02               	mullw	2
 28491  004268  0E40               	movlw	low _pBDTEntryOut
 28492  00426A  24F3               	addwf	prodl,w,c
 28493  00426C  6ED9               	movwf	fsr2l,c
 28494  00426E  0E01               	movlw	high _pBDTEntryOut
 28495  004270  D006               	goto	L45
 28496  004272                     i2l1712:
 28497                           
 28498                           ;usb_device.c: 1246: else
 28499                           ;usb_device.c: 1247: {
 28500                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28501  004272  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28502  004274  0D02               	mullw	2
 28503  004276  0ECA               	movlw	low _pBDTEntryIn
 28504  004278  24F3               	addwf	prodl,w,c
 28505  00427A  6ED9               	movwf	fsr2l,c
 28506  00427C  0E00               	movlw	high _pBDTEntryIn
 28507  00427E                     L45:
 28508  00427E  20F4               	addwfc	prodh,w,c
 28509  004280  6EDA               	movwf	fsr2h,c
 28510  004282  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28511  004286  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28512                           
 28513                           ;usb_device.c: 1249: }
 28514                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28515  00428A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28516  00428E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28517  004292  9CDF               	bcf	indf2,6,c
 28518                           
 28519                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28520  004294  EE20 F004          	lfsr	2,4
 28521  004298  5007               	movf	USBConfigureEndpoint@handle,w,c
 28522  00429A  26D9               	addwf	fsr2l,f,c
 28523  00429C  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28524  00429E  22DA               	addwfc	fsr2h,f,c
 28525  0042A0  8CDF               	bsf	indf2,6,c
 28526  0042A2  0012               	return		;funcret
 28527  0042A4                     __end_of_USBConfigureEndpoint:
 28528                           	opt stack 0
 28529                           pclatu	equ	0xFFB
 28530                           pclath	equ	0xFFA
 28531                           tblptru	equ	0xFF8
 28532                           tblptrh	equ	0xFF7
 28533                           tblptrl	equ	0xFF6
 28534                           tablat	equ	0xFF5
 28535                           prodh	equ	0xFF4
 28536                           prodl	equ	0xFF3
 28537                           intcon	equ	0xFF2
 28538                           intcon3	equ	0xFF0
 28539                           indf0	equ	0xFEF
 28540                           postinc0	equ	0xFEE
 28541                           fsr0h	equ	0xFEA
 28542                           fsr0l	equ	0xFE9
 28543                           wreg	equ	0xFE8
 28544                           indf1	equ	0xFE7
 28545                           postdec1	equ	0xFE5
 28546                           fsr1h	equ	0xFE2
 28547                           fsr1l	equ	0xFE1
 28548                           indf2	equ	0xFDF
 28549                           postinc2	equ	0xFDE
 28550                           postdec2	equ	0xFDD
 28551                           plusw2	equ	0xFDB
 28552                           fsr2h	equ	0xFDA
 28553                           fsr2l	equ	0xFD9
 28554                           status	equ	0xFD8
 28555                           
 28556 ;; *************** function _USBCheckCDCRequest *****************
 28557 ;; Defined at:
 28558 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28559 ;; Parameters:    Size  Location     Type
 28560 ;;		None
 28561 ;; Auto vars:     Size  Location     Type
 28562 ;;		None
 28563 ;; Return value:  Size  Location     Type
 28564 ;;                  1    wreg      void 
 28565 ;; Registers used:
 28566 ;;		wreg, status,2, status,0
 28567 ;; Tracked objects:
 28568 ;;		On entry : 0/0
 28569 ;;		On exit  : 0/0
 28570 ;;		Unchanged: 0/0
 28571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28572 ;;      Params:         0       0       0       0       0       0       0       0       0
 28573 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28574 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28575 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28576 ;;Total ram usage:        0 bytes
 28577 ;; Hardware stack levels used:    1
 28578 ;; This function calls:
 28579 ;;		Nothing
 28580 ;; This function is called by:
 28581 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28582 ;; This function uses a non-reentrant model
 28583 ;;
 28584                           
 28585                           	psect	text126
 28586  003EC6                     __ptext126:
 28587                           	opt stack 0
 28588  003EC6                     _USBCheckCDCRequest:
 28589                           	opt stack 18
 28590                           
 28591                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28592                           
 28593                           ;incstack = 0
 28594  003EC6  0104               	movlb	4	; () banked
 28595  003EC8  5130               	movf	48,w,b	;volatile
 28596  003ECA  0B1F               	andlw	31
 28597  003ECC  06E8               	decf	wreg,f,c
 28598  003ECE  A4D8               	btfss	status,2,c
 28599  003ED0  0012               	return	
 28600                           
 28601                           ; BSR set to: 4
 28602                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28603                           
 28604                           ; BSR set to: 4
 28605                           
 28606                           ; BSR set to: 4
 28607  003ED2  3930               	swapf	48,w,b	;volatile
 28608  003ED4  32E8               	rrcf	wreg,f,c
 28609  003ED6  0B03               	andlw	3
 28610  003ED8  06E8               	decf	wreg,f,c
 28611  003EDA  A4D8               	btfss	status,2,c
 28612  003EDC  0012               	return	
 28613                           
 28614                           ; BSR set to: 4
 28615                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28616                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28617                           
 28618                           ; BSR set to: 4
 28619                           
 28620                           ; BSR set to: 4
 28621  003EDE  5134               	movf	52,w,b	;volatile
 28622  003EE0  B4D8               	btfsc	status,2,c
 28623  003EE2  D037               	goto	i2l1933
 28624                           
 28625                           ; BSR set to: 4
 28626  003EE4  0534               	decf	52,w,b	;volatile
 28627  003EE6  A4D8               	btfss	status,2,c
 28628  003EE8  0012               	return	
 28629  003EEA  D033               	goto	i2l1933
 28630  003EEC                     
 28631                           ; BSR set to: 4
 28632                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28633                           
 28634                           ; BSR set to: 4
 28635  003EEC  0ED4               	movlw	low _dummy_encapsulated_cmd_response
 28636  003EEE  0100               	movlb	0	; () banked
 28637  003EF0  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28638  003EF2  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28639  003EF4  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 28643  003EF6  0E00               	movlw	0
 28644  003EF8  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28645  003EFA  0E08               	movlw	8
 28646  003EFC  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28647                           
 28648                           ; BSR set to: 0
 28649                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28650  003EFE  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 28654  003F00  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28655                           
 28656                           ;usb_device_cdc.c: 212: break;
 28657  003F02  0012               	return	
 28658  003F04                     
 28659                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28660                           
 28661                           ; BSR set to: 0
 28662  003F04  0ED4               	movlw	low _dummy_encapsulated_cmd_response
 28663  003F06  0100               	movlb	0	; () banked
 28664  003F08  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28665  003F0A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28666  003F0C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28667                           
 28668                           ; BSR set to: 0
 28669                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 28670  003F0E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28671                           
 28672                           ;usb_device_cdc.c: 217: break;
 28673  003F10  0012               	return	
 28674  003F12                     i2l1937:
 28675                           
 28676                           ; BSR set to: 4
 28677                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 28678  003F12  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 28679  003F16  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 28680                           
 28681                           ; BSR set to: 4
 28682                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 28683  003F1A  0ECA               	movlw	low _cdc_notice
 28684  003F1C  0100               	movlb	0	; () banked
 28685  003F1E  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 28686  003F20  0E01               	movlw	high _cdc_notice
 28687  003F22  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28688                           
 28689                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 28690  003F24  0EB6               	movlw	low _USART_mySetLineCodingHandler
 28691  003F26  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28692  003F28  0E4D               	movlw	high _USART_mySetLineCodingHandler
 28693  003F2A  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 28697  003F2C  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28698                           
 28699                           ;usb_device_cdc.c: 224: break;
 28700  003F2E  0012               	return	
 28701  003F30                     
 28702                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28703                           
 28704                           ; BSR set to: 0
 28705  003F30  0EDC               	movlw	low _line_coding
 28706  003F32  0100               	movlb	0	; () banked
 28707  003F34  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28708  003F36  0E01               	movlw	high _line_coding
 28709  003F38  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28710                           
 28711                           ; BSR set to: 0
 28712  003F3A  0E00               	movlw	0
 28713  003F3C  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28714  003F3E  0E07               	movlw	7
 28715  003F40  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28716                           
 28717                           ; BSR set to: 0
 28718  003F42  0EC1               	movlw	193
 28719  003F44  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28720                           
 28721                           ;usb_device_cdc.c: 231: break;
 28722  003F46  0012               	return	
 28723  003F48                     i2l1939:
 28724                           
 28725                           ; BSR set to: 4
 28726                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28727  003F48  C432 F040          	movff	1074,_control_signal_bitmap	;volatile
 28728                           
 28729                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 28730  003F4C  0100               	movlb	0	; () banked
 28731  003F4E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28732                           
 28733                           ; BSR set to: 0
 28734                           ;usb_device_cdc.c: 260: }
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;usb_device_cdc.c: 259: break;
 28738                           
 28739                           ;usb_device_cdc.c: 258: default:
 28740                           
 28741                           ;usb_device_cdc.c: 256: break;
 28742  003F50  0012               	return	
 28743  003F52                     i2l1933:
 28744                           
 28745                           ; BSR set to: 0
 28746  003F52  0104               	movlb	4	; () banked
 28747  003F54  5131               	movf	49,w,b	;volatile
 28748                           
 28749                           ; Switch size 1, requested type "space"
 28750                           ; Number of cases is 5, Range of values is 0 to 34
 28751                           ; switch strategies available:
 28752                           ; Name         Instructions Cycles
 28753                           ; simple_byte           16     9 (average)
 28754                           ;	Chosen strategy is simple_byte
 28755  003F56  0A00               	xorlw	0	; case 0
 28756  003F58  B4D8               	btfsc	status,2,c
 28757  003F5A  D7C8               	goto	i2l1934
 28758  003F5C  0A01               	xorlw	1	; case 1
 28759  003F5E  B4D8               	btfsc	status,2,c
 28760  003F60  D7D1               	goto	i2l1936
 28761  003F62  0A21               	xorlw	33	; case 32
 28762  003F64  B4D8               	btfsc	status,2,c
 28763  003F66  D7D5               	goto	i2l1937
 28764  003F68  0A01               	xorlw	1	; case 33
 28765  003F6A  B4D8               	btfsc	status,2,c
 28766  003F6C  D7E1               	goto	i2l1938
 28767  003F6E  0A03               	xorlw	3	; case 34
 28768  003F70  A4D8               	btfss	status,2,c
 28769  003F72  0012               	return	
 28770  003F74  D7E9               	goto	i2l1939
 28771  003F76                     __end_of_USBCheckCDCRequest:
 28772                           	opt stack 0
 28773                           pclatu	equ	0xFFB
 28774                           pclath	equ	0xFFA
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           intcon3	equ	0xFF0
 28783                           indf0	equ	0xFEF
 28784                           postinc0	equ	0xFEE
 28785                           fsr0h	equ	0xFEA
 28786                           fsr0l	equ	0xFE9
 28787                           wreg	equ	0xFE8
 28788                           indf1	equ	0xFE7
 28789                           postdec1	equ	0xFE5
 28790                           fsr1h	equ	0xFE2
 28791                           fsr1l	equ	0xFE1
 28792                           indf2	equ	0xFDF
 28793                           postinc2	equ	0xFDE
 28794                           postdec2	equ	0xFDD
 28795                           plusw2	equ	0xFDB
 28796                           fsr2h	equ	0xFDA
 28797                           fsr2l	equ	0xFD9
 28798                           status	equ	0xFD8
 28799                           
 28800 ;; *************** function _USBCtrlTrfOutHandler *****************
 28801 ;; Defined at:
 28802 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 28803 ;; Parameters:    Size  Location     Type
 28804 ;;		None
 28805 ;; Auto vars:     Size  Location     Type
 28806 ;;		None
 28807 ;; Return value:  Size  Location     Type
 28808 ;;                  1    wreg      void 
 28809 ;; Registers used:
 28810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 28811 ;; Tracked objects:
 28812 ;;		On entry : 0/0
 28813 ;;		On exit  : 0/0
 28814 ;;		Unchanged: 0/0
 28815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28816 ;;      Params:         0       0       0       0       0       0       0       0       0
 28817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28820 ;;Total ram usage:        0 bytes
 28821 ;; Hardware stack levels used:    1
 28822 ;; Hardware stack levels required when called:    3
 28823 ;; This function calls:
 28824 ;;		_USBCtrlTrfRxService
 28825 ;; This function is called by:
 28826 ;;		_USBCtrlEPService
 28827 ;; This function uses a non-reentrant model
 28828 ;;
 28829                           
 28830                           	psect	text127
 28831  004D5A                     __ptext127:
 28832                           	opt stack 0
 28833  004D5A                     _USBCtrlTrfOutHandler:
 28834                           	opt stack 15
 28835                           
 28836                           ;usb_device.c: 2171: if(controlTransferState == 2)
 28837                           
 28838                           ;incstack = 0
 28839  004D5A  0E02               	movlw	2
 28840  004D5C  184B               	xorwf	_controlTransferState,w,c	;volatile
 28841  004D5E  A4D8               	btfss	status,2,c
 28842  004D60  D003               	goto	i2l1820
 28843                           
 28844                           ;usb_device.c: 2172: {
 28845                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 28846  004D62  EC2F  F013         	call	_USBCtrlTrfRxService	;wreg free
 28847                           
 28848                           ;usb_device.c: 2174: }
 28849  004D66  0012               	return	
 28850  004D68                     i2l1820:
 28851                           
 28852                           ;usb_device.c: 2175: else
 28853                           ;usb_device.c: 2176: {
 28854                           ;usb_device.c: 2179: controlTransferState = 0;
 28855  004D68  0E00               	movlw	0
 28856  004D6A  6E4B               	movwf	_controlTransferState,c	;volatile
 28857                           
 28858                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 28859  004D6C  5047               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28860  004D6E  A4D8               	btfss	status,2,c
 28861  004D70  D01F               	goto	i2l1822
 28862                           
 28863                           ;usb_device.c: 2187: {
 28864                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 28865  004D72  EE20 F001          	lfsr	2,1
 28866  004D76  5034               	movf	_pBDTEntryEP0OutNext,w,c
 28867  004D78  26D9               	addwf	fsr2l,f,c
 28868  004D7A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 28869  004D7C  22DA               	addwfc	fsr2h,f,c
 28870  004D7E  0E08               	movlw	8
 28871  004D80  6EDF               	movwf	indf2,c
 28872                           
 28873                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28874  004D82  EE20 F002          	lfsr	2,2
 28875  004D86  5034               	movf	_pBDTEntryEP0OutNext,w,c
 28876  004D88  26D9               	addwf	fsr2l,f,c
 28877  004D8A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 28878  004D8C  22DA               	addwfc	fsr2h,f,c
 28879  004D8E  0E30               	movlw	48
 28880  004D90  6EDE               	movwf	postinc2,c
 28881  004D92  0E04               	movlw	4
 28882  004D94  6EDD               	movwf	postdec2,c
 28883                           
 28884                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28885  004D96  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28886  004D9A  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28887  004D9E  0E0C               	movlw	12
 28888  004DA0  6EDF               	movwf	indf2,c
 28889                           
 28890                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28891  004DA2  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28892  004DA6  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28893  004DAA  0E00               	movlw	0
 28894  004DAC  8EDB               	bsf	plusw2,7,c
 28895                           
 28896                           ;usb_device.c: 2192: }
 28897  004DAE  0012               	return	
 28898  004DB0                     i2l1822:
 28899                           
 28900                           ;usb_device.c: 2193: else
 28901                           ;usb_device.c: 2194: {
 28902                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 28903  004DB0  0E00               	movlw	0
 28904  004DB2  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28905  004DB4  0012               	return	
 28906  004DB6                     __end_of_USBCtrlTrfOutHandler:
 28907                           	opt stack 0
 28908                           pclatu	equ	0xFFB
 28909                           pclath	equ	0xFFA
 28910                           tblptru	equ	0xFF8
 28911                           tblptrh	equ	0xFF7
 28912                           tblptrl	equ	0xFF6
 28913                           tablat	equ	0xFF5
 28914                           prodh	equ	0xFF4
 28915                           prodl	equ	0xFF3
 28916                           intcon	equ	0xFF2
 28917                           intcon3	equ	0xFF0
 28918                           indf0	equ	0xFEF
 28919                           postinc0	equ	0xFEE
 28920                           fsr0h	equ	0xFEA
 28921                           fsr0l	equ	0xFE9
 28922                           wreg	equ	0xFE8
 28923                           indf1	equ	0xFE7
 28924                           postdec1	equ	0xFE5
 28925                           fsr1h	equ	0xFE2
 28926                           fsr1l	equ	0xFE1
 28927                           indf2	equ	0xFDF
 28928                           postinc2	equ	0xFDE
 28929                           postdec2	equ	0xFDD
 28930                           plusw2	equ	0xFDB
 28931                           fsr2h	equ	0xFDA
 28932                           fsr2l	equ	0xFD9
 28933                           status	equ	0xFD8
 28934                           
 28935 ;; *************** function _USBCtrlTrfRxService *****************
 28936 ;; Defined at:
 28937 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 28938 ;; Parameters:    Size  Location     Type
 28939 ;;		None
 28940 ;; Auto vars:     Size  Location     Type
 28941 ;;  byteToRead      1   18[COMRAM] unsigned char 
 28942 ;;  i               1   17[COMRAM] unsigned char 
 28943 ;; Return value:  Size  Location     Type
 28944 ;;                  1    wreg      void 
 28945 ;; Registers used:
 28946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 28947 ;; Tracked objects:
 28948 ;;		On entry : 0/0
 28949 ;;		On exit  : 0/0
 28950 ;;		Unchanged: 0/0
 28951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28952 ;;      Params:         0       0       0       0       0       0       0       0       0
 28953 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28954 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28955 ;;      Totals:         2       0       0       0       0       0       0       0       0
 28956 ;;Total ram usage:        2 bytes
 28957 ;; Hardware stack levels used:    1
 28958 ;; Hardware stack levels required when called:    2
 28959 ;; This function calls:
 28960 ;;		_USART_mySetLineCodingHandler
 28961 ;;		_USBCtrlEPAllowStatusStage
 28962 ;; This function is called by:
 28963 ;;		_USBCtrlTrfOutHandler
 28964 ;; This function uses a non-reentrant model
 28965 ;;
 28966                           
 28967                           	psect	text128
 28968  00265E                     __ptext128:
 28969                           	opt stack 0
 28970  00265E                     _USBCtrlTrfRxService:
 28971                           	opt stack 15
 28972                           
 28973                           ;usb_device.c: 1520: uint8_t byteToRead;
 28974                           ;usb_device.c: 1521: uint8_t i;
 28975                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28976                           
 28977                           ;incstack = 0
 28978  00265E  EE20 F001          	lfsr	2,1
 28979  002662  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 28980  002664  26D9               	addwf	fsr2l,f,c
 28981  002666  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28982  002668  22DA               	addwfc	fsr2h,f,c
 28983  00266A  50DF               	movf	indf2,w,c
 28984  00266C  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 28985                           
 28986                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 28987  00266E  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28988  002670  0100               	movlb	0	; () banked
 28989  002672  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28990  002674  0E00               	movlw	0
 28991  002676  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28992  002678  A0D8               	btfss	status,0,c
 28993                           
 28994                           ; BSR set to: 0
 28995                           ;usb_device.c: 1532: {
 28996                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 28997  00267A  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28998                           
 28999                           ; BSR set to: 0
 29000                           ;usb_device.c: 1534: }
 29001                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29002                           
 29003                           ; BSR set to: 0
 29004  00267E  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29005  002680  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29006  002682  0E00               	movlw	0
 29007  002684  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29008                           
 29009                           ; BSR set to: 0
 29010                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29011  002686  0E00               	movlw	0
 29012  002688  6E12               	movwf	USBCtrlTrfRxService@i,c
 29013  00268A  D011               	goto	i2l1746
 29014  00268C                     
 29015                           ; BSR set to: 0
 29016                           ;usb_device.c: 1541: {
 29017                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29018                           
 29019                           ; BSR set to: 0
 29020  00268C  5012               	movf	USBCtrlTrfRxService@i,w,c
 29021  00268E  0D01               	mullw	1
 29022  002690  0E38               	movlw	56
 29023  002692  24F3               	addwf	prodl,w,c
 29024  002694  6ED9               	movwf	fsr2l,c
 29025  002696  0E04               	movlw	4
 29026  002698  20F4               	addwfc	prodh,w,c
 29027  00269A  6EDA               	movwf	fsr2h,c
 29028  00269C  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 29029  0026A0  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29030  0026A4  CFDF FFE7          	movff	indf2,indf1
 29031                           
 29032                           ; BSR set to: 0
 29033  0026A8  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 29034  0026AA  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29035                           
 29036                           ; BSR set to: 0
 29037  0026AC  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29038  0026AE                     i2l1746:
 29039                           
 29040                           ; BSR set to: 0
 29041                           
 29042                           ; BSR set to: 0
 29043  0026AE  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29044  0026B0  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29045  0026B2  A0D8               	btfss	status,0,c
 29046  0026B4  D7EB               	goto	i2l1747
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;usb_device.c: 1543: }
 29050                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29051                           
 29052                           ; BSR set to: 0
 29053  0026B6  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29054  0026B8  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29055  0026BA  B4D8               	btfsc	status,2,c
 29056  0026BC  D032               	goto	i2l1749
 29057                           
 29058                           ; BSR set to: 0
 29059                           ;usb_device.c: 1548: {
 29060                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29061  0026BE  EE20 F001          	lfsr	2,1
 29062  0026C2  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29063  0026C4  26D9               	addwf	fsr2l,f,c
 29064  0026C6  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29065  0026C8  22DA               	addwfc	fsr2h,f,c
 29066  0026CA  0E08               	movlw	8
 29067  0026CC  6EDF               	movwf	indf2,c
 29068                           
 29069                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29070  0026CE  EE20 F002          	lfsr	2,2
 29071  0026D2  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29072  0026D4  26D9               	addwf	fsr2l,f,c
 29073  0026D6  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29074  0026D8  22DA               	addwfc	fsr2h,f,c
 29075  0026DA  0E38               	movlw	56
 29076  0026DC  6EDE               	movwf	postinc2,c
 29077  0026DE  0E04               	movlw	4
 29078  0026E0  6EDD               	movwf	postdec2,c
 29079                           
 29080                           ; BSR set to: 0
 29081                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29082  0026E2  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29083  0026E6  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29084  0026EA  BCDF               	btfsc	indf2,6,c
 29085  0026EC  D00D               	goto	i2l1750
 29086                           
 29087                           ; BSR set to: 0
 29088                           ;usb_device.c: 1552: {
 29089                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29090  0026EE  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29091  0026F2  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29092  0026F6  0E48               	movlw	72
 29093  0026F8  6EDF               	movwf	indf2,c
 29094                           
 29095                           ; BSR set to: 0
 29096                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29097  0026FA  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29098  0026FE  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29099  002702  0E00               	movlw	0
 29100  002704  8EDB               	bsf	plusw2,7,c
 29101                           
 29102                           ;usb_device.c: 1555: }
 29103  002706  0012               	return	
 29104  002708                     i2l1750:
 29105                           
 29106                           ; BSR set to: 0
 29107                           ;usb_device.c: 1556: else
 29108                           ;usb_device.c: 1557: {
 29109                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29110                           
 29111                           ; BSR set to: 0
 29112  002708  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29113  00270C  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29114  002710  0E08               	movlw	8
 29115  002712  6EDF               	movwf	indf2,c
 29116                           
 29117                           ; BSR set to: 0
 29118                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29119  002714  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29120  002718  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29121  00271C  0E00               	movlw	0
 29122  00271E  8EDB               	bsf	plusw2,7,c
 29123                           
 29124                           ; BSR set to: 0
 29125                           ;usb_device.c: 1560: }
 29126                           ;usb_device.c: 1561: }
 29127  002720  0012               	return	
 29128  002722                     i2l1749:
 29129                           
 29130                           ; BSR set to: 0
 29131                           ;usb_device.c: 1562: else
 29132                           ;usb_device.c: 1563: {
 29133                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29134                           
 29135                           ; BSR set to: 0
 29136  002722  EE20 F001          	lfsr	2,1
 29137  002726  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29138  002728  26D9               	addwf	fsr2l,f,c
 29139  00272A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29140  00272C  22DA               	addwfc	fsr2h,f,c
 29141  00272E  0E08               	movlw	8
 29142  002730  6EDF               	movwf	indf2,c
 29143                           
 29144                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29145  002732  EE20 F002          	lfsr	2,2
 29146  002736  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29147  002738  26D9               	addwf	fsr2l,f,c
 29148  00273A  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29149  00273C  22DA               	addwfc	fsr2h,f,c
 29150  00273E  0E30               	movlw	48
 29151  002740  6EDE               	movwf	postinc2,c
 29152  002742  0E04               	movlw	4
 29153  002744  6EDD               	movwf	postdec2,c
 29154                           
 29155                           ; BSR set to: 0
 29156                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29157  002746  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29158  00274A  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29159  00274E  0E04               	movlw	4
 29160  002750  6EDF               	movwf	indf2,c
 29161                           
 29162                           ; BSR set to: 0
 29163                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29164  002752  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29165  002756  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29166  00275A  0E00               	movlw	0
 29167  00275C  8EDB               	bsf	plusw2,7,c
 29168                           
 29169                           ; BSR set to: 0
 29170                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29171  00275E  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29172  002760  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29173  002762  B4D8               	btfsc	status,2,c
 29174  002764  D00E               	goto	i2u650_49
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;usb_device.c: 1581: {
 29178                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29179  002766  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29180  00276A  D801               	call	i2u650_48
 29181  00276C  D00A               	goto	i2u650_49
 29182  00276E                     i2u650_48:
 29183  00276E  0005               	push	
 29184  002770  6EFA               	movwf	pclath,c
 29185  002772  50DE               	movf	postinc2,w,c
 29186  002774  6EFD               	movwf	tosl,c
 29187  002776  50DE               	movf	postinc2,w,c
 29188  002778  6EFE               	movwf	tosh,c
 29189  00277A  50F8               	movf	tblptru,w,c
 29190  00277C  6EFF               	movwf	tosu,c
 29191  00277E  50FA               	movf	pclath,w,c
 29192  002780  0012               	return		;indir
 29193  002782                     i2u650_49:
 29194                           
 29195                           ;usb_device.c: 1588: }
 29196                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29197  002782  0100               	movlb	0	; () banked
 29198  002784  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29199                           
 29200                           ; BSR set to: 0
 29201                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29202  002786  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29203  002788  A4D8               	btfss	status,2,c
 29204  00278A  0012               	return	
 29205                           
 29206                           ; BSR set to: 0
 29207                           ;usb_device.c: 1604: {
 29208                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29209  00278C  ECD5  F01C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29210  002790  0012               	return	
 29211  002792                     __end_of_USBCtrlTrfRxService:
 29212                           	opt stack 0
 29213                           tosu	equ	0xFFF
 29214                           tosh	equ	0xFFE
 29215                           tosl	equ	0xFFD
 29216                           pclatu	equ	0xFFB
 29217                           pclath	equ	0xFFA
 29218                           tblptru	equ	0xFF8
 29219                           tblptrh	equ	0xFF7
 29220                           tblptrl	equ	0xFF6
 29221                           tablat	equ	0xFF5
 29222                           prodh	equ	0xFF4
 29223                           prodl	equ	0xFF3
 29224                           intcon	equ	0xFF2
 29225                           intcon3	equ	0xFF0
 29226                           indf0	equ	0xFEF
 29227                           postinc0	equ	0xFEE
 29228                           fsr0h	equ	0xFEA
 29229                           fsr0l	equ	0xFE9
 29230                           wreg	equ	0xFE8
 29231                           indf1	equ	0xFE7
 29232                           postdec1	equ	0xFE5
 29233                           fsr1h	equ	0xFE2
 29234                           fsr1l	equ	0xFE1
 29235                           indf2	equ	0xFDF
 29236                           postinc2	equ	0xFDE
 29237                           postdec2	equ	0xFDD
 29238                           plusw2	equ	0xFDB
 29239                           fsr2h	equ	0xFDA
 29240                           fsr2l	equ	0xFD9
 29241                           status	equ	0xFD8
 29242                           
 29243 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29244 ;; Defined at:
 29245 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29246 ;; Parameters:    Size  Location     Type
 29247 ;;		None
 29248 ;; Auto vars:     Size  Location     Type
 29249 ;;		None
 29250 ;; Return value:  Size  Location     Type
 29251 ;;                  1    wreg      void 
 29252 ;; Registers used:
 29253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29254 ;; Tracked objects:
 29255 ;;		On entry : 0/0
 29256 ;;		On exit  : 0/0
 29257 ;;		Unchanged: 0/0
 29258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29259 ;;      Params:         0       0       0       0       0       0       0       0       0
 29260 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29262 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29263 ;;Total ram usage:        0 bytes
 29264 ;; Hardware stack levels used:    1
 29265 ;; This function calls:
 29266 ;;		Nothing
 29267 ;; This function is called by:
 29268 ;;		_USBDeviceTasks
 29269 ;;		_USBCtrlEPServiceComplete
 29270 ;;		_USBCtrlTrfRxService
 29271 ;; This function uses a non-reentrant model
 29272 ;;
 29273                           
 29274                           	psect	text129
 29275  0039AA                     __ptext129:
 29276                           	opt stack 0
 29277  0039AA                     _USBCtrlEPAllowStatusStage:
 29278                           	opt stack 16
 29279                           
 29280                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29281                           
 29282                           ;incstack = 0
 29283  0039AA  5044               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29284  0039AC  A4D8               	btfss	status,2,c
 29285  0039AE  0012               	return	
 29286                           
 29287                           ;usb_device.c: 1112: {
 29288                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29289  0039B0  0E01               	movlw	1
 29290  0039B2  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29291                           
 29292                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29293  0039B4  5043               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29294  0039B6  A4D8               	btfss	status,2,c
 29295  0039B8  0012               	return	
 29296                           
 29297                           ;usb_device.c: 1115: {
 29298                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29299  0039BA  0E01               	movlw	1
 29300  0039BC  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29301                           
 29302                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29303  0039BE  0E02               	movlw	2
 29304  0039C0  184B               	xorwf	_controlTransferState,w,c	;volatile
 29305  0039C2  A4D8               	btfss	status,2,c
 29306  0039C4  D016               	goto	i2l1700
 29307                           
 29308                           ;usb_device.c: 1121: {
 29309                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29310  0039C6  0100               	movlb	0	; () banked
 29311  0039C8  EE20 F001          	lfsr	2,1
 29312  0039CC  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29313  0039CE  26D9               	addwf	fsr2l,f,c
 29314  0039D0  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29315  0039D2  22DA               	addwfc	fsr2h,f,c
 29316  0039D4  0E00               	movlw	0
 29317  0039D6  6EDF               	movwf	indf2,c
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29321  0039D8  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29322  0039DC  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29323  0039E0  0E48               	movlw	72
 29324  0039E2  6EDF               	movwf	indf2,c
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29328  0039E4  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29329  0039E8  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29330  0039EC  0E00               	movlw	0
 29331  0039EE  8EDB               	bsf	plusw2,7,c
 29332                           
 29333                           ;usb_device.c: 1125: }
 29334  0039F0  0012               	return	
 29335  0039F2                     i2l1700:
 29336                           
 29337                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29338                           
 29339                           ; BSR set to: 0
 29340  0039F2  044B               	decf	_controlTransferState,w,c	;volatile
 29341  0039F4  A4D8               	btfss	status,2,c
 29342  0039F6  0012               	return	
 29343                           
 29344                           ;usb_device.c: 1127: {
 29345                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29346  0039F8  0E00               	movlw	0
 29347  0039FA  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29348                           
 29349                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29350  0039FC  EE20 F001          	lfsr	2,1
 29351  003A00  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 29352  003A02  26D9               	addwf	fsr2l,f,c
 29353  003A04  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29354  003A06  22DA               	addwfc	fsr2h,f,c
 29355  003A08  0E08               	movlw	8
 29356  003A0A  6EDF               	movwf	indf2,c
 29357                           
 29358                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29359  003A0C  EE20 F002          	lfsr	2,2
 29360  003A10  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 29361  003A12  26D9               	addwf	fsr2l,f,c
 29362  003A14  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29363  003A16  22DA               	addwfc	fsr2h,f,c
 29364  003A18  0E30               	movlw	48
 29365  003A1A  6EDE               	movwf	postinc2,c
 29366  003A1C  0E04               	movlw	4
 29367  003A1E  6EDD               	movwf	postdec2,c
 29368                           
 29369                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29370  003A20  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29371  003A24  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29372  003A28  0E04               	movlw	4
 29373  003A2A  6EDF               	movwf	indf2,c
 29374                           
 29375                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29376  003A2C  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29377  003A30  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29378  003A34  0E00               	movlw	0
 29379  003A36  8EDB               	bsf	plusw2,7,c
 29380                           
 29381                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29382  003A38  0E01               	movlw	1
 29383  003A3A  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29384                           
 29385                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29386  003A3C  EE20 F001          	lfsr	2,1
 29387  003A40  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29388  003A42  26D9               	addwf	fsr2l,f,c
 29389  003A44  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29390  003A46  22DA               	addwfc	fsr2h,f,c
 29391  003A48  0E08               	movlw	8
 29392  003A4A  6EDF               	movwf	indf2,c
 29393                           
 29394                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29395  003A4C  EE20 F002          	lfsr	2,2
 29396  003A50  5034               	movf	_pBDTEntryEP0OutNext,w,c
 29397  003A52  26D9               	addwf	fsr2l,f,c
 29398  003A54  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 29399  003A56  22DA               	addwfc	fsr2h,f,c
 29400  003A58  0E30               	movlw	48
 29401  003A5A  6EDE               	movwf	postinc2,c
 29402  003A5C  0E04               	movlw	4
 29403  003A5E  6EDD               	movwf	postdec2,c
 29404                           
 29405                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29406  003A60  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29407  003A64  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29408  003A68  0E80               	movlw	128
 29409  003A6A  6EDF               	movwf	indf2,c
 29410  003A6C  0012               	return	
 29411  003A6E                     __end_of_USBCtrlEPAllowStatusStage:
 29412                           	opt stack 0
 29413                           tosu	equ	0xFFF
 29414                           tosh	equ	0xFFE
 29415                           tosl	equ	0xFFD
 29416                           pclatu	equ	0xFFB
 29417                           pclath	equ	0xFFA
 29418                           tblptru	equ	0xFF8
 29419                           tblptrh	equ	0xFF7
 29420                           tblptrl	equ	0xFF6
 29421                           tablat	equ	0xFF5
 29422                           prodh	equ	0xFF4
 29423                           prodl	equ	0xFF3
 29424                           intcon	equ	0xFF2
 29425                           intcon3	equ	0xFF0
 29426                           indf0	equ	0xFEF
 29427                           postinc0	equ	0xFEE
 29428                           fsr0h	equ	0xFEA
 29429                           fsr0l	equ	0xFE9
 29430                           wreg	equ	0xFE8
 29431                           indf1	equ	0xFE7
 29432                           postdec1	equ	0xFE5
 29433                           fsr1h	equ	0xFE2
 29434                           fsr1l	equ	0xFE1
 29435                           indf2	equ	0xFDF
 29436                           postinc2	equ	0xFDE
 29437                           postdec2	equ	0xFDD
 29438                           plusw2	equ	0xFDB
 29439                           fsr2h	equ	0xFDA
 29440                           fsr2l	equ	0xFD9
 29441                           status	equ	0xFD8
 29442                           
 29443 ;; *************** function _USBCtrlTrfInHandler *****************
 29444 ;; Defined at:
 29445 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29446 ;; Parameters:    Size  Location     Type
 29447 ;;		None
 29448 ;; Auto vars:     Size  Location     Type
 29449 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29450 ;; Return value:  Size  Location     Type
 29451 ;;                  1    wreg      void 
 29452 ;; Registers used:
 29453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 29454 ;; Tracked objects:
 29455 ;;		On entry : 0/0
 29456 ;;		On exit  : 0/0
 29457 ;;		Unchanged: 0/0
 29458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29459 ;;      Params:         0       0       0       0       0       0       0       0       0
 29460 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29461 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29462 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29463 ;;Total ram usage:        1 bytes
 29464 ;; Hardware stack levels used:    1
 29465 ;; Hardware stack levels required when called:    2
 29466 ;; This function calls:
 29467 ;;		_USART_mySetLineCodingHandler
 29468 ;;		_USBCtrlTrfTxService
 29469 ;; This function is called by:
 29470 ;;		_USBCtrlEPService
 29471 ;; This function uses a non-reentrant model
 29472 ;;
 29473                           
 29474                           	psect	text130
 29475  0032F6                     __ptext130:
 29476                           	opt stack 0
 29477  0032F6                     _USBCtrlTrfInHandler:
 29478                           	opt stack 16
 29479                           
 29480                           ;usb_device.c: 2225: uint8_t lastDTS;
 29481                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29482                           
 29483                           ;incstack = 0
 29484  0032F6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29485  0032FA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29486  0032FE  0100               	movlb	0	; () banked
 29487  003300  0E00               	movlw	0
 29488  003302  BCDF               	btfsc	indf2,6,c
 29489  003304  0E01               	movlw	1
 29490  003306  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29494  003308  0E04               	movlw	4
 29495  00330A  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29499  00330C  0E08               	movlw	8
 29500  00330E  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29501  003310  A4D8               	btfss	status,2,c
 29502  003312  D00C               	goto	i2l1829
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;usb_device.c: 2236: {
 29506                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29507  003314  0104               	movlb	4	; () banked
 29508  003316  5132               	movf	50,w,b	;volatile
 29509  003318  0B7F               	andlw	127
 29510  00331A  6E63               	movwf	3939,c	;volatile
 29511                           
 29512                           ; BSR set to: 4
 29513                           ;usb_device.c: 2238: if(UADDR != 0u)
 29514  00331C  5063               	movf	3939,w,c	;volatile
 29515  00331E  B4D8               	btfsc	status,2,c
 29516  003320  D002               	goto	i2l1828
 29517                           
 29518                           ; BSR set to: 4
 29519                           ;usb_device.c: 2239: {
 29520                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29521  003322  0E10               	movlw	16
 29522  003324  D001               	goto	L46
 29523  003326                     i2l1828:
 29524                           
 29525                           ;usb_device.c: 2242: else
 29526                           ;usb_device.c: 2243: {
 29527                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29528                           
 29529                           ; BSR set to: 0
 29530  003326  0E04               	movlw	4
 29531  003328                     L46:
 29532  003328  0100               	movlb	0	; () banked
 29533  00332A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 29534  00332C                     i2l1829:
 29535                           
 29536                           ; BSR set to: 0
 29537                           ;usb_device.c: 2245: }
 29538                           ;usb_device.c: 2246: }
 29539                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29540                           
 29541                           ; BSR set to: 0
 29542                           
 29543                           ; BSR set to: 0
 29544  00332C  044B               	decf	_controlTransferState,w,c	;volatile
 29545  00332E  A4D8               	btfss	status,2,c
 29546  003330  D03A               	goto	i2l1830
 29547                           
 29548                           ; BSR set to: 0
 29549                           ;usb_device.c: 2250: {
 29550                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29551  003332  EE20 F002          	lfsr	2,2
 29552  003336  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29553  003338  26D9               	addwf	fsr2l,f,c
 29554  00333A  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29555  00333C  22DA               	addwfc	fsr2h,f,c
 29556  00333E  0E38               	movlw	56
 29557  003340  6EDE               	movwf	postinc2,c
 29558  003342  0E04               	movlw	4
 29559  003344  6EDD               	movwf	postdec2,c
 29560                           
 29561                           ; BSR set to: 0
 29562                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29563  003346  EC3B  F01B         	call	_USBCtrlTrfTxService	;wreg free
 29564                           
 29565                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29566  00334A  0E02               	movlw	2
 29567  00334C  184C               	xorwf	_shortPacketStatus,w,c	;volatile
 29568  00334E  A4D8               	btfss	status,2,c
 29569  003350  D00D               	goto	i2l1831
 29570                           
 29571                           ;usb_device.c: 2259: {
 29572                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29573  003352  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29574  003356  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29575  00335A  0E04               	movlw	4
 29576  00335C  6EDF               	movwf	indf2,c
 29577                           
 29578                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29579  00335E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29580  003362  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29581  003366  0E00               	movlw	0
 29582  003368  8EDB               	bsf	plusw2,7,c
 29583                           
 29584                           ;usb_device.c: 2264: }
 29585  00336A  0012               	return	
 29586  00336C                     i2l1831:
 29587                           
 29588                           ;usb_device.c: 2265: else
 29589                           ;usb_device.c: 2266: {
 29590                           ;usb_device.c: 2267: if(lastDTS == 0)
 29591  00336C  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29592  00336E  A4D8               	btfss	status,2,c
 29593  003370  D00D               	goto	i2l1833
 29594                           
 29595                           ;usb_device.c: 2268: {
 29596                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29597  003372  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29598  003376  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29599  00337A  0E48               	movlw	72
 29600  00337C  6EDF               	movwf	indf2,c
 29601                           
 29602                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29603  00337E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29604  003382  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29605  003386  0E00               	movlw	0
 29606  003388  8EDB               	bsf	plusw2,7,c
 29607                           
 29608                           ;usb_device.c: 2271: }
 29609  00338A  0012               	return	
 29610  00338C                     i2l1833:
 29611                           
 29612                           ;usb_device.c: 2272: else
 29613                           ;usb_device.c: 2273: {
 29614                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29615  00338C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29616  003390  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29617  003394  0E08               	movlw	8
 29618  003396  6EDF               	movwf	indf2,c
 29619                           
 29620                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29621  003398  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29622  00339C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29623  0033A0  0E00               	movlw	0
 29624  0033A2  8EDB               	bsf	plusw2,7,c
 29625                           
 29626                           ;usb_device.c: 2276: }
 29627                           ;usb_device.c: 2277: }
 29628                           ;usb_device.c: 2278: }
 29629  0033A4  0012               	return	
 29630  0033A6                     i2l1830:
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;usb_device.c: 2279: else
 29634                           ;usb_device.c: 2280: {
 29635                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 29636  0033A6  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29637  0033A8  D014               	goto	i2l1836
 29638                           
 29639                           ; BSR set to: 0
 29640                           ;usb_device.c: 2285: {
 29641                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 29642  0033AA  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29643  0033AC  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29644  0033AE  B4D8               	btfsc	status,2,c
 29645  0033B0  D00E               	goto	i2u832_49
 29646                           
 29647                           ; BSR set to: 0
 29648                           ;usb_device.c: 2287: {
 29649                           ;usb_device.c: 2288: outPipes[0].pFunc();
 29650  0033B2  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29651  0033B6  D801               	call	i2u832_48
 29652  0033B8  D00A               	goto	i2u832_49
 29653  0033BA                     i2u832_48:
 29654  0033BA  0005               	push	
 29655  0033BC  6EFA               	movwf	pclath,c
 29656  0033BE  50DE               	movf	postinc2,w,c
 29657  0033C0  6EFD               	movwf	tosl,c
 29658  0033C2  50DE               	movf	postinc2,w,c
 29659  0033C4  6EFE               	movwf	tosh,c
 29660  0033C6  50F8               	movf	tblptru,w,c
 29661  0033C8  6EFF               	movwf	tosu,c
 29662  0033CA  50FA               	movf	pclath,w,c
 29663  0033CC  0012               	return		;indir
 29664  0033CE                     i2u832_49:
 29665                           
 29666                           ;usb_device.c: 2289: }
 29667                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 29668  0033CE  0100               	movlb	0	; () banked
 29669  0033D0  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29670  0033D2                     i2l1836:
 29671                           
 29672                           ; BSR set to: 0
 29673                           ;usb_device.c: 2291: }
 29674                           ;usb_device.c: 2293: controlTransferState = 0;
 29675                           
 29676                           ; BSR set to: 0
 29677  0033D2  0E00               	movlw	0
 29678  0033D4  6E4B               	movwf	_controlTransferState,c	;volatile
 29679  0033D6  0012               	return	
 29680  0033D8                     __end_of_USBCtrlTrfInHandler:
 29681                           	opt stack 0
 29682                           tosu	equ	0xFFF
 29683                           tosh	equ	0xFFE
 29684                           tosl	equ	0xFFD
 29685                           pclatu	equ	0xFFB
 29686                           pclath	equ	0xFFA
 29687                           tblptru	equ	0xFF8
 29688                           tblptrh	equ	0xFF7
 29689                           tblptrl	equ	0xFF6
 29690                           tablat	equ	0xFF5
 29691                           prodh	equ	0xFF4
 29692                           prodl	equ	0xFF3
 29693                           intcon	equ	0xFF2
 29694                           intcon3	equ	0xFF0
 29695                           indf0	equ	0xFEF
 29696                           postinc0	equ	0xFEE
 29697                           fsr0h	equ	0xFEA
 29698                           fsr0l	equ	0xFE9
 29699                           wreg	equ	0xFE8
 29700                           indf1	equ	0xFE7
 29701                           postdec1	equ	0xFE5
 29702                           fsr1h	equ	0xFE2
 29703                           fsr1l	equ	0xFE1
 29704                           indf2	equ	0xFDF
 29705                           postinc2	equ	0xFDE
 29706                           postdec2	equ	0xFDD
 29707                           plusw2	equ	0xFDB
 29708                           fsr2h	equ	0xFDA
 29709                           fsr2l	equ	0xFD9
 29710                           status	equ	0xFD8
 29711                           
 29712 ;; *************** function _USBCtrlTrfTxService *****************
 29713 ;; Defined at:
 29714 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;		None
 29717 ;; Auto vars:     Size  Location     Type
 29718 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  1    wreg      void 
 29721 ;; Registers used:
 29722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29728 ;;      Params:         0       0       0       0       0       0       0       0       0
 29729 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29731 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29732 ;;Total ram usage:        1 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; This function calls:
 29735 ;;		Nothing
 29736 ;; This function is called by:
 29737 ;;		_USBCtrlEPAllowDataStage
 29738 ;;		_USBCtrlTrfInHandler
 29739 ;; This function uses a non-reentrant model
 29740 ;;
 29741                           
 29742                           	psect	text131
 29743  003676                     __ptext131:
 29744                           	opt stack 0
 29745  003676                     _USBCtrlTrfTxService:
 29746                           	opt stack 15
 29747                           
 29748                           ;usb_device.c: 1439: uint8_t byteToSend;
 29749                           ;usb_device.c: 1443: byteToSend = 8;
 29750                           
 29751                           ;incstack = 0
 29752  003676  0E08               	movlw	8
 29753  003678  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 29754                           
 29755                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 29756  00367A  0100               	movlb	0	; () banked
 29757  00367C  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29758  00367E  E110               	bnz	i2l7652
 29759  003680  0E08               	movlw	8
 29760  003682  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29761  003684  B0D8               	btfsc	status,0,c
 29762  003686  D00C               	goto	i2l1733
 29763                           
 29764                           ; BSR set to: 0
 29765                           ;usb_device.c: 1445: {
 29766                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 29767  003688  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29768                           
 29769                           ; BSR set to: 0
 29770                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 29771  00368C  504C               	movf	_shortPacketStatus,w,c	;volatile
 29772  00368E  A4D8               	btfss	status,2,c
 29773  003690  D002               	goto	i2l1731
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;usb_device.c: 1454: {
 29777                           ;usb_device.c: 1455: shortPacketStatus = 1;
 29778  003692  0E01               	movlw	1
 29779  003694  D004               	goto	L47
 29780  003696                     i2l1731:
 29781                           
 29782                           ; BSR set to: 0
 29783                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 29784                           
 29785                           ; BSR set to: 0
 29786  003696  044C               	decf	_shortPacketStatus,w,c	;volatile
 29787  003698  A4D8               	btfss	status,2,c
 29788  00369A  D002               	goto	i2l1733
 29789                           
 29790                           ; BSR set to: 0
 29791                           ;usb_device.c: 1458: {
 29792                           ;usb_device.c: 1459: shortPacketStatus = 2;
 29793  00369C  0E02               	movlw	2
 29794  00369E                     L47:
 29795  00369E  6E4C               	movwf	_shortPacketStatus,c	;volatile
 29796  0036A0                     i2l1733:
 29797  0036A0                     i2l7652:
 29798                           
 29799                           ; BSR set to: 0
 29800                           ;usb_device.c: 1460: }
 29801                           ;usb_device.c: 1461: }
 29802                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 29803  0036A0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29804  0036A2  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29805  0036A4  0E00               	movlw	0
 29806  0036A6  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29807                           
 29808                           ; BSR set to: 0
 29809                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 29810  0036A8  EE20 F001          	lfsr	2,1
 29811  0036AC  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29812  0036AE  26D9               	addwf	fsr2l,f,c
 29813  0036B0  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29814  0036B2  22DA               	addwfc	fsr2h,f,c
 29815  0036B4  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29816                           
 29817                           ; BSR set to: 0
 29818                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 29819  0036B8  0E38               	movlw	56
 29820  0036BA  0101               	movlb	1	; () banked
 29821  0036BC  6F54               	movwf	_pDst& (0+255),b
 29822  0036BE  0E04               	movlw	4
 29823  0036C0  6F55               	movwf	(_pDst+1)& (0+255),b
 29824                           
 29825                           ; BSR set to: 1
 29826                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29827  0036C2  0100               	movlb	0	; () banked
 29828  0036C4  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29829  0036C6  D01D               	goto	i2l1735
 29830  0036C8  D03C               	goto	i2l1739
 29831  0036CA                     
 29832                           ;usb_device.c: 1478: {
 29833                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 29834                           
 29835                           ; BSR set to: 0
 29836  0036CA  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 29837  0036CE  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29838  0036D2  6AF8               	clrf	tblptru,c
 29839  0036D4  C154  FFD9         	movff	_pDst,fsr2l
 29840  0036D8  C155  FFDA         	movff	_pDst+1,fsr2h
 29841  0036DC  0E07               	movlw	(high __ramtop+-1)
 29842  0036DE  64F7               	cpfsgt	tblptrh,c
 29843  0036E0  D003               	bra	i2u562_47
 29844  0036E2  0008               	tblrd		*
 29845  0036E4  50F5               	movf	tablat,w,c
 29846  0036E6  D005               	bra	i2u562_40
 29847  0036E8                     i2u562_47:
 29848  0036E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29849  0036EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29850  0036F0  50EF               	movf	indf0,w,c
 29851  0036F2                     i2u562_40:
 29852  0036F2  6EDF               	movwf	indf2,c
 29853  0036F4  0100               	movlb	0	; () banked
 29854  0036F6  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 29855  0036F8  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29856                           
 29857                           ; BSR set to: 0
 29858  0036FA  0101               	movlb	1	; () banked
 29859  0036FC  4B54               	infsnz	_pDst& (0+255),f,b
 29860  0036FE  2B55               	incf	(_pDst+1)& (0+255),f,b
 29861                           
 29862                           ; BSR set to: 1
 29863                           ;usb_device.c: 1480: byteToSend--;
 29864  003700  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29865  003702                     i2l1735:
 29866                           
 29867                           ; BSR set to: 1
 29868  003702  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29869  003704  B4D8               	btfsc	status,2,c
 29870  003706  0012               	return	
 29871  003708  D7E0               	goto	i2l1736
 29872  00370A                     
 29873                           ;usb_device.c: 1486: {
 29874                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 29875  00370A  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 29876  00370E  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29877  003712  6AF8               	clrf	tblptru,c
 29878  003714  C154  FFD9         	movff	_pDst,fsr2l
 29879  003718  C155  FFDA         	movff	_pDst+1,fsr2h
 29880  00371C  0E07               	movlw	(high __ramtop+-1)
 29881  00371E  64F7               	cpfsgt	tblptrh,c
 29882  003720  D003               	bra	i2u564_47
 29883  003722  0008               	tblrd		*
 29884  003724  50F5               	movf	tablat,w,c
 29885  003726  D005               	bra	i2u564_40
 29886  003728                     i2u564_47:
 29887  003728  CFF6 FFE9          	movff	tblptrl,fsr0l
 29888  00372C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29889  003730  50EF               	movf	indf0,w,c
 29890  003732                     i2u564_40:
 29891  003732  6EDF               	movwf	indf2,c
 29892  003734  0100               	movlb	0	; () banked
 29893  003736  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 29894  003738  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29895                           
 29896                           ; BSR set to: 0
 29897  00373A  0101               	movlb	1	; () banked
 29898  00373C  4B54               	infsnz	_pDst& (0+255),f,b
 29899  00373E  2B55               	incf	(_pDst+1)& (0+255),f,b
 29900                           
 29901                           ; BSR set to: 1
 29902                           ;usb_device.c: 1488: byteToSend--;
 29903  003740  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29904  003742                     i2l1739:
 29905                           
 29906                           ; BSR set to: 1
 29907  003742  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29908  003744  B4D8               	btfsc	status,2,c
 29909  003746  0012               	return	
 29910  003748  D7E0               	goto	i2l1740
 29911  00374A                     __end_of_USBCtrlTrfTxService:
 29912                           	opt stack 0
 29913                           tosu	equ	0xFFF
 29914                           tosh	equ	0xFFE
 29915                           tosl	equ	0xFFD
 29916                           pclatu	equ	0xFFB
 29917                           pclath	equ	0xFFA
 29918                           tblptru	equ	0xFF8
 29919                           tblptrh	equ	0xFF7
 29920                           tblptrl	equ	0xFF6
 29921                           tablat	equ	0xFF5
 29922                           prodh	equ	0xFF4
 29923                           prodl	equ	0xFF3
 29924                           intcon	equ	0xFF2
 29925                           intcon3	equ	0xFF0
 29926                           indf0	equ	0xFEF
 29927                           postinc0	equ	0xFEE
 29928                           fsr0h	equ	0xFEA
 29929                           fsr0l	equ	0xFE9
 29930                           wreg	equ	0xFE8
 29931                           indf1	equ	0xFE7
 29932                           postdec1	equ	0xFE5
 29933                           fsr1h	equ	0xFE2
 29934                           fsr1l	equ	0xFE1
 29935                           indf2	equ	0xFDF
 29936                           postinc2	equ	0xFDE
 29937                           postdec2	equ	0xFDD
 29938                           plusw2	equ	0xFDB
 29939                           fsr2h	equ	0xFDA
 29940                           fsr2l	equ	0xFD9
 29941                           status	equ	0xFD8
 29942                           
 29943 ;; *************** function _USART_mySetLineCodingHandler *****************
 29944 ;; Defined at:
 29945 ;;		line 273 in file "../Includes/Board/USBapp.c"
 29946 ;; Parameters:    Size  Location     Type
 29947 ;;		None
 29948 ;; Auto vars:     Size  Location     Type
 29949 ;;  dwBaud          4   13[COMRAM] unsigned long 
 29950 ;; Return value:  Size  Location     Type
 29951 ;;                  1    wreg      void 
 29952 ;; Registers used:
 29953 ;;		wreg, status,2, status,0, cstack
 29954 ;; Tracked objects:
 29955 ;;		On entry : 0/0
 29956 ;;		On exit  : 0/0
 29957 ;;		Unchanged: 0/0
 29958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29959 ;;      Params:         0       0       0       0       0       0       0       0       0
 29960 ;;      Locals:         4       0       0       0       0       0       0       0       0
 29961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29962 ;;      Totals:         4       0       0       0       0       0       0       0       0
 29963 ;;Total ram usage:        4 bytes
 29964 ;; Hardware stack levels used:    1
 29965 ;; Hardware stack levels required when called:    1
 29966 ;; This function calls:
 29967 ;;		___lldiv
 29968 ;;		i2_EUSART_Initialize
 29969 ;; This function is called by:
 29970 ;;		_USBCheckCDCRequest
 29971 ;;		_USBCtrlTrfRxService
 29972 ;;		_USBCtrlTrfInHandler
 29973 ;; This function uses a non-reentrant model
 29974 ;;
 29975                           
 29976                           	psect	text132
 29977  004DB6                     __ptext132:
 29978                           	opt stack 0
 29979  004DB6                     _USART_mySetLineCodingHandler:
 29980                           	opt stack 15
 29981                           
 29982                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 29983                           
 29984                           ;incstack = 0
 29985  004DB6  C1CA  F1DC         	movff	_cdc_notice,_line_coding
 29986  004DBA  C1CB  F1DD         	movff	_cdc_notice+1,_line_coding+1
 29987  004DBE  C1CC  F1DE         	movff	_cdc_notice+2,_line_coding+2
 29988  004DC2  C1CD  F1DF         	movff	_cdc_notice+3,_line_coding+3
 29989                           
 29990                           ;USBapp.c: 278: uint32_t dwBaud;
 29991                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 29992  004DC6  0E00               	movlw	0
 29993  004DC8  6E01               	movwf	___lldiv@dividend,c
 29994  004DCA  0E1B               	movlw	27
 29995  004DCC  6E02               	movwf	___lldiv@dividend+1,c
 29996  004DCE  0EB7               	movlw	183
 29997  004DD0  6E03               	movwf	___lldiv@dividend+2,c
 29998  004DD2  0E00               	movlw	0
 29999  004DD4  6E04               	movwf	___lldiv@dividend+3,c
 30000  004DD6  C1DC  F005         	movff	_line_coding,___lldiv@divisor
 30001  004DDA  C1DD  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30002  004DDE  C1DE  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30003  004DE2  C1DF  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30004  004DE6  EC76  F023         	call	___lldiv	;wreg free
 30005  004DEA  0EFF               	movlw	255
 30006  004DEC  2401               	addwf	?___lldiv,w,c
 30007  004DEE  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30008  004DF0  0EFF               	movlw	255
 30009  004DF2  2002               	addwfc	?___lldiv+1,w,c
 30010  004DF4  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30011  004DF6  0EFF               	movlw	255
 30012  004DF8  2003               	addwfc	?___lldiv+2,w,c
 30013  004DFA  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30014  004DFC  0EFF               	movlw	255
 30015  004DFE  2004               	addwfc	?___lldiv+3,w,c
 30016  004E00  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30017                           
 30018                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30019  004E02  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30020                           
 30021                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30022  004E06  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30023                           
 30024                           ;USBapp.c: 283: EUSART_Initialize();
 30025  004E0A  EC01  F029         	call	i2_EUSART_Initialize	;wreg free
 30026  004E0E  0012               	return		;funcret
 30027  004E10                     __end_of_USART_mySetLineCodingHandler:
 30028                           	opt stack 0
 30029                           tosu	equ	0xFFF
 30030                           tosh	equ	0xFFE
 30031                           tosl	equ	0xFFD
 30032                           pclatu	equ	0xFFB
 30033                           pclath	equ	0xFFA
 30034                           tblptru	equ	0xFF8
 30035                           tblptrh	equ	0xFF7
 30036                           tblptrl	equ	0xFF6
 30037                           tablat	equ	0xFF5
 30038                           prodh	equ	0xFF4
 30039                           prodl	equ	0xFF3
 30040                           intcon	equ	0xFF2
 30041                           intcon3	equ	0xFF0
 30042                           indf0	equ	0xFEF
 30043                           postinc0	equ	0xFEE
 30044                           fsr0h	equ	0xFEA
 30045                           fsr0l	equ	0xFE9
 30046                           wreg	equ	0xFE8
 30047                           indf1	equ	0xFE7
 30048                           postdec1	equ	0xFE5
 30049                           fsr1h	equ	0xFE2
 30050                           fsr1l	equ	0xFE1
 30051                           indf2	equ	0xFDF
 30052                           postinc2	equ	0xFDE
 30053                           postdec2	equ	0xFDD
 30054                           plusw2	equ	0xFDB
 30055                           fsr2h	equ	0xFDA
 30056                           fsr2l	equ	0xFD9
 30057                           status	equ	0xFD8
 30058                           
 30059 ;; *************** function i2_EUSART_Initialize *****************
 30060 ;; Defined at:
 30061 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30062 ;; Parameters:    Size  Location     Type
 30063 ;;		None
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;		None
 30066 ;; Return value:  Size  Location     Type
 30067 ;;                  1    wreg      void 
 30068 ;; Registers used:
 30069 ;;		wreg, status,2
 30070 ;; Tracked objects:
 30071 ;;		On entry : 0/0
 30072 ;;		On exit  : 0/0
 30073 ;;		Unchanged: 0/0
 30074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30075 ;;      Params:         0       0       0       0       0       0       0       0       0
 30076 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30078 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30079 ;;Total ram usage:        0 bytes
 30080 ;; Hardware stack levels used:    1
 30081 ;; This function calls:
 30082 ;;		Nothing
 30083 ;; This function is called by:
 30084 ;;		_USBapp_CdcEmulatorInitialize
 30085 ;;		_USART_mySetLineCodingHandler
 30086 ;; This function uses a non-reentrant model
 30087 ;;
 30088                           
 30089                           	psect	text133
 30090  005202                     __ptext133:
 30091                           	opt stack 0
 30092  005202                     i2_EUSART_Initialize:
 30093                           	opt stack 17
 30094                           
 30095                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30096                           
 30097                           ;incstack = 0
 30098  005202  9A9D               	bcf	3997,5,c	;volatile
 30099                           
 30100                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30101  005204  989D               	bcf	3997,4,c	;volatile
 30102                           
 30103                           ;eusart.c: 85: BAUDCON = 0x48;
 30104  005206  0E48               	movlw	72
 30105  005208  6EB8               	movwf	4024,c	;volatile
 30106                           
 30107                           ;eusart.c: 88: RCSTA = 0x90;
 30108  00520A  0E90               	movlw	144
 30109  00520C  6EAB               	movwf	4011,c	;volatile
 30110                           
 30111                           ;eusart.c: 91: TXSTA = 0x26;
 30112  00520E  0E26               	movlw	38
 30113  005210  6EAC               	movwf	4012,c	;volatile
 30114                           
 30115                           ;eusart.c: 95: SPBRG = 0xD0;
 30116  005212  0ED0               	movlw	208
 30117  005214  6EAF               	movwf	4015,c	;volatile
 30118                           
 30119                           ;eusart.c: 100: SPBRGH = 0x00;
 30120  005216  0E00               	movlw	0
 30121  005218  6EB0               	movwf	4016,c	;volatile
 30122                           
 30123                           ;eusart.c: 103: eusartTxHead = 0;
 30124  00521A  0E00               	movlw	0
 30125  00521C  0100               	movlb	0	; () banked
 30126  00521E  6FE3               	movwf	_eusartTxHead& (0+255),b
 30127                           
 30128                           ;eusart.c: 104: eusartTxTail = 0;
 30129  005220  0E00               	movlw	0
 30130  005222  6FE2               	movwf	_eusartTxTail& (0+255),b
 30131                           
 30132                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30133  005224  0E40               	movlw	64
 30134  005226  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 30135                           
 30136                           ;eusart.c: 107: eusartRxHead = 0;
 30137  005228  0E00               	movlw	0
 30138  00522A  6FE0               	movwf	_eusartRxHead& (0+255),b
 30139                           
 30140                           ;eusart.c: 108: eusartRxTail = 0;
 30141  00522C  0E00               	movlw	0
 30142  00522E  6FDF               	movwf	_eusartRxTail& (0+255),b
 30143                           
 30144                           ;eusart.c: 109: eusartRxCount = 0;
 30145  005230  0E00               	movlw	0
 30146  005232  6FF4               	movwf	_eusartRxCount& (0+255),b	;volatile
 30147                           
 30148                           ; BSR set to: 0
 30149                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30150  005234  8A9D               	bsf	3997,5,c	;volatile
 30151                           
 30152                           ; BSR set to: 0
 30153                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30154  005236  88AB               	bsf	4011,4,c	;volatile
 30155                           
 30156                           ; BSR set to: 0
 30157  005238  0012               	return		;funcret
 30158  00523A                     __end_ofi2_EUSART_Initialize:
 30159                           	opt stack 0
 30160                           tosu	equ	0xFFF
 30161                           tosh	equ	0xFFE
 30162                           tosl	equ	0xFFD
 30163                           pclatu	equ	0xFFB
 30164                           pclath	equ	0xFFA
 30165                           tblptru	equ	0xFF8
 30166                           tblptrh	equ	0xFF7
 30167                           tblptrl	equ	0xFF6
 30168                           tablat	equ	0xFF5
 30169                           prodh	equ	0xFF4
 30170                           prodl	equ	0xFF3
 30171                           intcon	equ	0xFF2
 30172                           intcon3	equ	0xFF0
 30173                           indf0	equ	0xFEF
 30174                           postinc0	equ	0xFEE
 30175                           fsr0h	equ	0xFEA
 30176                           fsr0l	equ	0xFE9
 30177                           wreg	equ	0xFE8
 30178                           indf1	equ	0xFE7
 30179                           postdec1	equ	0xFE5
 30180                           fsr1h	equ	0xFE2
 30181                           fsr1l	equ	0xFE1
 30182                           indf2	equ	0xFDF
 30183                           postinc2	equ	0xFDE
 30184                           postdec2	equ	0xFDD
 30185                           plusw2	equ	0xFDB
 30186                           fsr2h	equ	0xFDA
 30187                           fsr2l	equ	0xFD9
 30188                           status	equ	0xFD8
 30189                           
 30190 ;; *************** function ___lldiv *****************
 30191 ;; Defined at:
 30192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30193 ;; Parameters:    Size  Location     Type
 30194 ;;  dividend        4    0[COMRAM] unsigned long 
 30195 ;;  divisor         4    4[COMRAM] unsigned long 
 30196 ;; Auto vars:     Size  Location     Type
 30197 ;;  quotient        4    8[COMRAM] unsigned long 
 30198 ;;  counter         1   12[COMRAM] unsigned char 
 30199 ;; Return value:  Size  Location     Type
 30200 ;;                  4    0[COMRAM] unsigned long 
 30201 ;; Registers used:
 30202 ;;		wreg, status,2, status,0
 30203 ;; Tracked objects:
 30204 ;;		On entry : 0/0
 30205 ;;		On exit  : 0/0
 30206 ;;		Unchanged: 0/0
 30207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30208 ;;      Params:         8       0       0       0       0       0       0       0       0
 30209 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30211 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30212 ;;Total ram usage:       13 bytes
 30213 ;; Hardware stack levels used:    1
 30214 ;; This function calls:
 30215 ;;		Nothing
 30216 ;; This function is called by:
 30217 ;;		_USART_mySetLineCodingHandler
 30218 ;; This function uses a non-reentrant model
 30219 ;;
 30220                           
 30221                           	psect	text134
 30222  0046EC                     __ptext134:
 30223                           	opt stack 0
 30224  0046EC                     ___lldiv:
 30225                           	opt stack 15
 30226                           
 30227                           ; BSR set to: 0
 30228                           ;incstack = 0
 30229  0046EC  0E00               	movlw	0
 30230  0046EE  6E09               	movwf	___lldiv@quotient,c
 30231  0046F0  0E00               	movlw	0
 30232  0046F2  6E0A               	movwf	___lldiv@quotient+1,c
 30233  0046F4  0E00               	movlw	0
 30234  0046F6  6E0B               	movwf	___lldiv@quotient+2,c
 30235  0046F8  0E00               	movlw	0
 30236  0046FA  6E0C               	movwf	___lldiv@quotient+3,c
 30237  0046FC  5005               	movf	___lldiv@divisor,w,c
 30238  0046FE  1006               	iorwf	___lldiv@divisor+1,w,c
 30239  004700  1007               	iorwf	___lldiv@divisor+2,w,c
 30240  004702  1008               	iorwf	___lldiv@divisor+3,w,c
 30241  004704  B4D8               	btfsc	status,2,c
 30242  004706  D02A               	goto	i2l2455
 30243  004708  0E01               	movlw	1
 30244  00470A  6E0D               	movwf	___lldiv@counter,c
 30245  00470C  D006               	goto	i2l2450
 30246  00470E  90D8               	bcf	status,0,c
 30247  004710  3605               	rlcf	___lldiv@divisor,f,c
 30248  004712  3606               	rlcf	___lldiv@divisor+1,f,c
 30249  004714  3607               	rlcf	___lldiv@divisor+2,f,c
 30250  004716  3608               	rlcf	___lldiv@divisor+3,f,c
 30251  004718  2A0D               	incf	___lldiv@counter,f,c
 30252  00471A                     i2l2450:
 30253  00471A  AE08               	btfss	___lldiv@divisor+3,7,c
 30254  00471C  D7F8               	goto	i2l2451
 30255  00471E                     i2u567_40:
 30256  00471E  90D8               	bcf	status,0,c
 30257  004720  3609               	rlcf	___lldiv@quotient,f,c
 30258  004722  360A               	rlcf	___lldiv@quotient+1,f,c
 30259  004724  360B               	rlcf	___lldiv@quotient+2,f,c
 30260  004726  360C               	rlcf	___lldiv@quotient+3,f,c
 30261  004728  5005               	movf	___lldiv@divisor,w,c
 30262  00472A  5C01               	subwf	___lldiv@dividend,w,c
 30263  00472C  5006               	movf	___lldiv@divisor+1,w,c
 30264  00472E  5802               	subwfb	___lldiv@dividend+1,w,c
 30265  004730  5007               	movf	___lldiv@divisor+2,w,c
 30266  004732  5803               	subwfb	___lldiv@dividend+2,w,c
 30267  004734  5008               	movf	___lldiv@divisor+3,w,c
 30268  004736  5804               	subwfb	___lldiv@dividend+3,w,c
 30269  004738  A0D8               	btfss	status,0,c
 30270  00473A  D009               	goto	i2l2454
 30271  00473C  5005               	movf	___lldiv@divisor,w,c
 30272  00473E  5E01               	subwf	___lldiv@dividend,f,c
 30273  004740  5006               	movf	___lldiv@divisor+1,w,c
 30274  004742  5A02               	subwfb	___lldiv@dividend+1,f,c
 30275  004744  5007               	movf	___lldiv@divisor+2,w,c
 30276  004746  5A03               	subwfb	___lldiv@dividend+2,f,c
 30277  004748  5008               	movf	___lldiv@divisor+3,w,c
 30278  00474A  5A04               	subwfb	___lldiv@dividend+3,f,c
 30279  00474C  8009               	bsf	___lldiv@quotient,0,c
 30280  00474E                     i2l2454:
 30281  00474E  90D8               	bcf	status,0,c
 30282  004750  3208               	rrcf	___lldiv@divisor+3,f,c
 30283  004752  3207               	rrcf	___lldiv@divisor+2,f,c
 30284  004754  3206               	rrcf	___lldiv@divisor+1,f,c
 30285  004756  3205               	rrcf	___lldiv@divisor,f,c
 30286  004758  2E0D               	decfsz	___lldiv@counter,f,c
 30287  00475A  D7E1               	goto	i2u567_40
 30288  00475C                     i2l2455:
 30289  00475C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30290  004760  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30291  004764  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30292  004768  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30293  00476C  0012               	return		;funcret
 30294  00476E                     __end_of___lldiv:
 30295                           	opt stack 0
 30296                           tosu	equ	0xFFF
 30297                           tosh	equ	0xFFE
 30298                           tosl	equ	0xFFD
 30299                           pclatu	equ	0xFFB
 30300                           pclath	equ	0xFFA
 30301                           tblptru	equ	0xFF8
 30302                           tblptrh	equ	0xFF7
 30303                           tblptrl	equ	0xFF6
 30304                           tablat	equ	0xFF5
 30305                           prodh	equ	0xFF4
 30306                           prodl	equ	0xFF3
 30307                           intcon	equ	0xFF2
 30308                           intcon3	equ	0xFF0
 30309                           indf0	equ	0xFEF
 30310                           postinc0	equ	0xFEE
 30311                           fsr0h	equ	0xFEA
 30312                           fsr0l	equ	0xFE9
 30313                           wreg	equ	0xFE8
 30314                           indf1	equ	0xFE7
 30315                           postdec1	equ	0xFE5
 30316                           fsr1h	equ	0xFE2
 30317                           fsr1l	equ	0xFE1
 30318                           indf2	equ	0xFDF
 30319                           postinc2	equ	0xFDE
 30320                           postdec2	equ	0xFDD
 30321                           plusw2	equ	0xFDB
 30322                           fsr2h	equ	0xFDA
 30323                           fsr2l	equ	0xFD9
 30324                           status	equ	0xFD8
 30325                           
 30326 ;; *************** function _TMRapp_Tick *****************
 30327 ;; Defined at:
 30328 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30329 ;; Parameters:    Size  Location     Type
 30330 ;;		None
 30331 ;; Auto vars:     Size  Location     Type
 30332 ;;		None
 30333 ;; Return value:  Size  Location     Type
 30334 ;;                  1    wreg      void 
 30335 ;; Registers used:
 30336 ;;		None
 30337 ;; Tracked objects:
 30338 ;;		On entry : 0/0
 30339 ;;		On exit  : 0/0
 30340 ;;		Unchanged: 0/0
 30341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30342 ;;      Params:         0       0       0       0       0       0       0       0       0
 30343 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30344 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30345 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30346 ;;Total ram usage:        0 bytes
 30347 ;; Hardware stack levels used:    1
 30348 ;; This function calls:
 30349 ;;		Nothing
 30350 ;; This function is called by:
 30351 ;;		_INTERRUPT_InterruptManager
 30352 ;; This function uses a non-reentrant model
 30353 ;;
 30354                           
 30355                           	psect	text135
 30356  0057B2                     __ptext135:
 30357                           	opt stack 0
 30358  0057B2                     _TMRapp_Tick:
 30359                           	opt stack 20
 30360                           
 30361                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30362                           
 30363                           ;incstack = 0
 30364  0057B2  0100               	movlb	0	; () banked
 30365  0057B4  81F7               	bsf	_appTimer& (0+255),0,b
 30366                           
 30367                           ; BSR set to: 0
 30368  0057B6  0012               	return		;funcret
 30369  0057B8                     __end_of_TMRapp_Tick:
 30370                           	opt stack 0
 30371                           tosu	equ	0xFFF
 30372                           tosh	equ	0xFFE
 30373                           tosl	equ	0xFFD
 30374                           pclatu	equ	0xFFB
 30375                           pclath	equ	0xFFA
 30376                           tblptru	equ	0xFF8
 30377                           tblptrh	equ	0xFF7
 30378                           tblptrl	equ	0xFF6
 30379                           tablat	equ	0xFF5
 30380                           prodh	equ	0xFF4
 30381                           prodl	equ	0xFF3
 30382                           intcon	equ	0xFF2
 30383                           intcon3	equ	0xFF0
 30384                           indf0	equ	0xFEF
 30385                           postinc0	equ	0xFEE
 30386                           fsr0h	equ	0xFEA
 30387                           fsr0l	equ	0xFE9
 30388                           wreg	equ	0xFE8
 30389                           indf1	equ	0xFE7
 30390                           postdec1	equ	0xFE5
 30391                           fsr1h	equ	0xFE2
 30392                           fsr1l	equ	0xFE1
 30393                           indf2	equ	0xFDF
 30394                           postinc2	equ	0xFDE
 30395                           postdec2	equ	0xFDD
 30396                           plusw2	equ	0xFDB
 30397                           fsr2h	equ	0xFDA
 30398                           fsr2l	equ	0xFD9
 30399                           status	equ	0xFD8
 30400                           
 30401 ;; *************** function _TMR3_ISR *****************
 30402 ;; Defined at:
 30403 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30404 ;; Parameters:    Size  Location     Type
 30405 ;;		None
 30406 ;; Auto vars:     Size  Location     Type
 30407 ;;		None
 30408 ;; Return value:  Size  Location     Type
 30409 ;;                  1    wreg      void 
 30410 ;; Registers used:
 30411 ;;		wreg, status,2
 30412 ;; Tracked objects:
 30413 ;;		On entry : 0/0
 30414 ;;		On exit  : 0/0
 30415 ;;		Unchanged: 0/0
 30416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30417 ;;      Params:         0       0       0       0       0       0       0       0       0
 30418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30420 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30421 ;;Total ram usage:        0 bytes
 30422 ;; Hardware stack levels used:    1
 30423 ;; This function calls:
 30424 ;;		Nothing
 30425 ;; This function is called by:
 30426 ;;		_INTERRUPT_InterruptManager
 30427 ;; This function uses a non-reentrant model
 30428 ;;
 30429                           
 30430                           	psect	text136
 30431  0055C4                     __ptext136:
 30432                           	opt stack 0
 30433  0055C4                     _TMR3_ISR:
 30434                           	opt stack 20
 30435                           
 30436                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30437                           
 30438                           ; BSR set to: 0
 30439                           ;incstack = 0
 30440  0055C4  92A1               	bcf	4001,1,c	;volatile
 30441                           
 30442                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30443  0055C6  A48D               	btfss	3981,2,c	;volatile
 30444  0055C8  D006               	goto	i2l1497
 30445                           
 30446                           ;tmr3.c: 168: {
 30447                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30448  0055CA  948D               	bcf	3981,2,c	;volatile
 30449                           
 30450                           ;tmr3.c: 170: TMR3H = 0xD5;
 30451  0055CC  0ED5               	movlw	213
 30452  0055CE  6EB3               	movwf	4019,c	;volatile
 30453                           
 30454                           ;tmr3.c: 171: TMR3L = 0xD0;
 30455  0055D0  0ED0               	movlw	208
 30456  0055D2  6EB2               	movwf	4018,c	;volatile
 30457                           
 30458                           ;tmr3.c: 172: } else {
 30459  0055D4  0012               	return	
 30460  0055D6                     i2l1497:
 30461                           
 30462                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30463  0055D6  848D               	bsf	3981,2,c	;volatile
 30464                           
 30465                           ;tmr3.c: 174: TMR3H = 0xFB;
 30466  0055D8  0EFB               	movlw	251
 30467  0055DA  6EB3               	movwf	4019,c	;volatile
 30468                           
 30469                           ;tmr3.c: 175: TMR3L = 0x50;
 30470  0055DC  0E50               	movlw	80
 30471  0055DE  6EB2               	movwf	4018,c	;volatile
 30472  0055E0  0012               	return	
 30473  0055E2                     __end_of_TMR3_ISR:
 30474                           	opt stack 0
 30475                           tosu	equ	0xFFF
 30476                           tosh	equ	0xFFE
 30477                           tosl	equ	0xFFD
 30478                           pclatu	equ	0xFFB
 30479                           pclath	equ	0xFFA
 30480                           tblptru	equ	0xFF8
 30481                           tblptrh	equ	0xFF7
 30482                           tblptrl	equ	0xFF6
 30483                           tablat	equ	0xFF5
 30484                           prodh	equ	0xFF4
 30485                           prodl	equ	0xFF3
 30486                           intcon	equ	0xFF2
 30487                           intcon3	equ	0xFF0
 30488                           indf0	equ	0xFEF
 30489                           postinc0	equ	0xFEE
 30490                           fsr0h	equ	0xFEA
 30491                           fsr0l	equ	0xFE9
 30492                           wreg	equ	0xFE8
 30493                           indf1	equ	0xFE7
 30494                           postdec1	equ	0xFE5
 30495                           fsr1h	equ	0xFE2
 30496                           fsr1l	equ	0xFE1
 30497                           indf2	equ	0xFDF
 30498                           postinc2	equ	0xFDE
 30499                           postdec2	equ	0xFDD
 30500                           plusw2	equ	0xFDB
 30501                           fsr2h	equ	0xFDA
 30502                           fsr2l	equ	0xFD9
 30503                           status	equ	0xFD8
 30504                           
 30505 ;; *************** function _TMR1_ISR *****************
 30506 ;; Defined at:
 30507 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30508 ;; Parameters:    Size  Location     Type
 30509 ;;		None
 30510 ;; Auto vars:     Size  Location     Type
 30511 ;;		None
 30512 ;; Return value:  Size  Location     Type
 30513 ;;                  1    wreg      void 
 30514 ;; Registers used:
 30515 ;;		wreg, status,2
 30516 ;; Tracked objects:
 30517 ;;		On entry : 0/0
 30518 ;;		On exit  : 0/0
 30519 ;;		Unchanged: 0/0
 30520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30521 ;;      Params:         0       0       0       0       0       0       0       0       0
 30522 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30524 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30525 ;;Total ram usage:        0 bytes
 30526 ;; Hardware stack levels used:    1
 30527 ;; This function calls:
 30528 ;;		Nothing
 30529 ;; This function is called by:
 30530 ;;		_INTERRUPT_InterruptManager
 30531 ;; This function uses a non-reentrant model
 30532 ;;
 30533                           
 30534                           	psect	text137
 30535  005746                     __ptext137:
 30536                           	opt stack 0
 30537  005746                     _TMR1_ISR:
 30538                           	opt stack 20
 30539                           
 30540                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30541                           
 30542                           ;incstack = 0
 30543  005746  909E               	bcf	3998,0,c	;volatile
 30544                           
 30545                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30546  005748  503B               	movf	_timer1ReloadVal+1,w,c	;volatile
 30547  00574A  6ECF               	movwf	4047,c	;volatile
 30548                           
 30549                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30550  00574C  C03A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30551  005750  0012               	return		;funcret
 30552  005752                     __end_of_TMR1_ISR:
 30553                           	opt stack 0
 30554                           tosu	equ	0xFFF
 30555                           tosh	equ	0xFFE
 30556                           tosl	equ	0xFFD
 30557                           pclatu	equ	0xFFB
 30558                           pclath	equ	0xFFA
 30559                           tblptru	equ	0xFF8
 30560                           tblptrh	equ	0xFF7
 30561                           tblptrl	equ	0xFF6
 30562                           tablat	equ	0xFF5
 30563                           prodh	equ	0xFF4
 30564                           prodl	equ	0xFF3
 30565                           intcon	equ	0xFF2
 30566                           intcon3	equ	0xFF0
 30567                           indf0	equ	0xFEF
 30568                           postinc0	equ	0xFEE
 30569                           fsr0h	equ	0xFEA
 30570                           fsr0l	equ	0xFE9
 30571                           wreg	equ	0xFE8
 30572                           indf1	equ	0xFE7
 30573                           postdec1	equ	0xFE5
 30574                           fsr1h	equ	0xFE2
 30575                           fsr1l	equ	0xFE1
 30576                           indf2	equ	0xFDF
 30577                           postinc2	equ	0xFDE
 30578                           postdec2	equ	0xFDD
 30579                           plusw2	equ	0xFDB
 30580                           fsr2h	equ	0xFDA
 30581                           fsr2l	equ	0xFD9
 30582                           status	equ	0xFD8
 30583                           
 30584 ;; *************** function _EUSART_Transmit_ISR *****************
 30585 ;; Defined at:
 30586 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 30587 ;; Parameters:    Size  Location     Type
 30588 ;;		None
 30589 ;; Auto vars:     Size  Location     Type
 30590 ;;		None
 30591 ;; Return value:  Size  Location     Type
 30592 ;;                  1    wreg      void 
 30593 ;; Registers used:
 30594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30595 ;; Tracked objects:
 30596 ;;		On entry : 0/0
 30597 ;;		On exit  : 0/0
 30598 ;;		Unchanged: 0/0
 30599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30600 ;;      Params:         0       0       0       0       0       0       0       0       0
 30601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30603 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30604 ;;Total ram usage:        0 bytes
 30605 ;; Hardware stack levels used:    1
 30606 ;; This function calls:
 30607 ;;		Nothing
 30608 ;; This function is called by:
 30609 ;;		_INTERRUPT_InterruptManager
 30610 ;; This function uses a non-reentrant model
 30611 ;;
 30612                           
 30613                           	psect	text138
 30614  005394                     __ptext138:
 30615                           	opt stack 0
 30616  005394                     _EUSART_Transmit_ISR:
 30617                           	opt stack 20
 30618                           
 30619                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 30620                           
 30621                           ;incstack = 0
 30622  005394  0E40               	movlw	64
 30623  005396  0100               	movlb	0	; () banked
 30624  005398  61E1               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 30625  00539A  D012               	goto	i2l1065
 30626                           
 30627                           ; BSR set to: 0
 30628                           ;eusart.c: 167: {
 30629                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 30630  00539C  51E2               	movf	_eusartTxTail& (0+255),w,b
 30631  00539E  0D01               	mullw	1
 30632  0053A0  0E40               	movlw	low _eusartTxBuffer
 30633  0053A2  24F3               	addwf	prodl,w,c
 30634  0053A4  6ED9               	movwf	fsr2l,c
 30635  0053A6  0E02               	movlw	high _eusartTxBuffer
 30636  0053A8  20F4               	addwfc	prodh,w,c
 30637  0053AA  6EDA               	movwf	fsr2h,c
 30638  0053AC  50DF               	movf	indf2,w,c
 30639  0053AE  6EAD               	movwf	4013,c	;volatile
 30640                           
 30641                           ; BSR set to: 0
 30642  0053B0  2BE2               	incf	_eusartTxTail& (0+255),f,b
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 30646  0053B2  0E3F               	movlw	63
 30647  0053B4  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 30648  0053B6  D002               	goto	i2l1066
 30649                           
 30650                           ; BSR set to: 0
 30651                           ;eusart.c: 170: {
 30652                           ;eusart.c: 171: eusartTxTail = 0;
 30653  0053B8  0E00               	movlw	0
 30654  0053BA  6FE2               	movwf	_eusartTxTail& (0+255),b
 30655  0053BC                     i2l1066:
 30656                           
 30657                           ; BSR set to: 0
 30658                           ;eusart.c: 172: }
 30659                           ;eusart.c: 173: eusartTxBufferRemaining++;
 30660                           
 30661                           ; BSR set to: 0
 30662  0053BC  2BE1               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 30663                           
 30664                           ;eusart.c: 174: }
 30665  0053BE  0012               	return	
 30666  0053C0                     i2l1065:
 30667                           
 30668                           ; BSR set to: 0
 30669                           ;eusart.c: 175: else
 30670                           ;eusart.c: 176: {
 30671                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 30672  0053C0  989D               	bcf	3997,4,c	;volatile
 30673  0053C2  0012               	return	
 30674  0053C4                     __end_of_EUSART_Transmit_ISR:
 30675                           	opt stack 0
 30676                           tosu	equ	0xFFF
 30677                           tosh	equ	0xFFE
 30678                           tosl	equ	0xFFD
 30679                           pclatu	equ	0xFFB
 30680                           pclath	equ	0xFFA
 30681                           tblptru	equ	0xFF8
 30682                           tblptrh	equ	0xFF7
 30683                           tblptrl	equ	0xFF6
 30684                           tablat	equ	0xFF5
 30685                           prodh	equ	0xFF4
 30686                           prodl	equ	0xFF3
 30687                           intcon	equ	0xFF2
 30688                           intcon3	equ	0xFF0
 30689                           indf0	equ	0xFEF
 30690                           postinc0	equ	0xFEE
 30691                           fsr0h	equ	0xFEA
 30692                           fsr0l	equ	0xFE9
 30693                           wreg	equ	0xFE8
 30694                           indf1	equ	0xFE7
 30695                           postdec1	equ	0xFE5
 30696                           fsr1h	equ	0xFE2
 30697                           fsr1l	equ	0xFE1
 30698                           indf2	equ	0xFDF
 30699                           postinc2	equ	0xFDE
 30700                           postdec2	equ	0xFDD
 30701                           plusw2	equ	0xFDB
 30702                           fsr2h	equ	0xFDA
 30703                           fsr2l	equ	0xFD9
 30704                           status	equ	0xFD8
 30705                           
 30706 ;; *************** function _EUSART_Receive_ISR *****************
 30707 ;; Defined at:
 30708 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 30709 ;; Parameters:    Size  Location     Type
 30710 ;;		None
 30711 ;; Auto vars:     Size  Location     Type
 30712 ;;		None
 30713 ;; Return value:  Size  Location     Type
 30714 ;;                  1    wreg      void 
 30715 ;; Registers used:
 30716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30717 ;; Tracked objects:
 30718 ;;		On entry : 0/0
 30719 ;;		On exit  : 0/0
 30720 ;;		Unchanged: 0/0
 30721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30722 ;;      Params:         0       0       0       0       0       0       0       0       0
 30723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30725 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30726 ;;Total ram usage:        0 bytes
 30727 ;; Hardware stack levels used:    1
 30728 ;; This function calls:
 30729 ;;		Nothing
 30730 ;; This function is called by:
 30731 ;;		_INTERRUPT_InterruptManager
 30732 ;; This function uses a non-reentrant model
 30733 ;;
 30734                           
 30735                           	psect	text139
 30736  0053C4                     __ptext139:
 30737                           	opt stack 0
 30738  0053C4                     _EUSART_Receive_ISR:
 30739                           	opt stack 20
 30740                           
 30741                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 30742                           
 30743                           ; BSR set to: 0
 30744                           ;incstack = 0
 30745  0053C4  A2AB               	btfss	4011,1,c	;volatile
 30746  0053C6  D003               	goto	i2l1071
 30747                           
 30748                           ;eusart.c: 184: {
 30749                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 30750  0053C8  98AB               	bcf	4011,4,c	;volatile
 30751                           
 30752                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 30753  0053CA  88AB               	bsf	4011,4,c	;volatile
 30754                           
 30755                           ;eusart.c: 189: }
 30756  0053CC  0012               	return	
 30757  0053CE                     i2l1071:
 30758                           
 30759                           ;eusart.c: 190: else
 30760                           ;eusart.c: 191: {
 30761                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 30762  0053CE  0100               	movlb	0	; () banked
 30763  0053D0  51E0               	movf	_eusartRxHead& (0+255),w,b
 30764  0053D2  0D01               	mullw	1
 30765  0053D4  0E00               	movlw	low _eusartRxBuffer
 30766  0053D6  24F3               	addwf	prodl,w,c
 30767  0053D8  6ED9               	movwf	fsr2l,c
 30768  0053DA  0E02               	movlw	high _eusartRxBuffer
 30769  0053DC  20F4               	addwfc	prodh,w,c
 30770  0053DE  6EDA               	movwf	fsr2h,c
 30771  0053E0  CFAE FFDF          	movff	4014,indf2	;volatile
 30772                           
 30773                           ; BSR set to: 0
 30774  0053E4  2BE0               	incf	_eusartRxHead& (0+255),f,b
 30775                           
 30776                           ; BSR set to: 0
 30777                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 30778  0053E6  0E3F               	movlw	63
 30779  0053E8  65E0               	cpfsgt	_eusartRxHead& (0+255),b
 30780  0053EA  D002               	goto	i2l1073
 30781                           
 30782                           ; BSR set to: 0
 30783                           ;eusart.c: 195: {
 30784                           ;eusart.c: 196: eusartRxHead = 0;
 30785  0053EC  0E00               	movlw	0
 30786  0053EE  6FE0               	movwf	_eusartRxHead& (0+255),b
 30787  0053F0                     i2l1073:
 30788                           
 30789                           ; BSR set to: 0
 30790                           ;eusart.c: 197: }
 30791                           ;eusart.c: 198: eusartRxCount++;
 30792                           
 30793                           ; BSR set to: 0
 30794  0053F0  2BF4               	incf	_eusartRxCount& (0+255),f,b	;volatile
 30795  0053F2  0012               	return	
 30796  0053F4                     __end_of_EUSART_Receive_ISR:
 30797                           	opt stack 0
 30798                           tosu	equ	0xFFF
 30799                           tosh	equ	0xFFE
 30800                           tosl	equ	0xFFD
 30801                           pclatu	equ	0xFFB
 30802                           pclath	equ	0xFFA
 30803                           tblptru	equ	0xFF8
 30804                           tblptrh	equ	0xFF7
 30805                           tblptrl	equ	0xFF6
 30806                           tablat	equ	0xFF5
 30807                           prodh	equ	0xFF4
 30808                           prodl	equ	0xFF3
 30809                           intcon	equ	0xFF2
 30810                           intcon3	equ	0xFF0
 30811                           indf0	equ	0xFEF
 30812                           postinc0	equ	0xFEE
 30813                           fsr0h	equ	0xFEA
 30814                           fsr0l	equ	0xFE9
 30815                           wreg	equ	0xFE8
 30816                           indf1	equ	0xFE7
 30817                           postdec1	equ	0xFE5
 30818                           fsr1h	equ	0xFE2
 30819                           fsr1l	equ	0xFE1
 30820                           indf2	equ	0xFDF
 30821                           postinc2	equ	0xFDE
 30822                           postdec2	equ	0xFDD
 30823                           plusw2	equ	0xFDB
 30824                           fsr2h	equ	0xFDA
 30825                           fsr2l	equ	0xFD9
 30826                           status	equ	0xFD8
 30827                           
 30828 ;; *************** function _CMP1_ISR *****************
 30829 ;; Defined at:
 30830 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 30831 ;; Parameters:    Size  Location     Type
 30832 ;;		None
 30833 ;; Auto vars:     Size  Location     Type
 30834 ;;		None
 30835 ;; Return value:  Size  Location     Type
 30836 ;;                  1    wreg      void 
 30837 ;; Registers used:
 30838 ;;		None
 30839 ;; Tracked objects:
 30840 ;;		On entry : 0/0
 30841 ;;		On exit  : 0/0
 30842 ;;		Unchanged: 0/0
 30843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30844 ;;      Params:         0       0       0       0       0       0       0       0       0
 30845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30848 ;;Total ram usage:        0 bytes
 30849 ;; Hardware stack levels used:    1
 30850 ;; This function calls:
 30851 ;;		Nothing
 30852 ;; This function is called by:
 30853 ;;		_INTERRUPT_InterruptManager
 30854 ;; This function uses a non-reentrant model
 30855 ;;
 30856                           
 30857                           	psect	text140
 30858  0057C4                     __ptext140:
 30859                           	opt stack 0
 30860  0057C4                     _CMP1_ISR:
 30861                           	opt stack 20
 30862                           
 30863                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 30864                           
 30865                           ;incstack = 0
 30866  0057C4  9CA1               	bcf	4001,6,c	;volatile
 30867  0057C6  0012               	return		;funcret
 30868  0057C8                     __end_of_CMP1_ISR:
 30869                           	opt stack 0
 30870                           tosu	equ	0xFFF
 30871                           tosh	equ	0xFFE
 30872                           tosl	equ	0xFFD
 30873                           pclatu	equ	0xFFB
 30874                           pclath	equ	0xFFA
 30875                           tblptru	equ	0xFF8
 30876                           tblptrh	equ	0xFF7
 30877                           tblptrl	equ	0xFF6
 30878                           tablat	equ	0xFF5
 30879                           prodh	equ	0xFF4
 30880                           prodl	equ	0xFF3
 30881                           intcon	equ	0xFF2
 30882                           intcon3	equ	0xFF0
 30883                           indf0	equ	0xFEF
 30884                           postinc0	equ	0xFEE
 30885                           fsr0h	equ	0xFEA
 30886                           fsr0l	equ	0xFE9
 30887                           wreg	equ	0xFE8
 30888                           indf1	equ	0xFE7
 30889                           postdec1	equ	0xFE5
 30890                           fsr1h	equ	0xFE2
 30891                           fsr1l	equ	0xFE1
 30892                           indf2	equ	0xFDF
 30893                           postinc2	equ	0xFDE
 30894                           postdec2	equ	0xFDD
 30895                           plusw2	equ	0xFDB
 30896                           fsr2h	equ	0xFDA
 30897                           fsr2l	equ	0xFD9
 30898                           status	equ	0xFD8
 30899                           tosu	equ	0xFFF
 30900                           tosh	equ	0xFFE
 30901                           tosl	equ	0xFFD
 30902                           pclatu	equ	0xFFB
 30903                           pclath	equ	0xFFA
 30904                           tblptru	equ	0xFF8
 30905                           tblptrh	equ	0xFF7
 30906                           tblptrl	equ	0xFF6
 30907                           tablat	equ	0xFF5
 30908                           prodh	equ	0xFF4
 30909                           prodl	equ	0xFF3
 30910                           intcon	equ	0xFF2
 30911                           intcon3	equ	0xFF0
 30912                           indf0	equ	0xFEF
 30913                           postinc0	equ	0xFEE
 30914                           fsr0h	equ	0xFEA
 30915                           fsr0l	equ	0xFE9
 30916                           wreg	equ	0xFE8
 30917                           indf1	equ	0xFE7
 30918                           postdec1	equ	0xFE5
 30919                           fsr1h	equ	0xFE2
 30920                           fsr1l	equ	0xFE1
 30921                           indf2	equ	0xFDF
 30922                           postinc2	equ	0xFDE
 30923                           postdec2	equ	0xFDD
 30924                           plusw2	equ	0xFDB
 30925                           fsr2h	equ	0xFDA
 30926                           fsr2l	equ	0xFD9
 30927                           status	equ	0xFD8
 30928                           
 30929                           	psect	text141
 30930  000000                     __ptext141:
 30931                           	opt stack 0
 30932                           tosu	equ	0xFFF
 30933                           tosh	equ	0xFFE
 30934                           tosl	equ	0xFFD
 30935                           pclatu	equ	0xFFB
 30936                           pclath	equ	0xFFA
 30937                           tblptru	equ	0xFF8
 30938                           tblptrh	equ	0xFF7
 30939                           tblptrl	equ	0xFF6
 30940                           tablat	equ	0xFF5
 30941                           prodh	equ	0xFF4
 30942                           prodl	equ	0xFF3
 30943                           intcon	equ	0xFF2
 30944                           intcon3	equ	0xFF0
 30945                           indf0	equ	0xFEF
 30946                           postinc0	equ	0xFEE
 30947                           fsr0h	equ	0xFEA
 30948                           fsr0l	equ	0xFE9
 30949                           wreg	equ	0xFE8
 30950                           indf1	equ	0xFE7
 30951                           postdec1	equ	0xFE5
 30952                           fsr1h	equ	0xFE2
 30953                           fsr1l	equ	0xFE1
 30954                           indf2	equ	0xFDF
 30955                           postinc2	equ	0xFDE
 30956                           postdec2	equ	0xFDD
 30957                           plusw2	equ	0xFDB
 30958                           fsr2h	equ	0xFDA
 30959                           fsr2l	equ	0xFD9
 30960                           status	equ	0xFD8
 30961                           
 30962                           	psect	rparam
 30963  0000                     tosu	equ	0xFFF
 30964                           tosh	equ	0xFFE
 30965                           tosl	equ	0xFFD
 30966                           pclatu	equ	0xFFB
 30967                           pclath	equ	0xFFA
 30968                           tblptru	equ	0xFF8
 30969                           tblptrh	equ	0xFF7
 30970                           tblptrl	equ	0xFF6
 30971                           tablat	equ	0xFF5
 30972                           prodh	equ	0xFF4
 30973                           prodl	equ	0xFF3
 30974                           intcon	equ	0xFF2
 30975                           intcon3	equ	0xFF0
 30976                           indf0	equ	0xFEF
 30977                           postinc0	equ	0xFEE
 30978                           fsr0h	equ	0xFEA
 30979                           fsr0l	equ	0xFE9
 30980                           wreg	equ	0xFE8
 30981                           indf1	equ	0xFE7
 30982                           postdec1	equ	0xFE5
 30983                           fsr1h	equ	0xFE2
 30984                           fsr1l	equ	0xFE1
 30985                           indf2	equ	0xFDF
 30986                           postinc2	equ	0xFDE
 30987                           postdec2	equ	0xFDD
 30988                           plusw2	equ	0xFDB
 30989                           fsr2h	equ	0xFDA
 30990                           fsr2l	equ	0xFD9
 30991                           status	equ	0xFD8
 30992                           
 30993                           	psect	temp
 30994  00005E                     btemp:
 30995                           	opt stack 0
 30996  00005E                     	ds	1
 30997  0000                     int$flags	set	btemp
 30998  0000                     wtemp6	set	btemp+1
 30999                           tosu	equ	0xFFF
 31000                           tosh	equ	0xFFE
 31001                           tosl	equ	0xFFD
 31002                           pclatu	equ	0xFFB
 31003                           pclath	equ	0xFFA
 31004                           tblptru	equ	0xFF8
 31005                           tblptrh	equ	0xFF7
 31006                           tblptrl	equ	0xFF6
 31007                           tablat	equ	0xFF5
 31008                           prodh	equ	0xFF4
 31009                           prodl	equ	0xFF3
 31010                           intcon	equ	0xFF2
 31011                           intcon3	equ	0xFF0
 31012                           indf0	equ	0xFEF
 31013                           postinc0	equ	0xFEE
 31014                           fsr0h	equ	0xFEA
 31015                           fsr0l	equ	0xFE9
 31016                           wreg	equ	0xFE8
 31017                           indf1	equ	0xFE7
 31018                           postdec1	equ	0xFE5
 31019                           fsr1h	equ	0xFE2
 31020                           fsr1l	equ	0xFE1
 31021                           indf2	equ	0xFDF
 31022                           postinc2	equ	0xFDE
 31023                           postdec2	equ	0xFDD
 31024                           plusw2	equ	0xFDB
 31025                           fsr2h	equ	0xFDA
 31026                           fsr2l	equ	0xFD9
 31027                           status	equ	0xFD8


Data Sizes:
    Strings     1601
    Constant    969
    Data        12
    BSS         533
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     92     160
    BANK1           256      0     242
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_76(CODE[7]), STR_74(CODE[7]), STR_72(CODE[7]), STR_69(CODE[7]), 
		 -> STR_14(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_68(CODE[3]), STR_48(CODE[14]), STR_46(CODE[11]), STR_42(CODE[7]), 
		 -> STR_39(CODE[9]), STR_38(CODE[11]), STR_36(CODE[14]), STR_33(CODE[14]), 
		 -> STR_32(CODE[3]), STR_28(CODE[9]), STR_24(CODE[14]), STR_23(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5743_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5743_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5743_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5743_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4106$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4096$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4096$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4072$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4072$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4072$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4072$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_185(CODE[9]), STR_184(CODE[8]), STR_183(CODE[8]), STR_182(CODE[9]), 
		 -> STR_181(CODE[10]), STR_180(CODE[11]), STR_179(CODE[13]), STR_178(CODE[13]), 
		 -> STR_177(CODE[13]), STR_176(CODE[12]), STR_175(CODE[13]), STR_174(CODE[9]), 
		 -> STR_173(CODE[12]), STR_172(CODE[16]), STR_171(CODE[2]), STR_170(CODE[2]), 
		 -> STR_169(CODE[9]), oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), 
		 -> STR_168(CODE[12]), STR_167(CODE[8]), STR_166(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_161(CODE[5]), STR_160(CODE[8]), STR_159(CODE[8]), STR_158(CODE[9]), 
		 -> STR_141(CODE[16]), STR_140(CODE[17]), STR_139(CODE[17]), STR_138(CODE[4]), 
		 -> STR_137(CODE[4]), STR_136(CODE[4]), STR_135(CODE[4]), STR_134(CODE[4]), 
		 -> STR_133(CODE[4]), STR_132(CODE[4]), STR_131(CODE[16]), STR_130(CODE[17]), 
		 -> STR_129(CODE[4]), STR_128(CODE[4]), STR_127(CODE[4]), STR_126(CODE[4]), 
		 -> STR_125(CODE[4]), STR_124(CODE[4]), STR_123(CODE[4]), STR_122(CODE[4]), 
		 -> STR_121(CODE[4]), STR_120(CODE[4]), STR_119(CODE[4]), STR_118(CODE[4]), 
		 -> STR_117(CODE[4]), STR_116(CODE[16]), STR_115(CODE[12]), STR_114(CODE[17]), 
		 -> STR_113(CODE[16]), STR_112(CODE[16]), STR_111(CODE[16]), STR_110(CODE[15]), 
		 -> STR_109(CODE[15]), STR_108(CODE[16]), STR_107(CODE[4]), STR_106(CODE[3]), 
		 -> STR_105(CODE[3]), STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), 
		 -> STR_101(CODE[5]), STR_100(CODE[7]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_97(CODE[2]), STR_96(CODE[7]), STR_95(CODE[7]), STR_94(CODE[16]), 
		 -> STR_93(CODE[16]), STR_92(CODE[15]), STR_91(CODE[15]), STR_90(CODE[17]), 
		 -> STR_89(CODE[16]), STR_88(CODE[17]), STR_87(CODE[17]), STR_86(CODE[7]), 
		 -> STR_85(CODE[10]), STR_84(CODE[17]), STR_83(CODE[16]), STR_82(CODE[16]), 
		 -> STR_81(CODE[16]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_75(CODE[19]), STR_73(CODE[17]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_67(CODE[13]), 
		 -> STR_66(CODE[12]), STR_65(CODE[12]), STR_62(CODE[18]), STR_61(CODE[13]), 
		 -> STR_60(CODE[17]), STR_59(CODE[16]), STR_58(CODE[17]), STR_57(CODE[17]), 
		 -> STR_56(CODE[16]), STR_55(CODE[17]), STR_54(CODE[17]), STR_52(CODE[13]), 
		 -> STR_51(CODE[12]), STR_50(CODE[17]), STR_44(CODE[7]), STR_43(CODE[10]), 
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_35(CODE[9]), STR_34(CODE[11]), 
		 -> STR_30(CODE[11]), STR_29(CODE[10]), STR_26(CODE[9]), STR_25(CODE[11]), 
		 -> STR_21(CODE[17]), STR_19(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), moduleResonseBuffer(BANK1[64]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[9]), STR_7(CODE[10]), 
		 -> STR_6(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_64(CODE[12]), STR_63(CODE[14]), STR_53(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_165(CODE[22]), STR_164(CODE[22]), STR_163(CODE[27]), STR_162(CODE[27]), 
		 -> STR_157(CODE[26]), STR_156(CODE[26]), STR_155(CODE[26]), STR_154(CODE[26]), 
		 -> STR_153(CODE[3]), STR_152(CODE[9]), STR_151(CODE[15]), STR_150(CODE[13]), 
		 -> STR_149(CODE[13]), STR_148(CODE[13]), STR_147(CODE[13]), STR_146(CODE[13]), 
		 -> STR_145(CODE[13]), STR_144(CODE[13]), STR_143(CODE[13]), STR_142(CODE[16]), 
		 -> STR_49(CODE[11]), STR_47(CODE[11]), STR_45(CODE[14]), STR_37(CODE[14]), 
		 -> STR_31(CODE[10]), STR_27(CODE[13]), STR_22(CODE[14]), STR_20(CODE[13]), 
		 -> STR_18(CODE[10]), STR_13(CODE[10]), STR_5(CODE[20]), STR_4(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_SetDataRateSetting->_sendCommand
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _USBapp_Handler->_oled_putString
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _PICoRa_test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _oled_putint8->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _moteApp_setLightString->_memcpy
    _MOTEapp_getModuleResponse->_EUSART_Read
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _PICoRa_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  715962
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _PICoRa_Initialize
                _PICoRa_test_powerup
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  338499
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  179629
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   43165
                                             23 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   49979
                                             23 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1469
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   44646
                                             23 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PICoRa_test_powerup                                  0     0      0  279232
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   40789
                                             23 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   40697
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   40364
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   43367
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  110941
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (2) _oled_putint8                                        10     8      2   43235
                                             23 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   39606
                                             18 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PICoRa_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   30063
                                             31 COMRAM    18    18      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _PICoRa_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _PICoRa_test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     31      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AF      14        0.0%
DATA                 0      0     2AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 22 10:14:27 2018

           __size_of_moteApp_lightStringSize 0006                                   _USB_SD_Ptr 75F5  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                        ??_moteApp_testSensors 00AC  
                                         l60 2D26                                           l65 2D28  
                                         l57 2CC4                                           l66 2D3A  
                          ??_CMP1_Initialize 0060                                           l67 2D50  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 4B74  
             moteJoiningProcess@selectButton 0078                                _USBDeviceInit 29F2  
                        ___wmul@multiplicand 0062                      EUSART_FlushBuffer@index 0060  
                     __end_of_oled_writeData 5648                         ??_moteApp_toggleLeds 0063  
                         __size_of_CDCInitEP 0066                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
             __end_of_moteApp_setLightString 4B0C         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l300 2176  
                                        l320 100A                                          l304 225E  
                                        l313 1452                                          l321 1014  
                                        l401 03C6                                          l305 2178  
                                        l314 0FF6                                          l410 056E  
                                        l306 21C8                                          l331 1148  
                                        l323 108E                                          l411 077A  
                                        l403 03D2                                          l260 4594  
                                        l500 0EAA                                          l412 0598  
                                        l404 0498                                          l308 222E  
                                        l341 123A                                          l333 119E  
                                        l325 10AC                                          l501 0EC2  
                                        l421 06EE                                          l413 06AE  
                                        l405 04B6                  __end_of_USBStdGetDscHandler 29F2  
                                        l318 149A                                          l350 1322  
                                        l326 10E6                                          l502 0EDA  
                                        l430 082A                                          l406 04D6  
                                        l271 52C4                                          l343 128A  
                                        l335 11AC                                          l319 0FF8  
                                        l263 45B6                                          l503 0F22  
                                        l423 072C                                          l415 062A  
                                        l272 52AC                                          l600 30DE  
                                        l360 13FC                                          l352 1380  
                                        l512 2346                                          l520 2316  
                                        l264 45C6                                          l440 0970  
                                        l416 0638                                          l345 12B6  
                                        l337 1204                                          l329 1120  
                                        l521 2326                                          l513 22B6  
                                        l505 0F3A                                          l433 08C2  
                                        l425 0768                                          l362 1406  
                                        l514 2380                                          l522 2336  
                                        l266 45DC                                          l506 0F40  
                                        l450 0A90                                          l418 0676  
                                        l290 20AA                                          l355 13A2  
                                        l339 1212                                          l515 22C6  
                                        l611 431E                                          l451 0AA8  
                                        l443 09FC                                          l419 067A  
                                        l364 1410                                          l356 13B4  
                                        l348 12CC                                          l516 22D6  
                                        l444 0B38                                          l452 0AC0  
                                        l380 0292                                          l292 20BA  
                                        l517 22E6                                          l605 42B2  
                                        l445 0AF0                                          l453 0AD8  
                                        l437 091C                                          l429 07D6  
                                        l381 023C                                          l293 20C8  
                                        l542 4BAE                                          l526 55B6  
                                        l358 13E8                                          l518 22F6  
                                        l278 5502                                          l622 4CAE  
                                        l470 0C70                                          l462 0BD6  
                                        l446 0A60                                          l438 098E  
                                        l286 2076                                          l519 2306  
                                        l607 42D6                                          l471 0C88  
                                        l439 095A                                          l383 0248  
                                        l632 4834                                          l800 351A  
                                        l624 4CE0                                          l464 0CD0  
                                        l472 0CA0                                          l456 0B5E  
                                        l448 0B1A                                          l296 2158  
                                        l288 207C                                          l641 4884  
                                        l625 4CF6                                          l609 42FA  
                                        l481 0D32                                          l473 0CB8  
                                        l465 0C2A                                          l449 0A78  
                                        l393 02B0                                          l385 02A6  
                                        l289 2092                                          l642 4896  
                                        l802 356A                                          l490 0E42  
                                        l482 0D4E                                          l458 0B7A  
                                        l547 4BD6                                          l803 3592  
                                        l563 3A86                                          l387 0F94  
                                        l483 0D6A                                          l475 0D12  
                                        l467 0D00                                          l299 2242  
                                        l660 4E90                                          l652 5074  
                                        l564 3A70                                          l484 0D86  
                                        l468 0C40                                          l388 02AE  
                                        l629 4804                                          l557 537C  
                                        l653 5086                                          l645 48B8  
                                        l493 0EF2                                          l477 0DBA  
                                        l485 0DA2                                          l469 0C58  
                                        l397 030C                                          l558 5366  
                                        l646 48CA                                          l590 347C  
                                        l582 541E                                          l566 3AA6  
                                        l494 0E4C                                          l486 0DE4  
                                        l478 0D18                                          l398 0360  
                                        l671 4AEC                                          l487 0E26  
                                        l568 3B1E                                          l593 348A  
                                        l569 3ADC                                          l497 0E62  
                                        l489 0E46                                          l770 3E62  
                                        l498 0E7A                                          l659 4E7E  
                                        l763 3E90                                          l771 3E6A  
                                        l587 33DE                                          l579 540C  
                                        l499 0E92                                          l860 4A00  
                                        l764 3E14                                          _BDT 000400  
                                        l773 3E70                                          l950 40DE  
                                        l951 4158                                          _CKE 007E3E  
                                        l864 4A2C                                          l856 4A0A  
                                        l768 3EA8                                          l865 4A2E  
                                        l769 3E16                                          l963 4A44  
                                        l859 4A04                                          l973 552C  
                                        l958 4692                                          l798 34EC  
                                        l984 5496                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 0FEA  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 003A                                          _log 02E8  
                                 _USBSuspend 54CC                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4336                 __end_of_moteApp_clearCommand 572C  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 56C6  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 2792  
                             _USBDeviceState 00EC                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012C  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0077                                 ___fltol@exp1 0069  
                                       l2000 25D4                                         l1050 5198  
                                       l2003 2620                                         l1052 51C2  
                                       l1060 5114                                         l2004 25FE  
                                       l1061 5112                                         l2007 2638  
                                       l1152 566A                                         l2008 263C  
                                       l1049 519A                                         l1059 50F0  
                                       l1077 4FE6                                         l2063 5292  
                                       l2064 527A                                         l2080 3878  
                                       l2081 3898                                         l2082 38B8  
                                       l2331 3624                                         l2075 3860  
                                       l2171 3FC6                              _timer3ReloadVal 0038  
                                       l2340 3664                                         l2332 3614  
                                       l2172 3FBA                                         l1364 5140  
                                       l2430 50B2                                         l1630 2A38  
                                       l2079 38D0                                         l2175 3FEE  
                                       l2280 496C                                         l1632 2A72  
                                       l2176 3FFC                                         l2168 3F94  
                                       l2601 1BA2                                         l2337 3648  
                                       l2329 35B8                                         l2281 4978  
                                       l2433 50CE                                         l1633 2A60  
                                       l2177 4012                                         l2169 3FA8  
                                       l2513 4FAC                                         l2602 1B9E  
                                       l2338 363C                                         l2434 50D6  
                                       l2514 4FA4                                         l2611 1CBC  
                                       l2283 498E                                         l1635 2A96  
                                       l2540 1824                                         l2604 1BE8  
                                       l2284 4986                   USBConfigureEndpoint@handle 0007  
                                       l2541 1820                                         l2621 1D2A  
                                       l2429 50B8                                         l2533 5350  
                                       l2517 4FC4                                         l2614 1CF2  
                                       l2606 1C10                                         l2534 533E  
                                       l1670 3B46                                         l2518 4FCE  
                                       l2623 1D6E                                         l2615 1CD4  
                                       l2607 1CBE                                         l2631 14D2  
                                       l2527 4F80                                         l2287 49A6  
                                       l2552 1944                                         l2624 1D92  
                                       l2608 1C6E                                         l2632 14CE  
                                       l2528 4F5E                                         l2288 49B0  
                                       l1672 3B70                                         l2553 1922  
                                       l2545 186C                                         l2625 1DBC  
                                       l2609 1C96                                         l2633 14E2  
                                       l2289 49BE                                         l2562 198C  
                                       l2554 1930                                         l2546 1868  
                                       l2626 1DC8                                         l2642 1700  
                                       l1674 3BCC                                         l2571 1A5E  
                                       l2563 1990                                         l2555 1934  
                                       l2627 1DCA                                         l2651 177C  
                                       l2643 16E2                                         l2635 1512  
                                       l2580 1A9E                                         l2548 18C8  
                                       l2652 179A                                         l2636 150E  
                                       l1692 5262                                         l2660 4EB6  
                                       l2573 1A74                                         l2549 188C  
                                       l2637 1522                                         l1693 5260  
                                       l2566 1A2A                                         l2558 19A2  
                                       l2654 17BE                                         l2638 1540  
                                       l2583 1AE4                                         l2575 1A7E  
                                       l2559 1968                                         l2655 17DC  
                                       l2568 1A3A                                         l2680 2448  
                                       l1960 3D04                                         l2649 1738  
                                       l2681 243C                                         l1961 3D30  
                                       l1962 3D0A                                         l2587 1B0A  
                                       l2691 24D6                                         l2683 2486  
                                       l1955 3D56                                         l2659 4EC0  
                                       l2667 4546                                         l2588 1B12  
                                       l2692 2508                                         l2684 246E  
                                       l2676 2408                                         l2668 44DC  
                                       l2589 1B14                                         l2597 1B62  
                                       l2677 2418                                         l1957 3CD0  
                                       l2669 453E                                         l2598 1B5E  
                                       l2686 24B8                                         l2678 2436  
                                       l2687 24AC                                         l1991 2566  
                                       l1959 3CD8                                         l1967 555E  
                                       l1992 2570                                         l1993 259E  
                                       l1985 255A                                         l1995 265A  
                                       l1987 2544                                         l1996 25B0  
                                       l1997 25B4                                         l1989 254E  
                                       l1999 25F6                                         l8140 4FDE  
                                       l9042 47FC                                         l9124 42AA  
                                       l8190 4AE4                                         l7608 5524  
                                       l9160 4316                                         l9136 42CE  
                                       l7466 50DE                                         l7490 468A  
                                       l9148 42F2                                         l9094 44DC  
                                       l9254 3A9E                                         l7758 4F5E  
                                       l9198 4CA6                                         l8696 1DBC  
                                       l9940 13E4                                         l9828 10E2  
                                       l9870 1200                                         l9854 1196  
                                       l9838 111C                                         STR_1 7D24  
                                       STR_2 7D06                                         STR_3 7D15  
                                       l9794 1006                                         STR_4 7FFD  
                                       STR_5 7A88                                         STR_6 7ACD  
                                       STR_7 7EEE                                         STR_8 7F55  
                                       STR_9 7BAF                              _lightStringSize 00ED  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 001E  
                                       _PEIE 007F96                                         u6220 4A64  
                                       u6310 4FFE                                         u7120 1D7C  
                                       u6240 4A92                                         u7130 1DA0  
                                       u6227 4A5A                                         u7220 152E  
                                       u6340 4B08                                         u8020 3458  
                                       u7310 178A                                         u7230 16A4  
                                       u8110 2538                                         u6247 4A88  
                                       u7320 17A8                                         u8200 2626  
                                       u7090 1D26                                         u7410 35D6  
                                       u8050 3CC4                                         u7235 169A  
                                       u6620 18F8                                         u9100 0788  
                                       u6630 1908                                         u8118 253C  
                                       u7415 35CC                        ??_USBCtrlTrfTxService 0001  
                                       u6800 1A82                                         u6640 190A  
                                       u7280 1734                                         u7450 364E  
                                       u7370 4992                                         u8058 3CC8  
                                       u8410 4FB0                                         u9050 067E  
                                       u9220 0B88                                         u9140 08CE  
                                       u6830 1A9A                                         u6670 194C  
                                       u7630 4E9A                                         u7615 5150  
                                       _UCFG 000F62                                         u7560 24C2  
                                       u7480 50BC                                         u7616 5152  
                                       u7800 42EE                                         u7650 5090  
                                       u8370 3FCA                                         u7730 450A  
                                       u8540 49D6                                         u7820 4312  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       u7910 4CFA                                         u6880 1AF0  
                                       u7760 4EF4                                         u7690 4862  
                                       u8810 1418                                         _UEIE 000F66  
                                       u7860 48A0                                         u7780 42CA  
                                       u7940 3AC2                                         u7880 48D4  
                                       u9720 2AF2                                         u9580 3848  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u9690 2A54                                         u8970 04E4  
                                       u8890 02BE                                         u9780 3EB4  
                                       u9870 20E4                                         _TMR2 000FBC  
                                       _TMR3 000FB2                              _CDCDataInHandle 0032  
     USBStdFeatureReqHandler@current_ep_data 0019                                         _pDst 0154  
                                       _main 2C4A                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 3E12                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 523A  
                                       btemp 005E                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 5792  
                                       start 00E4                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 573A  
                            _TMR3_Initialize 5584                                  _storedLight 01E8  
                __end_of_USBapp_exitCDCState 5766                             __end_of_CMP1_ISR 57C8  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 3214  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 0F02  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 57B2                         ??_moteJoiningProcess 0079  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 57AC  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 573A                                ?_EUSART_Write 0001  
             __size_of_OSCILLATOR_Initialize 0016               __end_of_oled_initialDispayLine 571C  
                            ?_oled_writeData 0001                __end_of_OSCILLATOR_Initialize 5674  
                                      l10194 0630                                        l10634 533E  
                                      l10924 2A8E                                        l10896 2A30  
                              ___fltol@sign1 0068                              __end_of___almod 4024  
                            __end_of___fladd 1B30                                        ?_main 0001  
                            __end_of___fldiv 1DE6                              __end_of___lbdiv 50DA  
                                      _EEADR 000FA9                                        STR_10 7C04  
                                      STR_11 7C15                                        STR_20 7E21  
                                      STR_12 7B38                                        STR_13 7F0C  
                                      STR_21 7AE3                                        STR_14 7FBE  
                                      STR_30 7EAF                                        STR_22 7D41  
                                      STR_23 7FF8                                        STR_31 7F02  
                                      STR_15 7B49                                        STR_32 7FF8  
                                      STR_40 7E99                                        STR_24 7D5D  
                                      STR_16 7B9E                                        STR_41 7EAF  
                                      STR_33 7D5D                                        STR_25 7EC5  
                                      STR_17 7AF4                                        STR_34 7EC5  
                                      STR_18 7F0C                                        STR_42 7F9B  
                                      STR_26 7F3A                                        STR_50 7C37  
                                      STR_35 7F3A                                        STR_27 7E21  
                                      STR_43 7EF8                                        STR_51 7E52  
                                      STR_19 7AC1                                        STR_44 7F94  
                                      STR_28 7F43                                        STR_52 7DAC  
                                      STR_36 7D4F                                        STR_60 7BE2  
                            __end_of___awmod 49C8                                        STR_45 7D41  
                                      STR_37 7D41                                        STR_29 7EE4  
                                      STR_61 7D9F                                        STR_53 7D33  
                                      STR_46 7EA4                                        STR_38 7EA4  
                                      STR_70 7B5A                                        STR_54 7B27  
                                      STR_62 7AAF                                        STR_63 7D33  
                                      STR_39 7F43                                        STR_47 7EBA  
                                      STR_55 7B8D                                        STR_71 7AD2  
                                      STR_80 7C99                                        STR_48 7D4F  
                                      STR_72 7FB7                                        STR_64 7E82  
                                      STR_56 7C99                                        STR_49 7EBA  
                                      STR_65 7E6A                                        STR_81 7C79  
                                      STR_73 7BC0                                        STR_57 7B16  
                                      STR_74 7FA9                                        STR_66 7E5E  
                                      STR_82 7C69                                        STR_90 7C26  
                                      STR_58 7B05                                        STR_83 7C99  
                                      STR_59 7C99                                        STR_67 7DAC  
                                      STR_91 7CD9                                        STR_75 7A9C  
                                      STR_68 7FF8                                        STR_76 7FA2  
                                      STR_92 7CE8                                        STR_84 7C48  
                                      STR_69 7FB0                                        STR_85 7EDA  
                                      STR_77 7CC9                                        STR_93 7C89  
                                      STR_94 7C79                                        STR_78 7B27  
                                      STR_86 7E6F                                        STR_87 7B16  
                                      STR_79 7B8D                                        STR_95 7F86  
                                      STR_88 7B05                                        STR_96 7F7F  
                            __end_of___flmul 17F2                                        STR_89 7C99  
                                      STR_97 7FFB                                        STR_98 7B7C  
                                      STR_99 7B6B            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3676                              _TMR1_StartTimer 57C0  
                            __end_of___lldiv 476E            __size_of_MOTEapp_setResponseReady 0006  
                                      u10607 550E                                        _T1CON 000FCD  
                                      u10617 2286                       __end_of_USBDeviceTasks 28C4  
                                      u10707 38C8                                        u10627 2298  
                                      u10717 3056                                        u10637 22AA  
                                      u10807 5282                                        u10727 3068  
                                      u10647 2388                                        u10567 0770  
                                      _T2CON 000FBA                                        u10817 52B4  
                                      u10737 307A                                        u10657 239A  
                                      u10577 477E                                        u10747 30A0  
                                      u10667 23AC                                        u10587 4792  
                                      u10757 30B2                                        u10677 1420  
                                      u10597 47A6                                        u10767 30C4  
                                      u10687 1432                      __end_of_sendDataCommand 3B2C  
                                      _T3CON 000FB1                                        u10777 30F4  
                                      u10697 1444                                        u10787 3106  
                                      u10797 3118                    ?_USBCtrlEPServiceComplete 0001  
                            __end_of___lwmod 4FD8                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0079                                        i2l841 4D00  
                                      i2l835 4D0C                                        i2l843 4D06  
                                      _UADDR 000F63                                        i2l788 4E42  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                              __CFG_WRT0$OFF 000000           __size_of_USBCtrlEPAllowStatusStage 00C4  
                            __end_of_delayms 52A0                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000              __end_of_USBCtrlEPAllowDataStage 4210  
                          oled_putChar@index 006B                             __end_of_TMR1_ISR 5752  
                                      _sd000 79BA                                        _sd001 7974  
            service_pushbutton@Release_Timer 00E4                                        _sd002 7940  
                              __CFG_WRTB$OFF 000000                             __end_of_TMR3_ISR 55E2  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 5674                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _light 0158  
                             __pbitbssCOMRAM 02E8                      __end_of_TMR1_Initialize 5304  
                               _runningState 00F2                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                          __end_of_CDCInitEP 4C40                   oled_setDisplay@displayType 0061  
                                      status 000FD8                               __CFG_T3CMX$RC0 000000  
                                      wtemp6 005F                              _TMR2_StartTimer 57BC  
                            __end_of_strncmp 4562                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 547C                              ___lbdiv@counter 0062  
                               _m10SecTicker 0156                 __end_of_moteApp_getTempValue 509C  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E2                              __initialization 4336  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 2D62                        _control_signal_bitmap 0040  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 55A6  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 56DA  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00BC  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 005E                              _TMR3_StartTimer 57B8  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 5202                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 00E8  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 00DC             moteApp_convertSensorValue@string 0072  
                    __end_of_USBDeviceAttach 526E                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00D6                            _getsUSBUSART$6107 006B  
                                     _ACTCON 000FB5                                       STR_100 7F8D  
                                     STR_101 7FC3                                       STR_110 7CD9  
                                     STR_102 7E05                                       STR_111 7C79  
                                     STR_103 7FE1                                       STR_112 7C69  
                                     STR_104 7FED                                       STR_120 7FD4  
                                     STR_113 7C99                                       STR_105 7FE5  
                                     STR_121 7FD8                                       STR_106 7FE9  
                                     STR_122 7FDC                                       STR_114 7BF3  
                                     STR_130 7BD1                                       _ADRESH 000FC4  
                                     STR_123 7FF4                                       STR_107 7FF0  
                                     STR_115 7E76                                       STR_131 7CA9  
                                     STR_116 7C89                                       STR_108 7C89  
                                     STR_132 7FC8                                       STR_124 7FDC  
                                     STR_140 7B8D                                       STR_109 7CE8  
                                     STR_141 7C99                                       STR_133 7FCC  
                                     STR_125 7FE0                                       STR_117 7FC8  
                                     STR_134 7FD0                                       STR_126 7FEC  
                                     STR_118 7FCC                                       STR_150 7E14  
                                     STR_142 7CB9                                       _ADRESL 000FC3  
                                     STR_135 7FD4                                       STR_127 7FE4  
                                     STR_119 7FD0                                       STR_143 7DB9  
                                     STR_151 7CF7                                       STR_136 7FD8  
                                     STR_128 7FE8                                       STR_160 7F6F  
                                     STR_152 7F4C                                       STR_144 7DC6  
                                     STR_153 7A0B                                       STR_161 7ACD  
                                     STR_137 7FDC                                       STR_129 7FF0  
                                     STR_145 7DD3                                       STR_170 7DC4  
                                     STR_138 7FF4                                       STR_146 7DE0  
                                     STR_154 7A28                                       STR_162 79D9  
                                     STR_139 7B27                                       STR_171 7DD1  
                                     STR_147 7DED                                       STR_155 7A42  
                                     STR_163 79BE                                       STR_180 7E8E  
                                     STR_148 7DFA                                       STR_172 7C59  
                                     STR_164 7A5C                                       STR_156 79F4  
                                     STR_181 7ED0                                       STR_173 7E2E  
                                     STR_149 7E07                                       STR_165 7A72  
                                     STR_157 7A0E                                       _EEDATA 000FA8  
                                     STR_158 7F5E                                       STR_166 7F31  
                                     STR_174 7F1F                                       STR_159 7F77  
                                     STR_167 7F67                                       STR_175 7D6B  
                                     STR_168 7E46                                       STR_176 7E3A  
                                     STR_185 7F28                                       STR_169 7F16  
                                     STR_177 7D92                                       STR_178 7D78  
                                     STR_179 7D85                                       _EECON2 000FA7  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 007A                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0144                                       i2l1110 0060  
                                     i2l1111 006C                                       i2l1113 007C  
                                     i2l1115 0088                      __end_of_TMR3_Initialize 55A6  
                                     i2l1117 0094                                       i2l1118 0098  
                                     i2l1071 53CE                                       i2l1073 53F0  
                                     i2l1065 53C0                                       i2l1066 53BC  
                                     i2l1700 39F2                                       i2l1630 2B60  
                                     i2l1712 4272                                       i2l1632 2B9C  
                                     i2l1801 544A                                       i2l1633 2B88  
                                     i2l1641 27A8                                       i2l2450 471A  
                                     i2l1706 41C0                                       i2l1722 2F0C  
                                     i2l1802 5448                                       i2l1650 2810  
                                     i2l1642 27B4                                       i2l2451 470E  
                                     i2l1731 3696                                       i2l1635 2BC0  
                                     i2l1651 281A                                       i2l1643 27BC  
                                     i2l1740 370A                                       i2l1820 4D68  
                                     i2l1708 41DC                                       i2l1660 28A0  
                                     i2l1652 283E                                       i2l1733 36A0  
                                     i2l2533 546A                                       i2l1717 2EE6  
                                     i2l1653 284A                                       i2l1645 27D0  
                                     i2l2454 474E                                       i2l1830 33A6  
                                     i2l1750 2708                                       i2l1822 4DB0  
                                     i2l1670 3C00                                       i2l2534 545A  
                                     i2l1718 2E90                                       i2l1662 28BC  
                                     i2l1646 27DC                                       i2l2455 475C  
                                     i2l1735 3702                                       i2l1831 336C  
                                     i2l1807 3808                                       i2l1655 285A  
                                     i2l1736 36CA                                       i2l1672 3C2A  
                                     i2l1760 32D2                                       i2l1808 3802  
                                     i2l1648 2800                                       i2l1497 55D6  
                                     i2l1833 338C                                       i2l1665 5164  
                                     i2l1809 37A2                                       i2l1746 26AE  
                                     i2l1666 5172                                       i2l1674 3C86  
                                     i2l1770 2972                                       i2l1850 3172  
                                     i2l1658 2880                                       i2l1739 3742  
                                     i2l1747 268C                                       i2l1843 31D0  
                                     i2l1836 33D2                                       i2l1828 3326  
                                     i2l1860 1E0A                                       i2l1772 297A  
                                     i2l1780 4030                                       i2l1852 3178  
                                     i2l1844 3142                                       i2l1829 332C  
                                     i2l1749 2722                                       i2l1933 3F52  
                                     i2l1861 1E0E                                       i2l1773 29CA  
                                     i2l1853 3196                                       i2l1934 3EEC  
                                     i2l1766 29DA                                       i2l1758 325E  
                                     i2l1854 31B2                                       i2l1846 314C  
                                     i2l1871 1F1C                                       i2l1863 1E78  
                                     i2l1775 29D2                                       i2l1767 28D6  
                                     i2l1783 40B6                                       i2l1847 3152  
                                     i2l1936 3F04                                       i2l1872 1F38  
                                     i2l1784 4040                                       i2l1848 3158  
                                     i2l1937 3F12                                       i2l1881 2024  
                                     i2l1865 1EB8                                       i2l1769 28EA  
                                     i2l1785 4046                                       i2l1849 316C  
                                     i2l1793 5058                                       i2l1938 3F30  
                                     i2l1874 1F98                                       i2l1866 1EBA  
                                     i2l1786 4064                                       i2l1794 5056  
                                     i2l1939 3F48                                       i2l1875 1FA4  
                                     i2l1867 1ED2                                       i2l1779 40A0  
                                     i2l1876 2018                                       i2l1869 1F52  
                                     i2l1879 1FD2                                       i2l7514 4E3A  
                                     _TABLAT 000FF5                                       i2l7706 545A  
                                     i2l7652 36A0                                       i2l7886 3256  
                                  ??_EndLine 0061                                       _OSCCON 000FD3  
                              CDCTxService@i 006A                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                             __end_of___xxtofl 251A  
                   i2USBTransferOnePacket@ep 0005                            ??i2_USBDeviceInit 0009  
            __size_ofi2_USBTransferOnePacket 00BA                         ?i2_EUSART_Initialize 0001  
                       oled_displayOff@state 0001                                oled_putChar@k 006A  
             __size_of_moteApp_getLightValue 004E                __end_of_moteApp_getLightValue 4EB4  
                          _shortPacketStatus 004C               moteRunningProcess@changeStates 00B5  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 42A4  
                       _moteApp_clearCommand 571C                      _moteApp_lightStringSize 579A  
               ??_MOTEapp_SetDataRateSetting 0063                              USBDeviceTasks@i 001F  
                 __end_of_Set_Column_Address 55FE                  USBStdFeatureReqHandler@pUEP 0017  
                           __end_of_hexToStr 5422                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0014                      __end_of_TMR1_StartTimer 57C4  
                               ?_putUSBUSART 0060                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 54A4  
                                  ??___fldiv 0095                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0100                         __end_of_getsUSBUSART 3D5C  
                                  ??___lwmod 0064                            _USBEnableEndpoint 5154  
            __size_of_USBStdGetStatusHandler 00A8                          _EUSART_Transmit_ISR 5394  
                          _PICoRa_Initialize 5562                                       _memcpy 4F4C  
                                     _memset 5334                                       clear_0 438C  
                                     clear_1 4398                                       clear_2 43A4  
                                     clear_3 43B2                              ___awmod@divisor 0062  
                                  ??_delayms 0062                              ___awmod@counter 0064  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                         ?_PICoRa_Initialize 0001                      __end_of_DATAEE_ReadByte 568A  
                                     _strcmp 4EB4                   __end_of_ADC_TempConversion 304A  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                            _moteApp_delayms 52A0                  __size_of_service_pushbutton 006E  
                               __pdataCOMRAM 005B                                 _CDCTxService 251A  
                               __mediumconst 75F4                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        _PICoRa_test_powerup 48E4                          ??_USBEnableEndpoint 000A  
                        ??_PICoRa_Initialize 0062                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 57C0                                 _dataRateRead 0053  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004B  
                  USBapp_Handler@buttonPress 0077                         _USBapp_getrxByteFlag 57A6  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                               ___xxtofl@val 0060                 __size_of_USBapp_handlerState 000A  
         moteApp_getLightValue@escapeCounter 0070                                   __accesstop 0060  
                    __end_of__initialization 43B8                       ??_USBapp_setrxByteFlag 0001  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 0001  
                      ??i2_EUSART_Initialize 0001                              _CMP1_Initialize 56DA  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 0028                  __size_of_EUSART_FlushBuffer 0042  
                       ?_PICoRa_test_powerup 0001                                ?_oled_putint8 0077  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 5190  
                  __end_of_PICoRa_Initialize 5584                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 79BE                                __end_of_sd001 79A8  
                              __end_of_sd002 7974                                 __pidataBANK0 577A  
                               __pidataBANK1 57CA                      __end_of_TMR3_StartTimer 57BC  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 009E                             _DATAEE_WriteByte 5118  
              __size_of_USBConfigureEndpoint 0094      __end_of_oled_setContrastControlRegister 56B2  
   __size_of_oled_setContrastControlRegister 0014             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 569E  
                __end_of_USBCtrlTrfInHandler 33D8                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 3BEA                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 78FD  
                          _CDCTxService$6155 0068                                   _cdc_notice 01CA  
                                  ?i2_memset 0001                                   _cdc_rx_len 00DE  
                                 _cdc_tx_len 00DD                         _moteApp_getTempValue 505C  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01ED  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01BA  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 4024  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 0060                                   __pbssBANK0 00BC  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                       __end_of_EUSART_Write 5118                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0076  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                             ??_oled_setFont 0062                 ??_moteApp_convertSensorValue 0074  
                            _periodicUpValue 00FE                    ??_moteApp_lightStringSize 0060  
                __size_of_EUSART_Receive_ISR 0030                          oled_putString@index 0076  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 002E  
                                _pBDTEntryIn 00CA                       __size_of_oled_clearRow 0026  
                                 _clearLight 01E3                  __end_of_moteApp_testSensors 39AA  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 2F60  
                      ??_PICoRa_test_powerup 00AD             __end_of_MOTEapp_setResponseReady 57B2  
                             ??_oled_putint8 0079                       oled_putChar@start_page 0063  
                __size_of_USBCheckCDCRequest 00B0                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0030                      ?_moteApp_getLightString 0060  
                           ??_oled_writeData 0060                         USBCtrlTrfRxService@i 0012  
                               ?_TMRapp_Tick 0001                                      ?___wmul 0060  
                           ?_TMR1_StartTimer 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 52D2  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A8                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 374A  
                    _moteApp_addToDataBuffer 4CA0                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 00D3                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 2792                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 3132                                _eusartRxCount 00F4  
                          _configDescriptor1 78FD                                      i2l11268 2852  
                                    i2l10814 2B58                                      i2l10842 2BB8  
                                    i2l11660 4D24                                      i2l11662 4D54  
                                    i2l10688 379A                                    ?___xxtofl 0060  
                                    _RS232cp 00E5                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0060  
                                 ??i2_memset 0007                           __size_of_test_oled 008A  
                       __size_of_moduleSleep 0026                  __end_of_USBCtrlTrfTxService 374A  
                       __size_of_moteHandler 021A                          _USBStdSetCfgHandler 3214  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 008A  
             USBapp_LEDUpdateStatus@ledCount 003E                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 007E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 56EC                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 012E                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 007A  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 572C  
                              _cdc_trf_state 00EB                         DATAEE_WriteByte@bAdd 0061  
                    __size_of_USBapp_exitCDC 0006                   __end_of_moteRunningProcess 0FEA  
                     ??_moteApp_clearBuffers 0060                       ??_moteApp_clearCommand 0063  
                 ?_moteApp_add8bToDataBuffer 0066                                      _pCDCDst 014E  
                                    _pCDCSrc 0151                        __size_of_getsUSBUSART 00B8  
             __end_of_moteApp_getLightString 5746           __end_of_MOTEapp_SetDataRateSetting 23C6  
                 _MOTEapp_SetDataRateSetting 2264                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 4BDA  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00B9                             _Set_Page_Address 56B2  
                 __size_of_PICoRa_Initialize 0022                         ??_USBCheckStdRequest 001C  
               moteRunningProcess@sleepEvent 00AE                                      ___almod 3F76  
                                    ___fladd 17F2                            _timerMinTickCount 003C  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 04B6  
                                    ___fldiv 1B30                                      ___lbdiv 509C  
                                    ___awmod 4956                                      ___flmul 14A0  
                           ?_TMR3_StartTimer 0001                                      ___fltol 3598  
                                    ___lldiv 46EC                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0028                            ??_USBStallHandler 0001  
                                    ___lwmod 4F94                         oled_putint8@negative 0079  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 4336                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 7940  
                                    __ramtop 0800                                      _delayms 526E  
                          hexToStr@character 0060                                      __ptext0 2C4A  
                                    __ptext1 204A                                      __ptext2 00E8  
                                    __ptext3 3A6E                                      __ptext4 53F4  
                                    __ptext5 43C6                                      __ptext6 579A  
                                    __ptext7 573A                                      __ptext8 42A4  
                                    __ptext9 4CA0                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 0041  
            __end_of_moteApp_lightStringSize 57A0                              __size_of_strcmp 004C  
                  moteRunningProcess@counter 00B3                             oled_setFont@font 0060  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 565E  
                                    _exitUSB 00F8                                 ??_USBSuspend 0016  
                              _oled_clearRow 551A                                    _T2CONbits 000FBA  
            moteApp_add8bToDataBuffer@number 0069                                   ??___xxtofl 0064  
                                  _T3CONbits 000FB1                                   _oled_clear 55FE  
                           ___awmod@dividend 0060                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 5792                                 _LastRS232Out 00E6  
                            i2_USBDeviceInit 2B1E                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 5334                 __end_of_MOTEapp_handlerState 577A  
                     ??_USBapp_getrxByteFlag 0060                           __end_of_USB_CD_Ptr 75FD  
                 moteRunningProcess@readByte 00B0              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 44DA  
                       end_of_initialization 43B8                                 _getsUSBUSART 3CA4  
              sendDataCommand@byteCount_1477 0068                           __end_of_USB_SD_Ptr 75FB  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0034  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066                                __Lmediumconst 75F4  
            _dummy_encapsulated_cmd_response 01D4     moteApp_convertSensorValue@convertedValue 0077  
                                  i2u1019_40 28C0                     ?_USBStdFeatureReqHandler 0001  
             __end_of_MOTEapp_TimerBasedTask 55C4                            _EUSART_Initialize 51CA  
                          _oled_powerControl 56FC                                   _rxByteFlag 00E9  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 00CC                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 4CA0  
                          __end_of_test_oled 44DA               moteJoiningProcess@changeStates 0077  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 43C6                           __end_of_USBSuspend 54F4  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 4172  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 006D  
                         test_switch@timeout 0078                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 0075  
             moteApp_setLightString@stingPos 006D                         __end_of_oled_devInit 47EE  
                   _USBCtrlEPServiceComplete 2E6E                      moteApp_toggleLeds@state 0064  
                                 _responseId 0130                                   _retryCount 0051  
                           ?_moteApp_delayms 0060                                _randomPortNum 00F0  
                   _MOTEapp_setResponseReady 57AC                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 0044                   _USBStatusStageEnabledFlag2 0043  
                              _dataRateValue 00FC                          _USBapp_handlerState 5766  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 0078                               ?_oled_clearRow 0001  
                                 _test_comms 4B0C                       ??_moteApp_getTempValue 0065  
                       __end_of_oled_setFont 569E                                  ___fladd@grs 0073  
                         _Set_Column_Address 55E2                         __end_of_oled_putChar 46EC  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 003E                         __end_of_oled_putint8 4172  
                         _BothEP0OutUOWNsSet 0047             __size_of_moteApp_setSensorsInput 0078  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 5154  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 5752                                    _USTATcopy 0059  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 2F60                     oled_putString@start_page 0075  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 486C                   _moteApp_convertSensorValue 47EE  
                  __end_of_EUSART_Initialize 5202                    __end_of_oled_powerControl 570C  
                    oled_putint8@station_dot 0077                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 3BEA                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                               ?_oled_putUint8 0077  
                          putUSBUSART@length 0062                          ?_ADC_TempConversion 0001  
                   ??_oled_initialDispayLine 0061                        _moteApp_getLightValue 4E66  
                     _USBCtrlTrfSetupHandler 45E6                         ??_Set_Column_Address 0061  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 45E6  
                      __end_of_USBDeviceInit 2B1E                               _TMRapp_Handler 2D62  
                             _USBapp_Handler 3E12                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 54CC  
                              __pidataCOMRAM 57C8                                 _EUSART_Write 50DA  
                      sendDataCommand@string 0061                      __end_ofi2_USBDeviceInit 2C4A  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 4A36  
                          __size_of_TMR3_ISR 001E                               _ADC_Initialize 5618  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 4F94  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 5364  
                          _USBBusIsSuspended 0049                     oled_writeCommand@command 0060  
                             __end_of_strcmp 4F00                                  ?_oled_clear 0001  
                        start_initialization 4336                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
        __size_of_oled_regulorResistorSelect 0010              __size_of_PIN_MANAGER_Initialize 004C  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 575C              __end_of_moteApp_addToDataBuffer 4CFE  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 523A                            __size_ofi2_memset 002C  
                                  _OledFont0 75FD                 __end_of_USBConfigureEndpoint 42A4  
            __end_of_USBStdFeatureReqHandler 204A                     __size_of_sendDataCommand 00BE  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 3A6E                                _periodicState 00FA  
                             _USBapp_exitCDC 57A0                     __end_of_USBCtrlEPService 3818  
       __end_of_USART_mySetLineCodingHandler 4E10        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 4DB6                   __end_of_EUSART_FlushBuffer 501A  
                        DATAEE_ReadByte@bAdd 0060                __size_of_USBapp_setrxByteFlag 0008  
                              _moteModeState 0054                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0036  
                   __size_of_TMR1_Initialize 0032                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 3EC6  
                     __end_of_TMRapp_Handler 2E6E               __end_ofi2_USBTransferOnePacket 3CA4  
                       _TMRapp_ClearBitFlags 578A                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 006A                          _USBStdGetDscHandler 28C4  
                       _MOTEapp_handlerState 5770                       __end_of_ADC_Initialize 5632  
                                __pdataBANK0 00F8                                  __pdataBANK1 01F0  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 015A                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0074  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                     _USBActiveConfiguration 005A               __end_of_USBStdGetStatusHandler 40CC  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 53C4                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 0032  
                 service_pushbutton@PB_Timer 014A                                __pcstackBANK0 0060  
               __size_of_USBCtrlTrfInHandler 00E2                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 56C6                            __size_of___xxtofl 0154  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00F3  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 57A6  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 53F4  
             moteRunningProcess@messageReady 00AD                  __end_of_PICoRa_test_powerup 4956  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 575C  
                 __end_of_USBWakeFromSuspend 5450                   __size_of_EUSART_Initialize 0038  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 002E  
                            _USBStallHandler 501A                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 51CA                   __end_of_USBCheckCDCRequest 3F76  
                            ??_oled_putUint8 0079                         oled_putString@string 0072  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0120  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 5648  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 4F00  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0050  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75F4  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                  __ptext100 5618                                    __ptext101 5770  
                                   ?___lbdiv 0060                                    __ptext110 374A  
                                  __ptext102 5674                                    __ptext111 45E6  
                                  __ptext120 4CFE                                    __ptext112 2E6E  
                                  __ptext104 5792                                    __ptext121 4E10  
                                  __ptext113 4172                                    __ptext105 2792  
                                  __ptext130 32F6                                    __ptext122 4BDA  
                                  __ptext114 3132                                    __ptext106 2B1E  
                                  __ptext131 3676                                    __ptext123 3BEA  
                                  __ptext115 3214                                    __ptext107 5422  
                                  __ptext140 57C4                                    __ptext132 4DB6  
                                  __ptext124 5154                                    __ptext116 5450  
                                  __ptext108 54CC                                    __ptext141 0000  
                                  __ptext133 5202                                    __ptext125 4210  
                                  __ptext117 4024                                    __ptext109 501A  
                                  __ptext134 46EC                                    __ptext126 3EC6  
                                  __ptext118 28C4                                    __ptext135 57B2  
                                  __ptext127 4D5A                                    __ptext119 1DE6  
                                  __ptext136 55C4                                    __ptext128 265E  
                                  __ptext137 5746                                    __ptext129 39AA  
                                  __ptext138 5394                                    __ptext139 53C4  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 3132  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00E0                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E3  
                               _eusartRxTail 00DF                 __size_of_moteApp_testSensors 00C6  
                               _eusartTxTail 00E2                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0082                           _moteRunningProcess 00E8  
                          _moduleBufferIndex 00F1                                     ?_delayms 0060  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BB  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00A6  
                    _eusartTxBufferRemaining 00E1                         _USBTransferOnePacket 3B2C  
                                  _mainState 0056                     __size_of_TMR1_StartTimer 0004  
                    _moteApp_setSensorsInput 486C                       moteHandler@buttonPress 00BA  
                        ?_moteRunningProcess 00AC                 __end_of_USBCtrlTrfOutHandler 4DB6  
                                  _minTicker 004F                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 57C4                       _moteApp_setLightString 4AA2  
                                _ep_data_out 00D0                 __size_of_USBCtrlTrfRxService 0134  
                                  _secTicker 00EF                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 0060                          oled_putint8@numData 007A  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 476E  
         __end_of_oled_regulorResistorSelect 56FC                   _oled_regulorResistorSelect 56EC  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 0072  
                          _dataRateSelection 005C                             _timerMsTickCount 00D8  
                                  _oled_init 5304                 __size_of_USBCtrlTrfTxService 00D4  
          __end_of_MOTEapp_getModuleResponse 4BDA                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 565E  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 0068  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 568A  
                                  _moteState 00FF                            ??_sendDataCommand 0066  
                              _operationType 00F6                        __size_of_moduleResync 0084  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 14A0  
        __size_of_INTERRUPT_InterruptManager 00DC                                 _oled_putChar 466A  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 0092                __size_of_moteApp_clearCommand 0010  
                                   _PIR3bits 000FA4                                     i2u615_40 1FB8  
                                   i2u562_40 36F2                                     i2u562_47 36E8  
                                   i2u650_48 276E                                     i2u650_49 2782  
                                   i2u564_40 3732                                     i2u564_47 3728  
                                   i2u549_40 4E5A                                     i2u590_40 293C  
                                   i2u590_47 2932                                     i2u567_40 471E  
                                   i2u591_40 296C                                     i2u591_47 2962  
                  USBCtrlEPService@setup_cnt 001E                                     i2u832_48 33BA  
                                   i2u593_40 29BE                                     i2u832_49 33CE  
                                   i2u593_47 29B4                                     i2u586_40 328A  
                                   i2u955_40 37E8                                     i2u964_40 2B7C  
                                   i2u967_40 2C1C                                     _RCONbits 000FD0  
                               _oled_putint8 40CC                                ??_putUSBUSART 0063  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0042  
                                   _SSP1CON1 000FC6                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 5746                      __size_of_oled_putString 006C  
                                   _TMR3_ISR 55C4                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 5782  
                                  _test_leds 4C40                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 4210  
                                  _test_oled 4450                        ??_USBapp_exitCDCState 0060  
           __size_of_USBStdFeatureReqHandler 0264                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                          ___wmul@multiplier 0060          moteRunningProcess@sizeOfUpdate_1339 00B2  
                      ?_USBTransferOnePacket 0060                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0078                    _moteApp_add8bToDataBuffer 3D5C  
                    __size_of_oled_writeData 0016                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 00B8  
                               _RemoteWakeup 004A                          __end_of_sendCommand 5394  
                                   i2_memset 5450                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 570C                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 00E7            moteApp_setLightString@lightString 006B  
                    __end_of_USBStallHandler 505C                          __end_of_moduleSleep 551A  
                        __end_of_moteHandler 2264                                  _EUSART_Read 5190  
                          _moteApp_GoToSleep 33D8                                  _INTCON3bits 000FF0  
                                  copy_data0 4362                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                                 _moduleResync 4562  
                __end_of_USBStdSetCfgHandler 32F6                            ?_DATAEE_WriteByte 0060  
              __size_of_USBapp_getrxByteFlag 0006                           ?_moteApp_GoToSleep 0001  
                                 ?_oled_init 0001                            ??_TMR2_Initialize 0060  
                              ??_test_switch 0077  MOTEapp_getModuleResponse@terminatorReceived 0061  
                ?_moteApp_convertSensorValue 0072                             __size_of_EndLine 000E  
                         ??_DATAEE_WriteByte 0061                           __end_of_device_dsc 79BA  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                    USBStdGetStatusHandler@p 0002                                     __Hrparam 0000  
                        ??_moteApp_GoToSleep 006E                                    memcpy@tmp 006A  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 00AE  
                           __size_of___fladd 033E                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 02B6  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007A                                 _selectedFont 01F0  
                           __size_of___lldiv 0082                              _oled_setDisplay 547C  
           moteApp_clearBuffers@counter_1564 0061             moteApp_clearBuffers@counter_1565 0062  
           moteApp_clearBuffers@counter_1566 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 5562  
                                _line_coding 01DC                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 0052  
                               ??_oled_clear 006E                                     ___xxtofl 23C6  
                                _menuTimeout 00FB                     __size_of_moteApp_delayms 0032  
                  __end_of_moteApp_GoToSleep 34B8                __size_of_moteApp_getTempValue 0040  
                    __size_of_USBDeviceTasks 0132                                     _appTimer 00F7  
                                   _appState 0055                                     __ptext10 3D5C  
                                   __ptext11 33D8                                     __ptext20 5782  
                                   __ptext12 5304                                     __ptext21 54F4  
                                   __ptext13 568A                                   _T1GCONbits 000FCC  
                                   __ptext30 57A0                                     __ptext22 4562  
                                   __ptext14 547C                                     __ptext31 2D62  
                                   __ptext23 5752                                     __ptext15 476E  
                                   __ptext40 34B8                                     __ptext32 4F94  
                                   __ptext24 2264                                     __ptext16 569E  
                                   __ptext41 5540                                     __ptext33 3F76  
                                   __ptext25 0FEA                                     __ptext17 56EC  
                                   __ptext50 48E4                                     __ptext42 3CA4  
                                   __ptext34 578A                                     __ptext26 44DA  
                                   __ptext18 56FC                                     __ptext51 3818  
                                   __ptext43 57A6                                     __ptext35 55A6  
                                   __ptext27 4EB4                                     __ptext19 570C  
                                   __ptext60 509C                                     __ptext52 4450  
                                   __ptext44 57AC                                     __ptext36 571C  
                                   __ptext28 5118                                     __ptext61 4956  
                                   __ptext53 4C40                                     __ptext45 251A  
                                   __ptext37 5766                                     __ptext29 575C  
                                   __ptext70 52A0                                     __ptext62 55FE  
                                   __ptext54 4B0C                                     __ptext46 3B2C  
                                   __ptext38 3E12                                     __ptext71 505C  
                                   __ptext63 551A                                     __ptext55 304A  
                                   __ptext47 29F2                                     __ptext39 49C8  
                                   __ptext80 47EE                                     __ptext72 4E66  
                                   __ptext64 466A                                     __ptext56 526E  
                                   __ptext48 5334                                     __ptext81 54A4  
                                   __ptext73 5364                                     __ptext65 5632  
                                   __ptext57 38E4                                     __ptext49 523A  
                                   __ptext90 5584                                     __ptext82 2F60  
                                   __ptext74 572C                                     __ptext66 56B2  
                                   __ptext58 40CC                                     __ptext91 57B8  
                                   __ptext83 23C6                                     __ptext75 50DA  
                                   __ptext67 55E2                                     __ptext59 4A36  
                                   __ptext92 56C6                                     __ptext84 3598  
                                   __ptext76 4AA2                                     __ptext68 5648  
                                   __ptext93 57BC                                     __ptext85 14A0  
                                   __ptext77 4F4C                                     __ptext69 486C  
                                   __ptext94 52D2                                     __ptext86 1B30  
                                   __ptext78 4B74                                     __ptext95 57C0  
                                   __ptext87 17F2                                     __ptext79 5190  
                                   __ptext96 4F00                                     __ptext88 4FD8  
                                   __ptext97 565E                                     __ptext89 5562  
                                   __ptext98 51CA                                     __ptext99 56DA  
       __end_of_USBapp_CdcEmulatorInitialize 4E66        __size_of_USBapp_CdcEmulatorInitialize 0056  
               _USBapp_CdcEmulatorInitialize 4E10                                 _SSP1CON1bits 000FC6  
                                   _dotCount 004E                                     _hexToStr 53F4  
                         _service_pushbutton 49C8                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 0088               __end_of_USBCtrlTrfSetupHandler 466A  
                              __size_of_main 0118                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0016                               _Contrast_level 005B  
                                   _rnModule 00F9                           oled_putint8@number 0080  
                                 strncmp@len 0064                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 0060                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 0072                      __end_of_oled_displayOff 578A  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 32F6                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 004D                           __end_of_oled_clear 5618  
                        __end_of_test_switch 38E4                                     _outPipes 00BC  
                       _USBCtrlTrfOutHandler 4D5A                                     int$flags 005E  
                                   _usbState 00EA                    _USBCtrlEPAllowStatusStage 39AA  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00E4                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 5364                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 4FD8  
                               ??_test_comms 0077                 __end_of_USBapp_setrxByteFlag 579A  
                                _moduleSleep 54F4                                  _moteHandler 204A  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 0045                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 5770  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 019A  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 38E4  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 012C  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4D5A  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 4CFE  
             moteJoiningProcess@messageReady 007C              __end_of_moteApp_setSensorsInput 48E4  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0077                             ??_TMRapp_Handler 006A  
                       moteHandler@gotoSleep 00B7                 __size_ofi2_EUSART_Initialize 0038  
                                  strncmp@s1 0060                                    strncmp@s2 0062  
                           ??_ADC_Initialize 0060                           __end_of_test_comms 4B74  
                       ??_EUSART_FlushBuffer 0060                      __end_of_oled_setDisplay 54A4  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00EE  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 4A36                                  _putUSBUSART 5540  
                         _EUSART_Receive_ISR 53C4                            oled_clearRow@page 006C  
                       __CFG_CPUDIV$NOCLKDIV 000000                          _USBCtrlTrfRxService 265E  
                         _USBWakeFromSuspend 5422                                  ??_test_leds 0077  
                              _powerOnStatus 00F5                                  ??_test_oled 0077  
                    _USBStdFeatureReqHandler 1DE6                         ?_moteApp_testSensors 0001  
    __end_of_USBapp_DeviceCdcEmulatorHandler 3598     __size_of_USBapp_DeviceCdcEmulatorHandler 00E0  
           ?_USBapp_DeviceCdcEmulatorHandler 0001            ??_USBapp_DeviceCdcEmulatorHandler 006D  
            _USBapp_DeviceCdcEmulatorHandler 34B8                           _USBCheckCDCRequest 3EC6  
                        _USBCtrlTrfTxService 3676                          __end_of_TMRapp_Tick 57B8  
                      __end_of_oled_clearRow 5540                                  _temperature 00DA  
                        ?_EUSART_Receive_ISR 0001                               _oled_writeData 5632  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 0060  
                                   strcmp@s2 0062                      ?_moteApp_setLightString 006B  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 0062  
                           ??_USBapp_exitCDC 0060                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 0057                              ___lwmod@counter 0064  
                        ?_USBCheckCDCRequest 0001                   __size_of_moteApp_GoToSleep 00E0  
                  i2USBTransferOnePacket@dir 0001                           _moteApp_toggleLeds 304A  
                  i2USBTransferOnePacket@len 0004                          USBEnableEndpoint@ep 000C  
                            _endpoint_number 0048                                   _WDTCONbits 000FD1  
                            _sendDataCommand 3A6E                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0077                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 4F4C                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0046  
                                _test_switch 3818                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 265E                              _TMR1_Initialize 52D2  
          moteJoiningProcess@joiningComplete 007B                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 4450                       __end_of_oled_putString 4AA2  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75FB  
               __size_of_PICoRa_test_powerup 0072  
