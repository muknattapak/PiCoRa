

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Oct 24 15:48:09 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239  0000                     
   240                           ; Version 1.45
   241                           ; Generated 16/11/2017 GMT
   242                           ; 
   243                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   244                           ; All rights reserved.
   245                           ; 
   246                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   247                           ; 
   248                           ; Redistribution and use in source and binary forms, with or without modification, are
   249                           ; permitted provided that the following conditions are met:
   250                           ; 
   251                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   252                           ;        conditions and the following disclaimer.
   253                           ; 
   254                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   255                           ;        of conditions and the following disclaimer in the documentation and/or other
   256                           ;        materials provided with the distribution.
   257                           ; 
   258                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   259                           ;        software without specific prior written permission.
   260                           ; 
   261                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   262                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   263                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   264                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   265                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   266                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   267                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   268                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   269                           ; 
   270                           ; 
   271                           ; Code-generator required, PIC18LF46K22 Definitions
   272                           ; 
   273                           ; SFR Addresses
   274  0000                     
   275 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   276 ;;TransmissionErrorCallback@param	offset=-1 (param)
   277 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   278 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   279 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   282 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   283 ;;_LORAWAN_LinkCheckCallback$2523	offset	0
   284 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   285 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   286 ;;AutomaticReplyCallback@param	offset=-1 (param)
   287 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   288 ;;AckRetransmissionCallback@param	offset=-1 (param)
   289 ;;_UpdateJoinSuccessState$2540	offset	0
   290 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   291                           
   292                           	psect	idataCOMRAM
   293  007E88                     __pidataCOMRAM:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _ticksToScheduledInterrupt
   297  007E88  FFFF               	dw	65535
   298  007E8A  FFFF               	dw	65535
   299                           
   300                           	psect	idataBANK1
   301  007544                     __pidataBANK1:
   302                           	opt stack 0
   303                           
   304                           ;initializer for GenerateSubkey@F7103
   305  007544  00                 	db	0
   306  007545  00                 	db	0
   307  007546  00                 	db	0
   308  007547  00                 	db	0
   309  007548  00                 	db	0
   310  007549  00                 	db	0
   311  00754A  00                 	db	0
   312  00754B  00                 	db	0
   313  00754C  00                 	db	0
   314  00754D  00                 	db	0
   315  00754E  00                 	db	0
   316  00754F  00                 	db	0
   317  007550  00                 	db	0
   318  007551  00                 	db	0
   319  007552  00                 	db	0
   320  007553  87                 	db	135
   321                           
   322                           ;initializer for _randx
   323  007554  0001               	dw	1
   324  007556  0000               	dw	0
   325                           
   326                           ;initializer for _devAddr
   327  007558  000F               	dw	15
   328  00755A  1100               	dw	4352
   329                           
   330                           ;initializer for _appSKey
   331  00755C  3C                 	db	60
   332  00755D  8F                 	db	143
   333  00755E  26                 	db	38
   334  00755F  27                 	db	39
   335  007560  39                 	db	57
   336  007561  BF                 	db	191
   337  007562  E3                 	db	227
   338  007563  B7                 	db	183
   339  007564  BC                 	db	188
   340  007565  08                 	db	8
   341  007566  26                 	db	38
   342  007567  99                 	db	153
   343  007568  1A                 	db	26
   344  007569  D0                 	db	208
   345  00756A  50                 	db	80
   346  00756B  4D                 	db	77
   347                           
   348                           ;initializer for _nwkSKey
   349  00756C  2B                 	db	43
   350  00756D  7E                 	db	126
   351  00756E  15                 	db	21
   352  00756F  16                 	db	22
   353  007570  28                 	db	40
   354  007571  AE                 	db	174
   355  007572  D2                 	db	210
   356  007573  A6                 	db	166
   357  007574  AB                 	db	171
   358  007575  F7                 	db	247
   359  007576  15                 	db	21
   360  007577  88                 	db	136
   361  007578  09                 	db	9
   362  007579  CF                 	db	207
   363  00757A  4F                 	db	79
   364  00757B  3C                 	db	60
   365                           
   366                           	psect	mediumconst
   367  00FE1E                     __pmediumconst:
   368                           	opt stack 0
   369  00FE1E  00                 	db	0
   370  00FE1F                     _STable:
   371                           	opt stack 0
   372  00FE1F  63                 	db	99
   373  00FE20  7C                 	db	124
   374  00FE21  77                 	db	119
   375  00FE22  7B                 	db	123
   376  00FE23  F2                 	db	242
   377  00FE24  6B                 	db	107
   378  00FE25  6F                 	db	111
   379  00FE26  C5                 	db	197
   380  00FE27  30                 	db	48
   381  00FE28  01                 	db	1
   382  00FE29  67                 	db	103
   383  00FE2A  2B                 	db	43
   384  00FE2B  FE                 	db	254
   385  00FE2C  D7                 	db	215
   386  00FE2D  AB                 	db	171
   387  00FE2E  76                 	db	118
   388  00FE2F  CA                 	db	202
   389  00FE30  82                 	db	130
   390  00FE31  C9                 	db	201
   391  00FE32  7D                 	db	125
   392  00FE33  FA                 	db	250
   393  00FE34  59                 	db	89
   394  00FE35  47                 	db	71
   395  00FE36  F0                 	db	240
   396  00FE37  AD                 	db	173
   397  00FE38  D4                 	db	212
   398  00FE39  A2                 	db	162
   399  00FE3A  AF                 	db	175
   400  00FE3B  9C                 	db	156
   401  00FE3C  A4                 	db	164
   402  00FE3D  72                 	db	114
   403  00FE3E  C0                 	db	192
   404  00FE3F  B7                 	db	183
   405  00FE40  FD                 	db	253
   406  00FE41  93                 	db	147
   407  00FE42  26                 	db	38
   408  00FE43  36                 	db	54
   409  00FE44  3F                 	db	63
   410  00FE45  F7                 	db	247
   411  00FE46  CC                 	db	204
   412  00FE47  34                 	db	52
   413  00FE48  A5                 	db	165
   414  00FE49  E5                 	db	229
   415  00FE4A  F1                 	db	241
   416  00FE4B  71                 	db	113
   417  00FE4C  D8                 	db	216
   418  00FE4D  31                 	db	49
   419  00FE4E  15                 	db	21
   420  00FE4F  04                 	db	4
   421  00FE50  C7                 	db	199
   422  00FE51  23                 	db	35
   423  00FE52  C3                 	db	195
   424  00FE53  18                 	db	24
   425  00FE54  96                 	db	150
   426  00FE55  05                 	db	5
   427  00FE56  9A                 	db	154
   428  00FE57  07                 	db	7
   429  00FE58  12                 	db	18
   430  00FE59  80                 	db	128
   431  00FE5A  E2                 	db	226
   432  00FE5B  EB                 	db	235
   433  00FE5C  27                 	db	39
   434  00FE5D  B2                 	db	178
   435  00FE5E  75                 	db	117
   436  00FE5F  09                 	db	9
   437  00FE60  83                 	db	131
   438  00FE61  2C                 	db	44
   439  00FE62  1A                 	db	26
   440  00FE63  1B                 	db	27
   441  00FE64  6E                 	db	110
   442  00FE65  5A                 	db	90
   443  00FE66  A0                 	db	160
   444  00FE67  52                 	db	82
   445  00FE68  3B                 	db	59
   446  00FE69  D6                 	db	214
   447  00FE6A  B3                 	db	179
   448  00FE6B  29                 	db	41
   449  00FE6C  E3                 	db	227
   450  00FE6D  2F                 	db	47
   451  00FE6E  84                 	db	132
   452  00FE6F  53                 	db	83
   453  00FE70  D1                 	db	209
   454  00FE71  00                 	db	0
   455  00FE72  ED                 	db	237
   456  00FE73  20                 	db	32
   457  00FE74  FC                 	db	252
   458  00FE75  B1                 	db	177
   459  00FE76  5B                 	db	91
   460  00FE77  6A                 	db	106
   461  00FE78  CB                 	db	203
   462  00FE79  BE                 	db	190
   463  00FE7A  39                 	db	57
   464  00FE7B  4A                 	db	74
   465  00FE7C  4C                 	db	76
   466  00FE7D  58                 	db	88
   467  00FE7E  CF                 	db	207
   468  00FE7F  D0                 	db	208
   469  00FE80  EF                 	db	239
   470  00FE81  AA                 	db	170
   471  00FE82  FB                 	db	251
   472  00FE83  43                 	db	67
   473  00FE84  4D                 	db	77
   474  00FE85  33                 	db	51
   475  00FE86  85                 	db	133
   476  00FE87  45                 	db	69
   477  00FE88  F9                 	db	249
   478  00FE89  02                 	db	2
   479  00FE8A  7F                 	db	127
   480  00FE8B  50                 	db	80
   481  00FE8C  3C                 	db	60
   482  00FE8D  9F                 	db	159
   483  00FE8E  A8                 	db	168
   484  00FE8F  51                 	db	81
   485  00FE90  A3                 	db	163
   486  00FE91  40                 	db	64
   487  00FE92  8F                 	db	143
   488  00FE93  92                 	db	146
   489  00FE94  9D                 	db	157
   490  00FE95  38                 	db	56
   491  00FE96  F5                 	db	245
   492  00FE97  BC                 	db	188
   493  00FE98  B6                 	db	182
   494  00FE99  DA                 	db	218
   495  00FE9A  21                 	db	33
   496  00FE9B  10                 	db	16
   497  00FE9C  FF                 	db	255
   498  00FE9D  F3                 	db	243
   499  00FE9E  D2                 	db	210
   500  00FE9F  CD                 	db	205
   501  00FEA0  0C                 	db	12
   502  00FEA1  13                 	db	19
   503  00FEA2  EC                 	db	236
   504  00FEA3  5F                 	db	95
   505  00FEA4  97                 	db	151
   506  00FEA5  44                 	db	68
   507  00FEA6  17                 	db	23
   508  00FEA7  C4                 	db	196
   509  00FEA8  A7                 	db	167
   510  00FEA9  7E                 	db	126
   511  00FEAA  3D                 	db	61
   512  00FEAB  64                 	db	100
   513  00FEAC  5D                 	db	93
   514  00FEAD  19                 	db	25
   515  00FEAE  73                 	db	115
   516  00FEAF  60                 	db	96
   517  00FEB0  81                 	db	129
   518  00FEB1  4F                 	db	79
   519  00FEB2  DC                 	db	220
   520  00FEB3  22                 	db	34
   521  00FEB4  2A                 	db	42
   522  00FEB5  90                 	db	144
   523  00FEB6  88                 	db	136
   524  00FEB7  46                 	db	70
   525  00FEB8  EE                 	db	238
   526  00FEB9  B8                 	db	184
   527  00FEBA  14                 	db	20
   528  00FEBB  DE                 	db	222
   529  00FEBC  5E                 	db	94
   530  00FEBD  0B                 	db	11
   531  00FEBE  DB                 	db	219
   532  00FEBF  E0                 	db	224
   533  00FEC0  32                 	db	50
   534  00FEC1  3A                 	db	58
   535  00FEC2  0A                 	db	10
   536  00FEC3  49                 	db	73
   537  00FEC4  06                 	db	6
   538  00FEC5  24                 	db	36
   539  00FEC6  5C                 	db	92
   540  00FEC7  C2                 	db	194
   541  00FEC8  D3                 	db	211
   542  00FEC9  AC                 	db	172
   543  00FECA  62                 	db	98
   544  00FECB  91                 	db	145
   545  00FECC  95                 	db	149
   546  00FECD  E4                 	db	228
   547  00FECE  79                 	db	121
   548  00FECF  E7                 	db	231
   549  00FED0  C8                 	db	200
   550  00FED1  37                 	db	55
   551  00FED2  6D                 	db	109
   552  00FED3  8D                 	db	141
   553  00FED4  D5                 	db	213
   554  00FED5  4E                 	db	78
   555  00FED6  A9                 	db	169
   556  00FED7  6C                 	db	108
   557  00FED8  56                 	db	86
   558  00FED9  F4                 	db	244
   559  00FEDA  EA                 	db	234
   560  00FEDB  65                 	db	101
   561  00FEDC  7A                 	db	122
   562  00FEDD  AE                 	db	174
   563  00FEDE  08                 	db	8
   564  00FEDF  BA                 	db	186
   565  00FEE0  78                 	db	120
   566  00FEE1  25                 	db	37
   567  00FEE2  2E                 	db	46
   568  00FEE3  1C                 	db	28
   569  00FEE4  A6                 	db	166
   570  00FEE5  B4                 	db	180
   571  00FEE6  C6                 	db	198
   572  00FEE7  E8                 	db	232
   573  00FEE8  DD                 	db	221
   574  00FEE9  74                 	db	116
   575  00FEEA  1F                 	db	31
   576  00FEEB  4B                 	db	75
   577  00FEEC  BD                 	db	189
   578  00FEED  8B                 	db	139
   579  00FEEE  8A                 	db	138
   580  00FEEF  70                 	db	112
   581  00FEF0  3E                 	db	62
   582  00FEF1  B5                 	db	181
   583  00FEF2  66                 	db	102
   584  00FEF3  48                 	db	72
   585  00FEF4  03                 	db	3
   586  00FEF5  F6                 	db	246
   587  00FEF6  0E                 	db	14
   588  00FEF7  61                 	db	97
   589  00FEF8  35                 	db	53
   590  00FEF9  57                 	db	87
   591  00FEFA  B9                 	db	185
   592  00FEFB  86                 	db	134
   593  00FEFC  C1                 	db	193
   594  00FEFD  1D                 	db	29
   595  00FEFE  9E                 	db	158
   596  00FEFF  E1                 	db	225
   597  00FF00  F8                 	db	248
   598  00FF01  98                 	db	152
   599  00FF02  11                 	db	17
   600  00FF03  69                 	db	105
   601  00FF04  D9                 	db	217
   602  00FF05  8E                 	db	142
   603  00FF06  94                 	db	148
   604  00FF07  9B                 	db	155
   605  00FF08  1E                 	db	30
   606  00FF09  87                 	db	135
   607  00FF0A  E9                 	db	233
   608  00FF0B  CE                 	db	206
   609  00FF0C  55                 	db	85
   610  00FF0D  28                 	db	40
   611  00FF0E  DF                 	db	223
   612  00FF0F  8C                 	db	140
   613  00FF10  A1                 	db	161
   614  00FF11  89                 	db	137
   615  00FF12  0D                 	db	13
   616  00FF13  BF                 	db	191
   617  00FF14  E6                 	db	230
   618  00FF15  42                 	db	66
   619  00FF16  68                 	db	104
   620  00FF17  41                 	db	65
   621  00FF18  99                 	db	153
   622  00FF19  2D                 	db	45
   623  00FF1A  0F                 	db	15
   624  00FF1B  B0                 	db	176
   625  00FF1C  54                 	db	84
   626  00FF1D  BB                 	db	187
   627  00FF1E  16                 	db	22
   628  00FF1F                     __end_of_STable:
   629                           	opt stack 0
   630  00FF1F                     _spreadingFactor:
   631                           	opt stack 0
   632  00FF1F  0A                 	db	10
   633  00FF20  09                 	db	9
   634  00FF21  08                 	db	8
   635  00FF22  07                 	db	7
   636  00FF23  08                 	db	8
   637  00FF24  00                 	db	0
   638  00FF25  00                 	db	0
   639  00FF26  00                 	db	0
   640  00FF27  0C                 	db	12
   641  00FF28  0B                 	db	11
   642  00FF29  0A                 	db	10
   643  00FF2A  09                 	db	9
   644  00FF2B  08                 	db	8
   645  00FF2C  07                 	db	7
   646  00FF2D                     __end_of_spreadingFactor:
   647                           	opt stack 0
   648  00FF2D                     _rxWindowOffset:
   649                           	opt stack 0
   650  00FF2D  0C                 	db	12
   651  00FF2E  06                 	db	6
   652  00FF2F  01                 	db	1
   653  00FF30  FE                 	db	254
   654  00FF31  FC                 	db	252
   655  00FF32  00                 	db	0
   656  00FF33  00                 	db	0
   657  00FF34  00                 	db	0
   658  00FF35  0C                 	db	12
   659  00FF36  06                 	db	6
   660  00FF37  01                 	db	1
   661  00FF38  FE                 	db	254
   662  00FF39  FC                 	db	252
   663  00FF3A  FC                 	db	252
   664  00FF3B                     __end_of_rxWindowOffset:
   665                           	opt stack 0
   666  00FF3B                     _maxPayloadSize:
   667                           	opt stack 0
   668  00FF3B  0B                 	db	11
   669  00FF3C  35                 	db	53
   670  00FF3D  81                 	db	129
   671  00FF3E  F2                 	db	242
   672  00FF3F  F2                 	db	242
   673  00FF40  00                 	db	0
   674  00FF41  00                 	db	0
   675  00FF42  00                 	db	0
   676  00FF43  35                 	db	53
   677  00FF44  81                 	db	129
   678  00FF45  F2                 	db	242
   679  00FF46  F2                 	db	242
   680  00FF47  F2                 	db	242
   681  00FF48  F2                 	db	242
   682  00FF49                     __end_of_maxPayloadSize:
   683                           	opt stack 0
   684  00FF49                     _rxWindowSize:
   685                           	opt stack 0
   686  00FF49  05                 	db	5
   687  00FF4A  05                 	db	5
   688  00FF4B  07                 	db	7
   689  00FF4C  0C                 	db	12
   690  00FF4D  16                 	db	22
   691  00FF4E  00                 	db	0
   692  00FF4F  00                 	db	0
   693  00FF50  00                 	db	0
   694  00FF51  05                 	db	5
   695  00FF52  05                 	db	5
   696  00FF53  07                 	db	7
   697  00FF54  0C                 	db	12
   698  00FF55  16                 	db	22
   699  00FF56  2A                 	db	42
   700  00FF57                     __end_of_rxWindowSize:
   701                           	opt stack 0
   702  00FF57                     _txPower915:
   703                           	opt stack 0
   704  00FF57  1E                 	db	30
   705  00FF58  1C                 	db	28
   706  00FF59  1A                 	db	26
   707  00FF5A  18                 	db	24
   708  00FF5B  16                 	db	22
   709  00FF5C  14                 	db	20
   710  00FF5D  12                 	db	18
   711  00FF5E  10                 	db	16
   712  00FF5F  0E                 	db	14
   713  00FF60  0C                 	db	12
   714  00FF61  0A                 	db	10
   715  00FF62                     __end_of_txPower915:
   716                           	opt stack 0
   717  00FF62                     _macEndDevCmdReplyLen:
   718                           	opt stack 0
   719  00FF62  01                 	db	1
   720  00FF63  02                 	db	2
   721  00FF64  01                 	db	1
   722  00FF65  02                 	db	2
   723  00FF66  03                 	db	3
   724  00FF67  02                 	db	2
   725  00FF68  01                 	db	1
   726  00FF69                     __end_of_macEndDevCmdReplyLen:
   727                           	opt stack 0
   728  00FF69                     _DefaultChannels915:
   729                           	opt stack 0
   730  00FF69  01                 	db	1
   731  00FF6A  30                 	db	48
   732  00FF6B  01                 	db	1
   733  00FF6C  30                 	db	48
   734  00FF6D  01                 	db	1
   735  00FF6E  30                 	db	48
   736  00FF6F  01                 	db	1
   737  00FF70  30                 	db	48
   738  00FF71  01                 	db	1
   739  00FF72  30                 	db	48
   740  00FF73  01                 	db	1
   741  00FF74  30                 	db	48
   742  00FF75  01                 	db	1
   743  00FF76  30                 	db	48
   744  00FF77  01                 	db	1
   745  00FF78  30                 	db	48
   746  00FF79  00                 	db	0
   747  00FF7A  30                 	db	48
   748  00FF7B  00                 	db	0
   749  00FF7C  30                 	db	48
   750  00FF7D  00                 	db	0
   751  00FF7E  30                 	db	48
   752  00FF7F  00                 	db	0
   753  00FF80  30                 	db	48
   754  00FF81  00                 	db	0
   755  00FF82  30                 	db	48
   756  00FF83  00                 	db	0
   757  00FF84  30                 	db	48
   758  00FF85  00                 	db	0
   759  00FF86  30                 	db	48
   760  00FF87  00                 	db	0
   761  00FF88  30                 	db	48
   762  00FF89  00                 	db	0
   763  00FF8A  30                 	db	48
   764  00FF8B  00                 	db	0
   765  00FF8C  30                 	db	48
   766  00FF8D  00                 	db	0
   767  00FF8E  30                 	db	48
   768  00FF8F  00                 	db	0
   769  00FF90  30                 	db	48
   770  00FF91  00                 	db	0
   771  00FF92  30                 	db	48
   772  00FF93  00                 	db	0
   773  00FF94  30                 	db	48
   774  00FF95  00                 	db	0
   775  00FF96  30                 	db	48
   776  00FF97  00                 	db	0
   777  00FF98  30                 	db	48
   778  00FF99  00                 	db	0
   779  00FF9A  30                 	db	48
   780  00FF9B  00                 	db	0
   781  00FF9C  30                 	db	48
   782  00FF9D  00                 	db	0
   783  00FF9E  30                 	db	48
   784  00FF9F  00                 	db	0
   785  00FFA0  30                 	db	48
   786  00FFA1  00                 	db	0
   787  00FFA2  30                 	db	48
   788  00FFA3  00                 	db	0
   789  00FFA4  30                 	db	48
   790  00FFA5  00                 	db	0
   791  00FFA6  30                 	db	48
   792  00FFA7  00                 	db	0
   793  00FFA8  30                 	db	48
   794  00FFA9  00                 	db	0
   795  00FFAA  30                 	db	48
   796  00FFAB  00                 	db	0
   797  00FFAC  30                 	db	48
   798  00FFAD  00                 	db	0
   799  00FFAE  30                 	db	48
   800  00FFAF  00                 	db	0
   801  00FFB0  30                 	db	48
   802  00FFB1  00                 	db	0
   803  00FFB2  30                 	db	48
   804  00FFB3  00                 	db	0
   805  00FFB4  30                 	db	48
   806  00FFB5  00                 	db	0
   807  00FFB6  30                 	db	48
   808  00FFB7  00                 	db	0
   809  00FFB8  30                 	db	48
   810  00FFB9  00                 	db	0
   811  00FFBA  30                 	db	48
   812  00FFBB  00                 	db	0
   813  00FFBC  30                 	db	48
   814  00FFBD  00                 	db	0
   815  00FFBE  30                 	db	48
   816  00FFBF  00                 	db	0
   817  00FFC0  30                 	db	48
   818  00FFC1  00                 	db	0
   819  00FFC2  30                 	db	48
   820  00FFC3  00                 	db	0
   821  00FFC4  30                 	db	48
   822  00FFC5  00                 	db	0
   823  00FFC6  30                 	db	48
   824  00FFC7  00                 	db	0
   825  00FFC8  30                 	db	48
   826  00FFC9  00                 	db	0
   827  00FFCA  30                 	db	48
   828  00FFCB  00                 	db	0
   829  00FFCC  30                 	db	48
   830  00FFCD  00                 	db	0
   831  00FFCE  30                 	db	48
   832  00FFCF  00                 	db	0
   833  00FFD0  30                 	db	48
   834  00FFD1  00                 	db	0
   835  00FFD2  30                 	db	48
   836  00FFD3  00                 	db	0
   837  00FFD4  30                 	db	48
   838  00FFD5  00                 	db	0
   839  00FFD6  30                 	db	48
   840  00FFD7  00                 	db	0
   841  00FFD8  30                 	db	48
   842  00FFD9  00                 	db	0
   843  00FFDA  30                 	db	48
   844  00FFDB  00                 	db	0
   845  00FFDC  30                 	db	48
   846  00FFDD  00                 	db	0
   847  00FFDE  30                 	db	48
   848  00FFDF  00                 	db	0
   849  00FFE0  30                 	db	48
   850  00FFE1  00                 	db	0
   851  00FFE2  30                 	db	48
   852  00FFE3  00                 	db	0
   853  00FFE4  30                 	db	48
   854  00FFE5  00                 	db	0
   855  00FFE6  30                 	db	48
   856  00FFE7  00                 	db	0
   857  00FFE8  30                 	db	48
   858  00FFE9  00                 	db	0
   859  00FFEA  44                 	db	68
   860  00FFEB  00                 	db	0
   861  00FFEC  44                 	db	68
   862  00FFED  00                 	db	0
   863  00FFEE  44                 	db	68
   864  00FFEF  00                 	db	0
   865  00FFF0  44                 	db	68
   866  00FFF1  00                 	db	0
   867  00FFF2  44                 	db	68
   868  00FFF3  00                 	db	0
   869  00FFF4  44                 	db	68
   870  00FFF5  00                 	db	0
   871  00FFF6  44                 	db	68
   872  00FFF7  00                 	db	0
   873  00FFF8  44                 	db	68
   874  00FFF9                     __end_of_DefaultChannels915:
   875                           	opt stack 0
   876  00FFF9                     STR_1:
   877                           
   878                           ; BSR set to: 1
   879  00FFF9  4C                 	db	76	;'L'
   880  00FFFA  6F                 	db	111	;'o'
   881  00FFFB  52                 	db	82	;'R'
   882  00FFFC  61                 	db	97	;'a'
   883  00FFFD  00                 	db	0
   884                           
   885                           ; #config settings
   886  00FFFE  00                 	db	0	; dummy byte at the end
   887  0000                     
   888                           	psect	nvBANK1
   889  0001F2                     __pnvBANK1:
   890                           	opt stack 0
   891  0001F2                     _TMR1_InterruptHandler:
   892                           	opt stack 0
   893  0001F2                     	ds	2
   894  0001F4                     _timer1ReloadVal:
   895                           	opt stack 0
   896  0001F4                     	ds	2
   897  0001F6                     _IOCB4_InterruptHandler:
   898                           	opt stack 0
   899  0001F6                     	ds	2
   900  0001F8                     _INT2_InterruptHandler:
   901                           	opt stack 0
   902  0001F8                     	ds	2
   903  0001FA                     _INT1_InterruptHandler:
   904                           	opt stack 0
   905  0001FA                     	ds	2
   906  0000                     _ANSELA	set	3896
   907  0000                     _ANSELE	set	3900
   908  0000                     _ANSELB	set	3897
   909  0000                     _ANSELC	set	3898
   910  0000                     _ANSELD	set	3899
   911  0000                     _TMR1	set	4046
   912  0000                     _T1GCONbits	set	4044
   913  0000                     _T1CONbits	set	4045
   914  0000                     _T1CON	set	4045
   915  0000                     _TMR1L	set	4046
   916  0000                     _TMR1H	set	4047
   917  0000                     _T1GCON	set	4044
   918  0000                     _IOCBbits	set	3938
   919  0000                     _WPUB	set	3937
   920  0000                     _TRISD	set	3989
   921  0000                     _TRISC	set	3988
   922  0000                     _TRISB	set	3987
   923  0000                     _TRISA	set	3986
   924  0000                     _TRISE	set	3990
   925  0000                     _LATC	set	3979
   926  0000                     _LATB	set	3978
   927  0000                     _LATA	set	3977
   928  0000                     _LATD	set	3980
   929  0000                     _LATE	set	3981
   930  0000                     _SSP2STATbits	set	3949
   931  0000                     _SSP2BUF	set	3951
   932  0000                     _SSP2CON1bits	set	3948
   933  0000                     _SSP2ADD	set	3950
   934  0000                     _SSP2CON1	set	3948
   935  0000                     _SSP2STAT	set	3949
   936  0000                     _OSCTUNE	set	3995
   937  0000                     _OSCCON2	set	4050
   938  0000                     _OSCCON	set	4051
   939  0000                     _PIR1bits	set	3998
   940  0000                     _PIE1bits	set	3997
   941  0000                     _INTCON3bits	set	4080
   942  0000                     _RCONbits	set	4048
   943  0000                     _INTCON2bits	set	4081
   944  0000                     _PORTBbits	set	3969
   945  0000                     _INTCONbits	set	4082
   946  0000                     _WPUB3	set	31499
   947  0000                     _TRISB3	set	31899
   948  0000                     _LATB3	set	31827
   949  0000                     _LATD3	set	31843
   950  0000                     _LATC2	set	31834
   951  0000                     _TRISC2	set	31906
   952                           
   953                           	psect	cinit
   954  005F88                     __pcinit:
   955                           	opt stack 0
   956  005F88                     start_initialization:
   957                           	opt stack 0
   958  005F88                     __initialization:
   959                           	opt stack 0
   960                           
   961                           ; Initialize objects allocated to BANK1 (56 bytes)
   962                           ; load TBLPTR registers with __pidataBANK1
   963  005F88  0E44               	movlw	low __pidataBANK1
   964  005F8A  6EF6               	movwf	tblptrl,c
   965  005F8C  0E75               	movlw	high __pidataBANK1
   966  005F8E  6EF7               	movwf	tblptrh,c
   967  005F90  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   968  005F92  6EF8               	movwf	tblptru,c
   969  005F94  EE01  F0BA         	lfsr	0,__pdataBANK1
   970  005F98  EE20 F038          	lfsr	2,56
   971  005F9C                     copy_data0:
   972  005F9C  0009               	tblrd		*+
   973  005F9E  CFF5 FFEE          	movff	tablat,postinc0
   974  005FA2  50DD               	movf	postdec2,w,c
   975  005FA4  50D9               	movf	fsr2l,w,c
   976  005FA6  E1FA               	bnz	copy_data0
   977                           
   978                           ; Initialize objects allocated to COMRAM (4 bytes)
   979                           ; load TBLPTR registers with __pidataCOMRAM
   980  005FA8  0E88               	movlw	low __pidataCOMRAM
   981  005FAA  6EF6               	movwf	tblptrl,c
   982  005FAC  0E7E               	movlw	high __pidataCOMRAM
   983  005FAE  6EF7               	movwf	tblptrh,c
   984  005FB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   985  005FB2  6EF8               	movwf	tblptru,c
   986  005FB4  EE00  F054         	lfsr	0,__pdataCOMRAM
   987  005FB8  EE20 F004          	lfsr	2,4
   988  005FBC                     copy_data1:
   989  005FBC  0009               	tblrd		*+
   990  005FBE  CFF5 FFEE          	movff	tablat,postinc0
   991  005FC2  50DD               	movf	postdec2,w,c
   992  005FC4  50D9               	movf	fsr2l,w,c
   993  005FC6  E1FA               	bnz	copy_data1
   994                           
   995                           ; Clear objects allocated to BIGRAM (542 bytes)
   996  005FC8  EE04  F090         	lfsr	0,__pbssBIGRAM
   997  005FCC  EE22 F01E          	lfsr	2,542
   998  005FD0                     clear_0:
   999  005FD0  6AEE               	clrf	postinc0,c
  1000  005FD2  50DD               	movf	postdec2,w,c
  1001  005FD4  50D9               	movf	fsr2l,w,c
  1002  005FD6  E1FC               	bnz	clear_0
  1003  005FD8  50DA               	movf	fsr2h,w,c
  1004  005FDA  E1FA               	bnz	clear_0
  1005                           
  1006                           ; Clear objects allocated to BANK4 (144 bytes)
  1007  005FDC  EE04  F000         	lfsr	0,__pbssBANK4
  1008  005FE0  0E90               	movlw	144
  1009  005FE2                     clear_1:
  1010  005FE2  6AEE               	clrf	postinc0,c
  1011  005FE4  06E8               	decf	wreg,f,c
  1012  005FE6  E1FD               	bnz	clear_1
  1013                           
  1014                           ; Clear objects allocated to BANK3 (160 bytes)
  1015  005FE8  EE03  F000         	lfsr	0,__pbssBANK3
  1016  005FEC  0EA0               	movlw	160
  1017  005FEE                     clear_2:
  1018  005FEE  6AEE               	clrf	postinc0,c
  1019  005FF0  06E8               	decf	wreg,f,c
  1020  005FF2  E1FD               	bnz	clear_2
  1021                           
  1022                           ; Clear objects allocated to BANK2 (231 bytes)
  1023  005FF4  EE02  F000         	lfsr	0,__pbssBANK2
  1024  005FF8  0EE7               	movlw	231
  1025  005FFA                     clear_3:
  1026  005FFA  6AEE               	clrf	postinc0,c
  1027  005FFC  06E8               	decf	wreg,f,c
  1028  005FFE  E1FD               	bnz	clear_3
  1029                           
  1030                           ; Clear objects allocated to BANK1 (81 bytes)
  1031  006000  EE01  F069         	lfsr	0,__pbssBANK1
  1032  006004  0E51               	movlw	81
  1033  006006                     clear_4:
  1034  006006  6AEE               	clrf	postinc0,c
  1035  006008  06E8               	decf	wreg,f,c
  1036  00600A  E1FD               	bnz	clear_4
  1037                           
  1038                           ; Clear objects allocated to BANK0 (7 bytes)
  1039  00600C  EE00  F0F9         	lfsr	0,__pbssBANK0
  1040  006010  0E07               	movlw	7
  1041  006012                     clear_5:
  1042  006012  6AEE               	clrf	postinc0,c
  1043  006014  06E8               	decf	wreg,f,c
  1044  006016  E1FD               	bnz	clear_5
  1045                           
  1046                           ; Clear objects allocated to COMRAM (12 bytes)
  1047  006018  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1048  00601C  0E0C               	movlw	12
  1049  00601E                     clear_6:
  1050  00601E  6AEE               	clrf	postinc0,c
  1051  006020  06E8               	decf	wreg,f,c
  1052  006022  E1FD               	bnz	clear_6
  1053  006024                     end_of_initialization:
  1054                           	opt stack 0
  1055  006024                     __end_of__initialization:
  1056                           	opt stack 0
  1057  006024  0100               	movlb	0
  1058  006026  EFCB  F033         	goto	_main	;jump to C main() function
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec2	equ	0xFDD
  1066                           fsr2h	equ	0xFDA
  1067                           fsr2l	equ	0xFD9
  1068                           
  1069                           	psect	bssCOMRAM
  1070  00003C                     __pbssCOMRAM:
  1071                           	opt stack 0
  1072  00003C                     _ticksAccounted:
  1073                           	opt stack 0
  1074  00003C                     	ds	4
  1075  000040                     _ticksAdded:
  1076                           	opt stack 0
  1077  000040                     	ds	4
  1078  000044                     TMR_GetDeltaTime@tmrVal:
  1079                           	opt stack 0
  1080  000044                     	ds	2
  1081  000046                     __rcon:
  1082                           	opt stack 0
  1083  000046                     	ds	1
  1084  000047                     _timerOverflow:
  1085                           	opt stack 0
  1086  000047                     	ds	1
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           
  1097                           	psect	dataCOMRAM
  1098  000054                     __pdataCOMRAM:
  1099                           	opt stack 0
  1100  000054                     _ticksToScheduledInterrupt:
  1101                           	opt stack 0
  1102  000054                     	ds	4
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec2	equ	0xFDD
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           
  1113                           	psect	bssBANK0
  1114  0000F9                     __pbssBANK0:
  1115                           	opt stack 0
  1116  0000F9                     _rxPayload:
  1117                           	opt stack 0
  1118  0000F9                     	ds	4
  1119  0000FD                     _reloadVal:
  1120                           	opt stack 0
  1121  0000FD                     	ds	2
  1122  0000FF                     _allocatedTimers:
  1123                           	opt stack 0
  1124  0000FF                     	ds	1
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec2	equ	0xFDD
  1132                           fsr2h	equ	0xFDA
  1133                           fsr2l	equ	0xFD9
  1134                           
  1135                           	psect	bssBANK1
  1136  000169                     __pbssBANK1:
  1137                           	opt stack 0
  1138  000169                     TMR_GetDeltaTime@retVal:
  1139                           	opt stack 0
  1140  000169                     	ds	4
  1141  00016D                     TMR_SwapTimer@retVal:
  1142                           	opt stack 0
  1143  00016D                     	ds	2
  1144  00016F                     TMR_SwapTimer@oldVal:
  1145                           	opt stack 0
  1146  00016F                     	ds	2
  1147  000171                     _localDioStatus:
  1148                           	opt stack 0
  1149  000171                     	ds	1
  1150  000172                     __roundCounter:
  1151                           	opt stack 0
  1152  000172                     	ds	1
  1153  000173                     _dioStatus:
  1154                           	opt stack 0
  1155  000173                     	ds	1
  1156  000174                     _RadioConfiguration:
  1157                           	opt stack 0
  1158  000174                     	ds	54
  1159  0001AA                     _aesBuffer:
  1160                           	opt stack 0
  1161  0001AA                     	ds	16
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec2	equ	0xFDD
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           
  1172                           	psect	dataBANK1
  1173  0001BA                     __pdataBANK1:
  1174                           	opt stack 0
  1175  0001BA                     GenerateSubkey@F7103:
  1176                           	opt stack 0
  1177  0001BA                     	ds	16
  1178  0001CA                     _randx:
  1179                           	opt stack 0
  1180  0001CA                     	ds	4
  1181  0001CE                     _devAddr:
  1182                           	opt stack 0
  1183  0001CE                     	ds	4
  1184  0001D2                     _appSKey:
  1185                           	opt stack 0
  1186  0001D2                     	ds	16
  1187  0001E2                     _nwkSKey:
  1188                           	opt stack 0
  1189  0001E2                     	ds	16
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec2	equ	0xFDD
  1197                           fsr2h	equ	0xFDA
  1198                           fsr2l	equ	0xFD9
  1199                           
  1200                           	psect	bssBANK2
  1201  000200                     __pbssBANK2:
  1202                           	opt stack 0
  1203  000200                     _loRa:
  1204                           	opt stack 0
  1205  000200                     	ds	231
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postdec2	equ	0xFDD
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           
  1216                           	psect	bssBANK3
  1217  000300                     __pbssBANK3:
  1218                           	opt stack 0
  1219  000300                     _swTimers:
  1220                           	opt stack 0
  1221  000300                     	ds	160
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec2	equ	0xFDD
  1229                           fsr2h	equ	0xFDA
  1230                           fsr2l	equ	0xFD9
  1231                           
  1232                           	psect	bssBANK4
  1233  000400                     __pbssBANK4:
  1234                           	opt stack 0
  1235  000400                     _Channels:
  1236                           	opt stack 0
  1237  000400                     	ds	144
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           postdec2	equ	0xFDD
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           
  1248                           	psect	bssBIGRAM
  1249  000490                     __pbssBIGRAM:
  1250                           	opt stack 0
  1251  000490                     _macBuffer:
  1252                           	opt stack 0
  1253  000490                     	ds	271
  1254  00059F                     _radioBuffer:
  1255                           	opt stack 0
  1256  00059F                     	ds	271
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec2	equ	0xFDD
  1264                           fsr2h	equ	0xFDA
  1265                           fsr2l	equ	0xFD9
  1266                           
  1267                           	psect	cstackBANK1
  1268  000100                     __pcstackBANK1:
  1269                           	opt stack 0
  1270  000100                     AESCmac@k2:
  1271                           	opt stack 0
  1272                           
  1273                           ; 16 bytes @ 0x0
  1274  000100                     	ds	16
  1275  000110                     AESCmac@k1:
  1276                           	opt stack 0
  1277                           
  1278                           ; 16 bytes @ 0x10
  1279  000110                     	ds	16
  1280  000120                     AESCmac@mLast:
  1281                           	opt stack 0
  1282                           
  1283                           ; 16 bytes @ 0x20
  1284  000120                     	ds	16
  1285  000130                     AESCmac@padded:
  1286                           	opt stack 0
  1287                           
  1288                           ; 16 bytes @ 0x30
  1289  000130                     	ds	16
  1290  000140                     AESCmac@y:
  1291                           	opt stack 0
  1292                           
  1293                           ; 16 bytes @ 0x40
  1294  000140                     	ds	16
  1295  000150                     AESCmac@x:
  1296                           	opt stack 0
  1297                           
  1298                           ; 16 bytes @ 0x50
  1299  000150                     	ds	16
  1300  000160                     AESCmac@ptr:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x60
  1304  000160                     	ds	2
  1305  000162                     AESCmac@flag:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x62
  1309  000162                     	ds	1
  1310  000163                     AESCmac@n:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x63
  1314  000163                     	ds	1
  1315  000164                     AESCmac@j:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x64
  1319  000164                     	ds	1
  1320  000165                     AESCmac@i:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0x65
  1324  000165                     	ds	1
  1325  000166                     LORAWAN_RxDone@buffer:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x66
  1329  000166                     	ds	2
  1330  000168                     LORAWAN_RxDone@bufferLength:
  1331                           	opt stack 0
  1332                           
  1333                           ; 1 bytes @ 0x68
  1334  000168                     	ds	1
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec2	equ	0xFDD
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           
  1345                           	psect	cstackBANK0
  1346  000060                     __pcstackBANK0:
  1347                           	opt stack 0
  1348  000060                     ??_UpdateMinMaxChDataRate:
  1349  000060                     ??_FindSmallestDataRate:
  1350  000060                     ??_CountfOptsLength:
  1351  000060                     ?_TMR1_ReadTimer:
  1352                           	opt stack 0
  1353  000060                     ?_ExecuteDutyCycle:
  1354                           	opt stack 0
  1355  000060                     ?_ExecuteDevStatus:
  1356                           	opt stack 0
  1357  000060                     ?_ExecuteLinkCheck:
  1358                           	opt stack 0
  1359  000060                     ?___wmul:
  1360                           	opt stack 0
  1361  000060                     ?___awdiv:
  1362                           	opt stack 0
  1363  000060                     ?___lldiv:
  1364                           	opt stack 0
  1365  000060                     ?___llmod:
  1366                           	opt stack 0
  1367  000060                     INTERRUPT_GetDioStatus@a:
  1368                           	opt stack 0
  1369  000060                     HALResetPinOutputValue@value:
  1370                           	opt stack 0
  1371  000060                     SwTimerCreate@retVal:
  1372                           	opt stack 0
  1373  000060                     SwTimerStop@timerId:
  1374                           	opt stack 0
  1375  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1376                           	opt stack 0
  1377  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1378                           	opt stack 0
  1379  000060                     RADIO_SetOutputPower@power:
  1380                           	opt stack 0
  1381  000060                     RADIO_SetCRC@crc:
  1382                           	opt stack 0
  1383  000060                     RADIO_SetIQInverted@iqInverted:
  1384                           	opt stack 0
  1385  000060                     RADIO_SetBandwidth@bandwidth:
  1386                           	opt stack 0
  1387  000060                     RADIO_SetPABoost@paBoost:
  1388                           	opt stack 0
  1389  000060                     RADIO_SetModulation@modulation:
  1390                           	opt stack 0
  1391  000060                     ValidateDataRate@dataRate:
  1392                           	opt stack 0
  1393  000060                     UpdateDLSettings@dlRx1DrOffset:
  1394                           	opt stack 0
  1395  000060                     UpdateDataRange@dataRangeNew:
  1396                           	opt stack 0
  1397  000060                     ValidateRxOffset@rxOffset:
  1398                           	opt stack 0
  1399  000060                     ValidateChannelId@channelId:
  1400                           	opt stack 0
  1401  000060                     ValidateDataRateReception@result:
  1402                           	opt stack 0
  1403  000060                     UpdateCurrentDataRate@valueNew:
  1404                           	opt stack 0
  1405  000060                     UpdateTxPower@txPowerNew:
  1406                           	opt stack 0
  1407  000060                     UpdateJoinInProgress@state:
  1408                           	opt stack 0
  1409  000060                     SPI2_Exchange8bit@data:
  1410                           	opt stack 0
  1411  000060                     ___abdiv@divisor:
  1412                           	opt stack 0
  1413  000060                     FillSubKey@source:
  1414                           	opt stack 0
  1415  000060                     SwTimerSetCallback@callback:
  1416                           	opt stack 0
  1417  000060                     EncKeySchedule@key:
  1418                           	opt stack 0
  1419  000060                     EncodeShiftRow@stateTable:
  1420                           	opt stack 0
  1421  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1422                           	opt stack 0
  1423  000060                     ExecuteDutyCycle@ptr:
  1424                           	opt stack 0
  1425  000060                     ExecuteDevStatus@ptr:
  1426                           	opt stack 0
  1427  000060                     UpdateCfList@joinAccept:
  1428                           	opt stack 0
  1429  000060                     ValidateChannelMaskCntl@channelMask:
  1430                           	opt stack 0
  1431  000060                     ExecuteLinkCheck@ptr:
  1432                           	opt stack 0
  1433  000060                     IncludeMacCommandsResponse@macBuffer:
  1434                           	opt stack 0
  1435  000060                     CheckFlags@hdr:
  1436                           	opt stack 0
  1437  000060                     CheckMcastFlags@hdr:
  1438                           	opt stack 0
  1439  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1440                           	opt stack 0
  1441  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1442                           	opt stack 0
  1443  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1444                           	opt stack 0
  1445  000060                     TMR1_WriteTimer@timerVal:
  1446                           	opt stack 0
  1447  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1448                           	opt stack 0
  1449  000060                     RxData@pData:
  1450                           	opt stack 0
  1451  000060                     ___wmul@multiplier:
  1452                           	opt stack 0
  1453  000060                     ___awdiv@dividend:
  1454                           	opt stack 0
  1455  000060                     memcpy@d1:
  1456                           	opt stack 0
  1457  000060                     memset@p1:
  1458                           	opt stack 0
  1459  000060                     SystemBlockingWaitMs@ms:
  1460                           	opt stack 0
  1461  000060                     RADIO_SetChannelFrequency@frequency:
  1462                           	opt stack 0
  1463  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1464                           	opt stack 0
  1465  000060                     UpdateReceiveWindow2Parameters@frequency:
  1466                           	opt stack 0
  1467  000060                     ___lldiv@dividend:
  1468                           	opt stack 0
  1469  000060                     ___llmod@dividend:
  1470                           	opt stack 0
  1471                           
  1472                           ; 4 bytes @ 0x0
  1473  000060                     	ds	1
  1474  000061                     ??___abdiv:
  1475  000061                     HALSPISend@data:
  1476                           	opt stack 0
  1477  000061                     ValidateDataRate@result:
  1478                           	opt stack 0
  1479  000061                     UpdateDLSettings@dlRx2Dr:
  1480                           	opt stack 0
  1481  000061                     UpdateDataRange@channelId:
  1482                           	opt stack 0
  1483  000061                     ValidateRxOffset@result:
  1484                           	opt stack 0
  1485  000061                     ValidateChannelId@result:
  1486                           	opt stack 0
  1487  000061                     ValidateDataRateReception@dataRate:
  1488                           	opt stack 0
  1489  000061                     UpdateMinMaxChDataRate@i:
  1490                           	opt stack 0
  1491  000061                     FindSmallestDataRate@found:
  1492                           	opt stack 0
  1493                           
  1494                           ; 1 bytes @ 0x1
  1495  000061                     	ds	1
  1496  000062                     ??_TMR1_ReadTimer:
  1497  000062                     ??_EncKeySchedule:
  1498  000062                     SwTimerSetCallback@callbackParameter:
  1499                           	opt stack 0
  1500  000062                     EncodeShiftRow@temp:
  1501                           	opt stack 0
  1502  000062                     RADIO_RegisterWrite@value:
  1503                           	opt stack 0
  1504  000062                     RADIO_RegisterRead@reg:
  1505                           	opt stack 0
  1506  000062                     ExecuteDutyCycle@maxDCycle:
  1507                           	opt stack 0
  1508  000062                     UpdateChannelIdStatus@statusNew:
  1509                           	opt stack 0
  1510  000062                     ValidateDataRange@dataRangeNew:
  1511                           	opt stack 0
  1512  000062                     ValidateChannelMaskCntl@result:
  1513                           	opt stack 0
  1514  000062                     FindSmallestDataRate@i:
  1515                           	opt stack 0
  1516  000062                     RxData@dataLength:
  1517                           	opt stack 0
  1518  000062                     FillSubKey@key:
  1519                           	opt stack 0
  1520  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1521                           	opt stack 0
  1522  000062                     ___wmul@multiplicand:
  1523                           	opt stack 0
  1524  000062                     ___awdiv@divisor:
  1525                           	opt stack 0
  1526  000062                     memcpy@s1:
  1527                           	opt stack 0
  1528  000062                     memset@c:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x2
  1532  000062                     	ds	1
  1533  000063                     SwTimerSetCallback@timerId:
  1534                           	opt stack 0
  1535  000063                     RADIO_RegisterWrite@reg:
  1536                           	opt stack 0
  1537  000063                     RADIO_RegisterRead@readValue:
  1538                           	opt stack 0
  1539  000063                     UpdateChannelIdStatus@channelId:
  1540                           	opt stack 0
  1541  000063                     ValidateDataRange@result:
  1542                           	opt stack 0
  1543  000063                     ValidateChannelMaskCntl@channelMaskCntl:
  1544                           	opt stack 0
  1545  000063                     FindSmallestDataRate@dataRate:
  1546                           	opt stack 0
  1547  000063                     RxData@status:
  1548                           	opt stack 0
  1549  000063                     ___abdiv@counter:
  1550                           	opt stack 0
  1551                           
  1552                           ; 1 bytes @ 0x3
  1553  000063                     	ds	1
  1554  000064                     ??_SystemBlockingWaitMs:
  1555  000064                     FillSubKey@size:
  1556                           	opt stack 0
  1557  000064                     RADIO_WritePower@ocp:
  1558                           	opt stack 0
  1559  000064                     RADIO_UnhandledInterrupt@modulation:
  1560                           	opt stack 0
  1561  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1562                           	opt stack 0
  1563  000064                     ValidateDataRange@dataRateMax:
  1564                           	opt stack 0
  1565  000064                     EnableChannels2@endIndex:
  1566                           	opt stack 0
  1567  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1568                           	opt stack 0
  1569  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1570                           	opt stack 0
  1571  000064                     ___abdiv@sign:
  1572                           	opt stack 0
  1573  000064                     ___awdiv@counter:
  1574                           	opt stack 0
  1575  000064                     _EncKeySchedule$519:
  1576                           	opt stack 0
  1577  000064                     TMR1_ReadTimer@readVal:
  1578                           	opt stack 0
  1579  000064                     ___wmul@product:
  1580                           	opt stack 0
  1581  000064                     memcpy@n:
  1582                           	opt stack 0
  1583  000064                     memset@n:
  1584                           	opt stack 0
  1585  000064                     ConfigureRadio@freq:
  1586                           	opt stack 0
  1587  000064                     ___lldiv@divisor:
  1588                           	opt stack 0
  1589  000064                     ___llmod@divisor:
  1590                           	opt stack 0
  1591                           
  1592                           ; 4 bytes @ 0x4
  1593  000064                     	ds	1
  1594  000065                     ??_FillSubKey:
  1595  000065                     ??_IncludeMacCommandsResponse:
  1596  000065                     ??_RADIO_DIO3:
  1597  000065                     ??_RADIO_DIO4:
  1598  000065                     ??_RADIO_DIO5:
  1599  000065                     RADIO_WriteMode@newModulation:
  1600                           	opt stack 0
  1601  000065                     RADIO_WritePower@paDac:
  1602                           	opt stack 0
  1603  000065                     LORAWAN_SetChannelIdStatus@result:
  1604                           	opt stack 0
  1605  000065                     ValidateDataRange@dataRateMin:
  1606                           	opt stack 0
  1607  000065                     ___abdiv@quotient:
  1608                           	opt stack 0
  1609  000065                     ___awdiv@sign:
  1610                           	opt stack 0
  1611  000065                     EnableChannels2@channelMask:
  1612                           	opt stack 0
  1613                           
  1614                           ; 2 bytes @ 0x5
  1615  000065                     	ds	1
  1616  000066                     FillSubKey@carry:
  1617                           	opt stack 0
  1618  000066                     RADIO_WriteMode@blocking:
  1619                           	opt stack 0
  1620  000066                     RADIO_WritePower@power:
  1621                           	opt stack 0
  1622  000066                     RADIO_DIO3@dioMapping:
  1623                           	opt stack 0
  1624  000066                     RADIO_DIO5@dioMapping:
  1625                           	opt stack 0
  1626  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1627                           	opt stack 0
  1628  000066                     ValidateDataRange@channelId:
  1629                           	opt stack 0
  1630  000066                     UpdateReceiveDelays@delay:
  1631                           	opt stack 0
  1632  000066                     CountfOptsLength@macCommandLength:
  1633                           	opt stack 0
  1634  000066                     TMR1_ReadTimer@readValHigh:
  1635                           	opt stack 0
  1636  000066                     ___abdiv@dividend:
  1637                           	opt stack 0
  1638  000066                     AESEncode@block:
  1639                           	opt stack 0
  1640  000066                     ___awdiv@quotient:
  1641                           	opt stack 0
  1642  000066                     memcpy@d:
  1643                           	opt stack 0
  1644  000066                     memset@p:
  1645                           	opt stack 0
  1646                           
  1647                           ; 2 bytes @ 0x6
  1648  000066                     	ds	1
  1649  000067                     ??_EnableChannels2:
  1650  000067                     ?_ExecuteRxTimingSetup:
  1651                           	opt stack 0
  1652  000067                     FillSubKey@i:
  1653                           	opt stack 0
  1654  000067                     RADIO_WriteMode@currentModulation:
  1655                           	opt stack 0
  1656  000067                     RADIO_DIO4@dioMapping:
  1657                           	opt stack 0
  1658  000067                     LORAWAN_SetDataRange@dataRangeNew:
  1659                           	opt stack 0
  1660  000067                     CountfOptsLength@i:
  1661                           	opt stack 0
  1662  000067                     TMR1_ReadTimer@readValLow:
  1663                           	opt stack 0
  1664  000067                     ExecuteRxTimingSetup@ptr:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x7
  1668  000067                     	ds	1
  1669  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1670  000068                     ?_TMR_SwapTimer:
  1671                           	opt stack 0
  1672  000068                     ?_TMR_GetDeltaTime:
  1673                           	opt stack 0
  1674  000068                     RADIO_WriteMode@dioMapping:
  1675                           	opt stack 0
  1676  000068                     LORAWAN_SetDataRange@result:
  1677                           	opt stack 0
  1678  000068                     ConfigureRadio@dataRate:
  1679                           	opt stack 0
  1680  000068                     ___llmod@counter:
  1681                           	opt stack 0
  1682  000068                     TMR_SwapTimer@timerVal:
  1683                           	opt stack 0
  1684  000068                     AESEncode@key:
  1685                           	opt stack 0
  1686  000068                     memcpy@s:
  1687                           	opt stack 0
  1688  000068                     ___lldiv@quotient:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x8
  1692  000068                     	ds	1
  1693  000069                     RADIO_WriteMode@currentMode:
  1694                           	opt stack 0
  1695  000069                     LORAWAN_SetDataRange@channelId:
  1696                           	opt stack 0
  1697  000069                     EnableChannels2@startIndex:
  1698                           	opt stack 0
  1699  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1700                           	opt stack 0
  1701  000069                     ExecuteRxTimingSetup@delay:
  1702                           	opt stack 0
  1703  000069                     ValidateFrequency@frequencyNew:
  1704                           	opt stack 0
  1705  000069                     ConfigureRadioRx@freq:
  1706                           	opt stack 0
  1707                           
  1708                           ; 4 bytes @ 0x9
  1709  000069                     	ds	1
  1710  00006A                     ??_AESEncode:
  1711  00006A                     RADIO_WriteMode@newMode:
  1712                           	opt stack 0
  1713  00006A                     EnableChannels2@i:
  1714                           	opt stack 0
  1715  00006A                     LORAWAN_GetMaxPayloadSize@result:
  1716                           	opt stack 0
  1717  00006A                     memcpy@tmp:
  1718                           	opt stack 0
  1719  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1720                           	opt stack 0
  1721                           
  1722                           ; 4 bytes @ 0xA
  1723  00006A                     	ds	1
  1724  00006B                     ?_ExtractMic:
  1725                           	opt stack 0
  1726  00006B                     RADIO_WriteMode@opMode:
  1727                           	opt stack 0
  1728  00006B                     EnableChannels@channelMask:
  1729                           	opt stack 0
  1730  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1731                           	opt stack 0
  1732  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1733                           	opt stack 0
  1734  00006B                     PrepareSessionKeys@sessionKey:
  1735                           	opt stack 0
  1736  00006B                     ExtractMic@buffer:
  1737                           	opt stack 0
  1738  00006B                     AssembleEncryptionBlock@frameCounter:
  1739                           	opt stack 0
  1740                           
  1741                           ; 4 bytes @ 0xB
  1742  00006B                     	ds	1
  1743  00006C                     ??_TMR_GetDeltaTime:
  1744  00006C                     ?_RADIO_ReadRandom:
  1745                           	opt stack 0
  1746  00006C                     ___lldiv@counter:
  1747                           	opt stack 0
  1748                           
  1749                           ; 1 bytes @ 0xC
  1750  00006C                     	ds	1
  1751  00006D                     ValidateFrequency@result:
  1752                           	opt stack 0
  1753  00006D                     EnableChannels@channelMaskCntl:
  1754                           	opt stack 0
  1755  00006D                     IncludeMacCommandsResponse@i:
  1756                           	opt stack 0
  1757  00006D                     ConfigureRadioRx@dataRate:
  1758                           	opt stack 0
  1759  00006D                     ExtractMic@bufferLength:
  1760                           	opt stack 0
  1761  00006D                     PrepareSessionKeys@appNonce:
  1762                           	opt stack 0
  1763  00006D                     SwTimerSetTimeout@timeout:
  1764                           	opt stack 0
  1765  00006D                     RADIO_WriteFrequency@frequency:
  1766                           	opt stack 0
  1767  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1768                           	opt stack 0
  1769  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1770                           	opt stack 0
  1771                           
  1772                           ; 4 bytes @ 0xD
  1773  00006D                     	ds	1
  1774  00006E                     ??_TMR_OverrideRemaining:
  1775  00006E                     ??_RADIO_ReadRandom:
  1776  00006E                     EnableChannels@channel:
  1777                           	opt stack 0
  1778  00006E                     IncludeMacCommandsResponse@bufferIndex:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0xE
  1782  00006E                     	ds	1
  1783  00006F                     ??_ExtractMic:
  1784  00006F                     EnableChannels@i:
  1785                           	opt stack 0
  1786  00006F                     AssembleEncryptionBlock@blockId:
  1787                           	opt stack 0
  1788  00006F                     RADIO_ReadRandom@retVal:
  1789                           	opt stack 0
  1790  00006F                     PrepareSessionKeys@networkId:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0xF
  1794  00006F                     	ds	1
  1795  000070                     ?_ExecuteLinkAdr:
  1796                           	opt stack 0
  1797  000070                     AssembleEncryptionBlock@firstByte:
  1798                           	opt stack 0
  1799  000070                     TMR_OverrideRemaining@tmrVal:
  1800                           	opt stack 0
  1801  000070                     ExecuteLinkAdr@ptr:
  1802                           	opt stack 0
  1803                           
  1804                           ; 2 bytes @ 0x10
  1805  000070                     	ds	1
  1806  000071                     ??_SwTimerSetTimeout:
  1807  000071                     RADIO_ReadRandom@i:
  1808                           	opt stack 0
  1809  000071                     PrepareSessionKeys@index:
  1810                           	opt stack 0
  1811  000071                     AssembleEncryptionBlock@multicastStatus:
  1812                           	opt stack 0
  1813  000071                     RADIO_WriteFrequency@num_mod:
  1814                           	opt stack 0
  1815  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1816                           	opt stack 0
  1817  000071                     RADIO_WriteFSKBitRate@num:
  1818                           	opt stack 0
  1819                           
  1820                           ; 4 bytes @ 0x11
  1821  000071                     	ds	1
  1822  000072                     ??_ExecuteLinkAdr:
  1823  000072                     AssembleEncryptionBlock@dir:
  1824                           	opt stack 0
  1825  000072                     TMR_OverrideRemaining@oldReloadVal:
  1826                           	opt stack 0
  1827  000072                     _AESEncode$514:
  1828                           	opt stack 0
  1829  000072                     srand@x:
  1830                           	opt stack 0
  1831                           
  1832                           ; 2 bytes @ 0x12
  1833  000072                     	ds	1
  1834  000073                     AssembleEncryptionBlock@bufferIndex:
  1835                           	opt stack 0
  1836  000073                     ExtractMic@mic:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0x13
  1840  000073                     	ds	1
  1841  000074                     ExecuteLinkAdr@endingIndex:
  1842                           	opt stack 0
  1843  000074                     _AESEncode$515:
  1844                           	opt stack 0
  1845                           
  1846                           ; 2 bytes @ 0x14
  1847  000074                     	ds	1
  1848  000075                     SwTimerSetTimeout@timerId:
  1849                           	opt stack 0
  1850  000075                     ExecuteLinkAdr@txPowerNew:
  1851                           	opt stack 0
  1852  000075                     RADIO_WriteFrequency@num:
  1853                           	opt stack 0
  1854                           
  1855                           ; 4 bytes @ 0x15
  1856  000075                     	ds	1
  1857  000076                     ExecuteLinkAdr@startingIndex:
  1858                           	opt stack 0
  1859  000076                     _AESEncode$516:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x16
  1863  000076                     	ds	1
  1864  000077                     ExecuteLinkAdr@channelMask:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x17
  1868  000077                     	ds	1
  1869  000078                     AESEncode@aux:
  1870                           	opt stack 0
  1871                           
  1872                           ; 1 bytes @ 0x18
  1873  000078                     	ds	1
  1874  000079                     AESEncode@aux2:
  1875                           	opt stack 0
  1876  000079                     RADIO_FHSSChangeChannel@irqFlags:
  1877                           	opt stack 0
  1878  000079                     ExecuteLinkAdr@auxMinDataRate:
  1879                           	opt stack 0
  1880  000079                     RADIO_Init@radioBuffer:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x19
  1884  000079                     	ds	1
  1885  00007A                     ??_RADIO_DIO2:
  1886  00007A                     AESEncode@aux1:
  1887                           	opt stack 0
  1888  00007A                     ExecuteLinkAdr@txPower:
  1889                           	opt stack 0
  1890                           
  1891                           ; 1 bytes @ 0x1A
  1892  00007A                     	ds	1
  1893  00007B                     AESEncode@aux3:
  1894                           	opt stack 0
  1895  00007B                     RADIO_DIO2@opMode:
  1896                           	opt stack 0
  1897  00007B                     ExecuteLinkAdr@dataRate:
  1898                           	opt stack 0
  1899  00007B                     RADIO_Init@frequency:
  1900                           	opt stack 0
  1901                           
  1902                           ; 4 bytes @ 0x1B
  1903  00007B                     	ds	1
  1904  00007C                     AESEncode@i:
  1905                           	opt stack 0
  1906  00007C                     RADIO_DIO2@dioMapping:
  1907                           	opt stack 0
  1908  00007C                     ExecuteLinkAdr@auxMaxDataRate:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x1C
  1912  00007C                     	ds	1
  1913  00007D                     ExecuteLinkAdr@auxChannelMask:
  1914                           	opt stack 0
  1915  00007D                     AESEncodeLoRa@block:
  1916                           	opt stack 0
  1917                           
  1918                           ; 2 bytes @ 0x1D
  1919  00007D                     	ds	2
  1920  00007F                     ??_RADIO_Init:
  1921  00007F                     ExecuteLinkAdr@redundancy:
  1922                           	opt stack 0
  1923  00007F                     AESEncodeLoRa@key:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x1F
  1927  00007F                     	ds	1
  1928  000080                     ?_SwTimersInterrupt:
  1929                           	opt stack 0
  1930  000080                     RADIO_Init@cnt:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x20
  1934  000080                     	ds	1
  1935  000081                     ExecuteLinkAdr@i:
  1936                           	opt stack 0
  1937  000081                     AESEncodeLoRa@useKey:
  1938                           	opt stack 0
  1939                           
  1940                           ; 16 bytes @ 0x21
  1941  000081                     	ds	3
  1942  000084                     
  1943                           ; 1 bytes @ 0x24
  1944  000084                     	ds	4
  1945  000088                     SwTimersInterrupt@timeElapsed:
  1946                           	opt stack 0
  1947                           
  1948                           ; 4 bytes @ 0x28
  1949  000088                     	ds	4
  1950  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  1951                           	opt stack 0
  1952                           
  1953                           ; 4 bytes @ 0x2C
  1954  00008C                     	ds	4
  1955  000090                     SwTimersInterrupt@i:
  1956                           	opt stack 0
  1957                           
  1958                           ; 1 bytes @ 0x30
  1959  000090                     	ds	1
  1960  000091                     ?_SwTimerReadValue:
  1961                           	opt stack 0
  1962  000091                     GenerateSubkey@key:
  1963                           	opt stack 0
  1964  000091                     ComputeSessionKeys@joinAcceptBuffer:
  1965                           	opt stack 0
  1966  000091                     EncryptFRMPayload@buffer:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x31
  1970  000091                     	ds	2
  1971  000093                     EncryptFRMPayload@bufferLength:
  1972                           	opt stack 0
  1973  000093                     GenerateSubkey@k1:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x33
  1977  000093                     	ds	1
  1978  000094                     EncryptFRMPayload@dir:
  1979                           	opt stack 0
  1980                           
  1981                           ; 1 bytes @ 0x34
  1982  000094                     	ds	1
  1983  000095                     GenerateSubkey@k2:
  1984                           	opt stack 0
  1985  000095                     SwTimerReadValue@ticksCount:
  1986                           	opt stack 0
  1987  000095                     SwTimerStart@ticksRemaining:
  1988                           	opt stack 0
  1989  000095                     EncryptFRMPayload@frameCounter:
  1990                           	opt stack 0
  1991                           
  1992                           ; 4 bytes @ 0x35
  1993  000095                     	ds	2
  1994  000097                     ??_GenerateSubkey:
  1995                           
  1996                           ; 1 bytes @ 0x37
  1997  000097                     	ds	1
  1998  000098                     GenerateSubkey@const_Rb:
  1999                           	opt stack 0
  2000                           
  2001                           ; 16 bytes @ 0x38
  2002  000098                     	ds	1
  2003  000099                     SwTimerReadValue@timerId:
  2004                           	opt stack 0
  2005  000099                     SwTimerStart@timerId:
  2006                           	opt stack 0
  2007  000099                     EncryptFRMPayload@key:
  2008                           	opt stack 0
  2009                           
  2010                           ; 2 bytes @ 0x39
  2011  000099                     	ds	1
  2012  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  2013  00009A                     ?___lmul:
  2014                           	opt stack 0
  2015  00009A                     LORAWAN_TxDone@timeOnAir:
  2016                           	opt stack 0
  2017  00009A                     ___lmul@multiplier:
  2018                           	opt stack 0
  2019                           
  2020                           ; 4 bytes @ 0x3A
  2021  00009A                     	ds	1
  2022  00009B                     EncryptFRMPayload@macBufferIndex:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x3B
  2026  00009B                     	ds	1
  2027  00009C                     ??_LORAWAN_TxDone:
  2028  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x3C
  2032  00009C                     	ds	2
  2033  00009E                     EncryptFRMPayload@multicastStatus:
  2034                           	opt stack 0
  2035  00009E                     ___lmul@multiplicand:
  2036                           	opt stack 0
  2037                           
  2038                           ; 4 bytes @ 0x3E
  2039  00009E                     	ds	1
  2040  00009F                     ??_EncryptFRMPayload:
  2041                           
  2042                           ; 1 bytes @ 0x3F
  2043  00009F                     	ds	2
  2044  0000A1                     LORAWAN_TxDone@delta:
  2045                           	opt stack 0
  2046                           
  2047                           ; 4 bytes @ 0x41
  2048  0000A1                     	ds	1
  2049  0000A2                     ___lmul@product:
  2050                           	opt stack 0
  2051                           
  2052                           ; 4 bytes @ 0x42
  2053  0000A2                     	ds	3
  2054  0000A5                     LORAWAN_TxDone@i:
  2055                           	opt stack 0
  2056                           
  2057                           ; 1 bytes @ 0x45
  2058  0000A5                     	ds	1
  2059  0000A6                     ??_RADIO_TxDone:
  2060  0000A6                     ??_RADIO_FSKPacketSent:
  2061  0000A6                     ?_ExecuteRxParamSetupReq:
  2062                           	opt stack 0
  2063  0000A6                     ?_rand:
  2064                           	opt stack 0
  2065  0000A6                     ?_GenerateUSFrequency1:
  2066                           	opt stack 0
  2067  0000A6                     ?_GenerateUSFrequency2:
  2068                           	opt stack 0
  2069  0000A6                     ?_GenerateUSFrequencyReception:
  2070                           	opt stack 0
  2071  0000A6                     EncryptFRMPayload@k:
  2072                           	opt stack 0
  2073  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  2074                           	opt stack 0
  2075  0000A6                     ExecuteRxParamSetupReq@ptr:
  2076                           	opt stack 0
  2077  0000A6                     LORAWAN_LinkCheckConfigure@period:
  2078                           	opt stack 0
  2079                           
  2080                           ; 2 bytes @ 0x46
  2081  0000A6                     	ds	1
  2082  0000A7                     EncryptFRMPayload@i:
  2083                           	opt stack 0
  2084                           
  2085                           ; 1 bytes @ 0x47
  2086  0000A7                     	ds	1
  2087  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  2088  0000A8                     ??_ExecuteRxParamSetupReq:
  2089  0000A8                     ??_RADIO_WriteConfiguration:
  2090  0000A8                     ?___lwmod:
  2091                           	opt stack 0
  2092  0000A8                     EncryptFRMPayload@j:
  2093                           	opt stack 0
  2094  0000A8                     ___lwmod@dividend:
  2095                           	opt stack 0
  2096  0000A8                     GenerateSubkey@l:
  2097                           	opt stack 0
  2098                           
  2099                           ; 16 bytes @ 0x48
  2100  0000A8                     	ds	2
  2101  0000AA                     ??_GenerateUSFrequency2:
  2102  0000AA                     ___lwmod@divisor:
  2103                           	opt stack 0
  2104  0000AA                     RADIO_TxDone@timeOnAir:
  2105                           	opt stack 0
  2106  0000AA                     RADIO_FSKPacketSent@timeOnAir:
  2107                           	opt stack 0
  2108  0000AA                     ExecuteRxParamSetupReq@frequency:
  2109                           	opt stack 0
  2110  0000AA                     GenerateUSFrequency1@channelFrequency:
  2111                           	opt stack 0
  2112  0000AA                     GenerateUSFrequencyReception@channelFrequency:
  2113                           	opt stack 0
  2114                           
  2115                           ; 4 bytes @ 0x4A
  2116  0000AA                     	ds	1
  2117  0000AB                     RADIO_WriteConfiguration@i:
  2118                           	opt stack 0
  2119                           
  2120                           ; 1 bytes @ 0x4B
  2121  0000AB                     	ds	1
  2122  0000AC                     ___lwmod@counter:
  2123                           	opt stack 0
  2124  0000AC                     RADIO_WriteConfiguration@tempValue:
  2125                           	opt stack 0
  2126  0000AC                     _LORAWAN_LinkCheckConfigure$2509:
  2127                           	opt stack 0
  2128                           
  2129                           ; 4 bytes @ 0x4C
  2130  0000AC                     	ds	1
  2131  0000AD                     ?_Random:
  2132                           	opt stack 0
  2133  0000AD                     Random@max:
  2134                           	opt stack 0
  2135                           
  2136                           ; 2 bytes @ 0x4D
  2137  0000AD                     	ds	1
  2138  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  2139                           	opt stack 0
  2140  0000AE                     GenerateUSFrequency1@channelIndex:
  2141                           	opt stack 0
  2142  0000AE                     GenerateUSFrequencyReception@channelIndex:
  2143                           	opt stack 0
  2144  0000AE                     _RADIO_TxDone$906:
  2145                           	opt stack 0
  2146  0000AE                     _RADIO_FSKPacketSent$910:
  2147                           	opt stack 0
  2148  0000AE                     GenerateUSFrequency2@channelFrequency:
  2149                           	opt stack 0
  2150                           
  2151                           ; 4 bytes @ 0x4E
  2152  0000AE                     	ds	1
  2153  0000AF                     ?_GetRx1Freq:
  2154                           	opt stack 0
  2155  0000AF                     SearchAvailableChannel@transmissionType:
  2156                           	opt stack 0
  2157                           
  2158                           ; 1 bytes @ 0x4F
  2159  0000AF                     	ds	1
  2160  0000B0                     RADIO_WriteConfiguration@regValue:
  2161                           	opt stack 0
  2162  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  2163                           	opt stack 0
  2164  0000B0                     SearchAvailableChannel@channelIndex:
  2165                           	opt stack 0
  2166                           
  2167                           ; 2 bytes @ 0x50
  2168  0000B0                     	ds	1
  2169  0000B1                     ?_RADIO_Transmit:
  2170                           	opt stack 0
  2171  0000B1                     ?_RADIO_ReceiveStart:
  2172                           	opt stack 0
  2173  0000B1                     RADIO_Transmit@buffer:
  2174                           	opt stack 0
  2175  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  2176                           	opt stack 0
  2177  0000B1                     LORAWAN_Init@RxPayload:
  2178                           	opt stack 0
  2179                           
  2180                           ; 2 bytes @ 0x51
  2181  0000B1                     	ds	1
  2182  0000B2                     ??_SearchAvailableChannel:
  2183  0000B2                     RADIO_FSKPacketSent@irqFlags:
  2184                           	opt stack 0
  2185  0000B2                     GenerateUSFrequency2@channelIndex:
  2186                           	opt stack 0
  2187                           
  2188                           ; 1 bytes @ 0x52
  2189  0000B2                     	ds	1
  2190  0000B3                     ??_RADIO_ReceiveStart:
  2191  0000B3                     ?_ExecuteNewChannel:
  2192                           	opt stack 0
  2193  0000B3                     RADIO_Transmit@bufferLen:
  2194                           	opt stack 0
  2195  0000B3                     GetRx1Freq@channelIndex:
  2196                           	opt stack 0
  2197  0000B3                     LORAWAN_Init@RxJoinResponse:
  2198                           	opt stack 0
  2199  0000B3                     ExecuteNewChannel@ptr:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x53
  2203  0000B3                     	ds	1
  2204  0000B4                     ??_RADIO_Transmit:
  2205                           
  2206                           ; 1 bytes @ 0x54
  2207  0000B4                     	ds	1
  2208  0000B5                     ??_ExecuteNewChannel:
  2209  0000B5                     
  2210                           ; 1 bytes @ 0x55
  2211  0000B5                     	ds	2
  2212  0000B7                     ExecuteNewChannel@drRange:
  2213                           	opt stack 0
  2214  0000B7                     SearchAvailableChannel@randomNumberCopy:
  2215                           	opt stack 0
  2216  0000B7                     _RADIO_ReceiveStart$894:
  2217                           	opt stack 0
  2218                           
  2219                           ; 4 bytes @ 0x57
  2220  0000B7                     	ds	1
  2221  0000B8                     GenerateSubkey@i:
  2222                           	opt stack 0
  2223  0000B8                     SearchAvailableChannel@result:
  2224                           	opt stack 0
  2225  0000B8                     _RADIO_Transmit$889:
  2226                           	opt stack 0
  2227  0000B8                     ExecuteNewChannel@frequency:
  2228                           	opt stack 0
  2229                           
  2230                           ; 4 bytes @ 0x58
  2231  0000B8                     	ds	1
  2232  0000B9                     SearchAvailableChannel@startingIndex:
  2233                           	opt stack 0
  2234  0000B9                     AESCmac@key:
  2235                           	opt stack 0
  2236                           
  2237                           ; 2 bytes @ 0x59
  2238  0000B9                     	ds	1
  2239  0000BA                     SearchAvailableChannel@maxChannels:
  2240                           	opt stack 0
  2241                           
  2242                           ; 1 bytes @ 0x5A
  2243  0000BA                     	ds	1
  2244  0000BB                     SearchAvailableChannel@randomNumber:
  2245                           	opt stack 0
  2246  0000BB                     AESCmac@output:
  2247                           	opt stack 0
  2248                           
  2249                           ; 2 bytes @ 0x5B
  2250  0000BB                     	ds	1
  2251  0000BC                     ExecuteNewChannel@channelIndex:
  2252                           	opt stack 0
  2253  0000BC                     SearchAvailableChannel@i:
  2254                           	opt stack 0
  2255  0000BC                     _RADIO_Transmit$891:
  2256                           	opt stack 0
  2257                           
  2258                           ; 4 bytes @ 0x5C
  2259  0000BC                     	ds	1
  2260  0000BD                     ??_SelectChannelForTransmission:
  2261  0000BD                     ?_MacExecuteCommands:
  2262                           	opt stack 0
  2263  0000BD                     AESCmac@input:
  2264                           	opt stack 0
  2265  0000BD                     MacExecuteCommands@buffer:
  2266                           	opt stack 0
  2267                           
  2268                           ; 2 bytes @ 0x5D
  2269  0000BD                     	ds	1
  2270  0000BE                     SelectChannelForTransmission@frequency:
  2271                           	opt stack 0
  2272                           
  2273                           ; 4 bytes @ 0x5E
  2274  0000BE                     	ds	1
  2275  0000BF                     AESCmac@size:
  2276                           	opt stack 0
  2277  0000BF                     MacExecuteCommands@fOptsLen:
  2278                           	opt stack 0
  2279                           
  2280                           ; 1 bytes @ 0x5F
  2281  0000BF                     	ds	1
  2282  0000C0                     ??_MacExecuteCommands:
  2283  0000C0                     ??_AESCmac:
  2284  0000C0                     RADIO_Transmit@regValue:
  2285                           	opt stack 0
  2286                           
  2287                           ; 1 bytes @ 0x60
  2288  0000C0                     	ds	1
  2289  0000C1                     RADIO_Transmit@i:
  2290                           	opt stack 0
  2291                           
  2292                           ; 1 bytes @ 0x61
  2293  0000C1                     	ds	1
  2294  0000C2                     SelectChannelForTransmission@lastDataRate:
  2295                           	opt stack 0
  2296  0000C2                     MacExecuteCommands@done:
  2297                           	opt stack 0
  2298                           
  2299                           ; 1 bytes @ 0x62
  2300  0000C2                     	ds	1
  2301  0000C3                     SelectChannelForTransmission@result:
  2302                           	opt stack 0
  2303  0000C3                     MacExecuteCommands@ptr:
  2304                           	opt stack 0
  2305                           
  2306                           ; 2 bytes @ 0x63
  2307  0000C3                     	ds	1
  2308  0000C4                     SelectChannelForTransmission@transmissionType:
  2309                           	opt stack 0
  2310                           
  2311                           ; 1 bytes @ 0x64
  2312  0000C4                     	ds	1
  2313  0000C5                     SelectChannelForTransmission@channelIndex:
  2314                           	opt stack 0
  2315                           
  2316                           ; 1 bytes @ 0x65
  2317  0000C5                     	ds	1
  2318  0000C6                     _Retransmissions$1882:
  2319                           	opt stack 0
  2320                           
  2321                           ; 4 bytes @ 0x66
  2322  0000C6                     	ds	1
  2323  0000C7                     ?_ComputeMic:
  2324                           	opt stack 0
  2325  0000C7                     AssemblePacket@port:
  2326                           	opt stack 0
  2327  0000C7                     ComputeMic@key:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x67
  2331  0000C7                     	ds	1
  2332  0000C8                     AssemblePacket@buffer:
  2333                           	opt stack 0
  2334                           
  2335                           ; 2 bytes @ 0x68
  2336  0000C8                     	ds	1
  2337  0000C9                     ComputeMic@buffer:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0x69
  2341  0000C9                     	ds	1
  2342  0000CA                     ??_RADIO_DIO1:
  2343  0000CA                     AssemblePacket@bufferLength:
  2344                           	opt stack 0
  2345                           
  2346                           ; 2 bytes @ 0x6A
  2347  0000CA                     	ds	1
  2348  0000CB                     RADIO_DIO1@dioMapping:
  2349                           	opt stack 0
  2350  0000CB                     ComputeMic@bufferLength:
  2351                           	opt stack 0
  2352                           
  2353                           ; 1 bytes @ 0x6B
  2354  0000CB                     	ds	1
  2355  0000CC                     ??_AssemblePacket:
  2356  0000CC                     ComputeMic@mic:
  2357                           	opt stack 0
  2358                           
  2359                           ; 4 bytes @ 0x6C
  2360  0000CC                     	ds	2
  2361  0000CE                     AssemblePacket@confirmed:
  2362                           	opt stack 0
  2363                           
  2364                           ; 1 bytes @ 0x6E
  2365  0000CE                     	ds	1
  2366  0000CF                     AssemblePacket@mhdr:
  2367                           	opt stack 0
  2368                           
  2369                           ; 1 bytes @ 0x6F
  2370  0000CF                     	ds	1
  2371  0000D0                     ??_PrepareJoinRequestFrame:
  2372  0000D0                     AssemblePacket@fCtrl:
  2373                           	opt stack 0
  2374                           
  2375                           ; 1 bytes @ 0x70
  2376  0000D0                     	ds	1
  2377  0000D1                     AssemblePacket@macCmdIdx:
  2378                           	opt stack 0
  2379                           
  2380                           ; 1 bytes @ 0x71
  2381  0000D1                     	ds	1
  2382  0000D2                     AssemblePacket@bufferIndex:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x72
  2386  0000D2                     	ds	1
  2387  0000D3                     LORAWAN_Send@port:
  2388                           	opt stack 0
  2389                           
  2390                           ; 1 bytes @ 0x73
  2391  0000D3                     	ds	1
  2392  0000D4                     LORAWAN_Send@buffer:
  2393                           	opt stack 0
  2394  0000D4                     PrepareJoinRequestFrame@mic:
  2395                           	opt stack 0
  2396                           
  2397                           ; 4 bytes @ 0x74
  2398  0000D4                     	ds	2
  2399  0000D6                     LORAWAN_Send@bufferLength:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x76
  2403  0000D6                     	ds	1
  2404  0000D7                     ??_LORAWAN_Send:
  2405                           
  2406                           ; 1 bytes @ 0x77
  2407  0000D7                     	ds	1
  2408  0000D8                     LORAWAN_Send@result:
  2409                           	opt stack 0
  2410  0000D8                     PrepareJoinRequestFrame@mhdr:
  2411                           	opt stack 0
  2412                           
  2413                           ; 1 bytes @ 0x78
  2414  0000D8                     	ds	1
  2415  0000D9                     LORAWAN_Send@confirmed:
  2416                           	opt stack 0
  2417  0000D9                     PrepareJoinRequestFrame@iCtr:
  2418                           	opt stack 0
  2419                           
  2420                           ; 1 bytes @ 0x79
  2421  0000D9                     	ds	1
  2422  0000DA                     ??_LORAWAN_RxDone:
  2423  0000DA                     ??_SwTimersExecute:
  2424  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2425                           	opt stack 0
  2426                           
  2427                           ; 1 bytes @ 0x7A
  2428  0000DA                     	ds	1
  2429  0000DB                     LORAWAN_Join@bufferIndex:
  2430                           	opt stack 0
  2431                           
  2432                           ; 1 bytes @ 0x7B
  2433  0000DB                     	ds	1
  2434  0000DC                     LORAWAN_Join@result:
  2435                           	opt stack 0
  2436                           
  2437                           ; 1 bytes @ 0x7C
  2438  0000DC                     	ds	1
  2439  0000DD                     LORAWAN_Join@activationTypeNew:
  2440                           	opt stack 0
  2441                           
  2442                           ; 1 bytes @ 0x7D
  2443  0000DD                     	ds	1
  2444  0000DE                     SwTimersExecute@i:
  2445                           	opt stack 0
  2446                           
  2447                           ; 1 bytes @ 0x7E
  2448  0000DE                     	ds	1
  2449  0000DF                     LORAWAN_RxDone@fPort:
  2450                           	opt stack 0
  2451                           
  2452                           ; 1 bytes @ 0x7F
  2453  0000DF                     	ds	1
  2454  0000E0                     LORAWAN_RxDone@channelIndex:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x80
  2458  0000E0                     	ds	1
  2459  0000E1                     LORAWAN_RxDone@mhdr:
  2460                           	opt stack 0
  2461                           
  2462                           ; 1 bytes @ 0x81
  2463  0000E1                     	ds	1
  2464  0000E2                     LORAWAN_RxDone@extractedMic:
  2465                           	opt stack 0
  2466                           
  2467                           ; 4 bytes @ 0x82
  2468  0000E2                     	ds	4
  2469  0000E6                     LORAWAN_RxDone@bufferIndex:
  2470                           	opt stack 0
  2471                           
  2472                           ; 1 bytes @ 0x86
  2473  0000E6                     	ds	1
  2474  0000E7                     LORAWAN_RxDone@temp:
  2475                           	opt stack 0
  2476                           
  2477                           ; 1 bytes @ 0x87
  2478  0000E7                     	ds	1
  2479  0000E8                     LORAWAN_RxDone@packet:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0x88
  2483  0000E8                     	ds	2
  2484  0000EA                     LORAWAN_RxDone@computedMic:
  2485                           	opt stack 0
  2486                           
  2487                           ; 4 bytes @ 0x8A
  2488  0000EA                     	ds	4
  2489  0000EE                     LORAWAN_RxDone@joinAccept:
  2490                           	opt stack 0
  2491                           
  2492                           ; 2 bytes @ 0x8E
  2493  0000EE                     	ds	2
  2494  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  2495                           	opt stack 0
  2496                           
  2497                           ; 1 bytes @ 0x90
  2498  0000F0                     	ds	1
  2499  0000F1                     LORAWAN_RxDone@hdr:
  2500                           	opt stack 0
  2501                           
  2502                           ; 2 bytes @ 0x91
  2503  0000F1                     	ds	2
  2504  0000F3                     RADIO_RxDone@irqFlags:
  2505                           	opt stack 0
  2506  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  2507                           	opt stack 0
  2508                           
  2509                           ; 1 bytes @ 0x93
  2510  0000F3                     	ds	1
  2511  0000F4                     RADIO_RxDone@i:
  2512                           	opt stack 0
  2513  0000F4                     RADIO_FSKPayloadReady@i:
  2514                           	opt stack 0
  2515                           
  2516                           ; 1 bytes @ 0x94
  2517  0000F4                     	ds	1
  2518  0000F5                     ??_RADIO_DIO0:
  2519                           
  2520                           ; 1 bytes @ 0x95
  2521  0000F5                     	ds	2
  2522  0000F7                     RADIO_DIO0@dioMapping:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0x97
  2526  0000F7                     	ds	1
  2527  0000F8                     RADIO_DIO0@opMode:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0x98
  2531  0000F8                     	ds	1
  2532  0000F9                     tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec2	equ	0xFDD
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           
  2542                           ; 1 bytes @ 0x99
  2543                           
  2544                           	psect	cstackCOMRAM
  2545  000001                     __pcstackCOMRAM:
  2546                           	opt stack 0
  2547  000001                     ?i2_TMR1_ReadTimer:
  2548                           	opt stack 0
  2549  000001                     i2TMR1_WriteTimer@timerVal:
  2550                           	opt stack 0
  2551                           
  2552                           ; 2 bytes @ 0x0
  2553  000001                     	ds	2
  2554  000003                     ??i2_TMR1_ReadTimer:
  2555  000003                     
  2556                           ; 1 bytes @ 0x2
  2557  000003                     	ds	2
  2558  000005                     i2TMR1_ReadTimer@readVal:
  2559                           	opt stack 0
  2560                           
  2561                           ; 2 bytes @ 0x4
  2562  000005                     	ds	2
  2563  000007                     i2TMR1_ReadTimer@readValHigh:
  2564                           	opt stack 0
  2565                           
  2566                           ; 1 bytes @ 0x6
  2567  000007                     	ds	1
  2568  000008                     i2TMR1_ReadTimer@readValLow:
  2569                           	opt stack 0
  2570                           
  2571                           ; 1 bytes @ 0x7
  2572  000008                     	ds	1
  2573  000009                     ?i2_TMR_SwapTimer:
  2574                           	opt stack 0
  2575  000009                     ?i2_TMR_GetDeltaTime:
  2576                           	opt stack 0
  2577  000009                     i2TMR_SwapTimer@timerVal:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0x8
  2581  000009                     	ds	2
  2582  00000B                     
  2583                           ; 1 bytes @ 0xA
  2584  00000B                     	ds	2
  2585  00000D                     ??i2_TMR_GetDeltaTime:
  2586                           
  2587                           ; 1 bytes @ 0xC
  2588  00000D                     	ds	20
  2589  000021                     ?i2_SwTimersInterrupt:
  2590                           	opt stack 0
  2591                           
  2592                           ; 4 bytes @ 0x20
  2593  000021                     	ds	4
  2594  000025                     
  2595                           ; 1 bytes @ 0x24
  2596  000025                     	ds	4
  2597  000029                     i2SwTimersInterrupt@timeElapsed:
  2598                           	opt stack 0
  2599                           
  2600                           ; 4 bytes @ 0x28
  2601  000029                     	ds	4
  2602  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2603                           	opt stack 0
  2604                           
  2605                           ; 4 bytes @ 0x2C
  2606  00002D                     	ds	4
  2607  000031                     i2SwTimersInterrupt@i:
  2608                           	opt stack 0
  2609                           
  2610                           ; 1 bytes @ 0x30
  2611  000031                     	ds	1
  2612  000032                     ??_TMR_ISR_lora:
  2613                           
  2614                           ; 1 bytes @ 0x31
  2615  000032                     	ds	2
  2616  000034                     ??_INTERRUPT_InterruptManager:
  2617                           
  2618                           ; 1 bytes @ 0x33
  2619  000034                     	ds	8
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec2	equ	0xFDD
  2627                           fsr2h	equ	0xFDA
  2628                           fsr2l	equ	0xFD9
  2629                           
  2630 ;;
  2631 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2632 ;;
  2633 ;; *************** function _main *****************
  2634 ;; Defined at:
  2635 ;;		line 56 in file "main.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+8, btemp+
      +9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels required when called:   19
  2655 ;; This function calls:
  2656 ;;		_LORAWAN_Init
  2657 ;;		_LORAWAN_Join
  2658 ;;		_LORAWAN_Mainloop
  2659 ;;		_LORAWAN_Send
  2660 ;;		_LORAWAN_SetApplicationSessionKey
  2661 ;;		_LORAWAN_SetDeviceAddress
  2662 ;;		_LORAWAN_SetNetworkSessionKey
  2663 ;;		_SYSTEM_Initialize
  2664 ;; This function is called by:
  2665 ;;		Startup code after reset
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text0
  2670  006796                     __ptext0:
  2671                           	opt stack 0
  2672  006796                     _main:
  2673                           	opt stack 12
  2674                           
  2675                           ;main.c: 59: SYSTEM_Initialize();
  2676                           
  2677                           ;incstack = 0
  2678  006796  ECCD  F03D         	call	_SYSTEM_Initialize	;wreg free
  2679                           
  2680                           ;main.c: 66: (INTCONbits.GIE = 1);
  2681  00679A  8EF2               	bsf	intcon,7,c	;volatile
  2682                           
  2683                           ;main.c: 72: (INTCONbits.PEIE = 1);
  2684  00679C  8CF2               	bsf	intcon,6,c	;volatile
  2685                           
  2686                           ;main.c: 77: LORAWAN_Init(RxData, RxJoinResponse);
  2687  00679E  0EAC               	movlw	low _RxData
  2688  0067A0  0100               	movlb	0	; () banked
  2689  0067A2  6FB1               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2690  0067A4  0E7E               	movlw	high _RxData
  2691  0067A6  6FB2               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2692  0067A8  0EAA               	movlw	low _RxJoinResponse
  2693  0067AA  6FB3               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2694  0067AC  0E7E               	movlw	high _RxJoinResponse
  2695  0067AE  6FB4               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2696  0067B0  EC0E  F036         	call	_LORAWAN_Init	;wreg free
  2697                           
  2698                           ;main.c: 79: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2699  0067B4  0EE2               	movlw	low _nwkSKey
  2700  0067B6  0100               	movlb	0	; () banked
  2701  0067B8  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2702  0067BA  0E01               	movlw	high _nwkSKey
  2703  0067BC  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2704  0067BE  ECB5  F03B         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2705                           
  2706                           ;main.c: 80: LORAWAN_SetApplicationSessionKey(appSKey);
  2707  0067C2  0ED2               	movlw	low _appSKey
  2708  0067C4  0100               	movlb	0	; () banked
  2709  0067C6  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2710  0067C8  0E01               	movlw	high _appSKey
  2711  0067CA  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2712  0067CC  ECCC  F03B         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2713                           
  2714                           ;main.c: 81: LORAWAN_SetDeviceAddress(devAddr);
  2715  0067D0  C1CE  F060         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2716  0067D4  C1CF  F061         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2717  0067D8  C1D0  F062         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2718  0067DC  C1D1  F063         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2719  0067E0  EC2F  F03E         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2720                           
  2721                           ;main.c: 83: LORAWAN_Join(ABP);
  2722  0067E4  0E01               	movlw	1
  2723  0067E6  EC72  F02F         	call	_LORAWAN_Join
  2724  0067EA                     
  2725                           ;main.c: 86: {
  2726                           ;main.c: 88: LORAWAN_Mainloop();
  2727  0067EA  EC64  F03A         	call	_LORAWAN_Mainloop	;wreg free
  2728                           
  2729                           ;main.c: 90: LORAWAN_Send(UNCNF, 2, "LoRa", 4);
  2730  0067EE  0E02               	movlw	2
  2731  0067F0  0100               	movlb	0	; () banked
  2732  0067F2  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  2733  0067F4  0EF9               	movlw	low STR_1
  2734  0067F6  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  2735  0067F8  0EFF               	movlw	high STR_1
  2736  0067FA  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2737  0067FC  0E04               	movlw	4
  2738  0067FE  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2739  006800  0E00               	movlw	0
  2740  006802  ECE6  F02C         	call	_LORAWAN_Send
  2741  006806  D7F1               	goto	l2493
  2742  006808                     __end_of_main:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           intcon	equ	0xFF2
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           postdec2	equ	0xFDD
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           
  2755 ;; *************** function _SYSTEM_Initialize *****************
  2756 ;; Defined at:
  2757 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:   10
  2778 ;; This function calls:
  2779 ;;		_EXT_INT_Initialize
  2780 ;;		_INTERRUPT_Initialize
  2781 ;;		_LORAWAN_PlatformInit
  2782 ;;		_OSCILLATOR_Initialize
  2783 ;;		_PIN_MANAGER_Initialize
  2784 ;;		_SPI2_Initialize
  2785 ;;		_TMR1_Initialize
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text1
  2792  007B9A                     __ptext1:
  2793                           	opt stack 0
  2794  007B9A                     _SYSTEM_Initialize:
  2795                           	opt stack 20
  2796                           
  2797                           ;mcc.c: 53: INTERRUPT_Initialize();
  2798                           
  2799                           ;incstack = 0
  2800  007B9A  EC46  F03F         	call	_INTERRUPT_Initialize	;wreg free
  2801                           
  2802                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2803  007B9E  EC81  F037         	call	_PIN_MANAGER_Initialize	;wreg free
  2804                           
  2805                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2806  007BA2  ECBD  F03E         	call	_OSCILLATOR_Initialize	;wreg free
  2807                           
  2808                           ;mcc.c: 56: SPI2_Initialize();
  2809  007BA6  ECB6  F03E         	call	_SPI2_Initialize	;wreg free
  2810                           
  2811                           ;mcc.c: 57: TMR1_Initialize();
  2812  007BAA  ECE3  F03B         	call	_TMR1_Initialize	;wreg free
  2813                           
  2814                           ;mcc.c: 58: EXT_INT_Initialize();
  2815  007BAE  EC0F  F03C         	call	_EXT_INT_Initialize	;wreg free
  2816                           
  2817                           ;mcc.c: 59: LORAWAN_PlatformInit();
  2818  007BB2  ECE7  F03C         	call	_LORAWAN_PlatformInit	;wreg free
  2819  007BB6  0012               	return		;funcret
  2820  007BB8                     __end_of_SYSTEM_Initialize:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           postdec2	equ	0xFDD
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           
  2833 ;; *************** function _TMR1_Initialize *****************
  2834 ;; Defined at:
  2835 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    8
  2856 ;; This function calls:
  2857 ;;		_TMR1_SetInterruptHandler
  2858 ;; This function is called by:
  2859 ;;		_SYSTEM_Initialize
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text2
  2864  0077C6                     __ptext2:
  2865                           	opt stack 0
  2866  0077C6                     _TMR1_Initialize:
  2867                           	opt stack 21
  2868                           
  2869                           ;tmr1.c: 69: T1GCON = 0x00;
  2870                           
  2871                           ;incstack = 0
  2872  0077C6  0E00               	movlw	0
  2873  0077C8  6ECC               	movwf	4044,c	;volatile
  2874                           
  2875                           ;tmr1.c: 72: TMR1H = 0x00;
  2876  0077CA  0E00               	movlw	0
  2877  0077CC  6ECF               	movwf	4047,c	;volatile
  2878                           
  2879                           ;tmr1.c: 75: TMR1L = 0x00;
  2880  0077CE  0E00               	movlw	0
  2881  0077D0  6ECE               	movwf	4046,c	;volatile
  2882                           
  2883                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2884  0077D2  CFCE F1F4          	movff	4046,_timer1ReloadVal	;volatile
  2885  0077D6  CFCF F1F5          	movff	4047,_timer1ReloadVal+1	;volatile
  2886                           
  2887                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2888  0077DA  909E               	bcf	3998,0,c	;volatile
  2889                           
  2890                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2891  0077DC  809D               	bsf	3997,0,c	;volatile
  2892                           
  2893                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2894  0077DE  0EAE               	movlw	low _TMR1_DefaultInterruptHandler
  2895  0077E0  0100               	movlb	0	; () banked
  2896  0077E2  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2897  0077E4  0E7E               	movlw	high _TMR1_DefaultInterruptHandler
  2898  0077E6  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2899  0077E8  ECD1  F03E         	call	_TMR1_SetInterruptHandler	;wreg free
  2900                           
  2901                           ;tmr1.c: 90: T1CON = 0x8D;
  2902  0077EC  0E8D               	movlw	141
  2903  0077EE  6ECD               	movwf	4045,c	;volatile
  2904  0077F0  0012               	return		;funcret
  2905  0077F2                     __end_of_TMR1_Initialize:
  2906                           	opt stack 0
  2907                           tblptru	equ	0xFF8
  2908                           tblptrh	equ	0xFF7
  2909                           tblptrl	equ	0xFF6
  2910                           tablat	equ	0xFF5
  2911                           intcon	equ	0xFF2
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           
  2918 ;; *************** function _SPI2_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    7
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_SYSTEM_Initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text3
  2949  007D6C                     __ptext3:
  2950                           	opt stack 0
  2951  007D6C                     _SPI2_Initialize:
  2952                           	opt stack 22
  2953                           
  2954                           ;spi2.c: 70: SSP2STAT = 0x40;
  2955                           
  2956                           ;incstack = 0
  2957  007D6C  0E40               	movlw	64
  2958  007D6E  6E6D               	movwf	3949,c	;volatile
  2959                           
  2960                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2961  007D70  0E20               	movlw	32
  2962  007D72  6E6C               	movwf	3948,c	;volatile
  2963                           
  2964                           ;spi2.c: 76: SSP2ADD = 0x00;
  2965  007D74  0E00               	movlw	0
  2966  007D76  6E6E               	movwf	3950,c	;volatile
  2967  007D78  0012               	return		;funcret
  2968  007D7A                     __end_of_SPI2_Initialize:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           intcon	equ	0xFF2
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           
  2981 ;; *************** function _PIN_MANAGER_Initialize *****************
  2982 ;; Defined at:
  2983 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    8
  3004 ;; This function calls:
  3005 ;;		_IOCB4_SetInterruptHandler
  3006 ;; This function is called by:
  3007 ;;		_SYSTEM_Initialize
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text4
  3012  006F02                     __ptext4:
  3013                           	opt stack 0
  3014  006F02                     _PIN_MANAGER_Initialize:
  3015                           	opt stack 21
  3016                           
  3017                           ;pin_manager.c: 64: LATE = 0x00;
  3018                           
  3019                           ;incstack = 0
  3020  006F02  0E00               	movlw	0
  3021  006F04  6E8D               	movwf	3981,c	;volatile
  3022                           
  3023                           ;pin_manager.c: 65: LATD = 0x00;
  3024  006F06  0E00               	movlw	0
  3025  006F08  6E8C               	movwf	3980,c	;volatile
  3026                           
  3027                           ;pin_manager.c: 66: LATA = 0x00;
  3028  006F0A  0E00               	movlw	0
  3029  006F0C  6E89               	movwf	3977,c	;volatile
  3030                           
  3031                           ;pin_manager.c: 67: LATB = 0x00;
  3032  006F0E  0E00               	movlw	0
  3033  006F10  6E8A               	movwf	3978,c	;volatile
  3034                           
  3035                           ;pin_manager.c: 68: LATC = 0x00;
  3036  006F12  0E00               	movlw	0
  3037  006F14  6E8B               	movwf	3979,c	;volatile
  3038                           
  3039                           ;pin_manager.c: 73: TRISE = 0x07;
  3040  006F16  0E07               	movlw	7
  3041  006F18  6E96               	movwf	3990,c	;volatile
  3042                           
  3043                           ;pin_manager.c: 74: TRISA = 0xFF;
  3044  006F1A  6892               	setf	3986,c	;volatile
  3045                           
  3046                           ;pin_manager.c: 75: TRISB = 0xF7;
  3047  006F1C  0EF7               	movlw	247
  3048  006F1E  6E93               	movwf	3987,c	;volatile
  3049                           
  3050                           ;pin_manager.c: 76: TRISC = 0xFE;
  3051  006F20  0EFE               	movlw	254
  3052  006F22  6E94               	movwf	3988,c	;volatile
  3053                           
  3054                           ;pin_manager.c: 77: TRISD = 0xE6;
  3055  006F24  0EE6               	movlw	230
  3056  006F26  6E95               	movwf	3989,c	;volatile
  3057                           
  3058                           ;pin_manager.c: 82: ANSELD = 0xE4;
  3059  006F28  0EE4               	movlw	228
  3060  006F2A  010F               	movlb	15	; () banked
  3061  006F2C  6F3B               	movwf	59,b	;volatile
  3062                           
  3063                           ;pin_manager.c: 83: ANSELC = 0xF8;
  3064  006F2E  0EF8               	movlw	248
  3065  006F30  6F3A               	movwf	58,b	;volatile
  3066                           
  3067                           ;pin_manager.c: 84: ANSELB = 0x20;
  3068  006F32  0E20               	movlw	32
  3069  006F34  6F39               	movwf	57,b	;volatile
  3070                           
  3071                           ;pin_manager.c: 85: ANSELE = 0x07;
  3072  006F36  0E07               	movlw	7
  3073  006F38  6F3C               	movwf	60,b	;volatile
  3074                           
  3075                           ;pin_manager.c: 86: ANSELA = 0x2F;
  3076  006F3A  0E2F               	movlw	47
  3077  006F3C  6F38               	movwf	56,b	;volatile
  3078                           
  3079                           ;pin_manager.c: 91: WPUB = 0x17;
  3080  006F3E  0E17               	movlw	23
  3081  006F40  6E61               	movwf	3937,c	;volatile
  3082                           
  3083                           ; BSR set to: 15
  3084                           ;pin_manager.c: 92: INTCON2bits.nRBPU = 1;
  3085  006F42  8EF1               	bsf	intcon2,7,c	;volatile
  3086                           
  3087                           ; BSR set to: 15
  3088                           ;pin_manager.c: 101: IOCBbits.IOCB4 = 1;
  3089  006F44  8862               	bsf	3938,4,c	;volatile
  3090                           
  3091                           ; BSR set to: 15
  3092                           ;pin_manager.c: 106: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3093  006F46  0EB0               	movlw	low _IOCB4_DefaultInterruptHandler
  3094  006F48  0100               	movlb	0	; () banked
  3095  006F4A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3096  006F4C  0E7E               	movlw	high _IOCB4_DefaultInterruptHandler
  3097  006F4E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3098  006F50  ECD6  F03E         	call	_IOCB4_SetInterruptHandler	;wreg free
  3099                           
  3100                           ;pin_manager.c: 109: INTCONbits.RBIE = 1;
  3101  006F54  86F2               	bsf	intcon,3,c	;volatile
  3102  006F56  0012               	return		;funcret
  3103  006F58                     __end_of_PIN_MANAGER_Initialize:
  3104                           	opt stack 0
  3105                           tblptru	equ	0xFF8
  3106                           tblptrh	equ	0xFF7
  3107                           tblptrl	equ	0xFF6
  3108                           tablat	equ	0xFF5
  3109                           intcon	equ	0xFF2
  3110                           intcon2	equ	0xFF1
  3111                           postinc0	equ	0xFEE
  3112                           wreg	equ	0xFE8
  3113                           postdec2	equ	0xFDD
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           
  3117 ;; *************** function _OSCILLATOR_Initialize *****************
  3118 ;; Defined at:
  3119 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    7
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_SYSTEM_Initialize
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text5
  3148  007D7A                     __ptext5:
  3149                           	opt stack 0
  3150  007D7A                     _OSCILLATOR_Initialize:
  3151                           	opt stack 22
  3152                           
  3153                           ;mcc.c: 65: OSCCON = 0x70;
  3154                           
  3155                           ;incstack = 0
  3156  007D7A  0E70               	movlw	112
  3157  007D7C  6ED3               	movwf	4051,c	;volatile
  3158                           
  3159                           ;mcc.c: 67: OSCCON2 = 0x04;
  3160  007D7E  0E04               	movlw	4
  3161  007D80  6ED2               	movwf	4050,c	;volatile
  3162                           
  3163                           ;mcc.c: 69: OSCTUNE = 0x00;
  3164  007D82  0E00               	movlw	0
  3165  007D84  6E9B               	movwf	3995,c	;volatile
  3166  007D86  0012               	return		;funcret
  3167  007D88                     __end_of_OSCILLATOR_Initialize:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           intcon	equ	0xFF2
  3174                           intcon2	equ	0xFF1
  3175                           postinc0	equ	0xFEE
  3176                           wreg	equ	0xFE8
  3177                           postdec2	equ	0xFDD
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           
  3181 ;; *************** function _LORAWAN_PlatformInit *****************
  3182 ;; Defined at:
  3183 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    9
  3204 ;; This function calls:
  3205 ;;		_DIO0_ISR_Lora_Init
  3206 ;;		_DIO1_ISR_Lora_Init
  3207 ;;		_DIO2_ISR_Lora_Init
  3208 ;;		_DIO3_ISR_Lora_Init
  3209 ;;		_DIO4_ISR_Lora_Init
  3210 ;;		_DIO5_ISR_Lora_Init
  3211 ;;		_SystemTimerInit
  3212 ;;		_TMR_ISR_Lora_Init
  3213 ;; This function is called by:
  3214 ;;		_SYSTEM_Initialize
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text6
  3219  0079CE                     __ptext6:
  3220                           	opt stack 0
  3221  0079CE                     _LORAWAN_PlatformInit:
  3222                           	opt stack 20
  3223                           
  3224                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3225                           
  3226                           ;incstack = 0
  3227  0079CE  EC8E  F03E         	call	_TMR_ISR_Lora_Init	;wreg free
  3228                           
  3229                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3230  0079D2  ECA6  F03E         	call	_DIO0_ISR_Lora_Init	;wreg free
  3231                           
  3232                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3233  0079D6  EC9E  F03E         	call	_DIO1_ISR_Lora_Init	;wreg free
  3234                           
  3235                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3236  0079DA  EC96  F03E         	call	_DIO2_ISR_Lora_Init	;wreg free
  3237                           
  3238                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3239  0079DE  EC52  F03F         	call	_DIO3_ISR_Lora_Init	;wreg free
  3240                           
  3241                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3242  0079E2  EC51  F03F         	call	_DIO4_ISR_Lora_Init	;wreg free
  3243                           
  3244                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3245  0079E6  EC50  F03F         	call	_DIO5_ISR_Lora_Init	;wreg free
  3246                           
  3247                           ;lorawan_init.c: 81: SystemTimerInit();
  3248  0079EA  EC26  F03F         	call	_SystemTimerInit	;wreg free
  3249  0079EE  0012               	return		;funcret
  3250  0079F0                     __end_of_LORAWAN_PlatformInit:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           intcon	equ	0xFF2
  3257                           intcon2	equ	0xFF1
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           
  3264 ;; *************** function _TMR_ISR_Lora_Init *****************
  3265 ;; Defined at:
  3266 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    8
  3287 ;; This function calls:
  3288 ;;		_TMR1_SetInterruptHandler
  3289 ;; This function is called by:
  3290 ;;		_LORAWAN_PlatformInit
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text7
  3295  007D1C                     __ptext7:
  3296                           	opt stack 0
  3297  007D1C                     _TMR_ISR_Lora_Init:
  3298                           	opt stack 20
  3299                           
  3300                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3301                           
  3302                           ;incstack = 0
  3303  007D1C  0EAE               	movlw	low _TMR_ISR_lora
  3304  007D1E  0100               	movlb	0	; () banked
  3305  007D20  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3306  007D22  0E6F               	movlw	high _TMR_ISR_lora
  3307  007D24  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3308  007D26  ECD1  F03E         	call	_TMR1_SetInterruptHandler	;wreg free
  3309  007D2A  0012               	return		;funcret
  3310  007D2C                     __end_of_TMR_ISR_Lora_Init:
  3311                           	opt stack 0
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           intcon	equ	0xFF2
  3317                           intcon2	equ	0xFF1
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           postdec2	equ	0xFDD
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           
  3324 ;; *************** function _TMR1_SetInterruptHandler *****************
  3325 ;; Defined at:
  3326 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3329 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;Total ram usage:        2 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    7
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_TMR_ISR_Lora_Init
  3352 ;;		_TMR1_Initialize
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text8
  3357  007DA2                     __ptext8:
  3358                           	opt stack 0
  3359  007DA2                     _TMR1_SetInterruptHandler:
  3360                           	opt stack 21
  3361                           
  3362                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  3363                           
  3364                           ;incstack = 0
  3365  007DA2  C060  F1F2         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3366  007DA6  C061  F1F3         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3367  007DAA  0012               	return		;funcret
  3368  007DAC                     __end_of_TMR1_SetInterruptHandler:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           intcon	equ	0xFF2
  3375                           intcon2	equ	0xFF1
  3376                           postinc0	equ	0xFEE
  3377                           wreg	equ	0xFE8
  3378                           postdec2	equ	0xFDD
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           
  3382 ;; *************** function _SystemTimerInit *****************
  3383 ;; Defined at:
  3384 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    7
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_LORAWAN_PlatformInit
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text9
  3413  007E4C                     __ptext9:
  3414                           	opt stack 0
  3415  007E4C                     _SystemTimerInit:
  3416                           	opt stack 21
  3417                           
  3418                           ;sw_timer.c: 137: allocatedTimers = 0;
  3419                           
  3420                           ;incstack = 0
  3421  007E4C  0E00               	movlw	0
  3422  007E4E  0100               	movlb	0	; () banked
  3423  007E50  6FFF               	movwf	_allocatedTimers& (0+255),b	;volatile
  3424                           
  3425                           ; BSR set to: 0
  3426  007E52  0012               	return		;funcret
  3427  007E54                     __end_of_SystemTimerInit:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           intcon	equ	0xFF2
  3434                           intcon2	equ	0xFF1
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           postdec2	equ	0xFDD
  3438                           fsr2h	equ	0xFDA
  3439                           fsr2l	equ	0xFD9
  3440                           
  3441 ;; *************** function _DIO5_ISR_Lora_Init *****************
  3442 ;; Defined at:
  3443 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		None
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    7
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_LORAWAN_PlatformInit
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text10
  3472  007EA0                     __ptext10:
  3473                           	opt stack 0
  3474  007EA0                     _DIO5_ISR_Lora_Init:
  3475                           	opt stack 21
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;incstack = 0
  3479  007EA0  0012               	return		;funcret
  3480  007EA2                     __end_of_DIO5_ISR_Lora_Init:
  3481                           	opt stack 0
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           intcon	equ	0xFF2
  3487                           intcon2	equ	0xFF1
  3488                           postinc0	equ	0xFEE
  3489                           wreg	equ	0xFE8
  3490                           postdec2	equ	0xFDD
  3491                           fsr2h	equ	0xFDA
  3492                           fsr2l	equ	0xFD9
  3493                           
  3494 ;; *************** function _DIO4_ISR_Lora_Init *****************
  3495 ;; Defined at:
  3496 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		None
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    7
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_LORAWAN_PlatformInit
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text11
  3525  007EA2                     __ptext11:
  3526                           	opt stack 0
  3527  007EA2                     _DIO4_ISR_Lora_Init:
  3528                           	opt stack 21
  3529                           
  3530                           ;incstack = 0
  3531  007EA2  0012               	return		;funcret
  3532  007EA4                     __end_of_DIO4_ISR_Lora_Init:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           intcon	equ	0xFF2
  3539                           intcon2	equ	0xFF1
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           
  3546 ;; *************** function _DIO3_ISR_Lora_Init *****************
  3547 ;; Defined at:
  3548 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		None
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    7
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_LORAWAN_PlatformInit
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text12
  3577  007EA4                     __ptext12:
  3578                           	opt stack 0
  3579  007EA4                     _DIO3_ISR_Lora_Init:
  3580                           	opt stack 21
  3581                           
  3582                           ;incstack = 0
  3583  007EA4  0012               	return		;funcret
  3584  007EA6                     __end_of_DIO3_ISR_Lora_Init:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           intcon	equ	0xFF2
  3591                           intcon2	equ	0xFF1
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           
  3598 ;; *************** function _DIO2_ISR_Lora_Init *****************
  3599 ;; Defined at:
  3600 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    8
  3621 ;; This function calls:
  3622 ;;		_IOCB4_SetInterruptHandler
  3623 ;; This function is called by:
  3624 ;;		_LORAWAN_PlatformInit
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text13
  3629  007D2C                     __ptext13:
  3630                           	opt stack 0
  3631  007D2C                     _DIO2_ISR_Lora_Init:
  3632                           	opt stack 20
  3633                           
  3634                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  3635                           
  3636                           ;incstack = 0
  3637  007D2C  0E76               	movlw	low _DIO2_ISR_Lora
  3638  007D2E  0100               	movlb	0	; () banked
  3639  007D30  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3640  007D32  0E7E               	movlw	high _DIO2_ISR_Lora
  3641  007D34  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3642  007D36  ECD6  F03E         	call	_IOCB4_SetInterruptHandler	;wreg free
  3643  007D3A  0012               	return		;funcret
  3644  007D3C                     __end_of_DIO2_ISR_Lora_Init:
  3645                           	opt stack 0
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           intcon	equ	0xFF2
  3651                           intcon2	equ	0xFF1
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           postdec2	equ	0xFDD
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           
  3658 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3659 ;; Defined at:
  3660 ;;		line 141 in file "mcc_generated_files/pin_manager.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3663 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    7
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_DIO2_ISR_Lora_Init
  3686 ;;		_PIN_MANAGER_Initialize
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text14
  3691  007DAC                     __ptext14:
  3692                           	opt stack 0
  3693  007DAC                     _IOCB4_SetInterruptHandler:
  3694                           	opt stack 21
  3695                           
  3696                           ;pin_manager.c: 142: IOCB4_InterruptHandler = InterruptHandler;
  3697                           
  3698                           ;incstack = 0
  3699  007DAC  C060  F1F6         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3700  007DB0  C061  F1F7         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3701  007DB4  0012               	return		;funcret
  3702  007DB6                     __end_of_IOCB4_SetInterruptHandler:
  3703                           	opt stack 0
  3704                           tblptru	equ	0xFF8
  3705                           tblptrh	equ	0xFF7
  3706                           tblptrl	equ	0xFF6
  3707                           tablat	equ	0xFF5
  3708                           intcon	equ	0xFF2
  3709                           intcon2	equ	0xFF1
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec2	equ	0xFDD
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           
  3716 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3717 ;; Defined at:
  3718 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    8
  3739 ;; This function calls:
  3740 ;;		_INT2_SetInterruptHandler
  3741 ;; This function is called by:
  3742 ;;		_LORAWAN_PlatformInit
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text15
  3747  007D3C                     __ptext15:
  3748                           	opt stack 0
  3749  007D3C                     _DIO1_ISR_Lora_Init:
  3750                           	opt stack 20
  3751                           
  3752                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3753                           
  3754                           ;incstack = 0
  3755  007D3C  0E7C               	movlw	low _DIO1_ISR_Lora
  3756  007D3E  0100               	movlb	0	; () banked
  3757  007D40  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3758  007D42  0E7E               	movlw	high _DIO1_ISR_Lora
  3759  007D44  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3760  007D46  ECDB  F03E         	call	_INT2_SetInterruptHandler	;wreg free
  3761  007D4A  0012               	return		;funcret
  3762  007D4C                     __end_of_DIO1_ISR_Lora_Init:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           
  3776 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3777 ;; Defined at:
  3778 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    8
  3799 ;; This function calls:
  3800 ;;		_INT1_SetInterruptHandler
  3801 ;; This function is called by:
  3802 ;;		_LORAWAN_PlatformInit
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text16
  3807  007D4C                     __ptext16:
  3808                           	opt stack 0
  3809  007D4C                     _DIO0_ISR_Lora_Init:
  3810                           	opt stack 20
  3811                           
  3812                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3813                           
  3814                           ;incstack = 0
  3815  007D4C  0E82               	movlw	low _DIO0_ISR_Lora
  3816  007D4E  0100               	movlb	0	; () banked
  3817  007D50  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3818  007D52  0E7E               	movlw	high _DIO0_ISR_Lora
  3819  007D54  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3820  007D56  ECE0  F03E         	call	_INT1_SetInterruptHandler	;wreg free
  3821  007D5A  0012               	return		;funcret
  3822  007D5C                     __end_of_DIO0_ISR_Lora_Init:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           intcon	equ	0xFF2
  3829                           intcon2	equ	0xFF1
  3830                           postinc0	equ	0xFEE
  3831                           wreg	equ	0xFE8
  3832                           postdec2	equ	0xFDD
  3833                           fsr2h	equ	0xFDA
  3834                           fsr2l	equ	0xFD9
  3835                           
  3836 ;; *************** function _INTERRUPT_Initialize *****************
  3837 ;; Defined at:
  3838 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		None
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    7
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_SYSTEM_Initialize
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text17
  3867  007E8C                     __ptext17:
  3868                           	opt stack 0
  3869  007E8C                     _INTERRUPT_Initialize:
  3870                           	opt stack 22
  3871                           
  3872                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3873                           
  3874                           ;incstack = 0
  3875  007E8C  9ED0               	bcf	4048,7,c	;volatile
  3876  007E8E  0012               	return		;funcret
  3877  007E90                     __end_of_INTERRUPT_Initialize:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           intcon	equ	0xFF2
  3884                           intcon2	equ	0xFF1
  3885                           postinc0	equ	0xFEE
  3886                           wreg	equ	0xFE8
  3887                           postdec2	equ	0xFDD
  3888                           fsr2h	equ	0xFDA
  3889                           fsr2l	equ	0xFD9
  3890                           
  3891 ;; *************** function _EXT_INT_Initialize *****************
  3892 ;; Defined at:
  3893 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    8
  3914 ;; This function calls:
  3915 ;;		_INT1_SetInterruptHandler
  3916 ;;		_INT2_SetInterruptHandler
  3917 ;; This function is called by:
  3918 ;;		_SYSTEM_Initialize
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text18
  3923  00781E                     __ptext18:
  3924                           	opt stack 0
  3925  00781E                     _EXT_INT_Initialize:
  3926                           	opt stack 21
  3927                           
  3928                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3929                           
  3930                           ;incstack = 0
  3931  00781E  90F0               	bcf	intcon3,0,c	;volatile
  3932                           
  3933                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3934  007820  8AF1               	bsf	intcon2,5,c	;volatile
  3935                           
  3936                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3937  007822  0EB4               	movlw	low _INT1_DefaultInterruptHandler
  3938  007824  0100               	movlb	0	; () banked
  3939  007826  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3940  007828  0E7E               	movlw	high _INT1_DefaultInterruptHandler
  3941  00782A  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3942  00782C  ECE0  F03E         	call	_INT1_SetInterruptHandler	;wreg free
  3943                           
  3944                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3945  007830  86F0               	bsf	intcon3,3,c	;volatile
  3946                           
  3947                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3948  007832  92F0               	bcf	intcon3,1,c	;volatile
  3949                           
  3950                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3951  007834  88F1               	bsf	intcon2,4,c	;volatile
  3952                           
  3953                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3954  007836  0EB2               	movlw	low _INT2_DefaultInterruptHandler
  3955  007838  0100               	movlb	0	; () banked
  3956  00783A  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3957  00783C  0E7E               	movlw	high _INT2_DefaultInterruptHandler
  3958  00783E  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3959  007840  ECDB  F03E         	call	_INT2_SetInterruptHandler	;wreg free
  3960                           
  3961                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3962  007844  88F0               	bsf	intcon3,4,c	;volatile
  3963  007846  0012               	return		;funcret
  3964  007848                     __end_of_EXT_INT_Initialize:
  3965                           	opt stack 0
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           intcon	equ	0xFF2
  3971                           intcon2	equ	0xFF1
  3972                           intcon3	equ	0xFF0
  3973                           postinc0	equ	0xFEE
  3974                           wreg	equ	0xFE8
  3975                           postdec2	equ	0xFDD
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           
  3979 ;; *************** function _INT2_SetInterruptHandler *****************
  3980 ;; Defined at:
  3981 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3984 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    7
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_DIO1_ISR_Lora_Init
  4007 ;;		_EXT_INT_Initialize
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text19
  4012  007DB6                     __ptext19:
  4013                           	opt stack 0
  4014  007DB6                     _INT2_SetInterruptHandler:
  4015                           	opt stack 20
  4016                           
  4017                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  4018                           
  4019                           ;incstack = 0
  4020  007DB6  C060  F1F8         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4021  007DBA  C061  F1F9         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4022  007DBE  0012               	return		;funcret
  4023  007DC0                     __end_of_INT2_SetInterruptHandler:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           intcon	equ	0xFF2
  4030                           intcon2	equ	0xFF1
  4031                           intcon3	equ	0xFF0
  4032                           postinc0	equ	0xFEE
  4033                           wreg	equ	0xFE8
  4034                           postdec2	equ	0xFDD
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           
  4038 ;; *************** function _INT1_SetInterruptHandler *****************
  4039 ;; Defined at:
  4040 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4043 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    7
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_DIO0_ISR_Lora_Init
  4066 ;;		_EXT_INT_Initialize
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text20
  4071  007DC0                     __ptext20:
  4072                           	opt stack 0
  4073  007DC0                     _INT1_SetInterruptHandler:
  4074                           	opt stack 20
  4075                           
  4076                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  4077                           
  4078                           ;incstack = 0
  4079  007DC0  C060  F1FA         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4080  007DC4  C061  F1FB         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4081  007DC8  0012               	return		;funcret
  4082  007DCA                     __end_of_INT1_SetInterruptHandler:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           intcon	equ	0xFF2
  4089                           intcon2	equ	0xFF1
  4090                           intcon3	equ	0xFF0
  4091                           postinc0	equ	0xFEE
  4092                           wreg	equ	0xFE8
  4093                           postdec2	equ	0xFDD
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           
  4097 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  4098 ;; Defined at:
  4099 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  4102 ;;		 -> nwkSKey(16), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    8
  4121 ;; This function calls:
  4122 ;;		_memcpy
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text21
  4129  00776A                     __ptext21:
  4130                           	opt stack 0
  4131  00776A                     _LORAWAN_SetNetworkSessionKey:
  4132                           	opt stack 22
  4133                           
  4134                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  4135                           
  4136                           ;incstack = 0
  4137  00776A  0100               	movlb	0	; () banked
  4138  00776C  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  4139  00776E  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  4140  007770  B4D8               	btfsc	status,2,c
  4141  007772  0012               	return	
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;lorawan.c: 382: {
  4145                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  4146  007774  0E22               	movlw	low (_loRa+34)
  4147  007776  6F60               	movwf	memcpy@d1& (0+255),b
  4148  007778  0E02               	movlw	high (_loRa+34)
  4149  00777A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4150  00777C  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  4151  007780  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  4152  007784  0E00               	movlw	0
  4153  007786  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4154  007788  0E10               	movlw	16
  4155  00778A  6F64               	movwf	memcpy@n& (0+255),b
  4156  00778C  EC3E  F036         	call	_memcpy	;wreg free
  4157                           
  4158                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  4159  007790  0102               	movlb	2	; () banked
  4160  007792  8996               	bsf	(_loRa+150)& (0+255),4,b
  4161                           
  4162                           ; BSR set to: 2
  4163                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  4164  007794  9902               	bcf	(_loRa+2)& (0+255),4,b
  4165  007796  0012               	return	
  4166  007798                     __end_of_LORAWAN_SetNetworkSessionKey:
  4167                           	opt stack 0
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           intcon	equ	0xFF2
  4173                           intcon2	equ	0xFF1
  4174                           intcon3	equ	0xFF0
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           postdec2	equ	0xFDD
  4178                           fsr2h	equ	0xFDA
  4179                           fsr2l	equ	0xFD9
  4180                           status	equ	0xFD8
  4181                           
  4182 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  4183 ;; Defined at:
  4184 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		None
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;Total ram usage:        4 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    7
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text22
  4213  007C5E                     __ptext22:
  4214                           	opt stack 0
  4215  007C5E                     _LORAWAN_SetDeviceAddress:
  4216                           	opt stack 23
  4217                           
  4218                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  4219                           
  4220                           ;incstack = 0
  4221  007C5E  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  4222  007C62  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  4223  007C66  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  4224  007C6A  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  4225                           
  4226                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  4227  007C6E  0102               	movlb	2	; () banked
  4228  007C70  8596               	bsf	(_loRa+150)& (0+255),2,b
  4229                           
  4230                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  4231  007C72  9902               	bcf	(_loRa+2)& (0+255),4,b
  4232                           
  4233                           ; BSR set to: 2
  4234  007C74  0012               	return		;funcret
  4235  007C76                     __end_of_LORAWAN_SetDeviceAddress:
  4236                           	opt stack 0
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           intcon	equ	0xFF2
  4242                           intcon2	equ	0xFF1
  4243                           intcon3	equ	0xFF0
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  4252 ;; Defined at:
  4253 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  4256 ;;		 -> appSKey(16), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        2 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    8
  4275 ;; This function calls:
  4276 ;;		_memcpy
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text23
  4283  007798                     __ptext23:
  4284                           	opt stack 0
  4285  007798                     _LORAWAN_SetApplicationSessionKey:
  4286                           	opt stack 22
  4287                           
  4288                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  4289                           
  4290                           ; BSR set to: 2
  4291                           ;incstack = 0
  4292  007798  0100               	movlb	0	; () banked
  4293  00779A  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  4294  00779C  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  4295  00779E  B4D8               	btfsc	status,2,c
  4296  0077A0  0012               	return	
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;lorawan.c: 397: {
  4300                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  4301  0077A2  0E32               	movlw	low (_loRa+50)
  4302  0077A4  6F60               	movwf	memcpy@d1& (0+255),b
  4303  0077A6  0E02               	movlw	high (_loRa+50)
  4304  0077A8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4305  0077AA  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  4306  0077AE  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  4307  0077B2  0E00               	movlw	0
  4308  0077B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4309  0077B6  0E10               	movlw	16
  4310  0077B8  6F64               	movwf	memcpy@n& (0+255),b
  4311  0077BA  EC3E  F036         	call	_memcpy	;wreg free
  4312                           
  4313                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  4314  0077BE  0102               	movlb	2	; () banked
  4315  0077C0  8B96               	bsf	(_loRa+150)& (0+255),5,b
  4316                           
  4317                           ; BSR set to: 2
  4318                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  4319  0077C2  9902               	bcf	(_loRa+2)& (0+255),4,b
  4320  0077C4  0012               	return	
  4321  0077C6                     __end_of_LORAWAN_SetApplicationSessionKey:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           intcon3	equ	0xFF0
  4330                           postinc0	equ	0xFEE
  4331                           wreg	equ	0xFE8
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _LORAWAN_Mainloop *****************
  4338 ;; Defined at:
  4339 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+8, btemp+
      +9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   18
  4360 ;; This function calls:
  4361 ;;		_INTERRUPT_GetDioStatus
  4362 ;;		_RADIO_DIO0
  4363 ;;		_RADIO_DIO1
  4364 ;;		_RADIO_DIO2
  4365 ;;		_RADIO_DIO3
  4366 ;;		_RADIO_DIO4
  4367 ;;		_RADIO_DIO5
  4368 ;;		_SwTimersExecute
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text24
  4375  0074C8                     __ptext24:
  4376                           	opt stack 0
  4377  0074C8                     _LORAWAN_Mainloop:
  4378                           	opt stack 12
  4379                           
  4380                           ;lorawan.c: 2240: SwTimersExecute();
  4381                           
  4382                           ;incstack = 0
  4383  0074C8  ECBC  F02A         	call	_SwTimersExecute	;wreg free
  4384                           
  4385                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  4386  0074CC  EC68  F03E         	call	_INTERRUPT_GetDioStatus	;wreg free
  4387  0074D0  0101               	movlb	1	; () banked
  4388  0074D2  6F71               	movwf	_localDioStatus& (0+255),b
  4389                           
  4390                           ; BSR set to: 1
  4391                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  4392  0074D4  B171               	btfsc	_localDioStatus& (0+255),0,b
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;lorawan.c: 2246: {
  4396                           ;lorawan.c: 2247: RADIO_DIO0();
  4397  0074D6  ECF8  F030         	call	_RADIO_DIO0	;wreg free
  4398                           
  4399                           ;lorawan.c: 2248: }
  4400                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  4401  0074DA  0101               	movlb	1	; () banked
  4402  0074DC  B371               	btfsc	_localDioStatus& (0+255),1,b
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;lorawan.c: 2250: {
  4406                           ;lorawan.c: 2251: RADIO_DIO1();
  4407  0074DE  ECA4  F038         	call	_RADIO_DIO1	;wreg free
  4408                           
  4409                           ;lorawan.c: 2252: }
  4410                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  4411  0074E2  0101               	movlb	1	; () banked
  4412  0074E4  B571               	btfsc	_localDioStatus& (0+255),2,b
  4413                           
  4414                           ; BSR set to: 1
  4415                           ;lorawan.c: 2254: {
  4416                           ;lorawan.c: 2255: RADIO_DIO2();
  4417  0074E6  ECAC  F037         	call	_RADIO_DIO2	;wreg free
  4418                           
  4419                           ;lorawan.c: 2256: }
  4420                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  4421  0074EA  0101               	movlb	1	; () banked
  4422  0074EC  B771               	btfsc	_localDioStatus& (0+255),3,b
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;lorawan.c: 2258: {
  4426                           ;lorawan.c: 2259: RADIO_DIO3();
  4427  0074EE  ECF8  F03C         	call	_RADIO_DIO3	;wreg free
  4428                           
  4429                           ;lorawan.c: 2260: }
  4430                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  4431  0074F2  0101               	movlb	1	; () banked
  4432  0074F4  B971               	btfsc	_localDioStatus& (0+255),4,b
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;lorawan.c: 2262: {
  4436                           ;lorawan.c: 2263: RADIO_DIO4();
  4437  0074F6  ECF2  F03A         	call	_RADIO_DIO4	;wreg free
  4438                           
  4439                           ;lorawan.c: 2264: }
  4440                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  4441  0074FA  0101               	movlb	1	; () banked
  4442  0074FC  AB71               	btfss	_localDioStatus& (0+255),5,b
  4443  0074FE  0012               	return	
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;lorawan.c: 2266: {
  4447                           ;lorawan.c: 2267: RADIO_DIO5();
  4448  007500  EC39  F03C         	call	_RADIO_DIO5	;wreg free
  4449  007504  0012               	return	
  4450  007506                     __end_of_LORAWAN_Mainloop:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           intcon	equ	0xFF2
  4457                           intcon2	equ	0xFF1
  4458                           intcon3	equ	0xFF0
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           postdec2	equ	0xFDD
  4462                           fsr2h	equ	0xFDA
  4463                           fsr2l	equ	0xFD9
  4464                           status	equ	0xFD8
  4465                           
  4466 ;; *************** function _SwTimersExecute *****************
  4467 ;; Defined at:
  4468 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;		None
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  i               1  126[BANK0 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+8, btemp+
      +9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;Total ram usage:        5 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:   16
  4489 ;; This function calls:
  4490 ;;		Absolute function
  4491 ;;		_AckRetransmissionCallback
  4492 ;;		_AutomaticReplyCallback
  4493 ;;		_LORAWAN_LinkCheckCallback
  4494 ;;		_LORAWAN_ReceiveWindow1Callback
  4495 ;;		_LORAWAN_ReceiveWindow2Callback
  4496 ;;		_RADIO_RxFSKTimeout
  4497 ;;		_RADIO_WatchdogTimeout
  4498 ;;		_TransmissionErrorCallback
  4499 ;;		_UnconfirmedTransmissionCallback
  4500 ;;		_UpdateJoinSuccessState
  4501 ;; This function is called by:
  4502 ;;		_LORAWAN_Mainloop
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text25
  4507  005578                     __ptext25:
  4508                           	opt stack 0
  4509  005578                     _SwTimersExecute:
  4510                           	opt stack 13
  4511                           
  4512                           ;sw_timer.c: 262: uint8_t i;
  4513                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  4514                           
  4515                           ;incstack = 0
  4516  005578  9EF2               	bcf	intcon,7,c	;volatile
  4517                           
  4518                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  4519  00557A  0E00               	movlw	0
  4520  00557C  0100               	movlb	0	; () banked
  4521  00557E  6FDE               	movwf	SwTimersExecute@i& (0+255),b
  4522  005580  D068               	goto	l286
  4523  005582                     
  4524                           ; BSR set to: 0
  4525                           ;sw_timer.c: 266: {
  4526                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  4527                           
  4528                           ; BSR set to: 0
  4529  005582  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4530  005584  0D08               	mullw	8
  4531  005586  0E04               	movlw	4
  4532  005588  26F3               	addwf	prodl,f,c
  4533  00558A  0E00               	movlw	0
  4534  00558C  22F4               	addwfc	prodh,f,c
  4535  00558E  0E00               	movlw	low _swTimers
  4536  005590  24F3               	addwf	prodl,w,c
  4537  005592  6ED9               	movwf	fsr2l,c
  4538  005594  0E03               	movlw	high _swTimers
  4539  005596  20F4               	addwfc	prodh,w,c
  4540  005598  6EDA               	movwf	fsr2h,c
  4541  00559A  04DE               	decf	postinc2,w,c
  4542  00559C  A4D8               	btfss	status,2,c
  4543  00559E  D057               	goto	l290
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;sw_timer.c: 270: {
  4547                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  4548  0055A0  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4549  0055A2  0D08               	mullw	8
  4550  0055A4  0E00               	movlw	low _swTimers
  4551  0055A6  24F3               	addwf	prodl,w,c
  4552  0055A8  6ED9               	movwf	fsr2l,c
  4553  0055AA  0E03               	movlw	high _swTimers
  4554  0055AC  20F4               	addwfc	prodh,w,c
  4555  0055AE  6EDA               	movwf	fsr2h,c
  4556  0055B0  50DE               	movf	postinc2,w,c
  4557  0055B2  10DE               	iorwf	postinc2,w,c
  4558  0055B4  10DE               	iorwf	postinc2,w,c
  4559  0055B6  10DE               	iorwf	postinc2,w,c
  4560  0055B8  A4D8               	btfss	status,2,c
  4561  0055BA  D049               	goto	l290
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;sw_timer.c: 272: {
  4565                           ;sw_timer.c: 273: swTimers[i].running = 0;
  4566  0055BC  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4567  0055BE  0D08               	mullw	8
  4568  0055C0  0E04               	movlw	4
  4569  0055C2  26F3               	addwf	prodl,f,c
  4570  0055C4  0E00               	movlw	0
  4571  0055C6  22F4               	addwfc	prodh,f,c
  4572  0055C8  0E00               	movlw	low _swTimers
  4573  0055CA  24F3               	addwf	prodl,w,c
  4574  0055CC  6ED9               	movwf	fsr2l,c
  4575  0055CE  0E03               	movlw	high _swTimers
  4576  0055D0  20F4               	addwfc	prodh,w,c
  4577  0055D2  6EDA               	movwf	fsr2h,c
  4578  0055D4  0E00               	movlw	0
  4579  0055D6  6EDF               	movwf	indf2,c
  4580                           
  4581                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  4582  0055D8  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4583  0055DA  0D08               	mullw	8
  4584  0055DC  0E06               	movlw	6
  4585  0055DE  26F3               	addwf	prodl,f,c
  4586  0055E0  0E00               	movlw	0
  4587  0055E2  22F4               	addwfc	prodh,f,c
  4588  0055E4  0E00               	movlw	low _swTimers
  4589  0055E6  24F3               	addwf	prodl,w,c
  4590  0055E8  6ED9               	movwf	fsr2l,c
  4591  0055EA  0E03               	movlw	high _swTimers
  4592  0055EC  20F4               	addwfc	prodh,w,c
  4593  0055EE  6EDA               	movwf	fsr2h,c
  4594  0055F0  50DE               	movf	postinc2,w,c
  4595  0055F2  10DE               	iorwf	postinc2,w,c
  4596  0055F4  B4D8               	btfsc	status,2,c
  4597  0055F6  D02B               	goto	l290
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;sw_timer.c: 275: {
  4601                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  4602  0055F8  8EF2               	bsf	intcon,7,c	;volatile
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  4606  0055FA  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4607  0055FC  0D08               	mullw	8
  4608  0055FE  0E05               	movlw	5
  4609  005600  26F3               	addwf	prodl,f,c
  4610  005602  0E00               	movlw	0
  4611  005604  22F4               	addwfc	prodh,f,c
  4612  005606  0E00               	movlw	low _swTimers
  4613  005608  24F3               	addwf	prodl,w,c
  4614  00560A  6ED9               	movwf	fsr2l,c
  4615  00560C  0E03               	movlw	high _swTimers
  4616  00560E  20F4               	addwfc	prodh,w,c
  4617  005610  6EDA               	movwf	fsr2h,c
  4618  005612  50DF               	movf	indf2,w,c
  4619  005614  6EE6               	movwf	postinc1,c
  4620  005616  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4621  005618  0D08               	mullw	8
  4622  00561A  0E06               	movlw	6
  4623  00561C  26F3               	addwf	prodl,f,c
  4624  00561E  0E00               	movlw	0
  4625  005620  22F4               	addwfc	prodh,f,c
  4626  005622  0E00               	movlw	low _swTimers
  4627  005624  24F3               	addwf	prodl,w,c
  4628  005626  6ED9               	movwf	fsr2l,c
  4629  005628  0E03               	movlw	high _swTimers
  4630  00562A  20F4               	addwfc	prodh,w,c
  4631  00562C  6EDA               	movwf	fsr2h,c
  4632  00562E  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
  4633  005632  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
  4634  005636  D801               	call	u14048
  4635  005638  D009               	goto	u14049
  4636  00563A                     u14048:
  4637  00563A  0005               	push	
  4638  00563C  6EFA               	movwf	pclath,c
  4639  00563E  51DA               	movf	??_SwTimersExecute& (0+255),w,b
  4640  005640  6EFD               	movwf	tosl,c
  4641  005642  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  4642  005644  6EFE               	movwf	tosh,c
  4643  005646  6AFF               	clrf	tosu,c
  4644  005648  50FA               	movf	pclath,w,c
  4645  00564A  0012               	return		;indir
  4646  00564C                     u14049:
  4647                           
  4648                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  4649  00564C  9EF2               	bcf	intcon,7,c	;volatile
  4650  00564E                     l290:
  4651  00564E  0100               	movlb	0	; () banked
  4652  005650  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
  4653  005652                     l286:
  4654                           
  4655                           ; BSR set to: 0
  4656                           
  4657                           ; BSR set to: 0
  4658  005652  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  4659  005654  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
  4660  005656  A0D8               	btfss	status,0,c
  4661  005658  D794               	goto	l287
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;sw_timer.c: 279: }
  4665                           ;sw_timer.c: 280: }
  4666                           ;sw_timer.c: 281: }
  4667                           ;sw_timer.c: 282: }
  4668                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  4669  00565A  8EF2               	bsf	intcon,7,c	;volatile
  4670                           
  4671                           ; BSR set to: 0
  4672  00565C  0012               	return		;funcret
  4673  00565E                     __end_of_SwTimersExecute:
  4674                           	opt stack 0
  4675                           tosu	equ	0xFFF
  4676                           tosh	equ	0xFFE
  4677                           tosl	equ	0xFFD
  4678                           pclath	equ	0xFFA
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           intcon2	equ	0xFF1
  4687                           intcon3	equ	0xFF0
  4688                           postinc0	equ	0xFEE
  4689                           wreg	equ	0xFE8
  4690                           postinc1	equ	0xFE6
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function _TransmissionErrorCallback *****************
  4699 ;; Defined at:
  4700 ;;		line 1092 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  param           1  [STACK] unsigned char 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1  [STACK] void 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11
      +, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 3F/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:   13
  4721 ;; This function calls:
  4722 ;;		_RADIO_Transmit
  4723 ;;		_ResetParametersForUnconfirmedTransmission
  4724 ;;		_RxData
  4725 ;;		_SelectChannelForTransmission
  4726 ;;		_SwTimerSetTimeout
  4727 ;;		_SwTimerStart
  4728 ;; This function is called by:
  4729 ;;		_SetCallbackSoftwareTimers
  4730 ;;		_SwTimersExecute
  4731 ;; This function uses a reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text26
  4735  00602A                     __ptext26:
  4736                           	opt stack 0
  4737  00602A                     _TransmissionErrorCallback:
  4738                           	opt stack 15
  4739                           
  4740                           ;lorawan_na.c: 1094: if ( (SelectChannelForTransmission (1) == OK) )
  4741                           
  4742                           ; BSR set to: 0
  4743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  4744                           ;incstack = 0
  4745  00602A  0E01               	movlw	1
  4746  00602C  EC4F  F01B         	call	_SelectChannelForTransmission
  4747  006030  0900               	iorlw	0
  4748  006032  A4D8               	btfss	status,2,c
  4749  006034  D02B               	goto	l11046
  4750                           
  4751                           ;lorawan_na.c: 1095: {
  4752                           ;lorawan_na.c: 1096: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  4753  006036  0EA0               	movlw	low (_macBuffer+16)
  4754  006038  0100               	movlb	0	; () banked
  4755  00603A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  4756  00603C  0E04               	movlw	high (_macBuffer+16)
  4757  00603E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  4758  006040  C2C5  F0B3         	movff	_loRa+197,RADIO_Transmit@bufferLen
  4759  006044  EC14  F017         	call	_RADIO_Transmit	;wreg free
  4760  006048  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  4761  00604C  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  4762  006050  5049               	movf	btemp+1,w,c
  4763  006052  104A               	iorwf	btemp+2,w,c
  4764  006054  A4D8               	btfss	status,2,c
  4765  006056  D003               	goto	l11036
  4766                           
  4767                           ;lorawan_na.c: 1097: {
  4768                           ;lorawan_na.c: 1098: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  4769  006058  0102               	movlb	2	; () banked
  4770  00605A  2BC9               	incf	(_loRa+201)& (0+255),f,b
  4771                           
  4772                           ;lorawan_na.c: 1099: }
  4773  00605C  D031               	goto	u11589
  4774  00605E                     l11036:
  4775                           
  4776                           ;lorawan_na.c: 1100: else
  4777                           ;lorawan_na.c: 1101: {
  4778                           ;lorawan_na.c: 1102: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  4779  00605E  0102               	movlb	2	; () banked
  4780  006060  5102               	movf	(_loRa+2)& (0+255),w,b
  4781  006062  0BF0               	andlw	-16
  4782  006064  0906               	iorlw	6
  4783  006066  6F02               	movwf	(_loRa+2)& (0+255),b
  4784                           
  4785                           ; BSR set to: 2
  4786                           
  4787                           ; BSR set to: 2
  4788                           
  4789                           ;lorawan_na.c: 1103: SwTimerSetTimeout(loRa.transmissionErrorTimerId, ((2000UL) < 0x000F
      +                          FFFFUL ? ( (((uint32_t)(2000UL)) << (12)) / 125UL ) : ( (((uint32_t)(2000UL)) / 125UL) <
      +                          < (12) ) ));
  4790  006068  0E00               	movlw	0
  4791  00606A  0100               	movlb	0	; () banked
  4792  00606C  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
  4793  00606E  0E00               	movlw	0
  4794  006070  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
  4795  006072  0E01               	movlw	1
  4796  006074  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
  4797  006076  0E00               	movlw	0
  4798  006078  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
  4799  00607A  0102               	movlb	2	; () banked
  4800  00607C  51E5               	movf	(_loRa+229)& (0+255),w,b
  4801  00607E  EC9D  F039         	call	_SwTimerSetTimeout
  4802                           
  4803                           ;lorawan_na.c: 1104: SwTimerStart(loRa.transmissionErrorTimerId);
  4804  006082  0102               	movlb	2	; () banked
  4805  006084  51E5               	movf	(_loRa+229)& (0+255),w,b
  4806  006086  EC62  F030         	call	_SwTimerStart
  4807  00608A  D01A               	goto	u11589
  4808  00608C                     l11046:
  4809                           
  4810                           ;lorawan_na.c: 1108: else
  4811                           ;lorawan_na.c: 1110: {
  4812                           ;lorawan_na.c: 1111: ResetParametersForUnconfirmedTransmission ();
  4813  00608C  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  4814                           
  4815                           ;lorawan_na.c: 1112: if (rxPayload.RxAppData != (0))
  4816  006090  0100               	movlb	0	; () banked
  4817  006092  51F9               	movf	_rxPayload& (0+255),w,b
  4818  006094  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  4819  006096  B4D8               	btfsc	status,2,c
  4820  006098  D013               	goto	u11589
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;lorawan_na.c: 1113: {
  4824                           ;lorawan_na.c: 1114: rxPayload.RxAppData((0), 0, MAC_OK);
  4825  00609A  0E00               	movlw	0
  4826  00609C  6F60               	movwf	RxData@pData& (0+255),b
  4827  00609E  0E00               	movlw	0
  4828  0060A0  6F61               	movwf	(RxData@pData+1)& (0+255),b
  4829  0060A2  0E00               	movlw	0
  4830  0060A4  6F62               	movwf	RxData@dataLength& (0+255),b
  4831  0060A6  0E01               	movlw	1
  4832  0060A8  6F63               	movwf	RxData@status& (0+255),b
  4833  0060AA  D801               	call	u11588
  4834  0060AC  D009               	goto	u11589
  4835  0060AE                     u11588:
  4836  0060AE  0005               	push	
  4837  0060B0  6EFA               	movwf	pclath,c
  4838  0060B2  51F9               	movf	_rxPayload& (0+255),w,b
  4839  0060B4  6EFD               	movwf	tosl,c
  4840  0060B6  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  4841  0060B8  6EFE               	movwf	tosh,c
  4842  0060BA  6AFF               	clrf	tosu,c
  4843  0060BC  50FA               	movf	pclath,w,c
  4844  0060BE  0012               	return		;indir
  4845  0060C0                     u11589:
  4846                           
  4847                           ; _TransmissionErrorCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  4848  0060C0  52E5               	movf	postdec1,f,c
  4849  0060C2  0012               	return		;funcret
  4850  0060C4                     __end_of_TransmissionErrorCallback:
  4851                           	opt stack 0
  4852                           tosu	equ	0xFFF
  4853                           tosh	equ	0xFFE
  4854                           tosl	equ	0xFFD
  4855                           pclath	equ	0xFFA
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           prodh	equ	0xFF4
  4861                           prodl	equ	0xFF3
  4862                           intcon	equ	0xFF2
  4863                           intcon2	equ	0xFF1
  4864                           intcon3	equ	0xFF0
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postinc1	equ	0xFE6
  4868                           postdec1	equ	0xFE5
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function _UpdateJoinSuccessState *****************
  4877 ;; Defined at:
  4878 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  param           1  [STACK] unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1  [STACK] void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   11
  4899 ;; This function calls:
  4900 ;;		_RxJoinResponse
  4901 ;;		_SwTimerSetTimeout
  4902 ;;		_SwTimerStart
  4903 ;;		___lldiv
  4904 ;; This function is called by:
  4905 ;;		_SetCallbackSoftwareTimers
  4906 ;;		_LORAWAN_RxDone
  4907 ;;		_SwTimersExecute
  4908 ;; This function uses a reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text27
  4912  0047D6                     __ptext27:
  4913                           	opt stack 0
  4914  0047D6                     _UpdateJoinSuccessState:
  4915                           	opt stack 0
  4916                           
  4917                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  4918  0047D6  52E6               	movf	postinc1,f,c
  4919  0047D8  52E6               	movf	postinc1,f,c
  4920  0047DA  52E6               	movf	postinc1,f,c
  4921  0047DC  52E6               	movf	postinc1,f,c
  4922                           
  4923                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  4924                           
  4925                           ;incstack = 0
  4926  0047DE  0102               	movlb	2	; () banked
  4927  0047E0  9500               	bcf	_loRa& (0+255),2,b
  4928                           
  4929                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  4930  0047E2  8902               	bsf	(_loRa+2)& (0+255),4,b
  4931                           
  4932                           ; BSR set to: 2
  4933                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  4934  0047E4  0EF0               	movlw	-16
  4935  0047E6  1702               	andwf	(_loRa+2)& (0+255),f,b
  4936                           
  4937                           ; BSR set to: 2
  4938                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  4939  0047E8  6BC1               	clrf	(_loRa+193)& (0+255),b
  4940  0047EA  6BC2               	clrf	(_loRa+194)& (0+255),b
  4941                           
  4942                           ; BSR set to: 2
  4943                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  4944  0047EC  6BDF               	clrf	(_loRa+223)& (0+255),b
  4945                           
  4946                           ; BSR set to: 2
  4947                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  4948  0047EE  A503               	btfss	(_loRa+3)& (0+255),2,b
  4949  0047F0  D07B               	goto	l9958
  4950                           
  4951                           ; BSR set to: 2
  4952                           ;lorawan.c: 1052: {
  4953                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  4954  0047F2  51C0               	movf	(_loRa+192)& (0+255),w,b
  4955  0047F4  E107               	bnz	u9900
  4956  0047F6  29BD               	incf	(_loRa+189)& (0+255),w,b
  4957  0047F8  0EFF               	movlw	255
  4958  0047FA  59BE               	subwfb	(_loRa+190)& (0+255),w,b
  4959  0047FC  0E0F               	movlw	15
  4960  0047FE  59BF               	subwfb	(_loRa+191)& (0+255),w,b
  4961  004800  A0D8               	btfss	status,0,c
  4962  004802  D024               	goto	l9952
  4963  004804                     u9900:
  4964                           
  4965                           ; BSR set to: 2
  4966  004804  C2BD  F060         	movff	_loRa+189,___lldiv@dividend
  4967  004808  C2BE  F061         	movff	_loRa+190,___lldiv@dividend+1
  4968  00480C  C2BF  F062         	movff	_loRa+191,___lldiv@dividend+2
  4969  004810  C2C0  F063         	movff	_loRa+192,___lldiv@dividend+3
  4970  004814  0E7D               	movlw	125
  4971  004816  0100               	movlb	0	; () banked
  4972  004818  6F64               	movwf	___lldiv@divisor& (0+255),b
  4973  00481A  0E00               	movlw	0
  4974  00481C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4975  00481E  0E00               	movlw	0
  4976  004820  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4977  004822  0E00               	movlw	0
  4978  004824  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4979  004826  EC93  F032         	call	___lldiv	;wreg free
  4980  00482A  C060  F050         	movff	?___lldiv,btemp+8
  4981  00482E  C061  F051         	movff	?___lldiv+1,btemp+9
  4982  004832  C062  F052         	movff	?___lldiv+2,btemp+10
  4983  004836  C063  F053         	movff	?___lldiv+3,btemp+11
  4984  00483A  0E0C               	movlw	12
  4985  00483C                     u9915:
  4986  00483C  90D8               	bcf	status,0,c
  4987  00483E  3650               	rlcf	btemp+8,f,c
  4988  004840  3651               	rlcf	btemp+9,f,c
  4989  004842  3652               	rlcf	btemp+10,f,c
  4990  004844  3653               	rlcf	btemp+11,f,c
  4991  004846  2EE8               	decfsz	wreg,f,c
  4992  004848  D7F9               	goto	u9915
  4993  00484A  D02B               	goto	L1
  4994  00484C                     l9952:
  4995                           
  4996                           ; BSR set to: 2
  4997  00484C  C2BD  F050         	movff	_loRa+189,btemp+8
  4998  004850  C2BE  F051         	movff	_loRa+190,btemp+9
  4999  004854  C2BF  F052         	movff	_loRa+191,btemp+10
  5000  004858  C2C0  F053         	movff	_loRa+192,btemp+11
  5001  00485C  0E0C               	movlw	12
  5002  00485E                     u9925:
  5003  00485E  90D8               	bcf	status,0,c
  5004  004860  3650               	rlcf	btemp+8,f,c
  5005  004862  3651               	rlcf	btemp+9,f,c
  5006  004864  3652               	rlcf	btemp+10,f,c
  5007  004866  3653               	rlcf	btemp+11,f,c
  5008  004868  2EE8               	decfsz	wreg,f,c
  5009  00486A  D7F9               	goto	u9925
  5010  00486C  C050  F060         	movff	btemp+8,___lldiv@dividend
  5011  004870  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5012  004874  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5013  004878  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5014  00487C  0E7D               	movlw	125
  5015  00487E  0100               	movlb	0	; () banked
  5016  004880  6F64               	movwf	___lldiv@divisor& (0+255),b
  5017  004882  0E00               	movlw	0
  5018  004884  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5019  004886  0E00               	movlw	0
  5020  004888  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5021  00488A  0E00               	movlw	0
  5022  00488C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5023  00488E  EC93  F032         	call	___lldiv	;wreg free
  5024  004892  C060  F050         	movff	?___lldiv,btemp+8
  5025  004896  C061  F051         	movff	?___lldiv+1,btemp+9
  5026  00489A  C062  F052         	movff	?___lldiv+2,btemp+10
  5027  00489E  C063  F053         	movff	?___lldiv+3,btemp+11
  5028  0048A2                     L1:
  5029                           
  5030                           ;stkvar	_UpdateJoinSuccessState$2540 @ sp[(-4)+0]
  5031  0048A2  0EFC               	movlw	-4
  5032  0048A4  C050  FFE3         	movff	btemp+8,plusw1
  5033  0048A8  0EFD               	movlw	-3
  5034  0048AA  C051  FFE3         	movff	btemp+9,plusw1
  5035  0048AE  0EFE               	movlw	-2
  5036  0048B0  C052  FFE3         	movff	btemp+10,plusw1
  5037  0048B4  0EFF               	movlw	-1
  5038  0048B6  C053  FFE3         	movff	btemp+11,plusw1
  5039                           
  5040                           ;stkvar	_UpdateJoinSuccessState$2540 @ sp[(-4)+0]
  5041  0048BA  50E1               	movf	fsr1l,w,c
  5042  0048BC  0FFC               	addlw	-4
  5043  0048BE  6ED9               	movwf	fsr2l,c
  5044  0048C0  50E2               	movf	fsr1h,w,c
  5045  0048C2  6EDA               	movwf	fsr2h,c
  5046  0048C4  0EFF               	movlw	255
  5047  0048C6  22DA               	addwfc	fsr2h,f,c
  5048  0048C8  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5049  0048CC  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5050  0048D0  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5051  0048D4  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5052  0048D8  0102               	movlb	2	; () banked
  5053  0048DA  51D8               	movf	(_loRa+216)& (0+255),w,b
  5054  0048DC  EC9D  F039         	call	_SwTimerSetTimeout
  5055                           
  5056                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  5057  0048E0  0102               	movlb	2	; () banked
  5058  0048E2  51D8               	movf	(_loRa+216)& (0+255),w,b
  5059  0048E4  EC62  F030         	call	_SwTimerStart
  5060  0048E8                     l9958:
  5061                           
  5062                           ;lorawan.c: 1055: }
  5063                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  5064  0048E8  0100               	movlb	0	; () banked
  5065  0048EA  51FB               	movf	(_rxPayload+2)& (0+255),w,b
  5066  0048EC  11FC               	iorwf	(_rxPayload+3)& (0+255),w,b
  5067  0048EE  B4D8               	btfsc	status,2,c
  5068  0048F0  D00C               	goto	u9949
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;lorawan.c: 1058: {
  5072                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  5073  0048F2  D801               	call	u9948
  5074  0048F4  D00A               	goto	u9949
  5075  0048F6                     u9948:
  5076  0048F6  0005               	push	
  5077  0048F8  6EFA               	movwf	pclath,c
  5078  0048FA  51FB               	movf	(_rxPayload+2)& (0+255),w,b
  5079  0048FC  6EFD               	movwf	tosl,c
  5080  0048FE  51FC               	movf	(_rxPayload+3)& (0+255),w,b
  5081  004900  6EFE               	movwf	tosh,c
  5082  004902  6AFF               	clrf	tosu,c
  5083  004904  50FA               	movf	pclath,w,c
  5084  004906  0E01               	movlw	1
  5085  004908  0012               	return		;indir
  5086  00490A                     u9949:
  5087                           
  5088                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5089  00490A  0EFB               	movlw	251
  5090  00490C  26E1               	addwf	fsr1l,f,c
  5091  00490E  0EFF               	movlw	255
  5092  004910  22E2               	addwfc	fsr1h,f,c
  5093  004912  0012               	return		;funcret
  5094  004914                     __end_of_UpdateJoinSuccessState:
  5095                           	opt stack 0
  5096                           tosu	equ	0xFFF
  5097                           tosh	equ	0xFFE
  5098                           tosl	equ	0xFFD
  5099                           pclath	equ	0xFFA
  5100                           tblptru	equ	0xFF8
  5101                           tblptrh	equ	0xFF7
  5102                           tblptrl	equ	0xFF6
  5103                           tablat	equ	0xFF5
  5104                           prodh	equ	0xFF4
  5105                           prodl	equ	0xFF3
  5106                           intcon	equ	0xFF2
  5107                           intcon2	equ	0xFF1
  5108                           intcon3	equ	0xFF0
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           postinc1	equ	0xFE6
  5112                           postdec1	equ	0xFE5
  5113                           plusw1	equ	0xFE3
  5114                           fsr1h	equ	0xFE2
  5115                           fsr1l	equ	0xFE1
  5116                           indf2	equ	0xFDF
  5117                           postinc2	equ	0xFDE
  5118                           postdec2	equ	0xFDD
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function _AutomaticReplyCallback *****************
  5124 ;; Defined at:
  5125 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  param           1  [STACK] unsigned char 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1  [STACK] void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 3F/0
  5136 ;;		On exit  : 3F/2
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:   14
  5146 ;; This function calls:
  5147 ;;		_LORAWAN_Send
  5148 ;; This function is called by:
  5149 ;;		_SetCallbackSoftwareTimers
  5150 ;;		_SwTimersExecute
  5151 ;; This function uses a reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text28
  5155  00793A                     __ptext28:
  5156                           	opt stack 0
  5157  00793A                     _AutomaticReplyCallback:
  5158                           	opt stack 14
  5159                           
  5160                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  5161                           
  5162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5163                           ;incstack = 0
  5164  00793A  0EF0               	movlw	-16
  5165  00793C  0102               	movlb	2	; () banked
  5166  00793E  1702               	andwf	(_loRa+2)& (0+255),f,b
  5167                           
  5168                           ; BSR set to: 2
  5169                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  5170  007940  0E00               	movlw	0
  5171  007942  0100               	movlb	0	; () banked
  5172  007944  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  5173  007946  0E00               	movlw	0
  5174  007948  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  5175  00794A  0E00               	movlw	0
  5176  00794C  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  5177  00794E  0E00               	movlw	0
  5178  007950  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  5179  007952  0E00               	movlw	0
  5180  007954  ECE6  F02C         	call	_LORAWAN_Send
  5181                           
  5182                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  5183  007958  0102               	movlb	2	; () banked
  5184  00795A  9700               	bcf	_loRa& (0+255),3,b
  5185                           
  5186                           ; BSR set to: 2
  5187                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5188  00795C  52E5               	movf	postdec1,f,c
  5189  00795E  0012               	return		;funcret
  5190  007960                     __end_of_AutomaticReplyCallback:
  5191                           	opt stack 0
  5192                           tosu	equ	0xFFF
  5193                           tosh	equ	0xFFE
  5194                           tosl	equ	0xFFD
  5195                           pclath	equ	0xFFA
  5196                           tblptru	equ	0xFF8
  5197                           tblptrh	equ	0xFF7
  5198                           tblptrl	equ	0xFF6
  5199                           tablat	equ	0xFF5
  5200                           prodh	equ	0xFF4
  5201                           prodl	equ	0xFF3
  5202                           intcon	equ	0xFF2
  5203                           intcon2	equ	0xFF1
  5204                           intcon3	equ	0xFF0
  5205                           postinc0	equ	0xFEE
  5206                           wreg	equ	0xFE8
  5207                           postinc1	equ	0xFE6
  5208                           postdec1	equ	0xFE5
  5209                           plusw1	equ	0xFE3
  5210                           fsr1h	equ	0xFE2
  5211                           fsr1l	equ	0xFE1
  5212                           indf2	equ	0xFDF
  5213                           postinc2	equ	0xFDE
  5214                           postdec2	equ	0xFDD
  5215                           fsr2h	equ	0xFDA
  5216                           fsr2l	equ	0xFD9
  5217                           status	equ	0xFD8
  5218                           
  5219 ;; *************** function _AckRetransmissionCallback *****************
  5220 ;; Defined at:
  5221 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  param           1  [STACK] unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  maximumPacke    1  [STACK] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1  [STACK] void 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, tosl, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 3F/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;Total ram usage:        0 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:   13
  5242 ;; This function calls:
  5243 ;;		_FindSmallestDataRate
  5244 ;;		_LORAWAN_GetMaxPayloadSize
  5245 ;;		_RADIO_Transmit
  5246 ;;		_ResetParametersForConfirmedTransmission
  5247 ;;		_RxData
  5248 ;;		_SelectChannelForTransmission
  5249 ;;		_UpdateRetransmissionAckTimeoutState
  5250 ;; This function is called by:
  5251 ;;		_SetCallbackSoftwareTimers
  5252 ;;		_SwTimersExecute
  5253 ;; This function uses a reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text29
  5257  004C9A                     __ptext29:
  5258                           	opt stack 0
  5259  004C9A                     _AckRetransmissionCallback:
  5260                           	opt stack 0
  5261                           
  5262                           ; BSR set to: 2
  5263                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5264  004C9A  52E6               	movf	postinc1,f,c
  5265                           
  5266                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  5267                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  5268                           
  5269                           ;incstack = 0
  5270  004C9C  0102               	movlb	2	; () banked
  5271  004C9E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5272  004CA0  D083               	goto	l11194
  5273                           
  5274                           ; BSR set to: 2
  5275                           ;lorawan.c: 939: {
  5276                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  5277  004CA2  51CA               	movf	(_loRa+202)& (0+255),w,b
  5278  004CA4  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5279  004CA6  A0D8               	btfss	status,0,c
  5280  004CA8  D060               	goto	l11184
  5281                           
  5282                           ; BSR set to: 2
  5283                           ;lorawan.c: 941: {
  5284                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  5285  004CAA  ECDE  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  5286  004CAE  6E53               	movwf	btemp+11,c
  5287  004CB0  0E0D               	movlw	13
  5288  004CB2  2653               	addwf	btemp+11,f,c
  5289                           
  5290                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5291  004CB4  0EFF               	movlw	-1
  5292  004CB6  C053  FFE3         	movff	btemp+11,plusw1
  5293                           
  5294                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  5295                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5296  004CBA  0EFF               	movlw	-1
  5297  004CBC  50E3               	movf	plusw1,w,c
  5298  004CBE  6E49               	movwf	btemp+1,c
  5299  004CC0  6A4A               	clrf	btemp+2,c
  5300  004CC2  0102               	movlb	2	; () banked
  5301  004CC4  51C5               	movf	(_loRa+197)& (0+255),w,b
  5302  004CC6  5C49               	subwf	btemp+1,w,c
  5303  004CC8  51C6               	movf	(_loRa+198)& (0+255),w,b
  5304  004CCA  584A               	subwfb	btemp+2,w,c
  5305  004CCC  A0D8               	btfss	status,0,c
  5306  004CCE  D039               	goto	l11178
  5307                           
  5308                           ; BSR set to: 2
  5309                           ;lorawan.c: 946: {
  5310                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  5311  004CD0  0E01               	movlw	1
  5312  004CD2  EC4F  F01B         	call	_SelectChannelForTransmission
  5313  004CD6  0900               	iorlw	0
  5314  004CD8  A4D8               	btfss	status,2,c
  5315  004CDA  D030               	goto	l11174
  5316                           
  5317                           ;lorawan.c: 948: {
  5318                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  5319  004CDC  0EA0               	movlw	low (_macBuffer+16)
  5320  004CDE  0100               	movlb	0	; () banked
  5321  004CE0  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  5322  004CE2  0E04               	movlw	high (_macBuffer+16)
  5323  004CE4  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  5324  004CE6  C2C5  F0B3         	movff	_loRa+197,RADIO_Transmit@bufferLen
  5325  004CEA  EC14  F017         	call	_RADIO_Transmit	;wreg free
  5326  004CEE  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  5327  004CF2  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  5328  004CF6  5049               	movf	btemp+1,w,c
  5329  004CF8  104A               	iorwf	btemp+2,w,c
  5330  004CFA  A4D8               	btfss	status,2,c
  5331  004CFC  D01F               	goto	l11174
  5332                           
  5333                           ;lorawan.c: 951: {
  5334                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  5335  004CFE  0102               	movlb	2	; () banked
  5336  004D00  5102               	movf	(_loRa+2)& (0+255),w,b
  5337  004D02  0BF0               	andlw	-16
  5338  004D04  0901               	iorlw	1
  5339  004D06  6F02               	movwf	(_loRa+2)& (0+255),b
  5340                           
  5341                           ; BSR set to: 2
  5342                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  5343  004D08  2BCA               	incf	(_loRa+202)& (0+255),f,b
  5344                           
  5345                           ; BSR set to: 2
  5346                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  5347  004D0A  B1CA               	btfsc	(_loRa+202)& (0+255),0,b
  5348  004D0C  D04F               	goto	l1850
  5349                           
  5350                           ; BSR set to: 2
  5351  004D0E  51D0               	movf	(_loRa+208)& (0+255),w,b
  5352  004D10  B4D8               	btfsc	status,2,c
  5353  004D12  D04C               	goto	l1850
  5354                           
  5355                           ; BSR set to: 2
  5356  004D14  51CA               	movf	(_loRa+202)& (0+255),w,b
  5357  004D16  6E49               	movwf	btemp+1,c
  5358  004D18  6A4A               	clrf	btemp+2,c
  5359  004D1A  51C8               	movf	(_loRa+200)& (0+255),w,b
  5360  004D1C  6E52               	movwf	btemp+10,c
  5361  004D1E  6A53               	clrf	btemp+11,c
  5362  004D20  0E01               	movlw	1
  5363  004D22  2652               	addwf	btemp+10,f,c
  5364  004D24  0E00               	movlw	0
  5365  004D26  2253               	addwfc	btemp+11,f,c
  5366  004D28  5049               	movf	btemp+1,w,c
  5367  004D2A  1852               	xorwf	btemp+10,w,c
  5368  004D2C  E104               	bnz	u11870
  5369  004D2E  504A               	movf	btemp+2,w,c
  5370  004D30  1853               	xorwf	btemp+11,w,c
  5371  004D32  B4D8               	btfsc	status,2,c
  5372  004D34  D03B               	goto	l1850
  5373  004D36                     u11870:
  5374                           
  5375                           ; BSR set to: 2
  5376                           ;lorawan.c: 957: {
  5377                           ;lorawan.c: 958: FindSmallestDataRate();
  5378  004D36  EC11  F02C         	call	_FindSmallestDataRate	;wreg free
  5379  004D3A  D038               	goto	l1850
  5380  004D3C                     l11174:
  5381                           
  5382                           ;lorawan.c: 961: else
  5383                           ;lorawan.c: 962: {
  5384                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  5385  004D3C  EC04  F034         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  5386  004D40  D035               	goto	l1850
  5387  004D42                     l11178:
  5388                           
  5389                           ; BSR set to: 2
  5390                           ;lorawan.c: 973: else
  5391                           ;lorawan.c: 974: {
  5392                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  5393  004D42  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5394                           
  5395                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  5396  004D46  0100               	movlb	0	; () banked
  5397  004D48  51F9               	movf	_rxPayload& (0+255),w,b
  5398  004D4A  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  5399  004D4C  B4D8               	btfsc	status,2,c
  5400  004D4E  D02E               	goto	l1850
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;lorawan.c: 977: {
  5404                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  5405  004D50  0E00               	movlw	0
  5406  004D52  6F60               	movwf	RxData@pData& (0+255),b
  5407  004D54  0E00               	movlw	0
  5408  004D56  6F61               	movwf	(RxData@pData+1)& (0+255),b
  5409  004D58  0E00               	movlw	0
  5410  004D5A  6F62               	movwf	RxData@dataLength& (0+255),b
  5411  004D5C  0E04               	movlw	4
  5412  004D5E  6F63               	movwf	RxData@status& (0+255),b
  5413  004D60  D801               	call	u11898
  5414  004D62  D024               	goto	l1850
  5415  004D64                     u11898:
  5416  004D64  0005               	push	
  5417  004D66  6EFA               	movwf	pclath,c
  5418  004D68  D018               	goto	L2
  5419  004D6A                     l11184:
  5420                           
  5421                           ; BSR set to: 2
  5422                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  5423  004D6A  51CA               	movf	(_loRa+202)& (0+255),w,b
  5424  004D6C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5425  004D6E  A0D8               	btfss	status,0,c
  5426                           
  5427                           ; BSR set to: 2
  5428  004D70  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5429  004D72  D01C               	goto	l1850
  5430                           
  5431                           ; BSR set to: 2
  5432                           ;lorawan.c: 983: {
  5433                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  5434  004D74  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5435                           
  5436                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  5437  004D78  0100               	movlb	0	; () banked
  5438  004D7A  51F9               	movf	_rxPayload& (0+255),w,b
  5439  004D7C  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  5440  004D7E  B4D8               	btfsc	status,2,c
  5441  004D80  D015               	goto	l1850
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;lorawan.c: 986: {
  5445                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  5446  004D82  0E00               	movlw	0
  5447  004D84  6F60               	movwf	RxData@pData& (0+255),b
  5448  004D86  0E00               	movlw	0
  5449  004D88  6F61               	movwf	(RxData@pData+1)& (0+255),b
  5450  004D8A  0E00               	movlw	0
  5451  004D8C  6F62               	movwf	RxData@dataLength& (0+255),b
  5452  004D8E  0E00               	movlw	0
  5453  004D90  6F63               	movwf	RxData@status& (0+255),b
  5454  004D92  D801               	call	u11938
  5455  004D94  D00B               	goto	l1850
  5456  004D96                     u11938:
  5457  004D96  0005               	push	
  5458  004D98  6EFA               	movwf	pclath,c
  5459  004D9A                     L2:
  5460  004D9A  51F9               	movf	_rxPayload& (0+255),w,b
  5461  004D9C  6EFD               	movwf	tosl,c
  5462  004D9E  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  5463  004DA0  6EFE               	movwf	tosh,c
  5464  004DA2  6AFF               	clrf	tosu,c
  5465  004DA4  50FA               	movf	pclath,w,c
  5466  004DA6  0012               	return		;indir
  5467  004DA8                     l11194:
  5468                           
  5469                           ; BSR set to: 2
  5470                           ;lorawan.c: 991: else
  5471                           ;lorawan.c: 992: {
  5472                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  5473  004DA8  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5474  004DAC                     l1850:
  5475                           
  5476                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  5477  004DAC  52E5               	movf	postdec1,f,c
  5478  004DAE  52E5               	movf	postdec1,f,c
  5479  004DB0  0012               	return		;funcret
  5480  004DB2                     __end_of_AckRetransmissionCallback:
  5481                           	opt stack 0
  5482                           tosu	equ	0xFFF
  5483                           tosh	equ	0xFFE
  5484                           tosl	equ	0xFFD
  5485                           pclath	equ	0xFFA
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           intcon	equ	0xFF2
  5493                           intcon2	equ	0xFF1
  5494                           intcon3	equ	0xFF0
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           postinc1	equ	0xFE6
  5498                           postdec1	equ	0xFE5
  5499                           plusw1	equ	0xFE3
  5500                           fsr1h	equ	0xFE2
  5501                           fsr1l	equ	0xFE1
  5502                           indf2	equ	0xFDF
  5503                           postinc2	equ	0xFDE
  5504                           postdec2	equ	0xFDD
  5505                           fsr2h	equ	0xFDA
  5506                           fsr2l	equ	0xFD9
  5507                           status	equ	0xFD8
  5508                           
  5509 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  5510 ;; Defined at:
  5511 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  param           1  [STACK] unsigned char 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  iCtr            1  [STACK] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1  [STACK] void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 3F/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:   11
  5532 ;; This function calls:
  5533 ;;		_SwTimerSetTimeout
  5534 ;;		_SwTimerStart
  5535 ;;		___lldiv
  5536 ;; This function is called by:
  5537 ;;		_SetCallbackSoftwareTimers
  5538 ;;		_SwTimersExecute
  5539 ;; This function uses a reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text30
  5543  00425C                     __ptext30:
  5544                           	opt stack 0
  5545  00425C                     _LORAWAN_LinkCheckCallback:
  5546                           	opt stack 0
  5547                           
  5548                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5549  00425C  0E05               	movlw	5
  5550  00425E  26E1               	addwf	fsr1l,f,c
  5551  004260  0E00               	movlw	0
  5552  004262  22E2               	addwfc	fsr1h,f,c
  5553                           
  5554                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  5555                           
  5556                           ;incstack = 0
  5557  004264  0102               	movlb	2	; () banked
  5558  004266  A103               	btfss	(_loRa+3)& (0+255),0,b
  5559                           
  5560                           ; BSR set to: 2
  5561  004268  A503               	btfss	(_loRa+3)& (0+255),2,b
  5562  00426A  D02C               	goto	l11138
  5563                           
  5564                           ; BSR set to: 2
  5565                           ;lorawan.c: 886: {
  5566                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  5567                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5568  00426C  0EFF               	movlw	-1
  5569  00426E  6AE3               	clrf	plusw1,c
  5570  004270  D00F               	goto	l11128
  5571  004272                     l11122:
  5572                           
  5573                           ; BSR set to: 2
  5574                           ;lorawan.c: 889: {
  5575                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  5576                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5577  004272  0EFF               	movlw	-1
  5578  004274  50E3               	movf	plusw1,w,c
  5579  004276  0D02               	mullw	2
  5580  004278  0E99               	movlw	low (_loRa+153)
  5581  00427A  24F3               	addwf	prodl,w,c
  5582  00427C  6ED9               	movwf	fsr2l,c
  5583  00427E  0E02               	movlw	high (_loRa+153)
  5584  004280  20F4               	addwfc	prodh,w,c
  5585  004282  6EDA               	movwf	fsr2h,c
  5586  004284  0E02               	movlw	2
  5587  004286  18DE               	xorwf	postinc2,w,c
  5588  004288  B4D8               	btfsc	status,2,c
  5589  00428A  D009               	goto	u11730
  5590                           
  5591                           ; BSR set to: 2
  5592                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5593  00428C  0EFF               	movlw	-1
  5594  00428E  2AE3               	incf	plusw1,f,c
  5595  004290                     l11128:
  5596                           
  5597                           ; BSR set to: 2
  5598                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5599  004290  0EFF               	movlw	-1
  5600  004292  CFE3 F048          	movff	plusw1,btemp
  5601  004296  5198               	movf	(_loRa+152)& (0+255),w,b
  5602  004298  5C48               	subwf	btemp,w,c
  5603  00429A  A0D8               	btfss	status,0,c
  5604  00429C  D7EA               	goto	l11122
  5605  00429E                     u11730:
  5606                           
  5607                           ; BSR set to: 2
  5608                           ;lorawan.c: 893: }
  5609                           ;lorawan.c: 894: }
  5610                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  5611                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5612  00429E  0EFF               	movlw	-1
  5613  0042A0  50E3               	movf	plusw1,w,c
  5614  0042A2  1998               	xorwf	(_loRa+152)& (0+255),w,b
  5615  0042A4  A4D8               	btfss	status,2,c
  5616  0042A6  D00E               	goto	l11138
  5617                           
  5618                           ; BSR set to: 2
  5619                           ;lorawan.c: 897: {
  5620                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  5621  0042A8  5198               	movf	(_loRa+152)& (0+255),w,b
  5622  0042AA  0D02               	mullw	2
  5623  0042AC  0E99               	movlw	low (_loRa+153)
  5624  0042AE  24F3               	addwf	prodl,w,c
  5625  0042B0  6ED9               	movwf	fsr2l,c
  5626  0042B2  0E02               	movlw	high (_loRa+153)
  5627  0042B4  20F4               	addwfc	prodh,w,c
  5628  0042B6  6EDA               	movwf	fsr2h,c
  5629  0042B8  0E02               	movlw	2
  5630  0042BA  6EDF               	movwf	indf2,c
  5631                           
  5632                           ; BSR set to: 2
  5633                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  5634  0042BC  0E10               	movlw	16
  5635  0042BE  6198               	cpfslt	(_loRa+152)& (0+255),b
  5636  0042C0  D001               	goto	l11138
  5637                           
  5638                           ; BSR set to: 2
  5639                           ;lorawan.c: 901: {
  5640                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  5641  0042C2  2B98               	incf	(_loRa+152)& (0+255),f,b
  5642  0042C4                     l11138:
  5643                           
  5644                           ; BSR set to: 2
  5645                           ;lorawan.c: 903: }
  5646                           ;lorawan.c: 904: }
  5647                           ;lorawan.c: 905: }
  5648                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  5649  0042C4  A503               	btfss	(_loRa+3)& (0+255),2,b
  5650  0042C6  D07B               	goto	l1828
  5651                           
  5652                           ; BSR set to: 2
  5653                           ;lorawan.c: 909: {
  5654                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5655  0042C8  51C0               	movf	(_loRa+192)& (0+255),w,b
  5656  0042CA  E107               	bnz	u11770
  5657  0042CC  29BD               	incf	(_loRa+189)& (0+255),w,b
  5658  0042CE  0EFF               	movlw	255
  5659  0042D0  59BE               	subwfb	(_loRa+190)& (0+255),w,b
  5660  0042D2  0E0F               	movlw	15
  5661  0042D4  59BF               	subwfb	(_loRa+191)& (0+255),w,b
  5662  0042D6  A0D8               	btfss	status,0,c
  5663  0042D8  D024               	goto	l11144
  5664  0042DA                     u11770:
  5665                           
  5666                           ; BSR set to: 2
  5667  0042DA  C2BD  F060         	movff	_loRa+189,___lldiv@dividend
  5668  0042DE  C2BE  F061         	movff	_loRa+190,___lldiv@dividend+1
  5669  0042E2  C2BF  F062         	movff	_loRa+191,___lldiv@dividend+2
  5670  0042E6  C2C0  F063         	movff	_loRa+192,___lldiv@dividend+3
  5671  0042EA  0E7D               	movlw	125
  5672  0042EC  0100               	movlb	0	; () banked
  5673  0042EE  6F64               	movwf	___lldiv@divisor& (0+255),b
  5674  0042F0  0E00               	movlw	0
  5675  0042F2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5676  0042F4  0E00               	movlw	0
  5677  0042F6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5678  0042F8  0E00               	movlw	0
  5679  0042FA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5680  0042FC  EC93  F032         	call	___lldiv	;wreg free
  5681  004300  C060  F050         	movff	?___lldiv,btemp+8
  5682  004304  C061  F051         	movff	?___lldiv+1,btemp+9
  5683  004308  C062  F052         	movff	?___lldiv+2,btemp+10
  5684  00430C  C063  F053         	movff	?___lldiv+3,btemp+11
  5685  004310  0E0C               	movlw	12
  5686  004312                     u11785:
  5687  004312  90D8               	bcf	status,0,c
  5688  004314  3650               	rlcf	btemp+8,f,c
  5689  004316  3651               	rlcf	btemp+9,f,c
  5690  004318  3652               	rlcf	btemp+10,f,c
  5691  00431A  3653               	rlcf	btemp+11,f,c
  5692  00431C  2EE8               	decfsz	wreg,f,c
  5693  00431E  D7F9               	goto	u11785
  5694  004320  D02B               	goto	L3
  5695  004322                     l11144:
  5696                           
  5697                           ; BSR set to: 2
  5698  004322  C2BD  F050         	movff	_loRa+189,btemp+8
  5699  004326  C2BE  F051         	movff	_loRa+190,btemp+9
  5700  00432A  C2BF  F052         	movff	_loRa+191,btemp+10
  5701  00432E  C2C0  F053         	movff	_loRa+192,btemp+11
  5702  004332  0E0C               	movlw	12
  5703  004334                     u11795:
  5704  004334  90D8               	bcf	status,0,c
  5705  004336  3650               	rlcf	btemp+8,f,c
  5706  004338  3651               	rlcf	btemp+9,f,c
  5707  00433A  3652               	rlcf	btemp+10,f,c
  5708  00433C  3653               	rlcf	btemp+11,f,c
  5709  00433E  2EE8               	decfsz	wreg,f,c
  5710  004340  D7F9               	goto	u11795
  5711  004342  C050  F060         	movff	btemp+8,___lldiv@dividend
  5712  004346  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5713  00434A  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5714  00434E  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5715  004352  0E7D               	movlw	125
  5716  004354  0100               	movlb	0	; () banked
  5717  004356  6F64               	movwf	___lldiv@divisor& (0+255),b
  5718  004358  0E00               	movlw	0
  5719  00435A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5720  00435C  0E00               	movlw	0
  5721  00435E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5722  004360  0E00               	movlw	0
  5723  004362  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5724  004364  EC93  F032         	call	___lldiv	;wreg free
  5725  004368  C060  F050         	movff	?___lldiv,btemp+8
  5726  00436C  C061  F051         	movff	?___lldiv+1,btemp+9
  5727  004370  C062  F052         	movff	?___lldiv+2,btemp+10
  5728  004374  C063  F053         	movff	?___lldiv+3,btemp+11
  5729  004378                     L3:
  5730                           
  5731                           ;stkvar	_LORAWAN_LinkCheckCallback$2523 @ sp[(-5)+0]
  5732  004378  0EFB               	movlw	-5
  5733  00437A  C050  FFE3         	movff	btemp+8,plusw1
  5734  00437E  0EFC               	movlw	-4
  5735  004380  C051  FFE3         	movff	btemp+9,plusw1
  5736  004384  0EFD               	movlw	-3
  5737  004386  C052  FFE3         	movff	btemp+10,plusw1
  5738  00438A  0EFE               	movlw	-2
  5739  00438C  C053  FFE3         	movff	btemp+11,plusw1
  5740                           
  5741                           ;stkvar	_LORAWAN_LinkCheckCallback$2523 @ sp[(-5)+0]
  5742  004390  50E1               	movf	fsr1l,w,c
  5743  004392  0FFB               	addlw	-5
  5744  004394  6ED9               	movwf	fsr2l,c
  5745  004396  50E2               	movf	fsr1h,w,c
  5746  004398  6EDA               	movwf	fsr2h,c
  5747  00439A  0EFF               	movlw	255
  5748  00439C  22DA               	addwfc	fsr2h,f,c
  5749  00439E  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5750  0043A2  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5751  0043A6  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5752  0043AA  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5753  0043AE  0102               	movlb	2	; () banked
  5754  0043B0  51D8               	movf	(_loRa+216)& (0+255),w,b
  5755  0043B2  EC9D  F039         	call	_SwTimerSetTimeout
  5756                           
  5757                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  5758  0043B6  0102               	movlb	2	; () banked
  5759  0043B8  51D8               	movf	(_loRa+216)& (0+255),w,b
  5760  0043BA  EC62  F030         	call	_SwTimerStart
  5761  0043BE                     l1828:
  5762                           
  5763                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  5764  0043BE  0EFA               	movlw	250
  5765  0043C0  26E1               	addwf	fsr1l,f,c
  5766  0043C2  0EFF               	movlw	255
  5767  0043C4  22E2               	addwfc	fsr1h,f,c
  5768  0043C6  0012               	return		;funcret
  5769  0043C8                     __end_of_LORAWAN_LinkCheckCallback:
  5770                           	opt stack 0
  5771                           tosu	equ	0xFFF
  5772                           tosh	equ	0xFFE
  5773                           tosl	equ	0xFFD
  5774                           pclath	equ	0xFFA
  5775                           tblptru	equ	0xFF8
  5776                           tblptrh	equ	0xFF7
  5777                           tblptrl	equ	0xFF6
  5778                           tablat	equ	0xFF5
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           intcon	equ	0xFF2
  5782                           intcon2	equ	0xFF1
  5783                           intcon3	equ	0xFF0
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           postinc1	equ	0xFE6
  5787                           postdec1	equ	0xFE5
  5788                           plusw1	equ	0xFE3
  5789                           fsr1h	equ	0xFE2
  5790                           fsr1l	equ	0xFE1
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  5799 ;; Defined at:
  5800 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  param           1  [STACK] unsigned char 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1  [STACK] void 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 3F/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   14
  5821 ;; This function calls:
  5822 ;;		_ConfigureRadioRx
  5823 ;;		_LORAWAN_EnterContinuousReceive
  5824 ;;		_RADIO_GetStatus
  5825 ;;		_RADIO_ReceiveStart
  5826 ;;		_RADIO_ReceiveStop
  5827 ;;		_RADIO_ReleaseData
  5828 ;;		_ResetParametersForConfirmedTransmission
  5829 ;;		_ResetParametersForUnconfirmedTransmission
  5830 ;;		_RxData
  5831 ;; This function is called by:
  5832 ;;		_SetCallbackSoftwareTimers
  5833 ;;		_SwTimersExecute
  5834 ;; This function uses a reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text31
  5838  0058F8                     __ptext31:
  5839                           	opt stack 0
  5840  0058F8                     _LORAWAN_ReceiveWindow2Callback:
  5841                           	opt stack 14
  5842                           
  5843                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  5844                           
  5845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5846                           ;incstack = 0
  5847  0058F8  0102               	movlb	2	; () banked
  5848  0058FA  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5849  0058FC  D05D               	goto	l1804
  5850                           
  5851                           ; BSR set to: 2
  5852                           ;lorawan.c: 831: {
  5853                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  5854  0058FE  EC38  F03F         	call	_RADIO_GetStatus	;wreg free
  5855  005902  6E53               	movwf	btemp+11,c
  5856  005904  B253               	btfsc	btemp+11,1,c
  5857  005906  D054               	goto	l11108
  5858                           
  5859                           ;lorawan.c: 833: {
  5860                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  5861  005908  0102               	movlb	2	; () banked
  5862  00590A  5102               	movf	(_loRa+2)& (0+255),w,b
  5863  00590C  0BF0               	andlw	-16
  5864  00590E  0905               	iorlw	5
  5865  005910  6F02               	movwf	(_loRa+2)& (0+255),b
  5866                           
  5867                           ; BSR set to: 2
  5868                           ;lorawan.c: 836: RADIO_ReceiveStop();
  5869  005912  EC1A  F03D         	call	_RADIO_ReceiveStop	;wreg free
  5870                           
  5871                           ;lorawan.c: 837: RADIO_ReleaseData();
  5872  005916  EC32  F03F         	call	_RADIO_ReleaseData	;wreg free
  5873                           
  5874                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  5875  00591A  C218  F069         	movff	_loRa+24,ConfigureRadioRx@freq
  5876  00591E  C219  F06A         	movff	_loRa+25,ConfigureRadioRx@freq+1
  5877  005922  C21A  F06B         	movff	_loRa+26,ConfigureRadioRx@freq+2
  5878  005926  C21B  F06C         	movff	_loRa+27,ConfigureRadioRx@freq+3
  5879  00592A  0102               	movlb	2	; () banked
  5880  00592C  511C               	movf	(_loRa+28)& (0+255),w,b
  5881  00592E  EC24  F03C         	call	_ConfigureRadioRx
  5882                           
  5883                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  5884  005932  0102               	movlb	2	; () banked
  5885  005934  5112               	movf	(_loRa+18)& (0+255),w,b
  5886  005936  A4D8               	btfss	status,2,c
  5887  005938  D034               	goto	l11104
  5888                           
  5889                           ; BSR set to: 2
  5890                           ;lorawan.c: 842: {
  5891                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  5892  00593A  0E49               	movlw	low _rxWindowSize
  5893  00593C  251C               	addwf	(_loRa+28)& (0+255),w,b
  5894  00593E  6EF6               	movwf	tblptrl,c
  5895  005940  6AF7               	clrf	tblptrh,c
  5896  005942  0EFF               	movlw	high _rxWindowSize
  5897  005944  22F7               	addwfc	tblptrh,f,c
  5898  005946                     	if	1	;There are 3 active tblptr bytes
  5899  005946  6AF8               	clrf	tblptru,c
  5900  005948  0E00               	movlw	low (__mediumconst shr (0+16))
  5901  00594A  22F8               	addwfc	tblptru,f,c
  5902  00594C                     	endif
  5903  00594C  0008               	tblrd		*
  5904  00594E  50F5               	movf	tablat,w,c
  5905  005950  0100               	movlb	0	; () banked
  5906  005952  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  5907  005954  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  5908  005956  EC31  F018         	call	_RADIO_ReceiveStart	;wreg free
  5909  00595A  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
  5910  00595E  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
  5911  005962  5049               	movf	btemp+1,w,c
  5912  005964  104A               	iorwf	btemp+2,w,c
  5913  005966  B4D8               	btfsc	status,2,c
  5914  005968  D02F               	goto	l1813
  5915                           
  5916                           ;lorawan.c: 844: {
  5917                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  5918  00596A  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5919                           
  5920                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  5921  00596E  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  5922                           
  5923                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  5924  005972  0100               	movlb	0	; () banked
  5925  005974  51F9               	movf	_rxPayload& (0+255),w,b
  5926  005976  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  5927  005978  B4D8               	btfsc	status,2,c
  5928  00597A  D026               	goto	l1813
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;lorawan.c: 848: {
  5932                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  5933  00597C  0E00               	movlw	0
  5934  00597E  6F60               	movwf	RxData@pData& (0+255),b
  5935  005980  0E00               	movlw	0
  5936  005982  6F61               	movwf	(RxData@pData+1)& (0+255),b
  5937  005984  0E00               	movlw	0
  5938  005986  6F62               	movwf	RxData@dataLength& (0+255),b
  5939  005988  0E00               	movlw	0
  5940  00598A  6F63               	movwf	RxData@status& (0+255),b
  5941  00598C  D801               	call	u11688
  5942  00598E  D01C               	goto	l1813
  5943  005990                     u11688:
  5944  005990  0005               	push	
  5945  005992  6EFA               	movwf	pclath,c
  5946  005994  51F9               	movf	_rxPayload& (0+255),w,b
  5947  005996  6EFD               	movwf	tosl,c
  5948  005998  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  5949  00599A  6EFE               	movwf	tosh,c
  5950  00599C  6AFF               	clrf	tosu,c
  5951  00599E  50FA               	movf	pclath,w,c
  5952  0059A0  0012               	return		;indir
  5953  0059A2                     l11104:
  5954                           
  5955                           ; BSR set to: 2
  5956                           ;lorawan.c: 853: else
  5957                           ;lorawan.c: 854: {
  5958                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  5959  0059A2  5102               	movf	(_loRa+2)& (0+255),w,b
  5960  0059A4  0BF0               	andlw	-16
  5961  0059A6  0909               	iorlw	9
  5962  0059A8  6F02               	movwf	(_loRa+2)& (0+255),b
  5963                           
  5964                           ; BSR set to: 2
  5965                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  5966  0059AA  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  5967  0059AE  D00C               	goto	l1813
  5968  0059B0                     l11108:
  5969                           
  5970                           ;lorawan.c: 859: else
  5971                           ;lorawan.c: 860: {
  5972                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  5973  0059B0  0E01               	movlw	1
  5974  0059B2  0102               	movlb	2	; () banked
  5975  0059B4  6FE2               	movwf	(_loRa+226)& (0+255),b
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;lorawan.c: 864: }
  5979                           ;lorawan.c: 865: }
  5980  0059B6  D008               	goto	l1813
  5981  0059B8                     l1804:
  5982                           
  5983                           ; BSR set to: 2
  5984                           ;lorawan.c: 866: else
  5985                           ;lorawan.c: 867: {
  5986                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  5987  0059B8  A500               	btfss	_loRa& (0+255),2,b
  5988  0059BA  D002               	goto	l11112
  5989                           
  5990                           ; BSR set to: 2
  5991                           ;lorawan.c: 871: {
  5992                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  5993  0059BC  9500               	bcf	_loRa& (0+255),2,b
  5994                           
  5995                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  5996  0059BE  9902               	bcf	(_loRa+2)& (0+255),4,b
  5997  0059C0                     l11112:
  5998                           
  5999                           ; BSR set to: 2
  6000                           ;lorawan.c: 874: }
  6001                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  6002  0059C0  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6003                           
  6004                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  6005  0059C4  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6006  0059C8                     l1813:
  6007                           
  6008                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6009  0059C8  52E5               	movf	postdec1,f,c
  6010  0059CA  0012               	return		;funcret
  6011  0059CC                     __end_of_LORAWAN_ReceiveWindow2Callback:
  6012                           	opt stack 0
  6013                           tosu	equ	0xFFF
  6014                           tosh	equ	0xFFE
  6015                           tosl	equ	0xFFD
  6016                           pclath	equ	0xFFA
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           prodh	equ	0xFF4
  6022                           prodl	equ	0xFF3
  6023                           intcon	equ	0xFF2
  6024                           intcon2	equ	0xFF1
  6025                           intcon3	equ	0xFF0
  6026                           postinc0	equ	0xFEE
  6027                           wreg	equ	0xFE8
  6028                           postinc1	equ	0xFE6
  6029                           postdec1	equ	0xFE5
  6030                           plusw1	equ	0xFE3
  6031                           fsr1h	equ	0xFE2
  6032                           fsr1l	equ	0xFE1
  6033                           indf2	equ	0xFDF
  6034                           postinc2	equ	0xFDE
  6035                           postdec2	equ	0xFDD
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  6041 ;; Defined at:
  6042 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  param           1  [STACK] unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  freq            4  [STACK] unsigned long 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1  [STACK] void 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptr
      +u, prodl, prodh, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 3F/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:   13
  6063 ;; This function calls:
  6064 ;;		_ConfigureRadioRx
  6065 ;;		_GetRx1Freq
  6066 ;;		_RADIO_ReceiveStart
  6067 ;;		_RADIO_ReceiveStop
  6068 ;;		_RADIO_ReleaseData
  6069 ;; This function is called by:
  6070 ;;		_SetCallbackSoftwareTimers
  6071 ;;		_SwTimersExecute
  6072 ;; This function uses a reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text32
  6076  005C22                     __ptext32:
  6077                           	opt stack 0
  6078  005C22                     _LORAWAN_ReceiveWindow1Callback:
  6079                           	opt stack 0
  6080                           
  6081                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6082  005C22  52E6               	movf	postinc1,f,c
  6083  005C24  52E6               	movf	postinc1,f,c
  6084  005C26  52E6               	movf	postinc1,f,c
  6085  005C28  52E6               	movf	postinc1,f,c
  6086                           
  6087                           ;lorawan.c: 798: uint32_t freq;
  6088                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  6089                           
  6090                           ;incstack = 0
  6091  005C2A  0102               	movlb	2	; () banked
  6092  005C2C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6093  005C2E  D050               	goto	l1801
  6094                           
  6095                           ; BSR set to: 2
  6096                           ;lorawan.c: 801: {
  6097                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  6098  005C30  0E02               	movlw	2
  6099  005C32  1912               	xorwf	(_loRa+18)& (0+255),w,b
  6100  005C34  B4D8               	btfsc	status,2,c
  6101                           
  6102                           ; BSR set to: 2
  6103                           ;lorawan.c: 803: {
  6104                           ;lorawan.c: 804: RADIO_ReceiveStop();
  6105  005C36  EC1A  F03D         	call	_RADIO_ReceiveStop	;wreg free
  6106                           
  6107                           ;lorawan.c: 805: }
  6108                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  6109  005C3A  0102               	movlb	2	; () banked
  6110  005C3C  51E0               	movf	(_loRa+224)& (0+255),w,b
  6111  005C3E  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6112  005C40  A0D8               	btfss	status,0,c
  6113  005C42  D004               	goto	l1799
  6114                           
  6115                           ; BSR set to: 2
  6116                           ;lorawan.c: 807: {
  6117                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  6118  005C44  51E0               	movf	(_loRa+224)& (0+255),w,b
  6119  005C46  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6120  005C48  6F17               	movwf	(_loRa+23)& (0+255),b
  6121                           
  6122                           ;lorawan.c: 809: }
  6123  005C4A  D001               	goto	l11072
  6124  005C4C                     l1799:
  6125                           
  6126                           ; BSR set to: 2
  6127                           ;lorawan.c: 810: else
  6128                           ;lorawan.c: 811: {
  6129                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  6130  005C4C  6B17               	clrf	(_loRa+23)& (0+255),b
  6131  005C4E                     l11072:
  6132                           
  6133                           ; BSR set to: 2
  6134                           ;lorawan.c: 813: }
  6135                           ;lorawan.c: 815: freq = GetRx1Freq();
  6136  005C4E  ECD9  F03A         	call	_GetRx1Freq	;wreg free
  6137  005C52  C0AF  F050         	movff	?_GetRx1Freq,btemp+8
  6138  005C56  C0B0  F051         	movff	?_GetRx1Freq+1,btemp+9
  6139  005C5A  C0B1  F052         	movff	?_GetRx1Freq+2,btemp+10
  6140  005C5E  C0B2  F053         	movff	?_GetRx1Freq+3,btemp+11
  6141                           
  6142                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6143  005C62  0EFC               	movlw	-4
  6144  005C64  C050  FFE3         	movff	btemp+8,plusw1
  6145  005C68  0EFD               	movlw	-3
  6146  005C6A  C051  FFE3         	movff	btemp+9,plusw1
  6147  005C6E  0EFE               	movlw	-2
  6148  005C70  C052  FFE3         	movff	btemp+10,plusw1
  6149  005C74  0EFF               	movlw	-1
  6150  005C76  C053  FFE3         	movff	btemp+11,plusw1
  6151                           
  6152                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  6153  005C7A  0102               	movlb	2	; () banked
  6154  005C7C  5102               	movf	(_loRa+2)& (0+255),w,b
  6155  005C7E  0BF0               	andlw	-16
  6156  005C80  0903               	iorlw	3
  6157  005C82  6F02               	movwf	(_loRa+2)& (0+255),b
  6158                           
  6159                           ; BSR set to: 2
  6160                           ;lorawan.c: 819: RADIO_ReleaseData();
  6161  005C84  EC32  F03F         	call	_RADIO_ReleaseData	;wreg free
  6162                           
  6163                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  6164                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6165  005C88  50E1               	movf	fsr1l,w,c
  6166  005C8A  0FFC               	addlw	-4
  6167  005C8C  6ED9               	movwf	fsr2l,c
  6168  005C8E  50E2               	movf	fsr1h,w,c
  6169  005C90  6EDA               	movwf	fsr2h,c
  6170  005C92  0EFF               	movlw	255
  6171  005C94  22DA               	addwfc	fsr2h,f,c
  6172  005C96  CFDE F069          	movff	postinc2,ConfigureRadioRx@freq
  6173  005C9A  CFDE F06A          	movff	postinc2,ConfigureRadioRx@freq+1
  6174  005C9E  CFDE F06B          	movff	postinc2,ConfigureRadioRx@freq+2
  6175  005CA2  CFDE F06C          	movff	postinc2,ConfigureRadioRx@freq+3
  6176  005CA6  0102               	movlb	2	; () banked
  6177  005CA8  5117               	movf	(_loRa+23)& (0+255),w,b
  6178  005CAA  EC24  F03C         	call	_ConfigureRadioRx
  6179                           
  6180                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  6181  005CAE  0E49               	movlw	low _rxWindowSize
  6182  005CB0  0102               	movlb	2	; () banked
  6183  005CB2  2517               	addwf	(_loRa+23)& (0+255),w,b
  6184  005CB4  6EF6               	movwf	tblptrl,c
  6185  005CB6  6AF7               	clrf	tblptrh,c
  6186  005CB8  0EFF               	movlw	high _rxWindowSize
  6187  005CBA  22F7               	addwfc	tblptrh,f,c
  6188  005CBC                     	if	1	;There are 3 active tblptr bytes
  6189  005CBC  6AF8               	clrf	tblptru,c
  6190  005CBE  0E00               	movlw	low (__mediumconst shr (0+16))
  6191  005CC0  22F8               	addwfc	tblptru,f,c
  6192  005CC2                     	endif
  6193  005CC2  0008               	tblrd		*
  6194  005CC4  50F5               	movf	tablat,w,c
  6195  005CC6  0100               	movlb	0	; () banked
  6196  005CC8  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6197  005CCA  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6198  005CCC  EC31  F018         	call	_RADIO_ReceiveStart	;wreg free
  6199  005CD0                     l1801:
  6200                           
  6201                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6202  005CD0  0EFB               	movlw	251
  6203  005CD2  26E1               	addwf	fsr1l,f,c
  6204  005CD4  0EFF               	movlw	255
  6205  005CD6  22E2               	addwfc	fsr1h,f,c
  6206  005CD8  0012               	return		;funcret
  6207  005CDA                     __end_of_LORAWAN_ReceiveWindow1Callback:
  6208                           	opt stack 0
  6209                           tosu	equ	0xFFF
  6210                           tosh	equ	0xFFE
  6211                           tosl	equ	0xFFD
  6212                           pclath	equ	0xFFA
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           intcon	equ	0xFF2
  6220                           intcon2	equ	0xFF1
  6221                           intcon3	equ	0xFF0
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           postinc1	equ	0xFE6
  6225                           postdec1	equ	0xFE5
  6226                           plusw1	equ	0xFE3
  6227                           fsr1h	equ	0xFE2
  6228                           fsr1l	equ	0xFE1
  6229                           indf2	equ	0xFDF
  6230                           postinc2	equ	0xFDE
  6231                           postdec2	equ	0xFDD
  6232                           fsr2h	equ	0xFDA
  6233                           fsr2l	equ	0xFD9
  6234                           status	equ	0xFD8
  6235                           
  6236 ;; *************** function _RADIO_WatchdogTimeout *****************
  6237 ;; Defined at:
  6238 ;;		line 1497 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  param           1  [STACK] unsigned char 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1  [STACK] void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 3F/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;Total ram usage:        0 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:   15
  6259 ;; This function calls:
  6260 ;;		_LORAWAN_RxTimeout
  6261 ;;		_LORAWAN_TxDone
  6262 ;;		_RADIO_WriteMode
  6263 ;; This function is called by:
  6264 ;;		_RADIO_Init
  6265 ;;		_SwTimersExecute
  6266 ;; This function uses a reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text33
  6270  0071E0                     __ptext33:
  6271                           	opt stack 0
  6272  0071E0                     _RADIO_WatchdogTimeout:
  6273                           	opt stack 13
  6274                           
  6275                           ;radio_driver_SX1276.c: 1499: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  6276                           
  6277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6278                           ;incstack = 0
  6279  0071E0  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6280  0071E4  0E01               	movlw	1
  6281  0071E6  0100               	movlb	0	; () banked
  6282  0071E8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6283  0071EA  0E01               	movlw	1
  6284  0071EC  EC5E  F028         	call	_RADIO_WriteMode
  6285                           
  6286                           ;radio_driver_SX1276.c: 1500: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6287  0071F0  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6288  0071F4  0E00               	movlw	0
  6289  0071F6  0100               	movlb	0	; () banked
  6290  0071F8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6291  0071FA  0E00               	movlw	0
  6292  0071FC  EC5E  F028         	call	_RADIO_WriteMode
  6293  007200  968A               	bcf	3978,3,c	;volatile
  6294                           
  6295                           ;radio_driver_SX1276.c: 1505: RadioConfiguration.flags |= (1 << (4));
  6296  007202  0101               	movlb	1	; () banked
  6297  007204  8997               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;radio_driver_SX1276.c: 1506: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  6301  007206  A397               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  6302  007208  D004               	goto	l744
  6303                           
  6304                           ; BSR set to: 1
  6305                           ;radio_driver_SX1276.c: 1507: {
  6306                           ;radio_driver_SX1276.c: 1508: RadioConfiguration.flags &= ~(1 << (1));
  6307  00720A  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;radio_driver_SX1276.c: 1509: LORAWAN_RxTimeout();
  6311  00720C  EC6E  F036         	call	_LORAWAN_RxTimeout	;wreg free
  6312                           
  6313                           ;radio_driver_SX1276.c: 1510: }
  6314  007210  D009               	goto	l747
  6315  007212                     l744:
  6316                           
  6317                           ; BSR set to: 1
  6318                           ;radio_driver_SX1276.c: 1511: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  6319  007212  A197               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  6320  007214  D007               	goto	l747
  6321                           
  6322                           ; BSR set to: 1
  6323                           ;radio_driver_SX1276.c: 1512: {
  6324                           ;radio_driver_SX1276.c: 1513: RadioConfiguration.flags &= ~(1 << (0));
  6325  007216  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;radio_driver_SX1276.c: 1518: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  6329  007218  C19E  F09A         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  6330  00721C  C19F  F09B         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  6331  007220  EC61  F014         	call	_LORAWAN_TxDone	;wreg free
  6332  007224                     l747:
  6333                           
  6334                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  6335  007224  52E5               	movf	postdec1,f,c
  6336  007226  0012               	return		;funcret
  6337  007228                     __end_of_RADIO_WatchdogTimeout:
  6338                           	opt stack 0
  6339                           tosu	equ	0xFFF
  6340                           tosh	equ	0xFFE
  6341                           tosl	equ	0xFFD
  6342                           pclath	equ	0xFFA
  6343                           tblptru	equ	0xFF8
  6344                           tblptrh	equ	0xFF7
  6345                           tblptrl	equ	0xFF6
  6346                           tablat	equ	0xFF5
  6347                           prodh	equ	0xFF4
  6348                           prodl	equ	0xFF3
  6349                           intcon	equ	0xFF2
  6350                           intcon2	equ	0xFF1
  6351                           intcon3	equ	0xFF0
  6352                           postinc0	equ	0xFEE
  6353                           wreg	equ	0xFE8
  6354                           postinc1	equ	0xFE6
  6355                           postdec1	equ	0xFE5
  6356                           plusw1	equ	0xFE3
  6357                           fsr1h	equ	0xFE2
  6358                           fsr1l	equ	0xFE1
  6359                           indf2	equ	0xFDF
  6360                           postinc2	equ	0xFDE
  6361                           postdec2	equ	0xFDD
  6362                           fsr2h	equ	0xFDA
  6363                           fsr2l	equ	0xFD9
  6364                           status	equ	0xFD8
  6365                           
  6366 ;; *************** function _RADIO_RxFSKTimeout *****************
  6367 ;; Defined at:
  6368 ;;		line 1477 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  param           1  [STACK] unsigned char 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  irqFlags        1  [STACK] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1  [STACK] void 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prod
      +h, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 3F/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:   15
  6389 ;; This function calls:
  6390 ;;		_LORAWAN_RxTimeout
  6391 ;;		_RADIO_RegisterRead
  6392 ;;		_RADIO_WriteMode
  6393 ;;		_SwTimerStop
  6394 ;; This function is called by:
  6395 ;;		_RADIO_Init
  6396 ;;		_SwTimersExecute
  6397 ;; This function uses a reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text34
  6401  007506                     __ptext34:
  6402                           	opt stack 0
  6403  007506                     _RADIO_RxFSKTimeout:
  6404                           	opt stack 0
  6405                           
  6406                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6407  007506  52E6               	movf	postinc1,f,c
  6408                           
  6409                           ;radio_driver_SX1276.c: 1479: uint8_t irqFlags;
  6410                           ;radio_driver_SX1276.c: 1480: irqFlags = RADIO_RegisterRead(0x3E);
  6411                           
  6412                           ;incstack = 0
  6413  007508  0E3E               	movlw	62
  6414  00750A  EC75  F03C         	call	_RADIO_RegisterRead
  6415  00750E  6E53               	movwf	btemp+11,c
  6416                           
  6417                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6418  007510  0EFF               	movlw	-1
  6419  007512  C053  FFE3         	movff	btemp+11,plusw1
  6420                           
  6421                           ;radio_driver_SX1276.c: 1481: if (0 == (irqFlags & (1<<(0))))
  6422                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6423  007516  0EFF               	movlw	-1
  6424  007518  B0E3               	btfsc	plusw1,0,c
  6425  00751A  D011               	goto	l739
  6426                           
  6427                           ;radio_driver_SX1276.c: 1482: {
  6428                           ;radio_driver_SX1276.c: 1484: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6429  00751C  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6430  007520  0E00               	movlw	0
  6431  007522  0100               	movlb	0	; () banked
  6432  007524  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6433  007526  0E00               	movlw	0
  6434  007528  EC5E  F028         	call	_RADIO_WriteMode
  6435                           
  6436                           ;radio_driver_SX1276.c: 1486: SwTimerStop(RadioConfiguration.watchdogTimerId);
  6437  00752C  0101               	movlb	1	; () banked
  6438  00752E  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  6439  007530  EC89  F03C         	call	_SwTimerStop
  6440  007534  968A               	bcf	3978,3,c	;volatile
  6441                           
  6442                           ;radio_driver_SX1276.c: 1491: RadioConfiguration.flags &= ~(1 << (1));
  6443  007536  0101               	movlb	1	; () banked
  6444  007538  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;radio_driver_SX1276.c: 1492: LORAWAN_RxTimeout();
  6448  00753A  EC6E  F036         	call	_LORAWAN_RxTimeout	;wreg free
  6449  00753E                     l739:
  6450                           
  6451                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6452  00753E  52E5               	movf	postdec1,f,c
  6453  007540  52E5               	movf	postdec1,f,c
  6454  007542  0012               	return		;funcret
  6455  007544                     __end_of_RADIO_RxFSKTimeout:
  6456                           	opt stack 0
  6457                           tosu	equ	0xFFF
  6458                           tosh	equ	0xFFE
  6459                           tosl	equ	0xFFD
  6460                           pclath	equ	0xFFA
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           intcon	equ	0xFF2
  6468                           intcon2	equ	0xFF1
  6469                           intcon3	equ	0xFF0
  6470                           postinc0	equ	0xFEE
  6471                           wreg	equ	0xFE8
  6472                           postinc1	equ	0xFE6
  6473                           postdec1	equ	0xFE5
  6474                           plusw1	equ	0xFE3
  6475                           fsr1h	equ	0xFE2
  6476                           fsr1l	equ	0xFE1
  6477                           indf2	equ	0xFDF
  6478                           postinc2	equ	0xFDE
  6479                           postdec2	equ	0xFDD
  6480                           fsr2h	equ	0xFDA
  6481                           fsr2l	equ	0xFD9
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _UnconfirmedTransmissionCallback *****************
  6485 ;; Defined at:
  6486 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  param           1  [STACK] unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1  [STACK] void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cst
      +ack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 3F/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:   13
  6507 ;; This function calls:
  6508 ;;		_RADIO_Transmit
  6509 ;;		_ResetParametersForUnconfirmedTransmission
  6510 ;;		_RxData
  6511 ;;		_SelectChannelForTransmission
  6512 ;; This function is called by:
  6513 ;;		_SetCallbackSoftwareTimers
  6514 ;;		_SwTimersExecute
  6515 ;; This function uses a reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text35
  6519  006722                     __ptext35:
  6520                           	opt stack 0
  6521  006722                     _UnconfirmedTransmissionCallback:
  6522                           	opt stack 15
  6523                           
  6524                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  6525                           
  6526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6527                           ;incstack = 0
  6528  006722  0E01               	movlw	1
  6529  006724  EC4F  F01B         	call	_SelectChannelForTransmission
  6530  006728  0900               	iorlw	0
  6531  00672A  A4D8               	btfss	status,2,c
  6532  00672C  D018               	goto	l11204
  6533  00672E  0EA0               	movlw	low (_macBuffer+16)
  6534  006730  0100               	movlb	0	; () banked
  6535  006732  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  6536  006734  0E04               	movlw	high (_macBuffer+16)
  6537  006736  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6538  006738  C2C5  F0B3         	movff	_loRa+197,RADIO_Transmit@bufferLen
  6539  00673C  EC14  F017         	call	_RADIO_Transmit	;wreg free
  6540  006740  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  6541  006744  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  6542  006748  5049               	movf	btemp+1,w,c
  6543  00674A  104A               	iorwf	btemp+2,w,c
  6544  00674C  A4D8               	btfss	status,2,c
  6545  00674E  D007               	goto	l11204
  6546                           
  6547                           ;lorawan.c: 1001: {
  6548                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  6549  006750  0102               	movlb	2	; () banked
  6550  006752  2BC9               	incf	(_loRa+201)& (0+255),f,b
  6551                           
  6552                           ; BSR set to: 2
  6553                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6554  006754  5102               	movf	(_loRa+2)& (0+255),w,b
  6555  006756  0BF0               	andlw	-16
  6556  006758  0901               	iorlw	1
  6557  00675A  6F02               	movwf	(_loRa+2)& (0+255),b
  6558                           
  6559                           ;lorawan.c: 1005: }
  6560  00675C  D01A               	goto	u11979
  6561  00675E                     l11204:
  6562                           
  6563                           ;lorawan.c: 1006: else
  6564                           ;lorawan.c: 1008: {
  6565                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  6566  00675E  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6567                           
  6568                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  6569  006762  0100               	movlb	0	; () banked
  6570  006764  51F9               	movf	_rxPayload& (0+255),w,b
  6571  006766  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  6572  006768  B4D8               	btfsc	status,2,c
  6573  00676A  D013               	goto	u11979
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;lorawan.c: 1011: {
  6577                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6578  00676C  0E00               	movlw	0
  6579  00676E  6F60               	movwf	RxData@pData& (0+255),b
  6580  006770  0E00               	movlw	0
  6581  006772  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6582  006774  0E00               	movlw	0
  6583  006776  6F62               	movwf	RxData@dataLength& (0+255),b
  6584  006778  0E00               	movlw	0
  6585  00677A  6F63               	movwf	RxData@status& (0+255),b
  6586  00677C  D801               	call	u11978
  6587  00677E  D009               	goto	u11979
  6588  006780                     u11978:
  6589  006780  0005               	push	
  6590  006782  6EFA               	movwf	pclath,c
  6591  006784  51F9               	movf	_rxPayload& (0+255),w,b
  6592  006786  6EFD               	movwf	tosl,c
  6593  006788  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  6594  00678A  6EFE               	movwf	tosh,c
  6595  00678C  6AFF               	clrf	tosu,c
  6596  00678E  50FA               	movf	pclath,w,c
  6597  006790  0012               	return		;indir
  6598  006792                     u11979:
  6599                           
  6600                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  6601  006792  52E5               	movf	postdec1,f,c
  6602  006794  0012               	return		;funcret
  6603  006796                     __end_of_UnconfirmedTransmissionCallback:
  6604                           	opt stack 0
  6605                           tosu	equ	0xFFF
  6606                           tosh	equ	0xFFE
  6607                           tosl	equ	0xFFD
  6608                           pclath	equ	0xFFA
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           prodh	equ	0xFF4
  6614                           prodl	equ	0xFF3
  6615                           intcon	equ	0xFF2
  6616                           intcon2	equ	0xFF1
  6617                           intcon3	equ	0xFF0
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           postinc1	equ	0xFE6
  6621                           postdec1	equ	0xFE5
  6622                           plusw1	equ	0xFE3
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           indf2	equ	0xFDF
  6626                           postinc2	equ	0xFDE
  6627                           postdec2	equ	0xFDD
  6628                           fsr2h	equ	0xFDA
  6629                           fsr2l	equ	0xFD9
  6630                           status	equ	0xFD8
  6631                           
  6632 ;; *************** function _GetRx1Freq *****************
  6633 ;; Defined at:
  6634 ;;		line 682 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  channelIndex    1   83[BANK0 ] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  4   79[BANK0 ] unsigned long 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;Total ram usage:        5 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    9
  6655 ;; This function calls:
  6656 ;;		_GenerateUSFrequencyReception
  6657 ;; This function is called by:
  6658 ;;		_LORAWAN_ReceiveWindow1Callback
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text36
  6663  0075B2                     __ptext36:
  6664                           	opt stack 0
  6665  0075B2                     _GetRx1Freq:
  6666                           	opt stack 18
  6667                           
  6668                           ;lorawan_na.c: 684: uint8_t channelIndex;
  6669                           ;lorawan_na.c: 686: channelIndex = loRa.lastUsedChannelIndex % 8;
  6670                           
  6671                           ;incstack = 0
  6672  0075B2  0102               	movlb	2	; () banked
  6673  0075B4  51CB               	movf	(_loRa+203)& (0+255),w,b
  6674  0075B6  0B07               	andlw	7
  6675  0075B8  0100               	movlb	0	; () banked
  6676  0075BA  6FB3               	movwf	GetRx1Freq@channelIndex& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;lorawan_na.c: 687: loRa.receiveWindow1Parameters.frequency = GenerateUSFrequencyRecepti
      +                          on (channelIndex);
  6680  0075BC  51B3               	movf	GetRx1Freq@channelIndex& (0+255),w,b
  6681  0075BE  EC54  F038         	call	_GenerateUSFrequencyReception
  6682  0075C2  C0A6  F213         	movff	?_GenerateUSFrequencyReception,_loRa+19
  6683  0075C6  C0A7  F214         	movff	?_GenerateUSFrequencyReception+1,_loRa+20
  6684  0075CA  C0A8  F215         	movff	?_GenerateUSFrequencyReception+2,_loRa+21
  6685  0075CE  C0A9  F216         	movff	?_GenerateUSFrequencyReception+3,_loRa+22
  6686                           
  6687                           ;lorawan_na.c: 689: return loRa.receiveWindow1Parameters.frequency;
  6688  0075D2  C213  F0AF         	movff	_loRa+19,?_GetRx1Freq
  6689  0075D6  C214  F0B0         	movff	_loRa+20,?_GetRx1Freq+1
  6690  0075DA  C215  F0B1         	movff	_loRa+21,?_GetRx1Freq+2
  6691  0075DE  C216  F0B2         	movff	_loRa+22,?_GetRx1Freq+3
  6692  0075E2  0012               	return	
  6693  0075E4                     __end_of_GetRx1Freq:
  6694                           	opt stack 0
  6695                           tosu	equ	0xFFF
  6696                           tosh	equ	0xFFE
  6697                           tosl	equ	0xFFD
  6698                           pclath	equ	0xFFA
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           intcon2	equ	0xFF1
  6707                           intcon3	equ	0xFF0
  6708                           postinc0	equ	0xFEE
  6709                           wreg	equ	0xFE8
  6710                           postinc1	equ	0xFE6
  6711                           postdec1	equ	0xFE5
  6712                           plusw1	equ	0xFE3
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _GenerateUSFrequencyReception *****************
  6723 ;; Defined at:
  6724 ;;		line 995 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  channelIndex    1    wreg     unsigned char 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  channelIndex    1   78[BANK0 ] unsigned char 
  6729 ;;  channelFrequ    4   74[BANK0 ] unsigned long 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4   70[BANK0 ] unsigned long 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:        9 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    8
  6746 ;; This function calls:
  6747 ;;		___lmul
  6748 ;; This function is called by:
  6749 ;;		_GetRx1Freq
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text37
  6754  0070A8                     __ptext37:
  6755                           	opt stack 0
  6756  0070A8                     _GenerateUSFrequencyReception:
  6757                           	opt stack 18
  6758                           
  6759                           ;incstack = 0
  6760                           ;GenerateUSFrequencyReception@channelIndex stored from wreg
  6761  0070A8  0100               	movlb	0	; () banked
  6762  0070AA  6FAE               	movwf	GenerateUSFrequencyReception@channelIndex& (0+255),b
  6763                           
  6764                           ;lorawan_na.c: 997: uint32_t channelFrequency;
  6765                           ;lorawan_na.c: 999: channelFrequency = (923300000) + 600000 * channelIndex;
  6766  0070AC  0100               	movlb	0	; () banked
  6767  0070AE  51AE               	movf	GenerateUSFrequencyReception@channelIndex& (0+255),w,b
  6768  0070B0  6F9A               	movwf	___lmul@multiplier& (0+255),b
  6769  0070B2  6B9B               	clrf	(___lmul@multiplier+1)& (0+255),b
  6770  0070B4  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
  6771  0070B6  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
  6772  0070B8  0EC0               	movlw	192
  6773  0070BA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  6774  0070BC  0E27               	movlw	39
  6775  0070BE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6776  0070C0  0E09               	movlw	9
  6777  0070C2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6778  0070C4  0E00               	movlw	0
  6779  0070C6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6780  0070C8  EC55  F037         	call	___lmul	;wreg free
  6781  0070CC  0EA0               	movlw	160
  6782  0070CE  0100               	movlb	0	; () banked
  6783  0070D0  259A               	addwf	?___lmul& (0+255),w,b
  6784  0070D2  6FAA               	movwf	GenerateUSFrequencyReception@channelFrequency& (0+255),b
  6785  0070D4  0E70               	movlw	112
  6786  0070D6  219B               	addwfc	(?___lmul+1)& (0+255),w,b
  6787  0070D8  6FAB               	movwf	(GenerateUSFrequencyReception@channelFrequency+1)& (0+255),b
  6788  0070DA  0E08               	movlw	8
  6789  0070DC  219C               	addwfc	(?___lmul+2)& (0+255),w,b
  6790  0070DE  6FAC               	movwf	(GenerateUSFrequencyReception@channelFrequency+2)& (0+255),b
  6791  0070E0  0E37               	movlw	55
  6792  0070E2  219D               	addwfc	(?___lmul+3)& (0+255),w,b
  6793  0070E4  6FAD               	movwf	(GenerateUSFrequencyReception@channelFrequency+3)& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;lorawan_na.c: 1000: return channelFrequency;
  6797  0070E6  C0AA  F0A6         	movff	GenerateUSFrequencyReception@channelFrequency,?_GenerateUSFrequencyReception
  6798  0070EA  C0AB  F0A7         	movff	GenerateUSFrequencyReception@channelFrequency+1,?_GenerateUSFrequencyReception+1
  6799  0070EE  C0AC  F0A8         	movff	GenerateUSFrequencyReception@channelFrequency+2,?_GenerateUSFrequencyReception+2
  6800  0070F2  C0AD  F0A9         	movff	GenerateUSFrequencyReception@channelFrequency+3,?_GenerateUSFrequencyReception+3
  6801  0070F6  0012               	return	
  6802  0070F8                     __end_of_GenerateUSFrequencyReception:
  6803                           	opt stack 0
  6804                           tosu	equ	0xFFF
  6805                           tosh	equ	0xFFE
  6806                           tosl	equ	0xFFD
  6807                           pclath	equ	0xFFA
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           prodh	equ	0xFF4
  6813                           prodl	equ	0xFF3
  6814                           intcon	equ	0xFF2
  6815                           intcon2	equ	0xFF1
  6816                           intcon3	equ	0xFF0
  6817                           postinc0	equ	0xFEE
  6818                           wreg	equ	0xFE8
  6819                           postinc1	equ	0xFE6
  6820                           postdec1	equ	0xFE5
  6821                           plusw1	equ	0xFE3
  6822                           fsr1h	equ	0xFE2
  6823                           fsr1l	equ	0xFE1
  6824                           indf2	equ	0xFDF
  6825                           postinc2	equ	0xFDE
  6826                           postdec2	equ	0xFDD
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function _RADIO_DIO5 *****************
  6832 ;; Defined at:
  6833 ;;		line 1421 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:        2 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:   11
  6854 ;; This function calls:
  6855 ;;		_RADIO_RegisterRead
  6856 ;;		_RADIO_UnhandledInterrupt
  6857 ;; This function is called by:
  6858 ;;		_LORAWAN_Mainloop
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text38
  6863  007872                     __ptext38:
  6864                           	opt stack 0
  6865  007872                     _RADIO_DIO5:
  6866                           	opt stack 18
  6867                           
  6868                           ;radio_driver_SX1276.c: 1424: uint8_t dioMapping;
  6869                           ;radio_driver_SX1276.c: 1425: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;incstack = 0
  6873  007872  0E41               	movlw	65
  6874  007874  EC75  F03C         	call	_RADIO_RegisterRead
  6875  007878  0100               	movlb	0	; () banked
  6876  00787A  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  6877  00787C  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
  6878  00787E  0B0F               	andlw	15
  6879  007880  0B03               	andlw	3
  6880  007882  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  6881                           
  6882                           ;radio_driver_SX1276.c: 1427: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  6883  007884  0E01               	movlw	1
  6884  007886  EC75  F03C         	call	_RADIO_RegisterRead
  6885  00788A  0100               	movlb	0	; () banked
  6886  00788C  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  6887  00788E  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
  6888  007890  0012               	return	
  6889                           
  6890                           ;radio_driver_SX1276.c: 1433: RADIO_UnhandledInterrupt(MODULATION_LORA);
  6891                           
  6892                           ; BSR set to: 0
  6893                           
  6894                           ;radio_driver_SX1276.c: 1431: {
  6895                           ;radio_driver_SX1276.c: 1432: default:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;radio_driver_SX1276.c: 1428: {
  6899                           ;radio_driver_SX1276.c: 1430: switch (dioMapping)
  6900  007892  0E01               	movlw	1
  6901  007894  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  6902                           
  6903                           ;radio_driver_SX1276.c: 1435: }
  6904                           
  6905                           ;radio_driver_SX1276.c: 1434: break;
  6906  007898  0012               	return	
  6907  00789A                     __end_of_RADIO_DIO5:
  6908                           	opt stack 0
  6909                           tosu	equ	0xFFF
  6910                           tosh	equ	0xFFE
  6911                           tosl	equ	0xFFD
  6912                           pclath	equ	0xFFA
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           intcon	equ	0xFF2
  6920                           intcon2	equ	0xFF1
  6921                           intcon3	equ	0xFF0
  6922                           postinc0	equ	0xFEE
  6923                           wreg	equ	0xFE8
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           plusw1	equ	0xFE3
  6927                           fsr1h	equ	0xFE2
  6928                           fsr1l	equ	0xFE1
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936 ;; *************** function _RADIO_DIO4 *****************
  6937 ;; Defined at:
  6938 ;;		line 1398 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  dioMapping      1    7[BANK0 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        3 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:   11
  6959 ;; This function calls:
  6960 ;;		_RADIO_RegisterRead
  6961 ;;		_RADIO_UnhandledInterrupt
  6962 ;; This function is called by:
  6963 ;;		_LORAWAN_Mainloop
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text39
  6968  0075E4                     __ptext39:
  6969                           	opt stack 0
  6970  0075E4                     _RADIO_DIO4:
  6971                           	opt stack 18
  6972                           
  6973                           ;radio_driver_SX1276.c: 1401: uint8_t dioMapping;
  6974                           ;radio_driver_SX1276.c: 1402: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  6975                           
  6976                           ;incstack = 0
  6977  0075E4  0E41               	movlw	65
  6978  0075E6  EC75  F03C         	call	_RADIO_RegisterRead
  6979  0075EA  0100               	movlb	0	; () banked
  6980  0075EC  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  6981  0075EE  0E06               	movlw	6
  6982  0075F0  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  6983  0075F2                     u12105:
  6984  0075F2  90D8               	bcf	status,0,c
  6985  0075F4  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
  6986  0075F6  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  6987  0075F8  D7FC               	goto	u12105
  6988  0075FA  5165               	movf	??_RADIO_DIO4& (0+255),w,b
  6989  0075FC  0B03               	andlw	3
  6990  0075FE  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  6991                           
  6992                           ;radio_driver_SX1276.c: 1404: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  6993  007600  0E01               	movlw	1
  6994  007602  EC75  F03C         	call	_RADIO_RegisterRead
  6995  007606  0100               	movlb	0	; () banked
  6996  007608  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  6997  00760A  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
  6998  00760C  0012               	return	
  6999                           
  7000                           ;radio_driver_SX1276.c: 1410: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7001                           
  7002                           ; BSR set to: 0
  7003                           
  7004                           ;radio_driver_SX1276.c: 1408: {
  7005                           ;radio_driver_SX1276.c: 1409: default:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;radio_driver_SX1276.c: 1405: {
  7009                           ;radio_driver_SX1276.c: 1407: switch (dioMapping)
  7010  00760E  0E01               	movlw	1
  7011  007610  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7012                           
  7013                           ;radio_driver_SX1276.c: 1412: }
  7014                           
  7015                           ;radio_driver_SX1276.c: 1411: break;
  7016  007614  0012               	return	
  7017  007616                     __end_of_RADIO_DIO4:
  7018                           	opt stack 0
  7019                           tosu	equ	0xFFF
  7020                           tosh	equ	0xFFE
  7021                           tosl	equ	0xFFD
  7022                           pclath	equ	0xFFA
  7023                           tblptru	equ	0xFF8
  7024                           tblptrh	equ	0xFF7
  7025                           tblptrl	equ	0xFF6
  7026                           tablat	equ	0xFF5
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           intcon2	equ	0xFF1
  7031                           intcon3	equ	0xFF0
  7032                           postinc0	equ	0xFEE
  7033                           wreg	equ	0xFE8
  7034                           postinc1	equ	0xFE6
  7035                           postdec1	equ	0xFE5
  7036                           plusw1	equ	0xFE3
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           indf2	equ	0xFDF
  7040                           postinc2	equ	0xFDE
  7041                           postdec2	equ	0xFDD
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function _RADIO_DIO3 *****************
  7047 ;; Defined at:
  7048 ;;		line 1375 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:   11
  7069 ;; This function calls:
  7070 ;;		_RADIO_RegisterRead
  7071 ;;		_RADIO_UnhandledInterrupt
  7072 ;; This function is called by:
  7073 ;;		_LORAWAN_Mainloop
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text40
  7078  0079F0                     __ptext40:
  7079                           	opt stack 0
  7080  0079F0                     _RADIO_DIO3:
  7081                           	opt stack 18
  7082                           
  7083                           ;radio_driver_SX1276.c: 1378: uint8_t dioMapping;
  7084                           ;radio_driver_SX1276.c: 1379: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  7085                           
  7086                           ;incstack = 0
  7087  0079F0  0E40               	movlw	64
  7088  0079F2  EC75  F03C         	call	_RADIO_RegisterRead
  7089  0079F6  0B03               	andlw	3
  7090  0079F8  0100               	movlb	0	; () banked
  7091  0079FA  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  7092                           
  7093                           ;radio_driver_SX1276.c: 1381: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7094  0079FC  0E01               	movlw	1
  7095  0079FE  EC75  F03C         	call	_RADIO_RegisterRead
  7096  007A02  0100               	movlb	0	; () banked
  7097  007A04  6F65               	movwf	??_RADIO_DIO3& (0+255),b
  7098  007A06  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
  7099  007A08  0012               	return	
  7100                           
  7101                           ;radio_driver_SX1276.c: 1387: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7102                           
  7103                           ; BSR set to: 0
  7104                           
  7105                           ;radio_driver_SX1276.c: 1385: {
  7106                           ;radio_driver_SX1276.c: 1386: default:
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;radio_driver_SX1276.c: 1382: {
  7110                           ;radio_driver_SX1276.c: 1384: switch (dioMapping)
  7111  007A0A  0E01               	movlw	1
  7112  007A0C  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7113                           
  7114                           ;radio_driver_SX1276.c: 1389: }
  7115                           
  7116                           ;radio_driver_SX1276.c: 1388: break;
  7117  007A10  0012               	return	
  7118  007A12                     __end_of_RADIO_DIO3:
  7119                           	opt stack 0
  7120                           tosu	equ	0xFFF
  7121                           tosh	equ	0xFFE
  7122                           tosl	equ	0xFFD
  7123                           pclath	equ	0xFFA
  7124                           tblptru	equ	0xFF8
  7125                           tblptrh	equ	0xFF7
  7126                           tblptrl	equ	0xFF6
  7127                           tablat	equ	0xFF5
  7128                           prodh	equ	0xFF4
  7129                           prodl	equ	0xFF3
  7130                           intcon	equ	0xFF2
  7131                           intcon2	equ	0xFF1
  7132                           intcon3	equ	0xFF0
  7133                           postinc0	equ	0xFEE
  7134                           wreg	equ	0xFE8
  7135                           postinc1	equ	0xFE6
  7136                           postdec1	equ	0xFE5
  7137                           plusw1	equ	0xFE3
  7138                           fsr1h	equ	0xFE2
  7139                           fsr1l	equ	0xFE1
  7140                           indf2	equ	0xFDF
  7141                           postinc2	equ	0xFDE
  7142                           postdec2	equ	0xFDD
  7143                           fsr2h	equ	0xFDA
  7144                           fsr2l	equ	0xFD9
  7145                           status	equ	0xFD8
  7146                           
  7147 ;; *************** function _RADIO_DIO2 *****************
  7148 ;; Defined at:
  7149 ;;		line 1345 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  7154 ;;  opMode          1   27[BANK0 ] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;Total ram usage:        3 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   12
  7171 ;; This function calls:
  7172 ;;		_RADIO_FHSSChangeChannel
  7173 ;;		_RADIO_RegisterRead
  7174 ;;		_RADIO_UnhandledInterrupt
  7175 ;; This function is called by:
  7176 ;;		_LORAWAN_Mainloop
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text41
  7181  006F58                     __ptext41:
  7182                           	opt stack 0
  7183  006F58                     _RADIO_DIO2:
  7184                           	opt stack 17
  7185                           
  7186                           ;radio_driver_SX1276.c: 1348: uint8_t dioMapping;
  7187                           ;radio_driver_SX1276.c: 1349: uint8_t opMode;
  7188                           ;radio_driver_SX1276.c: 1350: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  7189                           
  7190                           ;incstack = 0
  7191  006F58  0E40               	movlw	64
  7192  006F5A  EC75  F03C         	call	_RADIO_RegisterRead
  7193  006F5E  0100               	movlb	0	; () banked
  7194  006F60  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7195  006F62  90D8               	bcf	status,0,c
  7196  006F64  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
  7197  006F66  90D8               	bcf	status,0,c
  7198  006F68  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
  7199  006F6A  0B03               	andlw	3
  7200  006F6C  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  7201                           
  7202                           ;radio_driver_SX1276.c: 1351: opMode = RADIO_RegisterRead(0x01);
  7203  006F6E  0E01               	movlw	1
  7204  006F70  EC75  F03C         	call	_RADIO_RegisterRead
  7205  006F74  0100               	movlb	0	; () banked
  7206  006F76  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
  7207                           
  7208                           ;radio_driver_SX1276.c: 1353: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7209  006F78  0E01               	movlw	1
  7210  006F7A  EC75  F03C         	call	_RADIO_RegisterRead
  7211  006F7E  0100               	movlb	0	; () banked
  7212  006F80  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7213  006F82  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
  7214  006F84  0012               	return	
  7215  006F86  D007               	goto	l693
  7216  006F88                     
  7217                           ; BSR set to: 0
  7218                           ;radio_driver_SX1276.c: 1360: case 0x01:
  7219                           ;radio_driver_SX1276.c: 1361: case 0x02:
  7220                           ;radio_driver_SX1276.c: 1362: RADIO_FHSSChangeChannel();
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225                           
  7226                           ; BSR set to: 0
  7227  006F88  EC24  F03A         	call	_RADIO_FHSSChangeChannel	;wreg free
  7228                           
  7229                           ;radio_driver_SX1276.c: 1363: break;
  7230  006F8C  0012               	return	
  7231  006F8E                     
  7232                           ;radio_driver_SX1276.c: 1365: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7233  006F8E  0E01               	movlw	1
  7234  006F90  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7235                           
  7236                           ;radio_driver_SX1276.c: 1367: }
  7237                           
  7238                           ;radio_driver_SX1276.c: 1366: break;
  7239  006F94  0012               	return	
  7240  006F96                     l693:
  7241  006F96  0100               	movlb	0	; () banked
  7242  006F98  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  7243                           
  7244                           ; Switch size 1, requested type "space"
  7245                           ; Number of cases is 3, Range of values is 0 to 2
  7246                           ; switch strategies available:
  7247                           ; Name         Instructions Cycles
  7248                           ; simple_byte           10     6 (average)
  7249                           ;	Chosen strategy is simple_byte
  7250  006F9A  0A00               	xorlw	0	; case 0
  7251  006F9C  B4D8               	btfsc	status,2,c
  7252  006F9E  D7F4               	goto	l694
  7253  006FA0  0A01               	xorlw	1	; case 1
  7254  006FA2  B4D8               	btfsc	status,2,c
  7255  006FA4  D7F1               	goto	l694
  7256  006FA6  0A03               	xorlw	3	; case 2
  7257  006FA8  B4D8               	btfsc	status,2,c
  7258  006FAA  D7EE               	goto	l694
  7259  006FAC  D7F0               	goto	l698
  7260  006FAE                     __end_of_RADIO_DIO2:
  7261                           	opt stack 0
  7262                           tosu	equ	0xFFF
  7263                           tosh	equ	0xFFE
  7264                           tosl	equ	0xFFD
  7265                           pclath	equ	0xFFA
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           intcon	equ	0xFF2
  7273                           intcon2	equ	0xFF1
  7274                           intcon3	equ	0xFF0
  7275                           postinc0	equ	0xFEE
  7276                           wreg	equ	0xFE8
  7277                           postinc1	equ	0xFE6
  7278                           postdec1	equ	0xFE5
  7279                           plusw1	equ	0xFE3
  7280                           fsr1h	equ	0xFE2
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           postdec2	equ	0xFDD
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function _RADIO_DIO1 *****************
  7290 ;; Defined at:
  7291 ;;		line 1308 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  dioMapping      1  107[BANK0 ] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;Total ram usage:        2 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:   16
  7312 ;; This function calls:
  7313 ;;		_RADIO_FHSSChangeChannel
  7314 ;;		_RADIO_RegisterRead
  7315 ;;		_RADIO_RxTimeout
  7316 ;;		_RADIO_UnhandledInterrupt
  7317 ;; This function is called by:
  7318 ;;		_LORAWAN_Mainloop
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text42
  7323  007148                     __ptext42:
  7324                           	opt stack 0
  7325  007148                     _RADIO_DIO1:
  7326                           	opt stack 13
  7327                           
  7328                           ;radio_driver_SX1276.c: 1311: uint8_t dioMapping;
  7329                           ;radio_driver_SX1276.c: 1312: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  7330                           
  7331                           ;incstack = 0
  7332  007148  0E40               	movlw	64
  7333  00714A  EC75  F03C         	call	_RADIO_RegisterRead
  7334  00714E  0100               	movlb	0	; () banked
  7335  007150  6FCA               	movwf	??_RADIO_DIO1& (0+255),b
  7336  007152  39CA               	swapf	??_RADIO_DIO1& (0+255),w,b
  7337  007154  0B0F               	andlw	15
  7338  007156  0B03               	andlw	3
  7339  007158  6FCB               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  7340                           
  7341                           ;radio_driver_SX1276.c: 1314: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7342  00715A  0E01               	movlw	1
  7343  00715C  EC75  F03C         	call	_RADIO_RegisterRead
  7344  007160  0100               	movlb	0	; () banked
  7345  007162  6FCA               	movwf	??_RADIO_DIO1& (0+255),b
  7346  007164  BFCA               	btfsc	??_RADIO_DIO1& (0+255),7,b
  7347  007166  D00B               	goto	l679
  7348  007168  D013               	goto	l685
  7349  00716A                     
  7350                           ; BSR set to: 0
  7351                           ;radio_driver_SX1276.c: 1320: RADIO_RxTimeout();
  7352                           
  7353                           ; BSR set to: 0
  7354  00716A  EC3D  F03B         	call	_RADIO_RxTimeout	;wreg free
  7355                           
  7356                           ;radio_driver_SX1276.c: 1321: break;
  7357  00716E  0012               	return	
  7358  007170                     
  7359                           ;radio_driver_SX1276.c: 1323: RADIO_FHSSChangeChannel();
  7360  007170  EC24  F03A         	call	_RADIO_FHSSChangeChannel	;wreg free
  7361                           
  7362                           ;radio_driver_SX1276.c: 1324: break;
  7363  007174  0012               	return	
  7364  007176                     
  7365                           ;radio_driver_SX1276.c: 1326: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7366  007176  0E01               	movlw	1
  7367  007178  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7368                           
  7369                           ;radio_driver_SX1276.c: 1328: }
  7370                           
  7371                           ;radio_driver_SX1276.c: 1327: break;
  7372  00717C  0012               	return	
  7373  00717E                     l679:
  7374  00717E  0100               	movlb	0	; () banked
  7375  007180  51CB               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7376                           
  7377                           ; Switch size 1, requested type "space"
  7378                           ; Number of cases is 2, Range of values is 0 to 1
  7379                           ; switch strategies available:
  7380                           ; Name         Instructions Cycles
  7381                           ; simple_byte            7     4 (average)
  7382                           ;	Chosen strategy is simple_byte
  7383  007182  0A00               	xorlw	0	; case 0
  7384  007184  B4D8               	btfsc	status,2,c
  7385  007186  D7F1               	goto	l680
  7386  007188  0A01               	xorlw	1	; case 1
  7387  00718A  B4D8               	btfsc	status,2,c
  7388  00718C  D7F1               	goto	l682
  7389  00718E  D7F3               	goto	l683
  7390  007190                     l685:
  7391                           
  7392                           ; BSR set to: 0
  7393                           
  7394                           ; BSR set to: 0
  7395  007190  51CB               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7396                           
  7397                           ; Switch size 1, requested type "space"
  7398                           ; Number of cases is 1, Range of values is 0 to 0
  7399                           ; switch strategies available:
  7400                           ; Name         Instructions Cycles
  7401                           ; simple_byte            4     3 (average)
  7402                           ;	Chosen strategy is simple_byte
  7403  007192  0A00               	xorlw	0	; case 0
  7404                           
  7405                           ; BSR set to: 0
  7406  007194  0012               	return	
  7407  007196                     __end_of_RADIO_DIO1:
  7408                           	opt stack 0
  7409                           tosu	equ	0xFFF
  7410                           tosh	equ	0xFFE
  7411                           tosl	equ	0xFFD
  7412                           pclath	equ	0xFFA
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           intcon	equ	0xFF2
  7420                           intcon2	equ	0xFF1
  7421                           intcon3	equ	0xFF0
  7422                           postinc0	equ	0xFEE
  7423                           wreg	equ	0xFE8
  7424                           postinc1	equ	0xFE6
  7425                           postdec1	equ	0xFE5
  7426                           plusw1	equ	0xFE3
  7427                           fsr1h	equ	0xFE2
  7428                           fsr1l	equ	0xFE1
  7429                           indf2	equ	0xFDF
  7430                           postinc2	equ	0xFDE
  7431                           postdec2	equ	0xFDD
  7432                           fsr2h	equ	0xFDA
  7433                           fsr2l	equ	0xFD9
  7434                           status	equ	0xFD8
  7435                           
  7436 ;; *************** function _RADIO_RxTimeout *****************
  7437 ;; Defined at:
  7438 ;;		line 1131 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:   15
  7459 ;; This function calls:
  7460 ;;		_LORAWAN_RxTimeout
  7461 ;;		_RADIO_RegisterWrite
  7462 ;;		_RADIO_WriteMode
  7463 ;;		_SwTimerStop
  7464 ;; This function is called by:
  7465 ;;		_RADIO_DIO1
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text43
  7470  00767A                     __ptext43:
  7471                           	opt stack 0
  7472  00767A                     _RADIO_RxTimeout:
  7473                           	opt stack 13
  7474                           
  7475                           ;radio_driver_SX1276.c: 1134: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7476                           
  7477                           ;incstack = 0
  7478  00767A  0101               	movlb	1	; () banked
  7479  00767C  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7480  00767E  EC89  F03C         	call	_SwTimerStop
  7481                           
  7482                           ;radio_driver_SX1276.c: 1137: do { LATB3 = 0; } while(0);
  7483  007682  968A               	bcf	3978,3,c	;volatile
  7484                           
  7485                           ;radio_driver_SX1276.c: 1139: RADIO_RegisterWrite(0x12, 1<<(7));
  7486  007684  0E80               	movlw	128
  7487  007686  0100               	movlb	0	; () banked
  7488  007688  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7489  00768A  0E12               	movlw	18
  7490  00768C  EC5D  F03D         	call	_RADIO_RegisterWrite
  7491                           
  7492                           ;radio_driver_SX1276.c: 1141: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7493  007690  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7494  007694  0E00               	movlw	0
  7495  007696  0100               	movlb	0	; () banked
  7496  007698  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7497  00769A  0E00               	movlw	0
  7498  00769C  EC5E  F028         	call	_RADIO_WriteMode
  7499                           
  7500                           ;radio_driver_SX1276.c: 1142: RadioConfiguration.flags &= ~(1 << (1));
  7501  0076A0  0101               	movlb	1	; () banked
  7502  0076A2  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;radio_driver_SX1276.c: 1144: LORAWAN_RxTimeout ();
  7506  0076A4  EC6E  F036         	call	_LORAWAN_RxTimeout	;wreg free
  7507  0076A8  0012               	return		;funcret
  7508  0076AA                     __end_of_RADIO_RxTimeout:
  7509                           	opt stack 0
  7510                           tosu	equ	0xFFF
  7511                           tosh	equ	0xFFE
  7512                           tosl	equ	0xFFD
  7513                           pclath	equ	0xFFA
  7514                           tblptru	equ	0xFF8
  7515                           tblptrh	equ	0xFF7
  7516                           tblptrl	equ	0xFF6
  7517                           tablat	equ	0xFF5
  7518                           prodh	equ	0xFF4
  7519                           prodl	equ	0xFF3
  7520                           intcon	equ	0xFF2
  7521                           intcon2	equ	0xFF1
  7522                           intcon3	equ	0xFF0
  7523                           postinc0	equ	0xFEE
  7524                           wreg	equ	0xFE8
  7525                           postinc1	equ	0xFE6
  7526                           postdec1	equ	0xFE5
  7527                           plusw1	equ	0xFE3
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function _RADIO_FHSSChangeChannel *****************
  7538 ;; Defined at:
  7539 ;;		line 1235 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  irqFlags        1   25[BANK0 ] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;Total ram usage:        1 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:   11
  7560 ;; This function calls:
  7561 ;;		_RADIO_RegisterRead
  7562 ;;		_RADIO_RegisterWrite
  7563 ;;		_RADIO_WriteFrequency
  7564 ;; This function is called by:
  7565 ;;		_RADIO_DIO1
  7566 ;;		_RADIO_DIO2
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text44
  7571  007448                     __ptext44:
  7572                           	opt stack 0
  7573  007448                     _RADIO_FHSSChangeChannel:
  7574                           	opt stack 17
  7575                           
  7576                           ;radio_driver_SX1276.c: 1237: uint8_t irqFlags;
  7577                           ;radio_driver_SX1276.c: 1238: irqFlags = RADIO_RegisterRead(0x12);
  7578                           
  7579                           ;incstack = 0
  7580  007448  0E12               	movlw	18
  7581  00744A  EC75  F03C         	call	_RADIO_RegisterRead
  7582  00744E  0100               	movlb	0	; () banked
  7583  007450  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;radio_driver_SX1276.c: 1240: if ((0) != RadioConfiguration.frequencyHopPeriod)
  7587  007452  0101               	movlb	1	; () banked
  7588  007454  5192               	movf	(_RadioConfiguration+30)& (0+255),w,b
  7589  007456  1193               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  7590  007458  B4D8               	btfsc	status,2,c
  7591  00745A  D00F               	goto	l656
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;radio_driver_SX1276.c: 1241: {
  7595                           ;radio_driver_SX1276.c: 1242: if ((0) != RadioConfiguration.fhssNextFrequency)
  7596  00745C  51A3               	movf	(_RadioConfiguration+47)& (0+255),w,b
  7597  00745E  11A4               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  7598  007460  B4D8               	btfsc	status,2,c
  7599  007462  D00B               	goto	l656
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;radio_driver_SX1276.c: 1243: {
  7603                           ;radio_driver_SX1276.c: 1244: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  7604  007464  0E00               	movlw	0
  7605  007466  0100               	movlb	0	; () banked
  7606  007468  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  7607  00746A  0E00               	movlw	0
  7608  00746C  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  7609  00746E  0E00               	movlw	0
  7610  007470  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  7611  007472  0E00               	movlw	0
  7612  007474  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  7613  007476  ECCF  F029         	call	_RADIO_WriteFrequency	;wreg free
  7614  00747A                     l656:
  7615                           
  7616                           ;radio_driver_SX1276.c: 1245: }
  7617                           ;radio_driver_SX1276.c: 1246: }
  7618                           ;radio_driver_SX1276.c: 1249: RADIO_RegisterWrite(0x12, 1<<(1));
  7619  00747A  0E02               	movlw	2
  7620  00747C  0100               	movlb	0	; () banked
  7621  00747E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7622  007480  0E12               	movlw	18
  7623  007482  EC5D  F03D         	call	_RADIO_RegisterWrite
  7624  007486  0012               	return		;funcret
  7625  007488                     __end_of_RADIO_FHSSChangeChannel:
  7626                           	opt stack 0
  7627                           tosu	equ	0xFFF
  7628                           tosh	equ	0xFFE
  7629                           tosl	equ	0xFFD
  7630                           pclath	equ	0xFFA
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           intcon2	equ	0xFF1
  7639                           intcon3	equ	0xFF0
  7640                           postinc0	equ	0xFEE
  7641                           wreg	equ	0xFE8
  7642                           postinc1	equ	0xFE6
  7643                           postdec1	equ	0xFE5
  7644                           plusw1	equ	0xFE3
  7645                           fsr1h	equ	0xFE2
  7646                           fsr1l	equ	0xFE1
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _RADIO_DIO0 *****************
  7655 ;; Defined at:
  7656 ;;		line 1253 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;  opMode          1  152[BANK0 ] unsigned char 
  7661 ;;  dioMapping      1  151[BANK0 ] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;Total ram usage:        4 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:   17
  7678 ;; This function calls:
  7679 ;;		_RADIO_FSKPacketSent
  7680 ;;		_RADIO_FSKPayloadReady
  7681 ;;		_RADIO_RegisterRead
  7682 ;;		_RADIO_RxDone
  7683 ;;		_RADIO_TxDone
  7684 ;;		_RADIO_UnhandledInterrupt
  7685 ;; This function is called by:
  7686 ;;		_LORAWAN_Mainloop
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text45
  7691  0061F0                     __ptext45:
  7692                           	opt stack 0
  7693  0061F0                     _RADIO_DIO0:
  7694                           	opt stack 12
  7695                           
  7696                           ;radio_driver_SX1276.c: 1256: uint8_t dioMapping;
  7697                           ;radio_driver_SX1276.c: 1257: uint8_t opMode;
  7698                           ;radio_driver_SX1276.c: 1258: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  7699                           
  7700                           ;incstack = 0
  7701  0061F0  0E40               	movlw	64
  7702  0061F2  EC75  F03C         	call	_RADIO_RegisterRead
  7703  0061F6  0100               	movlb	0	; () banked
  7704  0061F8  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
  7705  0061FA  0E06               	movlw	6
  7706  0061FC  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  7707  0061FE                     u12035:
  7708  0061FE  90D8               	bcf	status,0,c
  7709  006200  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
  7710  006202  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  7711  006204  D7FC               	goto	u12035
  7712  006206  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
  7713  006208  0B03               	andlw	3
  7714  00620A  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  7715                           
  7716                           ;radio_driver_SX1276.c: 1259: opMode = RADIO_RegisterRead(0x01);
  7717  00620C  0E01               	movlw	1
  7718  00620E  EC75  F03C         	call	_RADIO_RegisterRead
  7719  006212  0100               	movlb	0	; () banked
  7720  006214  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;radio_driver_SX1276.c: 1261: if ((opMode & 0x80) != 0)
  7724  006216  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  7725  006218  D00B               	goto	l661
  7726  00621A  D02C               	goto	l667
  7727  00621C                     
  7728                           ; BSR set to: 0
  7729                           ;radio_driver_SX1276.c: 1267: RADIO_RxDone();
  7730                           
  7731                           ; BSR set to: 0
  7732  00621C  EC2F  F02B         	call	_RADIO_RxDone	;wreg free
  7733                           
  7734                           ;radio_driver_SX1276.c: 1268: break;
  7735  006220  0012               	return	
  7736  006222                     
  7737                           ;radio_driver_SX1276.c: 1270: RADIO_TxDone();
  7738  006222  ECB9  F025         	call	_RADIO_TxDone	;wreg free
  7739                           
  7740                           ;radio_driver_SX1276.c: 1271: break;
  7741  006226  0012               	return	
  7742  006228                     
  7743                           ;radio_driver_SX1276.c: 1273: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7744  006228  0E01               	movlw	1
  7745  00622A  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7746                           
  7747                           ;radio_driver_SX1276.c: 1275: }
  7748                           
  7749                           ;radio_driver_SX1276.c: 1274: break;
  7750  00622E  0012               	return	
  7751  006230                     l661:
  7752  006230  0100               	movlb	0	; () banked
  7753  006232  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  7754                           
  7755                           ; Switch size 1, requested type "space"
  7756                           ; Number of cases is 2, Range of values is 0 to 1
  7757                           ; switch strategies available:
  7758                           ; Name         Instructions Cycles
  7759                           ; simple_byte            7     4 (average)
  7760                           ;	Chosen strategy is simple_byte
  7761  006234  0A00               	xorlw	0	; case 0
  7762  006236  B4D8               	btfsc	status,2,c
  7763  006238  D7F1               	goto	l662
  7764  00623A  0A01               	xorlw	1	; case 1
  7765  00623C  B4D8               	btfsc	status,2,c
  7766  00623E  D7F1               	goto	l664
  7767  006240  D7F3               	goto	l665
  7768  006242                     
  7769                           ; BSR set to: 0
  7770                           ;radio_driver_SX1276.c: 1284: opMode &= 0x07;
  7771                           
  7772                           ; BSR set to: 0
  7773  006242  0E07               	movlw	7
  7774  006244  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  7775                           
  7776                           ;radio_driver_SX1276.c: 1285: if (MODE_TX == opMode)
  7777  006246  0E03               	movlw	3
  7778  006248  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  7779  00624A  A4D8               	btfss	status,2,c
  7780  00624C  D003               	goto	l669
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;radio_driver_SX1276.c: 1286: {
  7784                           ;radio_driver_SX1276.c: 1288: RADIO_FSKPacketSent();
  7785  00624E  EC8A  F024         	call	_RADIO_FSKPacketSent	;wreg free
  7786                           
  7787                           ;radio_driver_SX1276.c: 1289: }
  7788  006252  0012               	return	
  7789  006254                     l669:
  7790                           
  7791                           ;radio_driver_SX1276.c: 1290: else if (MODE_RXCONT == opMode)
  7792  006254  0E05               	movlw	5
  7793  006256  0100               	movlb	0	; () banked
  7794  006258  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  7795  00625A  A4D8               	btfss	status,2,c
  7796  00625C  D003               	goto	l671
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;radio_driver_SX1276.c: 1291: {
  7800                           ;radio_driver_SX1276.c: 1293: RADIO_FSKPayloadReady();
  7801  00625E  EC6D  F02E         	call	_RADIO_FSKPayloadReady	;wreg free
  7802                           
  7803                           ;radio_driver_SX1276.c: 1294: }
  7804  006262  0012               	return	
  7805  006264                     l671:
  7806                           
  7807                           ;radio_driver_SX1276.c: 1295: else
  7808                           ;radio_driver_SX1276.c: 1296: {
  7809                           ;radio_driver_SX1276.c: 1297: RADIO_UnhandledInterrupt(MODULATION_FSK);
  7810  006264  0E00               	movlw	0
  7811  006266  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7812                           
  7813                           ;radio_driver_SX1276.c: 1298: }
  7814                           ;radio_driver_SX1276.c: 1299: break;
  7815  00626A  0012               	return	
  7816  00626C                     
  7817                           ;radio_driver_SX1276.c: 1301: RADIO_UnhandledInterrupt(MODULATION_FSK);
  7818  00626C  0E00               	movlw	0
  7819  00626E  EC0B  F03B         	call	_RADIO_UnhandledInterrupt
  7820                           
  7821                           ;radio_driver_SX1276.c: 1303: }
  7822                           
  7823                           ;radio_driver_SX1276.c: 1302: break;
  7824  006272  0012               	return	
  7825  006274                     l667:
  7826  006274  0100               	movlb	0	; () banked
  7827  006276  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  7828                           
  7829                           ; Switch size 1, requested type "space"
  7830                           ; Number of cases is 1, Range of values is 0 to 0
  7831                           ; switch strategies available:
  7832                           ; Name         Instructions Cycles
  7833                           ; simple_byte            4     3 (average)
  7834                           ;	Chosen strategy is simple_byte
  7835  006278  0A00               	xorlw	0	; case 0
  7836  00627A  B4D8               	btfsc	status,2,c
  7837  00627C  D7E2               	goto	l668
  7838  00627E  D7F6               	goto	l674
  7839  006280                     __end_of_RADIO_DIO0:
  7840                           	opt stack 0
  7841                           tosu	equ	0xFFF
  7842                           tosh	equ	0xFFE
  7843                           tosl	equ	0xFFD
  7844                           pclath	equ	0xFFA
  7845                           tblptru	equ	0xFF8
  7846                           tblptrh	equ	0xFF7
  7847                           tblptrl	equ	0xFF6
  7848                           tablat	equ	0xFF5
  7849                           prodh	equ	0xFF4
  7850                           prodl	equ	0xFF3
  7851                           intcon	equ	0xFF2
  7852                           intcon2	equ	0xFF1
  7853                           intcon3	equ	0xFF0
  7854                           postinc0	equ	0xFEE
  7855                           wreg	equ	0xFE8
  7856                           postinc1	equ	0xFE6
  7857                           postdec1	equ	0xFE5
  7858                           plusw1	equ	0xFE3
  7859                           fsr1h	equ	0xFE2
  7860                           fsr1l	equ	0xFE1
  7861                           indf2	equ	0xFDF
  7862                           postinc2	equ	0xFDE
  7863                           postdec2	equ	0xFDD
  7864                           fsr2h	equ	0xFDA
  7865                           fsr2l	equ	0xFD9
  7866                           status	equ	0xFD8
  7867                           
  7868 ;; *************** function _RADIO_UnhandledInterrupt *****************
  7869 ;; Defined at:
  7870 ;;		line 1216 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  modulation      1    wreg     enum E6984
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  modulation      1    4[BANK0 ] enum E6984
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;Total ram usage:        1 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:   10
  7891 ;; This function calls:
  7892 ;;		_RADIO_RegisterWrite
  7893 ;; This function is called by:
  7894 ;;		_RADIO_DIO0
  7895 ;;		_RADIO_DIO1
  7896 ;;		_RADIO_DIO2
  7897 ;;		_RADIO_DIO3
  7898 ;;		_RADIO_DIO4
  7899 ;;		_RADIO_DIO5
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text46
  7904  007616                     __ptext46:
  7905                           	opt stack 0
  7906  007616                     _RADIO_UnhandledInterrupt:
  7907                           	opt stack 18
  7908                           
  7909                           ;incstack = 0
  7910                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  7911  007616  0100               	movlb	0	; () banked
  7912  007618  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  7913                           
  7914                           ;radio_driver_SX1276.c: 1221: if (MODULATION_LORA == modulation)
  7915  00761A  0100               	movlb	0	; () banked
  7916  00761C  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  7917  00761E  A4D8               	btfss	status,2,c
  7918  007620  D006               	goto	l650
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;radio_driver_SX1276.c: 1222: {
  7922                           ;radio_driver_SX1276.c: 1223: RADIO_RegisterWrite(0x12, 0xFF);
  7923  007622  0EFF               	movlw	255
  7924  007624  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7925  007626  0E12               	movlw	18
  7926  007628  EC5D  F03D         	call	_RADIO_RegisterWrite
  7927                           
  7928                           ;radio_driver_SX1276.c: 1224: }
  7929  00762C  0012               	return	
  7930  00762E                     l650:
  7931                           
  7932                           ;radio_driver_SX1276.c: 1225: else
  7933                           ;radio_driver_SX1276.c: 1226: {
  7934                           ;radio_driver_SX1276.c: 1229: RADIO_RegisterWrite(0x3E, 0xFF);
  7935  00762E  0EFF               	movlw	255
  7936  007630  0100               	movlb	0	; () banked
  7937  007632  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7938  007634  0E3E               	movlw	62
  7939  007636  EC5D  F03D         	call	_RADIO_RegisterWrite
  7940                           
  7941                           ;radio_driver_SX1276.c: 1230: RADIO_RegisterWrite(0x3F, 0xFF);
  7942  00763A  0EFF               	movlw	255
  7943  00763C  0100               	movlb	0	; () banked
  7944  00763E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7945  007640  0E3F               	movlw	63
  7946  007642  EC5D  F03D         	call	_RADIO_RegisterWrite
  7947  007646  0012               	return	
  7948  007648                     __end_of_RADIO_UnhandledInterrupt:
  7949                           	opt stack 0
  7950                           tosu	equ	0xFFF
  7951                           tosh	equ	0xFFE
  7952                           tosl	equ	0xFFD
  7953                           pclath	equ	0xFFA
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           intcon	equ	0xFF2
  7961                           intcon2	equ	0xFF1
  7962                           intcon3	equ	0xFF0
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           postinc1	equ	0xFE6
  7966                           postdec1	equ	0xFE5
  7967                           plusw1	equ	0xFE3
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _RADIO_TxDone *****************
  7978 ;; Defined at:
  7979 ;;		line 1147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  timeOnAir       4   74[BANK0 ] unsigned long 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;Total ram usage:       12 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:   12
  8000 ;; This function calls:
  8001 ;;		_LORAWAN_TxDone
  8002 ;;		_RADIO_RegisterWrite
  8003 ;;		_RADIO_WriteMode
  8004 ;;		_SwTimerReadValue
  8005 ;;		_SwTimerStop
  8006 ;;		___lmul
  8007 ;; This function is called by:
  8008 ;;		_RADIO_DIO0
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text47
  8013  004B72                     __ptext47:
  8014                           	opt stack 0
  8015  004B72                     _RADIO_TxDone:
  8016                           	opt stack 16
  8017                           
  8018                           ;radio_driver_SX1276.c: 1149: uint32_t timeOnAir;
  8019                           ;radio_driver_SX1276.c: 1151: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8020                           
  8021                           ;incstack = 0
  8022  004B72  0101               	movlb	1	; () banked
  8023  004B74  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8024  004B76  EC89  F03C         	call	_SwTimerStop
  8025                           
  8026                           ;radio_driver_SX1276.c: 1154: do { LATB3 = 0; } while(0);
  8027  004B7A  968A               	bcf	3978,3,c	;volatile
  8028                           
  8029                           ;radio_driver_SX1276.c: 1156: RADIO_RegisterWrite(0x12, 1<<(3));
  8030  004B7C  0E08               	movlw	8
  8031  004B7E  0100               	movlb	0	; () banked
  8032  004B80  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8033  004B82  0E12               	movlw	18
  8034  004B84  EC5D  F03D         	call	_RADIO_RegisterWrite
  8035                           
  8036                           ;radio_driver_SX1276.c: 1157: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8037  004B88  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8038  004B8C  0E00               	movlw	0
  8039  004B8E  0100               	movlb	0	; () banked
  8040  004B90  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8041  004B92  0E00               	movlw	0
  8042  004B94  EC5E  F028         	call	_RADIO_WriteMode
  8043                           
  8044                           ;radio_driver_SX1276.c: 1158: RadioConfiguration.flags &= ~(1 << (0));
  8045  004B98  0101               	movlb	1	; () banked
  8046  004B9A  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8047                           
  8048                           ; BSR set to: 1
  8049                           ;radio_driver_SX1276.c: 1159: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8050  004B9C  B997               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8051  004B9E  0012               	return	
  8052                           
  8053                           ; BSR set to: 1
  8054                           ;radio_driver_SX1276.c: 1160: {
  8055                           ;radio_driver_SX1276.c: 1161: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8056  004BA0  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8057  004BA2  EC44  F03A         	call	_SwTimerReadValue
  8058  004BA6  0100               	movlb	0	; () banked
  8059  004BA8  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8060  004BAA  E108               	bnz	u11340
  8061  004BAC  0E1F               	movlw	31
  8062  004BAE  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
  8063  004BB0  0EAC               	movlw	172
  8064  004BB2  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8065  004BB4  0EDF               	movlw	223
  8066  004BB6  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8067  004BB8  A0D8               	btfss	status,0,c
  8068  004BBA  D021               	goto	l623
  8069  004BBC                     u11340:
  8070                           
  8071                           ; BSR set to: 0
  8072  004BBC  0101               	movlb	1	; () banked
  8073  004BBE  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8074  004BC0  EC44  F03A         	call	_SwTimerReadValue
  8075  004BC4  0E0D               	movlw	13
  8076  004BC6  D006               	goto	u11350
  8077  004BC8                     u11355:
  8078  004BC8  0100               	movlb	0	; () banked
  8079  004BCA  90D8               	bcf	status,0,c
  8080  004BCC  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  8081  004BCE  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  8082  004BD0  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  8083  004BD2  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
  8084  004BD4                     u11350:
  8085  004BD4  2EE8               	decfsz	wreg,f,c
  8086  004BD6  D7F8               	goto	u11355
  8087  004BD8  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8088  004BDC  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8089  004BE0  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8090  004BE4  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8091  004BE8  0E7D               	movlw	125
  8092  004BEA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8093  004BEC  0E00               	movlw	0
  8094  004BEE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8095  004BF0  0E00               	movlw	0
  8096  004BF2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8097  004BF4  0E00               	movlw	0
  8098  004BF6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8099  004BF8  EC55  F037         	call	___lmul	;wreg free
  8100  004BFC  D021               	goto	L4
  8101  004BFE                     l623:
  8102  004BFE  0101               	movlb	1	; () banked
  8103  004C00  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8104  004C02  EC44  F03A         	call	_SwTimerReadValue
  8105  004C06  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8106  004C0A  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8107  004C0E  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8108  004C12  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8109  004C16  0E7D               	movlw	125
  8110  004C18  0100               	movlb	0	; () banked
  8111  004C1A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8112  004C1C  0E00               	movlw	0
  8113  004C1E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8114  004C20  0E00               	movlw	0
  8115  004C22  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8116  004C24  0E00               	movlw	0
  8117  004C26  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8118  004C28  EC55  F037         	call	___lmul	;wreg free
  8119  004C2C  0E0D               	movlw	13
  8120  004C2E  D006               	goto	u11360
  8121  004C30                     u11365:
  8122  004C30  0100               	movlb	0	; () banked
  8123  004C32  90D8               	bcf	status,0,c
  8124  004C34  339D               	rrcf	(?___lmul+3)& (0+255),f,b
  8125  004C36  339C               	rrcf	(?___lmul+2)& (0+255),f,b
  8126  004C38  339B               	rrcf	(?___lmul+1)& (0+255),f,b
  8127  004C3A  339A               	rrcf	?___lmul& (0+255),f,b
  8128  004C3C                     u11360:
  8129  004C3C  2EE8               	decfsz	wreg,f,c
  8130  004C3E  D7F8               	goto	u11365
  8131  004C40                     L4:
  8132  004C40  C09A  F0AE         	movff	?___lmul,_RADIO_TxDone$906
  8133  004C44  C09B  F0AF         	movff	?___lmul+1,_RADIO_TxDone$906+1
  8134  004C48  C09C  F0B0         	movff	?___lmul+2,_RADIO_TxDone$906+2
  8135  004C4C  C09D  F0B1         	movff	?___lmul+3,_RADIO_TxDone$906+3
  8136                           
  8137                           ; BSR set to: 0
  8138  004C50  C0AE  F0A6         	movff	_RADIO_TxDone$906,??_RADIO_TxDone
  8139  004C54  C0AF  F0A7         	movff	_RADIO_TxDone$906+1,??_RADIO_TxDone+1
  8140  004C58  C0B0  F0A8         	movff	_RADIO_TxDone$906+2,??_RADIO_TxDone+2
  8141  004C5C  C0B1  F0A9         	movff	_RADIO_TxDone$906+3,??_RADIO_TxDone+3
  8142  004C60  0100               	movlb	0	; () banked
  8143  004C62  1FA6               	comf	??_RADIO_TxDone& (0+255),f,b
  8144  004C64  1FA7               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  8145  004C66  1FA8               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  8146  004C68  1FA9               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  8147  004C6A  2BA6               	incf	??_RADIO_TxDone& (0+255),f,b
  8148  004C6C  0E00               	movlw	0
  8149  004C6E  23A7               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  8150  004C70  23A8               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  8151  004C72  23A9               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  8152  004C74  0E20               	movlw	32
  8153  004C76  25A6               	addwf	??_RADIO_TxDone& (0+255),w,b
  8154  004C78  6FAA               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  8155  004C7A  0E4E               	movlw	78
  8156  004C7C  21A7               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  8157  004C7E  6FAB               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  8158  004C80  0E00               	movlw	0
  8159  004C82  21A8               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  8160  004C84  6FAC               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  8161  004C86  0E00               	movlw	0
  8162  004C88  21A9               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  8163  004C8A  6FAD               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;radio_driver_SX1276.c: 1162: LORAWAN_TxDone((uint16_t)timeOnAir);
  8167  004C8C  C0AA  F09A         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  8168  004C90  C0AB  F09B         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  8169  004C94  EC61  F014         	call	_LORAWAN_TxDone	;wreg free
  8170  004C98  0012               	return	
  8171  004C9A                     __end_of_RADIO_TxDone:
  8172                           	opt stack 0
  8173                           tosu	equ	0xFFF
  8174                           tosh	equ	0xFFE
  8175                           tosl	equ	0xFFD
  8176                           pclath	equ	0xFFA
  8177                           tblptru	equ	0xFF8
  8178                           tblptrh	equ	0xFF7
  8179                           tblptrl	equ	0xFF6
  8180                           tablat	equ	0xFF5
  8181                           prodh	equ	0xFF4
  8182                           prodl	equ	0xFF3
  8183                           intcon	equ	0xFF2
  8184                           intcon2	equ	0xFF1
  8185                           intcon3	equ	0xFF0
  8186                           postinc0	equ	0xFEE
  8187                           wreg	equ	0xFE8
  8188                           postinc1	equ	0xFE6
  8189                           postdec1	equ	0xFE5
  8190                           plusw1	equ	0xFE3
  8191                           fsr1h	equ	0xFE2
  8192                           fsr1l	equ	0xFE1
  8193                           indf2	equ	0xFDF
  8194                           postinc2	equ	0xFDE
  8195                           postdec2	equ	0xFDD
  8196                           fsr2h	equ	0xFDA
  8197                           fsr2l	equ	0xFD9
  8198                           status	equ	0xFD8
  8199                           
  8200 ;; *************** function _RADIO_RxDone *****************
  8201 ;; Defined at:
  8202 ;;		line 1020 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  i               1  148[BANK0 ] unsigned char 
  8207 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;Total ram usage:        2 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:   16
  8224 ;; This function calls:
  8225 ;;		_HALSPICSAssert
  8226 ;;		_HALSPICSDeassert
  8227 ;;		_HALSPISend
  8228 ;;		_LORAWAN_RxDone
  8229 ;;		_RADIO_RegisterRead
  8230 ;;		_RADIO_RegisterWrite
  8231 ;;		_RADIO_WriteMode
  8232 ;;		_SwTimerStop
  8233 ;;		___abdiv
  8234 ;; This function is called by:
  8235 ;;		_RADIO_DIO0
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text48
  8240  00565E                     __ptext48:
  8241                           	opt stack 0
  8242  00565E                     _RADIO_RxDone:
  8243                           	opt stack 12
  8244                           
  8245                           ;radio_driver_SX1276.c: 1022: uint8_t i, irqFlags;
  8246                           ;radio_driver_SX1276.c: 1023: irqFlags = RADIO_RegisterRead(0x12);
  8247                           
  8248                           ;incstack = 0
  8249  00565E  0E12               	movlw	18
  8250  005660  EC75  F03C         	call	_RADIO_RegisterRead
  8251  005664  0100               	movlb	0	; () banked
  8252  005666  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  8253                           
  8254                           ;radio_driver_SX1276.c: 1026: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  8255  005668  0E70               	movlw	112
  8256  00566A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8257  00566C  0E12               	movlw	18
  8258  00566E  EC5D  F03D         	call	_RADIO_RegisterWrite
  8259                           
  8260                           ;radio_driver_SX1276.c: 1027: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(
      +                          4)))))
  8261  005672  0100               	movlb	0	; () banked
  8262  005674  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  8263  005676  0B50               	andlw	80
  8264  005678  0A50               	xorlw	80
  8265  00567A  A4D8               	btfss	status,2,c
  8266  00567C  0012               	return	
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;radio_driver_SX1276.c: 1028: {
  8270                           ;radio_driver_SX1276.c: 1030: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8271  00567E  0101               	movlb	1	; () banked
  8272  005680  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8273  005682  EC89  F03C         	call	_SwTimerStop
  8274                           
  8275                           ;radio_driver_SX1276.c: 1033: do { LATB3 = 0; } while(0);
  8276  005686  968A               	bcf	3978,3,c	;volatile
  8277                           
  8278                           ;radio_driver_SX1276.c: 1036: i = RADIO_RegisterRead(0x1C);
  8279  005688  0E1C               	movlw	28
  8280  00568A  EC75  F03C         	call	_RADIO_RegisterRead
  8281  00568E  0100               	movlb	0	; () banked
  8282  005690  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;radio_driver_SX1276.c: 1037: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & 
      +                          (1<<(5)))) && (0 != (i & (1<<(6))))))
  8286  005692  0101               	movlb	1	; () banked
  8287  005694  5190               	movf	(_RadioConfiguration+28)& (0+255),w,b
  8288  005696  B4D8               	btfsc	status,2,c
  8289  005698  D004               	goto	u11260
  8290                           
  8291                           ; BSR set to: 1
  8292  00569A  0100               	movlb	0	; () banked
  8293  00569C  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  8294                           
  8295                           ; BSR set to: 0
  8296  00569E  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
  8297  0056A0  D03C               	goto	l589
  8298  0056A2                     u11260:
  8299                           
  8300                           ;radio_driver_SX1276.c: 1038: {
  8301                           ;radio_driver_SX1276.c: 1046: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13
      +                          );
  8302                           
  8303                           ; BSR set to: 0
  8304  0056A2  0E13               	movlw	19
  8305  0056A4  EC75  F03C         	call	_RADIO_RegisterRead
  8306  0056A8  0101               	movlb	1	; () banked
  8307  0056AA  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
  8308                           
  8309                           ;radio_driver_SX1276.c: 1047: RADIO_RegisterWrite(0x0D, 0x00);
  8310  0056AC  0E00               	movlw	0
  8311  0056AE  0100               	movlb	0	; () banked
  8312  0056B0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8313  0056B2  0E0D               	movlw	13
  8314  0056B4  EC5D  F03D         	call	_RADIO_RegisterWrite
  8315                           
  8316                           ;radio_driver_SX1276.c: 1049: HALSPICSAssert();
  8317  0056B8  EC4A  F03F         	call	_HALSPICSAssert	;wreg free
  8318                           
  8319                           ;radio_driver_SX1276.c: 1050: HALSPISend(0x00);
  8320  0056BC  0E00               	movlw	0
  8321  0056BE  ECC4  F03E         	call	_HALSPISend
  8322                           
  8323                           ;radio_driver_SX1276.c: 1051: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8324  0056C2  0E00               	movlw	0
  8325  0056C4  0100               	movlb	0	; () banked
  8326  0056C6  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8327  0056C8  D00F               	goto	l592
  8328  0056CA                     
  8329                           ; BSR set to: 0
  8330                           ;radio_driver_SX1276.c: 1052: {
  8331                           ;radio_driver_SX1276.c: 1053: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8332                           
  8333                           ; BSR set to: 0
  8334  0056CA  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
  8335  0056CC  0D01               	mullw	1
  8336  0056CE  50F3               	movf	prodl,w,c
  8337  0056D0  0101               	movlb	1	; () banked
  8338  0056D2  2599               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8339  0056D4  6ED9               	movwf	fsr2l,c
  8340  0056D6  50F4               	movf	prodh,w,c
  8341  0056D8  219A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8342  0056DA  6EDA               	movwf	fsr2h,c
  8343  0056DC  0EFF               	movlw	255
  8344  0056DE  ECC4  F03E         	call	_HALSPISend
  8345  0056E2  6EDF               	movwf	indf2,c
  8346  0056E4  0100               	movlb	0	; () banked
  8347  0056E6  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
  8348  0056E8                     l592:
  8349                           
  8350                           ; BSR set to: 0
  8351                           
  8352                           ; BSR set to: 0
  8353  0056E8  0101               	movlb	1	; () banked
  8354  0056EA  5198               	movf	(_RadioConfiguration+36)& (0+255),w,b
  8355  0056EC  0100               	movlb	0	; () banked
  8356  0056EE  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
  8357  0056F0  A0D8               	btfss	status,0,c
  8358  0056F2  D7EB               	goto	l593
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;radio_driver_SX1276.c: 1054: }
  8362                           ;radio_driver_SX1276.c: 1055: HALSPICSDeassert();
  8363                           
  8364                           ; BSR set to: 0
  8365  0056F4  EC48  F03F         	call	_HALSPICSDeassert	;wreg free
  8366                           
  8367                           ;radio_driver_SX1276.c: 1056: RadioConfiguration.flags |= (1 << (2));
  8368  0056F8  0101               	movlb	1	; () banked
  8369  0056FA  8597               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8370                           
  8371                           ; BSR set to: 1
  8372                           ;radio_driver_SX1276.c: 1058: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  8373  0056FC  0E19               	movlw	25
  8374  0056FE  EC75  F03C         	call	_RADIO_RegisterRead
  8375  005702  0101               	movlb	1	; () banked
  8376  005704  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;radio_driver_SX1276.c: 1059: RadioConfiguration.packetSNR /= (int8_t)4;
  8380  005706  0E04               	movlw	4
  8381  005708  0100               	movlb	0	; () banked
  8382  00570A  6F60               	movwf	___abdiv@divisor& (0+255),b
  8383  00570C  0101               	movlb	1	; () banked
  8384  00570E  51A6               	movf	(_RadioConfiguration+50)& (0+255),w,b
  8385  005710  EC49  F035         	call	___abdiv
  8386  005714  0101               	movlb	1	; () banked
  8387  005716  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
  8388                           
  8389                           ;radio_driver_SX1276.c: 1060: }
  8390  005718  D002               	goto	l595
  8391  00571A                     l589:
  8392                           
  8393                           ;radio_driver_SX1276.c: 1061: else
  8394                           ;radio_driver_SX1276.c: 1062: {
  8395                           ;radio_driver_SX1276.c: 1064: RadioConfiguration.flags |= (1 << (3));
  8396                           
  8397                           ; BSR set to: 1
  8398  00571A  0101               	movlb	1	; () banked
  8399  00571C  8797               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  8400  00571E                     l595:
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;radio_driver_SX1276.c: 1065: }
  8404                           ;radio_driver_SX1276.c: 1066: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8405                           
  8406                           ; BSR set to: 1
  8407  00571E  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8408  005722  0E00               	movlw	0
  8409  005724  0100               	movlb	0	; () banked
  8410  005726  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8411  005728  0E00               	movlw	0
  8412  00572A  EC5E  F028         	call	_RADIO_WriteMode
  8413                           
  8414                           ;radio_driver_SX1276.c: 1067: RadioConfiguration.flags &= ~(1 << (1));
  8415  00572E  0101               	movlb	1	; () banked
  8416  005730  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8417                           
  8418                           ; BSR set to: 1
  8419                           ;radio_driver_SX1276.c: 1068: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  8420  005732  C199  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  8421  005736  C19A  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  8422  00573A  C198  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  8423  00573E  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  8424  005742  0012               	return	
  8425  005744                     __end_of_RADIO_RxDone:
  8426                           	opt stack 0
  8427                           tosu	equ	0xFFF
  8428                           tosh	equ	0xFFE
  8429                           tosl	equ	0xFFD
  8430                           pclath	equ	0xFFA
  8431                           tblptru	equ	0xFF8
  8432                           tblptrh	equ	0xFF7
  8433                           tblptrl	equ	0xFF6
  8434                           tablat	equ	0xFF5
  8435                           prodh	equ	0xFF4
  8436                           prodl	equ	0xFF3
  8437                           intcon	equ	0xFF2
  8438                           intcon2	equ	0xFF1
  8439                           intcon3	equ	0xFF0
  8440                           postinc0	equ	0xFEE
  8441                           wreg	equ	0xFE8
  8442                           postinc1	equ	0xFE6
  8443                           postdec1	equ	0xFE5
  8444                           plusw1	equ	0xFE3
  8445                           fsr1h	equ	0xFE2
  8446                           fsr1l	equ	0xFE1
  8447                           indf2	equ	0xFDF
  8448                           postinc2	equ	0xFDE
  8449                           postdec2	equ	0xFDD
  8450                           fsr2h	equ	0xFDA
  8451                           fsr2l	equ	0xFD9
  8452                           status	equ	0xFD8
  8453                           
  8454 ;; *************** function ___abdiv *****************
  8455 ;; Defined at:
  8456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  dividend        1    wreg     char 
  8459 ;;  divisor         1    0[BANK0 ] char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  dividend        1    6[BANK0 ] char 
  8462 ;;  quotient        1    5[BANK0 ] char 
  8463 ;;  sign            1    4[BANK0 ] unsigned char 
  8464 ;;  counter         1    3[BANK0 ] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      char 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8474 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;Total ram usage:        7 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    7
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_RADIO_RxDone
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text49
  8489  006A92                     __ptext49:
  8490                           	opt stack 0
  8491  006A92                     ___abdiv:
  8492                           	opt stack 20
  8493                           
  8494                           ;incstack = 0
  8495                           ;___abdiv@dividend stored from wreg
  8496  006A92  0100               	movlb	0	; () banked
  8497  006A94  6F66               	movwf	___abdiv@dividend& (0+255),b
  8498  006A96  0E00               	movlw	0
  8499  006A98  0100               	movlb	0	; () banked
  8500  006A9A  6F64               	movwf	___abdiv@sign& (0+255),b
  8501                           
  8502                           ; BSR set to: 0
  8503  006A9C  AF60               	btfss	___abdiv@divisor& (0+255),7,b
  8504  006A9E  D003               	goto	l2520
  8505                           
  8506                           ; BSR set to: 0
  8507  006AA0  6D60               	negf	___abdiv@divisor& (0+255),b
  8508                           
  8509                           ; BSR set to: 0
  8510  006AA2  0E01               	movlw	1
  8511  006AA4  6F64               	movwf	___abdiv@sign& (0+255),b
  8512  006AA6                     l2520:
  8513                           
  8514                           ; BSR set to: 0
  8515                           
  8516                           ; BSR set to: 0
  8517  006AA6  AF66               	btfss	___abdiv@dividend& (0+255),7,b
  8518  006AA8  D003               	goto	l2521
  8519                           
  8520                           ; BSR set to: 0
  8521  006AAA  6D66               	negf	___abdiv@dividend& (0+255),b
  8522                           
  8523                           ; BSR set to: 0
  8524  006AAC  0E01               	movlw	1
  8525  006AAE  1B64               	xorwf	___abdiv@sign& (0+255),f,b
  8526  006AB0                     l2521:
  8527                           
  8528                           ; BSR set to: 0
  8529                           
  8530                           ; BSR set to: 0
  8531  006AB0  0E00               	movlw	0
  8532  006AB2  6F65               	movwf	___abdiv@quotient& (0+255),b
  8533                           
  8534                           ; BSR set to: 0
  8535  006AB4  5160               	movf	___abdiv@divisor& (0+255),w,b
  8536  006AB6  B4D8               	btfsc	status,2,c
  8537  006AB8  D01A               	goto	l2528
  8538                           
  8539                           ; BSR set to: 0
  8540  006ABA  0E01               	movlw	1
  8541  006ABC  6F63               	movwf	___abdiv@counter& (0+255),b
  8542  006ABE  D003               	goto	l2523
  8543  006AC0                     
  8544                           ; BSR set to: 0
  8545                           
  8546                           ; BSR set to: 0
  8547  006AC0  90D8               	bcf	status,0,c
  8548  006AC2  3760               	rlcf	___abdiv@divisor& (0+255),f,b
  8549                           
  8550                           ; BSR set to: 0
  8551  006AC4  2B63               	incf	___abdiv@counter& (0+255),f,b
  8552  006AC6                     l2523:
  8553                           
  8554                           ; BSR set to: 0
  8555                           
  8556                           ; BSR set to: 0
  8557  006AC6  C060  F061         	movff	___abdiv@divisor,??___abdiv
  8558  006ACA  6B62               	clrf	(??___abdiv+1)& (0+255),b
  8559  006ACC  BF61               	btfsc	??___abdiv& (0+255),7,b
  8560  006ACE  0762               	decf	(??___abdiv+1)& (0+255),f,b
  8561  006AD0  AF61               	btfss	??___abdiv& (0+255),7,b
  8562  006AD2  D7F6               	goto	l2524
  8563  006AD4                     u11110:
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ; BSR set to: 0
  8568                           
  8569                           ; BSR set to: 0
  8570  006AD4  90D8               	bcf	status,0,c
  8571  006AD6  3765               	rlcf	___abdiv@quotient& (0+255),f,b
  8572  006AD8  5160               	movf	___abdiv@divisor& (0+255),w,b
  8573  006ADA  5D66               	subwf	___abdiv@dividend& (0+255),w,b
  8574  006ADC  A0D8               	btfss	status,0,c
  8575  006ADE  D003               	goto	l2527
  8576                           
  8577                           ; BSR set to: 0
  8578  006AE0  5160               	movf	___abdiv@divisor& (0+255),w,b
  8579  006AE2  5F66               	subwf	___abdiv@dividend& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 0
  8582  006AE4  8165               	bsf	___abdiv@quotient& (0+255),0,b
  8583  006AE6                     l2527:
  8584                           
  8585                           ; BSR set to: 0
  8586                           
  8587                           ; BSR set to: 0
  8588  006AE6  90D8               	bcf	status,0,c
  8589  006AE8  3360               	rrcf	___abdiv@divisor& (0+255),f,b
  8590                           
  8591                           ; BSR set to: 0
  8592  006AEA  2F63               	decfsz	___abdiv@counter& (0+255),f,b
  8593  006AEC  D7F3               	goto	u11110
  8594  006AEE                     l2528:
  8595                           
  8596                           ; BSR set to: 0
  8597                           
  8598                           ; BSR set to: 0
  8599                           
  8600                           ; BSR set to: 0
  8601  006AEE  5164               	movf	___abdiv@sign& (0+255),w,b
  8602  006AF0  A4D8               	btfss	status,2,c
  8603                           
  8604                           ; BSR set to: 0
  8605  006AF2  6D65               	negf	___abdiv@quotient& (0+255),b
  8606                           
  8607                           ; BSR set to: 0
  8608                           
  8609                           ; BSR set to: 0
  8610  006AF4  5165               	movf	___abdiv@quotient& (0+255),w,b
  8611  006AF6  0012               	return	
  8612  006AF8                     __end_of___abdiv:
  8613                           	opt stack 0
  8614                           tosu	equ	0xFFF
  8615                           tosh	equ	0xFFE
  8616                           tosl	equ	0xFFD
  8617                           pclath	equ	0xFFA
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           intcon	equ	0xFF2
  8625                           intcon2	equ	0xFF1
  8626                           intcon3	equ	0xFF0
  8627                           postinc0	equ	0xFEE
  8628                           wreg	equ	0xFE8
  8629                           postinc1	equ	0xFE6
  8630                           postdec1	equ	0xFE5
  8631                           plusw1	equ	0xFE3
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           indf2	equ	0xFDF
  8635                           postinc2	equ	0xFDE
  8636                           postdec2	equ	0xFDD
  8637                           fsr2h	equ	0xFDA
  8638                           fsr2l	equ	0xFD9
  8639                           status	equ	0xFD8
  8640                           
  8641 ;; *************** function _RADIO_FSKPayloadReady *****************
  8642 ;; Defined at:
  8643 ;;		line 1072 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  i               1  148[BANK0 ] unsigned char 
  8648 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;Total ram usage:        2 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:   16
  8665 ;; This function calls:
  8666 ;;		_HALSPICSAssert
  8667 ;;		_HALSPICSDeassert
  8668 ;;		_HALSPISend
  8669 ;;		_LORAWAN_RxDone
  8670 ;;		_LORAWAN_RxTimeout
  8671 ;;		_RADIO_RegisterRead
  8672 ;;		_RADIO_WriteMode
  8673 ;;		_SwTimerStop
  8674 ;; This function is called by:
  8675 ;;		_RADIO_DIO0
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text50
  8680  005CDA                     __ptext50:
  8681                           	opt stack 0
  8682  005CDA                     _RADIO_FSKPayloadReady:
  8683                           	opt stack 12
  8684                           
  8685                           ;radio_driver_SX1276.c: 1074: uint8_t irqFlags;
  8686                           ;radio_driver_SX1276.c: 1075: uint8_t i;
  8687                           ;radio_driver_SX1276.c: 1077: irqFlags = RADIO_RegisterRead(0x3F);
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;incstack = 0
  8691  005CDA  0E3F               	movlw	63
  8692  005CDC  EC75  F03C         	call	_RADIO_RegisterRead
  8693  005CE0  0100               	movlb	0	; () banked
  8694  005CE2  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;radio_driver_SX1276.c: 1078: if ((1<<(2)) == (irqFlags & (1<<(2))))
  8698  005CE4  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  8699  005CE6  0012               	return	
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;radio_driver_SX1276.c: 1079: {
  8703                           ;radio_driver_SX1276.c: 1084: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8704  005CE8  0101               	movlb	1	; () banked
  8705  005CEA  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8706  005CEC  EC89  F03C         	call	_SwTimerStop
  8707                           
  8708                           ;radio_driver_SX1276.c: 1085: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  8709  005CF0  0101               	movlb	1	; () banked
  8710  005CF2  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
  8711  005CF4  EC89  F03C         	call	_SwTimerStop
  8712                           
  8713                           ;radio_driver_SX1276.c: 1088: do { LATB3 = 0; } while(0);
  8714  005CF8  968A               	bcf	3978,3,c	;volatile
  8715                           
  8716                           ;radio_driver_SX1276.c: 1090: HALSPICSAssert();
  8717  005CFA  EC4A  F03F         	call	_HALSPICSAssert	;wreg free
  8718                           
  8719                           ;radio_driver_SX1276.c: 1091: HALSPISend(0x00);
  8720  005CFE  0E00               	movlw	0
  8721  005D00  ECC4  F03E         	call	_HALSPISend
  8722                           
  8723                           ;radio_driver_SX1276.c: 1092: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  8724  005D04  0EFF               	movlw	255
  8725  005D06  ECC4  F03E         	call	_HALSPISend
  8726  005D0A  0101               	movlb	1	; () banked
  8727  005D0C  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
  8728                           
  8729                           ; BSR set to: 1
  8730                           ;radio_driver_SX1276.c: 1093: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8731  005D0E  0E00               	movlw	0
  8732  005D10  0100               	movlb	0	; () banked
  8733  005D12  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  8734  005D14  D00F               	goto	l602
  8735  005D16                     
  8736                           ; BSR set to: 0
  8737                           ;radio_driver_SX1276.c: 1094: {
  8738                           ;radio_driver_SX1276.c: 1095: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8739                           
  8740                           ; BSR set to: 0
  8741  005D16  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  8742  005D18  0D01               	mullw	1
  8743  005D1A  50F3               	movf	prodl,w,c
  8744  005D1C  0101               	movlb	1	; () banked
  8745  005D1E  2599               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8746  005D20  6ED9               	movwf	fsr2l,c
  8747  005D22  50F4               	movf	prodh,w,c
  8748  005D24  219A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8749  005D26  6EDA               	movwf	fsr2h,c
  8750  005D28  0EFF               	movlw	255
  8751  005D2A  ECC4  F03E         	call	_HALSPISend
  8752  005D2E  6EDF               	movwf	indf2,c
  8753  005D30  0100               	movlb	0	; () banked
  8754  005D32  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  8755  005D34                     l602:
  8756                           
  8757                           ; BSR set to: 0
  8758                           
  8759                           ; BSR set to: 0
  8760  005D34  0101               	movlb	1	; () banked
  8761  005D36  5198               	movf	(_RadioConfiguration+36)& (0+255),w,b
  8762  005D38  0100               	movlb	0	; () banked
  8763  005D3A  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  8764  005D3C  A0D8               	btfss	status,0,c
  8765  005D3E  D7EB               	goto	l603
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;radio_driver_SX1276.c: 1096: }
  8769                           ;radio_driver_SX1276.c: 1097: HALSPICSDeassert();
  8770                           
  8771                           ; BSR set to: 0
  8772  005D40  EC48  F03F         	call	_HALSPICSDeassert	;wreg free
  8773                           
  8774                           ;radio_driver_SX1276.c: 1099: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8775  005D44  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8776  005D48  0E00               	movlw	0
  8777  005D4A  0100               	movlb	0	; () banked
  8778  005D4C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8779  005D4E  0E00               	movlw	0
  8780  005D50  EC5E  F028         	call	_RADIO_WriteMode
  8781                           
  8782                           ;radio_driver_SX1276.c: 1100: RadioConfiguration.flags &= ~(1 << (1));
  8783  005D54  0101               	movlb	1	; () banked
  8784  005D56  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8785                           
  8786                           ; BSR set to: 1
  8787                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.packetSNR = -128;
  8788  005D58  0E80               	movlw	128
  8789  005D5A  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
  8790                           
  8791                           ; BSR set to: 1
  8792                           ;radio_driver_SX1276.c: 1104: if (1 == RadioConfiguration.crcOn)
  8793  005D5C  0590               	decf	(_RadioConfiguration+28)& (0+255),w,b
  8794  005D5E  A4D8               	btfss	status,2,c
  8795  005D60  D008               	goto	l605
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;radio_driver_SX1276.c: 1105: {
  8799                           ;radio_driver_SX1276.c: 1106: if ((1<<(1)) == (irqFlags & (1<<(1))))
  8800  005D62  0100               	movlb	0	; () banked
  8801  005D64  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  8802  005D66  D002               	goto	l606
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;radio_driver_SX1276.c: 1107: {
  8806                           ;radio_driver_SX1276.c: 1108: RadioConfiguration.flags |= (1 << (2));
  8807  005D68  0101               	movlb	1	; () banked
  8808  005D6A  D003               	goto	l605
  8809  005D6C                     l606:
  8810                           
  8811                           ;radio_driver_SX1276.c: 1110: else
  8812                           ;radio_driver_SX1276.c: 1111: {
  8813                           ;radio_driver_SX1276.c: 1112: RadioConfiguration.flags &= ~(1 << (2));
  8814                           
  8815                           ; BSR set to: 1
  8816  005D6C  0101               	movlb	1	; () banked
  8817  005D6E  9597               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  8818                           
  8819                           ; BSR set to: 1
  8820                           ;radio_driver_SX1276.c: 1113: }
  8821                           ;radio_driver_SX1276.c: 1114: }
  8822  005D70  D001               	goto	l608
  8823  005D72                     l605:
  8824                           
  8825                           ; BSR set to: 1
  8826                           ;radio_driver_SX1276.c: 1115: else
  8827                           ;radio_driver_SX1276.c: 1116: {
  8828                           ;radio_driver_SX1276.c: 1117: RadioConfiguration.flags |= (1 << (2));
  8829                           
  8830                           ; BSR set to: 1
  8831  005D72  8597               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8832  005D74                     l608:
  8833                           
  8834                           ; BSR set to: 1
  8835                           ;radio_driver_SX1276.c: 1118: }
  8836                           ;radio_driver_SX1276.c: 1120: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  8837                           
  8838                           ; BSR set to: 1
  8839  005D74  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  8840  005D76  D009               	goto	l609
  8841                           
  8842                           ; BSR set to: 1
  8843                           ;radio_driver_SX1276.c: 1121: {
  8844                           ;radio_driver_SX1276.c: 1122: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  8845  005D78  C199  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  8846  005D7C  C19A  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  8847  005D80  C198  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  8848  005D84  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  8849                           
  8850                           ;radio_driver_SX1276.c: 1123: }
  8851  005D88  0012               	return	
  8852  005D8A                     l609:
  8853                           
  8854                           ;radio_driver_SX1276.c: 1124: else
  8855                           ;radio_driver_SX1276.c: 1125: {
  8856                           ;radio_driver_SX1276.c: 1126: LORAWAN_RxTimeout();
  8857  005D8A  EC6E  F036         	call	_LORAWAN_RxTimeout	;wreg free
  8858  005D8E  0012               	return	
  8859  005D90                     __end_of_RADIO_FSKPayloadReady:
  8860                           	opt stack 0
  8861                           tosu	equ	0xFFF
  8862                           tosh	equ	0xFFE
  8863                           tosl	equ	0xFFD
  8864                           pclath	equ	0xFFA
  8865                           tblptru	equ	0xFF8
  8866                           tblptrh	equ	0xFF7
  8867                           tblptrl	equ	0xFF6
  8868                           tablat	equ	0xFF5
  8869                           prodh	equ	0xFF4
  8870                           prodl	equ	0xFF3
  8871                           intcon	equ	0xFF2
  8872                           intcon2	equ	0xFF1
  8873                           intcon3	equ	0xFF0
  8874                           postinc0	equ	0xFEE
  8875                           wreg	equ	0xFE8
  8876                           postinc1	equ	0xFE6
  8877                           postdec1	equ	0xFE5
  8878                           plusw1	equ	0xFE3
  8879                           fsr1h	equ	0xFE2
  8880                           fsr1l	equ	0xFE1
  8881                           indf2	equ	0xFDF
  8882                           postinc2	equ	0xFDE
  8883                           postdec2	equ	0xFDD
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8
  8887                           
  8888 ;; *************** function _LORAWAN_RxTimeout *****************
  8889 ;; Defined at:
  8890 ;;		line 347 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;Total ram usage:        0 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:   14
  8911 ;; This function calls:
  8912 ;;		_Retransmissions
  8913 ;;		_RxData
  8914 ;;		_SetJoinFailState
  8915 ;; This function is called by:
  8916 ;;		_RADIO_FSKPayloadReady
  8917 ;;		_RADIO_RxTimeout
  8918 ;;		_RADIO_RxFSKTimeout
  8919 ;;		_RADIO_WatchdogTimeout
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text51
  8924  006CDC                     __ptext51:
  8925                           	opt stack 0
  8926  006CDC                     _LORAWAN_RxTimeout:
  8927                           	opt stack 13
  8928                           
  8929                           ;lorawan_na.c: 349: if (loRa.macStatus.macPause == 0)
  8930                           
  8931                           ;incstack = 0
  8932  006CDC  0102               	movlb	2	; () banked
  8933  006CDE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  8934  006CE0  D014               	goto	l1063
  8935                           
  8936                           ; BSR set to: 2
  8937                           ;lorawan_na.c: 350: {
  8938                           ;lorawan_na.c: 352: if ( loRa.macStatus.macState == RX1_OPEN )
  8939  006CE2  5102               	movf	(_loRa+2)& (0+255),w,b
  8940  006CE4  0B0F               	andlw	15
  8941  006CE6  0A03               	xorlw	3
  8942  006CE8  A4D8               	btfss	status,2,c
  8943  006CEA  D005               	goto	l1064
  8944                           
  8945                           ; BSR set to: 2
  8946                           ;lorawan_na.c: 353: {
  8947                           ;lorawan_na.c: 354: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  8948  006CEC  5102               	movf	(_loRa+2)& (0+255),w,b
  8949  006CEE  0BF0               	andlw	-16
  8950  006CF0  0904               	iorlw	4
  8951  006CF2  6F02               	movwf	(_loRa+2)& (0+255),b
  8952                           
  8953                           ;lorawan_na.c: 355: }
  8954  006CF4  0012               	return	
  8955  006CF6                     l1064:
  8956                           
  8957                           ; BSR set to: 2
  8958                           ;lorawan_na.c: 356: else
  8959                           ;lorawan_na.c: 357: {
  8960                           ;lorawan_na.c: 359: if (loRa.lorawanMacStatus.joining == 1)
  8961  006CF6  A500               	btfss	_loRa& (0+255),2,b
  8962  006CF8  D003               	goto	l1066
  8963                           
  8964                           ; BSR set to: 2
  8965                           ;lorawan_na.c: 360: {
  8966                           ;lorawan_na.c: 361: SetJoinFailState();
  8967  006CFA  EC55  F03B         	call	_SetJoinFailState	;wreg free
  8968                           
  8969                           ;lorawan_na.c: 362: }
  8970  006CFE  0012               	return	
  8971  006D00                     l1066:
  8972                           
  8973                           ; BSR set to: 2
  8974                           ;lorawan_na.c: 364: else if (loRa.macStatus.networkJoined == 1)
  8975  006D00  A902               	btfss	(_loRa+2)& (0+255),4,b
  8976  006D02  0012               	return	
  8977                           
  8978                           ; BSR set to: 2
  8979                           ;lorawan_na.c: 365: {
  8980                           ;lorawan_na.c: 366: Retransmissions ();
  8981  006D04  EC22  F025         	call	_Retransmissions	;wreg free
  8982                           
  8983                           ;lorawan_na.c: 367: }
  8984                           ;lorawan_na.c: 368: }
  8985                           ;lorawan_na.c: 369: }
  8986  006D08  0012               	return	
  8987  006D0A                     l1063:
  8988                           
  8989                           ;lorawan_na.c: 370: else
  8990                           ;lorawan_na.c: 371: {
  8991                           ;lorawan_na.c: 373: if (rxPayload.RxAppData != (0))
  8992  006D0A  0100               	movlb	0	; () banked
  8993  006D0C  51F9               	movf	_rxPayload& (0+255),w,b
  8994  006D0E  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  8995  006D10  B4D8               	btfsc	status,2,c
  8996  006D12  0012               	return	
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;lorawan_na.c: 374: {
  9000                           ;lorawan_na.c: 375: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
  9001  006D14  0E00               	movlw	0
  9002  006D16  6F60               	movwf	RxData@pData& (0+255),b
  9003  006D18  0E00               	movlw	0
  9004  006D1A  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9005  006D1C  0E00               	movlw	0
  9006  006D1E  6F62               	movwf	RxData@dataLength& (0+255),b
  9007  006D20  0E02               	movlw	2
  9008  006D22  6F63               	movwf	RxData@status& (0+255),b
  9009  006D24  D801               	call	u10978
  9010  006D26  0012               	return	
  9011  006D28                     u10978:
  9012  006D28  0005               	push	
  9013  006D2A  6EFA               	movwf	pclath,c
  9014  006D2C  51F9               	movf	_rxPayload& (0+255),w,b
  9015  006D2E  6EFD               	movwf	tosl,c
  9016  006D30  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  9017  006D32  6EFE               	movwf	tosh,c
  9018  006D34  6AFF               	clrf	tosu,c
  9019  006D36  50FA               	movf	pclath,w,c
  9020  006D38  0012               	return		;indir
  9021  006D3A                     __end_of_LORAWAN_RxTimeout:
  9022                           	opt stack 0
  9023                           tosu	equ	0xFFF
  9024                           tosh	equ	0xFFE
  9025                           tosl	equ	0xFFD
  9026                           pclath	equ	0xFFA
  9027                           tblptru	equ	0xFF8
  9028                           tblptrh	equ	0xFF7
  9029                           tblptrl	equ	0xFF6
  9030                           tablat	equ	0xFF5
  9031                           prodh	equ	0xFF4
  9032                           prodl	equ	0xFF3
  9033                           intcon	equ	0xFF2
  9034                           intcon2	equ	0xFF1
  9035                           intcon3	equ	0xFF0
  9036                           postinc0	equ	0xFEE
  9037                           wreg	equ	0xFE8
  9038                           postinc1	equ	0xFE6
  9039                           postdec1	equ	0xFE5
  9040                           plusw1	equ	0xFE3
  9041                           fsr1h	equ	0xFE2
  9042                           fsr1l	equ	0xFE1
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function _Retransmissions *****************
  9051 ;; Defined at:
  9052 ;;		line 1033 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;Total ram usage:        4 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:   13
  9073 ;; This function calls:
  9074 ;;		_RADIO_Transmit
  9075 ;;		_ResetParametersForConfirmedTransmission
  9076 ;;		_ResetParametersForUnconfirmedTransmission
  9077 ;;		_RxData
  9078 ;;		_SelectChannelForTransmission
  9079 ;;		_SwTimerSetTimeout
  9080 ;;		_SwTimerStart
  9081 ;;		_UpdateRetransmissionAckTimeoutState
  9082 ;; This function is called by:
  9083 ;;		_LORAWAN_RxTimeout
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text52
  9088  004A44                     __ptext52:
  9089                           	opt stack 0
  9090  004A44                     _Retransmissions:
  9091                           	opt stack 13
  9092                           
  9093                           ;lorawan_na.c: 1035: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9094                           
  9095                           ;incstack = 0
  9096  004A44  0102               	movlb	2	; () banked
  9097  004A46  A100               	btfss	_loRa& (0+255),0,b
  9098  004A48  D021               	goto	l1285
  9099                           
  9100                           ; BSR set to: 2
  9101                           ;lorawan_na.c: 1036: {
  9102                           ;lorawan_na.c: 1037: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCo
      +                          nfirmedUplink)
  9103  004A4A  51CA               	movf	(_loRa+202)& (0+255),w,b
  9104  004A4C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  9105  004A4E  A0D8               	btfss	status,0,c
  9106  004A50  D003               	goto	l1286
  9107                           
  9108                           ; BSR set to: 2
  9109                           ;lorawan_na.c: 1038: {
  9110                           ;lorawan_na.c: 1039: UpdateRetransmissionAckTimeoutState ();
  9111  004A52  EC04  F034         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  9112                           
  9113                           ;lorawan_na.c: 1040: }
  9114  004A56  0012               	return	
  9115  004A58                     l1286:
  9116                           
  9117                           ;lorawan_na.c: 1041: else
  9118                           ;lorawan_na.c: 1042: {
  9119                           ;lorawan_na.c: 1043: ResetParametersForConfirmedTransmission ();
  9120  004A58  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9121                           
  9122                           ;lorawan_na.c: 1044: if (rxPayload.RxAppData != (0))
  9123  004A5C  0100               	movlb	0	; () banked
  9124  004A5E  51F9               	movf	_rxPayload& (0+255),w,b
  9125  004A60  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  9126  004A62  B4D8               	btfsc	status,2,c
  9127  004A64  0012               	return	
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;lorawan_na.c: 1045: {
  9131                           ;lorawan_na.c: 1046: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9132  004A66  0E00               	movlw	0
  9133  004A68  6F60               	movwf	RxData@pData& (0+255),b
  9134  004A6A  0E00               	movlw	0
  9135  004A6C  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9136  004A6E  0E00               	movlw	0
  9137  004A70  6F62               	movwf	RxData@dataLength& (0+255),b
  9138  004A72  0E00               	movlw	0
  9139  004A74  6F63               	movwf	RxData@status& (0+255),b
  9140  004A76  D801               	call	u9658
  9141  004A78  0012               	return	
  9142  004A7A                     u9658:
  9143  004A7A  0005               	push	
  9144  004A7C  6EFA               	movwf	pclath,c
  9145  004A7E  51F9               	movf	_rxPayload& (0+255),w,b
  9146  004A80  6EFD               	movwf	tosl,c
  9147  004A82  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  9148  004A84  6EFE               	movwf	tosh,c
  9149  004A86  6AFF               	clrf	tosu,c
  9150  004A88  50FA               	movf	pclath,w,c
  9151  004A8A  0012               	return		;indir
  9152  004A8C                     l1285:
  9153                           
  9154                           ;lorawan_na.c: 1051: else
  9155                           ;lorawan_na.c: 1052: {
  9156                           ;lorawan_na.c: 1053: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitions
      +                          UnconfirmedUplink)
  9157  004A8C  0102               	movlb	2	; () banked
  9158  004A8E  51C9               	movf	(_loRa+201)& (0+255),w,b
  9159  004A90  5DC7               	subwf	(_loRa+199)& (0+255),w,b
  9160  004A92  A0D8               	btfss	status,0,c
  9161  004A94  D054               	goto	l1290
  9162                           
  9163                           ; BSR set to: 2
  9164                           ;lorawan_na.c: 1054: {
  9165                           ;lorawan_na.c: 1055: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9166  004A96  5102               	movf	(_loRa+2)& (0+255),w,b
  9167  004A98  0BF0               	andlw	-16
  9168  004A9A  0906               	iorlw	6
  9169  004A9C  6F02               	movwf	(_loRa+2)& (0+255),b
  9170                           
  9171                           ; BSR set to: 2
  9172                           ;lorawan_na.c: 1057: if ( (SelectChannelForTransmission (1) == OK) )
  9173  004A9E  0E01               	movlw	1
  9174  004AA0  EC4F  F01B         	call	_SelectChannelForTransmission
  9175  004AA4  0900               	iorlw	0
  9176  004AA6  A4D8               	btfss	status,2,c
  9177  004AA8  D030               	goto	l1291
  9178                           
  9179                           ;lorawan_na.c: 1058: {
  9180                           ;lorawan_na.c: 1059: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  9181  004AAA  0EA0               	movlw	low (_macBuffer+16)
  9182  004AAC  0100               	movlb	0	; () banked
  9183  004AAE  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  9184  004AB0  0E04               	movlw	high (_macBuffer+16)
  9185  004AB2  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9186  004AB4  C2C5  F0B3         	movff	_loRa+197,RADIO_Transmit@bufferLen
  9187  004AB8  EC14  F017         	call	_RADIO_Transmit	;wreg free
  9188  004ABC  0100               	movlb	0	; () banked
  9189  004ABE  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
  9190  004AC0  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  9191  004AC2  A4D8               	btfss	status,2,c
  9192  004AC4  D003               	goto	l1292
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;lorawan_na.c: 1060: {
  9196                           ;lorawan_na.c: 1061: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9197  004AC6  0102               	movlb	2	; () banked
  9198  004AC8  2BC9               	incf	(_loRa+201)& (0+255),f,b
  9199                           
  9200                           ;lorawan_na.c: 1062: }
  9201  004ACA  0012               	return	
  9202  004ACC                     l1292:
  9203                           
  9204                           ;lorawan_na.c: 1063: else
  9205                           ;lorawan_na.c: 1064: {
  9206                           ;lorawan_na.c: 1065: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9207                           
  9208                           ; BSR set to: 2
  9209  004ACC  0102               	movlb	2	; () banked
  9210  004ACE  5102               	movf	(_loRa+2)& (0+255),w,b
  9211  004AD0  0BF0               	andlw	-16
  9212  004AD2  0906               	iorlw	6
  9213  004AD4  6F02               	movwf	(_loRa+2)& (0+255),b
  9214                           
  9215                           ; BSR set to: 0
  9216                           
  9217                           ; BSR set to: 2
  9218                           
  9219                           ;lorawan_na.c: 1066: SwTimerSetTimeout(loRa.transmissionErrorTimerId, ((2000UL) < 0x000F
      +                          FFFFUL ? ( (((uint32_t)(2000UL)) << (12)) / 125UL ) : ( (((uint32_t)(2000UL)) / 125UL) <
      +                          < (12) ) ));
  9220  004AD6  0E00               	movlw	0
  9221  004AD8  0100               	movlb	0	; () banked
  9222  004ADA  6FC6               	movwf	_Retransmissions$1882& (0+255),b
  9223  004ADC  0E00               	movlw	0
  9224  004ADE  6FC7               	movwf	(_Retransmissions$1882+1)& (0+255),b
  9225  004AE0  0E01               	movlw	1
  9226  004AE2  6FC8               	movwf	(_Retransmissions$1882+2)& (0+255),b
  9227  004AE4  0E00               	movlw	0
  9228  004AE6  6FC9               	movwf	(_Retransmissions$1882+3)& (0+255),b
  9229                           
  9230                           ; BSR set to: 0
  9231                           
  9232                           ; BSR set to: 0
  9233  004AE8  C0C6  F06D         	movff	_Retransmissions$1882,SwTimerSetTimeout@timeout
  9234  004AEC  C0C7  F06E         	movff	_Retransmissions$1882+1,SwTimerSetTimeout@timeout+1
  9235  004AF0  C0C8  F06F         	movff	_Retransmissions$1882+2,SwTimerSetTimeout@timeout+2
  9236  004AF4  C0C9  F070         	movff	_Retransmissions$1882+3,SwTimerSetTimeout@timeout+3
  9237  004AF8  0102               	movlb	2	; () banked
  9238  004AFA  51E5               	movf	(_loRa+229)& (0+255),w,b
  9239  004AFC  EC9D  F039         	call	_SwTimerSetTimeout
  9240                           
  9241                           ;lorawan_na.c: 1067: SwTimerStart(loRa.transmissionErrorTimerId);
  9242  004B00  0102               	movlb	2	; () banked
  9243  004B02  51E5               	movf	(_loRa+229)& (0+255),w,b
  9244  004B04  EC62  F030         	call	_SwTimerStart
  9245                           
  9246                           ;lorawan_na.c: 1068: }
  9247                           ;lorawan_na.c: 1069: }
  9248  004B08  0012               	return	
  9249  004B0A                     l1291:
  9250                           
  9251                           ;lorawan_na.c: 1071: else
  9252                           ;lorawan_na.c: 1073: {
  9253                           ;lorawan_na.c: 1074: ResetParametersForUnconfirmedTransmission ();
  9254  004B0A  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9255                           
  9256                           ;lorawan_na.c: 1075: if (rxPayload.RxAppData != (0))
  9257  004B0E  0100               	movlb	0	; () banked
  9258  004B10  51F9               	movf	_rxPayload& (0+255),w,b
  9259  004B12  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  9260  004B14  B4D8               	btfsc	status,2,c
  9261  004B16  0012               	return	
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;lorawan_na.c: 1076: {
  9265                           ;lorawan_na.c: 1077: rxPayload.RxAppData((0), 0, MAC_OK);
  9266  004B18  0E00               	movlw	0
  9267  004B1A  6F60               	movwf	RxData@pData& (0+255),b
  9268  004B1C  0E00               	movlw	0
  9269  004B1E  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9270  004B20  0E00               	movlw	0
  9271  004B22  6F62               	movwf	RxData@dataLength& (0+255),b
  9272  004B24  0E01               	movlw	1
  9273  004B26  6F63               	movwf	RxData@status& (0+255),b
  9274  004B28  D801               	call	u9708
  9275  004B2A  0012               	return	
  9276  004B2C                     u9708:
  9277  004B2C  0005               	push	
  9278  004B2E  6EFA               	movwf	pclath,c
  9279  004B30  51F9               	movf	_rxPayload& (0+255),w,b
  9280  004B32  6EFD               	movwf	tosl,c
  9281  004B34  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  9282  004B36  6EFE               	movwf	tosh,c
  9283  004B38  6AFF               	clrf	tosu,c
  9284  004B3A  50FA               	movf	pclath,w,c
  9285  004B3C  0012               	return		;indir
  9286  004B3E                     l1290:
  9287                           
  9288                           ;lorawan_na.c: 1081: else
  9289                           ;lorawan_na.c: 1082: {
  9290                           ;lorawan_na.c: 1083: ResetParametersForUnconfirmedTransmission ();
  9291  004B3E  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9292                           
  9293                           ;lorawan_na.c: 1084: if (rxPayload.RxAppData != (0))
  9294  004B42  0100               	movlb	0	; () banked
  9295  004B44  51F9               	movf	_rxPayload& (0+255),w,b
  9296  004B46  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
  9297  004B48  B4D8               	btfsc	status,2,c
  9298  004B4A  0012               	return	
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;lorawan_na.c: 1085: {
  9302                           ;lorawan_na.c: 1086: rxPayload.RxAppData((0), 0, MAC_OK);
  9303  004B4C  0E00               	movlw	0
  9304  004B4E  6F60               	movwf	RxData@pData& (0+255),b
  9305  004B50  0E00               	movlw	0
  9306  004B52  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9307  004B54  0E00               	movlw	0
  9308  004B56  6F62               	movwf	RxData@dataLength& (0+255),b
  9309  004B58  0E01               	movlw	1
  9310  004B5A  6F63               	movwf	RxData@status& (0+255),b
  9311  004B5C  D801               	call	u9728
  9312  004B5E  0012               	return	
  9313  004B60                     u9728:
  9314  004B60  0005               	push	
  9315  004B62  6EFA               	movwf	pclath,c
  9316  004B64  51F9               	movf	_rxPayload& (0+255),w,b
  9317  004B66  6EFD               	movwf	tosl,c
  9318  004B68  51FA               	movf	(_rxPayload+1)& (0+255),w,b
  9319  004B6A  6EFE               	movwf	tosh,c
  9320  004B6C  6AFF               	clrf	tosu,c
  9321  004B6E  50FA               	movf	pclath,w,c
  9322  004B70  0012               	return		;indir
  9323  004B72                     __end_of_Retransmissions:
  9324                           	opt stack 0
  9325                           tosu	equ	0xFFF
  9326                           tosh	equ	0xFFE
  9327                           tosl	equ	0xFFD
  9328                           pclath	equ	0xFFA
  9329                           tblptru	equ	0xFF8
  9330                           tblptrh	equ	0xFF7
  9331                           tblptrl	equ	0xFF6
  9332                           tablat	equ	0xFF5
  9333                           prodh	equ	0xFF4
  9334                           prodl	equ	0xFF3
  9335                           intcon	equ	0xFF2
  9336                           intcon2	equ	0xFF1
  9337                           intcon3	equ	0xFF0
  9338                           postinc0	equ	0xFEE
  9339                           wreg	equ	0xFE8
  9340                           postinc1	equ	0xFE6
  9341                           postdec1	equ	0xFE5
  9342                           plusw1	equ	0xFE3
  9343                           fsr1h	equ	0xFE2
  9344                           fsr1l	equ	0xFE1
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           postdec2	equ	0xFDD
  9348                           fsr2h	equ	0xFDA
  9349                           fsr2l	equ	0xFD9
  9350                           status	equ	0xFD8
  9351                           
  9352 ;; *************** function _LORAWAN_RxDone *****************
  9353 ;; Defined at:
  9354 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
  9357 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9358 ;;  bufferLength    1  104[BANK1 ] unsigned char 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  hdr             2  145[BANK0 ] PTR struct .
  9361 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9362 ;;  joinAccept      2  142[BANK0 ] PTR struct .
  9363 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9364 ;;  computedMic     4  138[BANK0 ] unsigned long 
  9365 ;;  extractedMic    4  130[BANK0 ] unsigned long 
  9366 ;;  packet          2  136[BANK0 ] PTR unsigned char 
  9367 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
  9368 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
  9369 ;;  temp            1  135[BANK0 ] unsigned char 
  9370 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
  9371 ;;  mhdr            1  129[BANK0 ] struct .
  9372 ;;  channelIndex    1  128[BANK0 ] unsigned char 
  9373 ;;  fPort           1  127[BANK0 ] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      enum E7430
  9376 ;; Registers used:
  9377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9383 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;Total ram usage:       28 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:   15
  9390 ;; This function calls:
  9391 ;;		_AESCmac
  9392 ;;		_AESEncodeLoRa
  9393 ;;		_AssembleEncryptionBlock
  9394 ;;		_CheckFlags
  9395 ;;		_CheckMcastFlags
  9396 ;;		_ComputeMic
  9397 ;;		_ComputeSessionKeys
  9398 ;;		_EncryptFRMPayload
  9399 ;;		_ExtractMic
  9400 ;;		_LORAWAN_EnterContinuousReceive
  9401 ;;		_LORAWAN_Send
  9402 ;;		_MacExecuteCommands
  9403 ;;		_RADIO_GetStatus
  9404 ;;		_RADIO_ReleaseData
  9405 ;;		_RxData
  9406 ;;		_SearchAvailableChannel
  9407 ;;		_SetJoinFailState
  9408 ;;		_SetReceptionNotOkState
  9409 ;;		_StartReTxTimer
  9410 ;;		_SwTimerStop
  9411 ;;		_UpdateCfList
  9412 ;;		_UpdateDLSettings
  9413 ;;		_UpdateJoinSuccessState
  9414 ;;		_UpdateReceiveDelays
  9415 ;;		_UpdateRetransmissionAckTimeoutState
  9416 ;;		_memcpy
  9417 ;; This function is called by:
  9418 ;;		_RADIO_RxDone
  9419 ;;		_RADIO_FSKPayloadReady
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text53
  9424  000086                     __ptext53:
  9425                           	opt stack 0
  9426  000086                     _LORAWAN_RxDone:
  9427                           	opt stack 12
  9428                           
  9429                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
  9430                           ;lorawan.c: 1124: Mhdr_t mhdr;
  9431                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
  9432                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
  9433                           ;lorawan.c: 1127: uint8_t *packet;
  9434                           ;lorawan.c: 1128: uint8_t temp;
  9435                           ;lorawan.c: 1130: RADIO_ReleaseData();
  9436                           
  9437                           ;incstack = 0
  9438  000086  EC32  F03F         	call	_RADIO_ReleaseData	;wreg free
  9439                           
  9440                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
  9441  00008A  0102               	movlb	2	; () banked
  9442  00008C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9443  00008E  EF57  F006         	goto	l1904
  9444                           
  9445                           ; BSR set to: 2
  9446                           ;lorawan.c: 1133: {
  9447                           ;lorawan.c: 1134: mhdr.value = buffer[0];
  9448  000092  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  9449  000096  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  9450  00009A  50DF               	movf	indf2,w,c
  9451  00009C  0100               	movlb	0	; () banked
  9452  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
  9456  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  9457  0000A2  32E8               	rrcf	wreg,f,c
  9458  0000A4  0B07               	andlw	7
  9459  0000A6  06E8               	decf	wreg,f,c
  9460  0000A8  A4D8               	btfss	status,2,c
  9461  0000AA  D0D8               	goto	l1905
  9462                           
  9463                           ; BSR set to: 0
  9464  0000AC  0102               	movlb	2	; () banked
  9465  0000AE  511D               	movf	(_loRa+29)& (0+255),w,b
  9466  0000B0  A4D8               	btfss	status,2,c
  9467  0000B2  D0D4               	goto	l1905
  9468                           
  9469                           ; BSR set to: 2
  9470                           ;lorawan.c: 1136: {
  9471                           ;lorawan.c: 1137: temp = bufferLength - 1;
  9472  0000B4  0101               	movlb	1	; () banked
  9473  0000B6  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9474  0000B8  0100               	movlb	0	; () banked
  9475  0000BA  D028               	goto	L5
  9476  0000BC                     
  9477                           ; BSR set to: 0
  9478                           ;lorawan.c: 1139: {
  9479                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
  9480                           
  9481                           ; BSR set to: 0
  9482  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  9483  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
  9484  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  9485  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
  9486  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9487  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
  9488  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9489  0000CA  0101               	movlb	1	; () banked
  9490  0000CC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9491  0000CE  0100               	movlb	0	; () banked
  9492  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  9493  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  9494  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
  9495  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  9496  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  9497  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  9498  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  9499  0000DE  0101               	movlb	1	; () banked
  9500  0000E0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  9501  0000E2  0100               	movlb	0	; () banked
  9502  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  9503  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  9504  0000E8  0101               	movlb	1	; () banked
  9505  0000EA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  9506  0000EC  0100               	movlb	0	; () banked
  9507  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  9508  0000F0  0E42               	movlw	low (_loRa+66)
  9509  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
  9510  0000F4  0E02               	movlw	high (_loRa+66)
  9511  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
  9512  0000F8  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
  9513                           
  9514                           ;lorawan.c: 1142: if (temp > 16)
  9515  0000FC  0E10               	movlw	16
  9516  0000FE  0100               	movlb	0	; () banked
  9517  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
  9518  000102  D003               	goto	l1908
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;lorawan.c: 1143: {
  9522                           ;lorawan.c: 1144: temp -= 16;
  9523  000104  0E10               	movlw	16
  9524  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
  9525                           
  9526                           ;lorawan.c: 1145: }
  9527  000108  D002               	goto	l1909
  9528  00010A                     l1908:
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;lorawan.c: 1146: else
  9532                           ;lorawan.c: 1147: {
  9533                           ;lorawan.c: 1148: temp = 0;
  9534                           
  9535                           ; BSR set to: 0
  9536  00010A  0E00               	movlw	0
  9537  00010C                     L5:
  9538  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
  9539  00010E                     l1909:
  9540                           
  9541                           ; BSR set to: 0
  9542                           
  9543                           ; BSR set to: 0
  9544  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  9545  000110  A4D8               	btfss	status,2,c
  9546  000112  D7D4               	goto	l1907
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;lorawan.c: 1149: }
  9550                           ;lorawan.c: 1150: }
  9551                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
  9552                           
  9553                           ; BSR set to: 0
  9554  000114  0E42               	movlw	low (_loRa+66)
  9555  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
  9556  000118  0E02               	movlw	high (_loRa+66)
  9557  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
  9558  00011C  C166  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
  9559  000120  C167  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
  9560  000124  0101               	movlb	1	; () banked
  9561  000126  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9562  000128  0FFC               	addlw	252
  9563  00012A  0100               	movlb	0	; () banked
  9564  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
  9565  00012E  EC7C  F035         	call	_ComputeMic	;wreg free
  9566  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
  9567  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
  9568  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
  9569  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
  9570                           
  9571                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
  9572  000142  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  9573  000146  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  9574  00014A  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  9575  00014E  EC28  F037         	call	_ExtractMic	;wreg free
  9576  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  9577  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  9578  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  9579  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  9580                           
  9581                           ;lorawan.c: 1155: if (extractedMic != computedMic)
  9582  000162  0100               	movlb	0	; () banked
  9583  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
  9584  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  9585  000168  E10A               	bnz	u10240
  9586  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  9587  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  9588  00016E  E107               	bnz	u10240
  9589  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  9590  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  9591  000174  E104               	bnz	u10240
  9592  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  9593  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  9594  00017A  B4D8               	btfsc	status,2,c
  9595  00017C  D011               	goto	l1911
  9596  00017E                     u10240:
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;lorawan.c: 1156: {
  9600                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
  9601  00017E  0102               	movlb	2	; () banked
  9602  000180  5102               	movf	(_loRa+2)& (0+255),w,b
  9603  000182  0B0F               	andlw	15
  9604  000184  0A05               	xorlw	5
  9605  000186  B4D8               	btfsc	status,2,c
  9606  000188  D008               	goto	u10270
  9607                           
  9608                           ; BSR set to: 2
  9609  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
  9610  00018C  0B0F               	andlw	15
  9611  00018E  0A03               	xorlw	3
  9612  000190  A4D8               	btfss	status,2,c
  9613  000192  0012               	return	
  9614                           
  9615                           ; BSR set to: 2
  9616  000194  51E2               	movf	(_loRa+226)& (0+255),w,b
  9617  000196  B4D8               	btfsc	status,2,c
  9618  000198  0012               	return	
  9619  00019A                     u10270:
  9620                           
  9621                           ; BSR set to: 2
  9622                           ;lorawan.c: 1158: {
  9623                           ;lorawan.c: 1159: SetJoinFailState();
  9624                           
  9625                           ; BSR set to: 2
  9626  00019A  EC55  F03B         	call	_SetJoinFailState	;wreg free
  9627                           
  9628                           ;lorawan.c: 1160: }
  9629                           ;lorawan.c: 1162: return INVALID_PARAMETER;
  9630                           ;	Return value of _LORAWAN_RxDone is never used
  9631  00019E  0012               	return	
  9632  0001A0                     l1911:
  9633                           
  9634                           ;lorawan.c: 1163: }
  9635                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
  9636  0001A0  0102               	movlb	2	; () banked
  9637  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
  9638  0001A4  0B0F               	andlw	15
  9639  0001A6  0A03               	xorlw	3
  9640  0001A8  A4D8               	btfss	status,2,c
  9641  0001AA  D003               	goto	l1916
  9642                           
  9643                           ; BSR set to: 2
  9644                           ;lorawan.c: 1167: {
  9645                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
  9646  0001AC  51D4               	movf	(_loRa+212)& (0+255),w,b
  9647  0001AE  EC89  F03C         	call	_SwTimerStop
  9648  0001B2                     l1916:
  9649                           
  9650                           ;lorawan.c: 1169: }
  9651                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
  9652                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
  9653  0001B2  C166  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
  9654  0001B6  C167  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
  9655                           
  9656                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
  9657  0001BA  0100               	movlb	0	; () banked
  9658  0001BC  EE20 F007          	lfsr	2,7
  9659  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  9660  0001C2  26D9               	addwf	fsr2l,f,c
  9661  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  9662  0001C6  22DA               	addwfc	fsr2h,f,c
  9663  0001C8  CFDE F21E          	movff	postinc2,_loRa+30
  9664  0001CC  CFDE F21F          	movff	postinc2,_loRa+31
  9665  0001D0  CFDE F220          	movff	postinc2,_loRa+32
  9666  0001D4  CFDE F221          	movff	postinc2,_loRa+33
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
  9670  0001D8  EE20 F00C          	lfsr	2,12
  9671  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  9672  0001DE  26D9               	addwf	fsr2l,f,c
  9673  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  9674  0001E2  22DA               	addwfc	fsr2h,f,c
  9675  0001E4  50DF               	movf	indf2,w,c
  9676  0001E6  0B0F               	andlw	15
  9677  0001E8  EC03  F03A         	call	_UpdateReceiveDelays
  9678                           
  9679                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
  9680  0001EC  0100               	movlb	0	; () banked
  9681  0001EE  EE20 F00B          	lfsr	2,11
  9682  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  9683  0001F4  26D9               	addwf	fsr2l,f,c
  9684  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  9685  0001F8  22DA               	addwfc	fsr2h,f,c
  9686  0001FA  38DF               	swapf	223,w,c
  9687  0001FC  0B07               	andlw	7
  9688  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
  9689  000200  EE20 F00B          	lfsr	2,11
  9690  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  9691  000206  26D9               	addwf	fsr2l,f,c
  9692  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  9693  00020A  22DA               	addwfc	fsr2h,f,c
  9694  00020C  50DF               	movf	223,w,c
  9695  00020E  0B0F               	andlw	15
  9696  000210  EC09  F03D         	call	_UpdateDLSettings
  9697                           
  9698                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
  9699  000214  C0EE  F060         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
  9700  000218  C0EF  F061         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
  9701  00021C  0101               	movlb	1	; () banked
  9702  00021E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9703  000220  EC53  F03F         	call	_UpdateCfList
  9704                           
  9705                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
  9706  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
  9707  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
  9708  00022C  EC0E  F032         	call	_ComputeSessionKeys	;wreg free
  9709                           
  9710                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
  9711  000230  0E00               	movlw	0
  9712  000232  6EE6               	movwf	postinc1,c
  9713  000234  ECEB  F023         	call	_UpdateJoinSuccessState	;wreg free
  9714                           
  9715                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
  9716  000238  0E00               	movlw	0
  9717  00023A  0102               	movlb	2	; () banked
  9718  00023C  6F06               	movwf	(_loRa+6)& (0+255),b
  9719  00023E  0E00               	movlw	0
  9720  000240  6F07               	movwf	(_loRa+7)& (0+255),b
  9721  000242  0E00               	movlw	0
  9722  000244  6F08               	movwf	(_loRa+8)& (0+255),b
  9723  000246  0E00               	movlw	0
  9724  000248  6F09               	movwf	(_loRa+9)& (0+255),b
  9725                           
  9726                           ; BSR set to: 2
  9727                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
  9728  00024A  0E00               	movlw	0
  9729  00024C  6F0A               	movwf	(_loRa+10)& (0+255),b
  9730  00024E  0E00               	movlw	0
  9731  000250  6F0B               	movwf	(_loRa+11)& (0+255),b
  9732  000252  0E00               	movlw	0
  9733  000254  6F0C               	movwf	(_loRa+12)& (0+255),b
  9734  000256  0E00               	movlw	0
  9735  000258  6F0D               	movwf	(_loRa+13)& (0+255),b
  9736                           
  9737                           ; BSR set to: 2
  9738                           ;lorawan.c: 1190: }
  9739                           
  9740                           ; BSR set to: 2
  9741                           ;lorawan.c: 1189: return OK;
  9742                           ;	Return value of _LORAWAN_RxDone is never used
  9743  00025A  0012               	return	
  9744  00025C                     l1905:
  9745                           
  9746                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
  9747                           
  9748                           ; BSR set to: 2
  9749  00025C  0100               	movlb	0	; () banked
  9750  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  9751  000260  32E8               	rrcf	wreg,f,c
  9752  000262  0B07               	andlw	7
  9753  000264  0A03               	xorlw	3
  9754  000266  B4D8               	btfsc	status,2,c
  9755  000268  D007               	goto	u10300
  9756                           
  9757                           ; BSR set to: 0
  9758  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  9759  00026C  32E8               	rrcf	wreg,f,c
  9760  00026E  0B07               	andlw	7
  9761  000270  0A05               	xorlw	5
  9762  000272  A4D8               	btfss	status,2,c
  9763  000274  EF54  F006         	goto	l1918
  9764  000278                     u10300:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;lorawan.c: 1192: {
  9768                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
  9769                           
  9770                           ; BSR set to: 0
  9771  000278  0E00               	movlw	0
  9772  00027A  0102               	movlb	2	; () banked
  9773  00027C  6F98               	movwf	(_loRa+152)& (0+255),b
  9774                           
  9775                           ; BSR set to: 2
  9776                           ;lorawan.c: 1195: Hdr_t *hdr;
  9777                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
  9778  00027E  C166  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
  9779  000282  C167  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
  9780                           
  9781                           ; BSR set to: 2
  9782                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
  9783  000286  0E02               	movlw	2
  9784  000288  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9785  00028A  A4D8               	btfss	status,2,c
  9786  00028C  D208               	goto	l1921
  9787                           
  9788                           ; BSR set to: 2
  9789  00028E  0100               	movlb	0	; () banked
  9790  000290  EE20 F001          	lfsr	2,1
  9791  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9792  000296  26D9               	addwf	fsr2l,f,c
  9793  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9794  00029A  22DA               	addwfc	fsr2h,f,c
  9795  00029C  0102               	movlb	2	; () banked
  9796  00029E  5162               	movf	(_loRa+98)& (0+255),w,b
  9797  0002A0  18DE               	xorwf	postinc2,w,c
  9798  0002A2  E109               	bnz	u10321
  9799  0002A4  5163               	movf	(_loRa+99)& (0+255),w,b
  9800  0002A6  18DE               	xorwf	postinc2,w,c
  9801  0002A8  E106               	bnz	u10321
  9802  0002AA  5164               	movf	(_loRa+100)& (0+255),w,b
  9803  0002AC  18DE               	xorwf	postinc2,w,c
  9804  0002AE  E103               	bnz	u10321
  9805  0002B0  5165               	movf	(_loRa+101)& (0+255),w,b
  9806  0002B2  18DE               	xorwf	postinc2,w,c
  9807  0002B4  A4D8               	btfss	status,2,c
  9808  0002B6                     u10321:
  9809  0002B6  D1F3               	goto	l1921
  9810                           
  9811                           ; BSR set to: 2
  9812  0002B8  A504               	btfss	(_loRa+4)& (0+255),2,b
  9813  0002BA  D1F1               	goto	l1921
  9814                           
  9815                           ; BSR set to: 2
  9816                           ;lorawan.c: 1200: {
  9817                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
  9818  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
  9819  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
  9820  0002C4  ECD5  F032         	call	_CheckMcastFlags	;wreg free
  9821  0002C8  0900               	iorlw	0
  9822  0002CA  A4D8               	btfss	status,2,c
  9823  0002CC  D008               	goto	l1922
  9824                           
  9825                           ;lorawan.c: 1203: {
  9826                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  9827  0002CE  0102               	movlb	2	; () banked
  9828  0002D0  5102               	movf	(_loRa+2)& (0+255),w,b
  9829  0002D2  0BF0               	andlw	-16
  9830  0002D4  0909               	iorlw	9
  9831  0002D6  6F02               	movwf	(_loRa+2)& (0+255),b
  9832                           
  9833                           ; BSR set to: 2
  9834                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
  9835  0002D8  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  9836                           
  9837                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
  9838                           ;	Return value of _LORAWAN_RxDone is never used
  9839  0002DC  0012               	return	
  9840  0002DE                     l1922:
  9841                           
  9842                           ;lorawan.c: 1207: }
  9843                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
  9844  0002DE  0100               	movlb	0	; () banked
  9845  0002E0  EE20 F006          	lfsr	2,6
  9846  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9847  0002E6  26D9               	addwf	fsr2l,f,c
  9848  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9849  0002EA  22DA               	addwfc	fsr2h,f,c
  9850  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
  9851  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
  9852  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
  9853  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
  9854  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
  9855  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
  9856  000300  0101               	movlb	1	; () banked
  9857  000302  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9858  000304  0FFC               	addlw	252
  9859  000306  0100               	movlb	0	; () banked
  9860  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
  9861  00030A  0E49               	movlw	73
  9862  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
  9863  00030E  0E01               	movlw	1
  9864  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
  9865  000312  0E01               	movlw	1
  9866  000314  ECDD  F028         	call	_AssembleEncryptionBlock
  9867                           
  9868                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
  9869  000318  0E9F               	movlw	low _radioBuffer
  9870  00031A  0100               	movlb	0	; () banked
  9871  00031C  6F60               	movwf	memcpy@d1& (0+255),b
  9872  00031E  0E05               	movlw	high _radioBuffer
  9873  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9874  000322  0EAA               	movlw	low _aesBuffer
  9875  000324  6F62               	movwf	memcpy@s1& (0+255),b
  9876  000326  0E01               	movlw	high _aesBuffer
  9877  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  9878  00032A  0E00               	movlw	0
  9879  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  9880  00032E  0E10               	movlw	16
  9881  000330  6F64               	movwf	memcpy@n& (0+255),b
  9882  000332  EC3E  F036         	call	_memcpy	;wreg free
  9883                           
  9884                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
  9885  000336  0EAF               	movlw	low (_radioBuffer+16)
  9886  000338  0100               	movlb	0	; () banked
  9887  00033A  6F60               	movwf	memcpy@d1& (0+255),b
  9888  00033C  0E05               	movlw	high (_radioBuffer+16)
  9889  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9890  000340  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
  9891  000344  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
  9892  000348  0EFC               	movlw	252
  9893  00034A  0101               	movlb	1	; () banked
  9894  00034C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9895  00034E  0100               	movlb	0	; () banked
  9896  000350  6F64               	movwf	memcpy@n& (0+255),b
  9897  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
  9898  000354  0EFF               	movlw	255
  9899  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
  9900  000358  EC3E  F036         	call	_memcpy	;wreg free
  9901                           
  9902                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
  9903  00035C  0E66               	movlw	low (_loRa+102)
  9904  00035E  0100               	movlb	0	; () banked
  9905  000360  6FB9               	movwf	AESCmac@key& (0+255),b
  9906  000362  0E02               	movlw	high (_loRa+102)
  9907  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
  9908  000366  0EAA               	movlw	low _aesBuffer
  9909  000368  6FBB               	movwf	AESCmac@output& (0+255),b
  9910  00036A  0E01               	movlw	high _aesBuffer
  9911  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
  9912  00036E  0E9F               	movlw	low _radioBuffer
  9913  000370  6FBD               	movwf	AESCmac@input& (0+255),b
  9914  000372  0E05               	movlw	high _radioBuffer
  9915  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
  9916  000376  0101               	movlb	1	; () banked
  9917  000378  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9918  00037A  0F0C               	addlw	12
  9919  00037C  0100               	movlb	0	; () banked
  9920  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
  9921  000380  EC6C  F00F         	call	_AESCmac	;wreg free
  9922                           
  9923                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
  9924  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
  9925  000386  0100               	movlb	0	; () banked
  9926  000388  6F60               	movwf	memcpy@d1& (0+255),b
  9927  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
  9928  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9929  00038E  0EAA               	movlw	low _aesBuffer
  9930  000390  6F62               	movwf	memcpy@s1& (0+255),b
  9931  000392  0E01               	movlw	high _aesBuffer
  9932  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  9933  000396  0E00               	movlw	0
  9934  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
  9935  00039A  0E04               	movlw	4
  9936  00039C  6F64               	movwf	memcpy@n& (0+255),b
  9937  00039E  EC3E  F036         	call	_memcpy	;wreg free
  9938                           
  9939                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
  9940  0003A2  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  9941  0003A6  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  9942  0003AA  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  9943  0003AE  EC28  F037         	call	_ExtractMic	;wreg free
  9944  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  9945  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  9946  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  9947  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  9948                           
  9949                           ;lorawan.c: 1217: if (computedMic != extractedMic)
  9950  0003C2  0100               	movlb	0	; () banked
  9951  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  9952  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
  9953  0003C8  E10A               	bnz	u10350
  9954  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  9955  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  9956  0003CE  E107               	bnz	u10350
  9957  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  9958  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  9959  0003D4  E104               	bnz	u10350
  9960  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  9961  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  9962  0003DA  B4D8               	btfsc	status,2,c
  9963  0003DC  D008               	goto	l1923
  9964  0003DE                     u10350:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;lorawan.c: 1218: {
  9968                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  9969  0003DE  0102               	movlb	2	; () banked
  9970  0003E0  5102               	movf	(_loRa+2)& (0+255),w,b
  9971  0003E2  0BF0               	andlw	-16
  9972  0003E4  0909               	iorlw	9
  9973  0003E6  6F02               	movwf	(_loRa+2)& (0+255),b
  9974                           
  9975                           ; BSR set to: 2
  9976                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
  9977  0003E8  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  9978                           
  9979                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
  9980                           ;	Return value of _LORAWAN_RxDone is never used
  9981  0003EC  0012               	return	
  9982  0003EE                     l1923:
  9983                           
  9984                           ;lorawan.c: 1222: }
  9985                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
  9986  0003EE  0100               	movlb	0	; () banked
  9987  0003F0  EE20 F006          	lfsr	2,6
  9988  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9989  0003F6  26D9               	addwf	fsr2l,f,c
  9990  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9991  0003FA  22DA               	addwfc	fsr2h,f,c
  9992  0003FC  0102               	movlb	2	; () banked
  9993  0003FE  510E               	movf	(_loRa+14)& (0+255),w,b
  9994  000400  5CDE               	subwf	postinc2,w,c
  9995  000402  510F               	movf	(_loRa+15)& (0+255),w,b
  9996  000404  58DE               	subwfb	postinc2,w,c
  9997  000406  A0D8               	btfss	status,0,c
  9998  000408  D04E               	goto	l1924
  9999                           
 10000                           ; BSR set to: 2
 10001                           ;lorawan.c: 1225: {
 10002                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10003  00040A  0100               	movlb	0	; () banked
 10004  00040C  EE20 F006          	lfsr	2,6
 10005  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10006  000412  26D9               	addwf	fsr2l,f,c
 10007  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10008  000416  22DA               	addwfc	fsr2h,f,c
 10009  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10010  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10011  000420  EE22  F00E         	lfsr	2,_loRa+14
 10012  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 10013  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 10014  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10015  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10016  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10017  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10018  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10019  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10020  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10021  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10022  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10023  00043E  0102               	movlb	2	; () banked
 10024  000440  5D90               	subwf	(_loRa+144)& (0+255),w,b
 10025  000442  0100               	movlb	0	; () banked
 10026  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10027  000446  0102               	movlb	2	; () banked
 10028  000448  5991               	subwfb	(_loRa+145)& (0+255),w,b
 10029  00044A  B0D8               	btfsc	status,0,c
 10030  00044C  D020               	goto	l1925
 10031                           
 10032                           ; BSR set to: 2
 10033                           ;lorawan.c: 1227: {
 10034                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10035  00044E  0100               	movlb	0	; () banked
 10036  000450  51F9               	movf	_rxPayload& (0+255),w,b
 10037  000452  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 10038  000454  B4D8               	btfsc	status,2,c
 10039  000456  D013               	goto	u10399
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;lorawan.c: 1229: {
 10043                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10044  000458  0E00               	movlw	0
 10045  00045A  6F60               	movwf	RxData@pData& (0+255),b
 10046  00045C  0E00               	movlw	0
 10047  00045E  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10048  000460  0E00               	movlw	0
 10049  000462  6F62               	movwf	RxData@dataLength& (0+255),b
 10050  000464  0E05               	movlw	5
 10051  000466  6F63               	movwf	RxData@status& (0+255),b
 10052  000468  D801               	call	u10398
 10053  00046A  D009               	goto	u10399
 10054  00046C                     u10398:
 10055  00046C  0005               	push	
 10056  00046E  6EFA               	movwf	pclath,c
 10057  000470  51F9               	movf	_rxPayload& (0+255),w,b
 10058  000472  6EFD               	movwf	tosl,c
 10059  000474  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 10060  000476  6EFE               	movwf	tosh,c
 10061  000478  6AFF               	clrf	tosu,c
 10062  00047A  50FA               	movf	pclath,w,c
 10063  00047C  0012               	return		;indir
 10064  00047E                     u10399:
 10065                           
 10066                           ;lorawan.c: 1231: }
 10067                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10068  00047E  0102               	movlb	2	; () banked
 10069  000480  5102               	movf	(_loRa+2)& (0+255),w,b
 10070  000482  0BF0               	andlw	-16
 10071  000484  0909               	iorlw	9
 10072  000486  6F02               	movwf	(_loRa+2)& (0+255),b
 10073                           
 10074                           ; BSR set to: 2
 10075                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 10076  000488  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10077                           
 10078                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 10079                           ;	Return value of _LORAWAN_RxDone is never used
 10080  00048C  0012               	return	
 10081  00048E                     l1925:
 10082                           
 10083                           ;lorawan.c: 1237: else
 10084                           ;lorawan.c: 1238: {
 10085                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10086  00048E  0100               	movlb	0	; () banked
 10087  000490  EE20 F006          	lfsr	2,6
 10088  000494  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10089  000496  26D9               	addwf	fsr2l,f,c
 10090  000498  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10091  00049A  22DA               	addwfc	fsr2h,f,c
 10092  00049C  CFDE F20E          	movff	postinc2,_loRa+14
 10093  0004A0  CFDD F20F          	movff	postdec2,_loRa+15
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;lorawan.c: 1240: }
 10097                           ;lorawan.c: 1241: }
 10098  0004A4  D038               	goto	l1930
 10099  0004A6                     l1924:
 10100                           
 10101                           ;lorawan.c: 1242: else
 10102                           ;lorawan.c: 1243: {
 10103                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10104                           
 10105                           ; BSR set to: 0
 10106  0004A6  0100               	movlb	0	; () banked
 10107  0004A8  EE20 F006          	lfsr	2,6
 10108  0004AC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10109  0004AE  26D9               	addwf	fsr2l,f,c
 10110  0004B0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10111  0004B2  22DA               	addwfc	fsr2h,f,c
 10112  0004B4  50DE               	movf	postinc2,w,c
 10113  0004B6  10DE               	iorwf	postinc2,w,c
 10114  0004B8  A4D8               	btfss	status,2,c
 10115  0004BA  D00D               	goto	l1929
 10116                           
 10117                           ; BSR set to: 0
 10118  0004BC  0102               	movlb	2	; () banked
 10119  0004BE  290E               	incf	(_loRa+14)& (0+255),w,b
 10120  0004C0  E10A               	bnz	l10312
 10121  0004C2  290F               	incf	(_loRa+15)& (0+255),w,b
 10122  0004C4  A4D8               	btfss	status,2,c
 10123  0004C6  D007               	goto	l1929
 10124                           
 10125                           ; BSR set to: 2
 10126                           ;lorawan.c: 1245: {
 10127                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 10128  0004C8  0E00               	movlw	0
 10129  0004CA  6F0F               	movwf	(_loRa+15)& (0+255),b
 10130  0004CC  0E00               	movlw	0
 10131  0004CE  6F0E               	movwf	(_loRa+14)& (0+255),b
 10132                           
 10133                           ; BSR set to: 2
 10134                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 10135  0004D0  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 10136  0004D2  2B11               	incf	(_loRa+17)& (0+255),f,b
 10137                           
 10138                           ;lorawan.c: 1248: }
 10139  0004D4  D020               	goto	l1930
 10140  0004D6                     l1929:
 10141  0004D6                     l10312:
 10142                           
 10143                           ;lorawan.c: 1249: else
 10144                           ;lorawan.c: 1250: {
 10145                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 10146  0004D6  0100               	movlb	0	; () banked
 10147  0004D8  51F9               	movf	_rxPayload& (0+255),w,b
 10148  0004DA  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 10149  0004DC  B4D8               	btfsc	status,2,c
 10150  0004DE  D013               	goto	u10439
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;lorawan.c: 1252: {
 10154                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10155  0004E0  0E00               	movlw	0
 10156  0004E2  6F60               	movwf	RxData@pData& (0+255),b
 10157  0004E4  0E00               	movlw	0
 10158  0004E6  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10159  0004E8  0E00               	movlw	0
 10160  0004EA  6F62               	movwf	RxData@dataLength& (0+255),b
 10161  0004EC  0E05               	movlw	5
 10162  0004EE  6F63               	movwf	RxData@status& (0+255),b
 10163  0004F0  D801               	call	u10438
 10164  0004F2  D009               	goto	u10439
 10165  0004F4                     u10438:
 10166  0004F4  0005               	push	
 10167  0004F6  6EFA               	movwf	pclath,c
 10168  0004F8  51F9               	movf	_rxPayload& (0+255),w,b
 10169  0004FA  6EFD               	movwf	tosl,c
 10170  0004FC  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 10171  0004FE  6EFE               	movwf	tosh,c
 10172  000500  6AFF               	clrf	tosu,c
 10173  000502  50FA               	movf	pclath,w,c
 10174  000504  0012               	return		;indir
 10175  000506                     u10439:
 10176                           
 10177                           ;lorawan.c: 1254: }
 10178                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10179  000506  0102               	movlb	2	; () banked
 10180  000508  5102               	movf	(_loRa+2)& (0+255),w,b
 10181  00050A  0BF0               	andlw	-16
 10182  00050C  0909               	iorlw	9
 10183  00050E  6F02               	movwf	(_loRa+2)& (0+255),b
 10184                           
 10185                           ; BSR set to: 2
 10186                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 10187  000510  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10188                           
 10189                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 10190                           ;	Return value of _LORAWAN_RxDone is never used
 10191  000514  0012               	return	
 10192  000516                     l1930:
 10193                           
 10194                           ;lorawan.c: 1259: }
 10195                           ;lorawan.c: 1260: }
 10196                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 10197  000516  0102               	movlb	2	; () banked
 10198  000518  290E               	incf	(_loRa+14)& (0+255),w,b
 10199  00051A  E127               	bnz	l10334
 10200  00051C  290F               	incf	(_loRa+15)& (0+255),w,b
 10201  00051E  E125               	bnz	l10334
 10202  000520  2910               	incf	(_loRa+16)& (0+255),w,b
 10203  000522  E123               	bnz	l10334
 10204  000524  2911               	incf	(_loRa+17)& (0+255),w,b
 10205  000526  A4D8               	btfss	status,2,c
 10206  000528  D020               	goto	l1932
 10207                           
 10208                           ; BSR set to: 2
 10209                           ;lorawan.c: 1263: {
 10210                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 10211  00052A  0100               	movlb	0	; () banked
 10212  00052C  51F9               	movf	_rxPayload& (0+255),w,b
 10213  00052E  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 10214  000530  B4D8               	btfsc	status,2,c
 10215  000532  D013               	goto	u10469
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;lorawan.c: 1265: {
 10219                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10220  000534  0E00               	movlw	0
 10221  000536  6F60               	movwf	RxData@pData& (0+255),b
 10222  000538  0E00               	movlw	0
 10223  00053A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10224  00053C  0E00               	movlw	0
 10225  00053E  6F62               	movwf	RxData@dataLength& (0+255),b
 10226  000540  0E05               	movlw	5
 10227  000542  6F63               	movwf	RxData@status& (0+255),b
 10228  000544  D801               	call	u10468
 10229  000546  D009               	goto	u10469
 10230  000548                     u10468:
 10231  000548  0005               	push	
 10232  00054A  6EFA               	movwf	pclath,c
 10233  00054C  51F9               	movf	_rxPayload& (0+255),w,b
 10234  00054E  6EFD               	movwf	tosl,c
 10235  000550  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 10236  000552  6EFE               	movwf	tosh,c
 10237  000554  6AFF               	clrf	tosu,c
 10238  000556  50FA               	movf	pclath,w,c
 10239  000558  0012               	return		;indir
 10240  00055A                     u10469:
 10241                           
 10242                           ;lorawan.c: 1267: }
 10243                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10244  00055A  0102               	movlb	2	; () banked
 10245  00055C  5102               	movf	(_loRa+2)& (0+255),w,b
 10246  00055E  0BF0               	andlw	-16
 10247  000560  0909               	iorlw	9
 10248  000562  6F02               	movwf	(_loRa+2)& (0+255),b
 10249                           
 10250                           ; BSR set to: 2
 10251                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 10252  000564  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10253                           
 10254                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10255                           ;	Return value of _LORAWAN_RxDone is never used
 10256  000568  0012               	return	
 10257  00056A                     l1932:
 10258  00056A                     l10334:
 10259                           
 10260                           ;lorawan.c: 1272: }
 10261                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 10262  00056A  0102               	movlb	2	; () banked
 10263  00056C  5102               	movf	(_loRa+2)& (0+255),w,b
 10264  00056E  0B0F               	andlw	15
 10265  000570  0A08               	xorlw	8
 10266  000572  A4D8               	btfss	status,2,c
 10267  000574  D008               	goto	l1934
 10268                           
 10269                           ; BSR set to: 2
 10270                           ;lorawan.c: 1275: {
 10271                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 10272  000576  51D5               	movf	(_loRa+213)& (0+255),w,b
 10273  000578  EC89  F03C         	call	_SwTimerStop
 10274                           
 10275                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 10276  00057C  0102               	movlb	2	; () banked
 10277  00057E  51D6               	movf	(_loRa+214)& (0+255),w,b
 10278  000580  EC89  F03C         	call	_SwTimerStop
 10279                           
 10280                           ;lorawan.c: 1278: }
 10281  000584  D009               	goto	l1936
 10282  000586                     l1934:
 10283                           
 10284                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 10285  000586  0102               	movlb	2	; () banked
 10286  000588  5102               	movf	(_loRa+2)& (0+255),w,b
 10287  00058A  0B0F               	andlw	15
 10288  00058C  0A03               	xorlw	3
 10289  00058E  A4D8               	btfss	status,2,c
 10290  000590  D003               	goto	l1936
 10291                           
 10292                           ; BSR set to: 2
 10293                           ;lorawan.c: 1280: {
 10294                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 10295  000592  51D6               	movf	(_loRa+214)& (0+255),w,b
 10296  000594  EC89  F03C         	call	_SwTimerStop
 10297  000598                     l1936:
 10298                           
 10299                           ;lorawan.c: 1282: }
 10300                           ;lorawan.c: 1284: buffer = buffer + 8;
 10301  000598  0E08               	movlw	8
 10302  00059A  0101               	movlb	1	; () banked
 10303  00059C  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10304  00059E  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 10305  0005A0  0E00               	movlw	0
 10306  0005A2  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10307  0005A4  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 10308                           
 10309                           ; BSR set to: 1
 10310                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 10311  0005A6  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10312  0005A8  0100               	movlb	0	; () banked
 10313  0005AA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 10314  0005AC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 10315  0005AE  EE20 F005          	lfsr	2,5
 10316  0005B2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10317  0005B4  26D9               	addwf	fsr2l,f,c
 10318  0005B6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10319  0005B8  22DA               	addwfc	fsr2h,f,c
 10320  0005BA  50DF               	movf	223,w,c
 10321  0005BC  0B0F               	andlw	15
 10322  0005BE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 10323  0005C0  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 10324  0005C2  0E0C               	movlw	12
 10325  0005C4  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10326  0005C6  0E00               	movlw	0
 10327  0005C8  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10328  0005CA  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10329  0005CC  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10330  0005CE  E104               	bnz	u10490
 10331  0005D0  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10332  0005D2  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10333  0005D4  B4D8               	btfsc	status,2,c
 10334  0005D6  D037               	goto	l1937
 10335  0005D8                     u10490:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;lorawan.c: 1287: {
 10339                           ;lorawan.c: 1288: fPort = *(buffer++);
 10340  0005D8  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10341  0005DC  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10342  0005E0  50DF               	movf	indf2,w,c
 10343  0005E2  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 10344                           
 10345                           ; BSR set to: 0
 10346  0005E4  0101               	movlb	1	; () banked
 10347  0005E6  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 10348  0005E8  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 10352  0005EA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10353  0005EC  0FF4               	addlw	244
 10354  0005EE  0100               	movlb	0	; () banked
 10355  0005F0  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 10359  0005F2  0E19               	movlw	25
 10360  0005F4  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 10364  0005F6  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 10365  0005FA  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 10366  0005FE  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 10367  000600  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 10368  000602  0E01               	movlw	1
 10369  000604  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 10370  000606  C20E  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 10371  00060A  C20F  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 10372  00060E  C210  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 10373  000612  C211  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 10374  000616  0E76               	movlw	low (_loRa+118)
 10375  000618  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 10376  00061A  0E02               	movlw	high (_loRa+118)
 10377  00061C  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 10378  00061E  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 10379  000622  0E9F               	movlw	low _radioBuffer
 10380  000624  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 10381  000626  0E05               	movlw	high _radioBuffer
 10382  000628  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 10383  00062A  0E01               	movlw	1
 10384  00062C  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 10385  00062E  EC3E  F01D         	call	_EncryptFRMPayload	;wreg free
 10386                           
 10387                           ;lorawan.c: 1294: packet = buffer - 1;
 10388  000632  0EFF               	movlw	255
 10389  000634  0101               	movlb	1	; () banked
 10390  000636  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10391  000638  0100               	movlb	0	; () banked
 10392  00063A  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 10393  00063C  0EFF               	movlw	255
 10394  00063E  0101               	movlb	1	; () banked
 10395  000640  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10396  000642  0100               	movlb	0	; () banked
 10397  000644  D005               	goto	L6
 10398  000646                     l1937:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;lorawan.c: 1296: else
 10402                           ;lorawan.c: 1297: {
 10403                           ;lorawan.c: 1298: frmPayloadLength = 0;
 10404                           
 10405                           ; BSR set to: 0
 10406  000646  0E00               	movlw	0
 10407  000648  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;lorawan.c: 1299: packet = (0);
 10411  00064A  0E00               	movlw	0
 10412  00064C  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 10413  00064E  0E00               	movlw	0
 10414  000650                     L6:
 10415  000650  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;lorawan.c: 1300: }
 10419                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 10420                           
 10421                           ; BSR set to: 0
 10422  000652  0102               	movlb	2	; () banked
 10423  000654  8303               	bsf	(_loRa+3)& (0+255),1,b
 10424                           
 10425                           ; BSR set to: 2
 10426                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 10427  000656  9102               	bcf	(_loRa+2)& (0+255),0,b
 10428  000658  9302               	bcf	(_loRa+2)& (0+255),1,b
 10429  00065A  9502               	bcf	(_loRa+2)& (0+255),2,b
 10430  00065C  9702               	bcf	(_loRa+2)& (0+255),3,b
 10431                           
 10432                           ; BSR set to: 2
 10433                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 10434  00065E  0100               	movlb	0	; () banked
 10435  000660  51F9               	movf	_rxPayload& (0+255),w,b
 10436  000662  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 10437  000664  B4D8               	btfsc	status,2,c
 10438  000666  D013               	goto	u10519
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;lorawan.c: 1306: {
 10442                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 10443  000668  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 10444  00066C  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 10445  000670  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 10446  000674  0E01               	movlw	1
 10447  000676  6F63               	movwf	RxData@status& (0+255),b
 10448  000678  D801               	call	u10518
 10449  00067A  D009               	goto	u10519
 10450  00067C                     u10518:
 10451  00067C  0005               	push	
 10452  00067E  6EFA               	movwf	pclath,c
 10453  000680  51F9               	movf	_rxPayload& (0+255),w,b
 10454  000682  6EFD               	movwf	tosl,c
 10455  000684  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 10456  000686  6EFE               	movwf	tosh,c
 10457  000688  6AFF               	clrf	tosu,c
 10458  00068A  50FA               	movf	pclath,w,c
 10459  00068C  0012               	return		;indir
 10460  00068E                     u10519:
 10461                           
 10462                           ;lorawan.c: 1308: }
 10463                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10464  00068E  0102               	movlb	2	; () banked
 10465  000690  5102               	movf	(_loRa+2)& (0+255),w,b
 10466  000692  0BF0               	andlw	-16
 10467  000694  0909               	iorlw	9
 10468  000696  6F02               	movwf	(_loRa+2)& (0+255),b
 10469                           
 10470                           ; BSR set to: 2
 10471                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 10472  000698  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10473                           
 10474                           ;lorawan.c: 1312: return MAC_OK;
 10475                           ;	Return value of _LORAWAN_RxDone is never used
 10476  00069C  0012               	return	
 10477  00069E                     l1921:
 10478                           
 10479                           ;lorawan.c: 1313: }
 10480                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 10481  00069E  0100               	movlb	0	; () banked
 10482  0006A0  EE20 F001          	lfsr	2,1
 10483  0006A4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10484  0006A6  26D9               	addwf	fsr2l,f,c
 10485  0006A8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10486  0006AA  22DA               	addwfc	fsr2h,f,c
 10487  0006AC  0102               	movlb	2	; () banked
 10488  0006AE  511E               	movf	(_loRa+30)& (0+255),w,b
 10489  0006B0  18DE               	xorwf	postinc2,w,c
 10490  0006B2  E10A               	bnz	u10520
 10491  0006B4  511F               	movf	(_loRa+31)& (0+255),w,b
 10492  0006B6  18DE               	xorwf	postinc2,w,c
 10493  0006B8  E107               	bnz	u10520
 10494  0006BA  5120               	movf	(_loRa+32)& (0+255),w,b
 10495  0006BC  18DE               	xorwf	postinc2,w,c
 10496  0006BE  E104               	bnz	u10520
 10497  0006C0  5121               	movf	(_loRa+33)& (0+255),w,b
 10498  0006C2  18DE               	xorwf	postinc2,w,c
 10499  0006C4  B4D8               	btfsc	status,2,c
 10500  0006C6  D00E               	goto	l1940
 10501  0006C8                     u10520:
 10502                           
 10503                           ; BSR set to: 2
 10504                           ;lorawan.c: 1317: {
 10505                           ;lorawan.c: 1318: SetReceptionNotOkState();
 10506  0006C8  EC16  F033         	call	_SetReceptionNotOkState	;wreg free
 10507                           
 10508                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 10509  0006CC  0E02               	movlw	2
 10510  0006CE  0102               	movlb	2	; () banked
 10511  0006D0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10512  0006D2  A4D8               	btfss	status,2,c
 10513  0006D4  0012               	return	
 10514                           
 10515                           ; BSR set to: 2
 10516                           ;lorawan.c: 1320: {
 10517                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10518  0006D6  5102               	movf	(_loRa+2)& (0+255),w,b
 10519  0006D8  0BF0               	andlw	-16
 10520  0006DA  0909               	iorlw	9
 10521  0006DC  6F02               	movwf	(_loRa+2)& (0+255),b
 10522                           
 10523                           ; BSR set to: 2
 10524                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 10525  0006DE  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10526                           
 10527                           ;lorawan.c: 1323: }
 10528                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 10529                           ;	Return value of _LORAWAN_RxDone is never used
 10530  0006E2  0012               	return	
 10531  0006E4                     l1940:
 10532                           
 10533                           ;lorawan.c: 1325: }
 10534                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 10535  0006E4  0100               	movlb	0	; () banked
 10536  0006E6  EE20 F006          	lfsr	2,6
 10537  0006EA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10538  0006EC  26D9               	addwf	fsr2l,f,c
 10539  0006EE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10540  0006F0  22DA               	addwfc	fsr2h,f,c
 10541  0006F2  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10542  0006F6  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10543  0006FA  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10544  0006FE  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10545  000702  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10546  000704  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10547  000706  0101               	movlb	1	; () banked
 10548  000708  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10549  00070A  0FFC               	addlw	252
 10550  00070C  0100               	movlb	0	; () banked
 10551  00070E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10552  000710  0E49               	movlw	73
 10553  000712  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10554  000714  0E00               	movlw	0
 10555  000716  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10556  000718  0E01               	movlw	1
 10557  00071A  ECDD  F028         	call	_AssembleEncryptionBlock
 10558                           
 10559                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10560  00071E  0E9F               	movlw	low _radioBuffer
 10561  000720  0100               	movlb	0	; () banked
 10562  000722  6F60               	movwf	memcpy@d1& (0+255),b
 10563  000724  0E05               	movlw	high _radioBuffer
 10564  000726  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10565  000728  0EAA               	movlw	low _aesBuffer
 10566  00072A  6F62               	movwf	memcpy@s1& (0+255),b
 10567  00072C  0E01               	movlw	high _aesBuffer
 10568  00072E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10569  000730  0E00               	movlw	0
 10570  000732  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10571  000734  0E10               	movlw	16
 10572  000736  6F64               	movwf	memcpy@n& (0+255),b
 10573  000738  EC3E  F036         	call	_memcpy	;wreg free
 10574                           
 10575                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10576  00073C  0EAF               	movlw	low (_radioBuffer+16)
 10577  00073E  0100               	movlb	0	; () banked
 10578  000740  6F60               	movwf	memcpy@d1& (0+255),b
 10579  000742  0E05               	movlw	high (_radioBuffer+16)
 10580  000744  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10581  000746  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10582  00074A  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10583  00074E  0EFC               	movlw	252
 10584  000750  0101               	movlb	1	; () banked
 10585  000752  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10586  000754  0100               	movlb	0	; () banked
 10587  000756  6F64               	movwf	memcpy@n& (0+255),b
 10588  000758  6B65               	clrf	(memcpy@n+1)& (0+255),b
 10589  00075A  0EFF               	movlw	255
 10590  00075C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 10591  00075E  EC3E  F036         	call	_memcpy	;wreg free
 10592                           
 10593                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10594  000762  0E22               	movlw	low (_loRa+34)
 10595  000764  0100               	movlb	0	; () banked
 10596  000766  6FB9               	movwf	AESCmac@key& (0+255),b
 10597  000768  0E02               	movlw	high (_loRa+34)
 10598  00076A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 10599  00076C  0EAA               	movlw	low _aesBuffer
 10600  00076E  6FBB               	movwf	AESCmac@output& (0+255),b
 10601  000770  0E01               	movlw	high _aesBuffer
 10602  000772  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 10603  000774  0E9F               	movlw	low _radioBuffer
 10604  000776  6FBD               	movwf	AESCmac@input& (0+255),b
 10605  000778  0E05               	movlw	high _radioBuffer
 10606  00077A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 10607  00077C  0101               	movlb	1	; () banked
 10608  00077E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10609  000780  0F0C               	addlw	12
 10610  000782  0100               	movlb	0	; () banked
 10611  000784  6FBF               	movwf	AESCmac@size& (0+255),b
 10612  000786  EC6C  F00F         	call	_AESCmac	;wreg free
 10613                           
 10614                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10615  00078A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 10616  00078C  0100               	movlb	0	; () banked
 10617  00078E  6F60               	movwf	memcpy@d1& (0+255),b
 10618  000790  0E00               	movlw	high LORAWAN_RxDone@computedMic
 10619  000792  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10620  000794  0EAA               	movlw	low _aesBuffer
 10621  000796  6F62               	movwf	memcpy@s1& (0+255),b
 10622  000798  0E01               	movlw	high _aesBuffer
 10623  00079A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10624  00079C  0E00               	movlw	0
 10625  00079E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10626  0007A0  0E04               	movlw	4
 10627  0007A2  6F64               	movwf	memcpy@n& (0+255),b
 10628  0007A4  EC3E  F036         	call	_memcpy	;wreg free
 10629                           
 10630                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10631  0007A8  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10632  0007AC  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10633  0007B0  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10634  0007B4  EC28  F037         	call	_ExtractMic	;wreg free
 10635  0007B8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10636  0007BC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10637  0007C0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10638  0007C4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10639                           
 10640                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 10641  0007C8  0100               	movlb	0	; () banked
 10642  0007CA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10643  0007CC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10644  0007CE  E10A               	bnz	u10540
 10645  0007D0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10646  0007D2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10647  0007D4  E107               	bnz	u10540
 10648  0007D6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10649  0007D8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10650  0007DA  E104               	bnz	u10540
 10651  0007DC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10652  0007DE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10653  0007E0  B4D8               	btfsc	status,2,c
 10654  0007E2  D00E               	goto	l1942
 10655  0007E4                     u10540:
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;lorawan.c: 1337: {
 10659                           ;lorawan.c: 1338: SetReceptionNotOkState();
 10660  0007E4  EC16  F033         	call	_SetReceptionNotOkState	;wreg free
 10661                           
 10662                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 10663  0007E8  0E02               	movlw	2
 10664  0007EA  0102               	movlb	2	; () banked
 10665  0007EC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10666  0007EE  A4D8               	btfss	status,2,c
 10667  0007F0  0012               	return	
 10668                           
 10669                           ; BSR set to: 2
 10670                           ;lorawan.c: 1340: {
 10671                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10672  0007F2  5102               	movf	(_loRa+2)& (0+255),w,b
 10673  0007F4  0BF0               	andlw	-16
 10674  0007F6  0909               	iorlw	9
 10675  0007F8  6F02               	movwf	(_loRa+2)& (0+255),b
 10676                           
 10677                           ; BSR set to: 2
 10678                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 10679  0007FA  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10680                           
 10681                           ;lorawan.c: 1343: }
 10682                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 10683                           ;	Return value of _LORAWAN_RxDone is never used
 10684  0007FE  0012               	return	
 10685  000800                     l1942:
 10686                           
 10687                           ;lorawan.c: 1345: }
 10688                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 10689  000800  0100               	movlb	0	; () banked
 10690  000802  EE20 F006          	lfsr	2,6
 10691  000806  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10692  000808  26D9               	addwf	fsr2l,f,c
 10693  00080A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10694  00080C  22DA               	addwfc	fsr2h,f,c
 10695  00080E  0102               	movlb	2	; () banked
 10696  000810  510A               	movf	(_loRa+10)& (0+255),w,b
 10697  000812  5CDE               	subwf	postinc2,w,c
 10698  000814  510B               	movf	(_loRa+11)& (0+255),w,b
 10699  000816  58DE               	subwfb	postinc2,w,c
 10700  000818  A0D8               	btfss	status,0,c
 10701  00081A  D05C               	goto	l1944
 10702                           
 10703                           ; BSR set to: 2
 10704                           ;lorawan.c: 1349: {
 10705                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 10706  00081C  0100               	movlb	0	; () banked
 10707  00081E  EE20 F006          	lfsr	2,6
 10708  000822  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10709  000824  26D9               	addwf	fsr2l,f,c
 10710  000826  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10711  000828  22DA               	addwfc	fsr2h,f,c
 10712  00082A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10713  00082E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10714  000832  EE22  F00A         	lfsr	2,_loRa+10
 10715  000836  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 10716  00083A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 10717  00083E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10718  000840  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10719  000842  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10720  000844  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10721  000846  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10722  000848  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10723  00084A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10724  00084C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10725  00084E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10726  000850  0102               	movlb	2	; () banked
 10727  000852  5D8E               	subwf	(_loRa+142)& (0+255),w,b
 10728  000854  0100               	movlb	0	; () banked
 10729  000856  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10730  000858  0102               	movlb	2	; () banked
 10731  00085A  598F               	subwfb	(_loRa+143)& (0+255),w,b
 10732  00085C  B0D8               	btfsc	status,0,c
 10733  00085E  D02E               	goto	l1945
 10734                           
 10735                           ; BSR set to: 2
 10736                           ;lorawan.c: 1351: {
 10737                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 10738  000860  9100               	bcf	_loRa& (0+255),0,b
 10739                           
 10740                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 10741  000862  9102               	bcf	(_loRa+2)& (0+255),0,b
 10742  000864  9302               	bcf	(_loRa+2)& (0+255),1,b
 10743  000866  9502               	bcf	(_loRa+2)& (0+255),2,b
 10744  000868  9702               	bcf	(_loRa+2)& (0+255),3,b
 10745                           
 10746                           ; BSR set to: 2
 10747                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 10748  00086A  0100               	movlb	0	; () banked
 10749  00086C  51F9               	movf	_rxPayload& (0+255),w,b
 10750  00086E  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 10751  000870  B4D8               	btfsc	status,2,c
 10752  000872  D016               	goto	u10599
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;lorawan.c: 1355: {
 10756                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 10757  000874  0102               	movlb	2	; () banked
 10758  000876  9B00               	bcf	_loRa& (0+255),5,b
 10759                           
 10760                           ; BSR set to: 2
 10761                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10762  000878  0E00               	movlw	0
 10763  00087A  0100               	movlb	0	; () banked
 10764  00087C  6F60               	movwf	RxData@pData& (0+255),b
 10765  00087E  0E00               	movlw	0
 10766  000880  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10767  000882  0E00               	movlw	0
 10768  000884  6F62               	movwf	RxData@dataLength& (0+255),b
 10769  000886  0E00               	movlw	0
 10770  000888  6F63               	movwf	RxData@status& (0+255),b
 10771  00088A  D801               	call	u10598
 10772  00088C  D009               	goto	u10599
 10773  00088E                     u10598:
 10774  00088E  0005               	push	
 10775  000890  6EFA               	movwf	pclath,c
 10776  000892  51F9               	movf	_rxPayload& (0+255),w,b
 10777  000894  6EFD               	movwf	tosl,c
 10778  000896  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 10779  000898  6EFE               	movwf	tosh,c
 10780  00089A  6AFF               	clrf	tosu,c
 10781  00089C  50FA               	movf	pclath,w,c
 10782  00089E  0012               	return		;indir
 10783  0008A0                     u10599:
 10784                           
 10785                           ;lorawan.c: 1358: }
 10786                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 10787  0008A0  0102               	movlb	2	; () banked
 10788  0008A2  9303               	bcf	(_loRa+3)& (0+255),1,b
 10789                           
 10790                           ; BSR set to: 2
 10791                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 10792  0008A4  8304               	bsf	(_loRa+4)& (0+255),1,b
 10793                           
 10794                           ; BSR set to: 2
 10795                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 10796  0008A6  0E02               	movlw	2
 10797  0008A8  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10798  0008AA  A4D8               	btfss	status,2,c
 10799  0008AC  0012               	return	
 10800                           
 10801                           ; BSR set to: 2
 10802                           ;lorawan.c: 1364: {
 10803                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10804  0008AE  5102               	movf	(_loRa+2)& (0+255),w,b
 10805  0008B0  0BF0               	andlw	-16
 10806  0008B2  0909               	iorlw	9
 10807  0008B4  6F02               	movwf	(_loRa+2)& (0+255),b
 10808                           
 10809                           ; BSR set to: 2
 10810                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 10811  0008B6  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10812                           
 10813                           ;lorawan.c: 1367: }
 10814                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10815                           ;	Return value of _LORAWAN_RxDone is never used
 10816  0008BA  0012               	return	
 10817  0008BC                     l1945:
 10818                           
 10819                           ;lorawan.c: 1370: else
 10820                           ;lorawan.c: 1371: {
 10821                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 10822  0008BC  0100               	movlb	0	; () banked
 10823  0008BE  EE20 F006          	lfsr	2,6
 10824  0008C2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10825  0008C4  26D9               	addwf	fsr2l,f,c
 10826  0008C6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10827  0008C8  22DA               	addwfc	fsr2h,f,c
 10828  0008CA  CFDE F20A          	movff	postinc2,_loRa+10
 10829  0008CE  CFDD F20B          	movff	postdec2,_loRa+11
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;lorawan.c: 1373: }
 10833                           ;lorawan.c: 1374: }
 10834  0008D2  D02E               	goto	l1951
 10835  0008D4                     l1944:
 10836                           
 10837                           ;lorawan.c: 1375: else
 10838                           ;lorawan.c: 1376: {
 10839                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 10840                           
 10841                           ; BSR set to: 0
 10842  0008D4  0100               	movlb	0	; () banked
 10843  0008D6  EE20 F006          	lfsr	2,6
 10844  0008DA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10845  0008DC  26D9               	addwf	fsr2l,f,c
 10846  0008DE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10847  0008E0  22DA               	addwfc	fsr2h,f,c
 10848  0008E2  50DE               	movf	postinc2,w,c
 10849  0008E4  10DE               	iorwf	postinc2,w,c
 10850  0008E6  A4D8               	btfss	status,2,c
 10851  0008E8  D015               	goto	l1950
 10852                           
 10853                           ; BSR set to: 0
 10854  0008EA  0102               	movlb	2	; () banked
 10855  0008EC  290A               	incf	(_loRa+10)& (0+255),w,b
 10856  0008EE  E112               	bnz	l10446
 10857  0008F0  290B               	incf	(_loRa+11)& (0+255),w,b
 10858  0008F2  A4D8               	btfss	status,2,c
 10859  0008F4  D00F               	goto	l1950
 10860                           
 10861                           ; BSR set to: 2
 10862                           ;lorawan.c: 1378: {
 10863                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 10864  0008F6  0100               	movlb	0	; () banked
 10865  0008F8  EE20 F006          	lfsr	2,6
 10866  0008FC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10867  0008FE  26D9               	addwf	fsr2l,f,c
 10868  000900  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10869  000902  22DA               	addwfc	fsr2h,f,c
 10870  000904  CFDE F20A          	movff	postinc2,_loRa+10
 10871  000908  CFDD F20B          	movff	postdec2,_loRa+11
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 10875  00090C  0102               	movlb	2	; () banked
 10876  00090E  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 10877  000910  2B0D               	incf	(_loRa+13)& (0+255),f,b
 10878                           
 10879                           ;lorawan.c: 1382: }
 10880  000912  D00E               	goto	l1951
 10881  000914                     l1950:
 10882  000914                     l10446:
 10883                           
 10884                           ;lorawan.c: 1383: else
 10885                           ;lorawan.c: 1384: {
 10886                           ;lorawan.c: 1385: SetReceptionNotOkState();
 10887  000914  EC16  F033         	call	_SetReceptionNotOkState	;wreg free
 10888                           
 10889                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 10890  000918  0E02               	movlw	2
 10891  00091A  0102               	movlb	2	; () banked
 10892  00091C  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10893  00091E  A4D8               	btfss	status,2,c
 10894  000920  0012               	return	
 10895                           
 10896                           ; BSR set to: 2
 10897                           ;lorawan.c: 1387: {
 10898                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10899  000922  5102               	movf	(_loRa+2)& (0+255),w,b
 10900  000924  0BF0               	andlw	-16
 10901  000926  0909               	iorlw	9
 10902  000928  6F02               	movwf	(_loRa+2)& (0+255),b
 10903                           
 10904                           ; BSR set to: 2
 10905                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 10906  00092A  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10907                           
 10908                           ;lorawan.c: 1390: }
 10909                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 10910                           ;	Return value of _LORAWAN_RxDone is never used
 10911  00092E  0012               	return	
 10912  000930                     l1951:
 10913                           
 10914                           ;lorawan.c: 1393: }
 10915                           ;lorawan.c: 1394: }
 10916                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 10917  000930  0102               	movlb	2	; () banked
 10918  000932  290A               	incf	(_loRa+10)& (0+255),w,b
 10919  000934  E113               	bnz	l10468
 10920  000936  290B               	incf	(_loRa+11)& (0+255),w,b
 10921  000938  E111               	bnz	l10468
 10922  00093A  290C               	incf	(_loRa+12)& (0+255),w,b
 10923  00093C  E10F               	bnz	l10468
 10924  00093E  290D               	incf	(_loRa+13)& (0+255),w,b
 10925  000940  A4D8               	btfss	status,2,c
 10926  000942  D00C               	goto	l1953
 10927                           
 10928                           ; BSR set to: 2
 10929                           ;lorawan.c: 1397: {
 10930                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 10931  000944  8304               	bsf	(_loRa+4)& (0+255),1,b
 10932                           
 10933                           ; BSR set to: 2
 10934                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 10935  000946  0E02               	movlw	2
 10936  000948  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10937  00094A  A4D8               	btfss	status,2,c
 10938  00094C  0012               	return	
 10939                           
 10940                           ; BSR set to: 2
 10941                           ;lorawan.c: 1402: {
 10942                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10943  00094E  5102               	movf	(_loRa+2)& (0+255),w,b
 10944  000950  0BF0               	andlw	-16
 10945  000952  0909               	iorlw	9
 10946  000954  6F02               	movwf	(_loRa+2)& (0+255),b
 10947                           
 10948                           ; BSR set to: 2
 10949                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 10950  000956  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10951                           
 10952                           ;lorawan.c: 1405: }
 10953                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10954                           ;	Return value of _LORAWAN_RxDone is never used
 10955  00095A  0012               	return	
 10956  00095C                     l1953:
 10957  00095C                     l10468:
 10958                           
 10959                           ;lorawan.c: 1407: }
 10960                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 10961  00095C  0102               	movlb	2	; () banked
 10962  00095E  5102               	movf	(_loRa+2)& (0+255),w,b
 10963  000960  0B0F               	andlw	15
 10964  000962  0A03               	xorlw	3
 10965  000964  A4D8               	btfss	status,2,c
 10966  000966  D003               	goto	l1955
 10967                           
 10968                           ; BSR set to: 2
 10969                           ;lorawan.c: 1411: {
 10970                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 10971  000968  51D6               	movf	(_loRa+214)& (0+255),w,b
 10972  00096A  EC89  F03C         	call	_SwTimerStop
 10973  00096E                     l1955:
 10974                           
 10975                           ;lorawan.c: 1413: }
 10976                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 10977  00096E  0E01               	movlw	1
 10978  000970  0102               	movlb	2	; () banked
 10979  000972  6FC9               	movwf	(_loRa+201)& (0+255),b
 10980                           
 10981                           ; BSR set to: 2
 10982                           ;lorawan.c: 1417: CheckFlags (hdr);
 10983  000974  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 10984  000978  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 10985  00097C  EC9D  F036         	call	_CheckFlags	;wreg free
 10986                           
 10987                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 10988  000980  0100               	movlb	0	; () banked
 10989  000982  EE20 F005          	lfsr	2,5
 10990  000986  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10991  000988  26D9               	addwf	fsr2l,f,c
 10992  00098A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10993  00098C  22DA               	addwfc	fsr2h,f,c
 10994  00098E  50DF               	movf	223,w,c
 10995  000990  0B0F               	andlw	15
 10996  000992  0900               	iorlw	0
 10997  000994  B4D8               	btfsc	status,2,c
 10998  000996  D016               	goto	l1956
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;lorawan.c: 1420: {
 11002                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11003  000998  0E08               	movlw	8
 11004  00099A  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11005  00099C  6FBD               	movwf	MacExecuteCommands@buffer& (0+255),b
 11006  00099E  0E00               	movlw	0
 11007  0009A0  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11008  0009A2  6FBE               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11009  0009A4  EE20 F005          	lfsr	2,5
 11010  0009A8  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11011  0009AA  26D9               	addwf	fsr2l,f,c
 11012  0009AC  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11013  0009AE  22DA               	addwfc	fsr2h,f,c
 11014  0009B0  50DF               	movf	223,w,c
 11015  0009B2  0B0F               	andlw	15
 11016  0009B4  6FBF               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11017  0009B6  ECE6  F012         	call	_MacExecuteCommands	;wreg free
 11018  0009BA  C0BD  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11019  0009BE  C0BE  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11020                           
 11021                           ;lorawan.c: 1422: }
 11022  0009C2  D007               	goto	l1957
 11023  0009C4                     l1956:
 11024                           
 11025                           ;lorawan.c: 1423: else
 11026                           ;lorawan.c: 1424: {
 11027                           ;lorawan.c: 1425: buffer = buffer + 8;
 11028  0009C4  0E08               	movlw	8
 11029  0009C6  0101               	movlb	1	; () banked
 11030  0009C8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11031  0009CA  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11032  0009CC  0E00               	movlw	0
 11033  0009CE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11034  0009D0  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11035  0009D2                     l1957:
 11036                           
 11037                           ;lorawan.c: 1426: }
 11038                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11039                           
 11040                           ; BSR set to: 1
 11041  0009D2  0101               	movlb	1	; () banked
 11042  0009D4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11043  0009D6  0100               	movlb	0	; () banked
 11044  0009D8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11045  0009DA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11046  0009DC  EE20 F005          	lfsr	2,5
 11047  0009E0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11048  0009E2  26D9               	addwf	fsr2l,f,c
 11049  0009E4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11050  0009E6  22DA               	addwfc	fsr2h,f,c
 11051  0009E8  50DF               	movf	223,w,c
 11052  0009EA  0B0F               	andlw	15
 11053  0009EC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11054  0009EE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11055  0009F0  0E0C               	movlw	12
 11056  0009F2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11057  0009F4  0E00               	movlw	0
 11058  0009F6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11059  0009F8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11060  0009FA  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11061  0009FC  E104               	bnz	u10680
 11062  0009FE  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11063  000A00  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11064  000A02  B4D8               	btfsc	status,2,c
 11065  000A04  D098               	goto	l1958
 11066  000A06                     u10680:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;lorawan.c: 1428: {
 11070                           ;lorawan.c: 1429: fPort = *(buffer++);
 11071  000A06  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11072  000A0A  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11073  000A0E  50DF               	movf	indf2,w,c
 11074  000A10  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11075                           
 11076                           ; BSR set to: 0
 11077  000A12  0101               	movlb	1	; () banked
 11078  000A14  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11079  000A16  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11080                           
 11081                           ; BSR set to: 1
 11082                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11083  000A18  0100               	movlb	0	; () banked
 11084  000A1A  EE20 F005          	lfsr	2,5
 11085  000A1E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11086  000A20  26D9               	addwf	fsr2l,f,c
 11087  000A22  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11088  000A24  22DA               	addwfc	fsr2h,f,c
 11089  000A26  50DF               	movf	223,w,c
 11090  000A28  0B0F               	andlw	15
 11091  000A2A  0800               	sublw	0
 11092  000A2C  0101               	movlb	1	; () banked
 11093  000A2E  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11094  000A30  0FF4               	addlw	244
 11095  000A32  0100               	movlb	0	; () banked
 11096  000A34  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11100  000A36  EE20 F005          	lfsr	2,5
 11101  000A3A  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11102  000A3C  26D9               	addwf	fsr2l,f,c
 11103  000A3E  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11104  000A40  22DA               	addwfc	fsr2h,f,c
 11105  000A42  50DF               	movf	223,w,c
 11106  000A44  0B0F               	andlw	15
 11107  000A46  0F19               	addlw	25
 11108  000A48  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;lorawan.c: 1434: if (fPort != 0)
 11112  000A4A  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11113  000A4C  B4D8               	btfsc	status,2,c
 11114  000A4E  D028               	goto	l1959
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;lorawan.c: 1435: {
 11118                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11119  000A50  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11120  000A54  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11121  000A58  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11122  000A5A  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11123  000A5C  0E01               	movlw	1
 11124  000A5E  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11125  000A60  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11126  000A64  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11127  000A68  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11128  000A6C  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11129  000A70  0E32               	movlw	low (_loRa+50)
 11130  000A72  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11131  000A74  0E02               	movlw	high (_loRa+50)
 11132  000A76  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11133  000A78  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11134  000A7C  0E9F               	movlw	low _radioBuffer
 11135  000A7E  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11136  000A80  0E05               	movlw	high _radioBuffer
 11137  000A82  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11138  000A84  0E00               	movlw	0
 11139  000A86  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11140  000A88  EC3E  F01D         	call	_EncryptFRMPayload	;wreg free
 11141                           
 11142                           ;lorawan.c: 1437: packet = buffer - 1;
 11143  000A8C  0EFF               	movlw	255
 11144  000A8E  0101               	movlb	1	; () banked
 11145  000A90  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11146  000A92  0100               	movlb	0	; () banked
 11147  000A94  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11148  000A96  0EFF               	movlw	255
 11149  000A98  0101               	movlb	1	; () banked
 11150  000A9A  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11151  000A9C  0100               	movlb	0	; () banked
 11152  000A9E  D050               	goto	L25
 11153  000AA0                     l1959:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;lorawan.c: 1439: else
 11157                           ;lorawan.c: 1440: {
 11158                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11159                           
 11160                           ; BSR set to: 0
 11161  000AA0  0101               	movlb	1	; () banked
 11162  000AA2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11163  000AA4  0100               	movlb	0	; () banked
 11164  000AA6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11165  000AA8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11166  000AAA  EE20 F005          	lfsr	2,5
 11167  000AAE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11168  000AB0  26D9               	addwf	fsr2l,f,c
 11169  000AB2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11170  000AB4  22DA               	addwfc	fsr2h,f,c
 11171  000AB6  50DF               	movf	223,w,c
 11172  000AB8  0B0F               	andlw	15
 11173  000ABA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11174  000ABC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11175  000ABE  0E0D               	movlw	13
 11176  000AC0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11177  000AC2  0E00               	movlw	0
 11178  000AC4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11179  000AC6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11180  000AC8  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11181  000ACA  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11182  000ACC  0A80               	xorlw	128
 11183  000ACE  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11184  000AD0  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11185  000AD2  0A80               	xorlw	128
 11186  000AD4  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11187  000AD6  B0D8               	btfsc	status,0,c
 11188  000AD8  D02B               	goto	l1961
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;lorawan.c: 1443: {
 11192                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11193  000ADA  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11194  000ADE  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11195  000AE2  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11196  000AE4  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11197  000AE6  0E01               	movlw	1
 11198  000AE8  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11199  000AEA  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11200  000AEE  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11201  000AF2  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11202  000AF6  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11203  000AFA  0E22               	movlw	low (_loRa+34)
 11204  000AFC  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11205  000AFE  0E02               	movlw	high (_loRa+34)
 11206  000B00  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11207  000B02  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11208  000B06  0E9F               	movlw	low _radioBuffer
 11209  000B08  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11210  000B0A  0E05               	movlw	high _radioBuffer
 11211  000B0C  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11212  000B0E  0E00               	movlw	0
 11213  000B10  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11214  000B12  EC3E  F01D         	call	_EncryptFRMPayload	;wreg free
 11215                           
 11216                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11217  000B16  C166  F0BD         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11218  000B1A  C167  F0BE         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11219  000B1E  0100               	movlb	0	; () banked
 11220  000B20  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11221  000B22  6FBF               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11222  000B24  ECE6  F012         	call	_MacExecuteCommands	;wreg free
 11223  000B28  C0BD  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11224  000B2C  C0BE  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11225  000B30                     l1961:
 11226                           
 11227                           ;lorawan.c: 1447: }
 11228                           ;lorawan.c: 1449: frmPayloadLength = 0;
 11229  000B30  0E00               	movlw	0
 11230  000B32  0100               	movlb	0	; () banked
 11231  000B34  D001               	goto	L8
 11232  000B36                     l1958:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;lorawan.c: 1453: else
 11236                           ;lorawan.c: 1454: {
 11237                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11238                           
 11239                           ; BSR set to: 0
 11240  000B36  0E00               	movlw	0
 11241  000B38                     L8:
 11242  000B38  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;lorawan.c: 1456: packet = (0);
 11246  000B3A  0E00               	movlw	0
 11247  000B3C  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11248  000B3E  0E00               	movlw	0
 11249  000B40                     L25:
 11250  000B40  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11251                           
 11252                           ; BSR set to: 0
 11253                           ;lorawan.c: 1457: }
 11254                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11255                           
 11256                           ; BSR set to: 0
 11257  000B42  0E01               	movlw	1
 11258  000B44  0102               	movlb	2	; () banked
 11259  000B46  6FC9               	movwf	(_loRa+201)& (0+255),b
 11260                           
 11261                           ; BSR set to: 2
 11262                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11263  000B48  0E00               	movlw	0
 11264  000B4A  6FC2               	movwf	(_loRa+194)& (0+255),b
 11265  000B4C  0E00               	movlw	0
 11266  000B4E  6FC1               	movwf	(_loRa+193)& (0+255),b
 11267                           
 11268                           ; BSR set to: 2
 11269                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11270  000B50  0E00               	movlw	0
 11271  000B52  6FDF               	movwf	(_loRa+223)& (0+255),b
 11272                           
 11273                           ; BSR set to: 2
 11274                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11275  000B54  9900               	bcf	_loRa& (0+255),4,b
 11276                           
 11277                           ; BSR set to: 2
 11278                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11279  000B56  8303               	bsf	(_loRa+3)& (0+255),1,b
 11280                           
 11281                           ; BSR set to: 2
 11282                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11283  000B58  A100               	btfss	_loRa& (0+255),0,b
 11284  000B5A  D054               	goto	l1963
 11285                           
 11286                           ; BSR set to: 2
 11287                           ;lorawan.c: 1468: {
 11288                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11289  000B5C  0100               	movlb	0	; () banked
 11290  000B5E  EE20 F005          	lfsr	2,5
 11291  000B62  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11292  000B64  26D9               	addwf	fsr2l,f,c
 11293  000B66  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11294  000B68  22DA               	addwfc	fsr2h,f,c
 11295  000B6A  AADF               	btfss	indf2,5,c
 11296  000B6C  D048               	goto	l1964
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;lorawan.c: 1470: {
 11300                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11301  000B6E  0102               	movlb	2	; () banked
 11302  000B70  9100               	bcf	_loRa& (0+255),0,b
 11303                           
 11304                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11305  000B72  9102               	bcf	(_loRa+2)& (0+255),0,b
 11306  000B74  9302               	bcf	(_loRa+2)& (0+255),1,b
 11307  000B76  9502               	bcf	(_loRa+2)& (0+255),2,b
 11308  000B78  9702               	bcf	(_loRa+2)& (0+255),3,b
 11309                           
 11310                           ; BSR set to: 2
 11311                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11312  000B7A  0100               	movlb	0	; () banked
 11313  000B7C  51F9               	movf	_rxPayload& (0+255),w,b
 11314  000B7E  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 11315  000B80  B4D8               	btfsc	status,2,c
 11316  000B82  D016               	goto	u10749
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;lorawan.c: 1474: {
 11320                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11321  000B84  0102               	movlb	2	; () banked
 11322  000B86  9B00               	bcf	_loRa& (0+255),5,b
 11323                           
 11324                           ; BSR set to: 2
 11325                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11326  000B88  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11327  000B8C  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11328  000B90  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11329  000B94  0E01               	movlw	1
 11330  000B96  0100               	movlb	0	; () banked
 11331  000B98  6F63               	movwf	RxData@status& (0+255),b
 11332  000B9A  D801               	call	u10748
 11333  000B9C  D009               	goto	u10749
 11334  000B9E                     u10748:
 11335  000B9E  0005               	push	
 11336  000BA0  6EFA               	movwf	pclath,c
 11337  000BA2  51F9               	movf	_rxPayload& (0+255),w,b
 11338  000BA4  6EFD               	movwf	tosl,c
 11339  000BA6  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 11340  000BA8  6EFE               	movwf	tosh,c
 11341  000BAA  6AFF               	clrf	tosu,c
 11342  000BAC  50FA               	movf	pclath,w,c
 11343  000BAE  0012               	return		;indir
 11344  000BB0                     u10749:
 11345                           
 11346                           ;lorawan.c: 1477: }
 11347                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11348  000BB0  0102               	movlb	2	; () banked
 11349  000BB2  9303               	bcf	(_loRa+3)& (0+255),1,b
 11350                           
 11351                           ; BSR set to: 2
 11352                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11353  000BB4  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11354                           
 11355                           ; BSR set to: 2
 11356  000BB6  BB00               	btfsc	_loRa& (0+255),5,b
 11357  000BB8  D06B               	goto	l1978
 11358                           
 11359                           ; BSR set to: 2
 11360  000BBA  B300               	btfsc	_loRa& (0+255),1,b
 11361  000BBC  D002               	goto	u10780
 11362                           
 11363                           ; BSR set to: 2
 11364  000BBE  A700               	btfss	_loRa& (0+255),3,b
 11365  000BC0  D067               	goto	l1978
 11366  000BC2                     u10780:
 11367                           
 11368                           ; BSR set to: 2
 11369                           ;lorawan.c: 1480: {
 11370                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11371                           
 11372                           ; BSR set to: 2
 11373  000BC2  0E01               	movlw	1
 11374  000BC4  0100               	movlb	0	; () banked
 11375  000BC6  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11376  000BC8  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 11377  000BCA  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11378  000BCC  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 11379  000BCE  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11380  000BD0  0102               	movlb	2	; () banked
 11381  000BD2  51DE               	movf	(_loRa+222)& (0+255),w,b
 11382  000BD4  ECD9  F026         	call	_SearchAvailableChannel
 11383  000BD8  0900               	iorlw	0
 11384  000BDA  A4D8               	btfss	status,2,c
 11385  000BDC  D00D               	goto	l1969
 11386                           
 11387                           ;lorawan.c: 1482: {
 11388                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 11389  000BDE  0E00               	movlw	0
 11390  000BE0  0100               	movlb	0	; () banked
 11391  000BE2  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 11392  000BE4  0E00               	movlw	0
 11393  000BE6  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 11394  000BE8  0E00               	movlw	0
 11395  000BEA  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11396  000BEC  0E00               	movlw	0
 11397  000BEE  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11398  000BF0  0E00               	movlw	0
 11399  000BF2  ECE6  F02C         	call	_LORAWAN_Send
 11400  000BF6  D047               	goto	l10572
 11401  000BF8                     l1969:
 11402                           
 11403                           ;lorawan.c: 1486: else
 11404                           ;lorawan.c: 1487: {
 11405                           ;lorawan.c: 1489: StartReTxTimer();
 11406                           
 11407                           ; BSR set to: 2
 11408  000BF8  EC54  F03F         	call	_StartReTxTimer	;wreg free
 11409                           
 11410                           ;lorawan.c: 1490: }
 11411                           ;lorawan.c: 1491: }
 11412                           ;lorawan.c: 1492: }
 11413  000BFC  D049               	goto	l1978
 11414  000BFE                     l1964:
 11415                           
 11416                           ;lorawan.c: 1494: else
 11417                           ;lorawan.c: 1495: {
 11418                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 11419  000BFE  EC04  F034         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 11420                           
 11421                           ;lorawan.c: 1497: }
 11422                           ;lorawan.c: 1498: }
 11423  000C02  D046               	goto	l1978
 11424  000C04                     l1963:
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;lorawan.c: 1499: else
 11428                           ;lorawan.c: 1500: {
 11429                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 11430  000C04  9102               	bcf	(_loRa+2)& (0+255),0,b
 11431  000C06  9302               	bcf	(_loRa+2)& (0+255),1,b
 11432  000C08  9502               	bcf	(_loRa+2)& (0+255),2,b
 11433  000C0A  9702               	bcf	(_loRa+2)& (0+255),3,b
 11434                           
 11435                           ; BSR set to: 2
 11436                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 11437  000C0C  0100               	movlb	0	; () banked
 11438  000C0E  51F9               	movf	_rxPayload& (0+255),w,b
 11439  000C10  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 11440  000C12  B4D8               	btfsc	status,2,c
 11441  000C14  D016               	goto	u10819
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;lorawan.c: 1504: {
 11445                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 11446  000C16  0102               	movlb	2	; () banked
 11447  000C18  9B00               	bcf	_loRa& (0+255),5,b
 11448                           
 11449                           ; BSR set to: 2
 11450                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11451  000C1A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11452  000C1E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11453  000C22  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11454  000C26  0E01               	movlw	1
 11455  000C28  0100               	movlb	0	; () banked
 11456  000C2A  6F63               	movwf	RxData@status& (0+255),b
 11457  000C2C  D801               	call	u10818
 11458  000C2E  D009               	goto	u10819
 11459  000C30                     u10818:
 11460  000C30  0005               	push	
 11461  000C32  6EFA               	movwf	pclath,c
 11462  000C34  51F9               	movf	_rxPayload& (0+255),w,b
 11463  000C36  6EFD               	movwf	tosl,c
 11464  000C38  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 11465  000C3A  6EFE               	movwf	tosh,c
 11466  000C3C  6AFF               	clrf	tosu,c
 11467  000C3E  50FA               	movf	pclath,w,c
 11468  000C40  0012               	return		;indir
 11469  000C42                     u10819:
 11470                           
 11471                           ;lorawan.c: 1507: }
 11472                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11473  000C42  0102               	movlb	2	; () banked
 11474  000C44  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11475                           
 11476                           ; BSR set to: 2
 11477  000C46  BB00               	btfsc	_loRa& (0+255),5,b
 11478  000C48  D023               	goto	l1978
 11479                           
 11480                           ; BSR set to: 2
 11481  000C4A  B300               	btfsc	_loRa& (0+255),1,b
 11482  000C4C  D002               	goto	u10850
 11483                           
 11484                           ; BSR set to: 2
 11485  000C4E  A700               	btfss	_loRa& (0+255),3,b
 11486  000C50  D01F               	goto	l1978
 11487  000C52                     u10850:
 11488                           
 11489                           ; BSR set to: 2
 11490                           ;lorawan.c: 1510: {
 11491                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11492                           
 11493                           ; BSR set to: 2
 11494  000C52  0E01               	movlw	1
 11495  000C54  0100               	movlb	0	; () banked
 11496  000C56  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11497  000C58  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 11498  000C5A  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11499  000C5C  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 11500  000C5E  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11501  000C60  0102               	movlb	2	; () banked
 11502  000C62  51DE               	movf	(_loRa+222)& (0+255),w,b
 11503  000C64  ECD9  F026         	call	_SearchAvailableChannel
 11504  000C68  0900               	iorlw	0
 11505  000C6A  A4D8               	btfss	status,2,c
 11506  000C6C  D00F               	goto	l1977
 11507                           
 11508                           ;lorawan.c: 1512: {
 11509                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 11510  000C6E  0E00               	movlw	0
 11511  000C70  0100               	movlb	0	; () banked
 11512  000C72  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 11513  000C74  0E00               	movlw	0
 11514  000C76  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 11515  000C78  0E00               	movlw	0
 11516  000C7A  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11517  000C7C  0E00               	movlw	0
 11518  000C7E  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11519  000C80  0E00               	movlw	0
 11520  000C82  ECE6  F02C         	call	_LORAWAN_Send
 11521  000C86                     l10572:
 11522                           
 11523                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 11524  000C86  0102               	movlb	2	; () banked
 11525  000C88  9700               	bcf	_loRa& (0+255),3,b
 11526                           
 11527                           ;lorawan.c: 1515: }
 11528  000C8A  D002               	goto	l1978
 11529  000C8C                     l1977:
 11530                           
 11531                           ;lorawan.c: 1516: else
 11532                           ;lorawan.c: 1517: {
 11533                           ;lorawan.c: 1519: StartReTxTimer();
 11534                           
 11535                           ; BSR set to: 2
 11536  000C8C  EC54  F03F         	call	_StartReTxTimer	;wreg free
 11537  000C90                     l1978:
 11538                           
 11539                           ;lorawan.c: 1520: }
 11540                           ;lorawan.c: 1521: }
 11541                           ;lorawan.c: 1522: }
 11542                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 11543  000C90  0E02               	movlw	2
 11544  000C92  0102               	movlb	2	; () banked
 11545  000C94  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11546  000C96  A4D8               	btfss	status,2,c
 11547  000C98  0012               	return	
 11548                           
 11549                           ; BSR set to: 2
 11550                           ;lorawan.c: 1525: {
 11551                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11552  000C9A  5102               	movf	(_loRa+2)& (0+255),w,b
 11553  000C9C  0BF0               	andlw	-16
 11554  000C9E  0909               	iorlw	9
 11555  000CA0  6F02               	movwf	(_loRa+2)& (0+255),b
 11556                           
 11557                           ; BSR set to: 2
 11558                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 11559  000CA2  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11560                           
 11561                           ;lorawan.c: 1528: }
 11562                           ;lorawan.c: 1529: }
 11563  000CA6  0012               	return	
 11564  000CA8                     l1918:
 11565                           
 11566                           ;lorawan.c: 1530: else
 11567                           ;lorawan.c: 1531: {
 11568                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 11569  000CA8  EC16  F033         	call	_SetReceptionNotOkState	;wreg free
 11570                           
 11571                           ;lorawan.c: 1535: }
 11572                           ;lorawan.c: 1536: }
 11573                           
 11574                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 11575                           ;	Return value of _LORAWAN_RxDone is never used
 11576  000CAC  0012               	return	
 11577  000CAE                     l1904:
 11578                           
 11579                           ;lorawan.c: 1537: else
 11580                           ;lorawan.c: 1538: {
 11581                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 11582  000CAE  0100               	movlb	0	; () banked
 11583  000CB0  51F9               	movf	_rxPayload& (0+255),w,b
 11584  000CB2  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 11585  000CB4  B4D8               	btfsc	status,2,c
 11586  000CB6  0012               	return	
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;lorawan.c: 1541: {
 11590                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 11591  000CB8  EC38  F03F         	call	_RADIO_GetStatus	;wreg free
 11592  000CBC  0100               	movlb	0	; () banked
 11593  000CBE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11594  000CC0  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 11595  000CC2  D013               	goto	l1983
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;lorawan.c: 1543: {
 11599                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 11600  000CC4  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 11601  000CC8  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 11602  000CCC  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 11603  000CD0  0E03               	movlw	3
 11604  000CD2  6F63               	movwf	RxData@status& (0+255),b
 11605  000CD4  D801               	call	u10908
 11606  000CD6  0012               	return	
 11607  000CD8                     u10908:
 11608  000CD8  0005               	push	
 11609  000CDA  6EFA               	movwf	pclath,c
 11610  000CDC  51F9               	movf	_rxPayload& (0+255),w,b
 11611  000CDE  6EFD               	movwf	tosl,c
 11612  000CE0  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 11613  000CE2  6EFE               	movwf	tosh,c
 11614  000CE4  6AFF               	clrf	tosu,c
 11615  000CE6  50FA               	movf	pclath,w,c
 11616  000CE8  0012               	return		;indir
 11617  000CEA                     l1983:
 11618                           
 11619                           ;lorawan.c: 1546: else
 11620                           ;lorawan.c: 1547: {
 11621                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 11622  000CEA  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 11623  000CEE  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 11624  000CF2  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 11625  000CF6  0E02               	movlw	2
 11626  000CF8  0100               	movlb	0	; () banked
 11627  000CFA  6F63               	movwf	RxData@status& (0+255),b
 11628  000CFC  D801               	call	u10918
 11629  000CFE  0012               	return	
 11630  000D00                     u10918:
 11631  000D00  0005               	push	
 11632  000D02  6EFA               	movwf	pclath,c
 11633  000D04  51F9               	movf	_rxPayload& (0+255),w,b
 11634  000D06  6EFD               	movwf	tosl,c
 11635  000D08  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 11636  000D0A  6EFE               	movwf	tosh,c
 11637  000D0C  6AFF               	clrf	tosu,c
 11638  000D0E  50FA               	movf	pclath,w,c
 11639  000D10  0012               	return		;indir
 11640  000D12                     __end_of_LORAWAN_RxDone:
 11641                           	opt stack 0
 11642                           tosu	equ	0xFFF
 11643                           tosh	equ	0xFFE
 11644                           tosl	equ	0xFFD
 11645                           pclath	equ	0xFFA
 11646                           tblptru	equ	0xFF8
 11647                           tblptrh	equ	0xFF7
 11648                           tblptrl	equ	0xFF6
 11649                           tablat	equ	0xFF5
 11650                           prodh	equ	0xFF4
 11651                           prodl	equ	0xFF3
 11652                           intcon	equ	0xFF2
 11653                           intcon2	equ	0xFF1
 11654                           intcon3	equ	0xFF0
 11655                           postinc0	equ	0xFEE
 11656                           wreg	equ	0xFE8
 11657                           postinc1	equ	0xFE6
 11658                           postdec1	equ	0xFE5
 11659                           plusw1	equ	0xFE3
 11660                           fsr1h	equ	0xFE2
 11661                           fsr1l	equ	0xFE1
 11662                           indf2	equ	0xFDF
 11663                           postinc2	equ	0xFDE
 11664                           postdec2	equ	0xFDD
 11665                           fsr2h	equ	0xFDA
 11666                           fsr2l	equ	0xFD9
 11667                           status	equ	0xFD8
 11668                           
 11669 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 11670 ;; Defined at:
 11671 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;		None
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;		None
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      void 
 11678 ;; Registers used:
 11679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11688 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11689 ;;Total ram usage:        4 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:   11
 11692 ;; This function calls:
 11693 ;;		_SwTimerSetTimeout
 11694 ;;		_SwTimerStart
 11695 ;;		___lldiv
 11696 ;; This function is called by:
 11697 ;;		_Retransmissions
 11698 ;;		_AckRetransmissionCallback
 11699 ;;		_LORAWAN_RxDone
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text54
 11704  006808                     __ptext54:
 11705                           	opt stack 0
 11706  006808                     _UpdateRetransmissionAckTimeoutState:
 11707                           	opt stack 14
 11708                           
 11709                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11710                           
 11711                           ;incstack = 0
 11712  006808  0102               	movlb	2	; () banked
 11713  00680A  5102               	movf	(_loRa+2)& (0+255),w,b
 11714  00680C  0BF0               	andlw	-16
 11715  00680E  0906               	iorlw	6
 11716  006810  6F02               	movwf	(_loRa+2)& (0+255),b
 11717                           
 11718                           ; BSR set to: 2
 11719                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 11720  006812  5192               	movf	(_loRa+146)& (0+255),w,b
 11721  006814  0100               	movlb	0	; () banked
 11722  006816  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 11723  006818  0102               	movlb	2	; () banked
 11724  00681A  5193               	movf	(_loRa+147)& (0+255),w,b
 11725  00681C  0100               	movlb	0	; () banked
 11726  00681E  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 11727  006820  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 11728  006822  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 11729  006824  0E0C               	movlw	12
 11730  006826                     u9395:
 11731  006826  90D8               	bcf	status,0,c
 11732  006828  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 11733  00682A  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 11734  00682C  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 11735  00682E  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 11736  006830  2EE8               	decfsz	wreg,f,c
 11737  006832  D7F9               	goto	u9395
 11738  006834  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 11739  006838  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 11740  00683C  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 11741  006840  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 11742  006844  0E7D               	movlw	125
 11743  006846  6F64               	movwf	___lldiv@divisor& (0+255),b
 11744  006848  0E00               	movlw	0
 11745  00684A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11746  00684C  0E00               	movlw	0
 11747  00684E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11748  006850  0E00               	movlw	0
 11749  006852  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11750  006854  EC93  F032         	call	___lldiv	;wreg free
 11751  006858  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 11752  00685C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 11753  006860  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 11754  006864  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 11755  006868  0102               	movlb	2	; () banked
 11756  00686A  51D9               	movf	(_loRa+217)& (0+255),w,b
 11757  00686C  EC9D  F039         	call	_SwTimerSetTimeout
 11758                           
 11759                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 11760  006870  0102               	movlb	2	; () banked
 11761  006872  51D9               	movf	(_loRa+217)& (0+255),w,b
 11762  006874  EC62  F030         	call	_SwTimerStart
 11763  006878  0012               	return		;funcret
 11764  00687A                     __end_of_UpdateRetransmissionAckTimeoutState:
 11765                           	opt stack 0
 11766                           tosu	equ	0xFFF
 11767                           tosh	equ	0xFFE
 11768                           tosl	equ	0xFFD
 11769                           pclath	equ	0xFFA
 11770                           tblptru	equ	0xFF8
 11771                           tblptrh	equ	0xFF7
 11772                           tblptrl	equ	0xFF6
 11773                           tablat	equ	0xFF5
 11774                           prodh	equ	0xFF4
 11775                           prodl	equ	0xFF3
 11776                           intcon	equ	0xFF2
 11777                           intcon2	equ	0xFF1
 11778                           intcon3	equ	0xFF0
 11779                           postinc0	equ	0xFEE
 11780                           wreg	equ	0xFE8
 11781                           postinc1	equ	0xFE6
 11782                           postdec1	equ	0xFE5
 11783                           plusw1	equ	0xFE3
 11784                           fsr1h	equ	0xFE2
 11785                           fsr1l	equ	0xFE1
 11786                           indf2	equ	0xFDF
 11787                           postinc2	equ	0xFDE
 11788                           postdec2	equ	0xFDD
 11789                           fsr2h	equ	0xFDA
 11790                           fsr2l	equ	0xFD9
 11791                           status	equ	0xFD8
 11792                           
 11793 ;; *************** function _UpdateDLSettings *****************
 11794 ;; Defined at:
 11795 ;;		line 692 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;  dlRx2Dr         1    wreg     unsigned char 
 11798 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:        2 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    7
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_LORAWAN_RxDone
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text55
 11825  007A12                     __ptext55:
 11826                           	opt stack 0
 11827  007A12                     _UpdateDLSettings:
 11828                           	opt stack 19
 11829                           
 11830                           ;incstack = 0
 11831                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 11832  007A12  0100               	movlb	0	; () banked
 11833  007A14  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 11834                           
 11835                           ;lorawan_na.c: 694: if ( (dlRx2Dr >= 8) && (dlRx2Dr <= 13) )
 11836  007A16  0E07               	movlw	7
 11837  007A18  0100               	movlb	0	; () banked
 11838  007A1A  6561               	cpfsgt	UpdateDLSettings@dlRx2Dr& (0+255),b
 11839  007A1C  D005               	goto	l1170
 11840                           
 11841                           ; BSR set to: 0
 11842  007A1E  0E0E               	movlw	14
 11843  007A20  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 11844  007A22  D002               	goto	l1170
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;lorawan_na.c: 695: {
 11848                           ;lorawan_na.c: 696: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 11849  007A24  C061  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 11850  007A28                     l1170:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;lorawan_na.c: 697: }
 11854                           ;lorawan_na.c: 699: if (dlRx1DrOffset <= 3)
 11855                           
 11856                           ; BSR set to: 0
 11857  007A28  0E04               	movlw	4
 11858  007A2A  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 11859  007A2C  0012               	return	
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;lorawan_na.c: 700: {
 11863                           ;lorawan_na.c: 702: loRa.offset = dlRx1DrOffset;
 11864  007A2E  C060  F2E0         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+224
 11865  007A32  0012               	return	
 11866  007A34                     __end_of_UpdateDLSettings:
 11867                           	opt stack 0
 11868                           tosu	equ	0xFFF
 11869                           tosh	equ	0xFFE
 11870                           tosl	equ	0xFFD
 11871                           pclath	equ	0xFFA
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           intcon2	equ	0xFF1
 11880                           intcon3	equ	0xFF0
 11881                           postinc0	equ	0xFEE
 11882                           wreg	equ	0xFE8
 11883                           postinc1	equ	0xFE6
 11884                           postdec1	equ	0xFE5
 11885                           plusw1	equ	0xFE3
 11886                           fsr1h	equ	0xFE2
 11887                           fsr1l	equ	0xFE1
 11888                           indf2	equ	0xFDF
 11889                           postinc2	equ	0xFDE
 11890                           postdec2	equ	0xFDD
 11891                           fsr2h	equ	0xFDA
 11892                           fsr2l	equ	0xFD9
 11893                           status	equ	0xFD8
 11894                           
 11895 ;; *************** function _UpdateCfList *****************
 11896 ;; Defined at:
 11897 ;;		line 667 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  bufferLength    1    wreg     unsigned char 
 11900 ;;  joinAccept      2    0[BANK0 ] PTR struct .
 11901 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;  bufferLength    1    0[COMRAM] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;Total ram usage:        2 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:    7
 11920 ;; This function calls:
 11921 ;;		Nothing
 11922 ;; This function is called by:
 11923 ;;		_LORAWAN_RxDone
 11924 ;; This function uses a non-reentrant model
 11925 ;;
 11926                           
 11927                           	psect	text56
 11928  007EA6                     __ptext56:
 11929                           	opt stack 0
 11930  007EA6                     _UpdateCfList:
 11931                           	opt stack 19
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;incstack = 0
 11935  007EA6  0012               	return		;funcret
 11936  007EA8                     __end_of_UpdateCfList:
 11937                           	opt stack 0
 11938                           tosu	equ	0xFFF
 11939                           tosh	equ	0xFFE
 11940                           tosl	equ	0xFFD
 11941                           pclath	equ	0xFFA
 11942                           tblptru	equ	0xFF8
 11943                           tblptrh	equ	0xFF7
 11944                           tblptrl	equ	0xFF6
 11945                           tablat	equ	0xFF5
 11946                           prodh	equ	0xFF4
 11947                           prodl	equ	0xFF3
 11948                           intcon	equ	0xFF2
 11949                           intcon2	equ	0xFF1
 11950                           intcon3	equ	0xFF0
 11951                           postinc0	equ	0xFEE
 11952                           wreg	equ	0xFE8
 11953                           postinc1	equ	0xFE6
 11954                           postdec1	equ	0xFE5
 11955                           plusw1	equ	0xFE3
 11956                           fsr1h	equ	0xFE2
 11957                           fsr1l	equ	0xFE1
 11958                           indf2	equ	0xFDF
 11959                           postinc2	equ	0xFDE
 11960                           postdec2	equ	0xFDD
 11961                           fsr2h	equ	0xFDA
 11962                           fsr2l	equ	0xFD9
 11963                           status	equ	0xFD8
 11964                           
 11965 ;; *************** function _StartReTxTimer *****************
 11966 ;; Defined at:
 11967 ;;		line 706 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;		None
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;		None
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  1    wreg      void 
 11974 ;; Registers used:
 11975 ;;		None
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;Total ram usage:        0 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; Hardware stack levels required when called:    7
 11988 ;; This function calls:
 11989 ;;		Nothing
 11990 ;; This function is called by:
 11991 ;;		_LORAWAN_RxDone
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text57
 11996  007EA8                     __ptext57:
 11997                           	opt stack 0
 11998  007EA8                     _StartReTxTimer:
 11999                           	opt stack 19
 12000                           
 12001                           ;incstack = 0
 12002  007EA8  0012               	return		;funcret
 12003  007EAA                     __end_of_StartReTxTimer:
 12004                           	opt stack 0
 12005                           tosu	equ	0xFFF
 12006                           tosh	equ	0xFFE
 12007                           tosl	equ	0xFFD
 12008                           pclath	equ	0xFFA
 12009                           tblptru	equ	0xFF8
 12010                           tblptrh	equ	0xFF7
 12011                           tblptrl	equ	0xFF6
 12012                           tablat	equ	0xFF5
 12013                           prodh	equ	0xFF4
 12014                           prodl	equ	0xFF3
 12015                           intcon	equ	0xFF2
 12016                           intcon2	equ	0xFF1
 12017                           intcon3	equ	0xFF0
 12018                           postinc0	equ	0xFEE
 12019                           wreg	equ	0xFE8
 12020                           postinc1	equ	0xFE6
 12021                           postdec1	equ	0xFE5
 12022                           plusw1	equ	0xFE3
 12023                           fsr1h	equ	0xFE2
 12024                           fsr1l	equ	0xFE1
 12025                           indf2	equ	0xFDF
 12026                           postinc2	equ	0xFDE
 12027                           postdec2	equ	0xFDD
 12028                           fsr2h	equ	0xFDA
 12029                           fsr2l	equ	0xFD9
 12030                           status	equ	0xFD8
 12031                           
 12032 ;; *************** function _SetReceptionNotOkState *****************
 12033 ;; Defined at:
 12034 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;		None
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;		None
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  1    wreg      void 
 12041 ;; Registers used:
 12042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;Total ram usage:        0 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:   14
 12055 ;; This function calls:
 12056 ;;		_LORAWAN_EnterContinuousReceive
 12057 ;;		_RxData
 12058 ;; This function is called by:
 12059 ;;		_LORAWAN_RxDone
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text58
 12064  00662C                     __ptext58:
 12065                           	opt stack 0
 12066  00662C                     _SetReceptionNotOkState:
 12067                           	opt stack 12
 12068                           
 12069                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 12070                           
 12071                           ;incstack = 0
 12072  00662C  0102               	movlb	2	; () banked
 12073  00662E  5102               	movf	(_loRa+2)& (0+255),w,b
 12074  006630  0B0F               	andlw	15
 12075  006632  0A05               	xorlw	5
 12076  006634  B4D8               	btfsc	status,2,c
 12077  006636  D008               	goto	u10030
 12078                           
 12079                           ; BSR set to: 2
 12080  006638  5102               	movf	(_loRa+2)& (0+255),w,b
 12081  00663A  0B0F               	andlw	15
 12082  00663C  0A03               	xorlw	3
 12083  00663E  A4D8               	btfss	status,2,c
 12084  006640  D028               	goto	l2092
 12085                           
 12086                           ; BSR set to: 2
 12087  006642  51E2               	movf	(_loRa+226)& (0+255),w,b
 12088  006644  B4D8               	btfsc	status,2,c
 12089  006646  D025               	goto	l2092
 12090  006648                     u10030:
 12091                           
 12092                           ; BSR set to: 2
 12093                           ;lorawan.c: 2000: {
 12094                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12095  006648  9100               	bcf	_loRa& (0+255),0,b
 12096                           
 12097                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 12098  00664A  9102               	bcf	(_loRa+2)& (0+255),0,b
 12099  00664C  9302               	bcf	(_loRa+2)& (0+255),1,b
 12100  00664E  9502               	bcf	(_loRa+2)& (0+255),2,b
 12101  006650  9702               	bcf	(_loRa+2)& (0+255),3,b
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 12105  006652  5112               	movf	(_loRa+18)& (0+255),w,b
 12106  006654  A4D8               	btfss	status,2,c
 12107  006656  D01B               	goto	u10069
 12108                           
 12109                           ; BSR set to: 2
 12110  006658  0100               	movlb	0	; () banked
 12111  00665A  51F9               	movf	_rxPayload& (0+255),w,b
 12112  00665C  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 12113  00665E  B4D8               	btfsc	status,2,c
 12114  006660  D016               	goto	u10069
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;lorawan.c: 2005: {
 12118                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 12119  006662  0102               	movlb	2	; () banked
 12120  006664  9B00               	bcf	_loRa& (0+255),5,b
 12121                           
 12122                           ; BSR set to: 2
 12123                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 12124  006666  0E00               	movlw	0
 12125  006668  0100               	movlb	0	; () banked
 12126  00666A  6F60               	movwf	RxData@pData& (0+255),b
 12127  00666C  0E00               	movlw	0
 12128  00666E  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12129  006670  0E00               	movlw	0
 12130  006672  6F62               	movwf	RxData@dataLength& (0+255),b
 12131  006674  0E00               	movlw	0
 12132  006676  6F63               	movwf	RxData@status& (0+255),b
 12133  006678  D801               	call	u10068
 12134  00667A  D009               	goto	u10069
 12135  00667C                     u10068:
 12136  00667C  0005               	push	
 12137  00667E  6EFA               	movwf	pclath,c
 12138  006680  51F9               	movf	_rxPayload& (0+255),w,b
 12139  006682  6EFD               	movwf	tosl,c
 12140  006684  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 12141  006686  6EFE               	movwf	tosh,c
 12142  006688  6AFF               	clrf	tosu,c
 12143  00668A  50FA               	movf	pclath,w,c
 12144  00668C  0012               	return		;indir
 12145  00668E                     u10069:
 12146                           
 12147                           ;lorawan.c: 2008: }
 12148                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 12149  00668E  0102               	movlb	2	; () banked
 12150  006690  9303               	bcf	(_loRa+3)& (0+255),1,b
 12151  006692                     l2092:
 12152                           
 12153                           ; BSR set to: 2
 12154                           ;lorawan.c: 2010: }
 12155                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 12156                           
 12157                           ; BSR set to: 2
 12158  006692  0E02               	movlw	2
 12159  006694  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12160  006696  A4D8               	btfss	status,2,c
 12161  006698  0012               	return	
 12162                           
 12163                           ; BSR set to: 2
 12164                           ;lorawan.c: 2013: {
 12165                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12166  00669A  5102               	movf	(_loRa+2)& (0+255),w,b
 12167  00669C  0BF0               	andlw	-16
 12168  00669E  0909               	iorlw	9
 12169  0066A0  6F02               	movwf	(_loRa+2)& (0+255),b
 12170                           
 12171                           ; BSR set to: 2
 12172                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 12173  0066A2  EC54  F033         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12174  0066A6  0012               	return	
 12175  0066A8                     __end_of_SetReceptionNotOkState:
 12176                           	opt stack 0
 12177                           tosu	equ	0xFFF
 12178                           tosh	equ	0xFFE
 12179                           tosl	equ	0xFFD
 12180                           pclath	equ	0xFFA
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon2	equ	0xFF1
 12189                           intcon3	equ	0xFF0
 12190                           postinc0	equ	0xFEE
 12191                           wreg	equ	0xFE8
 12192                           postinc1	equ	0xFE6
 12193                           postdec1	equ	0xFE5
 12194                           plusw1	equ	0xFE3
 12195                           fsr1h	equ	0xFE2
 12196                           fsr1l	equ	0xFE1
 12197                           indf2	equ	0xFDF
 12198                           postinc2	equ	0xFDE
 12199                           postdec2	equ	0xFDD
 12200                           fsr2h	equ	0xFDA
 12201                           fsr2l	equ	0xFD9
 12202                           status	equ	0xFD8
 12203                           
 12204 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 12205 ;; Defined at:
 12206 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;Total ram usage:        0 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:   13
 12227 ;; This function calls:
 12228 ;;		_ConfigureRadioRx
 12229 ;;		_RADIO_ReceiveStart
 12230 ;;		_RADIO_ReceiveStop
 12231 ;;		_RADIO_ReleaseData
 12232 ;;		_ResetParametersForConfirmedTransmission
 12233 ;;		_ResetParametersForUnconfirmedTransmission
 12234 ;;		_RxData
 12235 ;; This function is called by:
 12236 ;;		_LORAWAN_ReceiveWindow2Callback
 12237 ;;		_LORAWAN_RxDone
 12238 ;;		_SetReceptionNotOkState
 12239 ;; This function uses a non-reentrant model
 12240 ;;
 12241                           
 12242                           	psect	text59
 12243  0066A8                     __ptext59:
 12244                           	opt stack 0
 12245  0066A8                     _LORAWAN_EnterContinuousReceive:
 12246                           	opt stack 14
 12247                           
 12248                           ;lorawan.c: 917: RADIO_ReceiveStop();
 12249                           
 12250                           ;incstack = 0
 12251  0066A8  EC1A  F03D         	call	_RADIO_ReceiveStop	;wreg free
 12252                           
 12253                           ;lorawan.c: 918: RADIO_ReleaseData();
 12254  0066AC  EC32  F03F         	call	_RADIO_ReleaseData	;wreg free
 12255                           
 12256                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 12257  0066B0  C218  F069         	movff	_loRa+24,ConfigureRadioRx@freq
 12258  0066B4  C219  F06A         	movff	_loRa+25,ConfigureRadioRx@freq+1
 12259  0066B8  C21A  F06B         	movff	_loRa+26,ConfigureRadioRx@freq+2
 12260  0066BC  C21B  F06C         	movff	_loRa+27,ConfigureRadioRx@freq+3
 12261  0066C0  0102               	movlb	2	; () banked
 12262  0066C2  511C               	movf	(_loRa+28)& (0+255),w,b
 12263  0066C4  EC24  F03C         	call	_ConfigureRadioRx
 12264                           
 12265                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 12266  0066C8  0E00               	movlw	0
 12267  0066CA  0100               	movlb	0	; () banked
 12268  0066CC  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 12269  0066CE  0E00               	movlw	0
 12270  0066D0  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 12271  0066D2  EC31  F018         	call	_RADIO_ReceiveStart	;wreg free
 12272  0066D6  0100               	movlb	0	; () banked
 12273  0066D8  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 12274  0066DA  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 12275  0066DC  B4D8               	btfsc	status,2,c
 12276  0066DE  0012               	return	
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;lorawan.c: 923: {
 12280                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 12281  0066E0  EC7C  F03E         	call	_ResetParametersForConfirmedTransmission	;wreg free
 12282                           
 12283                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 12284  0066E4  EC5E  F03E         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 12285                           
 12286                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 12287  0066E8  0102               	movlb	2	; () banked
 12288  0066EA  9102               	bcf	(_loRa+2)& (0+255),0,b
 12289  0066EC  9302               	bcf	(_loRa+2)& (0+255),1,b
 12290  0066EE  9502               	bcf	(_loRa+2)& (0+255),2,b
 12291  0066F0  9702               	bcf	(_loRa+2)& (0+255),3,b
 12292                           
 12293                           ; BSR set to: 2
 12294                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 12295  0066F2  0100               	movlb	0	; () banked
 12296  0066F4  51F9               	movf	_rxPayload& (0+255),w,b
 12297  0066F6  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 12298  0066F8  B4D8               	btfsc	status,2,c
 12299  0066FA  0012               	return	
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;lorawan.c: 928: {
 12303                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 12304  0066FC  0E00               	movlw	0
 12305  0066FE  6F60               	movwf	RxData@pData& (0+255),b
 12306  006700  0E00               	movlw	0
 12307  006702  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12308  006704  0E00               	movlw	0
 12309  006706  6F62               	movwf	RxData@dataLength& (0+255),b
 12310  006708  0E00               	movlw	0
 12311  00670A  6F63               	movwf	RxData@status& (0+255),b
 12312  00670C  D801               	call	u9578
 12313  00670E  0012               	return	
 12314  006710                     u9578:
 12315  006710  0005               	push	
 12316  006712  6EFA               	movwf	pclath,c
 12317  006714  51F9               	movf	_rxPayload& (0+255),w,b
 12318  006716  6EFD               	movwf	tosl,c
 12319  006718  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 12320  00671A  6EFE               	movwf	tosh,c
 12321  00671C  6AFF               	clrf	tosu,c
 12322  00671E  50FA               	movf	pclath,w,c
 12323  006720  0012               	return		;indir
 12324  006722                     __end_of_LORAWAN_EnterContinuousReceive:
 12325                           	opt stack 0
 12326                           tosu	equ	0xFFF
 12327                           tosh	equ	0xFFE
 12328                           tosl	equ	0xFFD
 12329                           pclath	equ	0xFFA
 12330                           tblptru	equ	0xFF8
 12331                           tblptrh	equ	0xFF7
 12332                           tblptrl	equ	0xFF6
 12333                           tablat	equ	0xFF5
 12334                           prodh	equ	0xFF4
 12335                           prodl	equ	0xFF3
 12336                           intcon	equ	0xFF2
 12337                           intcon2	equ	0xFF1
 12338                           intcon3	equ	0xFF0
 12339                           postinc0	equ	0xFEE
 12340                           wreg	equ	0xFE8
 12341                           postinc1	equ	0xFE6
 12342                           postdec1	equ	0xFE5
 12343                           plusw1	equ	0xFE3
 12344                           fsr1h	equ	0xFE2
 12345                           fsr1l	equ	0xFE1
 12346                           indf2	equ	0xFDF
 12347                           postinc2	equ	0xFDE
 12348                           postdec2	equ	0xFDD
 12349                           fsr2h	equ	0xFDA
 12350                           fsr2l	equ	0xFD9
 12351                           status	equ	0xFD8
 12352                           
 12353 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 12354 ;; Defined at:
 12355 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;Total ram usage:        0 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:    7
 12376 ;; This function calls:
 12377 ;;		Nothing
 12378 ;; This function is called by:
 12379 ;;		_Retransmissions
 12380 ;;		_TransmissionErrorCallback
 12381 ;;		_LORAWAN_ReceiveWindow2Callback
 12382 ;;		_LORAWAN_EnterContinuousReceive
 12383 ;;		_UnconfirmedTransmissionCallback
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text60
 12388  007CBC                     __ptext60:
 12389                           	opt stack 0
 12390  007CBC                     _ResetParametersForUnconfirmedTransmission:
 12391                           	opt stack 20
 12392                           
 12393                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 12394                           
 12395                           ;incstack = 0
 12396  007CBC  0102               	movlb	2	; () banked
 12397  007CBE  9102               	bcf	(_loRa+2)& (0+255),0,b
 12398  007CC0  9302               	bcf	(_loRa+2)& (0+255),1,b
 12399  007CC2  9502               	bcf	(_loRa+2)& (0+255),2,b
 12400  007CC4  9702               	bcf	(_loRa+2)& (0+255),3,b
 12401                           
 12402                           ; BSR set to: 2
 12403                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12404  007CC6  0E01               	movlw	1
 12405  007CC8  6FC9               	movwf	(_loRa+201)& (0+255),b
 12406                           
 12407                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 12408  007CCA  0E00               	movlw	0
 12409  007CCC  6F98               	movwf	(_loRa+152)& (0+255),b
 12410                           
 12411                           ; BSR set to: 2
 12412  007CCE  0012               	return		;funcret
 12413  007CD0                     __end_of_ResetParametersForUnconfirmedTransmission:
 12414                           	opt stack 0
 12415                           tosu	equ	0xFFF
 12416                           tosh	equ	0xFFE
 12417                           tosl	equ	0xFFD
 12418                           pclath	equ	0xFFA
 12419                           tblptru	equ	0xFF8
 12420                           tblptrh	equ	0xFF7
 12421                           tblptrl	equ	0xFF6
 12422                           tablat	equ	0xFF5
 12423                           prodh	equ	0xFF4
 12424                           prodl	equ	0xFF3
 12425                           intcon	equ	0xFF2
 12426                           intcon2	equ	0xFF1
 12427                           intcon3	equ	0xFF0
 12428                           postinc0	equ	0xFEE
 12429                           wreg	equ	0xFE8
 12430                           postinc1	equ	0xFE6
 12431                           postdec1	equ	0xFE5
 12432                           plusw1	equ	0xFE3
 12433                           fsr1h	equ	0xFE2
 12434                           fsr1l	equ	0xFE1
 12435                           indf2	equ	0xFDF
 12436                           postinc2	equ	0xFDE
 12437                           postdec2	equ	0xFDD
 12438                           fsr2h	equ	0xFDA
 12439                           fsr2l	equ	0xFD9
 12440                           status	equ	0xFD8
 12441                           
 12442 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 12443 ;; Defined at:
 12444 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;		None
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;		None
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      void 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/0
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;Total ram usage:        0 bytes
 12463 ;; Hardware stack levels used:    1
 12464 ;; Hardware stack levels required when called:    7
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_Retransmissions
 12469 ;;		_LORAWAN_ReceiveWindow2Callback
 12470 ;;		_LORAWAN_EnterContinuousReceive
 12471 ;;		_AckRetransmissionCallback
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           	psect	text61
 12476  007CF8                     __ptext61:
 12477                           	opt stack 0
 12478  007CF8                     _ResetParametersForConfirmedTransmission:
 12479                           	opt stack 18
 12480                           
 12481                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 12482                           
 12483                           ; BSR set to: 2
 12484                           ;incstack = 0
 12485  007CF8  0102               	movlb	2	; () banked
 12486  007CFA  9102               	bcf	(_loRa+2)& (0+255),0,b
 12487  007CFC  9302               	bcf	(_loRa+2)& (0+255),1,b
 12488  007CFE  9502               	bcf	(_loRa+2)& (0+255),2,b
 12489  007D00  9702               	bcf	(_loRa+2)& (0+255),3,b
 12490                           
 12491                           ; BSR set to: 2
 12492                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 12493  007D02  0E01               	movlw	1
 12494  007D04  6FCA               	movwf	(_loRa+202)& (0+255),b
 12495                           
 12496                           ; BSR set to: 2
 12497                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12498  007D06  9100               	bcf	_loRa& (0+255),0,b
 12499                           
 12500                           ; BSR set to: 2
 12501  007D08  0012               	return		;funcret
 12502  007D0A                     __end_of_ResetParametersForConfirmedTransmission:
 12503                           	opt stack 0
 12504                           tosu	equ	0xFFF
 12505                           tosh	equ	0xFFE
 12506                           tosl	equ	0xFFD
 12507                           pclath	equ	0xFFA
 12508                           tblptru	equ	0xFF8
 12509                           tblptrh	equ	0xFF7
 12510                           tblptrl	equ	0xFF6
 12511                           tablat	equ	0xFF5
 12512                           prodh	equ	0xFF4
 12513                           prodl	equ	0xFF3
 12514                           intcon	equ	0xFF2
 12515                           intcon2	equ	0xFF1
 12516                           intcon3	equ	0xFF0
 12517                           postinc0	equ	0xFEE
 12518                           wreg	equ	0xFE8
 12519                           postinc1	equ	0xFE6
 12520                           postdec1	equ	0xFE5
 12521                           plusw1	equ	0xFE3
 12522                           fsr1h	equ	0xFE2
 12523                           fsr1l	equ	0xFE1
 12524                           indf2	equ	0xFDF
 12525                           postinc2	equ	0xFDE
 12526                           postdec2	equ	0xFDD
 12527                           fsr2h	equ	0xFDA
 12528                           fsr2l	equ	0xFD9
 12529                           status	equ	0xFD8
 12530                           
 12531 ;; *************** function _RADIO_ReleaseData *****************
 12532 ;; Defined at:
 12533 ;;		line 1211 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;		None
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      void 
 12540 ;; Registers used:
 12541 ;;		status,2, status,0
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:        0 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    7
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_LORAWAN_ReceiveWindow1Callback
 12558 ;;		_LORAWAN_ReceiveWindow2Callback
 12559 ;;		_LORAWAN_EnterContinuousReceive
 12560 ;;		_LORAWAN_RxDone
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text62
 12565  007E64                     __ptext62:
 12566                           	opt stack 0
 12567  007E64                     _RADIO_ReleaseData:
 12568                           	opt stack 20
 12569                           
 12570                           ;radio_driver_SX1276.c: 1213: RadioConfiguration.flags &= ~(1 << (2));
 12571                           
 12572                           ; BSR set to: 2
 12573                           ;incstack = 0
 12574  007E64  0101               	movlb	1	; () banked
 12575  007E66  9597               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 12576                           
 12577                           ; BSR set to: 1
 12578  007E68  0012               	return		;funcret
 12579  007E6A                     __end_of_RADIO_ReleaseData:
 12580                           	opt stack 0
 12581                           tosu	equ	0xFFF
 12582                           tosh	equ	0xFFE
 12583                           tosl	equ	0xFFD
 12584                           pclath	equ	0xFFA
 12585                           tblptru	equ	0xFF8
 12586                           tblptrh	equ	0xFF7
 12587                           tblptrl	equ	0xFF6
 12588                           tablat	equ	0xFF5
 12589                           prodh	equ	0xFF4
 12590                           prodl	equ	0xFF3
 12591                           intcon	equ	0xFF2
 12592                           intcon2	equ	0xFF1
 12593                           intcon3	equ	0xFF0
 12594                           postinc0	equ	0xFEE
 12595                           wreg	equ	0xFE8
 12596                           postinc1	equ	0xFE6
 12597                           postdec1	equ	0xFE5
 12598                           plusw1	equ	0xFE3
 12599                           fsr1h	equ	0xFE2
 12600                           fsr1l	equ	0xFE1
 12601                           indf2	equ	0xFDF
 12602                           postinc2	equ	0xFDE
 12603                           postdec2	equ	0xFDD
 12604                           fsr2h	equ	0xFDA
 12605                           fsr2l	equ	0xFD9
 12606                           status	equ	0xFD8
 12607                           
 12608 ;; *************** function _RADIO_ReceiveStart *****************
 12609 ;; Defined at:
 12610 ;;		line 923 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  2   81[BANK0 ] enum E7038
 12617 ;; Registers used:
 12618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;Total ram usage:       10 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:   12
 12631 ;; This function calls:
 12632 ;;		_RADIO_RegisterWrite
 12633 ;;		_RADIO_WriteConfiguration
 12634 ;;		_RADIO_WriteMode
 12635 ;;		_SwTimerSetTimeout
 12636 ;;		_SwTimerStart
 12637 ;;		___lldiv
 12638 ;; This function is called by:
 12639 ;;		_LORAWAN_ReceiveWindow1Callback
 12640 ;;		_LORAWAN_ReceiveWindow2Callback
 12641 ;;		_LORAWAN_EnterContinuousReceive
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text63
 12646  003062                     __ptext63:
 12647                           	opt stack 0
 12648  003062                     _RADIO_ReceiveStart:
 12649                           	opt stack 15
 12650                           
 12651                           ;radio_driver_SX1276.c: 925: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 12652                           
 12653                           ; BSR set to: 1
 12654                           ;incstack = 0
 12655  003062  0101               	movlb	1	; () banked
 12656  003064  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 12657  003066  D006               	goto	l560
 12658                           
 12659                           ; BSR set to: 1
 12660                           ;radio_driver_SX1276.c: 926: {
 12661                           ;radio_driver_SX1276.c: 927: return ERR_BUFFER_LOCKED;
 12662  003068  0E80               	movlw	128
 12663  00306A  0100               	movlb	0	; () banked
 12664  00306C  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 12665  00306E  0E03               	movlw	3
 12666  003070  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 12667                           
 12668                           ; BSR set to: 0
 12669  003072  0012               	return	
 12670  003074                     l560:
 12671                           
 12672                           ;radio_driver_SX1276.c: 928: }
 12673                           ;radio_driver_SX1276.c: 930: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 12674                           
 12675                           ; BSR set to: 0
 12676  003074  C197  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 12677  003078  0E03               	movlw	3
 12678  00307A  0100               	movlb	0	; () banked
 12679  00307C  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 12680  00307E  B4D8               	btfsc	status,2,c
 12681  003080  D005               	goto	l562
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;radio_driver_SX1276.c: 931: {
 12685                           ;radio_driver_SX1276.c: 932: return ERR_RADIO_BUSY;
 12686  003082  0E80               	movlw	128
 12687  003084  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 12688  003086  0E04               	movlw	4
 12689  003088  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 12690                           
 12691                           ; BSR set to: 0
 12692  00308A  0012               	return	
 12693  00308C                     l562:
 12694                           
 12695                           ; BSR set to: 0
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;radio_driver_SX1276.c: 933: }
 12699                           ;radio_driver_SX1276.c: 941: do { LATB3 = 1; } while(0);
 12700  00308C  868A               	bsf	3978,3,c	;volatile
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;radio_driver_SX1276.c: 943: if (0 == rxWindowSize)
 12704                           
 12705                           ; BSR set to: 0
 12706  00308E  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 12707  003090  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 12708  003092  A4D8               	btfss	status,2,c
 12709  003094  D007               	goto	l565
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;radio_driver_SX1276.c: 944: {
 12713                           ;radio_driver_SX1276.c: 945: RADIO_WriteConfiguration(4);
 12714  003096  0E00               	movlw	0
 12715  003098  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 12716  00309A  0E04               	movlw	4
 12717  00309C  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 12718  00309E  EC89  F006         	call	_RADIO_WriteConfiguration	;wreg free
 12719                           
 12720                           ;radio_driver_SX1276.c: 946: }
 12721  0030A2  D006               	goto	l566
 12722  0030A4                     l565:
 12723                           
 12724                           ;radio_driver_SX1276.c: 947: else
 12725                           ;radio_driver_SX1276.c: 948: {
 12726                           ;radio_driver_SX1276.c: 949: RADIO_WriteConfiguration(rxWindowSize);
 12727  0030A4  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 12728  0030A8  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 12729  0030AC  EC89  F006         	call	_RADIO_WriteConfiguration	;wreg free
 12730  0030B0                     l566:
 12731                           
 12732                           ;radio_driver_SX1276.c: 950: }
 12733                           ;radio_driver_SX1276.c: 952: if (MODULATION_LORA == RadioConfiguration.modulation)
 12734  0030B0  0101               	movlb	1	; () banked
 12735  0030B2  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 12736  0030B4  A4D8               	btfss	status,2,c
 12737  0030B6  D013               	goto	l567
 12738                           
 12739                           ; BSR set to: 1
 12740                           ;radio_driver_SX1276.c: 953: {
 12741                           ;radio_driver_SX1276.c: 956: RADIO_RegisterWrite(0x22, 0x01);
 12742  0030B8  0E01               	movlw	1
 12743  0030BA  0100               	movlb	0	; () banked
 12744  0030BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12745  0030BE  0E22               	movlw	34
 12746  0030C0  EC5D  F03D         	call	_RADIO_RegisterWrite
 12747                           
 12748                           ;radio_driver_SX1276.c: 962: RADIO_RegisterWrite(0x40, 0x00);
 12749  0030C4  0E00               	movlw	0
 12750  0030C6  0100               	movlb	0	; () banked
 12751  0030C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12752  0030CA  0E40               	movlw	64
 12753  0030CC  EC5D  F03D         	call	_RADIO_RegisterWrite
 12754                           
 12755                           ;radio_driver_SX1276.c: 963: RADIO_RegisterWrite(0x41, 0x00);
 12756  0030D0  0E00               	movlw	0
 12757  0030D2  0100               	movlb	0	; () banked
 12758  0030D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12759  0030D6  0E41               	movlw	65
 12760  0030D8  EC5D  F03D         	call	_RADIO_RegisterWrite
 12761                           
 12762                           ;radio_driver_SX1276.c: 964: }
 12763  0030DC  D016               	goto	l568
 12764  0030DE                     l567:
 12765                           
 12766                           ;radio_driver_SX1276.c: 965: else
 12767                           ;radio_driver_SX1276.c: 966: {
 12768                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 12769  0030DE  C1A8  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 12770  0030E2  0E12               	movlw	18
 12771  0030E4  EC5D  F03D         	call	_RADIO_RegisterWrite
 12772                           
 12773                           ;radio_driver_SX1276.c: 968: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 12774  0030E8  C1A9  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 12775  0030EC  0E13               	movlw	19
 12776  0030EE  EC5D  F03D         	call	_RADIO_RegisterWrite
 12777                           
 12778                           ;radio_driver_SX1276.c: 971: RADIO_RegisterWrite(0x40, 0x00);
 12779  0030F2  0E00               	movlw	0
 12780  0030F4  0100               	movlb	0	; () banked
 12781  0030F6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12782  0030F8  0E40               	movlw	64
 12783  0030FA  EC5D  F03D         	call	_RADIO_RegisterWrite
 12784                           
 12785                           ;radio_driver_SX1276.c: 972: RADIO_RegisterWrite(0x41, 0x00);
 12786  0030FE  0E00               	movlw	0
 12787  003100  0100               	movlb	0	; () banked
 12788  003102  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12789  003104  0E41               	movlw	65
 12790  003106  EC5D  F03D         	call	_RADIO_RegisterWrite
 12791  00310A                     l568:
 12792                           
 12793                           ;radio_driver_SX1276.c: 973: }
 12794                           ;radio_driver_SX1276.c: 975: RadioConfiguration.flags |= (1 << (1));
 12795  00310A  0101               	movlb	1	; () banked
 12796  00310C  8397               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;radio_driver_SX1276.c: 976: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 12800  00310E  0EE7               	movlw	231
 12801  003110  1797               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 12802                           
 12803                           ; BSR set to: 1
 12804                           ;radio_driver_SX1276.c: 980: if (0 == rxWindowSize)
 12805  003112  0100               	movlb	0	; () banked
 12806  003114  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 12807  003116  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 12808  003118  A4D8               	btfss	status,2,c
 12809  00311A  D008               	goto	l569
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;radio_driver_SX1276.c: 981: {
 12813                           ;radio_driver_SX1276.c: 982: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 12814  00311C  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 12815  003120  0E00               	movlw	0
 12816  003122  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12817  003124  0E05               	movlw	5
 12818  003126  EC5E  F028         	call	_RADIO_WriteMode
 12819                           
 12820                           ;radio_driver_SX1276.c: 983: }
 12821  00312A  D046               	goto	l572
 12822  00312C                     l569:
 12823                           
 12824                           ;radio_driver_SX1276.c: 984: else
 12825                           ;radio_driver_SX1276.c: 985: {
 12826                           ;radio_driver_SX1276.c: 986: if (MODULATION_LORA == RadioConfiguration.modulation)
 12827  00312C  0101               	movlb	1	; () banked
 12828  00312E  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 12829  003130  A4D8               	btfss	status,2,c
 12830  003132  D009               	goto	l571
 12831                           
 12832                           ; BSR set to: 1
 12833                           ;radio_driver_SX1276.c: 987: {
 12834                           ;radio_driver_SX1276.c: 988: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 12835  003134  0E01               	movlw	1
 12836  003136  0100               	movlb	0	; () banked
 12837  003138  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12838  00313A  0E00               	movlw	0
 12839  00313C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12840  00313E  0E06               	movlw	6
 12841  003140  EC5E  F028         	call	_RADIO_WriteMode
 12842                           
 12843                           ;radio_driver_SX1276.c: 989: }
 12844  003144  D039               	goto	l572
 12845  003146                     l571:
 12846                           
 12847                           ;radio_driver_SX1276.c: 990: else
 12848                           ;radio_driver_SX1276.c: 991: {
 12849                           ;radio_driver_SX1276.c: 992: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 12850  003146  0E00               	movlw	0
 12851  003148  0100               	movlb	0	; () banked
 12852  00314A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12853  00314C  0E00               	movlw	0
 12854  00314E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12855  003150  0E05               	movlw	5
 12856  003152  EC5E  F028         	call	_RADIO_WriteMode
 12857                           
 12858                           ;radio_driver_SX1276.c: 993: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 12859  003156  0100               	movlb	0	; () banked
 12860  003158  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 12861  00315A  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 12862  00315C  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 12863  00315E  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 12864  003160  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 12865  003162  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 12866  003164  0E0C               	movlw	12
 12867  003166                     u8165:
 12868  003166  90D8               	bcf	status,0,c
 12869  003168  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 12870  00316A  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 12871  00316C  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 12872  00316E  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 12873  003170  2EE8               	decfsz	wreg,f,c
 12874  003172  D7F9               	goto	u8165
 12875  003174  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 12876  003178  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 12877  00317C  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 12878  003180  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 12879  003184  0E7D               	movlw	125
 12880  003186  6F64               	movwf	___lldiv@divisor& (0+255),b
 12881  003188  0E00               	movlw	0
 12882  00318A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12883  00318C  0E00               	movlw	0
 12884  00318E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12885  003190  0E00               	movlw	0
 12886  003192  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12887  003194  EC93  F032         	call	___lldiv	;wreg free
 12888  003198  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12889  00319C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12890  0031A0  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12891  0031A4  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12892  0031A8  0101               	movlb	1	; () banked
 12893  0031AA  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12894  0031AC  EC9D  F039         	call	_SwTimerSetTimeout
 12895                           
 12896                           ;radio_driver_SX1276.c: 994: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 12897  0031B0  0101               	movlb	1	; () banked
 12898  0031B2  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12899  0031B4  EC62  F030         	call	_SwTimerStart
 12900  0031B8                     l572:
 12901                           
 12902                           ;radio_driver_SX1276.c: 995: }
 12903                           ;radio_driver_SX1276.c: 996: }
 12904                           ;radio_driver_SX1276.c: 998: if (0 != RadioConfiguration.watchdogTimerTimeout)
 12905  0031B8  0101               	movlb	1	; () banked
 12906  0031BA  519E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 12907  0031BC  119F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 12908  0031BE  11A0               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 12909  0031C0  11A1               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 12910  0031C2  B4D8               	btfsc	status,2,c
 12911  0031C4  D061               	goto	l573
 12912                           
 12913                           ; BSR set to: 1
 12914                           ;radio_driver_SX1276.c: 999: {
 12915                           ;radio_driver_SX1276.c: 1000: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Ra
      +                          dioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguratio
      +                          n.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdog
      +                          TimerTimeout)) /
 12916  0031C6  51A1               	movf	(_RadioConfiguration+45)& (0+255),w,b
 12917  0031C8  E107               	bnz	u8180
 12918  0031CA  299E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 12919  0031CC  0EFF               	movlw	255
 12920  0031CE  599F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 12921  0031D0  0E0F               	movlw	15
 12922  0031D2  59A0               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 12923  0031D4  A0D8               	btfss	status,0,c
 12924  0031D6  D01D               	goto	l575
 12925  0031D8                     u8180:
 12926                           
 12927                           ; BSR set to: 1
 12928  0031D8  C19E  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 12929  0031DC  C19F  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 12930  0031E0  C1A0  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 12931  0031E4  C1A1  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 12932  0031E8  0E7D               	movlw	125
 12933  0031EA  0100               	movlb	0	; () banked
 12934  0031EC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12935  0031EE  0E00               	movlw	0
 12936  0031F0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12937  0031F2  0E00               	movlw	0
 12938  0031F4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12939  0031F6  0E00               	movlw	0
 12940  0031F8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12941  0031FA  EC93  F032         	call	___lldiv	;wreg free
 12942  0031FE  0E0C               	movlw	12
 12943  003200                     u8195:
 12944  003200  90D8               	bcf	status,0,c
 12945  003202  0100               	movlb	0	; () banked
 12946  003204  3760               	rlcf	?___lldiv& (0+255),f,b
 12947  003206  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 12948  003208  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 12949  00320A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 12950  00320C  2EE8               	decfsz	wreg,f,c
 12951  00320E  D7F8               	goto	u8195
 12952  003210  D023               	goto	L9
 12953  003212                     l575:
 12954                           
 12955                           ; BSR set to: 0
 12956  003212  C19E  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 12957  003216  C19F  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 12958  00321A  C1A0  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 12959  00321E  C1A1  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 12960  003222  0E0C               	movlw	12
 12961  003224                     u8205:
 12962  003224  90D8               	bcf	status,0,c
 12963  003226  0100               	movlb	0	; () banked
 12964  003228  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 12965  00322A  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 12966  00322C  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 12967  00322E  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 12968  003230  2EE8               	decfsz	wreg,f,c
 12969  003232  D7F8               	goto	u8205
 12970  003234  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 12971  003238  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 12972  00323C  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 12973  003240  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 12974  003244  0E7D               	movlw	125
 12975  003246  6F64               	movwf	___lldiv@divisor& (0+255),b
 12976  003248  0E00               	movlw	0
 12977  00324A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12978  00324C  0E00               	movlw	0
 12979  00324E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12980  003250  0E00               	movlw	0
 12981  003252  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12982  003254  EC93  F032         	call	___lldiv	;wreg free
 12983  003258                     L9:
 12984  003258  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$894
 12985  00325C  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$894+1
 12986  003260  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$894+2
 12987  003264  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$894+3
 12988  003268  C0B7  F06D         	movff	_RADIO_ReceiveStart$894,SwTimerSetTimeout@timeout
 12989  00326C  C0B8  F06E         	movff	_RADIO_ReceiveStart$894+1,SwTimerSetTimeout@timeout+1
 12990  003270  C0B9  F06F         	movff	_RADIO_ReceiveStart$894+2,SwTimerSetTimeout@timeout+2
 12991  003274  C0BA  F070         	movff	_RADIO_ReceiveStart$894+3,SwTimerSetTimeout@timeout+3
 12992  003278  0101               	movlb	1	; () banked
 12993  00327A  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12994  00327C  EC9D  F039         	call	_SwTimerSetTimeout
 12995                           
 12996                           ;radio_driver_SX1276.c: 1001: SwTimerStart(RadioConfiguration.watchdogTimerId);
 12997  003280  0101               	movlb	1	; () banked
 12998  003282  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12999  003284  EC62  F030         	call	_SwTimerStart
 13000  003288                     l573:
 13001                           
 13002                           ;radio_driver_SX1276.c: 1002: }
 13003                           ;radio_driver_SX1276.c: 1003: return ERR_NONE;
 13004  003288  0E00               	movlw	0
 13005  00328A  0100               	movlb	0	; () banked
 13006  00328C  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 13007  00328E  0E00               	movlw	0
 13008  003290  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 13009  003292  0012               	return	
 13010  003294                     __end_of_RADIO_ReceiveStart:
 13011                           	opt stack 0
 13012                           tosu	equ	0xFFF
 13013                           tosh	equ	0xFFE
 13014                           tosl	equ	0xFFD
 13015                           pclath	equ	0xFFA
 13016                           tblptru	equ	0xFF8
 13017                           tblptrh	equ	0xFF7
 13018                           tblptrl	equ	0xFF6
 13019                           tablat	equ	0xFF5
 13020                           prodh	equ	0xFF4
 13021                           prodl	equ	0xFF3
 13022                           intcon	equ	0xFF2
 13023                           intcon2	equ	0xFF1
 13024                           intcon3	equ	0xFF0
 13025                           postinc0	equ	0xFEE
 13026                           wreg	equ	0xFE8
 13027                           postinc1	equ	0xFE6
 13028                           postdec1	equ	0xFE5
 13029                           plusw1	equ	0xFE3
 13030                           fsr1h	equ	0xFE2
 13031                           fsr1l	equ	0xFE1
 13032                           indf2	equ	0xFDF
 13033                           postinc2	equ	0xFDE
 13034                           postdec2	equ	0xFDD
 13035                           fsr2h	equ	0xFDA
 13036                           fsr2l	equ	0xFD9
 13037                           status	equ	0xFD8
 13038                           
 13039 ;; *************** function _ConfigureRadioRx *****************
 13040 ;; Defined at:
 13041 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  dataRate        1    wreg     unsigned char 
 13044 ;;  freq            4    9[BANK0 ] unsigned long 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  dataRate        1   13[BANK0 ] unsigned char 
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      void 
 13049 ;; Registers used:
 13050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13059 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13060 ;;Total ram usage:        5 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    9
 13063 ;; This function calls:
 13064 ;;		_ConfigureRadio
 13065 ;;		_RADIO_SetCRC
 13066 ;;		_RADIO_SetIQInverted
 13067 ;; This function is called by:
 13068 ;;		_LORAWAN_ReceiveWindow1Callback
 13069 ;;		_LORAWAN_ReceiveWindow2Callback
 13070 ;;		_LORAWAN_EnterContinuousReceive
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text64
 13075  007848                     __ptext64:
 13076                           	opt stack 0
 13077  007848                     _ConfigureRadioRx:
 13078                           	opt stack 17
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;incstack = 0
 13082                           ;ConfigureRadioRx@dataRate stored from wreg
 13083  007848  0100               	movlb	0	; () banked
 13084  00784A  6F6D               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 13085                           
 13086                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 13087  00784C  C069  F064         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 13088  007850  C06A  F065         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 13089  007854  C06B  F066         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 13090  007858  C06C  F067         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 13091  00785C  0100               	movlb	0	; () banked
 13092  00785E  516D               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 13093  007860  ECCC  F036         	call	_ConfigureRadio
 13094                           
 13095                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 13096  007864  0E00               	movlw	0
 13097  007866  EC0D  F03F         	call	_RADIO_SetCRC
 13098                           
 13099                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 13100  00786A  0E01               	movlw	1
 13101  00786C  EC08  F03F         	call	_RADIO_SetIQInverted
 13102  007870  0012               	return		;funcret
 13103  007872                     __end_of_ConfigureRadioRx:
 13104                           	opt stack 0
 13105                           tosu	equ	0xFFF
 13106                           tosh	equ	0xFFE
 13107                           tosl	equ	0xFFD
 13108                           pclath	equ	0xFFA
 13109                           tblptru	equ	0xFF8
 13110                           tblptrh	equ	0xFF7
 13111                           tblptrl	equ	0xFF6
 13112                           tablat	equ	0xFF5
 13113                           prodh	equ	0xFF4
 13114                           prodl	equ	0xFF3
 13115                           intcon	equ	0xFF2
 13116                           intcon2	equ	0xFF1
 13117                           intcon3	equ	0xFF0
 13118                           postinc0	equ	0xFEE
 13119                           wreg	equ	0xFE8
 13120                           postinc1	equ	0xFE6
 13121                           postdec1	equ	0xFE5
 13122                           plusw1	equ	0xFE3
 13123                           fsr1h	equ	0xFE2
 13124                           fsr1l	equ	0xFE1
 13125                           indf2	equ	0xFDF
 13126                           postinc2	equ	0xFDE
 13127                           postdec2	equ	0xFDD
 13128                           fsr2h	equ	0xFDA
 13129                           fsr2l	equ	0xFD9
 13130                           status	equ	0xFD8
 13131                           
 13132 ;; *************** function _ConfigureRadio *****************
 13133 ;; Defined at:
 13134 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;  dataRate        1    wreg     unsigned char 
 13137 ;;  freq            4    4[BANK0 ] unsigned long 
 13138 ;; Auto vars:     Size  Location     Type
 13139 ;;  dataRate        1    8[BANK0 ] unsigned char 
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      void 
 13142 ;; Registers used:
 13143 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;Total ram usage:        5 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; Hardware stack levels required when called:    8
 13156 ;; This function calls:
 13157 ;;		_RADIO_SetBandwidth
 13158 ;;		_RADIO_SetChannelFrequency
 13159 ;;		_RADIO_SetFrequencyHopPeriod
 13160 ;;		_RADIO_SetLoRaSyncWord
 13161 ;;		_RADIO_SetModulation
 13162 ;;		_RADIO_SetSpreadingFactor
 13163 ;; This function is called by:
 13164 ;;		_ConfigureRadioRx
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text65
 13169  006D98                     __ptext65:
 13170                           	opt stack 0
 13171  006D98                     _ConfigureRadio:
 13172                           	opt stack 17
 13173                           
 13174                           ;incstack = 0
 13175                           ;ConfigureRadio@dataRate stored from wreg
 13176  006D98  0100               	movlb	0	; () banked
 13177  006D9A  6F68               	movwf	ConfigureRadio@dataRate& (0+255),b
 13178                           
 13179                           ;lorawan_na.c: 674: RADIO_SetModulation (MODULATION_LORA);
 13180  006D9C  0E01               	movlw	1
 13181  006D9E  ECE5  F03E         	call	_RADIO_SetModulation
 13182                           
 13183                           ;lorawan_na.c: 675: RADIO_SetChannelFrequency (freq);
 13184  006DA2  C064  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 13185  006DA6  C065  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 13186  006DAA  C066  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 13187  006DAE  C067  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 13188  006DB2  EC86  F031         	call	_RADIO_SetChannelFrequency	;wreg free
 13189                           
 13190                           ;lorawan_na.c: 676: RADIO_SetFrequencyHopPeriod(0);
 13191  006DB6  0E00               	movlw	0
 13192  006DB8  0100               	movlb	0	; () banked
 13193  006DBA  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 13194  006DBC  0E00               	movlw	0
 13195  006DBE  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 13196  006DC0  ECEA  F03E         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 13197                           
 13198                           ;lorawan_na.c: 677: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 13199  006DC4  0100               	movlb	0	; () banked
 13200  006DC6  5168               	movf	ConfigureRadio@dataRate& (0+255),w,b
 13201  006DC8  0D01               	mullw	1
 13202  006DCA  0E1F               	movlw	low _spreadingFactor
 13203  006DCC  24F3               	addwf	prodl,w,c
 13204  006DCE  6EF6               	movwf	tblptrl,c
 13205  006DD0  0EFF               	movlw	high _spreadingFactor
 13206  006DD2  20F4               	addwfc	prodh,w,c
 13207  006DD4  6EF7               	movwf	tblptrh,c
 13208  006DD6                     	if	1	;There are 3 active tblptr bytes
 13209  006DD6  6AF8               	clrf	tblptru,c
 13210  006DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 13211  006DDA  22F8               	addwfc	tblptru,f,c
 13212  006DDC                     	endif
 13213  006DDC  0008               	tblrd		*
 13214  006DDE  50F5               	movf	tablat,w,c
 13215  006DE0  ECFE  F03E         	call	_RADIO_SetSpreadingFactor
 13216                           
 13217                           ;lorawan_na.c: 678: RADIO_SetBandwidth (BW_500KHZ);
 13218  006DE4  0E09               	movlw	9
 13219  006DE6  EC12  F03F         	call	_RADIO_SetBandwidth
 13220                           
 13221                           ;lorawan_na.c: 679: RADIO_SetLoRaSyncWord(loRa.syncWord);
 13222  006DEA  0102               	movlb	2	; () banked
 13223  006DEC  51E6               	movf	(_loRa+230)& (0+255),w,b
 13224  006DEE  EC1C  F03F         	call	_RADIO_SetLoRaSyncWord
 13225  006DF2  0012               	return		;funcret
 13226  006DF4                     __end_of_ConfigureRadio:
 13227                           	opt stack 0
 13228                           tosu	equ	0xFFF
 13229                           tosh	equ	0xFFE
 13230                           tosl	equ	0xFFD
 13231                           pclath	equ	0xFFA
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           intcon2	equ	0xFF1
 13240                           intcon3	equ	0xFF0
 13241                           postinc0	equ	0xFEE
 13242                           wreg	equ	0xFE8
 13243                           postinc1	equ	0xFE6
 13244                           postdec1	equ	0xFE5
 13245                           plusw1	equ	0xFE3
 13246                           fsr1h	equ	0xFE2
 13247                           fsr1l	equ	0xFE1
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function _RADIO_SetModulation *****************
 13256 ;; Defined at:
 13257 ;;		line 1608 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  modulation      1    wreg     enum E6984
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;  modulation      1    0[BANK0 ] enum E6984
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;Total ram usage:        1 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:    7
 13278 ;; This function calls:
 13279 ;;		Nothing
 13280 ;; This function is called by:
 13281 ;;		_ConfigureRadio
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text66
 13286  007DCA                     __ptext66:
 13287                           	opt stack 0
 13288  007DCA                     _RADIO_SetModulation:
 13289                           	opt stack 17
 13290                           
 13291                           ;incstack = 0
 13292                           ;RADIO_SetModulation@modulation stored from wreg
 13293  007DCA  0100               	movlb	0	; () banked
 13294  007DCC  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 13295                           
 13296                           ;radio_driver_SX1276.c: 1610: RadioConfiguration.modulation = modulation;
 13297  007DCE  C060  F18C         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 13298  007DD2  0012               	return		;funcret
 13299  007DD4                     __end_of_RADIO_SetModulation:
 13300                           	opt stack 0
 13301                           tosu	equ	0xFFF
 13302                           tosh	equ	0xFFE
 13303                           tosl	equ	0xFFD
 13304                           pclath	equ	0xFFA
 13305                           tblptru	equ	0xFF8
 13306                           tblptrh	equ	0xFF7
 13307                           tblptrl	equ	0xFF6
 13308                           tablat	equ	0xFF5
 13309                           prodh	equ	0xFF4
 13310                           prodl	equ	0xFF3
 13311                           intcon	equ	0xFF2
 13312                           intcon2	equ	0xFF1
 13313                           intcon3	equ	0xFF0
 13314                           postinc0	equ	0xFEE
 13315                           wreg	equ	0xFE8
 13316                           postinc1	equ	0xFE6
 13317                           postdec1	equ	0xFE5
 13318                           plusw1	equ	0xFE3
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           indf2	equ	0xFDF
 13322                           postinc2	equ	0xFDE
 13323                           postdec2	equ	0xFDD
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 13329 ;; Defined at:
 13330 ;;		line 1643 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		None
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;Total ram usage:        2 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    7
 13351 ;; This function calls:
 13352 ;;		Nothing
 13353 ;; This function is called by:
 13354 ;;		_ConfigureRadio
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358                           	psect	text67
 13359  007DD4                     __ptext67:
 13360                           	opt stack 0
 13361  007DD4                     _RADIO_SetFrequencyHopPeriod:
 13362                           	opt stack 17
 13363                           
 13364                           ;radio_driver_SX1276.c: 1645: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 13365                           
 13366                           ;incstack = 0
 13367  007DD4  C060  F192         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 13368  007DD8  C061  F193         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 13369  007DDC  0012               	return		;funcret
 13370  007DDE                     __end_of_RADIO_SetFrequencyHopPeriod:
 13371                           	opt stack 0
 13372                           tosu	equ	0xFFF
 13373                           tosh	equ	0xFFE
 13374                           tosl	equ	0xFFD
 13375                           pclath	equ	0xFFA
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodh	equ	0xFF4
 13381                           prodl	equ	0xFF3
 13382                           intcon	equ	0xFF2
 13383                           intcon2	equ	0xFF1
 13384                           intcon3	equ	0xFF0
 13385                           postinc0	equ	0xFEE
 13386                           wreg	equ	0xFE8
 13387                           postinc1	equ	0xFE6
 13388                           postdec1	equ	0xFE5
 13389                           plusw1	equ	0xFE3
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           postdec2	equ	0xFDD
 13395                           fsr2h	equ	0xFDA
 13396                           fsr2l	equ	0xFD9
 13397                           status	equ	0xFD8
 13398                           
 13399 ;; *************** function _SetJoinFailState *****************
 13400 ;; Defined at:
 13401 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;		None
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;		None
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      void 
 13408 ;; Registers used:
 13409 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;Total ram usage:        0 bytes
 13420 ;; Hardware stack levels used:    1
 13421 ;; Hardware stack levels required when called:    8
 13422 ;; This function calls:
 13423 ;;		_RxJoinResponse
 13424 ;; This function is called by:
 13425 ;;		_LORAWAN_RxTimeout
 13426 ;;		_LORAWAN_RxDone
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           	psect	text68
 13431  0076AA                     __ptext68:
 13432                           	opt stack 0
 13433  0076AA                     _SetJoinFailState:
 13434                           	opt stack 18
 13435                           
 13436                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13437                           
 13438                           ;incstack = 0
 13439  0076AA  0102               	movlb	2	; () banked
 13440  0076AC  9902               	bcf	(_loRa+2)& (0+255),4,b
 13441                           
 13442                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13443  0076AE  9500               	bcf	_loRa& (0+255),2,b
 13444                           
 13445                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13446  0076B0  9102               	bcf	(_loRa+2)& (0+255),0,b
 13447  0076B2  9302               	bcf	(_loRa+2)& (0+255),1,b
 13448  0076B4  9502               	bcf	(_loRa+2)& (0+255),2,b
 13449  0076B6  9702               	bcf	(_loRa+2)& (0+255),3,b
 13450                           
 13451                           ; BSR set to: 2
 13452                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13453  0076B8  0100               	movlb	0	; () banked
 13454  0076BA  51FB               	movf	(_rxPayload+2)& (0+255),w,b
 13455  0076BC  11FC               	iorwf	(_rxPayload+3)& (0+255),w,b
 13456  0076BE  B4D8               	btfsc	status,2,c
 13457  0076C0  0012               	return	
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;lorawan.c: 1110: {
 13461                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13462  0076C2  D801               	call	u9618
 13463  0076C4  0012               	return	
 13464  0076C6                     u9618:
 13465  0076C6  0005               	push	
 13466  0076C8  6EFA               	movwf	pclath,c
 13467  0076CA  51FB               	movf	(_rxPayload+2)& (0+255),w,b
 13468  0076CC  6EFD               	movwf	tosl,c
 13469  0076CE  51FC               	movf	(_rxPayload+3)& (0+255),w,b
 13470  0076D0  6EFE               	movwf	tosh,c
 13471  0076D2  6AFF               	clrf	tosu,c
 13472  0076D4  50FA               	movf	pclath,w,c
 13473  0076D6  0E00               	movlw	0
 13474  0076D8  0012               	return		;indir
 13475  0076DA                     __end_of_SetJoinFailState:
 13476                           	opt stack 0
 13477                           tosu	equ	0xFFF
 13478                           tosh	equ	0xFFE
 13479                           tosl	equ	0xFFD
 13480                           pclath	equ	0xFFA
 13481                           tblptru	equ	0xFF8
 13482                           tblptrh	equ	0xFF7
 13483                           tblptrl	equ	0xFF6
 13484                           tablat	equ	0xFF5
 13485                           prodh	equ	0xFF4
 13486                           prodl	equ	0xFF3
 13487                           intcon	equ	0xFF2
 13488                           intcon2	equ	0xFF1
 13489                           intcon3	equ	0xFF0
 13490                           postinc0	equ	0xFEE
 13491                           wreg	equ	0xFE8
 13492                           postinc1	equ	0xFE6
 13493                           postdec1	equ	0xFE5
 13494                           plusw1	equ	0xFE3
 13495                           fsr1h	equ	0xFE2
 13496                           fsr1l	equ	0xFE1
 13497                           indf2	equ	0xFDF
 13498                           postinc2	equ	0xFDE
 13499                           postdec2	equ	0xFDD
 13500                           fsr2h	equ	0xFDA
 13501                           fsr2l	equ	0xFD9
 13502                           status	equ	0xFD8
 13503                           
 13504 ;; *************** function _RxJoinResponse *****************
 13505 ;; Defined at:
 13506 ;;		line 51 in file "main.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  status          1    wreg     unsigned char 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  status          1    0[COMRAM] unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13524 ;;Total ram usage:        0 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; Hardware stack levels required when called:    7
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_main
 13531 ;;		_SetJoinFailState
 13532 ;;		_UpdateJoinSuccessState
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text69
 13537  007EAA                     __ptext69:
 13538                           	opt stack 0
 13539  007EAA                     _RxJoinResponse:
 13540                           	opt stack 20
 13541                           
 13542                           ;incstack = 0
 13543  007EAA  0012               	return		;funcret
 13544  007EAC                     __end_of_RxJoinResponse:
 13545                           	opt stack 0
 13546                           tosu	equ	0xFFF
 13547                           tosh	equ	0xFFE
 13548                           tosl	equ	0xFFD
 13549                           pclath	equ	0xFFA
 13550                           tblptru	equ	0xFF8
 13551                           tblptrh	equ	0xFF7
 13552                           tblptrl	equ	0xFF6
 13553                           tablat	equ	0xFF5
 13554                           prodh	equ	0xFF4
 13555                           prodl	equ	0xFF3
 13556                           intcon	equ	0xFF2
 13557                           intcon2	equ	0xFF1
 13558                           intcon3	equ	0xFF0
 13559                           postinc0	equ	0xFEE
 13560                           wreg	equ	0xFE8
 13561                           postinc1	equ	0xFE6
 13562                           postdec1	equ	0xFE5
 13563                           plusw1	equ	0xFE3
 13564                           fsr1h	equ	0xFE2
 13565                           fsr1l	equ	0xFE1
 13566                           indf2	equ	0xFDF
 13567                           postinc2	equ	0xFDE
 13568                           postdec2	equ	0xFDD
 13569                           fsr2h	equ	0xFDA
 13570                           fsr2l	equ	0xFD9
 13571                           status	equ	0xFD8
 13572                           
 13573 ;; *************** function _MacExecuteCommands *****************
 13574 ;; Defined at:
 13575 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;  buffer          2   93[BANK0 ] PTR unsigned char 
 13578 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13579 ;;  fOptsLen        1   95[BANK0 ] unsigned char 
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;  ptr             2   99[BANK0 ] PTR unsigned char 
 13582 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13583 ;;  done            1   98[BANK0 ] unsigned char 
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  2   93[BANK0 ] PTR unsigned char 
 13586 ;; Registers used:
 13587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13593 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;Total ram usage:        8 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:   12
 13600 ;; This function calls:
 13601 ;;		_ExecuteDevStatus
 13602 ;;		_ExecuteDutyCycle
 13603 ;;		_ExecuteLinkAdr
 13604 ;;		_ExecuteLinkCheck
 13605 ;;		_ExecuteNewChannel
 13606 ;;		_ExecuteRxParamSetupReq
 13607 ;;		_ExecuteRxTimingSetup
 13608 ;; This function is called by:
 13609 ;;		_LORAWAN_RxDone
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text70
 13614  0025CC                     __ptext70:
 13615                           	opt stack 0
 13616  0025CC                     _MacExecuteCommands:
 13617                           	opt stack 14
 13618                           
 13619                           ;lorawan.c: 1577: bool done = 0;
 13620                           
 13621                           ;incstack = 0
 13622  0025CC  0E00               	movlw	0
 13623  0025CE  0100               	movlb	0	; () banked
 13624  0025D0  6FC2               	movwf	MacExecuteCommands@done& (0+255),b
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;lorawan.c: 1578: uint8_t *ptr;
 13628                           ;lorawan.c: 1579: ptr = buffer;
 13629  0025D2  C0BD  F0C3         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13630  0025D6  C0BE  F0C4         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13631                           
 13632                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13633  0025DA  D15A               	goto	l2004
 13634  0025DC                     
 13635                           ; BSR set to: 0
 13636                           ;lorawan.c: 1581: {
 13637                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13638                           
 13639                           ; BSR set to: 0
 13640  0025DC  0102               	movlb	2	; () banked
 13641  0025DE  5198               	movf	(_loRa+152)& (0+255),w,b
 13642  0025E0  0D02               	mullw	2
 13643  0025E2  0E00               	movlw	low _loRa
 13644  0025E4  0100               	movlb	0	; () banked
 13645  0025E6  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13646  0025E8  0E02               	movlw	high _loRa
 13647  0025EA  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13648  0025EC  0E99               	movlw	153
 13649  0025EE  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13650  0025F0  0E00               	movlw	0
 13651  0025F2  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13652  0025F4  50F3               	movf	prodl,w,c
 13653  0025F6  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13654  0025F8  50F4               	movf	prodh,w,c
 13655  0025FA  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13656  0025FC  0E01               	movlw	1
 13657  0025FE  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13658  002600  6ED9               	movwf	fsr2l,c
 13659  002602  0E00               	movlw	0
 13660  002604  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13661  002606  6EDA               	movwf	fsr2h,c
 13662  002608  0102               	movlb	2	; () banked
 13663  00260A  90DF               	bcf	indf2,0,c
 13664                           
 13665                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13666  00260C  5198               	movf	(_loRa+152)& (0+255),w,b
 13667  00260E  0D02               	mullw	2
 13668  002610  0E00               	movlw	low _loRa
 13669  002612  0100               	movlb	0	; () banked
 13670  002614  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13671  002616  0E02               	movlw	high _loRa
 13672  002618  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13673  00261A  0E99               	movlw	153
 13674  00261C  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13675  00261E  0E00               	movlw	0
 13676  002620  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13677  002622  50F3               	movf	prodl,w,c
 13678  002624  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13679  002626  50F4               	movf	prodh,w,c
 13680  002628  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13681  00262A  0E01               	movlw	1
 13682  00262C  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13683  00262E  6ED9               	movwf	fsr2l,c
 13684  002630  0E00               	movlw	0
 13685  002632  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13686  002634  6EDA               	movwf	fsr2h,c
 13687  002636  0102               	movlb	2	; () banked
 13688  002638  92DF               	bcf	indf2,1,c
 13689                           
 13690                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13691  00263A  5198               	movf	(_loRa+152)& (0+255),w,b
 13692  00263C  0D02               	mullw	2
 13693  00263E  0E00               	movlw	low _loRa
 13694  002640  0100               	movlb	0	; () banked
 13695  002642  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13696  002644  0E02               	movlw	high _loRa
 13697  002646  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13698  002648  0E99               	movlw	153
 13699  00264A  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13700  00264C  0E00               	movlw	0
 13701  00264E  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13702  002650  50F3               	movf	prodl,w,c
 13703  002652  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13704  002654  50F4               	movf	prodh,w,c
 13705  002656  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13706  002658  0E01               	movlw	1
 13707  00265A  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13708  00265C  6ED9               	movwf	fsr2l,c
 13709  00265E  0E00               	movlw	0
 13710  002660  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13711  002662  6EDA               	movwf	fsr2h,c
 13712  002664  0102               	movlb	2	; () banked
 13713  002666  94DF               	bcf	indf2,2,c
 13714                           
 13715                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13716  002668  5198               	movf	(_loRa+152)& (0+255),w,b
 13717  00266A  0D02               	mullw	2
 13718  00266C  0E00               	movlw	low _loRa
 13719  00266E  0100               	movlb	0	; () banked
 13720  002670  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13721  002672  0E02               	movlw	high _loRa
 13722  002674  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13723  002676  0E99               	movlw	153
 13724  002678  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13725  00267A  0E00               	movlw	0
 13726  00267C  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13727  00267E  50F3               	movf	prodl,w,c
 13728  002680  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13729  002682  50F4               	movf	prodh,w,c
 13730  002684  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13731  002686  0E01               	movlw	1
 13732  002688  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13733  00268A  6ED9               	movwf	fsr2l,c
 13734  00268C  0E00               	movlw	0
 13735  00268E  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13736  002690  6EDA               	movwf	fsr2h,c
 13737  002692  0102               	movlb	2	; () banked
 13738  002694  96DF               	bcf	indf2,3,c
 13739                           
 13740                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13741  002696  5198               	movf	(_loRa+152)& (0+255),w,b
 13742  002698  0D02               	mullw	2
 13743  00269A  0E00               	movlw	low _loRa
 13744  00269C  0100               	movlb	0	; () banked
 13745  00269E  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13746  0026A0  0E02               	movlw	high _loRa
 13747  0026A2  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13748  0026A4  0E99               	movlw	153
 13749  0026A6  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13750  0026A8  0E00               	movlw	0
 13751  0026AA  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13752  0026AC  50F3               	movf	prodl,w,c
 13753  0026AE  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13754  0026B0  50F4               	movf	prodh,w,c
 13755  0026B2  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13756  0026B4  0E01               	movlw	1
 13757  0026B6  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13758  0026B8  6ED9               	movwf	fsr2l,c
 13759  0026BA  0E00               	movlw	0
 13760  0026BC  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13761  0026BE  6EDA               	movwf	fsr2h,c
 13762  0026C0  0102               	movlb	2	; () banked
 13763  0026C2  98DF               	bcf	indf2,4,c
 13764                           
 13765                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13766  0026C4  5198               	movf	(_loRa+152)& (0+255),w,b
 13767  0026C6  0D02               	mullw	2
 13768  0026C8  0E00               	movlw	low _loRa
 13769  0026CA  0100               	movlb	0	; () banked
 13770  0026CC  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13771  0026CE  0E02               	movlw	high _loRa
 13772  0026D0  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13773  0026D2  0E99               	movlw	153
 13774  0026D4  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13775  0026D6  0E00               	movlw	0
 13776  0026D8  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13777  0026DA  50F3               	movf	prodl,w,c
 13778  0026DC  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13779  0026DE  50F4               	movf	prodh,w,c
 13780  0026E0  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13781  0026E2  0E01               	movlw	1
 13782  0026E4  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13783  0026E6  6ED9               	movwf	fsr2l,c
 13784  0026E8  0E00               	movlw	0
 13785  0026EA  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13786  0026EC  6EDA               	movwf	fsr2h,c
 13787  0026EE  0102               	movlb	2	; () banked
 13788  0026F0  9ADF               	bcf	indf2,5,c
 13789                           
 13790                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13791  0026F2  5198               	movf	(_loRa+152)& (0+255),w,b
 13792  0026F4  0D02               	mullw	2
 13793  0026F6  0E00               	movlw	low _loRa
 13794  0026F8  0100               	movlb	0	; () banked
 13795  0026FA  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13796  0026FC  0E02               	movlw	high _loRa
 13797  0026FE  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13798  002700  0E99               	movlw	153
 13799  002702  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13800  002704  0E00               	movlw	0
 13801  002706  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13802  002708  50F3               	movf	prodl,w,c
 13803  00270A  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13804  00270C  50F4               	movf	prodh,w,c
 13805  00270E  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13806  002710  0E01               	movlw	1
 13807  002712  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13808  002714  6ED9               	movwf	fsr2l,c
 13809  002716  0E00               	movlw	0
 13810  002718  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13811  00271A  6EDA               	movwf	fsr2h,c
 13812  00271C  0102               	movlb	2	; () banked
 13813  00271E  9CDF               	bcf	indf2,6,c
 13814                           
 13815                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13816  002720  5198               	movf	(_loRa+152)& (0+255),w,b
 13817  002722  0D02               	mullw	2
 13818  002724  0E00               	movlw	low _loRa
 13819  002726  0100               	movlb	0	; () banked
 13820  002728  6FC0               	movwf	??_MacExecuteCommands& (0+255),b
 13821  00272A  0E02               	movlw	high _loRa
 13822  00272C  6FC1               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13823  00272E  0E99               	movlw	153
 13824  002730  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13825  002732  0E00               	movlw	0
 13826  002734  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13827  002736  50F3               	movf	prodl,w,c
 13828  002738  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 13829  00273A  50F4               	movf	prodh,w,c
 13830  00273C  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13831  00273E  0E01               	movlw	1
 13832  002740  25C0               	addwf	??_MacExecuteCommands& (0+255),w,b
 13833  002742  6ED9               	movwf	fsr2l,c
 13834  002744  0E00               	movlw	0
 13835  002746  21C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13836  002748  6EDA               	movwf	fsr2h,c
 13837  00274A  0102               	movlb	2	; () banked
 13838  00274C  9EDF               	bcf	indf2,7,c
 13839                           
 13840                           ; BSR set to: 2
 13841                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13842  00274E  C0C3  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13843  002752  C0C4  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13844  002756  5198               	movf	(_loRa+152)& (0+255),w,b
 13845  002758  0D02               	mullw	2
 13846  00275A  0E99               	movlw	low (_loRa+153)
 13847  00275C  24F3               	addwf	prodl,w,c
 13848  00275E  6EE9               	movwf	fsr0l,c
 13849  002760  0E02               	movlw	high (_loRa+153)
 13850  002762  20F4               	addwfc	prodh,w,c
 13851  002764  6EEA               	movwf	fsr0h,c
 13852  002766  CFDF FFEF          	movff	indf2,indf0
 13853                           
 13854                           ;lorawan.c: 1595: switch (*ptr ++)
 13855  00276A  D064               	goto	l1994
 13856  00276C                     
 13857                           ;lorawan.c: 1598: {
 13858                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13859                           
 13860                           ; BSR set to: 2
 13861  00276C  C0C3  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13862  002770  C0C4  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13863  002774  EC24  F03B         	call	_ExecuteLinkCheck
 13864  002778  C060  F0C3         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13865  00277C  C061  F0C4         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13866  002780  D04D               	goto	l10088
 13867  002782                     
 13868                           ;lorawan.c: 1605: {
 13869                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13870                           
 13871                           ; BSR set to: 2
 13872  002782  C0C3  F070         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13873  002786  C0C4  F071         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13874  00278A  EC09  F009         	call	_ExecuteLinkAdr	;wreg free
 13875  00278E  C070  F0C3         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13876  002792  C071  F0C4         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13877                           
 13878                           ;lorawan.c: 1607: } break;
 13879  002796  D06C               	goto	l1996
 13880  002798                     
 13881                           ;lorawan.c: 1610: {
 13882                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13883  002798  C0C3  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13884  00279C  C0C4  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13885  0027A0  ECB0  F03C         	call	_ExecuteDutyCycle	;wreg free
 13886  0027A4  C060  F0C3         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13887  0027A8  C061  F0C4         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13888                           
 13889                           ;lorawan.c: 1612: } break;
 13890  0027AC  D061               	goto	l1996
 13891  0027AE                     
 13892                           ;lorawan.c: 1615: {
 13893                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13894  0027AE  C0C3  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13895  0027B2  C0C4  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13896  0027B6  EC4A  F019         	call	_ExecuteRxParamSetupReq	;wreg free
 13897  0027BA  C0A6  F0C3         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13898  0027BE  C0A7  F0C4         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13899                           
 13900                           ;lorawan.c: 1617: } break;
 13901  0027C2  D056               	goto	l1996
 13902  0027C4                     
 13903                           ;lorawan.c: 1620: {
 13904                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13905  0027C4  C0C3  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13906  0027C8  C0C4  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13907  0027CC  ECF9  F03E         	call	_ExecuteDevStatus	;wreg free
 13908  0027D0  C060  F0C3         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13909  0027D4  C061  F0C4         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13910                           
 13911                           ;lorawan.c: 1622: } break;
 13912  0027D8  D04B               	goto	l1996
 13913  0027DA                     
 13914                           ;lorawan.c: 1625: {
 13915                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13916  0027DA  C0C3  F0B3         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13917  0027DE  C0C4  F0B4         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13918  0027E2  EC54  F01A         	call	_ExecuteNewChannel	;wreg free
 13919  0027E6  C0B3  F0C3         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13920  0027EA  C0B4  F0C4         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13921                           
 13922                           ;lorawan.c: 1628: } break;
 13923  0027EE  D040               	goto	l1996
 13924  0027F0                     
 13925                           ;lorawan.c: 1631: {
 13926                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13927  0027F0  C0C3  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13928  0027F4  C0C4  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13929  0027F8  EC4D  F03C         	call	_ExecuteRxTimingSetup	;wreg free
 13930  0027FC  C067  F0C3         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13931  002800  C068  F0C4         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13932                           
 13933                           ;lorawan.c: 1633: } break;
 13934  002804  D035               	goto	l1996
 13935  002806                     
 13936                           ;lorawan.c: 1636: {
 13937                           ;lorawan.c: 1637: done = 1;
 13938  002806  0E01               	movlw	1
 13939  002808  0100               	movlb	0	; () banked
 13940  00280A  6FC2               	movwf	MacExecuteCommands@done& (0+255),b
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13944  00280C  51BF               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13945  00280E  0D01               	mullw	1
 13946  002810  50F3               	movf	prodl,w,c
 13947  002812  25BD               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13948  002814  6FC3               	movwf	MacExecuteCommands@ptr& (0+255),b
 13949  002816  50F4               	movf	prodh,w,c
 13950  002818  21BE               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13951  00281A  6FC4               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13952  00281C                     l10088:
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13956  00281C  0102               	movlb	2	; () banked
 13957  00281E  5198               	movf	(_loRa+152)& (0+255),w,b
 13958  002820  0D02               	mullw	2
 13959  002822  0E99               	movlw	low (_loRa+153)
 13960  002824  24F3               	addwf	prodl,w,c
 13961  002826  6ED9               	movwf	fsr2l,c
 13962  002828  0E02               	movlw	high (_loRa+153)
 13963  00282A  20F4               	addwfc	prodh,w,c
 13964  00282C  6EDA               	movwf	fsr2h,c
 13965  00282E  0EFF               	movlw	255
 13966  002830  6EDF               	movwf	indf2,c
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;lorawan.c: 1641: }
 13970                           
 13971                           ;lorawan.c: 1640: } break;
 13972  002832  D01E               	goto	l1996
 13973  002834                     l1994:
 13974                           
 13975                           ; BSR set to: 2
 13976                           
 13977                           ; BSR set to: 2
 13978  002834  C0C3  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13979  002838  C0C4  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13980  00283C  0100               	movlb	0	; () banked
 13981  00283E  4BC3               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13982  002840  2BC4               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13983  002842  50DF               	movf	indf2,w,c
 13984                           
 13985                           ; Switch size 1, requested type "space"
 13986                           ; Number of cases is 7, Range of values is 2 to 8
 13987                           ; switch strategies available:
 13988                           ; Name         Instructions Cycles
 13989                           ; simple_byte           22    12 (average)
 13990                           ;	Chosen strategy is simple_byte
 13991  002844  0A02               	xorlw	2	; case 2
 13992  002846  B4D8               	btfsc	status,2,c
 13993  002848  D791               	goto	l1995
 13994  00284A  0A01               	xorlw	1	; case 3
 13995  00284C  B4D8               	btfsc	status,2,c
 13996  00284E  D799               	goto	l1997
 13997  002850  0A07               	xorlw	7	; case 4
 13998  002852  B4D8               	btfsc	status,2,c
 13999  002854  D7A1               	goto	l1998
 14000  002856  0A01               	xorlw	1	; case 5
 14001  002858  B4D8               	btfsc	status,2,c
 14002  00285A  D7A9               	goto	l1999
 14003  00285C  0A03               	xorlw	3	; case 6
 14004  00285E  B4D8               	btfsc	status,2,c
 14005  002860  D7B1               	goto	l2000
 14006  002862  0A01               	xorlw	1	; case 7
 14007  002864  B4D8               	btfsc	status,2,c
 14008  002866  D7B9               	goto	l2001
 14009  002868  0A0F               	xorlw	15	; case 8
 14010  00286A  B4D8               	btfsc	status,2,c
 14011  00286C  D7C1               	goto	l2002
 14012  00286E  D7CB               	goto	l2003
 14013  002870                     l1996:
 14014                           
 14015                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 14016                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 14017                           
 14018                           ; BSR set to: 0
 14019  002870  0102               	movlb	2	; () banked
 14020  002872  5198               	movf	(_loRa+152)& (0+255),w,b
 14021  002874  0D02               	mullw	2
 14022  002876  0E99               	movlw	low (_loRa+153)
 14023  002878  24F3               	addwf	prodl,w,c
 14024  00287A  6ED9               	movwf	fsr2l,c
 14025  00287C  0E02               	movlw	high (_loRa+153)
 14026  00287E  20F4               	addwfc	prodh,w,c
 14027  002880  6EDA               	movwf	fsr2h,c
 14028  002882  28DE               	incf	postinc2,w,c
 14029  002884  B4D8               	btfsc	status,2,c
 14030  002886  D004               	goto	l2004
 14031                           
 14032                           ; BSR set to: 2
 14033  002888  0E10               	movlw	16
 14034  00288A  6198               	cpfslt	(_loRa+152)& (0+255),b
 14035  00288C  D001               	goto	l2004
 14036                           
 14037                           ; BSR set to: 2
 14038                           ;lorawan.c: 1645: {
 14039                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 14040  00288E  2B98               	incf	(_loRa+152)& (0+255),f,b
 14041  002890                     l2004:
 14042                           
 14043                           ; BSR set to: 2
 14044                           
 14045                           ; BSR set to: 2
 14046  002890  0100               	movlb	0	; () banked
 14047  002892  51BF               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14048  002894  0D01               	mullw	1
 14049  002896  C0BD  F0C0         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 14050  00289A  C0BE  F0C1         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 14051  00289E  50F3               	movf	prodl,w,c
 14052  0028A0  27C0               	addwf	??_MacExecuteCommands& (0+255),f,b
 14053  0028A2  50F4               	movf	prodh,w,c
 14054  0028A4  23C1               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14055  0028A6  51C0               	movf	??_MacExecuteCommands& (0+255),w,b
 14056  0028A8  5DC3               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 14057  0028AA  51C1               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 14058  0028AC  59C4               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 14059  0028AE  B0D8               	btfsc	status,0,c
 14060  0028B0  D003               	goto	u10150
 14061                           
 14062                           ; BSR set to: 0
 14063  0028B2  51C2               	movf	MacExecuteCommands@done& (0+255),w,b
 14064  0028B4  B4D8               	btfsc	status,2,c
 14065  0028B6  D692               	goto	l1993
 14066  0028B8                     u10150:
 14067                           
 14068                           ; BSR set to: 0
 14069                           ;lorawan.c: 1647: }
 14070                           ;lorawan.c: 1648: }
 14071                           ;lorawan.c: 1649: return ptr;
 14072                           
 14073                           ; BSR set to: 0
 14074                           
 14075                           ; BSR set to: 0
 14076  0028B8  C0C3  F0BD         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 14077  0028BC  C0C4  F0BE         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 14078  0028C0  0012               	return	
 14079  0028C2                     __end_of_MacExecuteCommands:
 14080                           	opt stack 0
 14081                           tosu	equ	0xFFF
 14082                           tosh	equ	0xFFE
 14083                           tosl	equ	0xFFD
 14084                           pclath	equ	0xFFA
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           intcon2	equ	0xFF1
 14093                           intcon3	equ	0xFF0
 14094                           indf0	equ	0xFEF
 14095                           postinc0	equ	0xFEE
 14096                           fsr0h	equ	0xFEA
 14097                           fsr0l	equ	0xFE9
 14098                           wreg	equ	0xFE8
 14099                           postinc1	equ	0xFE6
 14100                           postdec1	equ	0xFE5
 14101                           plusw1	equ	0xFE3
 14102                           fsr1h	equ	0xFE2
 14103                           fsr1l	equ	0xFE1
 14104                           indf2	equ	0xFDF
 14105                           postinc2	equ	0xFDE
 14106                           postdec2	equ	0xFDD
 14107                           fsr2h	equ	0xFDA
 14108                           fsr2l	equ	0xFD9
 14109                           status	equ	0xFD8
 14110                           
 14111 ;; *************** function _ExecuteRxTimingSetup *****************
 14112 ;; Defined at:
 14113 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 14116 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;  delay           1    9[BANK0 ] unsigned char 
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  2    7[BANK0 ] PTR unsigned char 
 14121 ;; Registers used:
 14122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;Total ram usage:        3 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; Hardware stack levels required when called:    9
 14135 ;; This function calls:
 14136 ;;		_UpdateReceiveDelays
 14137 ;; This function is called by:
 14138 ;;		_MacExecuteCommands
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text71
 14143  00789A                     __ptext71:
 14144                           	opt stack 0
 14145  00789A                     _ExecuteRxTimingSetup:
 14146                           	opt stack 16
 14147                           
 14148                           ;lorawan.c: 1661: uint8_t delay;
 14149                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;incstack = 0
 14153  00789A  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 14154  00789E  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 14155  0078A2  50DF               	movf	indf2,w,c
 14156  0078A4  0B0F               	andlw	15
 14157  0078A6  0100               	movlb	0	; () banked
 14158  0078A8  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 14159                           
 14160                           ; BSR set to: 0
 14161                           ;lorawan.c: 1664: ptr++;
 14162  0078AA  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 14163  0078AC  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 14164                           
 14165                           ; BSR set to: 0
 14166                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 14167  0078AE  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 14168  0078B0  EC03  F03A         	call	_UpdateReceiveDelays
 14169                           
 14170                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 14171  0078B4  0102               	movlb	2	; () banked
 14172  0078B6  8104               	bsf	(_loRa+4)& (0+255),0,b
 14173                           
 14174                           ; BSR set to: 2
 14175                           ;lorawan.c: 1669: return ptr;
 14176  0078B8  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 14177  0078BC  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 14178  0078C0  0012               	return	
 14179  0078C2                     __end_of_ExecuteRxTimingSetup:
 14180                           	opt stack 0
 14181                           tosu	equ	0xFFF
 14182                           tosh	equ	0xFFE
 14183                           tosl	equ	0xFFD
 14184                           pclath	equ	0xFFA
 14185                           tblptru	equ	0xFF8
 14186                           tblptrh	equ	0xFF7
 14187                           tblptrl	equ	0xFF6
 14188                           tablat	equ	0xFF5
 14189                           prodh	equ	0xFF4
 14190                           prodl	equ	0xFF3
 14191                           intcon	equ	0xFF2
 14192                           intcon2	equ	0xFF1
 14193                           intcon3	equ	0xFF0
 14194                           indf0	equ	0xFEF
 14195                           postinc0	equ	0xFEE
 14196                           fsr0h	equ	0xFEA
 14197                           fsr0l	equ	0xFE9
 14198                           wreg	equ	0xFE8
 14199                           postinc1	equ	0xFE6
 14200                           postdec1	equ	0xFE5
 14201                           plusw1	equ	0xFE3
 14202                           fsr1h	equ	0xFE2
 14203                           fsr1l	equ	0xFE1
 14204                           indf2	equ	0xFDF
 14205                           postinc2	equ	0xFDE
 14206                           postdec2	equ	0xFDD
 14207                           fsr2h	equ	0xFDA
 14208                           fsr2l	equ	0xFD9
 14209                           status	equ	0xFD8
 14210                           
 14211 ;; *************** function _UpdateReceiveDelays *****************
 14212 ;; Defined at:
 14213 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;  delay           1    wreg     unsigned char 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  delay           1    6[BANK0 ] unsigned char 
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      void 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14230 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14231 ;;Total ram usage:        1 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    8
 14234 ;; This function calls:
 14235 ;;		___wmul
 14236 ;; This function is called by:
 14237 ;;		_LORAWAN_RxDone
 14238 ;;		_ExecuteRxTimingSetup
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           
 14242                           	psect	text72
 14243  007406                     __ptext72:
 14244                           	opt stack 0
 14245  007406                     _UpdateReceiveDelays:
 14246                           	opt stack 18
 14247                           
 14248                           ; BSR set to: 2
 14249                           ;incstack = 0
 14250                           ;UpdateReceiveDelays@delay stored from wreg
 14251  007406  0100               	movlb	0	; () banked
 14252  007408  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 14253                           
 14254                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 14255  00740A  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 14256  00740E  0100               	movlb	0	; () banked
 14257  007410  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14258  007412  0E03               	movlw	3
 14259  007414  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14260  007416  0EE8               	movlw	232
 14261  007418  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14262  00741A  EC61  F03C         	call	___wmul	;wreg free
 14263  00741E  C060  F286         	movff	?___wmul,_loRa+134
 14264  007422  C061  F287         	movff	?___wmul+1,_loRa+135
 14265                           
 14266                           ;lorawan.c: 2029: if (delay == 0)
 14267  007426  0100               	movlb	0	; () banked
 14268  007428  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14269  00742A  A4D8               	btfss	status,2,c
 14270  00742C  D005               	goto	l2103
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;lorawan.c: 2030: {
 14274                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 14275  00742E  0E03               	movlw	3
 14276  007430  0102               	movlb	2	; () banked
 14277  007432  6F87               	movwf	(_loRa+135)& (0+255),b
 14278  007434  0EE8               	movlw	232
 14279  007436  6F86               	movwf	(_loRa+134)& (0+255),b
 14280  007438                     l2103:
 14281                           
 14282                           ;lorawan.c: 2032: }
 14283                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 14284                           
 14285                           ; BSR set to: 2
 14286  007438  0EE8               	movlw	232
 14287  00743A  0102               	movlb	2	; () banked
 14288  00743C  2586               	addwf	(_loRa+134)& (0+255),w,b
 14289  00743E  6F88               	movwf	(_loRa+136)& (0+255),b
 14290  007440  0E03               	movlw	3
 14291  007442  2187               	addwfc	(_loRa+135)& (0+255),w,b
 14292  007444  6F89               	movwf	(_loRa+137)& (0+255),b
 14293                           
 14294                           ; BSR set to: 2
 14295  007446  0012               	return		;funcret
 14296  007448                     __end_of_UpdateReceiveDelays:
 14297                           	opt stack 0
 14298                           tosu	equ	0xFFF
 14299                           tosh	equ	0xFFE
 14300                           tosl	equ	0xFFD
 14301                           pclath	equ	0xFFA
 14302                           tblptru	equ	0xFF8
 14303                           tblptrh	equ	0xFF7
 14304                           tblptrl	equ	0xFF6
 14305                           tablat	equ	0xFF5
 14306                           prodh	equ	0xFF4
 14307                           prodl	equ	0xFF3
 14308                           intcon	equ	0xFF2
 14309                           intcon2	equ	0xFF1
 14310                           intcon3	equ	0xFF0
 14311                           indf0	equ	0xFEF
 14312                           postinc0	equ	0xFEE
 14313                           fsr0h	equ	0xFEA
 14314                           fsr0l	equ	0xFE9
 14315                           wreg	equ	0xFE8
 14316                           postinc1	equ	0xFE6
 14317                           postdec1	equ	0xFE5
 14318                           plusw1	equ	0xFE3
 14319                           fsr1h	equ	0xFE2
 14320                           fsr1l	equ	0xFE1
 14321                           indf2	equ	0xFDF
 14322                           postinc2	equ	0xFDE
 14323                           postdec2	equ	0xFDD
 14324                           fsr2h	equ	0xFDA
 14325                           fsr2l	equ	0xFD9
 14326                           status	equ	0xFD8
 14327                           
 14328 ;; *************** function ___wmul *****************
 14329 ;; Defined at:
 14330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14333 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;  product         2    4[BANK0 ] unsigned int 
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  2    0[BANK0 ] unsigned int 
 14338 ;; Registers used:
 14339 ;;		wreg, status,2, status,0, prodl, prodh
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14349 ;;Total ram usage:        6 bytes
 14350 ;; Hardware stack levels used:    1
 14351 ;; Hardware stack levels required when called:    7
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		_UpdateReceiveDelays
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text73
 14360  0078C2                     __ptext73:
 14361                           	opt stack 0
 14362  0078C2                     ___wmul:
 14363                           	opt stack 18
 14364                           
 14365                           ; BSR set to: 2
 14366                           ;incstack = 0
 14367  0078C2  0100               	movlb	0	; () banked
 14368  0078C4  5160               	movf	___wmul@multiplier& (0+255),w,b
 14369  0078C6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14370  0078C8  CFF3 F064          	movff	prodl,___wmul@product
 14371  0078CC  CFF4 F065          	movff	prodh,___wmul@product+1
 14372  0078D0  5160               	movf	___wmul@multiplier& (0+255),w,b
 14373  0078D2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14374  0078D4  50F3               	movf	prodl,w,c
 14375  0078D6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14376  0078D8  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14377  0078DA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14378  0078DC  50F3               	movf	prodl,w,c
 14379  0078DE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14380                           
 14381                           ; BSR set to: 0
 14382  0078E0  C064  F060         	movff	___wmul@product,?___wmul
 14383  0078E4  C065  F061         	movff	___wmul@product+1,?___wmul+1
 14384  0078E8  0012               	return	
 14385  0078EA                     __end_of___wmul:
 14386                           	opt stack 0
 14387                           tosu	equ	0xFFF
 14388                           tosh	equ	0xFFE
 14389                           tosl	equ	0xFFD
 14390                           pclath	equ	0xFFA
 14391                           tblptru	equ	0xFF8
 14392                           tblptrh	equ	0xFF7
 14393                           tblptrl	equ	0xFF6
 14394                           tablat	equ	0xFF5
 14395                           prodh	equ	0xFF4
 14396                           prodl	equ	0xFF3
 14397                           intcon	equ	0xFF2
 14398                           intcon2	equ	0xFF1
 14399                           intcon3	equ	0xFF0
 14400                           indf0	equ	0xFEF
 14401                           postinc0	equ	0xFEE
 14402                           fsr0h	equ	0xFEA
 14403                           fsr0l	equ	0xFE9
 14404                           wreg	equ	0xFE8
 14405                           postinc1	equ	0xFE6
 14406                           postdec1	equ	0xFE5
 14407                           plusw1	equ	0xFE3
 14408                           fsr1h	equ	0xFE2
 14409                           fsr1l	equ	0xFE1
 14410                           indf2	equ	0xFDF
 14411                           postinc2	equ	0xFDE
 14412                           postdec2	equ	0xFDD
 14413                           fsr2h	equ	0xFDA
 14414                           fsr2l	equ	0xFD9
 14415                           status	equ	0xFD8
 14416                           
 14417 ;; *************** function _ExecuteRxParamSetupReq *****************
 14418 ;; Defined at:
 14419 ;;		line 587 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14422 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  frequency       4   74[BANK0 ] unsigned long 
 14425 ;;  dlSettings      1   78[BANK0 ] struct .
 14426 ;; Return value:  Size  Location     Type
 14427 ;;                  2   70[BANK0 ] PTR unsigned char 
 14428 ;; Registers used:
 14429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14430 ;; Tracked objects:
 14431 ;;		On entry : 0/0
 14432 ;;		On exit  : 0/0
 14433 ;;		Unchanged: 0/0
 14434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14439 ;;Total ram usage:        9 bytes
 14440 ;; Hardware stack levels used:    1
 14441 ;; Hardware stack levels required when called:    9
 14442 ;; This function calls:
 14443 ;;		_UpdateReceiveWindow2Parameters
 14444 ;;		_ValidateDataRateReception
 14445 ;;		_ValidateFrequency
 14446 ;;		_ValidateRxOffset
 14447 ;;		___lmul
 14448 ;; This function is called by:
 14449 ;;		_MacExecuteCommands
 14450 ;; This function uses a non-reentrant model
 14451 ;;
 14452                           
 14453                           	psect	text74
 14454  003294                     __ptext74:
 14455                           	opt stack 0
 14456  003294                     _ExecuteRxParamSetupReq:
 14457                           	opt stack 16
 14458                           
 14459                           ;lorawan_na.c: 589: DlSettings_t dlSettings;
 14460                           ;lorawan_na.c: 590: uint32_t frequency = 0;
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;incstack = 0
 14464  003294  0E00               	movlw	0
 14465  003296  0100               	movlb	0	; () banked
 14466  003298  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14467  00329A  0E00               	movlw	0
 14468  00329C  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14469  00329E  0E00               	movlw	0
 14470  0032A0  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14471  0032A2  0E00               	movlw	0
 14472  0032A4  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;lorawan_na.c: 594: dlSettings.value = *(ptr++);
 14476  0032A6  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14477  0032AA  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14478  0032AE  50DF               	movf	indf2,w,c
 14479  0032B0  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14480                           
 14481                           ; BSR set to: 0
 14482  0032B2  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14483  0032B4  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;lorawan_na.c: 596: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14487  0032B6  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14488  0032BA  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14489  0032BE  0EFF               	movlw	255
 14490  0032C0  14DE               	andwf	postinc2,w,c
 14491  0032C2  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14492  0032C4  0EFF               	movlw	255
 14493  0032C6  14DE               	andwf	postinc2,w,c
 14494  0032C8  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14495  0032CA  0EFF               	movlw	255
 14496  0032CC  14DE               	andwf	postinc2,w,c
 14497  0032CE  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14498  0032D0  0E00               	movlw	0
 14499  0032D2  14DE               	andwf	postinc2,w,c
 14500  0032D4  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;lorawan_na.c: 597: frequency = frequency * 100;
 14504  0032D6  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14505  0032DA  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14506  0032DE  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14507  0032E2  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14508  0032E6  0E64               	movlw	100
 14509  0032E8  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 14510  0032EA  0E00               	movlw	0
 14511  0032EC  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14512  0032EE  0E00               	movlw	0
 14513  0032F0  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14514  0032F2  0E00               	movlw	0
 14515  0032F4  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14516  0032F6  EC55  F037         	call	___lmul	;wreg free
 14517  0032FA  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14518  0032FE  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14519  003302  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14520  003306  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14521                           
 14522                           ;lorawan_na.c: 598: ptr = ptr + 3;
 14523  00330A  0E03               	movlw	3
 14524  00330C  0100               	movlb	0	; () banked
 14525  00330E  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 14526  003310  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 14527  003312  0E00               	movlw	0
 14528  003314  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 14529  003316  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;lorawan_na.c: 600: if (ValidateFrequency (frequency) == OK)
 14533  003318  C0AA  F069         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14534  00331C  C0AB  F06A         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14535  003320  C0AC  F06B         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14536  003324  C0AD  F06C         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14537  003328  EC3D  F034         	call	_ValidateFrequency	;wreg free
 14538  00332C  0900               	iorlw	0
 14539  00332E  A4D8               	btfss	status,2,c
 14540  003330  D018               	goto	l1138
 14541                           
 14542                           ;lorawan_na.c: 601: {
 14543                           ;lorawan_na.c: 602: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14544  003332  0102               	movlb	2	; () banked
 14545  003334  5198               	movf	(_loRa+152)& (0+255),w,b
 14546  003336  0D02               	mullw	2
 14547  003338  0E00               	movlw	low _loRa
 14548  00333A  0100               	movlb	0	; () banked
 14549  00333C  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14550  00333E  0E02               	movlw	high _loRa
 14551  003340  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14552  003342  0E99               	movlw	153
 14553  003344  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14554  003346  0E00               	movlw	0
 14555  003348  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14556  00334A  50F3               	movf	prodl,w,c
 14557  00334C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14558  00334E  50F4               	movf	prodh,w,c
 14559  003350  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14560  003352  0E01               	movlw	1
 14561  003354  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14562  003356  6ED9               	movwf	fsr2l,c
 14563  003358  0E00               	movlw	0
 14564  00335A  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14565  00335C  6EDA               	movwf	fsr2h,c
 14566  00335E  0102               	movlb	2	; () banked
 14567  003360  86DF               	bsf	indf2,3,c
 14568  003362                     l1138:
 14569                           
 14570                           ;lorawan_na.c: 603: }
 14571                           ;lorawan_na.c: 605: if (ValidateDataRateReception (dlSettings.bits.rx2DataRate) == OK)
 14572                           
 14573                           ; BSR set to: 2
 14574  003362  0100               	movlb	0	; () banked
 14575  003364  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14576  003366  0B0F               	andlw	15
 14577  003368  ECDC  F03D         	call	_ValidateDataRateReception
 14578  00336C  0900               	iorlw	0
 14579  00336E  A4D8               	btfss	status,2,c
 14580  003370  D018               	goto	l1139
 14581                           
 14582                           ;lorawan_na.c: 606: {
 14583                           ;lorawan_na.c: 607: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14584  003372  0102               	movlb	2	; () banked
 14585  003374  5198               	movf	(_loRa+152)& (0+255),w,b
 14586  003376  0D02               	mullw	2
 14587  003378  0E00               	movlw	low _loRa
 14588  00337A  0100               	movlb	0	; () banked
 14589  00337C  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14590  00337E  0E02               	movlw	high _loRa
 14591  003380  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14592  003382  0E99               	movlw	153
 14593  003384  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14594  003386  0E00               	movlw	0
 14595  003388  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14596  00338A  50F3               	movf	prodl,w,c
 14597  00338C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14598  00338E  50F4               	movf	prodh,w,c
 14599  003390  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14600  003392  0E01               	movlw	1
 14601  003394  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14602  003396  6ED9               	movwf	fsr2l,c
 14603  003398  0E00               	movlw	0
 14604  00339A  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14605  00339C  6EDA               	movwf	fsr2h,c
 14606  00339E  0102               	movlb	2	; () banked
 14607  0033A0  88DF               	bsf	indf2,4,c
 14608  0033A2                     l1139:
 14609                           
 14610                           ;lorawan_na.c: 608: }
 14611                           ;lorawan_na.c: 610: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14612                           
 14613                           ; BSR set to: 2
 14614  0033A2  0100               	movlb	0	; () banked
 14615  0033A4  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14616  0033A6  0B07               	andlw	7
 14617  0033A8  EC3B  F03E         	call	_ValidateRxOffset
 14618  0033AC  0900               	iorlw	0
 14619  0033AE  A4D8               	btfss	status,2,c
 14620  0033B0  D018               	goto	l1140
 14621                           
 14622                           ;lorawan_na.c: 611: {
 14623                           ;lorawan_na.c: 612: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14624  0033B2  0102               	movlb	2	; () banked
 14625  0033B4  5198               	movf	(_loRa+152)& (0+255),w,b
 14626  0033B6  0D02               	mullw	2
 14627  0033B8  0E00               	movlw	low _loRa
 14628  0033BA  0100               	movlb	0	; () banked
 14629  0033BC  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14630  0033BE  0E02               	movlw	high _loRa
 14631  0033C0  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14632  0033C2  0E99               	movlw	153
 14633  0033C4  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14634  0033C6  0E00               	movlw	0
 14635  0033C8  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14636  0033CA  50F3               	movf	prodl,w,c
 14637  0033CC  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14638  0033CE  50F4               	movf	prodh,w,c
 14639  0033D0  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14640  0033D2  0E01               	movlw	1
 14641  0033D4  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14642  0033D6  6ED9               	movwf	fsr2l,c
 14643  0033D8  0E00               	movlw	0
 14644  0033DA  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14645  0033DC  6EDA               	movwf	fsr2h,c
 14646  0033DE  0102               	movlb	2	; () banked
 14647  0033E0  8ADF               	bsf	indf2,5,c
 14648  0033E2                     l1140:
 14649                           
 14650                           ;lorawan_na.c: 613: }
 14651                           ;lorawan_na.c: 615: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14652  0033E2  0102               	movlb	2	; () banked
 14653  0033E4  5198               	movf	(_loRa+152)& (0+255),w,b
 14654  0033E6  0D02               	mullw	2
 14655  0033E8  0E00               	movlw	low _loRa
 14656  0033EA  0100               	movlb	0	; () banked
 14657  0033EC  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14658  0033EE  0E02               	movlw	high _loRa
 14659  0033F0  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14660  0033F2  0E99               	movlw	153
 14661  0033F4  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14662  0033F6  0E00               	movlw	0
 14663  0033F8  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14664  0033FA  50F3               	movf	prodl,w,c
 14665  0033FC  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14666  0033FE  50F4               	movf	prodh,w,c
 14667  003400  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14668  003402  0E01               	movlw	1
 14669  003404  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14670  003406  6ED9               	movwf	fsr2l,c
 14671  003408  0E00               	movlw	0
 14672  00340A  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14673  00340C  6EDA               	movwf	fsr2h,c
 14674  00340E  0102               	movlb	2	; () banked
 14675  003410  A8DF               	btfss	indf2,4,c
 14676  003412  D045               	goto	l1141
 14677                           
 14678                           ; BSR set to: 2
 14679  003414  5198               	movf	(_loRa+152)& (0+255),w,b
 14680  003416  0D02               	mullw	2
 14681  003418  0E00               	movlw	low _loRa
 14682  00341A  0100               	movlb	0	; () banked
 14683  00341C  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14684  00341E  0E02               	movlw	high _loRa
 14685  003420  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14686  003422  0E99               	movlw	153
 14687  003424  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14688  003426  0E00               	movlw	0
 14689  003428  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14690  00342A  50F3               	movf	prodl,w,c
 14691  00342C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14692  00342E  50F4               	movf	prodh,w,c
 14693  003430  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14694  003432  0E01               	movlw	1
 14695  003434  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14696  003436  6ED9               	movwf	fsr2l,c
 14697  003438  0E00               	movlw	0
 14698  00343A  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14699  00343C  6EDA               	movwf	fsr2h,c
 14700  00343E  0102               	movlb	2	; () banked
 14701  003440  A6DF               	btfss	indf2,3,c
 14702  003442  D02D               	goto	l1141
 14703                           
 14704                           ; BSR set to: 2
 14705  003444  5198               	movf	(_loRa+152)& (0+255),w,b
 14706  003446  0D02               	mullw	2
 14707  003448  0E00               	movlw	low _loRa
 14708  00344A  0100               	movlb	0	; () banked
 14709  00344C  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14710  00344E  0E02               	movlw	high _loRa
 14711  003450  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14712  003452  0E99               	movlw	153
 14713  003454  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14714  003456  0E00               	movlw	0
 14715  003458  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14716  00345A  50F3               	movf	prodl,w,c
 14717  00345C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14718  00345E  50F4               	movf	prodh,w,c
 14719  003460  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14720  003462  0E01               	movlw	1
 14721  003464  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14722  003466  6ED9               	movwf	fsr2l,c
 14723  003468  0E00               	movlw	0
 14724  00346A  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14725  00346C  6EDA               	movwf	fsr2h,c
 14726  00346E  0102               	movlb	2	; () banked
 14727  003470  AADF               	btfss	indf2,5,c
 14728  003472  D015               	goto	l1141
 14729                           
 14730                           ; BSR set to: 2
 14731                           ;lorawan_na.c: 616: {
 14732                           ;lorawan_na.c: 617: loRa.offset = dlSettings.bits.rx1DROffset;
 14733  003474  0100               	movlb	0	; () banked
 14734  003476  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14735  003478  0B07               	andlw	7
 14736  00347A  0102               	movlb	2	; () banked
 14737  00347C  6FE0               	movwf	(_loRa+224)& (0+255),b
 14738                           
 14739                           ; BSR set to: 2
 14740                           ;lorawan_na.c: 618: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14741  00347E  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14742  003482  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14743  003486  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14744  00348A  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14745  00348E  0100               	movlb	0	; () banked
 14746  003490  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14747  003492  0B0F               	andlw	15
 14748  003494  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14749  003496  EC53  F03E         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14750                           
 14751                           ;lorawan_na.c: 619: loRa.macStatus.secondReceiveWindowModified = 1;
 14752  00349A  0102               	movlb	2	; () banked
 14753  00349C  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14754  00349E                     l1141:
 14755                           
 14756                           ; BSR set to: 2
 14757                           ;lorawan_na.c: 620: }
 14758                           ;lorawan_na.c: 622: return ptr;
 14759                           
 14760                           ; BSR set to: 2
 14761  00349E  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14762  0034A2  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14763  0034A6  0012               	return	
 14764  0034A8                     __end_of_ExecuteRxParamSetupReq:
 14765                           	opt stack 0
 14766                           tosu	equ	0xFFF
 14767                           tosh	equ	0xFFE
 14768                           tosl	equ	0xFFD
 14769                           pclath	equ	0xFFA
 14770                           tblptru	equ	0xFF8
 14771                           tblptrh	equ	0xFF7
 14772                           tblptrl	equ	0xFF6
 14773                           tablat	equ	0xFF5
 14774                           prodh	equ	0xFF4
 14775                           prodl	equ	0xFF3
 14776                           intcon	equ	0xFF2
 14777                           intcon2	equ	0xFF1
 14778                           intcon3	equ	0xFF0
 14779                           indf0	equ	0xFEF
 14780                           postinc0	equ	0xFEE
 14781                           fsr0h	equ	0xFEA
 14782                           fsr0l	equ	0xFE9
 14783                           wreg	equ	0xFE8
 14784                           postinc1	equ	0xFE6
 14785                           postdec1	equ	0xFE5
 14786                           plusw1	equ	0xFE3
 14787                           fsr1h	equ	0xFE2
 14788                           fsr1l	equ	0xFE1
 14789                           indf2	equ	0xFDF
 14790                           postinc2	equ	0xFDE
 14791                           postdec2	equ	0xFDD
 14792                           fsr2h	equ	0xFDA
 14793                           fsr2l	equ	0xFD9
 14794                           status	equ	0xFD8
 14795                           
 14796 ;; *************** function _ValidateRxOffset *****************
 14797 ;; Defined at:
 14798 ;;		line 853 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;  rxOffset        1    wreg     unsigned char 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 14803 ;;  result          1    1[BANK0 ] enum E7249
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  1    wreg      enum E7249
 14806 ;; Registers used:
 14807 ;;		wreg, status,2, status,0
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/0
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14817 ;;Total ram usage:        2 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:    7
 14820 ;; This function calls:
 14821 ;;		Nothing
 14822 ;; This function is called by:
 14823 ;;		_ExecuteRxParamSetupReq
 14824 ;; This function uses a non-reentrant model
 14825 ;;
 14826                           
 14827                           	psect	text75
 14828  007C76                     __ptext75:
 14829                           	opt stack 0
 14830  007C76                     _ValidateRxOffset:
 14831                           	opt stack 17
 14832                           
 14833                           ; BSR set to: 2
 14834                           ;incstack = 0
 14835                           ;ValidateRxOffset@rxOffset stored from wreg
 14836  007C76  0100               	movlb	0	; () banked
 14837  007C78  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14838                           
 14839                           ;lorawan_na.c: 855: LorawanError_t result = OK;
 14840  007C7A  0E00               	movlw	0
 14841  007C7C  0100               	movlb	0	; () banked
 14842  007C7E  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;lorawan_na.c: 857: if (rxOffset > 3)
 14846  007C80  0E03               	movlw	3
 14847  007C82  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14848  007C84  D002               	goto	l1210
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;lorawan_na.c: 858: {
 14852                           ;lorawan_na.c: 859: result = INVALID_PARAMETER;
 14853  007C86  0E03               	movlw	3
 14854  007C88  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14855  007C8A                     l1210:
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;lorawan_na.c: 860: }
 14859                           ;lorawan_na.c: 862: return result;
 14860  007C8A  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 14861  007C8C  0012               	return	
 14862  007C8E                     __end_of_ValidateRxOffset:
 14863                           	opt stack 0
 14864                           tosu	equ	0xFFF
 14865                           tosh	equ	0xFFE
 14866                           tosl	equ	0xFFD
 14867                           pclath	equ	0xFFA
 14868                           tblptru	equ	0xFF8
 14869                           tblptrh	equ	0xFF7
 14870                           tblptrl	equ	0xFF6
 14871                           tablat	equ	0xFF5
 14872                           prodh	equ	0xFF4
 14873                           prodl	equ	0xFF3
 14874                           intcon	equ	0xFF2
 14875                           intcon2	equ	0xFF1
 14876                           intcon3	equ	0xFF0
 14877                           indf0	equ	0xFEF
 14878                           postinc0	equ	0xFEE
 14879                           fsr0h	equ	0xFEA
 14880                           fsr0l	equ	0xFE9
 14881                           wreg	equ	0xFE8
 14882                           postinc1	equ	0xFE6
 14883                           postdec1	equ	0xFE5
 14884                           plusw1	equ	0xFE3
 14885                           fsr1h	equ	0xFE2
 14886                           fsr1l	equ	0xFE1
 14887                           indf2	equ	0xFDF
 14888                           postinc2	equ	0xFDE
 14889                           postdec2	equ	0xFDD
 14890                           fsr2h	equ	0xFDA
 14891                           fsr2l	equ	0xFD9
 14892                           status	equ	0xFD8
 14893                           
 14894 ;; *************** function _ValidateFrequency *****************
 14895 ;; Defined at:
 14896 ;;		line 865 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;  frequencyNew    4    9[BANK0 ] unsigned long 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;  result          1   13[BANK0 ] enum E7249
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      enum E7249
 14903 ;; Registers used:
 14904 ;;		wreg, status,2, status,0, cstack
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;Total ram usage:        5 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    8
 14917 ;; This function calls:
 14918 ;;		___llmod
 14919 ;; This function is called by:
 14920 ;;		_ExecuteRxParamSetupReq
 14921 ;;		_LORAWAN_SetReceiveWindow2Parameters
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text76
 14926  00687A                     __ptext76:
 14927                           	opt stack 0
 14928  00687A                     _ValidateFrequency:
 14929                           	opt stack 16
 14930                           
 14931                           ;lorawan_na.c: 867: LorawanError_t result = OK;
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;incstack = 0
 14935  00687A  0E00               	movlw	0
 14936  00687C  0100               	movlb	0	; () banked
 14937  00687E  6F6D               	movwf	ValidateFrequency@result& (0+255),b
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;lorawan_na.c: 873: if ( (frequencyNew < 923300000) || (frequencyNew > 927500000) || ( (
      +                           (frequencyNew - 923300000) % 600000) != 0) )
 14941  006880  0EA0               	movlw	160
 14942  006882  5D69               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14943  006884  0E70               	movlw	112
 14944  006886  596A               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14945  006888  0E08               	movlw	8
 14946  00688A  596B               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14947  00688C  0E37               	movlw	55
 14948  00688E  596C               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14949  006890  A0D8               	btfss	status,0,c
 14950  006892  D027               	goto	u8240
 14951                           
 14952                           ; BSR set to: 0
 14953  006894  0EE1               	movlw	225
 14954  006896  5D69               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14955  006898  0E86               	movlw	134
 14956  00689A  596A               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14957  00689C  0E48               	movlw	72
 14958  00689E  596B               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14959  0068A0  0E37               	movlw	55
 14960  0068A2  596C               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14961  0068A4  B0D8               	btfsc	status,0,c
 14962  0068A6  D01D               	goto	u8240
 14963                           
 14964                           ; BSR set to: 0
 14965  0068A8  0E60               	movlw	96
 14966  0068AA  2569               	addwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14967  0068AC  6F60               	movwf	___llmod@dividend& (0+255),b
 14968  0068AE  0E8F               	movlw	143
 14969  0068B0  216A               	addwfc	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14970  0068B2  6F61               	movwf	(___llmod@dividend+1)& (0+255),b
 14971  0068B4  0EF7               	movlw	247
 14972  0068B6  216B               	addwfc	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14973  0068B8  6F62               	movwf	(___llmod@dividend+2)& (0+255),b
 14974  0068BA  0EC8               	movlw	200
 14975  0068BC  216C               	addwfc	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14976  0068BE  6F63               	movwf	(___llmod@dividend+3)& (0+255),b
 14977  0068C0  0EC0               	movlw	192
 14978  0068C2  6F64               	movwf	___llmod@divisor& (0+255),b
 14979  0068C4  0E27               	movlw	39
 14980  0068C6  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 14981  0068C8  0E09               	movlw	9
 14982  0068CA  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14983  0068CC  0E00               	movlw	0
 14984  0068CE  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14985  0068D0  EC15  F035         	call	___llmod	;wreg free
 14986  0068D4  0100               	movlb	0	; () banked
 14987  0068D6  5160               	movf	?___llmod& (0+255),w,b
 14988  0068D8  1161               	iorwf	(?___llmod+1)& (0+255),w,b
 14989  0068DA  1162               	iorwf	(?___llmod+2)& (0+255),w,b
 14990  0068DC  1163               	iorwf	(?___llmod+3)& (0+255),w,b
 14991  0068DE  B4D8               	btfsc	status,2,c
 14992  0068E0  D002               	goto	l1214
 14993  0068E2                     u8240:
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;lorawan_na.c: 874: {
 14997                           ;lorawan_na.c: 875: result = INVALID_PARAMETER ;
 14998                           
 14999                           ; BSR set to: 0
 15000  0068E2  0E03               	movlw	3
 15001  0068E4  6F6D               	movwf	ValidateFrequency@result& (0+255),b
 15002  0068E6                     l1214:
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;lorawan_na.c: 876: }
 15006                           ;lorawan_na.c: 877: return result;
 15007  0068E6  516D               	movf	ValidateFrequency@result& (0+255),w,b
 15008  0068E8  0012               	return	
 15009  0068EA                     __end_of_ValidateFrequency:
 15010                           	opt stack 0
 15011                           tosu	equ	0xFFF
 15012                           tosh	equ	0xFFE
 15013                           tosl	equ	0xFFD
 15014                           pclath	equ	0xFFA
 15015                           tblptru	equ	0xFF8
 15016                           tblptrh	equ	0xFF7
 15017                           tblptrl	equ	0xFF6
 15018                           tablat	equ	0xFF5
 15019                           prodh	equ	0xFF4
 15020                           prodl	equ	0xFF3
 15021                           intcon	equ	0xFF2
 15022                           intcon2	equ	0xFF1
 15023                           intcon3	equ	0xFF0
 15024                           indf0	equ	0xFEF
 15025                           postinc0	equ	0xFEE
 15026                           fsr0h	equ	0xFEA
 15027                           fsr0l	equ	0xFE9
 15028                           wreg	equ	0xFE8
 15029                           postinc1	equ	0xFE6
 15030                           postdec1	equ	0xFE5
 15031                           plusw1	equ	0xFE3
 15032                           fsr1h	equ	0xFE2
 15033                           fsr1l	equ	0xFE1
 15034                           indf2	equ	0xFDF
 15035                           postinc2	equ	0xFDE
 15036                           postdec2	equ	0xFDD
 15037                           fsr2h	equ	0xFDA
 15038                           fsr2l	equ	0xFD9
 15039                           status	equ	0xFD8
 15040                           
 15041 ;; *************** function _ValidateDataRateReception *****************
 15042 ;; Defined at:
 15043 ;;		line 1021 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;  dataRate        1    wreg     unsigned char 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  dataRate        1    1[BANK0 ] unsigned char 
 15048 ;;  result          1    0[BANK0 ] enum E7249
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      enum E7249
 15051 ;; Registers used:
 15052 ;;		wreg, status,2, status,0
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;Total ram usage:        2 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    7
 15065 ;; This function calls:
 15066 ;;		Nothing
 15067 ;; This function is called by:
 15068 ;;		_ExecuteRxParamSetupReq
 15069 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text77
 15074  007BB8                     __ptext77:
 15075                           	opt stack 0
 15076  007BB8                     _ValidateDataRateReception:
 15077                           	opt stack 17
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;incstack = 0
 15081                           ;ValidateDataRateReception@dataRate stored from wreg
 15082  007BB8  0100               	movlb	0	; () banked
 15083  007BBA  6F61               	movwf	ValidateDataRateReception@dataRate& (0+255),b
 15084                           
 15085                           ;lorawan_na.c: 1023: LorawanError_t result = OK;
 15086  007BBC  0E00               	movlw	0
 15087  007BBE  0100               	movlb	0	; () banked
 15088  007BC0  6F60               	movwf	ValidateDataRateReception@result& (0+255),b
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;lorawan_na.c: 1025: if ( (dataRate > 13) || (dataRate < 8) )
 15092  007BC2  0E0E               	movlw	14
 15093  007BC4  6161               	cpfslt	ValidateDataRateReception@dataRate& (0+255),b
 15094  007BC6  D003               	goto	u8260
 15095                           
 15096                           ; BSR set to: 0
 15097  007BC8  0E08               	movlw	8
 15098  007BCA  6161               	cpfslt	ValidateDataRateReception@dataRate& (0+255),b
 15099  007BCC  D002               	goto	l1279
 15100  007BCE                     u8260:
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;lorawan_na.c: 1026: {
 15104                           ;lorawan_na.c: 1027: result = INVALID_PARAMETER;
 15105                           
 15106                           ; BSR set to: 0
 15107  007BCE  0E03               	movlw	3
 15108  007BD0  6F60               	movwf	ValidateDataRateReception@result& (0+255),b
 15109  007BD2                     l1279:
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;lorawan_na.c: 1028: }
 15113                           ;lorawan_na.c: 1030: return result;
 15114  007BD2  5160               	movf	ValidateDataRateReception@result& (0+255),w,b
 15115  007BD4  0012               	return	
 15116  007BD6                     __end_of_ValidateDataRateReception:
 15117                           	opt stack 0
 15118                           tosu	equ	0xFFF
 15119                           tosh	equ	0xFFE
 15120                           tosl	equ	0xFFD
 15121                           pclath	equ	0xFFA
 15122                           tblptru	equ	0xFF8
 15123                           tblptrh	equ	0xFF7
 15124                           tblptrl	equ	0xFF6
 15125                           tablat	equ	0xFF5
 15126                           prodh	equ	0xFF4
 15127                           prodl	equ	0xFF3
 15128                           intcon	equ	0xFF2
 15129                           intcon2	equ	0xFF1
 15130                           intcon3	equ	0xFF0
 15131                           indf0	equ	0xFEF
 15132                           postinc0	equ	0xFEE
 15133                           fsr0h	equ	0xFEA
 15134                           fsr0l	equ	0xFE9
 15135                           wreg	equ	0xFE8
 15136                           postinc1	equ	0xFE6
 15137                           postdec1	equ	0xFE5
 15138                           plusw1	equ	0xFE3
 15139                           fsr1h	equ	0xFE2
 15140                           fsr1l	equ	0xFE1
 15141                           indf2	equ	0xFDF
 15142                           postinc2	equ	0xFDE
 15143                           postdec2	equ	0xFDD
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15149 ;; Defined at:
 15150 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  frequency       4    0[BANK0 ] unsigned long 
 15153 ;;  dataRate        1    4[BANK0 ] unsigned char 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;		None
 15156 ;; Return value:  Size  Location     Type
 15157 ;;                  1    wreg      void 
 15158 ;; Registers used:
 15159 ;;		None
 15160 ;; Tracked objects:
 15161 ;;		On entry : 0/0
 15162 ;;		On exit  : 0/0
 15163 ;;		Unchanged: 0/0
 15164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15165 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;Total ram usage:        5 bytes
 15170 ;; Hardware stack levels used:    1
 15171 ;; Hardware stack levels required when called:    7
 15172 ;; This function calls:
 15173 ;;		Nothing
 15174 ;; This function is called by:
 15175 ;;		_ExecuteRxParamSetupReq
 15176 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text78
 15181  007CA6                     __ptext78:
 15182                           	opt stack 0
 15183  007CA6                     _UpdateReceiveWindow2Parameters:
 15184                           	opt stack 17
 15185                           
 15186                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;incstack = 0
 15190  007CA6  C064  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 15191                           
 15192                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 15193  007CAA  C060  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 15194  007CAE  C061  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 15195  007CB2  C062  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 15196  007CB6  C063  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 15197  007CBA  0012               	return		;funcret
 15198  007CBC                     __end_of_UpdateReceiveWindow2Parameters:
 15199                           	opt stack 0
 15200                           tosu	equ	0xFFF
 15201                           tosh	equ	0xFFE
 15202                           tosl	equ	0xFFD
 15203                           pclath	equ	0xFFA
 15204                           tblptru	equ	0xFF8
 15205                           tblptrh	equ	0xFF7
 15206                           tblptrl	equ	0xFF6
 15207                           tablat	equ	0xFF5
 15208                           prodh	equ	0xFF4
 15209                           prodl	equ	0xFF3
 15210                           intcon	equ	0xFF2
 15211                           intcon2	equ	0xFF1
 15212                           intcon3	equ	0xFF0
 15213                           indf0	equ	0xFEF
 15214                           postinc0	equ	0xFEE
 15215                           fsr0h	equ	0xFEA
 15216                           fsr0l	equ	0xFE9
 15217                           wreg	equ	0xFE8
 15218                           postinc1	equ	0xFE6
 15219                           postdec1	equ	0xFE5
 15220                           plusw1	equ	0xFE3
 15221                           fsr1h	equ	0xFE2
 15222                           fsr1l	equ	0xFE1
 15223                           indf2	equ	0xFDF
 15224                           postinc2	equ	0xFDE
 15225                           postdec2	equ	0xFDD
 15226                           fsr2h	equ	0xFDA
 15227                           fsr2l	equ	0xFD9
 15228                           status	equ	0xFD8
 15229                           
 15230 ;; *************** function _ExecuteNewChannel *****************
 15231 ;; Defined at:
 15232 ;;		line 545 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  ptr             2   83[BANK0 ] PTR unsigned char 
 15235 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;  frequency       4   88[BANK0 ] unsigned long 
 15238 ;;  channelIndex    1   92[BANK0 ] unsigned char 
 15239 ;;  drRange         1   87[BANK0 ] struct .
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  2   83[BANK0 ] PTR unsigned char 
 15242 ;; Registers used:
 15243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15244 ;; Tracked objects:
 15245 ;;		On entry : 0/0
 15246 ;;		On exit  : 0/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15252 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;Total ram usage:       10 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:   10
 15256 ;; This function calls:
 15257 ;;		_GenerateUSFrequency1
 15258 ;;		_GenerateUSFrequency2
 15259 ;;		_LORAWAN_SetChannelIdStatus
 15260 ;;		_LORAWAN_SetDataRange
 15261 ;;		_ValidateChannelId
 15262 ;;		_ValidateDataRange
 15263 ;;		___lmul
 15264 ;; This function is called by:
 15265 ;;		_MacExecuteCommands
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text79
 15270  0034A8                     __ptext79:
 15271                           	opt stack 0
 15272  0034A8                     _ExecuteNewChannel:
 15273                           	opt stack 15
 15274                           
 15275                           ;lorawan_na.c: 547: uint8_t channelIndex;
 15276                           ;lorawan_na.c: 548: DataRange_t drRange;
 15277                           ;lorawan_na.c: 549: uint32_t frequency = 0;
 15278                           
 15279                           ;incstack = 0
 15280  0034A8  0E00               	movlw	0
 15281  0034AA  0100               	movlb	0	; () banked
 15282  0034AC  6FB8               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15283  0034AE  0E00               	movlw	0
 15284  0034B0  6FB9               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15285  0034B2  0E00               	movlw	0
 15286  0034B4  6FBA               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15287  0034B6  0E00               	movlw	0
 15288  0034B8  6FBB               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;lorawan_na.c: 551: channelIndex = *(ptr++);
 15292  0034BA  C0B3  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15293  0034BE  C0B4  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15294  0034C2  50DF               	movf	indf2,w,c
 15295  0034C4  6FBC               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15296                           
 15297                           ; BSR set to: 0
 15298  0034C6  4BB3               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15299  0034C8  2BB4               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15300                           
 15301                           ; BSR set to: 0
 15302                           ;lorawan_na.c: 553: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15303  0034CA  C0B3  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15304  0034CE  C0B4  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15305  0034D2  0EFF               	movlw	255
 15306  0034D4  14DE               	andwf	postinc2,w,c
 15307  0034D6  6FB8               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15308  0034D8  0EFF               	movlw	255
 15309  0034DA  14DE               	andwf	postinc2,w,c
 15310  0034DC  6FB9               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15311  0034DE  0EFF               	movlw	255
 15312  0034E0  14DE               	andwf	postinc2,w,c
 15313  0034E2  6FBA               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15314  0034E4  0E00               	movlw	0
 15315  0034E6  14DE               	andwf	postinc2,w,c
 15316  0034E8  6FBB               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;lorawan_na.c: 554: frequency = frequency * 100;
 15320  0034EA  C0B8  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 15321  0034EE  C0B9  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 15322  0034F2  C0BA  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 15323  0034F6  C0BB  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 15324  0034FA  0E64               	movlw	100
 15325  0034FC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 15326  0034FE  0E00               	movlw	0
 15327  003500  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15328  003502  0E00               	movlw	0
 15329  003504  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15330  003506  0E00               	movlw	0
 15331  003508  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15332  00350A  EC55  F037         	call	___lmul	;wreg free
 15333  00350E  C09A  F0B8         	movff	?___lmul,ExecuteNewChannel@frequency
 15334  003512  C09B  F0B9         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 15335  003516  C09C  F0BA         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 15336  00351A  C09D  F0BB         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 15337                           
 15338                           ;lorawan_na.c: 555: ptr = ptr + 3;
 15339  00351E  0E03               	movlw	3
 15340  003520  0100               	movlb	0	; () banked
 15341  003522  25B3               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 15342  003524  6FB3               	movwf	ExecuteNewChannel@ptr& (0+255),b
 15343  003526  0E00               	movlw	0
 15344  003528  21B4               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 15345  00352A  6FB4               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 15346                           
 15347                           ; BSR set to: 0
 15348                           ;lorawan_na.c: 557: drRange.value = *(ptr++);
 15349  00352C  C0B3  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15350  003530  C0B4  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15351  003534  50DF               	movf	indf2,w,c
 15352  003536  6FB7               	movwf	ExecuteNewChannel@drRange& (0+255),b
 15353                           
 15354                           ; BSR set to: 0
 15355  003538  4BB3               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15356  00353A  2BB4               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;lorawan_na.c: 559: if (ValidateChannelId (channelIndex) == OK)
 15360  00353C  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15361  00353E  ECEB  F03D         	call	_ValidateChannelId
 15362  003542  0900               	iorlw	0
 15363  003544  A4D8               	btfss	status,2,c
 15364  003546  D062               	goto	l1131
 15365                           
 15366                           ;lorawan_na.c: 560: {
 15367                           ;lorawan_na.c: 561: if ( (frequency == GenerateUSFrequency1 (channelIndex)) || (frequenc
      +                          y == GenerateUSFrequency2 (channelIndex)) || (frequency == 0) )
 15368  003548  0100               	movlb	0	; () banked
 15369  00354A  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15370  00354C  EC7C  F038         	call	_GenerateUSFrequency1
 15371  003550  0100               	movlb	0	; () banked
 15372  003552  51B8               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15373  003554  19A6               	xorwf	?_GenerateUSFrequency1& (0+255),w,b
 15374  003556  E10A               	bnz	u9170
 15375  003558  51B9               	movf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15376  00355A  19A7               	xorwf	(?_GenerateUSFrequency1+1)& (0+255),w,b
 15377  00355C  E107               	bnz	u9170
 15378  00355E  51BA               	movf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15379  003560  19A8               	xorwf	(?_GenerateUSFrequency1+2)& (0+255),w,b
 15380  003562  E104               	bnz	u9170
 15381  003564  51BB               	movf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15382  003566  19A9               	xorwf	(?_GenerateUSFrequency1+3)& (0+255),w,b
 15383  003568  B4D8               	btfsc	status,2,c
 15384  00356A  D017               	goto	u9190
 15385  00356C                     u9170:
 15386                           
 15387                           ; BSR set to: 0
 15388  00356C  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15389  00356E  EC75  F034         	call	_GenerateUSFrequency2
 15390  003572  0100               	movlb	0	; () banked
 15391  003574  51B8               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15392  003576  19A6               	xorwf	?_GenerateUSFrequency2& (0+255),w,b
 15393  003578  E10A               	bnz	u9180
 15394  00357A  51B9               	movf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15395  00357C  19A7               	xorwf	(?_GenerateUSFrequency2+1)& (0+255),w,b
 15396  00357E  E107               	bnz	u9180
 15397  003580  51BA               	movf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15398  003582  19A8               	xorwf	(?_GenerateUSFrequency2+2)& (0+255),w,b
 15399  003584  E104               	bnz	u9180
 15400  003586  51BB               	movf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15401  003588  19A9               	xorwf	(?_GenerateUSFrequency2+3)& (0+255),w,b
 15402  00358A  B4D8               	btfsc	status,2,c
 15403  00358C  D006               	goto	u9190
 15404  00358E                     u9180:
 15405                           
 15406                           ; BSR set to: 0
 15407  00358E  51B8               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15408  003590  11B9               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15409  003592  11BA               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15410  003594  11BB               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15411  003596  A4D8               	btfss	status,2,c
 15412  003598  D018               	goto	l1128
 15413  00359A                     u9190:
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;lorawan_na.c: 562: {
 15417                           ;lorawan_na.c: 563: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 15418                           
 15419                           ; BSR set to: 0
 15420  00359A  0102               	movlb	2	; () banked
 15421  00359C  5198               	movf	(_loRa+152)& (0+255),w,b
 15422  00359E  0D02               	mullw	2
 15423  0035A0  0E00               	movlw	low _loRa
 15424  0035A2  0100               	movlb	0	; () banked
 15425  0035A4  6FB5               	movwf	??_ExecuteNewChannel& (0+255),b
 15426  0035A6  0E02               	movlw	high _loRa
 15427  0035A8  6FB6               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15428  0035AA  0E99               	movlw	153
 15429  0035AC  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15430  0035AE  0E00               	movlw	0
 15431  0035B0  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15432  0035B2  50F3               	movf	prodl,w,c
 15433  0035B4  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15434  0035B6  50F4               	movf	prodh,w,c
 15435  0035B8  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15436  0035BA  0E01               	movlw	1
 15437  0035BC  25B5               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15438  0035BE  6ED9               	movwf	fsr2l,c
 15439  0035C0  0E00               	movlw	0
 15440  0035C2  21B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15441  0035C4  6EDA               	movwf	fsr2h,c
 15442  0035C6  0102               	movlb	2	; () banked
 15443  0035C8  8EDF               	bsf	indf2,7,c
 15444  0035CA                     l1128:
 15445                           
 15446                           ;lorawan_na.c: 564: }
 15447                           ;lorawan_na.c: 566: if (ValidateDataRange (channelIndex, drRange.value) == OK)
 15448                           
 15449                           ; BSR set to: 2
 15450  0035CA  C0B7  F062         	movff	ExecuteNewChannel@drRange,ValidateDataRange@dataRangeNew
 15451  0035CE  0100               	movlb	0	; () banked
 15452  0035D0  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15453  0035D2  EC51  F032         	call	_ValidateDataRange
 15454  0035D6  0900               	iorlw	0
 15455  0035D8  A4D8               	btfss	status,2,c
 15456  0035DA  D018               	goto	l1131
 15457                           
 15458                           ;lorawan_na.c: 567: {
 15459                           ;lorawan_na.c: 568: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 15460  0035DC  0102               	movlb	2	; () banked
 15461  0035DE  5198               	movf	(_loRa+152)& (0+255),w,b
 15462  0035E0  0D02               	mullw	2
 15463  0035E2  0E00               	movlw	low _loRa
 15464  0035E4  0100               	movlb	0	; () banked
 15465  0035E6  6FB5               	movwf	??_ExecuteNewChannel& (0+255),b
 15466  0035E8  0E02               	movlw	high _loRa
 15467  0035EA  6FB6               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15468  0035EC  0E99               	movlw	153
 15469  0035EE  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15470  0035F0  0E00               	movlw	0
 15471  0035F2  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15472  0035F4  50F3               	movf	prodl,w,c
 15473  0035F6  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15474  0035F8  50F4               	movf	prodh,w,c
 15475  0035FA  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15476  0035FC  0E01               	movlw	1
 15477  0035FE  25B5               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15478  003600  6ED9               	movwf	fsr2l,c
 15479  003602  0E00               	movlw	0
 15480  003604  21B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15481  003606  6EDA               	movwf	fsr2h,c
 15482  003608  0102               	movlb	2	; () banked
 15483  00360A  8CDF               	bsf	indf2,6,c
 15484  00360C                     l1131:
 15485                           
 15486                           ;lorawan_na.c: 569: }
 15487                           ;lorawan_na.c: 570: }
 15488                           ;lorawan_na.c: 572: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 15489                           
 15490                           ; BSR set to: 2
 15491  00360C  0102               	movlb	2	; () banked
 15492  00360E  5198               	movf	(_loRa+152)& (0+255),w,b
 15493  003610  0D02               	mullw	2
 15494  003612  0E00               	movlw	low _loRa
 15495  003614  0100               	movlb	0	; () banked
 15496  003616  6FB5               	movwf	??_ExecuteNewChannel& (0+255),b
 15497  003618  0E02               	movlw	high _loRa
 15498  00361A  6FB6               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15499  00361C  0E99               	movlw	153
 15500  00361E  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15501  003620  0E00               	movlw	0
 15502  003622  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15503  003624  50F3               	movf	prodl,w,c
 15504  003626  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15505  003628  50F4               	movf	prodh,w,c
 15506  00362A  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15507  00362C  0E01               	movlw	1
 15508  00362E  25B5               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15509  003630  6ED9               	movwf	fsr2l,c
 15510  003632  0E00               	movlw	0
 15511  003634  21B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15512  003636  6EDA               	movwf	fsr2h,c
 15513  003638  0102               	movlb	2	; () banked
 15514  00363A  AEDF               	btfss	indf2,7,c
 15515  00363C  D02B               	goto	l1134
 15516                           
 15517                           ; BSR set to: 2
 15518  00363E  5198               	movf	(_loRa+152)& (0+255),w,b
 15519  003640  0D02               	mullw	2
 15520  003642  0E00               	movlw	low _loRa
 15521  003644  0100               	movlb	0	; () banked
 15522  003646  6FB5               	movwf	??_ExecuteNewChannel& (0+255),b
 15523  003648  0E02               	movlw	high _loRa
 15524  00364A  6FB6               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15525  00364C  0E99               	movlw	153
 15526  00364E  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15527  003650  0E00               	movlw	0
 15528  003652  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15529  003654  50F3               	movf	prodl,w,c
 15530  003656  27B5               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15531  003658  50F4               	movf	prodh,w,c
 15532  00365A  23B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15533  00365C  0E01               	movlw	1
 15534  00365E  25B5               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15535  003660  6ED9               	movwf	fsr2l,c
 15536  003662  0E00               	movlw	0
 15537  003664  21B6               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15538  003666  6EDA               	movwf	fsr2h,c
 15539  003668  0102               	movlb	2	; () banked
 15540  00366A  ACDF               	btfss	indf2,6,c
 15541  00366C  D013               	goto	l1134
 15542                           
 15543                           ; BSR set to: 2
 15544                           ;lorawan_na.c: 573: {
 15545                           ;lorawan_na.c: 575: if (frequency == 0)
 15546  00366E  0100               	movlb	0	; () banked
 15547  003670  51B8               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15548  003672  11B9               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15549  003674  11BA               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15550  003676  11BB               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15551  003678  A4D8               	btfss	status,2,c
 15552  00367A  D006               	goto	l1133
 15553                           
 15554                           ; BSR set to: 0
 15555                           ;lorawan_na.c: 576: {
 15556                           ;lorawan_na.c: 577: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 15557  00367C  0E00               	movlw	0
 15558  00367E  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15559  003680  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15560  003682  ECF9  F03B         	call	_LORAWAN_SetChannelIdStatus
 15561                           
 15562                           ;lorawan_na.c: 578: }
 15563  003686  D006               	goto	l1134
 15564  003688                     l1133:
 15565                           
 15566                           ;lorawan_na.c: 579: else
 15567                           ;lorawan_na.c: 580: {
 15568                           ;lorawan_na.c: 581: LORAWAN_SetDataRange (channelIndex, drRange.value);
 15569  003688  C0B7  F067         	movff	ExecuteNewChannel@drRange,LORAWAN_SetDataRange@dataRangeNew
 15570  00368C  0100               	movlb	0	; () banked
 15571  00368E  51BC               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15572  003690  EC6D  F03B         	call	_LORAWAN_SetDataRange
 15573  003694                     l1134:
 15574                           
 15575                           ;lorawan_na.c: 582: }
 15576                           ;lorawan_na.c: 583: }
 15577                           ;lorawan_na.c: 584: return ptr;
 15578  003694  C0B3  F0B3         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 15579  003698  C0B4  F0B4         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 15580  00369C  0012               	return	
 15581  00369E                     __end_of_ExecuteNewChannel:
 15582                           	opt stack 0
 15583                           tosu	equ	0xFFF
 15584                           tosh	equ	0xFFE
 15585                           tosl	equ	0xFFD
 15586                           pclath	equ	0xFFA
 15587                           tblptru	equ	0xFF8
 15588                           tblptrh	equ	0xFF7
 15589                           tblptrl	equ	0xFF6
 15590                           tablat	equ	0xFF5
 15591                           prodh	equ	0xFF4
 15592                           prodl	equ	0xFF3
 15593                           intcon	equ	0xFF2
 15594                           intcon2	equ	0xFF1
 15595                           intcon3	equ	0xFF0
 15596                           indf0	equ	0xFEF
 15597                           postinc0	equ	0xFEE
 15598                           fsr0h	equ	0xFEA
 15599                           fsr0l	equ	0xFE9
 15600                           wreg	equ	0xFE8
 15601                           postinc1	equ	0xFE6
 15602                           postdec1	equ	0xFE5
 15603                           plusw1	equ	0xFE3
 15604                           fsr1h	equ	0xFE2
 15605                           fsr1l	equ	0xFE1
 15606                           indf2	equ	0xFDF
 15607                           postinc2	equ	0xFDE
 15608                           postdec2	equ	0xFDD
 15609                           fsr2h	equ	0xFDA
 15610                           fsr2l	equ	0xFD9
 15611                           status	equ	0xFD8
 15612                           
 15613 ;; *************** function _LORAWAN_SetDataRange *****************
 15614 ;; Defined at:
 15615 ;;		line 243 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  channelId       1    wreg     unsigned char 
 15618 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;  channelId       1    9[BANK0 ] unsigned char 
 15621 ;;  result          1    8[BANK0 ] enum E7249
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1    wreg      enum E7249
 15624 ;; Registers used:
 15625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15631 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15634 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15635 ;;Total ram usage:        3 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; Hardware stack levels required when called:    9
 15638 ;; This function calls:
 15639 ;;		_UpdateDataRange
 15640 ;;		_ValidateDataRange
 15641 ;; This function is called by:
 15642 ;;		_ExecuteNewChannel
 15643 ;; This function uses a non-reentrant model
 15644 ;;
 15645                           
 15646                           	psect	text80
 15647  0076DA                     __ptext80:
 15648                           	opt stack 0
 15649  0076DA                     _LORAWAN_SetDataRange:
 15650                           	opt stack 15
 15651                           
 15652                           ;incstack = 0
 15653                           ;LORAWAN_SetDataRange@channelId stored from wreg
 15654  0076DA  0100               	movlb	0	; () banked
 15655  0076DC  6F69               	movwf	LORAWAN_SetDataRange@channelId& (0+255),b
 15656                           
 15657                           ;lorawan_na.c: 245: LorawanError_t result = OK;
 15658  0076DE  0E00               	movlw	0
 15659  0076E0  0100               	movlb	0	; () banked
 15660  0076E2  6F68               	movwf	LORAWAN_SetDataRange@result& (0+255),b
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;lorawan_na.c: 247: if (ValidateDataRange (channelId, dataRangeNew) != OK)
 15664  0076E4  C067  F062         	movff	LORAWAN_SetDataRange@dataRangeNew,ValidateDataRange@dataRangeNew
 15665  0076E8  5169               	movf	LORAWAN_SetDataRange@channelId& (0+255),w,b
 15666  0076EA  EC51  F032         	call	_ValidateDataRange
 15667  0076EE  0900               	iorlw	0
 15668  0076F0  B4D8               	btfsc	status,2,c
 15669  0076F2  D004               	goto	l1035
 15670                           
 15671                           ;lorawan_na.c: 248: {
 15672                           ;lorawan_na.c: 249: result = INVALID_PARAMETER;
 15673  0076F4  0E03               	movlw	3
 15674  0076F6  0100               	movlb	0	; () banked
 15675  0076F8  6F68               	movwf	LORAWAN_SetDataRange@result& (0+255),b
 15676                           
 15677                           ;lorawan_na.c: 250: }
 15678  0076FA  0012               	return	
 15679  0076FC                     l1035:
 15680                           
 15681                           ;lorawan_na.c: 251: else
 15682                           ;lorawan_na.c: 252: {
 15683                           ;lorawan_na.c: 253: UpdateDataRange (channelId, dataRangeNew);
 15684                           
 15685                           ; BSR set to: 0
 15686  0076FC  C067  F060         	movff	LORAWAN_SetDataRange@dataRangeNew,UpdateDataRange@dataRangeNew
 15687  007700  0100               	movlb	0	; () banked
 15688  007702  5169               	movf	LORAWAN_SetDataRange@channelId& (0+255),w,b
 15689  007704  ECC3  F03C         	call	_UpdateDataRange
 15690  007708  0012               	return	
 15691  00770A                     __end_of_LORAWAN_SetDataRange:
 15692                           	opt stack 0
 15693                           tosu	equ	0xFFF
 15694                           tosh	equ	0xFFE
 15695                           tosl	equ	0xFFD
 15696                           pclath	equ	0xFFA
 15697                           tblptru	equ	0xFF8
 15698                           tblptrh	equ	0xFF7
 15699                           tblptrl	equ	0xFF6
 15700                           tablat	equ	0xFF5
 15701                           prodh	equ	0xFF4
 15702                           prodl	equ	0xFF3
 15703                           intcon	equ	0xFF2
 15704                           intcon2	equ	0xFF1
 15705                           intcon3	equ	0xFF0
 15706                           indf0	equ	0xFEF
 15707                           postinc0	equ	0xFEE
 15708                           fsr0h	equ	0xFEA
 15709                           fsr0l	equ	0xFE9
 15710                           wreg	equ	0xFE8
 15711                           postinc1	equ	0xFE6
 15712                           postdec1	equ	0xFE5
 15713                           plusw1	equ	0xFE3
 15714                           fsr1h	equ	0xFE2
 15715                           fsr1l	equ	0xFE1
 15716                           indf2	equ	0xFDF
 15717                           postinc2	equ	0xFDE
 15718                           postdec2	equ	0xFDD
 15719                           fsr2h	equ	0xFDA
 15720                           fsr2l	equ	0xFD9
 15721                           status	equ	0xFD8
 15722                           
 15723 ;; *************** function _ValidateDataRange *****************
 15724 ;; Defined at:
 15725 ;;		line 880 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;  channelId       1    wreg     unsigned char 
 15728 ;;  dataRangeNew    1    2[BANK0 ] unsigned char 
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;  channelId       1    6[BANK0 ] unsigned char 
 15731 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 15732 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 15733 ;;  result          1    3[BANK0 ] enum E7249
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      enum E7249
 15736 ;; Registers used:
 15737 ;;		wreg, status,2, status,0, cstack
 15738 ;; Tracked objects:
 15739 ;;		On entry : 0/0
 15740 ;;		On exit  : 0/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15746 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15747 ;;Total ram usage:        5 bytes
 15748 ;; Hardware stack levels used:    1
 15749 ;; Hardware stack levels required when called:    8
 15750 ;; This function calls:
 15751 ;;		_ValidateDataRate
 15752 ;; This function is called by:
 15753 ;;		_LORAWAN_SetDataRange
 15754 ;;		_ExecuteNewChannel
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text81
 15759  0064A2                     __ptext81:
 15760                           	opt stack 0
 15761  0064A2                     _ValidateDataRange:
 15762                           	opt stack 16
 15763                           
 15764                           ;incstack = 0
 15765                           ;ValidateDataRange@channelId stored from wreg
 15766  0064A2  0100               	movlb	0	; () banked
 15767  0064A4  6F66               	movwf	ValidateDataRange@channelId& (0+255),b
 15768                           
 15769                           ;lorawan_na.c: 882: LorawanError_t result = OK;
 15770  0064A6  0E00               	movlw	0
 15771  0064A8  0100               	movlb	0	; () banked
 15772  0064AA  6F63               	movwf	ValidateDataRange@result& (0+255),b
 15773                           
 15774                           ; BSR set to: 0
 15775                           ;lorawan_na.c: 883: uint8_t dataRateMax, dataRateMin;
 15776                           ;lorawan_na.c: 885: dataRateMin = dataRangeNew & 0x0F;
 15777  0064AC  5162               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15778  0064AE  0B0F               	andlw	15
 15779  0064B0  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15780                           
 15781                           ; BSR set to: 0
 15782                           ;lorawan_na.c: 886: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15783  0064B2  3962               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15784  0064B4  0B0F               	andlw	15
 15785  0064B6  0B0F               	andlw	15
 15786  0064B8  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;lorawan_na.c: 888: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (da
      +                          taRateMin) != OK ) || (dataRateMax < dataRateMin) ||
 15790                           ;lorawan_na.c: 889: ((channelId < 64) && ((dataRateMin == 4) || (dataRateMax == 4))) ||
 15791                           ;lorawan_na.c: 890: ((channelId >= 64) && (channelId < 72) && (dataRateMin != 4)) ||
 15792                           ;lorawan_na.c: 891: ((channelId >= 64) && (channelId < 72) && (dataRateMax != 4)))
 15793  0064BA  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15794  0064BC  EC47  F03E         	call	_ValidateDataRate
 15795  0064C0  0900               	iorlw	0
 15796  0064C2  A4D8               	btfss	status,2,c
 15797  0064C4  D02B               	goto	u7820
 15798  0064C6  0100               	movlb	0	; () banked
 15799  0064C8  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15800  0064CA  EC47  F03E         	call	_ValidateDataRate
 15801  0064CE  0900               	iorlw	0
 15802  0064D0  A4D8               	btfss	status,2,c
 15803  0064D2  D024               	goto	u7820
 15804  0064D4  0100               	movlb	0	; () banked
 15805  0064D6  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15806  0064D8  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15807  0064DA  A0D8               	btfss	status,0,c
 15808  0064DC  D01F               	goto	u7820
 15809                           
 15810                           ; BSR set to: 0
 15811  0064DE  0E40               	movlw	64
 15812  0064E0  6166               	cpfslt	ValidateDataRange@channelId& (0+255),b
 15813  0064E2  D008               	goto	u7760
 15814                           
 15815                           ; BSR set to: 0
 15816  0064E4  0E04               	movlw	4
 15817  0064E6  1965               	xorwf	ValidateDataRange@dataRateMin& (0+255),w,b
 15818  0064E8  B4D8               	btfsc	status,2,c
 15819  0064EA  D018               	goto	u7820
 15820                           
 15821                           ; BSR set to: 0
 15822  0064EC  0E04               	movlw	4
 15823  0064EE  1964               	xorwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15824  0064F0  B4D8               	btfsc	status,2,c
 15825  0064F2  D014               	goto	u7820
 15826  0064F4                     u7760:
 15827                           
 15828                           ; BSR set to: 0
 15829                           
 15830                           ; BSR set to: 0
 15831  0064F4  0E3F               	movlw	63
 15832  0064F6  6566               	cpfsgt	ValidateDataRange@channelId& (0+255),b
 15833  0064F8  D007               	goto	u7790
 15834                           
 15835                           ; BSR set to: 0
 15836  0064FA  0E48               	movlw	72
 15837  0064FC  6166               	cpfslt	ValidateDataRange@channelId& (0+255),b
 15838  0064FE  D004               	goto	u7790
 15839                           
 15840                           ; BSR set to: 0
 15841  006500  0E04               	movlw	4
 15842  006502  1965               	xorwf	ValidateDataRange@dataRateMin& (0+255),w,b
 15843  006504  A4D8               	btfss	status,2,c
 15844  006506  D00A               	goto	u7820
 15845  006508                     u7790:
 15846                           
 15847                           ; BSR set to: 0
 15848                           
 15849                           ; BSR set to: 0
 15850  006508  0E3F               	movlw	63
 15851  00650A  6566               	cpfsgt	ValidateDataRange@channelId& (0+255),b
 15852  00650C  D00A               	goto	l1220
 15853                           
 15854                           ; BSR set to: 0
 15855  00650E  0E48               	movlw	72
 15856  006510  6166               	cpfslt	ValidateDataRange@channelId& (0+255),b
 15857  006512  D007               	goto	l1220
 15858                           
 15859                           ; BSR set to: 0
 15860  006514  0E04               	movlw	4
 15861  006516  1964               	xorwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15862  006518  B4D8               	btfsc	status,2,c
 15863  00651A  D003               	goto	l1220
 15864  00651C                     u7820:
 15865                           
 15866                           ;lorawan_na.c: 892: {
 15867                           ;lorawan_na.c: 893: result = INVALID_PARAMETER;
 15868                           
 15869                           ; BSR set to: 0
 15870  00651C  0E03               	movlw	3
 15871  00651E  0100               	movlb	0	; () banked
 15872  006520  6F63               	movwf	ValidateDataRange@result& (0+255),b
 15873  006522                     l1220:
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;lorawan_na.c: 894: }
 15877                           ;lorawan_na.c: 895: return result;
 15878  006522  5163               	movf	ValidateDataRange@result& (0+255),w,b
 15879  006524  0012               	return	
 15880  006526                     __end_of_ValidateDataRange:
 15881                           	opt stack 0
 15882                           tosu	equ	0xFFF
 15883                           tosh	equ	0xFFE
 15884                           tosl	equ	0xFFD
 15885                           pclath	equ	0xFFA
 15886                           tblptru	equ	0xFF8
 15887                           tblptrh	equ	0xFF7
 15888                           tblptrl	equ	0xFF6
 15889                           tablat	equ	0xFF5
 15890                           prodh	equ	0xFF4
 15891                           prodl	equ	0xFF3
 15892                           intcon	equ	0xFF2
 15893                           intcon2	equ	0xFF1
 15894                           intcon3	equ	0xFF0
 15895                           indf0	equ	0xFEF
 15896                           postinc0	equ	0xFEE
 15897                           fsr0h	equ	0xFEA
 15898                           fsr0l	equ	0xFE9
 15899                           wreg	equ	0xFE8
 15900                           postinc1	equ	0xFE6
 15901                           postdec1	equ	0xFE5
 15902                           plusw1	equ	0xFE3
 15903                           fsr1h	equ	0xFE2
 15904                           fsr1l	equ	0xFE1
 15905                           indf2	equ	0xFDF
 15906                           postinc2	equ	0xFDE
 15907                           postdec2	equ	0xFDD
 15908                           fsr2h	equ	0xFDA
 15909                           fsr2l	equ	0xFD9
 15910                           status	equ	0xFD8
 15911                           
 15912 ;; *************** function _UpdateDataRange *****************
 15913 ;; Defined at:
 15914 ;;		line 838 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;  channelId       1    wreg     unsigned char 
 15917 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;  channelId       1    1[BANK0 ] unsigned char 
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1    wreg      void 
 15922 ;; Registers used:
 15923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15924 ;; Tracked objects:
 15925 ;;		On entry : 0/0
 15926 ;;		On exit  : 0/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15929 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15933 ;;Total ram usage:        2 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:    7
 15936 ;; This function calls:
 15937 ;;		Nothing
 15938 ;; This function is called by:
 15939 ;;		_LORAWAN_SetDataRange
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           	psect	text82
 15944  007986                     __ptext82:
 15945                           	opt stack 0
 15946  007986                     _UpdateDataRange:
 15947                           	opt stack 16
 15948                           
 15949                           ; BSR set to: 0
 15950                           ;incstack = 0
 15951                           ;UpdateDataRange@channelId stored from wreg
 15952  007986  0100               	movlb	0	; () banked
 15953  007988  6F61               	movwf	UpdateDataRange@channelId& (0+255),b
 15954                           
 15955                           ;lorawan_na.c: 840: Channels[channelId].dataRange.value = dataRangeNew;
 15956  00798A  0100               	movlb	0	; () banked
 15957  00798C  5161               	movf	UpdateDataRange@channelId& (0+255),w,b
 15958  00798E  0D02               	mullw	2
 15959  007990  0E01               	movlw	1
 15960  007992  26F3               	addwf	prodl,f,c
 15961  007994  0E00               	movlw	0
 15962  007996  22F4               	addwfc	prodh,f,c
 15963  007998  0E00               	movlw	low _Channels
 15964  00799A  24F3               	addwf	prodl,w,c
 15965  00799C  6ED9               	movwf	fsr2l,c
 15966  00799E  0E04               	movlw	high _Channels
 15967  0079A0  20F4               	addwfc	prodh,w,c
 15968  0079A2  6EDA               	movwf	fsr2h,c
 15969  0079A4  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15970                           
 15971                           ; BSR set to: 0
 15972  0079A8  0012               	return		;funcret
 15973  0079AA                     __end_of_UpdateDataRange:
 15974                           	opt stack 0
 15975                           tosu	equ	0xFFF
 15976                           tosh	equ	0xFFE
 15977                           tosl	equ	0xFFD
 15978                           pclath	equ	0xFFA
 15979                           tblptru	equ	0xFF8
 15980                           tblptrh	equ	0xFF7
 15981                           tblptrl	equ	0xFF6
 15982                           tablat	equ	0xFF5
 15983                           prodh	equ	0xFF4
 15984                           prodl	equ	0xFF3
 15985                           intcon	equ	0xFF2
 15986                           intcon2	equ	0xFF1
 15987                           intcon3	equ	0xFF0
 15988                           indf0	equ	0xFEF
 15989                           postinc0	equ	0xFEE
 15990                           fsr0h	equ	0xFEA
 15991                           fsr0l	equ	0xFE9
 15992                           wreg	equ	0xFE8
 15993                           postinc1	equ	0xFE6
 15994                           postdec1	equ	0xFE5
 15995                           plusw1	equ	0xFE3
 15996                           fsr1h	equ	0xFE2
 15997                           fsr1l	equ	0xFE1
 15998                           indf2	equ	0xFDF
 15999                           postinc2	equ	0xFDE
 16000                           postdec2	equ	0xFDD
 16001                           fsr2h	equ	0xFDA
 16002                           fsr2l	equ	0xFD9
 16003                           status	equ	0xFD8
 16004                           
 16005 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16006 ;; Defined at:
 16007 ;;		line 270 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;  channelId       1    wreg     unsigned char 
 16010 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;  channelId       1    6[BANK0 ] unsigned char 
 16013 ;;  result          1    5[BANK0 ] enum E7249
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  1    wreg      enum E7249
 16016 ;; Registers used:
 16017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16023 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16026 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;Total ram usage:        3 bytes
 16028 ;; Hardware stack levels used:    1
 16029 ;; Hardware stack levels required when called:    9
 16030 ;; This function calls:
 16031 ;;		_UpdateChannelIdStatus
 16032 ;;		_ValidateChannelId
 16033 ;; This function is called by:
 16034 ;;		_ExecuteNewChannel
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038                           	psect	text83
 16039  0077F2                     __ptext83:
 16040                           	opt stack 0
 16041  0077F2                     _LORAWAN_SetChannelIdStatus:
 16042                           	opt stack 15
 16043                           
 16044                           ; BSR set to: 0
 16045                           ;incstack = 0
 16046                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16047  0077F2  0100               	movlb	0	; () banked
 16048  0077F4  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16049                           
 16050                           ;lorawan_na.c: 272: LorawanError_t result = OK;
 16051  0077F6  0E00               	movlw	0
 16052  0077F8  0100               	movlb	0	; () banked
 16053  0077FA  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;lorawan_na.c: 274: if (ValidateChannelId (channelId) == OK)
 16057  0077FC  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16058  0077FE  ECEB  F03D         	call	_ValidateChannelId
 16059  007802  0900               	iorlw	0
 16060  007804  A4D8               	btfss	status,2,c
 16061  007806  D007               	goto	l1044
 16062                           
 16063                           ;lorawan_na.c: 275: {
 16064                           ;lorawan_na.c: 276: UpdateChannelIdStatus (channelId, statusNew);
 16065  007808  C064  F062         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16066  00780C  0100               	movlb	0	; () banked
 16067  00780E  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16068  007810  ECD5  F03C         	call	_UpdateChannelIdStatus
 16069                           
 16070                           ;lorawan_na.c: 277: }
 16071  007814  0012               	return	
 16072  007816                     l1044:
 16073                           
 16074                           ;lorawan_na.c: 278: else
 16075                           ;lorawan_na.c: 279: {
 16076                           ;lorawan_na.c: 280: result = INVALID_PARAMETER;
 16077  007816  0E03               	movlw	3
 16078  007818  0100               	movlb	0	; () banked
 16079  00781A  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16080                           
 16081                           ; BSR set to: 0
 16082  00781C  0012               	return	
 16083  00781E                     __end_of_LORAWAN_SetChannelIdStatus:
 16084                           	opt stack 0
 16085                           tosu	equ	0xFFF
 16086                           tosh	equ	0xFFE
 16087                           tosl	equ	0xFFD
 16088                           pclath	equ	0xFFA
 16089                           tblptru	equ	0xFF8
 16090                           tblptrh	equ	0xFF7
 16091                           tblptrl	equ	0xFF6
 16092                           tablat	equ	0xFF5
 16093                           prodh	equ	0xFF4
 16094                           prodl	equ	0xFF3
 16095                           intcon	equ	0xFF2
 16096                           intcon2	equ	0xFF1
 16097                           intcon3	equ	0xFF0
 16098                           indf0	equ	0xFEF
 16099                           postinc0	equ	0xFEE
 16100                           fsr0h	equ	0xFEA
 16101                           fsr0l	equ	0xFE9
 16102                           wreg	equ	0xFE8
 16103                           postinc1	equ	0xFE6
 16104                           postdec1	equ	0xFE5
 16105                           plusw1	equ	0xFE3
 16106                           fsr1h	equ	0xFE2
 16107                           fsr1l	equ	0xFE1
 16108                           indf2	equ	0xFDF
 16109                           postinc2	equ	0xFDE
 16110                           postdec2	equ	0xFDD
 16111                           fsr2h	equ	0xFDA
 16112                           fsr2l	equ	0xFD9
 16113                           status	equ	0xFD8
 16114                           
 16115 ;; *************** function _ValidateChannelId *****************
 16116 ;; Defined at:
 16117 ;;		line 898 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 16118 ;; Parameters:    Size  Location     Type
 16119 ;;  channelId       1    wreg     unsigned char 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;  channelId       1    0[BANK0 ] unsigned char 
 16122 ;;  result          1    1[BANK0 ] enum E7249
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  1    wreg      enum E7249
 16125 ;; Registers used:
 16126 ;;		wreg, status,2, status,0
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16136 ;;Total ram usage:        2 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; Hardware stack levels required when called:    7
 16139 ;; This function calls:
 16140 ;;		Nothing
 16141 ;; This function is called by:
 16142 ;;		_LORAWAN_SetChannelIdStatus
 16143 ;;		_ExecuteNewChannel
 16144 ;;		_LORAWAN_GetDataRange
 16145 ;;		_LORAWAN_GetChannelIdStatus
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text84
 16150  007BD6                     __ptext84:
 16151                           	opt stack 0
 16152  007BD6                     _ValidateChannelId:
 16153                           	opt stack 17
 16154                           
 16155                           ;incstack = 0
 16156                           ;ValidateChannelId@channelId stored from wreg
 16157  007BD6  0100               	movlb	0	; () banked
 16158  007BD8  6F60               	movwf	ValidateChannelId@channelId& (0+255),b
 16159                           
 16160                           ;lorawan_na.c: 900: LorawanError_t result = OK;
 16161  007BDA  0E00               	movlw	0
 16162  007BDC  0100               	movlb	0	; () banked
 16163  007BDE  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;lorawan_na.c: 902: if (channelId >= loRa.maxChannels)
 16167  007BE0  0102               	movlb	2	; () banked
 16168  007BE2  51DE               	movf	(_loRa+222)& (0+255),w,b
 16169  007BE4  0100               	movlb	0	; () banked
 16170  007BE6  5D60               	subwf	ValidateChannelId@channelId& (0+255),w,b
 16171  007BE8  A0D8               	btfss	status,0,c
 16172  007BEA  D002               	goto	l1230
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;lorawan_na.c: 903: {
 16176                           ;lorawan_na.c: 904: result = INVALID_PARAMETER ;
 16177  007BEC  0E03               	movlw	3
 16178  007BEE  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16179  007BF0                     l1230:
 16180                           
 16181                           ; BSR set to: 0
 16182                           ;lorawan_na.c: 905: }
 16183                           ;lorawan_na.c: 907: return result;
 16184  007BF0  5161               	movf	ValidateChannelId@result& (0+255),w,b
 16185  007BF2  0012               	return	
 16186  007BF4                     __end_of_ValidateChannelId:
 16187                           	opt stack 0
 16188                           tosu	equ	0xFFF
 16189                           tosh	equ	0xFFE
 16190                           tosl	equ	0xFFD
 16191                           pclath	equ	0xFFA
 16192                           tblptru	equ	0xFF8
 16193                           tblptrh	equ	0xFF7
 16194                           tblptrl	equ	0xFF6
 16195                           tablat	equ	0xFF5
 16196                           prodh	equ	0xFF4
 16197                           prodl	equ	0xFF3
 16198                           intcon	equ	0xFF2
 16199                           intcon2	equ	0xFF1
 16200                           intcon3	equ	0xFF0
 16201                           indf0	equ	0xFEF
 16202                           postinc0	equ	0xFEE
 16203                           fsr0h	equ	0xFEA
 16204                           fsr0l	equ	0xFE9
 16205                           wreg	equ	0xFE8
 16206                           postinc1	equ	0xFE6
 16207                           postdec1	equ	0xFE5
 16208                           plusw1	equ	0xFE3
 16209                           fsr1h	equ	0xFE2
 16210                           fsr1l	equ	0xFE1
 16211                           indf2	equ	0xFDF
 16212                           postinc2	equ	0xFDE
 16213                           postdec2	equ	0xFDD
 16214                           fsr2h	equ	0xFDA
 16215                           fsr2l	equ	0xFD9
 16216                           status	equ	0xFD8
 16217                           
 16218 ;; *************** function _ExecuteLinkCheck *****************
 16219 ;; Defined at:
 16220 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16221 ;; Parameters:    Size  Location     Type
 16222 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 16223 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;		None
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  2    0[BANK0 ] PTR unsigned char 
 16228 ;; Registers used:
 16229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16238 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;Total ram usage:        2 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:    7
 16242 ;; This function calls:
 16243 ;;		Nothing
 16244 ;; This function is called by:
 16245 ;;		_MacExecuteCommands
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           	psect	text85
 16250  007648                     __ptext85:
 16251                           	opt stack 0
 16252  007648                     _ExecuteLinkCheck:
 16253                           	opt stack 18
 16254                           
 16255                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;incstack = 0
 16259  007648  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16260  00764C  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16261  007650  50DF               	movf	indf2,w,c
 16262  007652  0102               	movlb	2	; () banked
 16263  007654  6FCE               	movwf	(_loRa+206)& (0+255),b
 16264                           
 16265                           ; BSR set to: 2
 16266  007656  0100               	movlb	0	; () banked
 16267  007658  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16268  00765A  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 16272  00765C  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16273  007660  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16274  007664  50DF               	movf	indf2,w,c
 16275  007666  0102               	movlb	2	; () banked
 16276  007668  6FCF               	movwf	(_loRa+207)& (0+255),b
 16277  00766A  0100               	movlb	0	; () banked
 16278  00766C  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16279  00766E  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;lorawan.c: 1656: return ptr;
 16283  007670  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 16284  007674  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 16285  007678  0012               	return	
 16286  00767A                     __end_of_ExecuteLinkCheck:
 16287                           	opt stack 0
 16288                           tosu	equ	0xFFF
 16289                           tosh	equ	0xFFE
 16290                           tosl	equ	0xFFD
 16291                           pclath	equ	0xFFA
 16292                           tblptru	equ	0xFF8
 16293                           tblptrh	equ	0xFF7
 16294                           tblptrl	equ	0xFF6
 16295                           tablat	equ	0xFF5
 16296                           prodh	equ	0xFF4
 16297                           prodl	equ	0xFF3
 16298                           intcon	equ	0xFF2
 16299                           intcon2	equ	0xFF1
 16300                           intcon3	equ	0xFF0
 16301                           indf0	equ	0xFEF
 16302                           postinc0	equ	0xFEE
 16303                           fsr0h	equ	0xFEA
 16304                           fsr0l	equ	0xFE9
 16305                           wreg	equ	0xFE8
 16306                           postinc1	equ	0xFE6
 16307                           postdec1	equ	0xFE5
 16308                           plusw1	equ	0xFE3
 16309                           fsr1h	equ	0xFE2
 16310                           fsr1l	equ	0xFE1
 16311                           indf2	equ	0xFDF
 16312                           postinc2	equ	0xFDE
 16313                           postdec2	equ	0xFDD
 16314                           fsr2h	equ	0xFDA
 16315                           fsr2l	equ	0xFD9
 16316                           status	equ	0xFD8
 16317                           
 16318 ;; *************** function _ExecuteLinkAdr *****************
 16319 ;; Defined at:
 16320 ;;		line 418 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 16321 ;; Parameters:    Size  Location     Type
 16322 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 16323 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16324 ;; Auto vars:     Size  Location     Type
 16325 ;;  redundancy      2   31[BANK0 ] PTR struct .
 16326 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16327 ;;  auxChannelMa    2   29[BANK0 ] unsigned int 
 16328 ;;  channelMask     2   23[BANK0 ] unsigned int 
 16329 ;;  i               1   33[BANK0 ] unsigned char 
 16330 ;;  auxMaxDataRa    1   28[BANK0 ] unsigned char 
 16331 ;;  dataRate        1   27[BANK0 ] unsigned char 
 16332 ;;  txPower         1   26[BANK0 ] unsigned char 
 16333 ;;  auxMinDataRa    1   25[BANK0 ] unsigned char 
 16334 ;;  startingInde    1   22[BANK0 ] unsigned char 
 16335 ;;  txPowerNew      1   21[BANK0 ] unsigned char 
 16336 ;;  endingIndex     1   20[BANK0 ] unsigned char 
 16337 ;; Return value:  Size  Location     Type
 16338 ;;                  2   16[BANK0 ] PTR unsigned char 
 16339 ;; Registers used:
 16340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16341 ;; Tracked objects:
 16342 ;;		On entry : 0/0
 16343 ;;		On exit  : 0/0
 16344 ;;		Unchanged: 0/0
 16345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16347 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16349 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16350 ;;Total ram usage:       18 bytes
 16351 ;; Hardware stack levels used:    1
 16352 ;; Hardware stack levels required when called:   11
 16353 ;; This function calls:
 16354 ;;		_EnableChannels
 16355 ;;		_UpdateCurrentDataRate
 16356 ;;		_UpdateTxPower
 16357 ;;		_ValidateChannelMaskCntl
 16358 ;;		_ValidateDataRate
 16359 ;; This function is called by:
 16360 ;;		_MacExecuteCommands
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           	psect	text86
 16365  001212                     __ptext86:
 16366                           	opt stack 0
 16367  001212                     _ExecuteLinkAdr:
 16368                           	opt stack 14
 16369                           
 16370                           ;lorawan_na.c: 420: uint8_t txPower, dataRate;
 16371                           ;lorawan_na.c: 421: uint16_t channelMask, auxChannelMask;
 16372                           ;lorawan_na.c: 422: uint8_t auxMinDataRate = 7, auxMaxDataRate = 0, i;
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;incstack = 0
 16376  001212  0E07               	movlw	7
 16377  001214  0100               	movlb	0	; () banked
 16378  001216  6F79               	movwf	ExecuteLinkAdr@auxMinDataRate& (0+255),b
 16379  001218  0E00               	movlw	0
 16380  00121A  6F7C               	movwf	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16381                           
 16382                           ; BSR set to: 0
 16383                           ;lorawan_na.c: 423: uint8_t startingIndex, endingIndex;
 16384                           ;lorawan_na.c: 424: uint8_t txPowerNew;
 16385                           ;lorawan_na.c: 426: txPower = *(ptr) & 0x0F;
 16386  00121C  C070  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16387  001220  C071  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16388  001224  50DF               	movf	indf2,w,c
 16389  001226  0B0F               	andlw	15
 16390  001228  6F7A               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 16391                           
 16392                           ; BSR set to: 0
 16393                           ;lorawan_na.c: 427: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 16394  00122A  C070  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16395  00122E  C071  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16396  001232  50DF               	movf	indf2,w,c
 16397  001234  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16398  001236  3972               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16399  001238  0B0F               	andlw	15
 16400  00123A  0B0F               	andlw	15
 16401  00123C  6F7B               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;lorawan_na.c: 428: ptr++;
 16405  00123E  4B70               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16406  001240  2B71               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;lorawan_na.c: 429: channelMask = (*((uint16_t*)ptr));
 16410  001242  C070  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16411  001246  C071  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16412  00124A  CFDE F077          	movff	postinc2,ExecuteLinkAdr@channelMask
 16413  00124E  CFDD F078          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 16414                           
 16415                           ; BSR set to: 0
 16416                           ;lorawan_na.c: 430: auxChannelMask = channelMask;
 16417  001252  C077  F07D         	movff	ExecuteLinkAdr@channelMask,ExecuteLinkAdr@auxChannelMask
 16418  001256  C078  F07E         	movff	ExecuteLinkAdr@channelMask+1,ExecuteLinkAdr@auxChannelMask+1
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;lorawan_na.c: 431: ptr = ptr + sizeof (channelMask);
 16422  00125A  0E02               	movlw	2
 16423  00125C  2570               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 16424  00125E  6F70               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 16425  001260  0E00               	movlw	0
 16426  001262  2171               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 16427  001264  6F71               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;lorawan_na.c: 432: Redundancy_t *redundancy;
 16431                           ;lorawan_na.c: 433: redundancy = (Redundancy_t*)(ptr++);
 16432  001266  C070  F07F         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16433  00126A  C071  F080         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16434                           
 16435                           ; BSR set to: 0
 16436  00126E  4B70               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16437  001270  2B71               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16438                           
 16439                           ; BSR set to: 0
 16440                           ;lorawan_na.c: 435: if (1 == loRa.macStatus.adr)
 16441  001272  0102               	movlb	2	; () banked
 16442  001274  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16443  001276  D1DD               	goto	l1088
 16444                           
 16445                           ; BSR set to: 2
 16446                           ;lorawan_na.c: 436: {
 16447                           ;lorawan_na.c: 437: if (ValidateChannelMaskCntl(redundancy->chMaskCntl, channelMask) == 
      +                          OK)
 16448  001278  C077  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMaskCntl@channelMask
 16449  00127C  C078  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMaskCntl@channelMask+1
 16450  001280  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16451  001284  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16452  001288  0100               	movlb	0	; () banked
 16453  00128A  38DF               	swapf	223,w,c
 16454  00128C  0B07               	andlw	7
 16455  00128E  EC4D  F03D         	call	_ValidateChannelMaskCntl
 16456  001292  0900               	iorlw	0
 16457  001294  A4D8               	btfss	status,2,c
 16458  001296  D103               	goto	l1104
 16459                           
 16460                           ;lorawan_na.c: 438: {
 16461                           ;lorawan_na.c: 439: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16462  001298  0102               	movlb	2	; () banked
 16463  00129A  5198               	movf	(_loRa+152)& (0+255),w,b
 16464  00129C  0D02               	mullw	2
 16465  00129E  0E00               	movlw	low _loRa
 16466  0012A0  0100               	movlb	0	; () banked
 16467  0012A2  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16468  0012A4  0E02               	movlw	high _loRa
 16469  0012A6  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16470  0012A8  0E99               	movlw	153
 16471  0012AA  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16472  0012AC  0E00               	movlw	0
 16473  0012AE  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16474  0012B0  50F3               	movf	prodl,w,c
 16475  0012B2  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16476  0012B4  50F4               	movf	prodh,w,c
 16477  0012B6  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16478  0012B8  0E01               	movlw	1
 16479  0012BA  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16480  0012BC  6ED9               	movwf	fsr2l,c
 16481  0012BE  0E00               	movlw	0
 16482  0012C0  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16483  0012C2  6EDA               	movwf	fsr2h,c
 16484  0012C4  0102               	movlb	2	; () banked
 16485  0012C6  80DF               	bsf	indf2,0,c
 16486                           
 16487                           ;lorawan_na.c: 440: switch (redundancy->chMaskCntl)
 16488  0012C8  D0CE               	goto	l1090
 16489  0012CA                     
 16490                           ;lorawan_na.c: 443: case 1:
 16491                           ;lorawan_na.c: 444: case 2:
 16492                           ;lorawan_na.c: 445: case 3:
 16493                           ;lorawan_na.c: 446: {
 16494                           ;lorawan_na.c: 447: startingIndex = redundancy->chMaskCntl << (4);
 16495                           
 16496                           ; BSR set to: 2
 16497                           
 16498                           ; BSR set to: 2
 16499                           
 16500                           ; BSR set to: 2
 16501                           
 16502                           ; BSR set to: 2
 16503  0012CA  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16504  0012CE  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16505  0012D2  0100               	movlb	0	; () banked
 16506  0012D4  38DF               	swapf	223,w,c
 16507  0012D6  0B07               	andlw	7
 16508  0012D8  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16509  0012DA  3972               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16510  0012DC  0BF0               	andlw	240
 16511  0012DE  6F76               	movwf	ExecuteLinkAdr@startingIndex& (0+255),b
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;lorawan_na.c: 448: endingIndex = startingIndex + 16;
 16515  0012E0  5176               	movf	ExecuteLinkAdr@startingIndex& (0+255),w,b
 16516  0012E2  0F10               	addlw	16
 16517  0012E4  6F74               	movwf	ExecuteLinkAdr@endingIndex& (0+255),b
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;lorawan_na.c: 449: for (i = startingIndex; i < endingIndex; i++)
 16521  0012E6  C076  F081         	movff	ExecuteLinkAdr@startingIndex,ExecuteLinkAdr@i
 16522  0012EA  D05D               	goto	l1095
 16523  0012EC                     
 16524                           ; BSR set to: 0
 16525                           ;lorawan_na.c: 450: {
 16526                           ;lorawan_na.c: 451: if ((Channels[i].dataRange.min < auxMinDataRate) && (((auxChannelMas
      +                          k & 0x0001) == 0x0001) || (auxChannelMask == 0)))
 16527                           
 16528                           ; BSR set to: 0
 16529  0012EC  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16530  0012EE  0D02               	mullw	2
 16531  0012F0  0E01               	movlw	1
 16532  0012F2  26F3               	addwf	prodl,f,c
 16533  0012F4  0E00               	movlw	0
 16534  0012F6  22F4               	addwfc	prodh,f,c
 16535  0012F8  0E00               	movlw	low _Channels
 16536  0012FA  24F3               	addwf	prodl,w,c
 16537  0012FC  6ED9               	movwf	fsr2l,c
 16538  0012FE  0E04               	movlw	high _Channels
 16539  001300  20F4               	addwfc	prodh,w,c
 16540  001302  6EDA               	movwf	fsr2h,c
 16541  001304  0104               	movlb	4	; () banked
 16542  001306  50DF               	movf	223,w,c
 16543  001308  0B0F               	andlw	15
 16544  00130A  0100               	movlb	0	; () banked
 16545  00130C  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16546  00130E  5179               	movf	ExecuteLinkAdr@auxMinDataRate& (0+255),w,b
 16547  001310  5D72               	subwf	??_ExecuteLinkAdr& (0+255),w,b
 16548  001312  B0D8               	btfsc	status,0,c
 16549  001314  D017               	goto	l1097
 16550                           
 16551                           ; BSR set to: 0
 16552  001316  B17D               	btfsc	ExecuteLinkAdr@auxChannelMask& (0+255),0,b
 16553  001318  D004               	goto	u8960
 16554                           
 16555                           ; BSR set to: 0
 16556  00131A  517D               	movf	ExecuteLinkAdr@auxChannelMask& (0+255),w,b
 16557  00131C  117E               	iorwf	(ExecuteLinkAdr@auxChannelMask+1)& (0+255),w,b
 16558  00131E  A4D8               	btfss	status,2,c
 16559  001320  D011               	goto	l1097
 16560  001322                     u8960:
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;lorawan_na.c: 452: {
 16564                           ;lorawan_na.c: 453: auxMinDataRate = Channels[i].dataRange.min;
 16565                           
 16566                           ; BSR set to: 0
 16567  001322  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16568  001324  0D02               	mullw	2
 16569  001326  0E01               	movlw	1
 16570  001328  26F3               	addwf	prodl,f,c
 16571  00132A  0E00               	movlw	0
 16572  00132C  22F4               	addwfc	prodh,f,c
 16573  00132E  0E00               	movlw	low _Channels
 16574  001330  24F3               	addwf	prodl,w,c
 16575  001332  6ED9               	movwf	fsr2l,c
 16576  001334  0E04               	movlw	high _Channels
 16577  001336  20F4               	addwfc	prodh,w,c
 16578  001338  6EDA               	movwf	fsr2h,c
 16579  00133A  0104               	movlb	4	; () banked
 16580  00133C  50DF               	movf	223,w,c
 16581  00133E  0B0F               	andlw	15
 16582  001340  0100               	movlb	0	; () banked
 16583  001342  6F79               	movwf	ExecuteLinkAdr@auxMinDataRate& (0+255),b
 16584  001344                     l1097:
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;lorawan_na.c: 454: }
 16588                           ;lorawan_na.c: 455: if ((Channels[i].dataRange.max > auxMaxDataRate) && (((auxChannelMas
      +                          k & 0x0001) == 0x0001) || (auxChannelMask == 0)))
 16589  001344  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16590  001346  0D02               	mullw	2
 16591  001348  0E01               	movlw	1
 16592  00134A  26F3               	addwf	prodl,f,c
 16593  00134C  0E00               	movlw	0
 16594  00134E  22F4               	addwfc	prodh,f,c
 16595  001350  0E00               	movlw	low _Channels
 16596  001352  24F3               	addwf	prodl,w,c
 16597  001354  6ED9               	movwf	fsr2l,c
 16598  001356  0E04               	movlw	high _Channels
 16599  001358  20F4               	addwfc	prodh,w,c
 16600  00135A  6EDA               	movwf	fsr2h,c
 16601  00135C  0104               	movlb	4	; () banked
 16602  00135E  38DF               	swapf	223,w,c
 16603  001360  0B0F               	andlw	15
 16604  001362  0100               	movlb	0	; () banked
 16605  001364  617C               	cpfslt	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16606  001366  D017               	goto	l1100
 16607                           
 16608                           ; BSR set to: 0
 16609  001368  B17D               	btfsc	ExecuteLinkAdr@auxChannelMask& (0+255),0,b
 16610  00136A  D004               	goto	u8990
 16611                           
 16612                           ; BSR set to: 0
 16613  00136C  517D               	movf	ExecuteLinkAdr@auxChannelMask& (0+255),w,b
 16614  00136E  117E               	iorwf	(ExecuteLinkAdr@auxChannelMask+1)& (0+255),w,b
 16615  001370  A4D8               	btfss	status,2,c
 16616  001372  D011               	goto	l1100
 16617  001374                     u8990:
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;lorawan_na.c: 456: {
 16621                           ;lorawan_na.c: 457: auxMaxDataRate = Channels[i].dataRange.max;
 16622                           
 16623                           ; BSR set to: 0
 16624  001374  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16625  001376  0D02               	mullw	2
 16626  001378  0E01               	movlw	1
 16627  00137A  26F3               	addwf	prodl,f,c
 16628  00137C  0E00               	movlw	0
 16629  00137E  22F4               	addwfc	prodh,f,c
 16630  001380  0E00               	movlw	low _Channels
 16631  001382  24F3               	addwf	prodl,w,c
 16632  001384  6ED9               	movwf	fsr2l,c
 16633  001386  0E04               	movlw	high _Channels
 16634  001388  20F4               	addwfc	prodh,w,c
 16635  00138A  6EDA               	movwf	fsr2h,c
 16636  00138C  0104               	movlb	4	; () banked
 16637  00138E  38DF               	swapf	223,w,c
 16638  001390  0B0F               	andlw	15
 16639  001392  0100               	movlb	0	; () banked
 16640  001394  6F7C               	movwf	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16641  001396                     l1100:
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;lorawan_na.c: 458: }
 16645                           ;lorawan_na.c: 459: auxChannelMask = auxChannelMask >> (1);
 16646                           
 16647                           ; BSR set to: 0
 16648  001396  90D8               	bcf	status,0,c
 16649  001398  317E               	rrcf	(ExecuteLinkAdr@auxChannelMask+1)& (0+255),w,b
 16650  00139A  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16651  00139C  317D               	rrcf	ExecuteLinkAdr@auxChannelMask& (0+255),w,b
 16652  00139E  6F7D               	movwf	ExecuteLinkAdr@auxChannelMask& (0+255),b
 16653  0013A0  C072  F07E         	movff	??_ExecuteLinkAdr,ExecuteLinkAdr@auxChannelMask+1
 16654                           
 16655                           ; BSR set to: 0
 16656  0013A4  2B81               	incf	ExecuteLinkAdr@i& (0+255),f,b
 16657  0013A6                     l1095:
 16658                           
 16659                           ; BSR set to: 0
 16660                           
 16661                           ; BSR set to: 0
 16662  0013A6  5174               	movf	ExecuteLinkAdr@endingIndex& (0+255),w,b
 16663  0013A8  5D81               	subwf	ExecuteLinkAdr@i& (0+255),w,b
 16664  0013AA  B0D8               	btfsc	status,0,c
 16665  0013AC  D078               	goto	l1104
 16666  0013AE  D79E               	goto	l1096
 16667  0013B0                     
 16668                           ; BSR set to: 0
 16669                           ;lorawan_na.c: 464: case 7:
 16670                           ;lorawan_na.c: 465: {
 16671                           ;lorawan_na.c: 466: auxMinDataRate = 4;
 16672                           
 16673                           ; BSR set to: 0
 16674                           
 16675                           ; BSR set to: 0
 16676  0013B0  0E04               	movlw	4
 16677  0013B2  6F79               	movwf	ExecuteLinkAdr@auxMinDataRate& (0+255),b
 16678  0013B4  D055               	goto	u9050
 16679  0013B6                     
 16680                           ; BSR set to: 0
 16681                           ;lorawan_na.c: 471: {
 16682                           ;lorawan_na.c: 473: for (i = 0; i < 64; i++)
 16683                           
 16684                           ; BSR set to: 0
 16685  0013B6  0E00               	movlw	0
 16686  0013B8  6F81               	movwf	ExecuteLinkAdr@i& (0+255),b
 16687  0013BA                     l9394:
 16688                           
 16689                           ; BSR set to: 0
 16690  0013BA  0E3F               	movlw	63
 16691  0013BC  6581               	cpfsgt	ExecuteLinkAdr@i& (0+255),b
 16692  0013BE  D001               	goto	l1108
 16693  0013C0  D04B               	goto	u9040
 16694  0013C2                     l1108:
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;lorawan_na.c: 474: {
 16698                           ;lorawan_na.c: 475: if (Channels[i].dataRange.min < auxMinDataRate)
 16699                           
 16700                           ; BSR set to: 0
 16701  0013C2  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16702  0013C4  0D02               	mullw	2
 16703  0013C6  0E01               	movlw	1
 16704  0013C8  26F3               	addwf	prodl,f,c
 16705  0013CA  0E00               	movlw	0
 16706  0013CC  22F4               	addwfc	prodh,f,c
 16707  0013CE  0E00               	movlw	low _Channels
 16708  0013D0  24F3               	addwf	prodl,w,c
 16709  0013D2  6ED9               	movwf	fsr2l,c
 16710  0013D4  0E04               	movlw	high _Channels
 16711  0013D6  20F4               	addwfc	prodh,w,c
 16712  0013D8  6EDA               	movwf	fsr2h,c
 16713  0013DA  0104               	movlb	4	; () banked
 16714  0013DC  50DF               	movf	223,w,c
 16715  0013DE  0B0F               	andlw	15
 16716  0013E0  0100               	movlb	0	; () banked
 16717  0013E2  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16718  0013E4  5179               	movf	ExecuteLinkAdr@auxMinDataRate& (0+255),w,b
 16719  0013E6  5D72               	subwf	??_ExecuteLinkAdr& (0+255),w,b
 16720  0013E8  B0D8               	btfsc	status,0,c
 16721  0013EA  D011               	goto	l1110
 16722                           
 16723                           ; BSR set to: 0
 16724                           ;lorawan_na.c: 476: {
 16725                           ;lorawan_na.c: 477: auxMinDataRate = Channels[i].dataRange.min;
 16726  0013EC  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16727  0013EE  0D02               	mullw	2
 16728  0013F0  0E01               	movlw	1
 16729  0013F2  26F3               	addwf	prodl,f,c
 16730  0013F4  0E00               	movlw	0
 16731  0013F6  22F4               	addwfc	prodh,f,c
 16732  0013F8  0E00               	movlw	low _Channels
 16733  0013FA  24F3               	addwf	prodl,w,c
 16734  0013FC  6ED9               	movwf	fsr2l,c
 16735  0013FE  0E04               	movlw	high _Channels
 16736  001400  20F4               	addwfc	prodh,w,c
 16737  001402  6EDA               	movwf	fsr2h,c
 16738  001404  0104               	movlb	4	; () banked
 16739  001406  50DF               	movf	223,w,c
 16740  001408  0B0F               	andlw	15
 16741  00140A  0100               	movlb	0	; () banked
 16742  00140C  6F79               	movwf	ExecuteLinkAdr@auxMinDataRate& (0+255),b
 16743  00140E                     l1110:
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;lorawan_na.c: 478: }
 16747                           ;lorawan_na.c: 479: if (Channels[i].dataRange.max > auxMaxDataRate)
 16748  00140E  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16749  001410  0D02               	mullw	2
 16750  001412  0E01               	movlw	1
 16751  001414  26F3               	addwf	prodl,f,c
 16752  001416  0E00               	movlw	0
 16753  001418  22F4               	addwfc	prodh,f,c
 16754  00141A  0E00               	movlw	low _Channels
 16755  00141C  24F3               	addwf	prodl,w,c
 16756  00141E  6ED9               	movwf	fsr2l,c
 16757  001420  0E04               	movlw	high _Channels
 16758  001422  20F4               	addwfc	prodh,w,c
 16759  001424  6EDA               	movwf	fsr2h,c
 16760  001426  0104               	movlb	4	; () banked
 16761  001428  38DF               	swapf	223,w,c
 16762  00142A  0B0F               	andlw	15
 16763  00142C  0100               	movlb	0	; () banked
 16764  00142E  617C               	cpfslt	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16765  001430  D011               	goto	l1111
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;lorawan_na.c: 480: {
 16769                           ;lorawan_na.c: 481: auxMaxDataRate = Channels[i].dataRange.max;
 16770  001432  5181               	movf	ExecuteLinkAdr@i& (0+255),w,b
 16771  001434  0D02               	mullw	2
 16772  001436  0E01               	movlw	1
 16773  001438  26F3               	addwf	prodl,f,c
 16774  00143A  0E00               	movlw	0
 16775  00143C  22F4               	addwfc	prodh,f,c
 16776  00143E  0E00               	movlw	low _Channels
 16777  001440  24F3               	addwf	prodl,w,c
 16778  001442  6ED9               	movwf	fsr2l,c
 16779  001444  0E04               	movlw	high _Channels
 16780  001446  20F4               	addwfc	prodh,w,c
 16781  001448  6EDA               	movwf	fsr2h,c
 16782  00144A  0104               	movlb	4	; () banked
 16783  00144C  38DF               	swapf	223,w,c
 16784  00144E  0B0F               	andlw	15
 16785  001450  0100               	movlb	0	; () banked
 16786  001452  6F7C               	movwf	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16787  001454                     l1111:
 16788                           
 16789                           ; BSR set to: 0
 16790                           
 16791                           ; BSR set to: 0
 16792  001454  2B81               	incf	ExecuteLinkAdr@i& (0+255),f,b
 16793  001456  D7B1               	goto	l9394
 16794  001458                     u9040:
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;lorawan_na.c: 482: }
 16798                           ;lorawan_na.c: 483: }
 16799                           ;lorawan_na.c: 484: if (channelMask != 0)
 16800                           
 16801                           ; BSR set to: 0
 16802  001458  5177               	movf	ExecuteLinkAdr@channelMask& (0+255),w,b
 16803  00145A  1178               	iorwf	(ExecuteLinkAdr@channelMask+1)& (0+255),w,b
 16804  00145C  B4D8               	btfsc	status,2,c
 16805  00145E  D01F               	goto	l1104
 16806  001460                     u9050:
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;lorawan_na.c: 485: {
 16810                           ;lorawan_na.c: 486: auxMaxDataRate = 4;
 16811  001460  0E04               	movlw	4
 16812  001462  6F7C               	movwf	ExecuteLinkAdr@auxMaxDataRate& (0+255),b
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;lorawan_na.c: 489: }
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;lorawan_na.c: 487: }
 16819                           ;lorawan_na.c: 488: } break;
 16820  001464  D01C               	goto	l1104
 16821  001466                     l1090:
 16822                           
 16823                           ; BSR set to: 0
 16824  001466  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16825  00146A  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16826  00146E  0100               	movlb	0	; () banked
 16827  001470  38DF               	swapf	223,w,c
 16828  001472  0B07               	andlw	7
 16829                           
 16830                           ; Switch size 1, requested type "space"
 16831                           ; Number of cases is 7, Range of values is 0 to 7
 16832                           ; switch strategies available:
 16833                           ; Name         Instructions Cycles
 16834                           ; simple_byte           22    12 (average)
 16835                           ;	Chosen strategy is simple_byte
 16836  001474  0A00               	xorlw	0	; case 0
 16837  001476  B4D8               	btfsc	status,2,c
 16838  001478  D728               	goto	l1091
 16839  00147A  0A01               	xorlw	1	; case 1
 16840  00147C  B4D8               	btfsc	status,2,c
 16841  00147E  D725               	goto	l1091
 16842  001480  0A03               	xorlw	3	; case 2
 16843  001482  B4D8               	btfsc	status,2,c
 16844  001484  D722               	goto	l1091
 16845  001486  0A01               	xorlw	1	; case 3
 16846  001488  B4D8               	btfsc	status,2,c
 16847  00148A  D71F               	goto	l1091
 16848  00148C  0A07               	xorlw	7	; case 4
 16849  00148E  B4D8               	btfsc	status,2,c
 16850  001490  D78F               	goto	l1105
 16851  001492  0A02               	xorlw	2	; case 6
 16852  001494  B4D8               	btfsc	status,2,c
 16853  001496  D78F               	goto	l1107
 16854  001498  0A01               	xorlw	1	; case 7
 16855  00149A  B4D8               	btfsc	status,2,c
 16856  00149C  D789               	goto	l1105
 16857  00149E                     l1104:
 16858                           
 16859                           ;lorawan_na.c: 490: }
 16860                           ;lorawan_na.c: 492: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= auxMinDataR
      +                          ate) && (dataRate <= auxMaxDataRate) )
 16861                           
 16862                           ; BSR set to: 0
 16863                           
 16864                           ; BSR set to: 0
 16865  00149E  0100               	movlb	0	; () banked
 16866  0014A0  517B               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16867  0014A2  EC47  F03E         	call	_ValidateDataRate
 16868  0014A6  0900               	iorlw	0
 16869  0014A8  A4D8               	btfss	status,2,c
 16870  0014AA  D021               	goto	l1113
 16871  0014AC  0100               	movlb	0	; () banked
 16872  0014AE  5179               	movf	ExecuteLinkAdr@auxMinDataRate& (0+255),w,b
 16873  0014B0  5D7B               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16874  0014B2  A0D8               	btfss	status,0,c
 16875  0014B4  D01C               	goto	l1113
 16876                           
 16877                           ; BSR set to: 0
 16878  0014B6  517B               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16879  0014B8  5D7C               	subwf	ExecuteLinkAdr@auxMaxDataRate& (0+255),w,b
 16880  0014BA  A0D8               	btfss	status,0,c
 16881  0014BC  D018               	goto	l1113
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;lorawan_na.c: 493: {
 16885                           ;lorawan_na.c: 494: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16886  0014BE  0102               	movlb	2	; () banked
 16887  0014C0  5198               	movf	(_loRa+152)& (0+255),w,b
 16888  0014C2  0D02               	mullw	2
 16889  0014C4  0E00               	movlw	low _loRa
 16890  0014C6  0100               	movlb	0	; () banked
 16891  0014C8  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16892  0014CA  0E02               	movlw	high _loRa
 16893  0014CC  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16894  0014CE  0E99               	movlw	153
 16895  0014D0  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16896  0014D2  0E00               	movlw	0
 16897  0014D4  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16898  0014D6  50F3               	movf	prodl,w,c
 16899  0014D8  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16900  0014DA  50F4               	movf	prodh,w,c
 16901  0014DC  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16902  0014DE  0E01               	movlw	1
 16903  0014E0  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16904  0014E2  6ED9               	movwf	fsr2l,c
 16905  0014E4  0E00               	movlw	0
 16906  0014E6  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16907  0014E8  6EDA               	movwf	fsr2h,c
 16908  0014EA  0102               	movlb	2	; () banked
 16909  0014EC  82DF               	bsf	indf2,1,c
 16910  0014EE                     l1113:
 16911                           
 16912                           ;lorawan_na.c: 495: }
 16913                           ;lorawan_na.c: 497: if ((txPower <= 10) && (txPower != 6))
 16914                           
 16915                           ; BSR set to: 2
 16916  0014EE  0E0B               	movlw	11
 16917  0014F0  0100               	movlb	0	; () banked
 16918  0014F2  617A               	cpfslt	ExecuteLinkAdr@txPower& (0+255),b
 16919  0014F4  D01C               	goto	l1114
 16920                           
 16921                           ; BSR set to: 0
 16922  0014F6  0E06               	movlw	6
 16923  0014F8  197A               	xorwf	ExecuteLinkAdr@txPower& (0+255),w,b
 16924  0014FA  B4D8               	btfsc	status,2,c
 16925  0014FC  D018               	goto	l1114
 16926                           
 16927                           ; BSR set to: 0
 16928                           ;lorawan_na.c: 498: {
 16929                           ;lorawan_na.c: 499: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16930  0014FE  0102               	movlb	2	; () banked
 16931  001500  5198               	movf	(_loRa+152)& (0+255),w,b
 16932  001502  0D02               	mullw	2
 16933  001504  0E00               	movlw	low _loRa
 16934  001506  0100               	movlb	0	; () banked
 16935  001508  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16936  00150A  0E02               	movlw	high _loRa
 16937  00150C  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16938  00150E  0E99               	movlw	153
 16939  001510  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16940  001512  0E00               	movlw	0
 16941  001514  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16942  001516  50F3               	movf	prodl,w,c
 16943  001518  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16944  00151A  50F4               	movf	prodh,w,c
 16945  00151C  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16946  00151E  0E01               	movlw	1
 16947  001520  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16948  001522  6ED9               	movwf	fsr2l,c
 16949  001524  0E00               	movlw	0
 16950  001526  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16951  001528  6EDA               	movwf	fsr2h,c
 16952  00152A  0102               	movlb	2	; () banked
 16953  00152C  84DF               	bsf	indf2,2,c
 16954  00152E                     l1114:
 16955                           
 16956                           ;lorawan_na.c: 500: }
 16957                           ;lorawan_na.c: 502: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16958  00152E  0102               	movlb	2	; () banked
 16959  001530  5198               	movf	(_loRa+152)& (0+255),w,b
 16960  001532  0D02               	mullw	2
 16961  001534  0E00               	movlw	low _loRa
 16962  001536  0100               	movlb	0	; () banked
 16963  001538  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16964  00153A  0E02               	movlw	high _loRa
 16965  00153C  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16966  00153E  0E99               	movlw	153
 16967  001540  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16968  001542  0E00               	movlw	0
 16969  001544  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16970  001546  50F3               	movf	prodl,w,c
 16971  001548  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16972  00154A  50F4               	movf	prodh,w,c
 16973  00154C  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16974  00154E  0E01               	movlw	1
 16975  001550  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16976  001552  6ED9               	movwf	fsr2l,c
 16977  001554  0E00               	movlw	0
 16978  001556  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16979  001558  6EDA               	movwf	fsr2h,c
 16980  00155A  0102               	movlb	2	; () banked
 16981  00155C  A4DF               	btfss	indf2,2,c
 16982  00155E  D0AE               	goto	l1120
 16983                           
 16984                           ; BSR set to: 2
 16985  001560  5198               	movf	(_loRa+152)& (0+255),w,b
 16986  001562  0D02               	mullw	2
 16987  001564  0E00               	movlw	low _loRa
 16988  001566  0100               	movlb	0	; () banked
 16989  001568  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 16990  00156A  0E02               	movlw	high _loRa
 16991  00156C  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16992  00156E  0E99               	movlw	153
 16993  001570  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16994  001572  0E00               	movlw	0
 16995  001574  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16996  001576  50F3               	movf	prodl,w,c
 16997  001578  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16998  00157A  50F4               	movf	prodh,w,c
 16999  00157C  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17000  00157E  0E01               	movlw	1
 17001  001580  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17002  001582  6ED9               	movwf	fsr2l,c
 17003  001584  0E00               	movlw	0
 17004  001586  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17005  001588  6EDA               	movwf	fsr2h,c
 17006  00158A  0102               	movlb	2	; () banked
 17007  00158C  A2DF               	btfss	indf2,1,c
 17008  00158E  D096               	goto	l1120
 17009                           
 17010                           ; BSR set to: 2
 17011  001590  5198               	movf	(_loRa+152)& (0+255),w,b
 17012  001592  0D02               	mullw	2
 17013  001594  0E00               	movlw	low _loRa
 17014  001596  0100               	movlb	0	; () banked
 17015  001598  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 17016  00159A  0E02               	movlw	high _loRa
 17017  00159C  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17018  00159E  0E99               	movlw	153
 17019  0015A0  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17020  0015A2  0E00               	movlw	0
 17021  0015A4  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17022  0015A6  50F3               	movf	prodl,w,c
 17023  0015A8  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17024  0015AA  50F4               	movf	prodh,w,c
 17025  0015AC  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17026  0015AE  0E01               	movlw	1
 17027  0015B0  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17028  0015B2  6ED9               	movwf	fsr2l,c
 17029  0015B4  0E00               	movlw	0
 17030  0015B6  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17031  0015B8  6EDA               	movwf	fsr2h,c
 17032  0015BA  0102               	movlb	2	; () banked
 17033  0015BC  A0DF               	btfss	indf2,0,c
 17034  0015BE  D07E               	goto	l1120
 17035                           
 17036                           ; BSR set to: 2
 17037                           ;lorawan_na.c: 503: {
 17038                           ;lorawan_na.c: 504: EnableChannels (channelMask, redundancy->chMaskCntl);
 17039  0015C0  C077  F06B         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17040  0015C4  C078  F06C         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17041  0015C8  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17042  0015CC  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17043  0015D0  0100               	movlb	0	; () banked
 17044  0015D2  38DF               	swapf	223,w,c
 17045  0015D4  0B07               	andlw	7
 17046  0015D6  6F6D               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17047  0015D8  ECB4  F02D         	call	_EnableChannels	;wreg free
 17048                           
 17049                           ;lorawan_na.c: 506: if(txPower < 5)
 17050  0015DC  0E05               	movlw	5
 17051  0015DE  0100               	movlb	0	; () banked
 17052  0015E0  617A               	cpfslt	ExecuteLinkAdr@txPower& (0+255),b
 17053  0015E2  D003               	goto	l1116
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;lorawan_na.c: 507: {
 17057                           ;lorawan_na.c: 508: txPowerNew = 5;
 17058  0015E4  0E05               	movlw	5
 17059  0015E6  6F75               	movwf	ExecuteLinkAdr@txPowerNew& (0+255),b
 17060                           
 17061                           ;lorawan_na.c: 509: }
 17062  0015E8  D002               	goto	l1117
 17063  0015EA                     l1116:
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;lorawan_na.c: 510: else
 17067                           ;lorawan_na.c: 511: {
 17068                           ;lorawan_na.c: 512: txPowerNew = txPower;
 17069  0015EA  C07A  F075         	movff	ExecuteLinkAdr@txPower,ExecuteLinkAdr@txPowerNew
 17070  0015EE                     l1117:
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;lorawan_na.c: 513: }
 17074                           ;lorawan_na.c: 514: UpdateTxPower (txPowerNew);
 17075                           
 17076                           ; BSR set to: 0
 17077  0015EE  5175               	movf	ExecuteLinkAdr@txPowerNew& (0+255),w,b
 17078  0015F0  ECEF  F03E         	call	_UpdateTxPower
 17079                           
 17080                           ;lorawan_na.c: 516: loRa.macStatus.txPowerModified = 1;
 17081  0015F4  0102               	movlb	2	; () banked
 17082  0015F6  8903               	bsf	(_loRa+3)& (0+255),4,b
 17083                           
 17084                           ;lorawan_na.c: 517: UpdateCurrentDataRate (dataRate);
 17085  0015F8  0100               	movlb	0	; () banked
 17086  0015FA  517B               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17087  0015FC  ECF4  F03E         	call	_UpdateCurrentDataRate
 17088                           
 17089                           ;lorawan_na.c: 519: if (redundancy->nbRep == 0)
 17090  001600  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17091  001604  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17092  001608  0100               	movlb	0	; () banked
 17093  00160A  50DF               	movf	223,w,c
 17094  00160C  0B0F               	andlw	15
 17095  00160E  0900               	iorlw	0
 17096  001610  A4D8               	btfss	status,2,c
 17097  001612  D002               	goto	l1118
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;lorawan_na.c: 520: {
 17101                           ;lorawan_na.c: 521: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17102  001614  0E00               	movlw	0
 17103  001616  D009               	goto	L10
 17104  001618                     l1118:
 17105                           
 17106                           ;lorawan_na.c: 523: else
 17107                           ;lorawan_na.c: 524: {
 17108                           ;lorawan_na.c: 525: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 17109                           
 17110                           ; BSR set to: 2
 17111  001618  C07F  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17112  00161C  C080  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17113  001620  0100               	movlb	0	; () banked
 17114  001622  50DF               	movf	223,w,c
 17115  001624  0B0F               	andlw	15
 17116  001626  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 17117  001628  0572               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17118  00162A                     L10:
 17119  00162A  0102               	movlb	2	; () banked
 17120  00162C  6FC7               	movwf	(_loRa+199)& (0+255),b
 17121                           
 17122                           ; BSR set to: 2
 17123                           ;lorawan_na.c: 526: }
 17124                           ;lorawan_na.c: 527: loRa.macStatus.nbRepModified = 1;
 17125                           
 17126                           ; BSR set to: 2
 17127  00162E  8B03               	bsf	(_loRa+3)& (0+255),5,b
 17128                           
 17129                           ; BSR set to: 2
 17130                           ;lorawan_na.c: 528: }
 17131                           ;lorawan_na.c: 529: }
 17132  001630  D045               	goto	l1120
 17133  001632                     l1088:
 17134                           
 17135                           ; BSR set to: 2
 17136                           ;lorawan_na.c: 530: else
 17137                           ;lorawan_na.c: 531: {
 17138                           ;lorawan_na.c: 532: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 17139                           
 17140                           ; BSR set to: 2
 17141  001632  5198               	movf	(_loRa+152)& (0+255),w,b
 17142  001634  0D02               	mullw	2
 17143  001636  0E00               	movlw	low _loRa
 17144  001638  0100               	movlb	0	; () banked
 17145  00163A  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 17146  00163C  0E02               	movlw	high _loRa
 17147  00163E  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17148  001640  0E99               	movlw	153
 17149  001642  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17150  001644  0E00               	movlw	0
 17151  001646  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17152  001648  50F3               	movf	prodl,w,c
 17153  00164A  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17154  00164C  50F4               	movf	prodh,w,c
 17155  00164E  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17156  001650  0E01               	movlw	1
 17157  001652  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17158  001654  6ED9               	movwf	fsr2l,c
 17159  001656  0E00               	movlw	0
 17160  001658  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17161  00165A  6EDA               	movwf	fsr2h,c
 17162  00165C  0102               	movlb	2	; () banked
 17163  00165E  90DF               	bcf	indf2,0,c
 17164                           
 17165                           ;lorawan_na.c: 533: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17166  001660  5198               	movf	(_loRa+152)& (0+255),w,b
 17167  001662  0D02               	mullw	2
 17168  001664  0E00               	movlw	low _loRa
 17169  001666  0100               	movlb	0	; () banked
 17170  001668  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 17171  00166A  0E02               	movlw	high _loRa
 17172  00166C  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17173  00166E  0E99               	movlw	153
 17174  001670  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17175  001672  0E00               	movlw	0
 17176  001674  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17177  001676  50F3               	movf	prodl,w,c
 17178  001678  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17179  00167A  50F4               	movf	prodh,w,c
 17180  00167C  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17181  00167E  0E01               	movlw	1
 17182  001680  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17183  001682  6ED9               	movwf	fsr2l,c
 17184  001684  0E00               	movlw	0
 17185  001686  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17186  001688  6EDA               	movwf	fsr2h,c
 17187  00168A  0102               	movlb	2	; () banked
 17188  00168C  92DF               	bcf	indf2,1,c
 17189                           
 17190                           ;lorawan_na.c: 534: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17191  00168E  5198               	movf	(_loRa+152)& (0+255),w,b
 17192  001690  0D02               	mullw	2
 17193  001692  0E00               	movlw	low _loRa
 17194  001694  0100               	movlb	0	; () banked
 17195  001696  6F72               	movwf	??_ExecuteLinkAdr& (0+255),b
 17196  001698  0E02               	movlw	high _loRa
 17197  00169A  6F73               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17198  00169C  0E99               	movlw	153
 17199  00169E  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17200  0016A0  0E00               	movlw	0
 17201  0016A2  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17202  0016A4  50F3               	movf	prodl,w,c
 17203  0016A6  2772               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17204  0016A8  50F4               	movf	prodh,w,c
 17205  0016AA  2373               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17206  0016AC  0E01               	movlw	1
 17207  0016AE  2572               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17208  0016B0  6ED9               	movwf	fsr2l,c
 17209  0016B2  0E00               	movlw	0
 17210  0016B4  2173               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17211  0016B6  6EDA               	movwf	fsr2h,c
 17212  0016B8  0102               	movlb	2	; () banked
 17213  0016BA  94DF               	bcf	indf2,2,c
 17214  0016BC                     l1120:
 17215                           
 17216                           ; BSR set to: 2
 17217                           ;lorawan_na.c: 535: }
 17218                           ;lorawan_na.c: 537: return ptr;
 17219                           
 17220                           ; BSR set to: 2
 17221  0016BC  C070  F070         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17222  0016C0  C071  F071         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17223  0016C4  0012               	return	
 17224  0016C6                     __end_of_ExecuteLinkAdr:
 17225                           	opt stack 0
 17226                           tosu	equ	0xFFF
 17227                           tosh	equ	0xFFE
 17228                           tosl	equ	0xFFD
 17229                           pclath	equ	0xFFA
 17230                           tblptru	equ	0xFF8
 17231                           tblptrh	equ	0xFF7
 17232                           tblptrl	equ	0xFF6
 17233                           tablat	equ	0xFF5
 17234                           prodh	equ	0xFF4
 17235                           prodl	equ	0xFF3
 17236                           intcon	equ	0xFF2
 17237                           intcon2	equ	0xFF1
 17238                           intcon3	equ	0xFF0
 17239                           indf0	equ	0xFEF
 17240                           postinc0	equ	0xFEE
 17241                           fsr0h	equ	0xFEA
 17242                           fsr0l	equ	0xFE9
 17243                           wreg	equ	0xFE8
 17244                           postinc1	equ	0xFE6
 17245                           postdec1	equ	0xFE5
 17246                           plusw1	equ	0xFE3
 17247                           fsr1h	equ	0xFE2
 17248                           fsr1l	equ	0xFE1
 17249                           indf2	equ	0xFDF
 17250                           postinc2	equ	0xFDE
 17251                           postdec2	equ	0xFDD
 17252                           fsr2h	equ	0xFDA
 17253                           fsr2l	equ	0xFD9
 17254                           status	equ	0xFD8
 17255                           
 17256 ;; *************** function _ValidateDataRate *****************
 17257 ;; Defined at:
 17258 ;;		line 380 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 17259 ;; Parameters:    Size  Location     Type
 17260 ;;  dataRate        1    wreg     unsigned char 
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17263 ;;  result          1    1[BANK0 ] enum E7249
 17264 ;; Return value:  Size  Location     Type
 17265 ;;                  1    wreg      enum E7249
 17266 ;; Registers used:
 17267 ;;		wreg, status,2, status,0
 17268 ;; Tracked objects:
 17269 ;;		On entry : 0/0
 17270 ;;		On exit  : 0/0
 17271 ;;		Unchanged: 0/0
 17272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17277 ;;Total ram usage:        2 bytes
 17278 ;; Hardware stack levels used:    1
 17279 ;; Hardware stack levels required when called:    7
 17280 ;; This function calls:
 17281 ;;		Nothing
 17282 ;; This function is called by:
 17283 ;;		_ExecuteLinkAdr
 17284 ;;		_ValidateDataRange
 17285 ;;		_LORAWAN_SetCurrentDataRate
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           	psect	text87
 17290  007C8E                     __ptext87:
 17291                           	opt stack 0
 17292  007C8E                     _ValidateDataRate:
 17293                           	opt stack 16
 17294                           
 17295                           ; BSR set to: 2
 17296                           ;incstack = 0
 17297                           ;ValidateDataRate@dataRate stored from wreg
 17298  007C8E  0100               	movlb	0	; () banked
 17299  007C90  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 17300                           
 17301                           ;lorawan_na.c: 382: LorawanError_t result = OK;
 17302  007C92  0E00               	movlw	0
 17303  007C94  0100               	movlb	0	; () banked
 17304  007C96  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17305                           
 17306                           ; BSR set to: 0
 17307                           ;lorawan_na.c: 384: if (dataRate > 4)
 17308  007C98  0E04               	movlw	4
 17309  007C9A  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17310  007C9C  D002               	goto	l1074
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;lorawan_na.c: 385: {
 17314                           ;lorawan_na.c: 386: result = INVALID_PARAMETER;
 17315  007C9E  0E03               	movlw	3
 17316  007CA0  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17317  007CA2                     l1074:
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;lorawan_na.c: 387: }
 17321                           ;lorawan_na.c: 389: return result;
 17322  007CA2  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17323  007CA4  0012               	return	
 17324  007CA6                     __end_of_ValidateDataRate:
 17325                           	opt stack 0
 17326                           tosu	equ	0xFFF
 17327                           tosh	equ	0xFFE
 17328                           tosl	equ	0xFFD
 17329                           pclath	equ	0xFFA
 17330                           tblptru	equ	0xFF8
 17331                           tblptrh	equ	0xFF7
 17332                           tblptrl	equ	0xFF6
 17333                           tablat	equ	0xFF5
 17334                           prodh	equ	0xFF4
 17335                           prodl	equ	0xFF3
 17336                           intcon	equ	0xFF2
 17337                           intcon2	equ	0xFF1
 17338                           intcon3	equ	0xFF0
 17339                           indf0	equ	0xFEF
 17340                           postinc0	equ	0xFEE
 17341                           fsr0h	equ	0xFEA
 17342                           fsr0l	equ	0xFE9
 17343                           wreg	equ	0xFE8
 17344                           postinc1	equ	0xFE6
 17345                           postdec1	equ	0xFE5
 17346                           plusw1	equ	0xFE3
 17347                           fsr1h	equ	0xFE2
 17348                           fsr1l	equ	0xFE1
 17349                           indf2	equ	0xFDF
 17350                           postinc2	equ	0xFDE
 17351                           postdec2	equ	0xFDD
 17352                           fsr2h	equ	0xFDA
 17353                           fsr2l	equ	0xFD9
 17354                           status	equ	0xFD8
 17355                           
 17356 ;; *************** function _ValidateChannelMaskCntl *****************
 17357 ;; Defined at:
 17358 ;;		line 910 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;  channelMaskC    1    wreg     unsigned char 
 17361 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;  channelMaskC    1    3[BANK0 ] unsigned char 
 17364 ;;  result          1    2[BANK0 ] enum E7249
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      enum E7249
 17367 ;; Registers used:
 17368 ;;		wreg, status,2, status,0
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17375 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17378 ;;Total ram usage:        4 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    7
 17381 ;; This function calls:
 17382 ;;		Nothing
 17383 ;; This function is called by:
 17384 ;;		_ExecuteLinkAdr
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           	psect	text88
 17389  007A9A                     __ptext88:
 17390                           	opt stack 0
 17391  007A9A                     _ValidateChannelMaskCntl:
 17392                           	opt stack 17
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;incstack = 0
 17396                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17397  007A9A  0100               	movlb	0	; () banked
 17398  007A9C  6F63               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17399                           
 17400                           ;lorawan_na.c: 912: LorawanError_t result = OK;
 17401  007A9E  0E00               	movlw	0
 17402  007AA0  0100               	movlb	0	; () banked
 17403  007AA2  6F62               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17404                           
 17405                           ; BSR set to: 0
 17406                           ;lorawan_na.c: 915: if ((channelMaskCntl == 5) || (channelMaskCntl > 7))
 17407  007AA4  0E05               	movlw	5
 17408  007AA6  1963               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17409  007AA8  B4D8               	btfsc	status,2,c
 17410  007AAA  D003               	goto	u8300
 17411                           
 17412                           ; BSR set to: 0
 17413  007AAC  0E07               	movlw	7
 17414  007AAE  6563               	cpfsgt	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17415  007AB0  D002               	goto	l1234
 17416  007AB2                     u8300:
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;lorawan_na.c: 916: {
 17420                           ;lorawan_na.c: 917: result = INVALID_PARAMETER;
 17421                           
 17422                           ; BSR set to: 0
 17423  007AB2  0E03               	movlw	3
 17424  007AB4  6F62               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17425  007AB6                     l1234:
 17426                           
 17427                           ; BSR set to: 0
 17428                           ;lorawan_na.c: 918: }
 17429                           ;lorawan_na.c: 920: return result;
 17430  007AB6  5162               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17431  007AB8  0012               	return	
 17432  007ABA                     __end_of_ValidateChannelMaskCntl:
 17433                           	opt stack 0
 17434                           tosu	equ	0xFFF
 17435                           tosh	equ	0xFFE
 17436                           tosl	equ	0xFFD
 17437                           pclath	equ	0xFFA
 17438                           tblptru	equ	0xFF8
 17439                           tblptrh	equ	0xFF7
 17440                           tblptrl	equ	0xFF6
 17441                           tablat	equ	0xFF5
 17442                           prodh	equ	0xFF4
 17443                           prodl	equ	0xFF3
 17444                           intcon	equ	0xFF2
 17445                           intcon2	equ	0xFF1
 17446                           intcon3	equ	0xFF0
 17447                           indf0	equ	0xFEF
 17448                           postinc0	equ	0xFEE
 17449                           fsr0h	equ	0xFEA
 17450                           fsr0l	equ	0xFE9
 17451                           wreg	equ	0xFE8
 17452                           postinc1	equ	0xFE6
 17453                           postdec1	equ	0xFE5
 17454                           plusw1	equ	0xFE3
 17455                           fsr1h	equ	0xFE2
 17456                           fsr1l	equ	0xFE1
 17457                           indf2	equ	0xFDF
 17458                           postinc2	equ	0xFDE
 17459                           postdec2	equ	0xFDD
 17460                           fsr2h	equ	0xFDA
 17461                           fsr2l	equ	0xFD9
 17462                           status	equ	0xFD8
 17463                           
 17464 ;; *************** function _UpdateTxPower *****************
 17465 ;; Defined at:
 17466 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  txPowerNew      1    wreg     unsigned char 
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  1    wreg      void 
 17473 ;; Registers used:
 17474 ;;		wreg
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17484 ;;Total ram usage:        1 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:    7
 17487 ;; This function calls:
 17488 ;;		Nothing
 17489 ;; This function is called by:
 17490 ;;		_ExecuteLinkAdr
 17491 ;;		_LORAWAN_SetTxPower
 17492 ;; This function uses a non-reentrant model
 17493 ;;
 17494                           
 17495                           	psect	text89
 17496  007DDE                     __ptext89:
 17497                           	opt stack 0
 17498  007DDE                     _UpdateTxPower:
 17499                           	opt stack 17
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;incstack = 0
 17503                           ;UpdateTxPower@txPowerNew stored from wreg
 17504  007DDE  0100               	movlb	0	; () banked
 17505  007DE0  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17506                           
 17507                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17508  007DE2  C060  F2D2         	movff	UpdateTxPower@txPowerNew,_loRa+210
 17509  007DE6  0012               	return		;funcret
 17510  007DE8                     __end_of_UpdateTxPower:
 17511                           	opt stack 0
 17512                           tosu	equ	0xFFF
 17513                           tosh	equ	0xFFE
 17514                           tosl	equ	0xFFD
 17515                           pclath	equ	0xFFA
 17516                           tblptru	equ	0xFF8
 17517                           tblptrh	equ	0xFF7
 17518                           tblptrl	equ	0xFF6
 17519                           tablat	equ	0xFF5
 17520                           prodh	equ	0xFF4
 17521                           prodl	equ	0xFF3
 17522                           intcon	equ	0xFF2
 17523                           intcon2	equ	0xFF1
 17524                           intcon3	equ	0xFF0
 17525                           indf0	equ	0xFEF
 17526                           postinc0	equ	0xFEE
 17527                           fsr0h	equ	0xFEA
 17528                           fsr0l	equ	0xFE9
 17529                           wreg	equ	0xFE8
 17530                           postinc1	equ	0xFE6
 17531                           postdec1	equ	0xFE5
 17532                           plusw1	equ	0xFE3
 17533                           fsr1h	equ	0xFE2
 17534                           fsr1l	equ	0xFE1
 17535                           indf2	equ	0xFDF
 17536                           postinc2	equ	0xFDE
 17537                           postdec2	equ	0xFDD
 17538                           fsr2h	equ	0xFDA
 17539                           fsr2l	equ	0xFD9
 17540                           status	equ	0xFD8
 17541                           
 17542 ;; *************** function _UpdateCurrentDataRate *****************
 17543 ;; Defined at:
 17544 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;  valueNew        1    wreg     unsigned char 
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17549 ;; Return value:  Size  Location     Type
 17550 ;;                  1    wreg      void 
 17551 ;; Registers used:
 17552 ;;		wreg
 17553 ;; Tracked objects:
 17554 ;;		On entry : 0/0
 17555 ;;		On exit  : 0/0
 17556 ;;		Unchanged: 0/0
 17557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17562 ;;Total ram usage:        1 bytes
 17563 ;; Hardware stack levels used:    1
 17564 ;; Hardware stack levels required when called:    7
 17565 ;; This function calls:
 17566 ;;		Nothing
 17567 ;; This function is called by:
 17568 ;;		_ExecuteLinkAdr
 17569 ;;		_LORAWAN_SetCurrentDataRate
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           	psect	text90
 17574  007DE8                     __ptext90:
 17575                           	opt stack 0
 17576  007DE8                     _UpdateCurrentDataRate:
 17577                           	opt stack 17
 17578                           
 17579                           ;incstack = 0
 17580                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17581  007DE8  0100               	movlb	0	; () banked
 17582  007DEA  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17583                           
 17584                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17585  007DEC  C060  F2D0         	movff	UpdateCurrentDataRate@valueNew,_loRa+208
 17586  007DF0  0012               	return		;funcret
 17587  007DF2                     __end_of_UpdateCurrentDataRate:
 17588                           	opt stack 0
 17589                           tosu	equ	0xFFF
 17590                           tosh	equ	0xFFE
 17591                           tosl	equ	0xFFD
 17592                           pclath	equ	0xFFA
 17593                           tblptru	equ	0xFF8
 17594                           tblptrh	equ	0xFF7
 17595                           tblptrl	equ	0xFF6
 17596                           tablat	equ	0xFF5
 17597                           prodh	equ	0xFF4
 17598                           prodl	equ	0xFF3
 17599                           intcon	equ	0xFF2
 17600                           intcon2	equ	0xFF1
 17601                           intcon3	equ	0xFF0
 17602                           indf0	equ	0xFEF
 17603                           postinc0	equ	0xFEE
 17604                           fsr0h	equ	0xFEA
 17605                           fsr0l	equ	0xFE9
 17606                           wreg	equ	0xFE8
 17607                           postinc1	equ	0xFE6
 17608                           postdec1	equ	0xFE5
 17609                           plusw1	equ	0xFE3
 17610                           fsr1h	equ	0xFE2
 17611                           fsr1l	equ	0xFE1
 17612                           indf2	equ	0xFDF
 17613                           postinc2	equ	0xFDE
 17614                           postdec2	equ	0xFDD
 17615                           fsr2h	equ	0xFDA
 17616                           fsr2l	equ	0xFD9
 17617                           status	equ	0xFD8
 17618                           
 17619 ;; *************** function _EnableChannels *****************
 17620 ;; Defined at:
 17621 ;;		line 923 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;  channelMask     2   11[BANK0 ] unsigned int 
 17624 ;;  channelMaskC    1   13[BANK0 ] unsigned char 
 17625 ;; Auto vars:     Size  Location     Type
 17626 ;;  i               1   15[BANK0 ] unsigned char 
 17627 ;;  channel         1   14[BANK0 ] unsigned char 
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17637 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;Total ram usage:        5 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:   10
 17644 ;; This function calls:
 17645 ;;		_EnableChannels2
 17646 ;;		_UpdateChannelIdStatus
 17647 ;; This function is called by:
 17648 ;;		_ExecuteLinkAdr
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652                           	psect	text91
 17653  005B68                     __ptext91:
 17654                           	opt stack 0
 17655  005B68                     _EnableChannels:
 17656                           	opt stack 14
 17657                           
 17658                           ;lorawan_na.c: 925: uint8_t i, channel;
 17659                           ;lorawan_na.c: 927: channel = channelMaskCntl << (4);
 17660                           
 17661                           ;incstack = 0
 17662  005B68  0100               	movlb	0	; () banked
 17663  005B6A  396D               	swapf	EnableChannels@channelMaskCntl& (0+255),w,b
 17664  005B6C  0BF0               	andlw	240
 17665  005B6E  6F6E               	movwf	EnableChannels@channel& (0+255),b
 17666                           
 17667                           ;lorawan_na.c: 929: switch (channelMaskCntl)
 17668  005B70  D03D               	goto	l1240
 17669  005B72                     
 17670                           ; BSR set to: 0
 17671                           ;lorawan_na.c: 932: case 1:
 17672                           ;lorawan_na.c: 933: case 2:
 17673                           ;lorawan_na.c: 934: case 3:
 17674                           ;lorawan_na.c: 935: case 4:
 17675                           ;lorawan_na.c: 936: {
 17676                           ;lorawan_na.c: 937: EnableChannels2 (channel, channel + 15, channelMask);
 17677                           
 17678                           ; BSR set to: 0
 17679                           
 17680                           ; BSR set to: 0
 17681                           
 17682                           ; BSR set to: 0
 17683                           
 17684                           ; BSR set to: 0
 17685                           
 17686                           ; BSR set to: 0
 17687  005B72  516E               	movf	EnableChannels@channel& (0+255),w,b
 17688  005B74  0F0F               	addlw	15
 17689  005B76  6F64               	movwf	EnableChannels2@endIndex& (0+255),b
 17690  005B78  C06B  F065         	movff	EnableChannels@channelMask,EnableChannels2@channelMask
 17691  005B7C  C06C  F066         	movff	EnableChannels@channelMask+1,EnableChannels2@channelMask+1
 17692  005B80  516E               	movf	EnableChannels@channel& (0+255),w,b
 17693  005B82  EC37  F039         	call	_EnableChannels2
 17694                           
 17695                           ;lorawan_na.c: 941: {
 17696                           ;lorawan_na.c: 942: } break;
 17697                           
 17698                           ;lorawan_na.c: 940: case 5:
 17699                           
 17700                           ;lorawan_na.c: 938: } break;
 17701  005B86  0012               	return	
 17702  005B88                     
 17703                           ;lorawan_na.c: 945: {
 17704                           ;lorawan_na.c: 946: for (i = 0; i <= 63; i++)
 17705  005B88  0E00               	movlw	0
 17706  005B8A  0100               	movlb	0	; () banked
 17707  005B8C  6F6F               	movwf	EnableChannels@i& (0+255),b
 17708  005B8E                     l8944:
 17709                           
 17710                           ; BSR set to: 0
 17711  005B8E  0E3F               	movlw	63
 17712  005B90  656F               	cpfsgt	EnableChannels@i& (0+255),b
 17713  005B92  D001               	goto	l1249
 17714  005B94  D008               	goto	u8320
 17715  005B96                     l1249:
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;lorawan_na.c: 947: {
 17719                           ;lorawan_na.c: 948: UpdateChannelIdStatus (i, 1);
 17720                           
 17721                           ; BSR set to: 0
 17722  005B96  0E01               	movlw	1
 17723  005B98  6F62               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17724  005B9A  516F               	movf	EnableChannels@i& (0+255),w,b
 17725  005B9C  ECD5  F03C         	call	_UpdateChannelIdStatus
 17726  005BA0  0100               	movlb	0	; () banked
 17727  005BA2  2B6F               	incf	EnableChannels@i& (0+255),f,b
 17728  005BA4  D7F4               	goto	l8944
 17729  005BA6                     u8320:
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;lorawan_na.c: 949: }
 17733                           ;lorawan_na.c: 950: EnableChannels2 (64, 71, channelMask);
 17734                           
 17735                           ; BSR set to: 0
 17736  005BA6  0E47               	movlw	71
 17737  005BA8  6F64               	movwf	EnableChannels2@endIndex& (0+255),b
 17738  005BAA  C06B  F065         	movff	EnableChannels@channelMask,EnableChannels2@channelMask
 17739  005BAE  C06C  F066         	movff	EnableChannels@channelMask+1,EnableChannels2@channelMask+1
 17740  005BB2  0E40               	movlw	64
 17741  005BB4  EC37  F039         	call	_EnableChannels2
 17742                           
 17743                           ;lorawan_na.c: 951: } break;
 17744  005BB8  0012               	return	
 17745  005BBA                     
 17746                           ;lorawan_na.c: 954: {
 17747                           ;lorawan_na.c: 955: for (i = 0; i <= 63; i++)
 17748  005BBA  0E00               	movlw	0
 17749  005BBC  0100               	movlb	0	; () banked
 17750  005BBE  6F6F               	movwf	EnableChannels@i& (0+255),b
 17751  005BC0                     l8958:
 17752                           
 17753                           ; BSR set to: 0
 17754  005BC0  0E3F               	movlw	63
 17755  005BC2  656F               	cpfsgt	EnableChannels@i& (0+255),b
 17756  005BC4  D001               	goto	l1252
 17757  005BC6  D008               	goto	u8340
 17758  005BC8                     l1252:
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;lorawan_na.c: 956: {
 17762                           ;lorawan_na.c: 957: UpdateChannelIdStatus (i, 0);
 17763                           
 17764                           ; BSR set to: 0
 17765  005BC8  0E00               	movlw	0
 17766  005BCA  6F62               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17767  005BCC  516F               	movf	EnableChannels@i& (0+255),w,b
 17768  005BCE  ECD5  F03C         	call	_UpdateChannelIdStatus
 17769  005BD2  0100               	movlb	0	; () banked
 17770  005BD4  2B6F               	incf	EnableChannels@i& (0+255),f,b
 17771  005BD6  D7F4               	goto	l8958
 17772  005BD8                     u8340:
 17773                           
 17774                           ; BSR set to: 0
 17775                           ;lorawan_na.c: 958: }
 17776                           ;lorawan_na.c: 959: EnableChannels2 (64, 71, channelMask);
 17777                           
 17778                           ; BSR set to: 0
 17779  005BD8  0E47               	movlw	71
 17780  005BDA  6F64               	movwf	EnableChannels2@endIndex& (0+255),b
 17781  005BDC  C06B  F065         	movff	EnableChannels@channelMask,EnableChannels2@channelMask
 17782  005BE0  C06C  F066         	movff	EnableChannels@channelMask+1,EnableChannels2@channelMask+1
 17783  005BE4  0E40               	movlw	64
 17784  005BE6  EC37  F039         	call	_EnableChannels2
 17785                           
 17786                           ;lorawan_na.c: 961: }
 17787                           
 17788                           ;lorawan_na.c: 960: } break;
 17789  005BEA  0012               	return	
 17790  005BEC                     l1240:
 17791  005BEC  0100               	movlb	0	; () banked
 17792  005BEE  516D               	movf	EnableChannels@channelMaskCntl& (0+255),w,b
 17793                           
 17794                           ; Switch size 1, requested type "space"
 17795                           ; Number of cases is 8, Range of values is 0 to 7
 17796                           ; switch strategies available:
 17797                           ; Name         Instructions Cycles
 17798                           ; simple_byte           25    13 (average)
 17799                           ;	Chosen strategy is simple_byte
 17800  005BF0  0A00               	xorlw	0	; case 0
 17801  005BF2  B4D8               	btfsc	status,2,c
 17802  005BF4  D7BE               	goto	l1241
 17803  005BF6  0A01               	xorlw	1	; case 1
 17804  005BF8  B4D8               	btfsc	status,2,c
 17805  005BFA  D7BB               	goto	l1241
 17806  005BFC  0A03               	xorlw	3	; case 2
 17807  005BFE  B4D8               	btfsc	status,2,c
 17808  005C00  D7B8               	goto	l1241
 17809  005C02  0A01               	xorlw	1	; case 3
 17810  005C04  B4D8               	btfsc	status,2,c
 17811  005C06  D7B5               	goto	l1241
 17812  005C08  0A07               	xorlw	7	; case 4
 17813  005C0A  B4D8               	btfsc	status,2,c
 17814  005C0C  D7B2               	goto	l1241
 17815  005C0E  0A01               	xorlw	1	; case 5
 17816  005C10  B4D8               	btfsc	status,2,c
 17817  005C12  0012               	return	
 17818  005C14  0A03               	xorlw	3	; case 6
 17819  005C16  B4D8               	btfsc	status,2,c
 17820  005C18  D7B7               	goto	l1248
 17821  005C1A  0A01               	xorlw	1	; case 7
 17822  005C1C  A4D8               	btfss	status,2,c
 17823  005C1E  0012               	return	
 17824  005C20  D7CC               	goto	l1251
 17825  005C22                     __end_of_EnableChannels:
 17826                           	opt stack 0
 17827                           tosu	equ	0xFFF
 17828                           tosh	equ	0xFFE
 17829                           tosl	equ	0xFFD
 17830                           pclath	equ	0xFFA
 17831                           tblptru	equ	0xFF8
 17832                           tblptrh	equ	0xFF7
 17833                           tblptrl	equ	0xFF6
 17834                           tablat	equ	0xFF5
 17835                           prodh	equ	0xFF4
 17836                           prodl	equ	0xFF3
 17837                           intcon	equ	0xFF2
 17838                           intcon2	equ	0xFF1
 17839                           intcon3	equ	0xFF0
 17840                           indf0	equ	0xFEF
 17841                           postinc0	equ	0xFEE
 17842                           fsr0h	equ	0xFEA
 17843                           fsr0l	equ	0xFE9
 17844                           wreg	equ	0xFE8
 17845                           postinc1	equ	0xFE6
 17846                           postdec1	equ	0xFE5
 17847                           plusw1	equ	0xFE3
 17848                           fsr1h	equ	0xFE2
 17849                           fsr1l	equ	0xFE1
 17850                           indf2	equ	0xFDF
 17851                           postinc2	equ	0xFDE
 17852                           postdec2	equ	0xFDD
 17853                           fsr2h	equ	0xFDA
 17854                           fsr2l	equ	0xFD9
 17855                           status	equ	0xFD8
 17856                           
 17857 ;; *************** function _EnableChannels2 *****************
 17858 ;; Defined at:
 17859 ;;		line 1003 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;  startIndex      1    wreg     unsigned char 
 17862 ;;  endIndex        1    4[BANK0 ] unsigned char 
 17863 ;;  channelMask     2    5[BANK0 ] unsigned int 
 17864 ;; Auto vars:     Size  Location     Type
 17865 ;;  startIndex      1    9[BANK0 ] unsigned char 
 17866 ;;  i               1   10[BANK0 ] unsigned char 
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  1    wreg      void 
 17869 ;; Registers used:
 17870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17879 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;Total ram usage:        7 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:    9
 17883 ;; This function calls:
 17884 ;;		_UpdateChannelIdStatus
 17885 ;; This function is called by:
 17886 ;;		_EnableChannels
 17887 ;; This function uses a non-reentrant model
 17888 ;;
 17889                           
 17890                           	psect	text92
 17891  00726E                     __ptext92:
 17892                           	opt stack 0
 17893  00726E                     _EnableChannels2:
 17894                           	opt stack 14
 17895                           
 17896                           ;incstack = 0
 17897                           ;EnableChannels2@startIndex stored from wreg
 17898  00726E  0100               	movlb	0	; () banked
 17899  007270  6F69               	movwf	EnableChannels2@startIndex& (0+255),b
 17900                           
 17901                           ;lorawan_na.c: 1005: uint8_t i;
 17902                           ;lorawan_na.c: 1007: for (i = startIndex; i <= endIndex; i++)
 17903  007272  C069  F06A         	movff	EnableChannels2@startIndex,EnableChannels2@i
 17904  007276  D017               	goto	l1271
 17905  007278                     l1272:
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;lorawan_na.c: 1008: {
 17909                           ;lorawan_na.c: 1009: if ((channelMask & 0x0001) == 0x0001)
 17910  007278  A165               	btfss	EnableChannels2@channelMask& (0+255),0,b
 17911  00727A  D006               	goto	l1273
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;lorawan_na.c: 1010: {
 17915                           ;lorawan_na.c: 1011: UpdateChannelIdStatus (i, 1);
 17916  00727C  0E01               	movlw	1
 17917  00727E  6F62               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17918  007280  516A               	movf	EnableChannels2@i& (0+255),w,b
 17919  007282  ECD5  F03C         	call	_UpdateChannelIdStatus
 17920                           
 17921                           ;lorawan_na.c: 1012: }
 17922  007286  D006               	goto	l1274
 17923  007288                     l1273:
 17924                           
 17925                           ;lorawan_na.c: 1013: else
 17926                           ;lorawan_na.c: 1014: {
 17927                           ;lorawan_na.c: 1015: UpdateChannelIdStatus (i, 0);
 17928  007288  0E00               	movlw	0
 17929  00728A  0100               	movlb	0	; () banked
 17930  00728C  6F62               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17931  00728E  516A               	movf	EnableChannels2@i& (0+255),w,b
 17932  007290  ECD5  F03C         	call	_UpdateChannelIdStatus
 17933  007294                     l1274:
 17934                           
 17935                           ;lorawan_na.c: 1016: }
 17936                           ;lorawan_na.c: 1017: channelMask = channelMask >> (1);
 17937  007294  90D8               	bcf	status,0,c
 17938  007296  0100               	movlb	0	; () banked
 17939  007298  3166               	rrcf	(EnableChannels2@channelMask+1)& (0+255),w,b
 17940  00729A  6F67               	movwf	??_EnableChannels2& (0+255),b
 17941  00729C  3165               	rrcf	EnableChannels2@channelMask& (0+255),w,b
 17942  00729E  6F65               	movwf	EnableChannels2@channelMask& (0+255),b
 17943  0072A0  C067  F066         	movff	??_EnableChannels2,EnableChannels2@channelMask+1
 17944                           
 17945                           ; BSR set to: 0
 17946  0072A4  2B6A               	incf	EnableChannels2@i& (0+255),f,b
 17947  0072A6                     l1271:
 17948                           
 17949                           ; BSR set to: 0
 17950  0072A6  0100               	movlb	0	; () banked
 17951  0072A8  516A               	movf	EnableChannels2@i& (0+255),w,b
 17952  0072AA  5D64               	subwf	EnableChannels2@endIndex& (0+255),w,b
 17953  0072AC  A0D8               	btfss	status,0,c
 17954  0072AE  0012               	return	
 17955  0072B0  D7E3               	goto	l1272
 17956  0072B2                     __end_of_EnableChannels2:
 17957                           	opt stack 0
 17958                           tosu	equ	0xFFF
 17959                           tosh	equ	0xFFE
 17960                           tosl	equ	0xFFD
 17961                           pclath	equ	0xFFA
 17962                           tblptru	equ	0xFF8
 17963                           tblptrh	equ	0xFF7
 17964                           tblptrl	equ	0xFF6
 17965                           tablat	equ	0xFF5
 17966                           prodh	equ	0xFF4
 17967                           prodl	equ	0xFF3
 17968                           intcon	equ	0xFF2
 17969                           intcon2	equ	0xFF1
 17970                           intcon3	equ	0xFF0
 17971                           indf0	equ	0xFEF
 17972                           postinc0	equ	0xFEE
 17973                           fsr0h	equ	0xFEA
 17974                           fsr0l	equ	0xFE9
 17975                           wreg	equ	0xFE8
 17976                           postinc1	equ	0xFE6
 17977                           postdec1	equ	0xFE5
 17978                           plusw1	equ	0xFE3
 17979                           fsr1h	equ	0xFE2
 17980                           fsr1l	equ	0xFE1
 17981                           indf2	equ	0xFDF
 17982                           postinc2	equ	0xFDE
 17983                           postdec2	equ	0xFDD
 17984                           fsr2h	equ	0xFDA
 17985                           fsr2l	equ	0xFD9
 17986                           status	equ	0xFD8
 17987                           
 17988 ;; *************** function _UpdateChannelIdStatus *****************
 17989 ;; Defined at:
 17990 ;;		line 843 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 17991 ;; Parameters:    Size  Location     Type
 17992 ;;  channelId       1    wreg     unsigned char 
 17993 ;;  statusNew       1    2[BANK0 ] unsigned char 
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;  channelId       1    3[BANK0 ] unsigned char 
 17996 ;; Return value:  Size  Location     Type
 17997 ;;                  1    wreg      void 
 17998 ;; Registers used:
 17999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18000 ;; Tracked objects:
 18001 ;;		On entry : 0/0
 18002 ;;		On exit  : 0/0
 18003 ;;		Unchanged: 0/0
 18004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18005 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18009 ;;Total ram usage:        2 bytes
 18010 ;; Hardware stack levels used:    1
 18011 ;; Hardware stack levels required when called:    8
 18012 ;; This function calls:
 18013 ;;		_UpdateCurrentDataRateAfterDataRangeChanges
 18014 ;;		_UpdateMinMaxChDataRate
 18015 ;; This function is called by:
 18016 ;;		_LORAWAN_SetChannelIdStatus
 18017 ;;		_EnableChannels
 18018 ;;		_EnableChannels2
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text93
 18023  0079AA                     __ptext93:
 18024                           	opt stack 0
 18025  0079AA                     _UpdateChannelIdStatus:
 18026                           	opt stack 15
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;incstack = 0
 18030                           ;UpdateChannelIdStatus@channelId stored from wreg
 18031  0079AA  0100               	movlb	0	; () banked
 18032  0079AC  6F63               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18033                           
 18034                           ;lorawan_na.c: 845: Channels[channelId].status = statusNew;
 18035  0079AE  0100               	movlb	0	; () banked
 18036  0079B0  5163               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18037  0079B2  0D02               	mullw	2
 18038  0079B4  0E00               	movlw	low _Channels
 18039  0079B6  24F3               	addwf	prodl,w,c
 18040  0079B8  6ED9               	movwf	fsr2l,c
 18041  0079BA  0E04               	movlw	high _Channels
 18042  0079BC  20F4               	addwfc	prodh,w,c
 18043  0079BE  6EDA               	movwf	fsr2h,c
 18044  0079C0  C062  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;lorawan_na.c: 848: UpdateMinMaxChDataRate ();
 18048  0079C4  EC47  F02A         	call	_UpdateMinMaxChDataRate	;wreg free
 18049                           
 18050                           ;lorawan_na.c: 850: UpdateCurrentDataRateAfterDataRangeChanges ();
 18051  0079C8  EC08  F03E         	call	_UpdateCurrentDataRateAfterDataRangeChanges	;wreg free
 18052  0079CC  0012               	return		;funcret
 18053  0079CE                     __end_of_UpdateChannelIdStatus:
 18054                           	opt stack 0
 18055                           tosu	equ	0xFFF
 18056                           tosh	equ	0xFFE
 18057                           tosl	equ	0xFFD
 18058                           pclath	equ	0xFFA
 18059                           tblptru	equ	0xFF8
 18060                           tblptrh	equ	0xFF7
 18061                           tblptrl	equ	0xFF6
 18062                           tablat	equ	0xFF5
 18063                           prodh	equ	0xFF4
 18064                           prodl	equ	0xFF3
 18065                           intcon	equ	0xFF2
 18066                           intcon2	equ	0xFF1
 18067                           intcon3	equ	0xFF0
 18068                           indf0	equ	0xFEF
 18069                           postinc0	equ	0xFEE
 18070                           fsr0h	equ	0xFEA
 18071                           fsr0l	equ	0xFE9
 18072                           wreg	equ	0xFE8
 18073                           postinc1	equ	0xFE6
 18074                           postdec1	equ	0xFE5
 18075                           plusw1	equ	0xFE3
 18076                           fsr1h	equ	0xFE2
 18077                           fsr1l	equ	0xFE1
 18078                           indf2	equ	0xFDF
 18079                           postinc2	equ	0xFDE
 18080                           postdec2	equ	0xFDD
 18081                           fsr2h	equ	0xFDA
 18082                           fsr2l	equ	0xFD9
 18083                           status	equ	0xFD8
 18084                           
 18085 ;; *************** function _UpdateCurrentDataRateAfterDataRangeChanges *****************
 18086 ;; Defined at:
 18087 ;;		line 964 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;		None
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;		None
 18092 ;; Return value:  Size  Location     Type
 18093 ;;                  1    wreg      void 
 18094 ;; Registers used:
 18095 ;;		wreg, status,2, status,0
 18096 ;; Tracked objects:
 18097 ;;		On entry : 0/0
 18098 ;;		On exit  : 0/0
 18099 ;;		Unchanged: 0/0
 18100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18105 ;;Total ram usage:        0 bytes
 18106 ;; Hardware stack levels used:    1
 18107 ;; Hardware stack levels required when called:    7
 18108 ;; This function calls:
 18109 ;;		Nothing
 18110 ;; This function is called by:
 18111 ;;		_UpdateChannelIdStatus
 18112 ;; This function uses a non-reentrant model
 18113 ;;
 18114                           
 18115                           	psect	text94
 18116  007C10                     __ptext94:
 18117                           	opt stack 0
 18118  007C10                     _UpdateCurrentDataRateAfterDataRangeChanges:
 18119                           	opt stack 15
 18120                           
 18121                           ;lorawan_na.c: 966: if (loRa.currentDataRate > loRa.maxDataRate)
 18122                           
 18123                           ;incstack = 0
 18124  007C10  0102               	movlb	2	; () banked
 18125  007C12  51D0               	movf	(_loRa+208)& (0+255),w,b
 18126  007C14  5DDD               	subwf	(_loRa+221)& (0+255),w,b
 18127  007C16  A0D8               	btfss	status,0,c
 18128                           
 18129                           ; BSR set to: 2
 18130                           ;lorawan_na.c: 967: {
 18131                           ;lorawan_na.c: 968: loRa.currentDataRate = loRa.maxDataRate;
 18132  007C18  C2DD  F2D0         	movff	_loRa+221,_loRa+208
 18133                           
 18134                           ; BSR set to: 2
 18135                           ;lorawan_na.c: 969: }
 18136                           ;lorawan_na.c: 971: if (loRa.currentDataRate < loRa.minDataRate)
 18137                           
 18138                           ; BSR set to: 2
 18139  007C1C  51DC               	movf	(_loRa+220)& (0+255),w,b
 18140  007C1E  5DD0               	subwf	(_loRa+208)& (0+255),w,b
 18141  007C20  B0D8               	btfsc	status,0,c
 18142  007C22  0012               	return	
 18143                           
 18144                           ; BSR set to: 2
 18145                           ;lorawan_na.c: 972: {
 18146                           ;lorawan_na.c: 973: loRa.currentDataRate = loRa.minDataRate;
 18147  007C24  C2DC  F2D0         	movff	_loRa+220,_loRa+208
 18148  007C28  0012               	return	
 18149  007C2A                     __end_of_UpdateCurrentDataRateAfterDataRangeChanges:
 18150                           	opt stack 0
 18151                           tosu	equ	0xFFF
 18152                           tosh	equ	0xFFE
 18153                           tosl	equ	0xFFD
 18154                           pclath	equ	0xFFA
 18155                           tblptru	equ	0xFF8
 18156                           tblptrh	equ	0xFF7
 18157                           tblptrl	equ	0xFF6
 18158                           tablat	equ	0xFF5
 18159                           prodh	equ	0xFF4
 18160                           prodl	equ	0xFF3
 18161                           intcon	equ	0xFF2
 18162                           intcon2	equ	0xFF1
 18163                           intcon3	equ	0xFF0
 18164                           indf0	equ	0xFEF
 18165                           postinc0	equ	0xFEE
 18166                           fsr0h	equ	0xFEA
 18167                           fsr0l	equ	0xFE9
 18168                           wreg	equ	0xFE8
 18169                           postinc1	equ	0xFE6
 18170                           postdec1	equ	0xFE5
 18171                           plusw1	equ	0xFE3
 18172                           fsr1h	equ	0xFE2
 18173                           fsr1l	equ	0xFE1
 18174                           indf2	equ	0xFDF
 18175                           postinc2	equ	0xFDE
 18176                           postdec2	equ	0xFDD
 18177                           fsr2h	equ	0xFDA
 18178                           fsr2l	equ	0xFD9
 18179                           status	equ	0xFD8
 18180                           
 18181 ;; *************** function _ExecuteDutyCycle *****************
 18182 ;; Defined at:
 18183 ;;		line 404 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 18184 ;; Parameters:    Size  Location     Type
 18185 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18186 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;  maxDCycle       1    2[BANK0 ] unsigned char 
 18189 ;; Return value:  Size  Location     Type
 18190 ;;                  2    0[BANK0 ] PTR unsigned char 
 18191 ;; Registers used:
 18192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18193 ;; Tracked objects:
 18194 ;;		On entry : 0/0
 18195 ;;		On exit  : 0/0
 18196 ;;		Unchanged: 0/0
 18197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18202 ;;Total ram usage:        3 bytes
 18203 ;; Hardware stack levels used:    1
 18204 ;; Hardware stack levels required when called:    7
 18205 ;; This function calls:
 18206 ;;		Nothing
 18207 ;; This function is called by:
 18208 ;;		_MacExecuteCommands
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text95
 18213  007960                     __ptext95:
 18214                           	opt stack 0
 18215  007960                     _ExecuteDutyCycle:
 18216                           	opt stack 18
 18217                           
 18218                           ;lorawan_na.c: 406: uint8_t maxDCycle;
 18219                           ;lorawan_na.c: 408: maxDCycle = *(ptr++);
 18220                           
 18221                           ; BSR set to: 2
 18222                           ;incstack = 0
 18223  007960  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18224  007964  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18225  007968  50DF               	movf	indf2,w,c
 18226  00796A  0100               	movlb	0	; () banked
 18227  00796C  6F62               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18228                           
 18229                           ; BSR set to: 0
 18230  00796E  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18231  007970  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;lorawan_na.c: 410: if (maxDCycle == 255)
 18235  007972  2962               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18236  007974  A4D8               	btfss	status,2,c
 18237  007976  D002               	goto	l1084
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;lorawan_na.c: 411: {
 18241                           ;lorawan_na.c: 412: loRa.macStatus.silentImmediately = 1;
 18242  007978  0102               	movlb	2	; () banked
 18243  00797A  8F02               	bsf	(_loRa+2)& (0+255),7,b
 18244  00797C                     l1084:
 18245                           
 18246                           ;lorawan_na.c: 413: }
 18247                           ;lorawan_na.c: 415: return ptr;
 18248                           
 18249                           ; BSR set to: 2
 18250  00797C  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18251  007980  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18252  007984  0012               	return	
 18253  007986                     __end_of_ExecuteDutyCycle:
 18254                           	opt stack 0
 18255                           tosu	equ	0xFFF
 18256                           tosh	equ	0xFFE
 18257                           tosl	equ	0xFFD
 18258                           pclath	equ	0xFFA
 18259                           tblptru	equ	0xFF8
 18260                           tblptrh	equ	0xFF7
 18261                           tblptrl	equ	0xFF6
 18262                           tablat	equ	0xFF5
 18263                           prodh	equ	0xFF4
 18264                           prodl	equ	0xFF3
 18265                           intcon	equ	0xFF2
 18266                           intcon2	equ	0xFF1
 18267                           intcon3	equ	0xFF0
 18268                           indf0	equ	0xFEF
 18269                           postinc0	equ	0xFEE
 18270                           fsr0h	equ	0xFEA
 18271                           fsr0l	equ	0xFE9
 18272                           wreg	equ	0xFE8
 18273                           postinc1	equ	0xFE6
 18274                           postdec1	equ	0xFE5
 18275                           plusw1	equ	0xFE3
 18276                           fsr1h	equ	0xFE2
 18277                           fsr1l	equ	0xFE1
 18278                           indf2	equ	0xFDF
 18279                           postinc2	equ	0xFDE
 18280                           postdec2	equ	0xFDD
 18281                           fsr2h	equ	0xFDA
 18282                           fsr2l	equ	0xFD9
 18283                           status	equ	0xFD8
 18284                           
 18285 ;; *************** function _ExecuteDevStatus *****************
 18286 ;; Defined at:
 18287 ;;		line 540 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18290 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18291 ;; Auto vars:     Size  Location     Type
 18292 ;;		None
 18293 ;; Return value:  Size  Location     Type
 18294 ;;                  2    0[BANK0 ] PTR unsigned char 
 18295 ;; Registers used:
 18296 ;;		wreg, status,2, status,0
 18297 ;; Tracked objects:
 18298 ;;		On entry : 0/0
 18299 ;;		On exit  : 0/0
 18300 ;;		Unchanged: 0/0
 18301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18306 ;;Total ram usage:        2 bytes
 18307 ;; Hardware stack levels used:    1
 18308 ;; Hardware stack levels required when called:    7
 18309 ;; This function calls:
 18310 ;;		Nothing
 18311 ;; This function is called by:
 18312 ;;		_MacExecuteCommands
 18313 ;; This function uses a non-reentrant model
 18314 ;;
 18315                           
 18316                           	psect	text96
 18317  007DF2                     __ptext96:
 18318                           	opt stack 0
 18319  007DF2                     _ExecuteDevStatus:
 18320                           	opt stack 18
 18321                           
 18322                           ;lorawan_na.c: 542: return ptr;
 18323                           
 18324                           ;incstack = 0
 18325  007DF2  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18326  007DF6  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18327  007DFA  0012               	return	
 18328  007DFC                     __end_of_ExecuteDevStatus:
 18329                           	opt stack 0
 18330                           tosu	equ	0xFFF
 18331                           tosh	equ	0xFFE
 18332                           tosl	equ	0xFFD
 18333                           pclath	equ	0xFFA
 18334                           tblptru	equ	0xFF8
 18335                           tblptrh	equ	0xFF7
 18336                           tblptrl	equ	0xFF6
 18337                           tablat	equ	0xFF5
 18338                           prodh	equ	0xFF4
 18339                           prodl	equ	0xFF3
 18340                           intcon	equ	0xFF2
 18341                           intcon2	equ	0xFF1
 18342                           intcon3	equ	0xFF0
 18343                           indf0	equ	0xFEF
 18344                           postinc0	equ	0xFEE
 18345                           fsr0h	equ	0xFEA
 18346                           fsr0l	equ	0xFE9
 18347                           wreg	equ	0xFE8
 18348                           postinc1	equ	0xFE6
 18349                           postdec1	equ	0xFE5
 18350                           plusw1	equ	0xFE3
 18351                           fsr1h	equ	0xFE2
 18352                           fsr1l	equ	0xFE1
 18353                           indf2	equ	0xFDF
 18354                           postinc2	equ	0xFDE
 18355                           postdec2	equ	0xFDD
 18356                           fsr2h	equ	0xFDA
 18357                           fsr2l	equ	0xFD9
 18358                           status	equ	0xFD8
 18359                           
 18360 ;; *************** function _LORAWAN_Send *****************
 18361 ;; Defined at:
 18362 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18363 ;; Parameters:    Size  Location     Type
 18364 ;;  confirmed       1    wreg     enum E7217
 18365 ;;  port            1  115[BANK0 ] unsigned char 
 18366 ;;  buffer          2  116[BANK0 ] PTR void 
 18367 ;;		 -> STR_1(5), NULL(0), 
 18368 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 18369 ;; Auto vars:     Size  Location     Type
 18370 ;;  confirmed       1  121[BANK0 ] enum E7217
 18371 ;;  result          1  120[BANK0 ] enum E7190
 18372 ;; Return value:  Size  Location     Type
 18373 ;;                  1    wreg      enum E7190
 18374 ;; Registers used:
 18375 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18376 ;; Tracked objects:
 18377 ;;		On entry : 0/0
 18378 ;;		On exit  : 0/0
 18379 ;;		Unchanged: 0/0
 18380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18382 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18384 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18385 ;;Total ram usage:        7 bytes
 18386 ;; Hardware stack levels used:    1
 18387 ;; Hardware stack levels required when called:   13
 18388 ;; This function calls:
 18389 ;;		_AssemblePacket
 18390 ;;		_LORAWAN_GetMaxPayloadSize
 18391 ;;		_RADIO_ReceiveStop
 18392 ;;		_RADIO_Transmit
 18393 ;;		_SelectChannelForTransmission
 18394 ;; This function is called by:
 18395 ;;		_AutomaticReplyCallback
 18396 ;;		_LORAWAN_RxDone
 18397 ;;		_main
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401                           	psect	text97
 18402  0059CC                     __ptext97:
 18403                           	opt stack 0
 18404  0059CC                     _LORAWAN_Send:
 18405                           	opt stack 17
 18406                           
 18407                           ;incstack = 0
 18408                           ;LORAWAN_Send@confirmed stored from wreg
 18409  0059CC  0100               	movlb	0	; () banked
 18410  0059CE  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18411                           
 18412                           ;lorawan.c: 187: LorawanError_t result;
 18413                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 18414  0059D0  0102               	movlb	2	; () banked
 18415  0059D2  B103               	btfsc	(_loRa+3)& (0+255),0,b
 18416  0059D4  0012               	return	
 18417                           
 18418                           ; BSR set to: 2
 18419                           ;lorawan.c: 192: }
 18420                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18421                           
 18422                           ; BSR set to: 2
 18423                           ;lorawan.c: 190: {
 18424                           ;lorawan.c: 191: return MAC_PAUSED;
 18425                           ;	Return value of _LORAWAN_Send is never used
 18426  0059D6  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 18427  0059D8  0012               	return	
 18428                           
 18429                           ; BSR set to: 2
 18430                           ;lorawan.c: 197: }
 18431                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18432                           
 18433                           ; BSR set to: 2
 18434                           ;lorawan.c: 195: {
 18435                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18436                           ;	Return value of _LORAWAN_Send is never used
 18437  0059DA  A902               	btfss	(_loRa+2)& (0+255),4,b
 18438  0059DC  0012               	return	
 18439                           
 18440                           ; BSR set to: 2
 18441                           ;lorawan.c: 202: }
 18442                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18443                           
 18444                           ; BSR set to: 2
 18445                           
 18446                           ; BSR set to: 2
 18447                           ;lorawan.c: 200: {
 18448                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18449                           ;	Return value of _LORAWAN_Send is never used
 18450  0059DE  0100               	movlb	0	; () banked
 18451  0059E0  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 18452  0059E2  A4D8               	btfss	status,2,c
 18453  0059E4  D003               	goto	l1525
 18454                           
 18455                           ; BSR set to: 0
 18456  0059E6  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18457  0059E8  A4D8               	btfss	status,2,c
 18458  0059EA  0012               	return	
 18459  0059EC                     l1525:
 18460                           
 18461                           ; BSR set to: 0
 18462                           ;lorawan.c: 207: }
 18463                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18464                           
 18465                           ; BSR set to: 0
 18466  0059EC  ECDE  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18467  0059F0  0100               	movlb	0	; () banked
 18468  0059F2  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 18469  0059F4  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18470  0059F6  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 18471  0059F8  A0D8               	btfss	status,0,c
 18472  0059FA  0012               	return	
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;lorawan.c: 213: }
 18476                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18477                           
 18478                           ; BSR set to: 0
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;lorawan.c: 211: {
 18482                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18483                           ;	Return value of _LORAWAN_Send is never used
 18484  0059FC  0102               	movlb	2	; () banked
 18485  0059FE  2906               	incf	(_loRa+6)& (0+255),w,b
 18486  005A00  E109               	bnz	l9910
 18487  005A02  2907               	incf	(_loRa+7)& (0+255),w,b
 18488  005A04  E107               	bnz	l9910
 18489  005A06  2908               	incf	(_loRa+8)& (0+255),w,b
 18490  005A08  E105               	bnz	l9910
 18491  005A0A  2909               	incf	(_loRa+9)& (0+255),w,b
 18492  005A0C  A4D8               	btfss	status,2,c
 18493  005A0E  D002               	goto	l1527
 18494                           
 18495                           ; BSR set to: 2
 18496                           ;lorawan.c: 216: {
 18497                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18498  005A10  8304               	bsf	(_loRa+4)& (0+255),1,b
 18499                           
 18500                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18501                           ;	Return value of _LORAWAN_Send is never used
 18502  005A12  0012               	return	
 18503  005A14                     l1527:
 18504  005A14                     l9910:
 18505                           
 18506                           ; BSR set to: 2
 18507                           ;lorawan.c: 220: }
 18508                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 18509  005A14  5102               	movf	(_loRa+2)& (0+255),w,b
 18510  005A16  0B0F               	andlw	15
 18511  005A18  0900               	iorlw	0
 18512  005A1A  B4D8               	btfsc	status,2,c
 18513  005A1C  D003               	goto	l1528
 18514                           
 18515                           ; BSR set to: 2
 18516  005A1E  5112               	movf	(_loRa+18)& (0+255),w,b
 18517  005A20  B4D8               	btfsc	status,2,c
 18518  005A22  0012               	return	
 18519  005A24                     l1528:
 18520                           
 18521                           ; BSR set to: 2
 18522                           ;lorawan.c: 225: }
 18523                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 18524                           
 18525                           ; BSR set to: 2
 18526  005A24  0E01               	movlw	1
 18527  005A26  EC4F  F01B         	call	_SelectChannelForTransmission
 18528  005A2A  0100               	movlb	0	; () banked
 18529  005A2C  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;lorawan.c: 228: if (result != OK)
 18533  005A2E  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 18534  005A30  A4D8               	btfss	status,2,c
 18535  005A32  0012               	return	
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;lorawan.c: 232: else
 18539                           ;lorawan.c: 233: {
 18540                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18541                           
 18542                           ; BSR set to: 0
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;lorawan.c: 231: }
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;lorawan.c: 229: {
 18549                           ;lorawan.c: 230: return result;
 18550                           ;	Return value of _LORAWAN_Send is never used
 18551  005A34  0E02               	movlw	2
 18552  005A36  0102               	movlb	2	; () banked
 18553  005A38  1912               	xorwf	(_loRa+18)& (0+255),w,b
 18554  005A3A  B4D8               	btfsc	status,2,c
 18555                           
 18556                           ; BSR set to: 2
 18557                           ;lorawan.c: 235: {
 18558                           ;lorawan.c: 236: RADIO_ReceiveStop();
 18559  005A3C  EC1A  F03D         	call	_RADIO_ReceiveStop	;wreg free
 18560                           
 18561                           ;lorawan.c: 237: }
 18562                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 18563  005A40  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 18564  005A44  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18565  005A48  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18566  005A4C  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18567  005A50  0100               	movlb	0	; () banked
 18568  005A52  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18569  005A54  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18570  005A56  EC94  F00D         	call	_AssemblePacket
 18571                           
 18572                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18573  005A5A  0EA0               	movlw	low (_macBuffer+16)
 18574  005A5C  0100               	movlb	0	; () banked
 18575  005A5E  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 18576  005A60  0E04               	movlw	high (_macBuffer+16)
 18577  005A62  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18578  005A64  C2C5  F0B3         	movff	_loRa+197,RADIO_Transmit@bufferLen
 18579  005A68  EC14  F017         	call	_RADIO_Transmit	;wreg free
 18580  005A6C  0100               	movlb	0	; () banked
 18581  005A6E  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 18582  005A70  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18583  005A72  A4D8               	btfss	status,2,c
 18584  005A74  0012               	return	
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;lorawan.c: 242: {
 18588                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 18589  005A76  0E01               	movlw	1
 18590  005A78  0102               	movlb	2	; () banked
 18591  005A7A  2706               	addwf	(_loRa+6)& (0+255),f,b
 18592  005A7C  0E00               	movlw	0
 18593  005A7E  2307               	addwfc	(_loRa+7)& (0+255),f,b
 18594  005A80  2308               	addwfc	(_loRa+8)& (0+255),f,b
 18595  005A82  2309               	addwfc	(_loRa+9)& (0+255),f,b
 18596                           
 18597                           ;lorawan.c: 245: if (CNF == confirmed)
 18598  005A84  0100               	movlb	0	; () banked
 18599  005A86  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18600  005A88  A4D8               	btfss	status,2,c
 18601  005A8A  D002               	goto	l1533
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;lorawan.c: 246: {
 18605                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18606  005A8C  0102               	movlb	2	; () banked
 18607  005A8E  8100               	bsf	_loRa& (0+255),0,b
 18608  005A90                     l1533:
 18609                           
 18610                           ;lorawan.c: 248: }
 18611                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18612  005A90  0102               	movlb	2	; () banked
 18613  005A92  8B00               	bsf	_loRa& (0+255),5,b
 18614                           
 18615                           ; BSR set to: 2
 18616                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18617  005A94  5102               	movf	(_loRa+2)& (0+255),w,b
 18618  005A96  0BF0               	andlw	-16
 18619  005A98  0901               	iorlw	1
 18620  005A9A  6F02               	movwf	(_loRa+2)& (0+255),b
 18621                           
 18622                           ; BSR set to: 2
 18623                           
 18624                           ; BSR set to: 2
 18625                           ;lorawan.c: 252: else
 18626                           ;lorawan.c: 253: {
 18627                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18628                           ;	Return value of _LORAWAN_Send is never used
 18629                           
 18630                           ;lorawan.c: 251: }
 18631  005A9C  0012               	return	
 18632  005A9E                     __end_of_LORAWAN_Send:
 18633                           	opt stack 0
 18634                           tosu	equ	0xFFF
 18635                           tosh	equ	0xFFE
 18636                           tosl	equ	0xFFD
 18637                           pclath	equ	0xFFA
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           intcon2	equ	0xFF1
 18646                           intcon3	equ	0xFF0
 18647                           indf0	equ	0xFEF
 18648                           postinc0	equ	0xFEE
 18649                           fsr0h	equ	0xFEA
 18650                           fsr0l	equ	0xFE9
 18651                           wreg	equ	0xFE8
 18652                           postinc1	equ	0xFE6
 18653                           postdec1	equ	0xFE5
 18654                           plusw1	equ	0xFE3
 18655                           fsr1h	equ	0xFE2
 18656                           fsr1l	equ	0xFE1
 18657                           indf2	equ	0xFDF
 18658                           postinc2	equ	0xFDE
 18659                           postdec2	equ	0xFDD
 18660                           fsr2h	equ	0xFDA
 18661                           fsr2l	equ	0xFD9
 18662                           status	equ	0xFD8
 18663                           
 18664 ;; *************** function _RADIO_ReceiveStop *****************
 18665 ;; Defined at:
 18666 ;;		line 1007 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;		None
 18669 ;; Auto vars:     Size  Location     Type
 18670 ;;		None
 18671 ;; Return value:  Size  Location     Type
 18672 ;;                  1    wreg      void 
 18673 ;; Registers used:
 18674 ;;		wreg, status,2, status,0, cstack
 18675 ;; Tracked objects:
 18676 ;;		On entry : 0/0
 18677 ;;		On exit  : 0/0
 18678 ;;		Unchanged: 0/0
 18679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18684 ;;Total ram usage:        0 bytes
 18685 ;; Hardware stack levels used:    1
 18686 ;; Hardware stack levels required when called:   11
 18687 ;; This function calls:
 18688 ;;		_RADIO_WriteMode
 18689 ;; This function is called by:
 18690 ;;		_LORAWAN_Send
 18691 ;;		_LORAWAN_ReceiveWindow1Callback
 18692 ;;		_LORAWAN_ReceiveWindow2Callback
 18693 ;;		_LORAWAN_EnterContinuousReceive
 18694 ;;		_LORAWAN_SetClass
 18695 ;; This function uses a non-reentrant model
 18696 ;;
 18697                           
 18698                           	psect	text98
 18699  007A34                     __ptext98:
 18700                           	opt stack 0
 18701  007A34                     _RADIO_ReceiveStop:
 18702                           	opt stack 18
 18703                           
 18704                           ;radio_driver_SX1276.c: 1009: if ((1 << (1)) == RadioConfiguration.flags)
 18705                           
 18706                           ;incstack = 0
 18707  007A34  0E02               	movlw	2
 18708  007A36  0101               	movlb	1	; () banked
 18709  007A38  1997               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 18710  007A3A  A4D8               	btfss	status,2,c
 18711  007A3C  0012               	return	
 18712                           
 18713                           ; BSR set to: 1
 18714                           ;radio_driver_SX1276.c: 1010: {
 18715                           ;radio_driver_SX1276.c: 1011: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 18716  007A3E  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 18717  007A42  0E00               	movlw	0
 18718  007A44  0100               	movlb	0	; () banked
 18719  007A46  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 18720  007A48  0E00               	movlw	0
 18721  007A4A  EC5E  F028         	call	_RADIO_WriteMode
 18722                           
 18723                           ;radio_driver_SX1276.c: 1012: RadioConfiguration.flags &= ~(1 << (1));
 18724  007A4E  0101               	movlb	1	; () banked
 18725  007A50  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 18726                           
 18727                           ; BSR set to: 1
 18728                           
 18729                           ; BSR set to: 1
 18730                           
 18731                           ;radio_driver_SX1276.c: 1015: do { LATB3 = 0; } while(0);
 18732  007A52  968A               	bcf	3978,3,c	;volatile
 18733                           
 18734                           ; BSR set to: 1
 18735  007A54  0012               	return	
 18736  007A56                     __end_of_RADIO_ReceiveStop:
 18737                           	opt stack 0
 18738                           tosu	equ	0xFFF
 18739                           tosh	equ	0xFFE
 18740                           tosl	equ	0xFFD
 18741                           pclath	equ	0xFFA
 18742                           tblptru	equ	0xFF8
 18743                           tblptrh	equ	0xFF7
 18744                           tblptrl	equ	0xFF6
 18745                           tablat	equ	0xFF5
 18746                           prodh	equ	0xFF4
 18747                           prodl	equ	0xFF3
 18748                           intcon	equ	0xFF2
 18749                           intcon2	equ	0xFF1
 18750                           intcon3	equ	0xFF0
 18751                           indf0	equ	0xFEF
 18752                           postinc0	equ	0xFEE
 18753                           fsr0h	equ	0xFEA
 18754                           fsr0l	equ	0xFE9
 18755                           wreg	equ	0xFE8
 18756                           postinc1	equ	0xFE6
 18757                           postdec1	equ	0xFE5
 18758                           plusw1	equ	0xFE3
 18759                           fsr1h	equ	0xFE2
 18760                           fsr1l	equ	0xFE1
 18761                           indf2	equ	0xFDF
 18762                           postinc2	equ	0xFDE
 18763                           postdec2	equ	0xFDD
 18764                           fsr2h	equ	0xFDA
 18765                           fsr2l	equ	0xFD9
 18766                           status	equ	0xFD8
 18767                           
 18768 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18769 ;; Defined at:
 18770 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18771 ;; Parameters:    Size  Location     Type
 18772 ;;		None
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;  result          1   10[BANK0 ] unsigned char 
 18775 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  1    wreg      unsigned char 
 18778 ;; Registers used:
 18779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/0
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18788 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18789 ;;Total ram usage:        3 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    8
 18792 ;; This function calls:
 18793 ;;		_CountfOptsLength
 18794 ;; This function is called by:
 18795 ;;		_LORAWAN_Send
 18796 ;;		_AckRetransmissionCallback
 18797 ;; This function uses a non-reentrant model
 18798 ;;
 18799                           
 18800                           	psect	text99
 18801  006BBC                     __ptext99:
 18802                           	opt stack 0
 18803  006BBC                     _LORAWAN_GetMaxPayloadSize:
 18804                           	opt stack 21
 18805                           
 18806                           ;lorawan.c: 1558: uint8_t result = 0;
 18807                           
 18808                           ; BSR set to: 1
 18809                           ;incstack = 0
 18810  006BBC  0E00               	movlw	0
 18811  006BBE  0100               	movlb	0	; () banked
 18812  006BC0  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 18816                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 18817  006BC2  EC4F  F02D         	call	_CountfOptsLength	;wreg free
 18818  006BC6  0100               	movlb	0	; () banked
 18819  006BC8  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18820                           
 18821                           ; BSR set to: 0
 18822                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18823  006BCA  0102               	movlb	2	; () banked
 18824  006BCC  5198               	movf	(_loRa+152)& (0+255),w,b
 18825  006BCE  A4D8               	btfss	status,2,c
 18826  006BD0  D00F               	goto	l1987
 18827                           
 18828                           ; BSR set to: 2
 18829                           ;lorawan.c: 1564: {
 18830                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18831  006BD2  51D0               	movf	(_loRa+208)& (0+255),w,b
 18832  006BD4  0D01               	mullw	1
 18833  006BD6  0E3B               	movlw	low _maxPayloadSize
 18834  006BD8  24F3               	addwf	prodl,w,c
 18835  006BDA  6EF6               	movwf	tblptrl,c
 18836  006BDC  0EFF               	movlw	high _maxPayloadSize
 18837  006BDE  20F4               	addwfc	prodh,w,c
 18838  006BE0  6EF7               	movwf	tblptrh,c
 18839  006BE2                     	if	1	;There are 3 active tblptr bytes
 18840  006BE2  6AF8               	clrf	tblptru,c
 18841  006BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 18842  006BE6  22F8               	addwfc	tblptru,f,c
 18843  006BE8                     	endif
 18844  006BE8  0008               	tblrd		*
 18845  006BEA  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18846                           
 18847                           ;lorawan.c: 1566: }
 18848  006BEE  D013               	goto	l1988
 18849  006BF0                     l1987:
 18850                           
 18851                           ; BSR set to: 2
 18852                           ;lorawan.c: 1567: else
 18853                           ;lorawan.c: 1568: {
 18854                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 18855                           
 18856                           ; BSR set to: 2
 18857  006BF0  51D0               	movf	(_loRa+208)& (0+255),w,b
 18858  006BF2  0D01               	mullw	1
 18859  006BF4  0E3B               	movlw	low _maxPayloadSize
 18860  006BF6  24F3               	addwf	prodl,w,c
 18861  006BF8  6EF6               	movwf	tblptrl,c
 18862  006BFA  0EFF               	movlw	high _maxPayloadSize
 18863  006BFC  20F4               	addwfc	prodh,w,c
 18864  006BFE  6EF7               	movwf	tblptrh,c
 18865  006C00                     	if	1	;There are 3 active tblptr bytes
 18866  006C00  6AF8               	clrf	tblptru,c
 18867  006C02  0E00               	movlw	low (__mediumconst shr (0+16))
 18868  006C04  22F8               	addwfc	tblptru,f,c
 18869  006C06                     	endif
 18870  006C06  0008               	tblrd		*
 18871  006C08  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18872  006C0C  0100               	movlb	0	; () banked
 18873  006C0E  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18874  006C10  0800               	sublw	0
 18875  006C12  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18876  006C14  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18877  006C16                     l1988:
 18878                           
 18879                           ;lorawan.c: 1570: }
 18880                           ;lorawan.c: 1572: return result;
 18881                           
 18882                           ; BSR set to: 0
 18883  006C16  0100               	movlb	0	; () banked
 18884  006C18  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18885  006C1A  0012               	return	
 18886  006C1C                     __end_of_LORAWAN_GetMaxPayloadSize:
 18887                           	opt stack 0
 18888                           tosu	equ	0xFFF
 18889                           tosh	equ	0xFFE
 18890                           tosl	equ	0xFFD
 18891                           pclath	equ	0xFFA
 18892                           tblptru	equ	0xFF8
 18893                           tblptrh	equ	0xFF7
 18894                           tblptrl	equ	0xFF6
 18895                           tablat	equ	0xFF5
 18896                           prodh	equ	0xFF4
 18897                           prodl	equ	0xFF3
 18898                           intcon	equ	0xFF2
 18899                           intcon2	equ	0xFF1
 18900                           intcon3	equ	0xFF0
 18901                           indf0	equ	0xFEF
 18902                           postinc0	equ	0xFEE
 18903                           fsr0h	equ	0xFEA
 18904                           fsr0l	equ	0xFE9
 18905                           wreg	equ	0xFE8
 18906                           postinc1	equ	0xFE6
 18907                           postdec1	equ	0xFE5
 18908                           plusw1	equ	0xFE3
 18909                           fsr1h	equ	0xFE2
 18910                           fsr1l	equ	0xFE1
 18911                           indf2	equ	0xFDF
 18912                           postinc2	equ	0xFDE
 18913                           postdec2	equ	0xFDD
 18914                           fsr2h	equ	0xFDA
 18915                           fsr2l	equ	0xFD9
 18916                           status	equ	0xFD8
 18917                           
 18918 ;; *************** function _AssemblePacket *****************
 18919 ;; Defined at:
 18920 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18921 ;; Parameters:    Size  Location     Type
 18922 ;;  confirmed       1    wreg     unsigned char 
 18923 ;;  port            1  103[BANK0 ] unsigned char 
 18924 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 18925 ;;		 -> STR_1(5), NULL(0), 
 18926 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  confirmed       1  110[BANK0 ] unsigned char 
 18929 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 18930 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 18931 ;;  fCtrl           1  112[BANK0 ] struct .
 18932 ;;  mhdr            1  111[BANK0 ] struct .
 18933 ;; Return value:  Size  Location     Type
 18934 ;;                  1    wreg      void 
 18935 ;; Registers used:
 18936 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18942 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18943 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18945 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18946 ;;Total ram usage:       12 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:   12
 18949 ;; This function calls:
 18950 ;;		_AESCmac
 18951 ;;		_AssembleEncryptionBlock
 18952 ;;		_CountfOptsLength
 18953 ;;		_EncryptFRMPayload
 18954 ;;		_FindSmallestDataRate
 18955 ;;		_IncludeMacCommandsResponse
 18956 ;;		_memcpy
 18957 ;;		_memset
 18958 ;; This function is called by:
 18959 ;;		_LORAWAN_Send
 18960 ;; This function uses a non-reentrant model
 18961 ;;
 18962                           
 18963                           	psect	text100
 18964  001B28                     __ptext100:
 18965                           	opt stack 0
 18966  001B28                     _AssemblePacket:
 18967                           	opt stack 17
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;incstack = 0
 18971                           ;AssemblePacket@confirmed stored from wreg
 18972  001B28  0100               	movlb	0	; () banked
 18973  001B2A  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 18974                           
 18975                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18976                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18977  001B2C  0E10               	movlw	16
 18978  001B2E  0100               	movlb	0	; () banked
 18979  001B30  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18980                           
 18981                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18982                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18983  001B32  0E00               	movlw	0
 18984  001B34  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18985                           
 18986                           ; BSR set to: 0
 18987                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18988  001B36  0ECF               	movlw	low AssemblePacket@mhdr
 18989  001B38  6F60               	movwf	memset@p1& (0+255),b
 18990  001B3A  0E00               	movlw	high AssemblePacket@mhdr
 18991  001B3C  6F61               	movwf	(memset@p1+1)& (0+255),b
 18992  001B3E  0E00               	movlw	0
 18993  001B40  6F63               	movwf	(memset@c+1)& (0+255),b
 18994  001B42  0E00               	movlw	0
 18995  001B44  6F62               	movwf	memset@c& (0+255),b
 18996  001B46  0E00               	movlw	0
 18997  001B48  6F65               	movwf	(memset@n+1)& (0+255),b
 18998  001B4A  0E01               	movlw	1
 18999  001B4C  6F64               	movwf	memset@n& (0+255),b
 19000  001B4E  EC9D  F03B         	call	_memset	;wreg free
 19001                           
 19002                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 19003  001B52  0E90               	movlw	low _macBuffer
 19004  001B54  0100               	movlb	0	; () banked
 19005  001B56  6F60               	movwf	memset@p1& (0+255),b
 19006  001B58  0E04               	movlw	high _macBuffer
 19007  001B5A  6F61               	movwf	(memset@p1+1)& (0+255),b
 19008  001B5C  0E00               	movlw	0
 19009  001B5E  6F63               	movwf	(memset@c+1)& (0+255),b
 19010  001B60  0E00               	movlw	0
 19011  001B62  6F62               	movwf	memset@c& (0+255),b
 19012  001B64  0E01               	movlw	1
 19013  001B66  6F65               	movwf	(memset@n+1)& (0+255),b
 19014  001B68  0E0F               	movlw	15
 19015  001B6A  6F64               	movwf	memset@n& (0+255),b
 19016  001B6C  EC9D  F03B         	call	_memset	;wreg free
 19017                           
 19018                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 19019  001B70  0EAA               	movlw	low _aesBuffer
 19020  001B72  0100               	movlb	0	; () banked
 19021  001B74  6F60               	movwf	memset@p1& (0+255),b
 19022  001B76  0E01               	movlw	high _aesBuffer
 19023  001B78  6F61               	movwf	(memset@p1+1)& (0+255),b
 19024  001B7A  0E00               	movlw	0
 19025  001B7C  6F63               	movwf	(memset@c+1)& (0+255),b
 19026  001B7E  0E00               	movlw	0
 19027  001B80  6F62               	movwf	memset@c& (0+255),b
 19028  001B82  0E00               	movlw	0
 19029  001B84  6F65               	movwf	(memset@n+1)& (0+255),b
 19030  001B86  0E10               	movlw	16
 19031  001B88  6F64               	movwf	memset@n& (0+255),b
 19032  001B8A  EC9D  F03B         	call	_memset	;wreg free
 19033                           
 19034                           ;lorawan.c: 1683: if (confirmed == 1)
 19035  001B8E  0100               	movlb	0	; () banked
 19036  001B90  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 19037  001B92  A4D8               	btfss	status,2,c
 19038  001B94  D007               	goto	l2017
 19039                           
 19040                           ; BSR set to: 0
 19041                           ;lorawan.c: 1684: {
 19042                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 19043  001B96  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19044  001B98  0B1F               	andlw	-225
 19045  001B9A  0980               	iorlw	128
 19046  001B9C  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19050  001B9E  0102               	movlb	2	; () banked
 19051  001BA0  8100               	bsf	_loRa& (0+255),0,b
 19052                           
 19053                           ;lorawan.c: 1687: }
 19054  001BA2  D005               	goto	l2018
 19055  001BA4                     l2017:
 19056                           
 19057                           ;lorawan.c: 1688: else
 19058                           ;lorawan.c: 1689: {
 19059                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 19060                           
 19061                           ; BSR set to: 2
 19062  001BA4  0100               	movlb	0	; () banked
 19063  001BA6  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19064  001BA8  0B1F               	andlw	-225
 19065  001BAA  0940               	iorlw	64
 19066  001BAC  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19067  001BAE                     l2018:
 19068                           
 19069                           ;lorawan.c: 1691: }
 19070                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 19071  001BAE  0EFC               	movlw	-4
 19072  001BB0  0100               	movlb	0	; () banked
 19073  001BB2  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19077  001BB4  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 19078  001BB6  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 19079  001BB8  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19083  001BBA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19084  001BBC  0D01               	mullw	1
 19085  001BBE  0E90               	movlw	low _macBuffer
 19086  001BC0  24F3               	addwf	prodl,w,c
 19087  001BC2  6ED9               	movwf	fsr2l,c
 19088  001BC4  0E04               	movlw	high _macBuffer
 19089  001BC6  20F4               	addwfc	prodh,w,c
 19090  001BC8  6EDA               	movwf	fsr2h,c
 19091  001BCA  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 19092                           
 19093                           ; BSR set to: 0
 19094  001BCE  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19095                           
 19096                           ; BSR set to: 0
 19097                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19098  001BD0  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19099  001BD2  0D01               	mullw	1
 19100  001BD4  0E90               	movlw	low _macBuffer
 19101  001BD6  24F3               	addwf	prodl,w,c
 19102  001BD8  6F60               	movwf	memcpy@d1& (0+255),b
 19103  001BDA  0E04               	movlw	high _macBuffer
 19104  001BDC  20F4               	addwfc	prodh,w,c
 19105  001BDE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19106  001BE0  0E1E               	movlw	low (_loRa+30)
 19107  001BE2  6F62               	movwf	memcpy@s1& (0+255),b
 19108  001BE4  0E02               	movlw	high (_loRa+30)
 19109  001BE6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19110  001BE8  0E00               	movlw	0
 19111  001BEA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19112  001BEC  0E04               	movlw	4
 19113  001BEE  6F64               	movwf	memcpy@n& (0+255),b
 19114  001BF0  EC3E  F036         	call	_memcpy	;wreg free
 19115                           
 19116                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19117  001BF4  0100               	movlb	0	; () banked
 19118  001BF6  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19119  001BF8  0F04               	addlw	4
 19120  001BFA  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19121                           
 19122                           ; BSR set to: 0
 19123                           ;lorawan.c: 1699: fCtrl.value = 0;
 19124  001BFC  0E00               	movlw	0
 19125  001BFE  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19126                           
 19127                           ; BSR set to: 0
 19128                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19129  001C00  0102               	movlb	2	; () banked
 19130  001C02  AD02               	btfss	(_loRa+2)& (0+255),6,b
 19131  001C04  D047               	goto	l2027
 19132                           
 19133                           ; BSR set to: 2
 19134                           ;lorawan.c: 1702: {
 19135                           ;lorawan.c: 1703: fCtrl.adr = 1;
 19136  001C06  0100               	movlb	0	; () banked
 19137  001C08  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19141  001C0A  0102               	movlb	2	; () banked
 19142  001C0C  51D0               	movf	(_loRa+208)& (0+255),w,b
 19143  001C0E  5DDC               	subwf	(_loRa+220)& (0+255),w,b
 19144  001C10  B0D8               	btfsc	status,0,c
 19145  001C12  D03F               	goto	l2020
 19146                           
 19147                           ; BSR set to: 2
 19148                           ;lorawan.c: 1705: {
 19149                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19150  001C14  0100               	movlb	0	; () banked
 19151  001C16  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19152                           
 19153                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19154  001C18  0102               	movlb	2	; () banked
 19155  001C1A  8900               	bsf	_loRa& (0+255),4,b
 19156                           
 19157                           ; BSR set to: 2
 19158                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19159  001C1C  4BC1               	infsnz	(_loRa+193)& (0+255),f,b
 19160  001C1E  2BC2               	incf	(_loRa+194)& (0+255),f,b
 19161                           
 19162                           ; BSR set to: 2
 19163                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19164  001C20  5194               	movf	(_loRa+148)& (0+255),w,b
 19165  001C22  0100               	movlb	0	; () banked
 19166  001C24  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19167  001C26  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 19168  001C28  0102               	movlb	2	; () banked
 19169  001C2A  51C1               	movf	(_loRa+193)& (0+255),w,b
 19170  001C2C  0100               	movlb	0	; () banked
 19171  001C2E  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19172  001C30  E10C               	bnz	l9686
 19173  001C32  0102               	movlb	2	; () banked
 19174  001C34  51C2               	movf	(_loRa+194)& (0+255),w,b
 19175  001C36  0100               	movlb	0	; () banked
 19176  001C38  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19177  001C3A  A4D8               	btfss	status,2,c
 19178  001C3C  D006               	goto	l2021
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;lorawan.c: 1711: {
 19182                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19183  001C3E  0E00               	movlw	0
 19184  001C40  0102               	movlb	2	; () banked
 19185  001C42  6FDF               	movwf	(_loRa+223)& (0+255),b
 19186  001C44  D023               	goto	l9698
 19187  001C46                     l9684:
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 19191  001C46  0102               	movlb	2	; () banked
 19192  001C48  D024               	goto	l2020
 19193  001C4A                     l2021:
 19194  001C4A                     l9686:
 19195                           
 19196                           ;lorawan.c: 1716: else
 19197                           ;lorawan.c: 1717: {
 19198                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 19199  001C4A  0102               	movlb	2	; () banked
 19200  001C4C  5194               	movf	(_loRa+148)& (0+255),w,b
 19201  001C4E  0100               	movlb	0	; () banked
 19202  001C50  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19203  001C52  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 19204  001C54  0102               	movlb	2	; () banked
 19205  001C56  51C1               	movf	(_loRa+193)& (0+255),w,b
 19206  001C58  0100               	movlb	0	; () banked
 19207  001C5A  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 19208  001C5C  0102               	movlb	2	; () banked
 19209  001C5E  51C2               	movf	(_loRa+194)& (0+255),w,b
 19210  001C60  0100               	movlb	0	; () banked
 19211  001C62  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19212  001C64  B0D8               	btfsc	status,0,c
 19213  001C66  D013               	goto	l2023
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;lorawan.c: 1719: {
 19217                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19218  001C68  0102               	movlb	2	; () banked
 19219  001C6A  2BDF               	incf	(_loRa+223)& (0+255),f,b
 19220                           
 19221                           ; BSR set to: 2
 19222                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19223  001C6C  51DF               	movf	(_loRa+223)& (0+255),w,b
 19224  001C6E  5D95               	subwf	(_loRa+149)& (0+255),w,b
 19225  001C70  B0D8               	btfsc	status,0,c
 19226  001C72  D010               	goto	l2027
 19227                           
 19228                           ; BSR set to: 2
 19229                           ;lorawan.c: 1725: {
 19230                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19231  001C74  0E00               	movlw	0
 19232  001C76  6FDF               	movwf	(_loRa+223)& (0+255),b
 19233                           
 19234                           ; BSR set to: 2
 19235                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19236  001C78  EC11  F02C         	call	_FindSmallestDataRate	;wreg free
 19237  001C7C  0900               	iorlw	0
 19238  001C7E  A4D8               	btfss	status,2,c
 19239  001C80  D009               	goto	l2027
 19240                           
 19241                           ;lorawan.c: 1729: {
 19242                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19243  001C82  0E00               	movlw	0
 19244  001C84  0102               	movlb	2	; () banked
 19245  001C86  6FC2               	movwf	(_loRa+194)& (0+255),b
 19246  001C88  0E00               	movlw	0
 19247  001C8A  6FC1               	movwf	(_loRa+193)& (0+255),b
 19248  001C8C                     l9698:
 19249                           
 19250                           ; BSR set to: 2
 19251                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 19252  001C8C  0100               	movlb	0	; () banked
 19253  001C8E                     l2023:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;lorawan.c: 1737: else
 19257                           ;lorawan.c: 1738: {
 19258                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19259  001C8E  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19260  001C90  D7DA               	goto	l9684
 19261  001C92                     l2020:
 19262                           
 19263                           ; BSR set to: 2
 19264                           ;lorawan.c: 1744: else
 19265                           ;lorawan.c: 1745: {
 19266                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 19267  001C92  9900               	bcf	_loRa& (0+255),4,b
 19268  001C94                     l2027:
 19269                           
 19270                           ;lorawan.c: 1747: }
 19271                           ;lorawan.c: 1748: }
 19272                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 19273                           
 19274                           ; BSR set to: 2
 19275  001C94  0102               	movlb	2	; () banked
 19276  001C96  A300               	btfss	_loRa& (0+255),1,b
 19277  001C98  D004               	goto	l2028
 19278                           
 19279                           ; BSR set to: 2
 19280                           ;lorawan.c: 1751: {
 19281                           ;lorawan.c: 1752: fCtrl.ack = 1;
 19282  001C9A  0100               	movlb	0	; () banked
 19283  001C9C  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19284                           
 19285                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19286  001C9E  0102               	movlb	2	; () banked
 19287  001CA0  9300               	bcf	_loRa& (0+255),1,b
 19288  001CA2                     l2028:
 19289                           
 19290                           ; BSR set to: 2
 19291                           ;lorawan.c: 1754: }
 19292                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 19293  001CA2  0100               	movlb	0	; () banked
 19294  001CA4  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19298  001CA6  0102               	movlb	2	; () banked
 19299  001CA8  5198               	movf	(_loRa+152)& (0+255),w,b
 19300  001CAA  B4D8               	btfsc	status,2,c
 19301  001CAC  D005               	goto	u9500
 19302                           
 19303                           ; BSR set to: 2
 19304  001CAE  0100               	movlb	0	; () banked
 19305  001CB0  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19306  001CB2  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19307  001CB4  A4D8               	btfss	status,2,c
 19308  001CB6  D006               	goto	l2029
 19309  001CB8                     u9500:
 19310                           
 19311                           ;lorawan.c: 1759: {
 19312                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19313  001CB8  0100               	movlb	0	; () banked
 19314  001CBA  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 19315  001CBC  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 19316  001CBE  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 19317  001CC0  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 19318                           
 19319                           ;lorawan.c: 1761: }
 19320  001CC2  D009               	goto	l2032
 19321  001CC4                     l2029:
 19322                           
 19323                           ; BSR set to: 0
 19324                           ;lorawan.c: 1763: else
 19325                           ;lorawan.c: 1764: {
 19326                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 19327                           
 19328                           ; BSR set to: 0
 19329  001CC4  EC4F  F02D         	call	_CountfOptsLength	;wreg free
 19330  001CC8  0100               	movlb	0	; () banked
 19331  001CCA  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19332  001CCC  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19333  001CCE  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19334  001CD0  0BF0               	andlw	-16
 19335  001CD2  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19336  001CD4  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19337  001CD6                     l2032:
 19338                           
 19339                           ; BSR set to: 0
 19340                           ;lorawan.c: 1766: }
 19341                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19342                           
 19343                           ; BSR set to: 0
 19344  001CD6  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19345  001CD8  0D01               	mullw	1
 19346  001CDA  0E90               	movlw	low _macBuffer
 19347  001CDC  24F3               	addwf	prodl,w,c
 19348  001CDE  6ED9               	movwf	fsr2l,c
 19349  001CE0  0E04               	movlw	high _macBuffer
 19350  001CE2  20F4               	addwfc	prodh,w,c
 19351  001CE4  6EDA               	movwf	fsr2h,c
 19352  001CE6  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19353                           
 19354                           ; BSR set to: 0
 19355  001CEA  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19359  001CEC  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19360  001CEE  0D01               	mullw	1
 19361  001CF0  0E90               	movlw	low _macBuffer
 19362  001CF2  24F3               	addwf	prodl,w,c
 19363  001CF4  6F60               	movwf	memcpy@d1& (0+255),b
 19364  001CF6  0E04               	movlw	high _macBuffer
 19365  001CF8  20F4               	addwfc	prodh,w,c
 19366  001CFA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19367  001CFC  0E06               	movlw	low (_loRa+6)
 19368  001CFE  6F62               	movwf	memcpy@s1& (0+255),b
 19369  001D00  0E02               	movlw	high (_loRa+6)
 19370  001D02  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19371  001D04  0E00               	movlw	0
 19372  001D06  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19373  001D08  0E02               	movlw	2
 19374  001D0A  6F64               	movwf	memcpy@n& (0+255),b
 19375  001D0C  EC3E  F036         	call	_memcpy	;wreg free
 19376                           
 19377                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19378  001D10  0100               	movlb	0	; () banked
 19379  001D12  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19380  001D14  0F02               	addlw	2
 19381  001D16  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19382                           
 19383                           ; BSR set to: 0
 19384                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19385  001D18  0102               	movlb	2	; () banked
 19386  001D1A  5198               	movf	(_loRa+152)& (0+255),w,b
 19387  001D1C  B4D8               	btfsc	status,2,c
 19388  001D1E  D011               	goto	l2033
 19389                           
 19390                           ; BSR set to: 2
 19391  001D20  0100               	movlb	0	; () banked
 19392  001D22  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19393  001D24  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19394  001D26  B4D8               	btfsc	status,2,c
 19395  001D28  D00C               	goto	l2033
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;lorawan.c: 1774: {
 19399                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 19400  001D2A  0E90               	movlw	low _macBuffer
 19401  001D2C  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19402  001D2E  0E04               	movlw	high _macBuffer
 19403  001D30  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19404  001D32  0ED2               	movlw	low AssemblePacket@bufferIndex
 19405  001D34  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19406  001D36  0E00               	movlw	high AssemblePacket@bufferIndex
 19407  001D38  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19408  001D3A  0E01               	movlw	1
 19409  001D3C  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19410  001D3E  EC63  F00B         	call	_IncludeMacCommandsResponse	;wreg free
 19411  001D42                     l2033:
 19412                           
 19413                           ;lorawan.c: 1776: }
 19414                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19415  001D42  0100               	movlb	0	; () banked
 19416  001D44  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19417  001D46  0D01               	mullw	1
 19418  001D48  0E90               	movlw	low _macBuffer
 19419  001D4A  24F3               	addwf	prodl,w,c
 19420  001D4C  6ED9               	movwf	fsr2l,c
 19421  001D4E  0E04               	movlw	high _macBuffer
 19422  001D50  20F4               	addwfc	prodh,w,c
 19423  001D52  6EDA               	movwf	fsr2h,c
 19424  001D54  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 19425                           
 19426                           ; BSR set to: 0
 19427  001D58  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;lorawan.c: 1780: if (bufferLength != 0)
 19431  001D5A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19432  001D5C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19433  001D5E  B4D8               	btfsc	status,2,c
 19434  001D60  D035               	goto	l2034
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;lorawan.c: 1781: {
 19438                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 19439  001D62  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19440  001D64  0D01               	mullw	1
 19441  001D66  0E90               	movlw	low _macBuffer
 19442  001D68  24F3               	addwf	prodl,w,c
 19443  001D6A  6F60               	movwf	memcpy@d1& (0+255),b
 19444  001D6C  0E04               	movlw	high _macBuffer
 19445  001D6E  20F4               	addwfc	prodh,w,c
 19446  001D70  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19447  001D72  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19448  001D76  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19449  001D7A  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19450  001D7E  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19451  001D82  EC3E  F036         	call	_memcpy	;wreg free
 19452                           
 19453                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19454  001D86  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19455  001D8A  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19456  001D8E  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19457  001D92  0E00               	movlw	0
 19458  001D94  0100               	movlb	0	; () banked
 19459  001D96  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19460  001D98  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19461  001D9C  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19462  001DA0  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19463  001DA4  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19464  001DA8  0E32               	movlw	low (_loRa+50)
 19465  001DAA  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19466  001DAC  0E02               	movlw	high (_loRa+50)
 19467  001DAE  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19468  001DB0  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19469  001DB4  0E90               	movlw	low _macBuffer
 19470  001DB6  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19471  001DB8  0E04               	movlw	high _macBuffer
 19472  001DBA  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19473  001DBC  0E00               	movlw	0
 19474  001DBE  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19475  001DC0  EC3E  F01D         	call	_EncryptFRMPayload	;wreg free
 19476                           
 19477                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19478  001DC4  0100               	movlb	0	; () banked
 19479  001DC6  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19480  001DC8  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19481  001DCA  D033               	goto	L11
 19482  001DCC                     l2034:
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19486                           
 19487                           ; BSR set to: 0
 19488  001DCC  0102               	movlb	2	; () banked
 19489  001DCE  5198               	movf	(_loRa+152)& (0+255),w,b
 19490  001DD0  B4D8               	btfsc	status,2,c
 19491  001DD2  D030               	goto	l2036
 19492                           
 19493                           ; BSR set to: 2
 19494                           ;lorawan.c: 1787: {
 19495                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 19496  001DD4  0E9F               	movlw	low _radioBuffer
 19497  001DD6  0100               	movlb	0	; () banked
 19498  001DD8  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19499  001DDA  0E05               	movlw	high _radioBuffer
 19500  001DDC  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19501  001DDE  0ED1               	movlw	low AssemblePacket@macCmdIdx
 19502  001DE0  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19503  001DE2  0E00               	movlw	high AssemblePacket@macCmdIdx
 19504  001DE4  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19505  001DE6  0E00               	movlw	0
 19506  001DE8  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19507  001DEA  EC63  F00B         	call	_IncludeMacCommandsResponse	;wreg free
 19508                           
 19509                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19510  001DEE  0E9F               	movlw	low _radioBuffer
 19511  001DF0  0100               	movlb	0	; () banked
 19512  001DF2  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19513  001DF4  0E05               	movlw	high _radioBuffer
 19514  001DF6  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19515  001DF8  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19516  001DFC  0E00               	movlw	0
 19517  001DFE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19518  001E00  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19519  001E04  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19520  001E08  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19521  001E0C  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19522  001E10  0E22               	movlw	low (_loRa+34)
 19523  001E12  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19524  001E14  0E02               	movlw	high (_loRa+34)
 19525  001E16  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19526  001E18  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19527  001E1C  0E90               	movlw	low _macBuffer
 19528  001E1E  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19529  001E20  0E04               	movlw	high _macBuffer
 19530  001E22  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19531  001E24  0E00               	movlw	0
 19532  001E26  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19533  001E28  EC3E  F01D         	call	_EncryptFRMPayload	;wreg free
 19534                           
 19535                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19536  001E2C  0100               	movlb	0	; () banked
 19537  001E2E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19538  001E30  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19539  001E32                     L11:
 19540  001E32  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19541  001E34                     l2036:
 19542                           
 19543                           ;lorawan.c: 1793: }
 19544                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 19545                           
 19546                           ; BSR set to: 0
 19547                           
 19548                           ; BSR set to: 0
 19549  001E34  C206  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19550  001E38  C207  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19551  001E3C  C208  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19552  001E40  C209  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19553  001E44  0100               	movlb	0	; () banked
 19554  001E46  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19555  001E48  0FF0               	addlw	240
 19556  001E4A  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19557  001E4C  0E49               	movlw	73
 19558  001E4E  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19559  001E50  0E00               	movlw	0
 19560  001E52  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19561  001E54  0E00               	movlw	0
 19562  001E56  ECDD  F028         	call	_AssembleEncryptionBlock
 19563                           
 19564                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19565  001E5A  0E90               	movlw	low _macBuffer
 19566  001E5C  0100               	movlb	0	; () banked
 19567  001E5E  6F60               	movwf	memcpy@d1& (0+255),b
 19568  001E60  0E04               	movlw	high _macBuffer
 19569  001E62  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19570  001E64  0EAA               	movlw	low _aesBuffer
 19571  001E66  6F62               	movwf	memcpy@s1& (0+255),b
 19572  001E68  0E01               	movlw	high _aesBuffer
 19573  001E6A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19574  001E6C  0E00               	movlw	0
 19575  001E6E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19576  001E70  0E10               	movlw	16
 19577  001E72  6F64               	movwf	memcpy@n& (0+255),b
 19578  001E74  EC3E  F036         	call	_memcpy	;wreg free
 19579                           
 19580                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19581  001E78  0E22               	movlw	low (_loRa+34)
 19582  001E7A  0100               	movlb	0	; () banked
 19583  001E7C  6FB9               	movwf	AESCmac@key& (0+255),b
 19584  001E7E  0E02               	movlw	high (_loRa+34)
 19585  001E80  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 19586  001E82  0EAA               	movlw	low _aesBuffer
 19587  001E84  6FBB               	movwf	AESCmac@output& (0+255),b
 19588  001E86  0E01               	movlw	high _aesBuffer
 19589  001E88  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 19590  001E8A  0E90               	movlw	low _macBuffer
 19591  001E8C  6FBD               	movwf	AESCmac@input& (0+255),b
 19592  001E8E  0E04               	movlw	high _macBuffer
 19593  001E90  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 19594  001E92  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19595  001E96  EC6C  F00F         	call	_AESCmac	;wreg free
 19596                           
 19597                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19598  001E9A  0100               	movlb	0	; () banked
 19599  001E9C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19600  001E9E  0D01               	mullw	1
 19601  001EA0  0E90               	movlw	low _macBuffer
 19602  001EA2  24F3               	addwf	prodl,w,c
 19603  001EA4  6F60               	movwf	memcpy@d1& (0+255),b
 19604  001EA6  0E04               	movlw	high _macBuffer
 19605  001EA8  20F4               	addwfc	prodh,w,c
 19606  001EAA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19607  001EAC  0EAA               	movlw	low _aesBuffer
 19608  001EAE  6F62               	movwf	memcpy@s1& (0+255),b
 19609  001EB0  0E01               	movlw	high _aesBuffer
 19610  001EB2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19611  001EB4  0E00               	movlw	0
 19612  001EB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19613  001EB8  0E04               	movlw	4
 19614  001EBA  6F64               	movwf	memcpy@n& (0+255),b
 19615  001EBC  EC3E  F036         	call	_memcpy	;wreg free
 19616                           
 19617                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19618  001EC0  0100               	movlb	0	; () banked
 19619  001EC2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19620  001EC4  0F04               	addlw	4
 19621  001EC6  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19625  001EC8  0EF0               	movlw	240
 19626  001ECA  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19627  001ECC  0102               	movlb	2	; () banked
 19628  001ECE  6FC5               	movwf	(_loRa+197)& (0+255),b
 19629  001ED0  6BC6               	clrf	(_loRa+198)& (0+255),b
 19630  001ED2  0EFF               	movlw	255
 19631  001ED4  23C6               	addwfc	(_loRa+198)& (0+255),f,b
 19632                           
 19633                           ; BSR set to: 2
 19634  001ED6  0012               	return		;funcret
 19635  001ED8                     __end_of_AssemblePacket:
 19636                           	opt stack 0
 19637                           tosu	equ	0xFFF
 19638                           tosh	equ	0xFFE
 19639                           tosl	equ	0xFFD
 19640                           pclath	equ	0xFFA
 19641                           tblptru	equ	0xFF8
 19642                           tblptrh	equ	0xFF7
 19643                           tblptrl	equ	0xFF6
 19644                           tablat	equ	0xFF5
 19645                           prodh	equ	0xFF4
 19646                           prodl	equ	0xFF3
 19647                           intcon	equ	0xFF2
 19648                           intcon2	equ	0xFF1
 19649                           intcon3	equ	0xFF0
 19650                           indf0	equ	0xFEF
 19651                           postinc0	equ	0xFEE
 19652                           fsr0h	equ	0xFEA
 19653                           fsr0l	equ	0xFE9
 19654                           wreg	equ	0xFE8
 19655                           postinc1	equ	0xFE6
 19656                           postdec1	equ	0xFE5
 19657                           plusw1	equ	0xFE3
 19658                           fsr1h	equ	0xFE2
 19659                           fsr1l	equ	0xFE1
 19660                           indf2	equ	0xFDF
 19661                           postinc2	equ	0xFDE
 19662                           postdec2	equ	0xFDD
 19663                           fsr2h	equ	0xFDA
 19664                           fsr2l	equ	0xFD9
 19665                           status	equ	0xFD8
 19666                           
 19667 ;; *************** function _IncludeMacCommandsResponse *****************
 19668 ;; Defined at:
 19669 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19672 ;;		 -> macBuffer(271), radioBuffer(271), 
 19673 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19674 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19675 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19676 ;; Auto vars:     Size  Location     Type
 19677 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 19678 ;;  i               1   13[BANK0 ] unsigned char 
 19679 ;; Return value:  Size  Location     Type
 19680 ;;                  1    wreg      void 
 19681 ;; Registers used:
 19682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19683 ;; Tracked objects:
 19684 ;;		On entry : 0/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19688 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19689 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19690 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19691 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19692 ;;Total ram usage:       15 bytes
 19693 ;; Hardware stack levels used:    1
 19694 ;; Hardware stack levels required when called:    8
 19695 ;; This function calls:
 19696 ;;		_RADIO_GetPacketSnr
 19697 ;; This function is called by:
 19698 ;;		_AssemblePacket
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text101
 19703  0016C6                     __ptext101:
 19704                           	opt stack 0
 19705  0016C6                     _IncludeMacCommandsResponse:
 19706                           	opt stack 20
 19707                           
 19708                           ;lorawan.c: 1847: uint8_t i = 0;
 19709                           
 19710                           ; BSR set to: 2
 19711                           ;incstack = 0
 19712  0016C6  0E00               	movlw	0
 19713  0016C8  0100               	movlb	0	; () banked
 19714  0016CA  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19718  0016CC  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19719  0016D0  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19720  0016D4  50DF               	movf	indf2,w,c
 19721  0016D6  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19725  0016D8  0E00               	movlw	0
 19726  0016DA  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19727  0016DC  D218               	goto	l2047
 19728  0016DE                     
 19729                           ; BSR set to: 0
 19730                           ;lorawan.c: 1851: {
 19731                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 19732                           
 19733                           ; BSR set to: 0
 19734  0016DE  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19735  0016E0  B4D8               	btfsc	status,2,c
 19736  0016E2  D1F6               	goto	l2052
 19737                           
 19738                           ; BSR set to: 0
 19739  0016E4  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19740  0016E6  0D02               	mullw	2
 19741  0016E8  0E99               	movlw	low (_loRa+153)
 19742  0016EA  24F3               	addwf	prodl,w,c
 19743  0016EC  6ED9               	movwf	fsr2l,c
 19744  0016EE  0E02               	movlw	high (_loRa+153)
 19745  0016F0  20F4               	addwfc	prodh,w,c
 19746  0016F2  6EDA               	movwf	fsr2h,c
 19747  0016F4  28DE               	incf	postinc2,w,c
 19748  0016F6  B4D8               	btfsc	status,2,c
 19749  0016F8  D1EB               	goto	l2052
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;lorawan.c: 1853: {
 19753                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 19754  0016FA  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19755  0016FE  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19756  001702  50DF               	movf	indf2,w,c
 19757  001704  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19758  001706  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19759  001708  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 19760  00170A  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19761  00170C  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 19762  00170E  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19763  001710  0EFE               	movlw	254
 19764  001712  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19765  001714  0EFF               	movlw	255
 19766  001716  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19767  001718  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19768  00171A  0D02               	mullw	2
 19769  00171C  0E99               	movlw	low (_loRa+153)
 19770  00171E  24F3               	addwf	prodl,w,c
 19771  001720  6ED9               	movwf	fsr2l,c
 19772  001722  0E02               	movlw	high (_loRa+153)
 19773  001724  20F4               	addwfc	prodh,w,c
 19774  001726  6EDA               	movwf	fsr2h,c
 19775  001728  50DF               	movf	indf2,w,c
 19776  00172A  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 19777  00172C  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19778  00172E  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19779  001730  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19780  001732  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19781  001734  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19782  001736  0E62               	movlw	low _macEndDevCmdReplyLen
 19783  001738  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19784  00173A  6EF6               	movwf	tblptrl,c
 19785  00173C  0EFF               	movlw	high _macEndDevCmdReplyLen
 19786  00173E  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19787  001740  6EF7               	movwf	tblptrh,c
 19788  001742                     	if	1	;There are 3 active tblptr bytes
 19789  001742  6AF8               	clrf	tblptru,c
 19790  001744  0E00               	movlw	low (__mediumconst shr (0+16))
 19791  001746  22F8               	addwfc	tblptru,f,c
 19792  001748                     	endif
 19793  001748  0008               	tblrd		*
 19794  00174A  50F5               	movf	tablat,w,c
 19795  00174C  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 19796  001750  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 19797  001752  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19798  001754  0E00               	movlw	0
 19799  001756  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19800  001758  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19801  00175A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19802  00175C  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19803  00175E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19804  001760  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 19805  001762  D1B6               	goto	l2052
 19806  001764  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 19807  001766  E105               	bnz	u8680
 19808  001768  0E10               	movlw	16
 19809  00176A  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19810  00176C  B0D8               	btfsc	status,0,c
 19811  00176E  D1D5               	goto	u8790
 19812  001770  D1AF               	goto	l2052
 19813  001772                     u8680:
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;lorawan.c: 1855: {
 19817                           ;lorawan.c: 1856: break;
 19818  001772  D1D3               	goto	u8790
 19819  001774                     
 19820                           ; BSR set to: 0
 19821                           ;lorawan.c: 1862: {
 19822                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19823                           
 19824                           ; BSR set to: 0
 19825  001774  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19826  001776  0D01               	mullw	1
 19827  001778  50F3               	movf	prodl,w,c
 19828  00177A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19829  00177C  6ED9               	movwf	fsr2l,c
 19830  00177E  50F4               	movf	prodh,w,c
 19831  001780  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19832  001782  6EDA               	movwf	fsr2h,c
 19833  001784  0E03               	movlw	3
 19834  001786  6EDF               	movwf	indf2,c
 19835                           
 19836                           ; BSR set to: 0
 19837  001788  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19841  00178A  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19842  00178C  0D01               	mullw	1
 19843  00178E  50F3               	movf	prodl,w,c
 19844  001790  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19845  001792  6ED9               	movwf	fsr2l,c
 19846  001794  50F4               	movf	prodh,w,c
 19847  001796  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19848  001798  6EDA               	movwf	fsr2h,c
 19849  00179A  0E00               	movlw	0
 19850  00179C  6EDF               	movwf	indf2,c
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19854  00179E  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19855  0017A0  0D02               	mullw	2
 19856  0017A2  0E00               	movlw	low _loRa
 19857  0017A4  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19858  0017A6  0E02               	movlw	high _loRa
 19859  0017A8  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19860  0017AA  0E99               	movlw	153
 19861  0017AC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19862  0017AE  0E00               	movlw	0
 19863  0017B0  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19864  0017B2  50F3               	movf	prodl,w,c
 19865  0017B4  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19866  0017B6  50F4               	movf	prodh,w,c
 19867  0017B8  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19868  0017BA  0E01               	movlw	1
 19869  0017BC  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19870  0017BE  6ED9               	movwf	fsr2l,c
 19871  0017C0  0E00               	movlw	0
 19872  0017C2  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19873  0017C4  6EDA               	movwf	fsr2h,c
 19874  0017C6  0102               	movlb	2	; () banked
 19875  0017C8  A0DF               	btfss	indf2,0,c
 19876  0017CA  D00B               	goto	l2054
 19877                           
 19878                           ; BSR set to: 2
 19879                           ;lorawan.c: 1866: {
 19880                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19881  0017CC  0100               	movlb	0	; () banked
 19882  0017CE  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19883  0017D0  0D01               	mullw	1
 19884  0017D2  50F3               	movf	prodl,w,c
 19885  0017D4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19886  0017D6  6ED9               	movwf	fsr2l,c
 19887  0017D8  50F4               	movf	prodh,w,c
 19888  0017DA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19889  0017DC  6EDA               	movwf	fsr2h,c
 19890  0017DE  0E00               	movlw	0
 19891  0017E0  80DB               	bsf	plusw2,0,c
 19892  0017E2                     l2054:
 19893                           
 19894                           ;lorawan.c: 1868: }
 19895                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19896  0017E2  0100               	movlb	0	; () banked
 19897  0017E4  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19898  0017E6  0D02               	mullw	2
 19899  0017E8  0E00               	movlw	low _loRa
 19900  0017EA  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19901  0017EC  0E02               	movlw	high _loRa
 19902  0017EE  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19903  0017F0  0E99               	movlw	153
 19904  0017F2  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19905  0017F4  0E00               	movlw	0
 19906  0017F6  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19907  0017F8  50F3               	movf	prodl,w,c
 19908  0017FA  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19909  0017FC  50F4               	movf	prodh,w,c
 19910  0017FE  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19911  001800  0E01               	movlw	1
 19912  001802  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19913  001804  6ED9               	movwf	fsr2l,c
 19914  001806  0E00               	movlw	0
 19915  001808  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19916  00180A  6EDA               	movwf	fsr2h,c
 19917  00180C  0102               	movlb	2	; () banked
 19918  00180E  A2DF               	btfss	indf2,1,c
 19919  001810  D00B               	goto	l2055
 19920                           
 19921                           ; BSR set to: 2
 19922                           ;lorawan.c: 1871: {
 19923                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19924  001812  0100               	movlb	0	; () banked
 19925  001814  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19926  001816  0D01               	mullw	1
 19927  001818  50F3               	movf	prodl,w,c
 19928  00181A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19929  00181C  6ED9               	movwf	fsr2l,c
 19930  00181E  50F4               	movf	prodh,w,c
 19931  001820  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19932  001822  6EDA               	movwf	fsr2h,c
 19933  001824  0E00               	movlw	0
 19934  001826  82DB               	bsf	plusw2,1,c
 19935  001828                     l2055:
 19936                           
 19937                           ;lorawan.c: 1873: }
 19938                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19939  001828  0100               	movlb	0	; () banked
 19940  00182A  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19941  00182C  0D02               	mullw	2
 19942  00182E  0E00               	movlw	low _loRa
 19943  001830  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19944  001832  0E02               	movlw	high _loRa
 19945  001834  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19946  001836  0E99               	movlw	153
 19947  001838  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19948  00183A  0E00               	movlw	0
 19949  00183C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19950  00183E  50F3               	movf	prodl,w,c
 19951  001840  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19952  001842  50F4               	movf	prodh,w,c
 19953  001844  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19954  001846  0E01               	movlw	1
 19955  001848  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19956  00184A  6ED9               	movwf	fsr2l,c
 19957  00184C  0E00               	movlw	0
 19958  00184E  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19959  001850  6EDA               	movwf	fsr2h,c
 19960  001852  0102               	movlb	2	; () banked
 19961  001854  A4DF               	btfss	indf2,2,c
 19962  001856  D089               	goto	l2061
 19963                           
 19964                           ; BSR set to: 2
 19965                           ;lorawan.c: 1876: {
 19966                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19967  001858  0100               	movlb	0	; () banked
 19968  00185A  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19969  00185C  0D01               	mullw	1
 19970  00185E  50F3               	movf	prodl,w,c
 19971  001860  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19972  001862  6ED9               	movwf	fsr2l,c
 19973  001864  50F4               	movf	prodh,w,c
 19974  001866  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19975  001868  6EDA               	movwf	fsr2h,c
 19976  00186A  0E00               	movlw	0
 19977  00186C  84DB               	bsf	plusw2,2,c
 19978                           
 19979                           ; BSR set to: 0
 19980  00186E  D07D               	goto	l2061
 19981  001870                     
 19982                           ; BSR set to: 0
 19983                           ;lorawan.c: 1884: {
 19984                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19985                           
 19986                           ; BSR set to: 0
 19987  001870  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19988  001872  0D01               	mullw	1
 19989  001874  50F3               	movf	prodl,w,c
 19990  001876  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19991  001878  6ED9               	movwf	fsr2l,c
 19992  00187A  50F4               	movf	prodh,w,c
 19993  00187C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19994  00187E  6EDA               	movwf	fsr2h,c
 19995  001880  0E05               	movlw	5
 19996  001882  6EDF               	movwf	indf2,c
 19997                           
 19998                           ; BSR set to: 0
 19999  001884  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 20003  001886  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20004  001888  0D01               	mullw	1
 20005  00188A  50F3               	movf	prodl,w,c
 20006  00188C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20007  00188E  6ED9               	movwf	fsr2l,c
 20008  001890  50F4               	movf	prodh,w,c
 20009  001892  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20010  001894  6EDA               	movwf	fsr2h,c
 20011  001896  0E00               	movlw	0
 20012  001898  6EDF               	movwf	indf2,c
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 20016  00189A  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20017  00189C  0D02               	mullw	2
 20018  00189E  0E00               	movlw	low _loRa
 20019  0018A0  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20020  0018A2  0E02               	movlw	high _loRa
 20021  0018A4  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20022  0018A6  0E99               	movlw	153
 20023  0018A8  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20024  0018AA  0E00               	movlw	0
 20025  0018AC  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20026  0018AE  50F3               	movf	prodl,w,c
 20027  0018B0  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20028  0018B2  50F4               	movf	prodh,w,c
 20029  0018B4  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20030  0018B6  0E01               	movlw	1
 20031  0018B8  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20032  0018BA  6ED9               	movwf	fsr2l,c
 20033  0018BC  0E00               	movlw	0
 20034  0018BE  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20035  0018C0  6EDA               	movwf	fsr2h,c
 20036  0018C2  0102               	movlb	2	; () banked
 20037  0018C4  A6DF               	btfss	indf2,3,c
 20038  0018C6  D00B               	goto	l2059
 20039                           
 20040                           ; BSR set to: 2
 20041                           ;lorawan.c: 1888: {
 20042                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 20043  0018C8  0100               	movlb	0	; () banked
 20044  0018CA  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20045  0018CC  0D01               	mullw	1
 20046  0018CE  50F3               	movf	prodl,w,c
 20047  0018D0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20048  0018D2  6ED9               	movwf	fsr2l,c
 20049  0018D4  50F4               	movf	prodh,w,c
 20050  0018D6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20051  0018D8  6EDA               	movwf	fsr2h,c
 20052  0018DA  0E00               	movlw	0
 20053  0018DC  80DB               	bsf	plusw2,0,c
 20054  0018DE                     l2059:
 20055                           
 20056                           ;lorawan.c: 1890: }
 20057                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 20058  0018DE  0100               	movlb	0	; () banked
 20059  0018E0  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20060  0018E2  0D02               	mullw	2
 20061  0018E4  0E00               	movlw	low _loRa
 20062  0018E6  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20063  0018E8  0E02               	movlw	high _loRa
 20064  0018EA  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20065  0018EC  0E99               	movlw	153
 20066  0018EE  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20067  0018F0  0E00               	movlw	0
 20068  0018F2  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20069  0018F4  50F3               	movf	prodl,w,c
 20070  0018F6  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20071  0018F8  50F4               	movf	prodh,w,c
 20072  0018FA  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20073  0018FC  0E01               	movlw	1
 20074  0018FE  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20075  001900  6ED9               	movwf	fsr2l,c
 20076  001902  0E00               	movlw	0
 20077  001904  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20078  001906  6EDA               	movwf	fsr2h,c
 20079  001908  0102               	movlb	2	; () banked
 20080  00190A  A8DF               	btfss	indf2,4,c
 20081  00190C  D00B               	goto	l2060
 20082                           
 20083                           ; BSR set to: 2
 20084                           ;lorawan.c: 1893: {
 20085                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 20086  00190E  0100               	movlb	0	; () banked
 20087  001910  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20088  001912  0D01               	mullw	1
 20089  001914  50F3               	movf	prodl,w,c
 20090  001916  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20091  001918  6ED9               	movwf	fsr2l,c
 20092  00191A  50F4               	movf	prodh,w,c
 20093  00191C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20094  00191E  6EDA               	movwf	fsr2h,c
 20095  001920  0E00               	movlw	0
 20096  001922  82DB               	bsf	plusw2,1,c
 20097  001924                     l2060:
 20098                           
 20099                           ;lorawan.c: 1895: }
 20100                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 20101  001924  0100               	movlb	0	; () banked
 20102  001926  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20103  001928  0D02               	mullw	2
 20104  00192A  0E00               	movlw	low _loRa
 20105  00192C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20106  00192E  0E02               	movlw	high _loRa
 20107  001930  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20108  001932  0E99               	movlw	153
 20109  001934  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20110  001936  0E00               	movlw	0
 20111  001938  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20112  00193A  50F3               	movf	prodl,w,c
 20113  00193C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20114  00193E  50F4               	movf	prodh,w,c
 20115  001940  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20116  001942  0E01               	movlw	1
 20117  001944  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20118  001946  6ED9               	movwf	fsr2l,c
 20119  001948  0E00               	movlw	0
 20120  00194A  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20121  00194C  6EDA               	movwf	fsr2h,c
 20122  00194E  0102               	movlb	2	; () banked
 20123  001950  AADF               	btfss	indf2,5,c
 20124  001952  D00B               	goto	l2061
 20125                           
 20126                           ; BSR set to: 2
 20127                           ;lorawan.c: 1898: {
 20128                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 20129  001954  0100               	movlb	0	; () banked
 20130  001956  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20131  001958  0D01               	mullw	1
 20132  00195A  50F3               	movf	prodl,w,c
 20133  00195C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20134  00195E  6ED9               	movwf	fsr2l,c
 20135  001960  50F4               	movf	prodh,w,c
 20136  001962  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20137  001964  6EDA               	movwf	fsr2h,c
 20138  001966  0E00               	movlw	0
 20139  001968  84DB               	bsf	plusw2,2,c
 20140  00196A                     l2061:
 20141                           
 20142                           ;lorawan.c: 1900: }
 20143                           ;lorawan.c: 1902: bufferIndex ++;
 20144                           
 20145                           ; BSR set to: 0
 20146  00196A  0100               	movlb	0	; () banked
 20147  00196C  D03C               	goto	L12
 20148  00196E                     
 20149                           ; BSR set to: 0
 20150                           ;lorawan.c: 1907: {
 20151                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 20152                           
 20153                           ; BSR set to: 0
 20154  00196E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20155  001970  0D01               	mullw	1
 20156  001972  50F3               	movf	prodl,w,c
 20157  001974  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20158  001976  6ED9               	movwf	fsr2l,c
 20159  001978  50F4               	movf	prodh,w,c
 20160  00197A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20161  00197C  6EDA               	movwf	fsr2h,c
 20162  00197E  0E06               	movlw	6
 20163  001980  6EDF               	movwf	indf2,c
 20164                           
 20165                           ; BSR set to: 0
 20166  001982  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 20170  001984  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20171  001986  0D01               	mullw	1
 20172  001988  50F3               	movf	prodl,w,c
 20173  00198A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20174  00198C  6ED9               	movwf	fsr2l,c
 20175  00198E  50F4               	movf	prodh,w,c
 20176  001990  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20177  001992  6EDA               	movwf	fsr2h,c
 20178  001994  C2D1  FFDF         	movff	_loRa+209,indf2
 20179  001998  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20180                           
 20181                           ; BSR set to: 0
 20182                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 20183  00199A  EC35  F03F         	call	_RADIO_GetPacketSnr	;wreg free
 20184  00199E  0A80               	xorlw	128
 20185  0019A0  0FA0               	addlw	160
 20186  0019A2  A0D8               	btfss	status,0,c
 20187  0019A4  D006               	goto	u8760
 20188  0019A6  EC35  F03F         	call	_RADIO_GetPacketSnr	;wreg free
 20189  0019AA  0A80               	xorlw	128
 20190  0019AC  0F60               	addlw	-160
 20191  0019AE  A0D8               	btfss	status,0,c
 20192  0019B0  D00C               	goto	l2063
 20193  0019B2                     u8760:
 20194                           
 20195                           ;lorawan.c: 1911: {
 20196                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 20197  0019B2  0100               	movlb	0	; () banked
 20198  0019B4  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20199  0019B6  0D01               	mullw	1
 20200  0019B8  50F3               	movf	prodl,w,c
 20201  0019BA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20202  0019BC  6ED9               	movwf	fsr2l,c
 20203  0019BE  50F4               	movf	prodh,w,c
 20204  0019C0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20205  0019C2  6EDA               	movwf	fsr2h,c
 20206  0019C4  0E20               	movlw	32
 20207  0019C6  6EDF               	movwf	indf2,c
 20208  0019C8  D00E               	goto	L12
 20209  0019CA                     l2063:
 20210                           
 20211                           ;lorawan.c: 1914: else
 20212                           ;lorawan.c: 1915: {
 20213                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 20214                           
 20215                           ; BSR set to: 0
 20216  0019CA  0100               	movlb	0	; () banked
 20217  0019CC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20218  0019CE  0D01               	mullw	1
 20219  0019D0  50F3               	movf	prodl,w,c
 20220  0019D2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20221  0019D4  6ED9               	movwf	fsr2l,c
 20222  0019D6  50F4               	movf	prodh,w,c
 20223  0019D8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20224  0019DA  6EDA               	movwf	fsr2h,c
 20225  0019DC  EC35  F03F         	call	_RADIO_GetPacketSnr	;wreg free
 20226  0019E0  0B3F               	andlw	63
 20227  0019E2  6EDF               	movwf	indf2,c
 20228  0019E4  D7C2               	goto	l2061
 20229  0019E6                     L12:
 20230  0019E6  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;lorawan.c: 1917: }
 20234                           ;lorawan.c: 1918: }
 20235                           ;lorawan.c: 1919: break;
 20236  0019E8  D091               	goto	l2057
 20237  0019EA                     
 20238                           ; BSR set to: 0
 20239                           ;lorawan.c: 1922: {
 20240                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 20241                           
 20242                           ; BSR set to: 0
 20243  0019EA  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20244  0019EC  0D01               	mullw	1
 20245  0019EE  50F3               	movf	prodl,w,c
 20246  0019F0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20247  0019F2  6ED9               	movwf	fsr2l,c
 20248  0019F4  50F4               	movf	prodh,w,c
 20249  0019F6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20250  0019F8  6EDA               	movwf	fsr2h,c
 20251  0019FA  0E07               	movlw	7
 20252  0019FC  6EDF               	movwf	indf2,c
 20253                           
 20254                           ; BSR set to: 0
 20255  0019FE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 20259  001A00  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20260  001A02  0D01               	mullw	1
 20261  001A04  50F3               	movf	prodl,w,c
 20262  001A06  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20263  001A08  6ED9               	movwf	fsr2l,c
 20264  001A0A  50F4               	movf	prodh,w,c
 20265  001A0C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20266  001A0E  6EDA               	movwf	fsr2h,c
 20267  001A10  0E00               	movlw	0
 20268  001A12  6EDF               	movwf	indf2,c
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 20272  001A14  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20273  001A16  0D02               	mullw	2
 20274  001A18  0E00               	movlw	low _loRa
 20275  001A1A  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20276  001A1C  0E02               	movlw	high _loRa
 20277  001A1E  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20278  001A20  0E99               	movlw	153
 20279  001A22  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20280  001A24  0E00               	movlw	0
 20281  001A26  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20282  001A28  50F3               	movf	prodl,w,c
 20283  001A2A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20284  001A2C  50F4               	movf	prodh,w,c
 20285  001A2E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20286  001A30  0E01               	movlw	1
 20287  001A32  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20288  001A34  6ED9               	movwf	fsr2l,c
 20289  001A36  0E00               	movlw	0
 20290  001A38  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20291  001A3A  6EDA               	movwf	fsr2h,c
 20292  001A3C  0102               	movlb	2	; () banked
 20293  001A3E  AEDF               	btfss	indf2,7,c
 20294  001A40  D00B               	goto	l2068
 20295                           
 20296                           ; BSR set to: 2
 20297                           ;lorawan.c: 1926: {
 20298                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 20299  001A42  0100               	movlb	0	; () banked
 20300  001A44  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20301  001A46  0D01               	mullw	1
 20302  001A48  50F3               	movf	prodl,w,c
 20303  001A4A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20304  001A4C  6ED9               	movwf	fsr2l,c
 20305  001A4E  50F4               	movf	prodh,w,c
 20306  001A50  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20307  001A52  6EDA               	movwf	fsr2h,c
 20308  001A54  0E00               	movlw	0
 20309  001A56  80DB               	bsf	plusw2,0,c
 20310  001A58                     l2068:
 20311                           
 20312                           ;lorawan.c: 1928: }
 20313                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 20314  001A58  0100               	movlb	0	; () banked
 20315  001A5A  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20316  001A5C  0D02               	mullw	2
 20317  001A5E  0E00               	movlw	low _loRa
 20318  001A60  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20319  001A62  0E02               	movlw	high _loRa
 20320  001A64  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20321  001A66  0E99               	movlw	153
 20322  001A68  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20323  001A6A  0E00               	movlw	0
 20324  001A6C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20325  001A6E  50F3               	movf	prodl,w,c
 20326  001A70  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20327  001A72  50F4               	movf	prodh,w,c
 20328  001A74  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20329  001A76  0E01               	movlw	1
 20330  001A78  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20331  001A7A  6ED9               	movwf	fsr2l,c
 20332  001A7C  0E00               	movlw	0
 20333  001A7E  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20334  001A80  6EDA               	movwf	fsr2h,c
 20335  001A82  0102               	movlb	2	; () banked
 20336  001A84  ACDF               	btfss	indf2,6,c
 20337  001A86  D771               	goto	l2061
 20338                           
 20339                           ; BSR set to: 2
 20340                           ;lorawan.c: 1931: {
 20341                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20342  001A88  0100               	movlb	0	; () banked
 20343  001A8A  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20344  001A8C  0D01               	mullw	1
 20345  001A8E  50F3               	movf	prodl,w,c
 20346  001A90  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20347  001A92  6ED9               	movwf	fsr2l,c
 20348  001A94  50F4               	movf	prodh,w,c
 20349  001A96  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20350  001A98  6EDA               	movwf	fsr2h,c
 20351  001A9A  0E00               	movlw	0
 20352  001A9C  82DB               	bsf	plusw2,1,c
 20353                           
 20354                           ; BSR set to: 0
 20355  001A9E  D765               	goto	l2061
 20356  001AA0                     l2070:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;lorawan.c: 1939: {
 20360                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20361  001AA0  0102               	movlb	2	; () banked
 20362  001AA2  69CE               	setf	(_loRa+206)& (0+255),b
 20363                           
 20364                           ; BSR set to: 2
 20365                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20366  001AA4  0E00               	movlw	0
 20367  001AA6  6FCF               	movwf	(_loRa+207)& (0+255),b
 20368                           
 20369                           ; BSR set to: 2
 20370                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20371  001AA8  0100               	movlb	0	; () banked
 20372  001AAA                     
 20373                           ; BSR set to: 0
 20374                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 20375                           ;lorawan.c: 1948: {
 20376                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20377                           
 20378                           ; BSR set to: 0
 20379                           
 20380                           ; BSR set to: 0
 20381  001AAA  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20382  001AAC  0D02               	mullw	2
 20383  001AAE  0E99               	movlw	low (_loRa+153)
 20384  001AB0  24F3               	addwf	prodl,w,c
 20385  001AB2  6ED9               	movwf	fsr2l,c
 20386  001AB4  0E02               	movlw	high (_loRa+153)
 20387  001AB6  20F4               	addwfc	prodh,w,c
 20388  001AB8  6EDA               	movwf	fsr2h,c
 20389  001ABA  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20390  001ABC  0D01               	mullw	1
 20391  001ABE  50F3               	movf	prodl,w,c
 20392  001AC0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20393  001AC2  6EE9               	movwf	fsr0l,c
 20394  001AC4  50F4               	movf	prodh,w,c
 20395  001AC6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20396  001AC8  6EEA               	movwf	fsr0h,c
 20397  001ACA  CFDF FFEF          	movff	indf2,indf0
 20398  001ACE  D78B               	goto	L12
 20399  001AD0                     l2052:
 20400                           
 20401                           ; BSR set to: 0
 20402                           
 20403                           ; BSR set to: 0
 20404  001AD0  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20405  001AD2  0D02               	mullw	2
 20406  001AD4  0E99               	movlw	low (_loRa+153)
 20407  001AD6  24F3               	addwf	prodl,w,c
 20408  001AD8  6ED9               	movwf	fsr2l,c
 20409  001ADA  0E02               	movlw	high (_loRa+153)
 20410  001ADC  20F4               	addwfc	prodh,w,c
 20411  001ADE  6EDA               	movwf	fsr2h,c
 20412  001AE0  50DF               	movf	indf2,w,c
 20413                           
 20414                           ; Switch size 1, requested type "space"
 20415                           ; Number of cases is 7, Range of values is 2 to 8
 20416                           ; switch strategies available:
 20417                           ; Name         Instructions Cycles
 20418                           ; simple_byte           22    12 (average)
 20419                           ;	Chosen strategy is simple_byte
 20420  001AE2  0A02               	xorlw	2	; case 2
 20421  001AE4  B4D8               	btfsc	status,2,c
 20422  001AE6  D7DC               	goto	l2070
 20423  001AE8  0A01               	xorlw	1	; case 3
 20424  001AEA  B4D8               	btfsc	status,2,c
 20425  001AEC  D643               	goto	l2053
 20426  001AEE  0A07               	xorlw	7	; case 4
 20427  001AF0  B4D8               	btfsc	status,2,c
 20428  001AF2  D7DB               	goto	l2071
 20429  001AF4  0A01               	xorlw	1	; case 5
 20430  001AF6  B4D8               	btfsc	status,2,c
 20431  001AF8  D6BB               	goto	l2058
 20432  001AFA  0A03               	xorlw	3	; case 6
 20433  001AFC  B4D8               	btfsc	status,2,c
 20434  001AFE  D737               	goto	l2062
 20435  001B00  0A01               	xorlw	1	; case 7
 20436  001B02  B4D8               	btfsc	status,2,c
 20437  001B04  D772               	goto	l2067
 20438  001B06  0A0F               	xorlw	15	; case 8
 20439  001B08  B4D8               	btfsc	status,2,c
 20440  001B0A  D7CF               	goto	l2071
 20441  001B0C                     l2057:
 20442                           
 20443                           ; BSR set to: 0
 20444                           
 20445                           ; BSR set to: 0
 20446  001B0C  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20447  001B0E                     l2047:
 20448                           
 20449                           ; BSR set to: 0
 20450                           
 20451                           ; BSR set to: 0
 20452  001B0E  0102               	movlb	2	; () banked
 20453  001B10  5198               	movf	(_loRa+152)& (0+255),w,b
 20454  001B12  0100               	movlb	0	; () banked
 20455  001B14  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20456  001B16  A0D8               	btfss	status,0,c
 20457  001B18  D5E2               	goto	l2048
 20458  001B1A                     u8790:
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;lorawan.c: 1957: }
 20462                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20463                           
 20464                           ; BSR set to: 0
 20465  001B1A  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20466  001B1E  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20467  001B22  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20468                           
 20469                           ; BSR set to: 0
 20470  001B26  0012               	return		;funcret
 20471  001B28                     __end_of_IncludeMacCommandsResponse:
 20472                           	opt stack 0
 20473                           tosu	equ	0xFFF
 20474                           tosh	equ	0xFFE
 20475                           tosl	equ	0xFFD
 20476                           pclath	equ	0xFFA
 20477                           tblptru	equ	0xFF8
 20478                           tblptrh	equ	0xFF7
 20479                           tblptrl	equ	0xFF6
 20480                           tablat	equ	0xFF5
 20481                           prodh	equ	0xFF4
 20482                           prodl	equ	0xFF3
 20483                           intcon	equ	0xFF2
 20484                           intcon2	equ	0xFF1
 20485                           intcon3	equ	0xFF0
 20486                           indf0	equ	0xFEF
 20487                           postinc0	equ	0xFEE
 20488                           fsr0h	equ	0xFEA
 20489                           fsr0l	equ	0xFE9
 20490                           wreg	equ	0xFE8
 20491                           postinc1	equ	0xFE6
 20492                           postdec1	equ	0xFE5
 20493                           plusw1	equ	0xFE3
 20494                           fsr1h	equ	0xFE2
 20495                           fsr1l	equ	0xFE1
 20496                           indf2	equ	0xFDF
 20497                           postinc2	equ	0xFDE
 20498                           postdec2	equ	0xFDD
 20499                           plusw2	equ	0xFDB
 20500                           fsr2h	equ	0xFDA
 20501                           fsr2l	equ	0xFD9
 20502                           status	equ	0xFD8
 20503                           
 20504 ;; *************** function _RADIO_GetPacketSnr *****************
 20505 ;; Defined at:
 20506 ;;		line 1522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;		None
 20509 ;; Auto vars:     Size  Location     Type
 20510 ;;		None
 20511 ;; Return value:  Size  Location     Type
 20512 ;;                  1    wreg      char 
 20513 ;; Registers used:
 20514 ;;		wreg, status,2
 20515 ;; Tracked objects:
 20516 ;;		On entry : 0/0
 20517 ;;		On exit  : 0/0
 20518 ;;		Unchanged: 0/0
 20519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20524 ;;Total ram usage:        0 bytes
 20525 ;; Hardware stack levels used:    1
 20526 ;; Hardware stack levels required when called:    7
 20527 ;; This function calls:
 20528 ;;		Nothing
 20529 ;; This function is called by:
 20530 ;;		_IncludeMacCommandsResponse
 20531 ;; This function uses a non-reentrant model
 20532 ;;
 20533                           
 20534                           	psect	text102
 20535  007E6A                     __ptext102:
 20536                           	opt stack 0
 20537  007E6A                     _RADIO_GetPacketSnr:
 20538                           	opt stack 20
 20539                           
 20540                           ;radio_driver_SX1276.c: 1524: return RadioConfiguration.packetSNR;
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;incstack = 0
 20544  007E6A  0101               	movlb	1	; () banked
 20545  007E6C  51A6               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20546  007E6E  0012               	return	
 20547  007E70                     __end_of_RADIO_GetPacketSnr:
 20548                           	opt stack 0
 20549                           tosu	equ	0xFFF
 20550                           tosh	equ	0xFFE
 20551                           tosl	equ	0xFFD
 20552                           pclath	equ	0xFFA
 20553                           tblptru	equ	0xFF8
 20554                           tblptrh	equ	0xFF7
 20555                           tblptrl	equ	0xFF6
 20556                           tablat	equ	0xFF5
 20557                           prodh	equ	0xFF4
 20558                           prodl	equ	0xFF3
 20559                           intcon	equ	0xFF2
 20560                           intcon2	equ	0xFF1
 20561                           intcon3	equ	0xFF0
 20562                           indf0	equ	0xFEF
 20563                           postinc0	equ	0xFEE
 20564                           fsr0h	equ	0xFEA
 20565                           fsr0l	equ	0xFE9
 20566                           wreg	equ	0xFE8
 20567                           postinc1	equ	0xFE6
 20568                           postdec1	equ	0xFE5
 20569                           plusw1	equ	0xFE3
 20570                           fsr1h	equ	0xFE2
 20571                           fsr1l	equ	0xFE1
 20572                           indf2	equ	0xFDF
 20573                           postinc2	equ	0xFDE
 20574                           postdec2	equ	0xFDD
 20575                           plusw2	equ	0xFDB
 20576                           fsr2h	equ	0xFDA
 20577                           fsr2l	equ	0xFD9
 20578                           status	equ	0xFD8
 20579                           
 20580 ;; *************** function _FindSmallestDataRate *****************
 20581 ;; Defined at:
 20582 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20583 ;; Parameters:    Size  Location     Type
 20584 ;;		None
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20587 ;;  i               1    2[BANK0 ] unsigned char 
 20588 ;;  found           1    1[BANK0 ] unsigned char 
 20589 ;; Return value:  Size  Location     Type
 20590 ;;                  1    wreg      unsigned char 
 20591 ;; Registers used:
 20592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20593 ;; Tracked objects:
 20594 ;;		On entry : 0/0
 20595 ;;		On exit  : 0/0
 20596 ;;		Unchanged: 0/0
 20597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20601 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20602 ;;Total ram usage:        4 bytes
 20603 ;; Hardware stack levels used:    1
 20604 ;; Hardware stack levels required when called:    7
 20605 ;; This function calls:
 20606 ;;		Nothing
 20607 ;; This function is called by:
 20608 ;;		_AckRetransmissionCallback
 20609 ;;		_AssemblePacket
 20610 ;; This function uses a non-reentrant model
 20611 ;;
 20612                           
 20613                           	psect	text103
 20614  005822                     __ptext103:
 20615                           	opt stack 0
 20616  005822                     _FindSmallestDataRate:
 20617                           	opt stack 21
 20618                           
 20619                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;incstack = 0
 20623  005822  0E00               	movlw	0
 20624  005824  0100               	movlb	0	; () banked
 20625  005826  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20626                           
 20627                           ;lorawan.c: 1966: bool found = 0;
 20628  005828  0E00               	movlw	0
 20629  00582A  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20630                           
 20631                           ; BSR set to: 0
 20632                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20633  00582C  0102               	movlb	2	; () banked
 20634  00582E  51D0               	movf	(_loRa+208)& (0+255),w,b
 20635  005830  5DDC               	subwf	(_loRa+220)& (0+255),w,b
 20636  005832  B0D8               	btfsc	status,0,c
 20637  005834  D05E               	goto	l2088
 20638                           
 20639                           ; BSR set to: 2
 20640                           ;lorawan.c: 1969: {
 20641                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20642  005836  05D0               	decf	(_loRa+208)& (0+255),w,b
 20643  005838  0100               	movlb	0	; () banked
 20644  00583A  D04C               	goto	L13
 20645  00583C                     
 20646                           ; BSR set to: 0
 20647                           ;lorawan.c: 1973: {
 20648                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20649                           
 20650                           ; BSR set to: 0
 20651  00583C  0E00               	movlw	0
 20652  00583E  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20653  005840  D039               	goto	l2080
 20654  005842                     
 20655                           ; BSR set to: 0
 20656                           ;lorawan.c: 1975: {
 20657                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20658                           
 20659                           ; BSR set to: 0
 20660  005842  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20661  005844  0D02               	mullw	2
 20662  005846  0E01               	movlw	1
 20663  005848  26F3               	addwf	prodl,f,c
 20664  00584A  0E00               	movlw	0
 20665  00584C  22F4               	addwfc	prodh,f,c
 20666  00584E  0E00               	movlw	low _Channels
 20667  005850  24F3               	addwf	prodl,w,c
 20668  005852  6ED9               	movwf	fsr2l,c
 20669  005854  0E04               	movlw	high _Channels
 20670  005856  20F4               	addwfc	prodh,w,c
 20671  005858  6EDA               	movwf	fsr2h,c
 20672  00585A  0104               	movlb	4	; () banked
 20673  00585C  50DF               	movf	223,w,c
 20674  00585E  0B0F               	andlw	15
 20675  005860  0100               	movlb	0	; () banked
 20676  005862  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20677  005864  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20678  005866  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20679  005868  A0D8               	btfss	status,0,c
 20680  00586A  D023               	goto	l2082
 20681                           
 20682                           ; BSR set to: 0
 20683  00586C  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20684  00586E  0D02               	mullw	2
 20685  005870  0E01               	movlw	1
 20686  005872  26F3               	addwf	prodl,f,c
 20687  005874  0E00               	movlw	0
 20688  005876  22F4               	addwfc	prodh,f,c
 20689  005878  0E00               	movlw	low _Channels
 20690  00587A  24F3               	addwf	prodl,w,c
 20691  00587C  6ED9               	movwf	fsr2l,c
 20692  00587E  0E04               	movlw	high _Channels
 20693  005880  20F4               	addwfc	prodh,w,c
 20694  005882  6EDA               	movwf	fsr2h,c
 20695  005884  0104               	movlb	4	; () banked
 20696  005886  38DF               	swapf	223,w,c
 20697  005888  0B0F               	andlw	15
 20698  00588A  0100               	movlb	0	; () banked
 20699  00588C  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20700  00588E  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20701  005890  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20702  005892  A0D8               	btfss	status,0,c
 20703  005894  D00E               	goto	l2082
 20704                           
 20705                           ; BSR set to: 0
 20706  005896  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20707  005898  0D02               	mullw	2
 20708  00589A  0E00               	movlw	low _Channels
 20709  00589C  24F3               	addwf	prodl,w,c
 20710  00589E  6ED9               	movwf	fsr2l,c
 20711  0058A0  0E04               	movlw	high _Channels
 20712  0058A2  20F4               	addwfc	prodh,w,c
 20713  0058A4  6EDA               	movwf	fsr2h,c
 20714  0058A6  04DE               	decf	postinc2,w,c
 20715  0058A8  A4D8               	btfss	status,2,c
 20716  0058AA  D003               	goto	l2082
 20717                           
 20718                           ; BSR set to: 0
 20719                           ;lorawan.c: 1977: {
 20720                           ;lorawan.c: 1978: found = 1;
 20721  0058AC  0E01               	movlw	1
 20722  0058AE  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20723                           
 20724                           ;lorawan.c: 1979: break;
 20725  0058B0  D007               	goto	u8490
 20726  0058B2                     l2082:
 20727                           
 20728                           ; BSR set to: 0
 20729                           
 20730                           ; BSR set to: 0
 20731  0058B2  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20732  0058B4                     l2080:
 20733                           
 20734                           ; BSR set to: 0
 20735                           
 20736                           ; BSR set to: 0
 20737  0058B4  0102               	movlb	2	; () banked
 20738  0058B6  51DE               	movf	(_loRa+222)& (0+255),w,b
 20739  0058B8  0100               	movlb	0	; () banked
 20740  0058BA  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20741  0058BC  A0D8               	btfss	status,0,c
 20742  0058BE  D7C1               	goto	l2081
 20743  0058C0                     u8490:
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;lorawan.c: 1980: }
 20747                           ;lorawan.c: 1981: }
 20748                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 20749                           
 20750                           ; BSR set to: 0
 20751  0058C0  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20752  0058C2  A4D8               	btfss	status,2,c
 20753  0058C4  D008               	goto	l2084
 20754                           
 20755                           ; BSR set to: 0
 20756  0058C6  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20757  0058C8  0102               	movlb	2	; () banked
 20758  0058CA  5DDC               	subwf	(_loRa+220)& (0+255),w,b
 20759  0058CC  B0D8               	btfsc	status,0,c
 20760  0058CE  D003               	goto	l2084
 20761                           
 20762                           ; BSR set to: 2
 20763                           ;lorawan.c: 1983: {
 20764                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 20765  0058D0  0100               	movlb	0	; () banked
 20766  0058D2  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20767  0058D4                     L13:
 20768  0058D4  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20769  0058D6                     l2084:
 20770                           
 20771                           ; BSR set to: 0
 20772                           
 20773                           ; BSR set to: 0
 20774  0058D6  0100               	movlb	0	; () banked
 20775  0058D8  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20776  0058DA  A4D8               	btfss	status,2,c
 20777  0058DC  D006               	goto	u8530
 20778                           
 20779                           ; BSR set to: 0
 20780  0058DE  0102               	movlb	2	; () banked
 20781  0058E0  51DC               	movf	(_loRa+220)& (0+255),w,b
 20782  0058E2  0100               	movlb	0	; () banked
 20783  0058E4  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20784  0058E6  B0D8               	btfsc	status,0,c
 20785  0058E8  D7A9               	goto	l2079
 20786  0058EA                     u8530:
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;lorawan.c: 1985: }
 20790                           ;lorawan.c: 1986: }
 20791                           ;lorawan.c: 1988: if (found == 1)
 20792                           
 20793                           ; BSR set to: 0
 20794                           
 20795                           ; BSR set to: 0
 20796  0058EA  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20797  0058EC  B4D8               	btfsc	status,2,c
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;lorawan.c: 1989: {
 20801                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20802  0058EE  C063  F2D0         	movff	FindSmallestDataRate@dataRate,_loRa+208
 20803  0058F2                     l2088:
 20804                           
 20805                           ;lorawan.c: 1991: }
 20806                           ;lorawan.c: 1992: }
 20807                           ;lorawan.c: 1994: return found;
 20808                           
 20809                           ; BSR set to: 0
 20810                           
 20811                           ; BSR set to: 0
 20812  0058F2  0100               	movlb	0	; () banked
 20813  0058F4  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20814  0058F6  0012               	return	
 20815  0058F8                     __end_of_FindSmallestDataRate:
 20816                           	opt stack 0
 20817                           tosu	equ	0xFFF
 20818                           tosh	equ	0xFFE
 20819                           tosl	equ	0xFFD
 20820                           pclath	equ	0xFFA
 20821                           tblptru	equ	0xFF8
 20822                           tblptrh	equ	0xFF7
 20823                           tblptrl	equ	0xFF6
 20824                           tablat	equ	0xFF5
 20825                           prodh	equ	0xFF4
 20826                           prodl	equ	0xFF3
 20827                           intcon	equ	0xFF2
 20828                           intcon2	equ	0xFF1
 20829                           intcon3	equ	0xFF0
 20830                           indf0	equ	0xFEF
 20831                           postinc0	equ	0xFEE
 20832                           fsr0h	equ	0xFEA
 20833                           fsr0l	equ	0xFE9
 20834                           wreg	equ	0xFE8
 20835                           postinc1	equ	0xFE6
 20836                           postdec1	equ	0xFE5
 20837                           plusw1	equ	0xFE3
 20838                           fsr1h	equ	0xFE2
 20839                           fsr1l	equ	0xFE1
 20840                           indf2	equ	0xFDF
 20841                           postinc2	equ	0xFDE
 20842                           postdec2	equ	0xFDD
 20843                           plusw2	equ	0xFDB
 20844                           fsr2h	equ	0xFDA
 20845                           fsr2l	equ	0xFD9
 20846                           status	equ	0xFD8
 20847                           
 20848 ;; *************** function _EncryptFRMPayload *****************
 20849 ;; Defined at:
 20850 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20851 ;; Parameters:    Size  Location     Type
 20852 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 20853 ;;		 -> STR_1(5), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20854 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 20855 ;;  dir             1   52[BANK0 ] unsigned char 
 20856 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 20857 ;;  key             2   57[BANK0 ] PTR unsigned char 
 20858 ;;		 -> loRa.activationParameters(105), loRa(231), 
 20859 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 20860 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 20861 ;;		 -> macBuffer(271), radioBuffer(271), 
 20862 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 20863 ;; Auto vars:     Size  Location     Type
 20864 ;;  j               1   72[BANK0 ] unsigned char 
 20865 ;;  i               1   71[BANK0 ] unsigned char 
 20866 ;;  k               1   70[BANK0 ] unsigned char 
 20867 ;; Return value:  Size  Location     Type
 20868 ;;                  1    wreg      void 
 20869 ;; Registers used:
 20870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20871 ;; Tracked objects:
 20872 ;;		On entry : 0/0
 20873 ;;		On exit  : 0/0
 20874 ;;		Unchanged: 0/0
 20875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20876 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20877 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20878 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20879 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20880 ;;Total ram usage:       24 bytes
 20881 ;; Hardware stack levels used:    1
 20882 ;; Hardware stack levels required when called:   10
 20883 ;; This function calls:
 20884 ;;		_AESEncodeLoRa
 20885 ;;		_AssembleEncryptionBlock
 20886 ;;		___awdiv
 20887 ;; This function is called by:
 20888 ;;		_LORAWAN_RxDone
 20889 ;;		_AssemblePacket
 20890 ;; This function uses a non-reentrant model
 20891 ;;
 20892                           
 20893                           	psect	text104
 20894  003A7C                     __ptext104:
 20895                           	opt stack 0
 20896  003A7C                     _EncryptFRMPayload:
 20897                           	opt stack 18
 20898                           
 20899                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;incstack = 0
 20903  003A7C  0E00               	movlw	0
 20904  003A7E  0100               	movlb	0	; () banked
 20905  003A80  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 20906  003A82  0E00               	movlw	0
 20907  003A84  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 20908  003A86  0E00               	movlw	0
 20909  003A88  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;lorawan.c: 2209: k = bufferLength / 16;
 20913  003A8A  C093  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20914  003A8E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 20915  003A90  0E00               	movlw	0
 20916  003A92  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 20917  003A94  0E10               	movlw	16
 20918  003A96  6F62               	movwf	___awdiv@divisor& (0+255),b
 20919  003A98  ECCB  F031         	call	___awdiv	;wreg free
 20920  003A9C  0100               	movlb	0	; () banked
 20921  003A9E  5160               	movf	?___awdiv& (0+255),w,b
 20922  003AA0  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20926  003AA2  0E01               	movlw	1
 20927  003AA4  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 20928  003AA6  D06D               	goto	l2153
 20929  003AA8                     
 20930                           ; BSR set to: 0
 20931                           ;lorawan.c: 2211: {
 20932                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20933                           
 20934                           ; BSR set to: 0
 20935  003AA8  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20936  003AAC  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20937  003AB0  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20938  003AB4  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20939  003AB8  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20940  003ABC  0E01               	movlw	1
 20941  003ABE  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20942  003AC0  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20943  003AC4  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20944  003AC6  ECDD  F028         	call	_AssembleEncryptionBlock
 20945                           
 20946                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20947  003ACA  0EAA               	movlw	low _aesBuffer
 20948  003ACC  0100               	movlb	0	; () banked
 20949  003ACE  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 20950  003AD0  0E01               	movlw	high _aesBuffer
 20951  003AD2  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20952  003AD4  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20953  003AD8  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20954  003ADC  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 20955                           
 20956                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20957  003AE0  0E00               	movlw	0
 20958  003AE2  0100               	movlb	0	; () banked
 20959  003AE4  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 20960  003AE6                     l9096:
 20961                           
 20962                           ; BSR set to: 0
 20963  003AE6  0E0F               	movlw	15
 20964  003AE8  65A8               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20965  003AEA  D001               	goto	l2155
 20966  003AEC  D049               	goto	u8580
 20967  003AEE                     l2155:
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;lorawan.c: 2216: {
 20971                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 20972                           
 20973                           ; BSR set to: 0
 20974  003AEE  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20975  003AF0  0D01               	mullw	1
 20976  003AF2  50F3               	movf	prodl,w,c
 20977  003AF4  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20978  003AF6  6ED9               	movwf	fsr2l,c
 20979  003AF8  50F4               	movf	prodh,w,c
 20980  003AFA  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20981  003AFC  6EDA               	movwf	fsr2h,c
 20982  003AFE  0EF0               	movlw	240
 20983  003B00  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 20984  003B02  0EFF               	movlw	255
 20985  003B04  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 20986  003B06  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 20987  003B08  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20988  003B0A  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 20989  003B0C  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20990  003B0E  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20991  003B10  0EF0               	movlw	240
 20992  003B12  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20993  003B14  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20994  003B16  0B0F               	andlw	15
 20995  003B18  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20996  003B1A  0EF0               	movlw	240
 20997  003B1C  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20998  003B1E  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 20999  003B20  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21000  003B22  0E00               	movlw	0
 21001  003B24  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21002  003B26  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21003  003B28  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21004  003B2A  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 21005  003B2C  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21006  003B2E  C091  F0A3         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+4
 21007  003B32  C092  F0A4         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+5
 21008  003B36  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21009  003B38  27A3               	addwf	(??_EncryptFRMPayload+4)& (0+255),f,b
 21010  003B3A  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 21011  003B3C  23A4               	addwfc	(??_EncryptFRMPayload+5)& (0+255),f,b
 21012  003B3E  C0A3  FFF6         	movff	??_EncryptFRMPayload+4,tblptrl
 21013  003B42  C0A4  FFF7         	movff	??_EncryptFRMPayload+5,tblptrh
 21014  003B46  0E00               	movlw	low (__mediumconst shr (0+16))
 21015  003B48  6EF8               	movwf	tblptru,c
 21016  003B4A  0E0F               	movlw	(high __ramtop+-1)
 21017  003B4C  64F7               	cpfsgt	tblptrh,c
 21018  003B4E  D003               	bra	u8577
 21019  003B50  0008               	tblrd		*
 21020  003B52  50F5               	movf	tablat,w,c
 21021  003B54  D005               	bra	u8570
 21022  003B56                     u8577:
 21023  003B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 21024  003B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21025  003B5E  50EF               	movf	indf0,w,c
 21026  003B60                     u8570:
 21027  003B60  0100               	movlb	0	; () banked
 21028  003B62  6FA5               	movwf	(??_EncryptFRMPayload+6)& (0+255),b
 21029  003B64  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21030  003B66  0D01               	mullw	1
 21031  003B68  0EAA               	movlw	low _aesBuffer
 21032  003B6A  24F3               	addwf	prodl,w,c
 21033  003B6C  6EE9               	movwf	fsr0l,c
 21034  003B6E  0E01               	movlw	high _aesBuffer
 21035  003B70  20F4               	addwfc	prodh,w,c
 21036  003B72  6EEA               	movwf	fsr0h,c
 21037  003B74  50EF               	movf	indf0,w,c
 21038  003B76  19A5               	xorwf	(??_EncryptFRMPayload+6)& (0+255),w,b
 21039  003B78  6EDF               	movwf	indf2,c
 21040                           
 21041                           ; BSR set to: 0
 21042  003B7A  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21043                           
 21044                           ; BSR set to: 0
 21045  003B7C  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 21046  003B7E  D7B3               	goto	l9096
 21047  003B80                     u8580:
 21048                           
 21049                           ; BSR set to: 0
 21050                           
 21051                           ; BSR set to: 0
 21052  003B80  2BA7               	incf	EncryptFRMPayload@i& (0+255),f,b
 21053  003B82                     l2153:
 21054                           
 21055                           ; BSR set to: 0
 21056                           
 21057                           ; BSR set to: 0
 21058  003B82  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 21059  003B84  5DA6               	subwf	EncryptFRMPayload@k& (0+255),w,b
 21060  003B86  B0D8               	btfsc	status,0,c
 21061  003B88  D78F               	goto	l2154
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;lorawan.c: 2218: }
 21065                           ;lorawan.c: 2219: }
 21066                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 21067                           
 21068                           ; BSR set to: 0
 21069  003B8A  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21070  003B8E  0E0F               	movlw	15
 21071  003B90  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21072  003B92  B4D8               	btfsc	status,2,c
 21073  003B94  0012               	return	
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;lorawan.c: 2222: {
 21077                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21078  003B96  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21079  003B9A  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21080  003B9E  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21081  003BA2  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21082  003BA6  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21083  003BAA  0E01               	movlw	1
 21084  003BAC  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21085  003BAE  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21086  003BB2  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 21087  003BB4  ECDD  F028         	call	_AssembleEncryptionBlock
 21088                           
 21089                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 21090  003BB8  0EAA               	movlw	low _aesBuffer
 21091  003BBA  0100               	movlb	0	; () banked
 21092  003BBC  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21093  003BBE  0E01               	movlw	high _aesBuffer
 21094  003BC0  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21095  003BC2  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21096  003BC6  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21097  003BCA  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 21098                           
 21099                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 21100  003BCE  0E00               	movlw	0
 21101  003BD0  0100               	movlb	0	; () banked
 21102  003BD2  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 21103  003BD4  D036               	goto	l2159
 21104  003BD6                     
 21105                           ; BSR set to: 0
 21106                           ;lorawan.c: 2227: {
 21107                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 21108                           
 21109                           ; BSR set to: 0
 21110  003BD6  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21111  003BD8  0D01               	mullw	1
 21112  003BDA  50F3               	movf	prodl,w,c
 21113  003BDC  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21114  003BDE  6ED9               	movwf	fsr2l,c
 21115  003BE0  50F4               	movf	prodh,w,c
 21116  003BE2  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21117  003BE4  6EDA               	movwf	fsr2h,c
 21118  003BE6  51A6               	movf	EncryptFRMPayload@k& (0+255),w,b
 21119  003BE8  0D10               	mullw	16
 21120  003BEA  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21121  003BEC  26F3               	addwf	prodl,f,c
 21122  003BEE  0E00               	movlw	0
 21123  003BF0  22F4               	addwfc	prodh,f,c
 21124  003BF2  C091  F09F         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 21125  003BF6  C092  F0A0         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 21126  003BFA  50F3               	movf	prodl,w,c
 21127  003BFC  279F               	addwf	??_EncryptFRMPayload& (0+255),f,b
 21128  003BFE  50F4               	movf	prodh,w,c
 21129  003C00  23A0               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 21130  003C02  C09F  FFF6         	movff	??_EncryptFRMPayload,tblptrl
 21131  003C06  C0A0  FFF7         	movff	??_EncryptFRMPayload+1,tblptrh
 21132  003C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 21133  003C0C  6EF8               	movwf	tblptru,c
 21134  003C0E  0E0F               	movlw	(high __ramtop+-1)
 21135  003C10  64F7               	cpfsgt	tblptrh,c
 21136  003C12  D003               	bra	u8617
 21137  003C14  0008               	tblrd		*
 21138  003C16  50F5               	movf	tablat,w,c
 21139  003C18  D005               	bra	u8610
 21140  003C1A                     u8617:
 21141  003C1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21142  003C1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21143  003C22  50EF               	movf	indf0,w,c
 21144  003C24                     u8610:
 21145  003C24  0100               	movlb	0	; () banked
 21146  003C26  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 21147  003C28  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21148  003C2A  0D01               	mullw	1
 21149  003C2C  0EAA               	movlw	low _aesBuffer
 21150  003C2E  24F3               	addwf	prodl,w,c
 21151  003C30  6EE9               	movwf	fsr0l,c
 21152  003C32  0E01               	movlw	high _aesBuffer
 21153  003C34  20F4               	addwfc	prodh,w,c
 21154  003C36  6EEA               	movwf	fsr0h,c
 21155  003C38  50EF               	movf	indf0,w,c
 21156  003C3A  19A1               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21157  003C3C  6EDF               	movwf	indf2,c
 21158                           
 21159                           ; BSR set to: 0
 21160  003C3E  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21161                           
 21162                           ; BSR set to: 0
 21163  003C40  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 21164  003C42                     l2159:
 21165                           
 21166                           ; BSR set to: 0
 21167                           
 21168                           ; BSR set to: 0
 21169  003C42  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21170  003C46  0E0F               	movlw	15
 21171  003C48  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21172  003C4A  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21173  003C4C  5DA8               	subwf	EncryptFRMPayload@j& (0+255),w,b
 21174  003C4E  B0D8               	btfsc	status,0,c
 21175  003C50  0012               	return	
 21176  003C52  D7C1               	goto	l2160
 21177  003C54                     __end_of_EncryptFRMPayload:
 21178                           	opt stack 0
 21179                           tosu	equ	0xFFF
 21180                           tosh	equ	0xFFE
 21181                           tosl	equ	0xFFD
 21182                           pclath	equ	0xFFA
 21183                           tblptru	equ	0xFF8
 21184                           tblptrh	equ	0xFF7
 21185                           tblptrl	equ	0xFF6
 21186                           tablat	equ	0xFF5
 21187                           prodh	equ	0xFF4
 21188                           prodl	equ	0xFF3
 21189                           intcon	equ	0xFF2
 21190                           intcon2	equ	0xFF1
 21191                           intcon3	equ	0xFF0
 21192                           indf0	equ	0xFEF
 21193                           postinc0	equ	0xFEE
 21194                           fsr0h	equ	0xFEA
 21195                           fsr0l	equ	0xFE9
 21196                           wreg	equ	0xFE8
 21197                           postinc1	equ	0xFE6
 21198                           postdec1	equ	0xFE5
 21199                           plusw1	equ	0xFE3
 21200                           fsr1h	equ	0xFE2
 21201                           fsr1l	equ	0xFE1
 21202                           indf2	equ	0xFDF
 21203                           postinc2	equ	0xFDE
 21204                           postdec2	equ	0xFDD
 21205                           plusw2	equ	0xFDB
 21206                           fsr2h	equ	0xFDA
 21207                           fsr2l	equ	0xFD9
 21208                           status	equ	0xFD8
 21209                           
 21210 ;; *************** function ___awdiv *****************
 21211 ;; Defined at:
 21212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21213 ;; Parameters:    Size  Location     Type
 21214 ;;  dividend        2    0[BANK0 ] int 
 21215 ;;  divisor         2    2[BANK0 ] int 
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;  quotient        2    6[BANK0 ] int 
 21218 ;;  sign            1    5[BANK0 ] unsigned char 
 21219 ;;  counter         1    4[BANK0 ] unsigned char 
 21220 ;; Return value:  Size  Location     Type
 21221 ;;                  2    0[BANK0 ] int 
 21222 ;; Registers used:
 21223 ;;		wreg, status,2, status,0
 21224 ;; Tracked objects:
 21225 ;;		On entry : 0/0
 21226 ;;		On exit  : 0/0
 21227 ;;		Unchanged: 0/0
 21228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21230 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21232 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21233 ;;Total ram usage:        8 bytes
 21234 ;; Hardware stack levels used:    1
 21235 ;; Hardware stack levels required when called:    7
 21236 ;; This function calls:
 21237 ;;		Nothing
 21238 ;; This function is called by:
 21239 ;;		_EncryptFRMPayload
 21240 ;; This function uses a non-reentrant model
 21241 ;;
 21242                           
 21243                           	psect	text105
 21244  006396                     __ptext105:
 21245                           	opt stack 0
 21246  006396                     ___awdiv:
 21247                           	opt stack 20
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;incstack = 0
 21251  006396  0E00               	movlw	0
 21252  006398  0100               	movlb	0	; () banked
 21253  00639A  6F65               	movwf	___awdiv@sign& (0+255),b
 21254                           
 21255                           ; BSR set to: 0
 21256  00639C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21257  00639E  D006               	goto	l2664
 21258                           
 21259                           ; BSR set to: 0
 21260  0063A0  6D62               	negf	___awdiv@divisor& (0+255),b
 21261  0063A2  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 21262  0063A4  B0D8               	btfsc	status,0,c
 21263  0063A6  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 21264                           
 21265                           ; BSR set to: 0
 21266  0063A8  0E01               	movlw	1
 21267  0063AA  6F65               	movwf	___awdiv@sign& (0+255),b
 21268  0063AC                     l2664:
 21269                           
 21270                           ; BSR set to: 0
 21271                           
 21272                           ; BSR set to: 0
 21273  0063AC  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 21274  0063AE  D006               	goto	l2665
 21275                           
 21276                           ; BSR set to: 0
 21277  0063B0  6D60               	negf	___awdiv@dividend& (0+255),b
 21278  0063B2  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 21279  0063B4  B0D8               	btfsc	status,0,c
 21280  0063B6  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 21281                           
 21282                           ; BSR set to: 0
 21283  0063B8  0E01               	movlw	1
 21284  0063BA  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 21285  0063BC                     l2665:
 21286                           
 21287                           ; BSR set to: 0
 21288                           
 21289                           ; BSR set to: 0
 21290  0063BC  0E00               	movlw	0
 21291  0063BE  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 21292  0063C0  0E00               	movlw	0
 21293  0063C2  6F66               	movwf	___awdiv@quotient& (0+255),b
 21294                           
 21295                           ; BSR set to: 0
 21296  0063C4  5162               	movf	___awdiv@divisor& (0+255),w,b
 21297  0063C6  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 21298  0063C8  B4D8               	btfsc	status,2,c
 21299  0063CA  D01C               	goto	l2672
 21300                           
 21301                           ; BSR set to: 0
 21302  0063CC  0E01               	movlw	1
 21303  0063CE  6F64               	movwf	___awdiv@counter& (0+255),b
 21304  0063D0  D004               	goto	l2667
 21305  0063D2                     
 21306                           ; BSR set to: 0
 21307                           
 21308                           ; BSR set to: 0
 21309  0063D2  90D8               	bcf	status,0,c
 21310  0063D4  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 21311  0063D6  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 21312  0063D8  2B64               	incf	___awdiv@counter& (0+255),f,b
 21313  0063DA                     l2667:
 21314                           
 21315                           ; BSR set to: 0
 21316                           
 21317                           ; BSR set to: 0
 21318  0063DA  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21319  0063DC  D7FA               	goto	l2668
 21320  0063DE                     u7900:
 21321                           
 21322                           ; BSR set to: 0
 21323                           
 21324                           ; BSR set to: 0
 21325                           
 21326                           ; BSR set to: 0
 21327  0063DE  90D8               	bcf	status,0,c
 21328  0063E0  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 21329  0063E2  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 21330                           
 21331                           ; BSR set to: 0
 21332  0063E4  5162               	movf	___awdiv@divisor& (0+255),w,b
 21333  0063E6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 21334  0063E8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21335  0063EA  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 21336  0063EC  A0D8               	btfss	status,0,c
 21337  0063EE  D005               	goto	l2671
 21338                           
 21339                           ; BSR set to: 0
 21340  0063F0  5162               	movf	___awdiv@divisor& (0+255),w,b
 21341  0063F2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 21342  0063F4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21343  0063F6  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 21344                           
 21345                           ; BSR set to: 0
 21346  0063F8  8166               	bsf	___awdiv@quotient& (0+255),0,b
 21347  0063FA                     l2671:
 21348                           
 21349                           ; BSR set to: 0
 21350                           
 21351                           ; BSR set to: 0
 21352  0063FA  90D8               	bcf	status,0,c
 21353  0063FC  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 21354  0063FE  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 21355                           
 21356                           ; BSR set to: 0
 21357  006400  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 21358  006402  D7ED               	goto	u7900
 21359  006404                     l2672:
 21360                           
 21361                           ; BSR set to: 0
 21362                           
 21363                           ; BSR set to: 0
 21364                           
 21365                           ; BSR set to: 0
 21366  006404  5165               	movf	___awdiv@sign& (0+255),w,b
 21367  006406  B4D8               	btfsc	status,2,c
 21368  006408  D004               	goto	l2673
 21369                           
 21370                           ; BSR set to: 0
 21371  00640A  6D66               	negf	___awdiv@quotient& (0+255),b
 21372  00640C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 21373  00640E  B0D8               	btfsc	status,0,c
 21374  006410  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 21375  006412                     l2673:
 21376                           
 21377                           ; BSR set to: 0
 21378                           
 21379                           ; BSR set to: 0
 21380  006412  C066  F060         	movff	___awdiv@quotient,?___awdiv
 21381  006416  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 21382  00641A  0012               	return	
 21383  00641C                     __end_of___awdiv:
 21384                           	opt stack 0
 21385                           tosu	equ	0xFFF
 21386                           tosh	equ	0xFFE
 21387                           tosl	equ	0xFFD
 21388                           pclath	equ	0xFFA
 21389                           tblptru	equ	0xFF8
 21390                           tblptrh	equ	0xFF7
 21391                           tblptrl	equ	0xFF6
 21392                           tablat	equ	0xFF5
 21393                           prodh	equ	0xFF4
 21394                           prodl	equ	0xFF3
 21395                           intcon	equ	0xFF2
 21396                           intcon2	equ	0xFF1
 21397                           intcon3	equ	0xFF0
 21398                           indf0	equ	0xFEF
 21399                           postinc0	equ	0xFEE
 21400                           fsr0h	equ	0xFEA
 21401                           fsr0l	equ	0xFE9
 21402                           wreg	equ	0xFE8
 21403                           postinc1	equ	0xFE6
 21404                           postdec1	equ	0xFE5
 21405                           plusw1	equ	0xFE3
 21406                           fsr1h	equ	0xFE2
 21407                           fsr1l	equ	0xFE1
 21408                           indf2	equ	0xFDF
 21409                           postinc2	equ	0xFDE
 21410                           postdec2	equ	0xFDD
 21411                           plusw2	equ	0xFDB
 21412                           fsr2h	equ	0xFDA
 21413                           fsr2l	equ	0xFD9
 21414                           status	equ	0xFD8
 21415                           
 21416 ;; *************** function _AssembleEncryptionBlock *****************
 21417 ;; Defined at:
 21418 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21419 ;; Parameters:    Size  Location     Type
 21420 ;;  dir             1    wreg     unsigned char 
 21421 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 21422 ;;  blockId         1   15[BANK0 ] unsigned char 
 21423 ;;  firstByte       1   16[BANK0 ] unsigned char 
 21424 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  dir             1   18[BANK0 ] unsigned char 
 21427 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      void 
 21430 ;; Registers used:
 21431 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21437 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21440 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21441 ;;Total ram usage:        9 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:    8
 21444 ;; This function calls:
 21445 ;;		_memcpy
 21446 ;;		_memset
 21447 ;; This function is called by:
 21448 ;;		_LORAWAN_RxDone
 21449 ;;		_AssemblePacket
 21450 ;;		_EncryptFRMPayload
 21451 ;; This function uses a non-reentrant model
 21452 ;;
 21453                           
 21454                           	psect	text106
 21455  0051BA                     __ptext106:
 21456                           	opt stack 0
 21457  0051BA                     _AssembleEncryptionBlock:
 21458                           	opt stack 19
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;incstack = 0
 21462                           ;AssembleEncryptionBlock@dir stored from wreg
 21463  0051BA  0100               	movlb	0	; () banked
 21464  0051BC  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 21465                           
 21466                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 21467  0051BE  0E00               	movlw	0
 21468  0051C0  0100               	movlb	0	; () banked
 21469  0051C2  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21470                           
 21471                           ; BSR set to: 0
 21472                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 21473  0051C4  0EAA               	movlw	low _aesBuffer
 21474  0051C6  6F60               	movwf	memset@p1& (0+255),b
 21475  0051C8  0E01               	movlw	high _aesBuffer
 21476  0051CA  6F61               	movwf	(memset@p1+1)& (0+255),b
 21477  0051CC  0E00               	movlw	0
 21478  0051CE  6F63               	movwf	(memset@c+1)& (0+255),b
 21479  0051D0  0E00               	movlw	0
 21480  0051D2  6F62               	movwf	memset@c& (0+255),b
 21481  0051D4  0E00               	movlw	0
 21482  0051D6  6F65               	movwf	(memset@n+1)& (0+255),b
 21483  0051D8  0E10               	movlw	16
 21484  0051DA  6F64               	movwf	memset@n& (0+255),b
 21485  0051DC  EC9D  F03B         	call	_memset	;wreg free
 21486                           
 21487                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 21488  0051E0  0100               	movlb	0	; () banked
 21489  0051E2  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21490  0051E4  0D01               	mullw	1
 21491  0051E6  0EAA               	movlw	low _aesBuffer
 21492  0051E8  24F3               	addwf	prodl,w,c
 21493  0051EA  6ED9               	movwf	fsr2l,c
 21494  0051EC  0E01               	movlw	high _aesBuffer
 21495  0051EE  20F4               	addwfc	prodh,w,c
 21496  0051F0  6EDA               	movwf	fsr2h,c
 21497  0051F2  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 21498                           
 21499                           ; BSR set to: 0
 21500                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 21501  0051F6  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21502  0051F8  0F05               	addlw	5
 21503  0051FA  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 21507  0051FC  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21508  0051FE  0D01               	mullw	1
 21509  005200  0EAA               	movlw	low _aesBuffer
 21510  005202  24F3               	addwf	prodl,w,c
 21511  005204  6ED9               	movwf	fsr2l,c
 21512  005206  0E01               	movlw	high _aesBuffer
 21513  005208  20F4               	addwfc	prodh,w,c
 21514  00520A  6EDA               	movwf	fsr2h,c
 21515  00520C  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 21516                           
 21517                           ; BSR set to: 0
 21518  005210  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;lorawan.c: 2168: if (0 == multicastStatus)
 21522  005212  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 21523  005214  A4D8               	btfss	status,2,c
 21524  005216  D013               	goto	l2142
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;lorawan.c: 2169: {
 21528                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 21529  005218  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21530  00521A  0D01               	mullw	1
 21531  00521C  0EAA               	movlw	low _aesBuffer
 21532  00521E  24F3               	addwf	prodl,w,c
 21533  005220  6F60               	movwf	memcpy@d1& (0+255),b
 21534  005222  0E01               	movlw	high _aesBuffer
 21535  005224  20F4               	addwfc	prodh,w,c
 21536  005226  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21537  005228  0E1E               	movlw	low (_loRa+30)
 21538  00522A  6F62               	movwf	memcpy@s1& (0+255),b
 21539  00522C  0E02               	movlw	high (_loRa+30)
 21540  00522E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21541  005230  0E00               	movlw	0
 21542  005232  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21543  005234  0E04               	movlw	4
 21544  005236  6F64               	movwf	memcpy@n& (0+255),b
 21545  005238  EC3E  F036         	call	_memcpy	;wreg free
 21546  00523C  D012               	goto	l8638
 21547  00523E                     l2142:
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;lorawan.c: 2173: else
 21551                           ;lorawan.c: 2174: {
 21552                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 21553                           
 21554                           ; BSR set to: 0
 21555  00523E  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21556  005240  0D01               	mullw	1
 21557  005242  0EAA               	movlw	low _aesBuffer
 21558  005244  24F3               	addwf	prodl,w,c
 21559  005246  6F60               	movwf	memcpy@d1& (0+255),b
 21560  005248  0E01               	movlw	high _aesBuffer
 21561  00524A  20F4               	addwfc	prodh,w,c
 21562  00524C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21563  00524E  0E62               	movlw	low (_loRa+98)
 21564  005250  6F62               	movwf	memcpy@s1& (0+255),b
 21565  005252  0E02               	movlw	high (_loRa+98)
 21566  005254  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21567  005256  0E00               	movlw	0
 21568  005258  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21569  00525A  0E04               	movlw	4
 21570  00525C  6F64               	movwf	memcpy@n& (0+255),b
 21571  00525E  EC3E  F036         	call	_memcpy	;wreg free
 21572  005262                     l8638:
 21573                           
 21574                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 21575  005262  0100               	movlb	0	; () banked
 21576  005264  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21577  005266  0F04               	addlw	4
 21578  005268  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21579                           
 21580                           ; BSR set to: 0
 21581                           ;lorawan.c: 2177: }
 21582                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 21583                           
 21584                           ; BSR set to: 0
 21585  00526A  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21586  00526C  0D01               	mullw	1
 21587  00526E  0EAA               	movlw	low _aesBuffer
 21588  005270  24F3               	addwf	prodl,w,c
 21589  005272  6F60               	movwf	memcpy@d1& (0+255),b
 21590  005274  0E01               	movlw	high _aesBuffer
 21591  005276  20F4               	addwfc	prodh,w,c
 21592  005278  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21593  00527A  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 21594  00527C  6F62               	movwf	memcpy@s1& (0+255),b
 21595  00527E  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 21596  005280  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21597  005282  0E00               	movlw	0
 21598  005284  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21599  005286  0E04               	movlw	4
 21600  005288  6F64               	movwf	memcpy@n& (0+255),b
 21601  00528A  EC3E  F036         	call	_memcpy	;wreg free
 21602                           
 21603                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 21604  00528E  0100               	movlb	0	; () banked
 21605  005290  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21606  005292  0F04               	addlw	4
 21607  005294  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;lorawan.c: 2182: bufferIndex ++;
 21611  005296  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21612                           
 21613                           ; BSR set to: 0
 21614                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 21615  005298  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21616  00529A  0D01               	mullw	1
 21617  00529C  0EAA               	movlw	low _aesBuffer
 21618  00529E  24F3               	addwf	prodl,w,c
 21619  0052A0  6ED9               	movwf	fsr2l,c
 21620  0052A2  0E01               	movlw	high _aesBuffer
 21621  0052A4  20F4               	addwfc	prodh,w,c
 21622  0052A6  6EDA               	movwf	fsr2h,c
 21623  0052A8  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 21624                           
 21625                           ; BSR set to: 0
 21626  0052AC  0012               	return		;funcret
 21627  0052AE                     __end_of_AssembleEncryptionBlock:
 21628                           	opt stack 0
 21629                           tosu	equ	0xFFF
 21630                           tosh	equ	0xFFE
 21631                           tosl	equ	0xFFD
 21632                           pclath	equ	0xFFA
 21633                           tblptru	equ	0xFF8
 21634                           tblptrh	equ	0xFF7
 21635                           tblptrl	equ	0xFF6
 21636                           tablat	equ	0xFF5
 21637                           prodh	equ	0xFF4
 21638                           prodl	equ	0xFF3
 21639                           intcon	equ	0xFF2
 21640                           intcon2	equ	0xFF1
 21641                           intcon3	equ	0xFF0
 21642                           indf0	equ	0xFEF
 21643                           postinc0	equ	0xFEE
 21644                           fsr0h	equ	0xFEA
 21645                           fsr0l	equ	0xFE9
 21646                           wreg	equ	0xFE8
 21647                           postinc1	equ	0xFE6
 21648                           postdec1	equ	0xFE5
 21649                           plusw1	equ	0xFE3
 21650                           fsr1h	equ	0xFE2
 21651                           fsr1l	equ	0xFE1
 21652                           indf2	equ	0xFDF
 21653                           postinc2	equ	0xFDE
 21654                           postdec2	equ	0xFDD
 21655                           plusw2	equ	0xFDB
 21656                           fsr2h	equ	0xFDA
 21657                           fsr2l	equ	0xFD9
 21658                           status	equ	0xFD8
 21659                           
 21660 ;; *************** function _CountfOptsLength *****************
 21661 ;; Defined at:
 21662 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21663 ;; Parameters:    Size  Location     Type
 21664 ;;		None
 21665 ;; Auto vars:     Size  Location     Type
 21666 ;;  i               1    7[BANK0 ] unsigned char 
 21667 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 21668 ;; Return value:  Size  Location     Type
 21669 ;;                  1    wreg      unsigned char 
 21670 ;; Registers used:
 21671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21672 ;; Tracked objects:
 21673 ;;		On entry : 0/0
 21674 ;;		On exit  : 0/0
 21675 ;;		Unchanged: 0/0
 21676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21679 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21681 ;;Total ram usage:        8 bytes
 21682 ;; Hardware stack levels used:    1
 21683 ;; Hardware stack levels required when called:    7
 21684 ;; This function calls:
 21685 ;;		Nothing
 21686 ;; This function is called by:
 21687 ;;		_LORAWAN_GetMaxPayloadSize
 21688 ;;		_AssemblePacket
 21689 ;; This function uses a non-reentrant model
 21690 ;;
 21691                           
 21692                           	psect	text107
 21693  005A9E                     __ptext107:
 21694                           	opt stack 0
 21695  005A9E                     _CountfOptsLength:
 21696                           	opt stack 21
 21697                           
 21698                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;incstack = 0
 21702  005A9E  0E00               	movlw	0
 21703  005AA0  0100               	movlb	0	; () banked
 21704  005AA2  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 21705                           
 21706                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21707  005AA4  0E00               	movlw	0
 21708  005AA6  6F67               	movwf	CountfOptsLength@i& (0+255),b
 21709  005AA8  D057               	goto	l2133
 21710  005AAA                     
 21711                           ; BSR set to: 0
 21712                           ;lorawan.c: 2139: {
 21713                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21714                           
 21715                           ; BSR set to: 0
 21716  005AAA  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21717  005AAC  0D02               	mullw	2
 21718  005AAE  0E99               	movlw	low (_loRa+153)
 21719  005AB0  24F3               	addwf	prodl,w,c
 21720  005AB2  6ED9               	movwf	fsr2l,c
 21721  005AB4  0E02               	movlw	high (_loRa+153)
 21722  005AB6  20F4               	addwfc	prodh,w,c
 21723  005AB8  6EDA               	movwf	fsr2h,c
 21724  005ABA  28DE               	incf	postinc2,w,c
 21725  005ABC  B4D8               	btfsc	status,2,c
 21726  005ABE  D04B               	goto	l2137
 21727                           
 21728                           ; BSR set to: 0
 21729                           ;lorawan.c: 2141: {
 21730                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 21731  005AC0  0EFE               	movlw	254
 21732  005AC2  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21733  005AC4  0EFF               	movlw	255
 21734  005AC6  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21735  005AC8  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21736  005ACA  0D02               	mullw	2
 21737  005ACC  0E99               	movlw	low (_loRa+153)
 21738  005ACE  24F3               	addwf	prodl,w,c
 21739  005AD0  6ED9               	movwf	fsr2l,c
 21740  005AD2  0E02               	movlw	high (_loRa+153)
 21741  005AD4  20F4               	addwfc	prodh,w,c
 21742  005AD6  6EDA               	movwf	fsr2h,c
 21743  005AD8  50DF               	movf	indf2,w,c
 21744  005ADA  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21745  005ADC  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21746  005ADE  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21747  005AE0  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21748  005AE2  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21749  005AE4  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21750  005AE6  0E62               	movlw	low _macEndDevCmdReplyLen
 21751  005AE8  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21752  005AEA  6EF6               	movwf	tblptrl,c
 21753  005AEC  0EFF               	movlw	high _macEndDevCmdReplyLen
 21754  005AEE  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21755  005AF0  6EF7               	movwf	tblptrh,c
 21756  005AF2                     	if	1	;There are 3 active tblptr bytes
 21757  005AF2  6AF8               	clrf	tblptru,c
 21758  005AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 21759  005AF6  22F8               	addwfc	tblptru,f,c
 21760  005AF8                     	endif
 21761  005AF8  0008               	tblrd		*
 21762  005AFA  50F5               	movf	tablat,w,c
 21763  005AFC  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21764  005B00  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 21765  005B02  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21766  005B04  0E00               	movlw	0
 21767  005B06  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21768  005B08  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21769  005B0A  D006               	goto	u8640
 21770  005B0C  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21771  005B0E  E12A               	bnz	l9138
 21772  005B10  0E10               	movlw	16
 21773  005B12  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21774  005B14  B0D8               	btfsc	status,0,c
 21775  005B16  D026               	goto	u8650
 21776  005B18                     u8640:
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;lorawan.c: 2143: {
 21780                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 21781  005B18  0EFE               	movlw	254
 21782  005B1A  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21783  005B1C  0EFF               	movlw	255
 21784  005B1E  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21785  005B20  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21786  005B22  0D02               	mullw	2
 21787  005B24  0E99               	movlw	low (_loRa+153)
 21788  005B26  24F3               	addwf	prodl,w,c
 21789  005B28  6ED9               	movwf	fsr2l,c
 21790  005B2A  0E02               	movlw	high (_loRa+153)
 21791  005B2C  20F4               	addwfc	prodh,w,c
 21792  005B2E  6EDA               	movwf	fsr2h,c
 21793  005B30  50DF               	movf	indf2,w,c
 21794  005B32  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21795  005B34  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21796  005B36  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21797  005B38  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21798  005B3A  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21799  005B3C  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21800  005B3E  0E62               	movlw	low _macEndDevCmdReplyLen
 21801  005B40  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21802  005B42  6EF6               	movwf	tblptrl,c
 21803  005B44  0EFF               	movlw	high _macEndDevCmdReplyLen
 21804  005B46  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21805  005B48  6EF7               	movwf	tblptrh,c
 21806  005B4A                     	if	1	;There are 3 active tblptr bytes
 21807  005B4A  6AF8               	clrf	tblptru,c
 21808  005B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 21809  005B4E  22F8               	addwfc	tblptru,f,c
 21810  005B50                     	endif
 21811  005B50  0008               	tblrd		*
 21812  005B52  50F5               	movf	tablat,w,c
 21813  005B54  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21814  005B56                     l2137:
 21815                           
 21816                           ; BSR set to: 0
 21817                           
 21818                           ; BSR set to: 0
 21819                           
 21820                           ; BSR set to: 0
 21821  005B56  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21822  005B58                     l2133:
 21823                           
 21824                           ; BSR set to: 0
 21825                           
 21826                           ; BSR set to: 0
 21827  005B58  0102               	movlb	2	; () banked
 21828  005B5A  5198               	movf	(_loRa+152)& (0+255),w,b
 21829  005B5C  0100               	movlb	0	; () banked
 21830  005B5E  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21831  005B60  A0D8               	btfss	status,0,c
 21832  005B62  D7A3               	goto	l2134
 21833  005B64                     u8650:
 21834  005B64                     l9138:
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;lorawan.c: 2149: }
 21838                           ;lorawan.c: 2150: }
 21839                           ;lorawan.c: 2151: }
 21840                           ;lorawan.c: 2153: return macCommandLength;
 21841  005B64  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21842  005B66  0012               	return	
 21843  005B68                     __end_of_CountfOptsLength:
 21844                           	opt stack 0
 21845                           tosu	equ	0xFFF
 21846                           tosh	equ	0xFFE
 21847                           tosl	equ	0xFFD
 21848                           pclath	equ	0xFFA
 21849                           tblptru	equ	0xFF8
 21850                           tblptrh	equ	0xFF7
 21851                           tblptrl	equ	0xFF6
 21852                           tablat	equ	0xFF5
 21853                           prodh	equ	0xFF4
 21854                           prodl	equ	0xFF3
 21855                           intcon	equ	0xFF2
 21856                           intcon2	equ	0xFF1
 21857                           intcon3	equ	0xFF0
 21858                           indf0	equ	0xFEF
 21859                           postinc0	equ	0xFEE
 21860                           fsr0h	equ	0xFEA
 21861                           fsr0l	equ	0xFE9
 21862                           wreg	equ	0xFE8
 21863                           postinc1	equ	0xFE6
 21864                           postdec1	equ	0xFE5
 21865                           plusw1	equ	0xFE3
 21866                           fsr1h	equ	0xFE2
 21867                           fsr1l	equ	0xFE1
 21868                           indf2	equ	0xFDF
 21869                           postinc2	equ	0xFDE
 21870                           postdec2	equ	0xFDD
 21871                           plusw2	equ	0xFDB
 21872                           fsr2h	equ	0xFDA
 21873                           fsr2l	equ	0xFD9
 21874                           status	equ	0xFD8
 21875                           
 21876 ;; *************** function _ExtractMic *****************
 21877 ;; Defined at:
 21878 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21879 ;; Parameters:    Size  Location     Type
 21880 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21881 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21882 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21883 ;; Auto vars:     Size  Location     Type
 21884 ;;  mic             4   19[BANK0 ] unsigned long 
 21885 ;; Return value:  Size  Location     Type
 21886 ;;                  4   11[BANK0 ] unsigned long 
 21887 ;; Registers used:
 21888 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21889 ;; Tracked objects:
 21890 ;;		On entry : 0/0
 21891 ;;		On exit  : 0/0
 21892 ;;		Unchanged: 0/0
 21893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21895 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21896 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21897 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21898 ;;Total ram usage:       12 bytes
 21899 ;; Hardware stack levels used:    1
 21900 ;; Hardware stack levels required when called:    8
 21901 ;; This function calls:
 21902 ;;		_memcpy
 21903 ;; This function is called by:
 21904 ;;		_LORAWAN_RxDone
 21905 ;; This function uses a non-reentrant model
 21906 ;;
 21907                           
 21908                           	psect	text108
 21909  006E50                     __ptext108:
 21910                           	opt stack 0
 21911  006E50                     _ExtractMic:
 21912                           	opt stack 18
 21913                           
 21914                           ;lorawan.c: 2189: uint32_t mic = 0;
 21915                           
 21916                           ; BSR set to: 0
 21917                           ;incstack = 0
 21918  006E50  0E00               	movlw	0
 21919  006E52  0100               	movlb	0	; () banked
 21920  006E54  6F73               	movwf	ExtractMic@mic& (0+255),b
 21921  006E56  0E00               	movlw	0
 21922  006E58  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 21923  006E5A  0E00               	movlw	0
 21924  006E5C  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 21925  006E5E  0E00               	movlw	0
 21926  006E60  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 21927                           
 21928                           ; BSR set to: 0
 21929                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21930  006E62  0E73               	movlw	low ExtractMic@mic
 21931  006E64  6F60               	movwf	memcpy@d1& (0+255),b
 21932  006E66  0E00               	movlw	high ExtractMic@mic
 21933  006E68  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21934  006E6A  0EFC               	movlw	252
 21935  006E6C  6F6F               	movwf	??_ExtractMic& (0+255),b
 21936  006E6E  0EFF               	movlw	255
 21937  006E70  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 21938  006E72  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 21939  006E74  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 21940  006E76  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 21941  006E78  516F               	movf	??_ExtractMic& (0+255),w,b
 21942  006E7A  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 21943  006E7C  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 21944  006E7E  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 21945  006E80  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 21946  006E82  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 21947  006E84  6F62               	movwf	memcpy@s1& (0+255),b
 21948  006E86  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 21949  006E88  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21950  006E8A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21951  006E8C  0E00               	movlw	0
 21952  006E8E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21953  006E90  0E04               	movlw	4
 21954  006E92  6F64               	movwf	memcpy@n& (0+255),b
 21955  006E94  EC3E  F036         	call	_memcpy	;wreg free
 21956                           
 21957                           ;lorawan.c: 2191: return mic;
 21958  006E98  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 21959  006E9C  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21960  006EA0  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21961  006EA4  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21962  006EA8  0012               	return	
 21963  006EAA                     __end_of_ExtractMic:
 21964                           	opt stack 0
 21965                           tosu	equ	0xFFF
 21966                           tosh	equ	0xFFE
 21967                           tosl	equ	0xFFD
 21968                           pclath	equ	0xFFA
 21969                           tblptru	equ	0xFF8
 21970                           tblptrh	equ	0xFF7
 21971                           tblptrl	equ	0xFF6
 21972                           tablat	equ	0xFF5
 21973                           prodh	equ	0xFF4
 21974                           prodl	equ	0xFF3
 21975                           intcon	equ	0xFF2
 21976                           intcon2	equ	0xFF1
 21977                           intcon3	equ	0xFF0
 21978                           indf0	equ	0xFEF
 21979                           postinc0	equ	0xFEE
 21980                           fsr0h	equ	0xFEA
 21981                           fsr0l	equ	0xFE9
 21982                           wreg	equ	0xFE8
 21983                           postinc1	equ	0xFE6
 21984                           postdec1	equ	0xFE5
 21985                           plusw1	equ	0xFE3
 21986                           fsr1h	equ	0xFE2
 21987                           fsr1l	equ	0xFE1
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           postdec2	equ	0xFDD
 21991                           plusw2	equ	0xFDB
 21992                           fsr2h	equ	0xFDA
 21993                           fsr2l	equ	0xFD9
 21994                           status	equ	0xFD8
 21995                           
 21996 ;; *************** function _ComputeSessionKeys *****************
 21997 ;; Defined at:
 21998 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21999 ;; Parameters:    Size  Location     Type
 22000 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 22001 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;		None
 22004 ;; Return value:  Size  Location     Type
 22005 ;;                  1    wreg      void 
 22006 ;; Registers used:
 22007 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22008 ;; Tracked objects:
 22009 ;;		On entry : 0/0
 22010 ;;		On exit  : 0/0
 22011 ;;		Unchanged: 0/0
 22012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22017 ;;Total ram usage:        2 bytes
 22018 ;; Hardware stack levels used:    1
 22019 ;; Hardware stack levels required when called:   10
 22020 ;; This function calls:
 22021 ;;		_AESEncodeLoRa
 22022 ;;		_PrepareSessionKeys
 22023 ;; This function is called by:
 22024 ;;		_LORAWAN_RxDone
 22025 ;; This function uses a non-reentrant model
 22026 ;;
 22027                           
 22028                           	psect	text109
 22029  00641C                     __ptext109:
 22030                           	opt stack 0
 22031  00641C                     _ComputeSessionKeys:
 22032                           	opt stack 16
 22033                           
 22034                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22035                           
 22036                           ;incstack = 0
 22037  00641C  0E32               	movlw	low (_loRa+50)
 22038  00641E  0100               	movlb	0	; () banked
 22039  006420  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22040  006422  0E02               	movlw	high (_loRa+50)
 22041  006424  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22042  006426  0E01               	movlw	1
 22043  006428  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22044  00642A  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22045  00642C  0E00               	movlw	0
 22046  00642E  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22047  006430  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22048  006432  0E04               	movlw	4
 22049  006434  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22050  006436  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22051  006438  0E00               	movlw	0
 22052  00643A  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22053  00643C  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22054  00643E  ECC8  F02E         	call	_PrepareSessionKeys	;wreg free
 22055                           
 22056                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 22057  006442  0E02               	movlw	2
 22058  006444  0102               	movlb	2	; () banked
 22059  006446  6F32               	movwf	(_loRa+50)& (0+255),b
 22060                           
 22061                           ; BSR set to: 2
 22062                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 22063  006448  0E32               	movlw	low (_loRa+50)
 22064  00644A  0100               	movlb	0	; () banked
 22065  00644C  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22066  00644E  0E02               	movlw	high (_loRa+50)
 22067  006450  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22068  006452  0E42               	movlw	low (_loRa+66)
 22069  006454  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22070  006456  0E02               	movlw	high (_loRa+66)
 22071  006458  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22072  00645A  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 22073                           
 22074                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22075  00645E  0E22               	movlw	low (_loRa+34)
 22076  006460  0100               	movlb	0	; () banked
 22077  006462  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22078  006464  0E02               	movlw	high (_loRa+34)
 22079  006466  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22080  006468  0E01               	movlw	1
 22081  00646A  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22082  00646C  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22083  00646E  0E00               	movlw	0
 22084  006470  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22085  006472  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22086  006474  0E04               	movlw	4
 22087  006476  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22088  006478  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22089  00647A  0E00               	movlw	0
 22090  00647C  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22091  00647E  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22092  006480  ECC8  F02E         	call	_PrepareSessionKeys	;wreg free
 22093                           
 22094                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 22095  006484  0E01               	movlw	1
 22096  006486  0102               	movlb	2	; () banked
 22097  006488  6F22               	movwf	(_loRa+34)& (0+255),b
 22098                           
 22099                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 22100  00648A  0E22               	movlw	low (_loRa+34)
 22101  00648C  0100               	movlb	0	; () banked
 22102  00648E  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22103  006490  0E02               	movlw	high (_loRa+34)
 22104  006492  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22105  006494  0E42               	movlw	low (_loRa+66)
 22106  006496  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22107  006498  0E02               	movlw	high (_loRa+66)
 22108  00649A  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22109  00649C  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 22110  0064A0  0012               	return		;funcret
 22111  0064A2                     __end_of_ComputeSessionKeys:
 22112                           	opt stack 0
 22113                           tosu	equ	0xFFF
 22114                           tosh	equ	0xFFE
 22115                           tosl	equ	0xFFD
 22116                           pclath	equ	0xFFA
 22117                           tblptru	equ	0xFF8
 22118                           tblptrh	equ	0xFF7
 22119                           tblptrl	equ	0xFF6
 22120                           tablat	equ	0xFF5
 22121                           prodh	equ	0xFF4
 22122                           prodl	equ	0xFF3
 22123                           intcon	equ	0xFF2
 22124                           intcon2	equ	0xFF1
 22125                           intcon3	equ	0xFF0
 22126                           indf0	equ	0xFEF
 22127                           postinc0	equ	0xFEE
 22128                           fsr0h	equ	0xFEA
 22129                           fsr0l	equ	0xFE9
 22130                           wreg	equ	0xFE8
 22131                           postinc1	equ	0xFE6
 22132                           postdec1	equ	0xFE5
 22133                           plusw1	equ	0xFE3
 22134                           fsr1h	equ	0xFE2
 22135                           fsr1l	equ	0xFE1
 22136                           indf2	equ	0xFDF
 22137                           postinc2	equ	0xFDE
 22138                           postdec2	equ	0xFDD
 22139                           plusw2	equ	0xFDB
 22140                           fsr2h	equ	0xFDA
 22141                           fsr2l	equ	0xFD9
 22142                           status	equ	0xFD8
 22143                           
 22144 ;; *************** function _PrepareSessionKeys *****************
 22145 ;; Defined at:
 22146 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 22149 ;;		 -> loRa.activationParameters(105), loRa(231), 
 22150 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 22151 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22152 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 22153 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22154 ;; Auto vars:     Size  Location     Type
 22155 ;;  index           1   17[BANK0 ] unsigned char 
 22156 ;; Return value:  Size  Location     Type
 22157 ;;                  1    wreg      void 
 22158 ;; Registers used:
 22159 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22160 ;; Tracked objects:
 22161 ;;		On entry : 0/0
 22162 ;;		On exit  : 0/0
 22163 ;;		Unchanged: 0/0
 22164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22165 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22168 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22169 ;;Total ram usage:        7 bytes
 22170 ;; Hardware stack levels used:    1
 22171 ;; Hardware stack levels required when called:    8
 22172 ;; This function calls:
 22173 ;;		_memcpy
 22174 ;;		_memset
 22175 ;; This function is called by:
 22176 ;;		_ComputeSessionKeys
 22177 ;; This function uses a non-reentrant model
 22178 ;;
 22179                           
 22180                           	psect	text110
 22181  005D90                     __ptext110:
 22182                           	opt stack 0
 22183  005D90                     _PrepareSessionKeys:
 22184                           	opt stack 17
 22185                           
 22186                           ;lorawan.c: 2047: uint8_t index = 0;
 22187                           
 22188                           ;incstack = 0
 22189  005D90  0E00               	movlw	0
 22190  005D92  0100               	movlb	0	; () banked
 22191  005D94  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22192                           
 22193                           ; BSR set to: 0
 22194                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 22195  005D96  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22196  005D98  0D01               	mullw	1
 22197  005D9A  50F3               	movf	prodl,w,c
 22198  005D9C  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22199  005D9E  6F60               	movwf	memset@p1& (0+255),b
 22200  005DA0  50F4               	movf	prodh,w,c
 22201  005DA2  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22202  005DA4  6F61               	movwf	(memset@p1+1)& (0+255),b
 22203  005DA6  0E00               	movlw	0
 22204  005DA8  6F63               	movwf	(memset@c+1)& (0+255),b
 22205  005DAA  0E00               	movlw	0
 22206  005DAC  6F62               	movwf	memset@c& (0+255),b
 22207  005DAE  0E00               	movlw	0
 22208  005DB0  6F65               	movwf	(memset@n+1)& (0+255),b
 22209  005DB2  0E10               	movlw	16
 22210  005DB4  6F64               	movwf	memset@n& (0+255),b
 22211  005DB6  EC9D  F03B         	call	_memset	;wreg free
 22212                           
 22213                           ;lorawan.c: 2050: index ++;
 22214  005DBA  0100               	movlb	0	; () banked
 22215  005DBC  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 22216                           
 22217                           ; BSR set to: 0
 22218                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 22219  005DBE  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22220  005DC0  0D01               	mullw	1
 22221  005DC2  50F3               	movf	prodl,w,c
 22222  005DC4  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22223  005DC6  6F60               	movwf	memcpy@d1& (0+255),b
 22224  005DC8  50F4               	movf	prodh,w,c
 22225  005DCA  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22226  005DCC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22227  005DCE  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 22228  005DD2  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 22229  005DD6  0E00               	movlw	0
 22230  005DD8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22231  005DDA  0E03               	movlw	3
 22232  005DDC  6F64               	movwf	memcpy@n& (0+255),b
 22233  005DDE  EC3E  F036         	call	_memcpy	;wreg free
 22234                           
 22235                           ;lorawan.c: 2053: index = index + 3;
 22236  005DE2  0100               	movlb	0	; () banked
 22237  005DE4  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22238  005DE6  0F03               	addlw	3
 22239  005DE8  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 22243  005DEA  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22244  005DEC  0D01               	mullw	1
 22245  005DEE  50F3               	movf	prodl,w,c
 22246  005DF0  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22247  005DF2  6F60               	movwf	memcpy@d1& (0+255),b
 22248  005DF4  50F4               	movf	prodh,w,c
 22249  005DF6  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22250  005DF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22251  005DFA  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 22252  005DFE  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 22253  005E02  0E00               	movlw	0
 22254  005E04  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22255  005E06  0E03               	movlw	3
 22256  005E08  6F64               	movwf	memcpy@n& (0+255),b
 22257  005E0A  EC3E  F036         	call	_memcpy	;wreg free
 22258                           
 22259                           ;lorawan.c: 2056: index = index + 3;
 22260  005E0E  0100               	movlb	0	; () banked
 22261  005E10  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22262  005E12  0F03               	addlw	3
 22263  005E14  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22264                           
 22265                           ; BSR set to: 0
 22266                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 22267  005E16  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22268  005E18  0D01               	mullw	1
 22269  005E1A  50F3               	movf	prodl,w,c
 22270  005E1C  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22271  005E1E  6F60               	movwf	memcpy@d1& (0+255),b
 22272  005E20  50F4               	movf	prodh,w,c
 22273  005E22  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22274  005E24  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22275  005E26  0EC3               	movlw	low (_loRa+195)
 22276  005E28  6F62               	movwf	memcpy@s1& (0+255),b
 22277  005E2A  0E02               	movlw	high (_loRa+195)
 22278  005E2C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22279  005E2E  0E00               	movlw	0
 22280  005E30  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22281  005E32  0E02               	movlw	2
 22282  005E34  6F64               	movwf	memcpy@n& (0+255),b
 22283  005E36  EC3E  F036         	call	_memcpy	;wreg free
 22284  005E3A  0012               	return		;funcret
 22285  005E3C                     __end_of_PrepareSessionKeys:
 22286                           	opt stack 0
 22287                           tosu	equ	0xFFF
 22288                           tosh	equ	0xFFE
 22289                           tosl	equ	0xFFD
 22290                           pclath	equ	0xFFA
 22291                           tblptru	equ	0xFF8
 22292                           tblptrh	equ	0xFF7
 22293                           tblptrl	equ	0xFF6
 22294                           tablat	equ	0xFF5
 22295                           prodh	equ	0xFF4
 22296                           prodl	equ	0xFF3
 22297                           intcon	equ	0xFF2
 22298                           intcon2	equ	0xFF1
 22299                           intcon3	equ	0xFF0
 22300                           indf0	equ	0xFEF
 22301                           postinc0	equ	0xFEE
 22302                           fsr0h	equ	0xFEA
 22303                           fsr0l	equ	0xFE9
 22304                           wreg	equ	0xFE8
 22305                           postinc1	equ	0xFE6
 22306                           postdec1	equ	0xFE5
 22307                           plusw1	equ	0xFE3
 22308                           fsr1h	equ	0xFE2
 22309                           fsr1l	equ	0xFE1
 22310                           indf2	equ	0xFDF
 22311                           postinc2	equ	0xFDE
 22312                           postdec2	equ	0xFDD
 22313                           plusw2	equ	0xFDB
 22314                           fsr2h	equ	0xFDA
 22315                           fsr2l	equ	0xFD9
 22316                           status	equ	0xFD8
 22317                           
 22318 ;; *************** function _CheckMcastFlags *****************
 22319 ;; Defined at:
 22320 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22321 ;; Parameters:    Size  Location     Type
 22322 ;;  hdr             2    0[BANK0 ] PTR struct .
 22323 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22324 ;; Auto vars:     Size  Location     Type
 22325 ;;		None
 22326 ;; Return value:  Size  Location     Type
 22327 ;;                  1    wreg      unsigned char 
 22328 ;; Registers used:
 22329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22330 ;; Tracked objects:
 22331 ;;		On entry : 0/0
 22332 ;;		On exit  : 0/0
 22333 ;;		Unchanged: 0/0
 22334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22338 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22339 ;;Total ram usage:        2 bytes
 22340 ;; Hardware stack levels used:    1
 22341 ;; Hardware stack levels required when called:    7
 22342 ;; This function calls:
 22343 ;;		Nothing
 22344 ;; This function is called by:
 22345 ;;		_LORAWAN_RxDone
 22346 ;; This function uses a non-reentrant model
 22347 ;;
 22348                           
 22349                           	psect	text111
 22350  0065AA                     __ptext111:
 22351                           	opt stack 0
 22352  0065AA                     _CheckMcastFlags:
 22353                           	opt stack 19
 22354                           
 22355                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 22356                           
 22357                           ;incstack = 0
 22358  0065AA  0100               	movlb	0	; () banked
 22359  0065AC  EE20 F005          	lfsr	2,5
 22360  0065B0  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22361  0065B2  26D9               	addwf	fsr2l,f,c
 22362  0065B4  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22363  0065B6  22DA               	addwfc	fsr2h,f,c
 22364  0065B8  BADF               	btfsc	indf2,5,c
 22365  0065BA  D012               	goto	u9970
 22366                           
 22367                           ; BSR set to: 0
 22368  0065BC  EE20 F005          	lfsr	2,5
 22369  0065C0  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22370  0065C2  26D9               	addwf	fsr2l,f,c
 22371  0065C4  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22372  0065C6  22DA               	addwfc	fsr2h,f,c
 22373  0065C8  BCDF               	btfsc	indf2,6,c
 22374  0065CA  D00A               	goto	u9970
 22375                           
 22376                           ; BSR set to: 0
 22377  0065CC  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 22378  0065D0  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 22379  0065D4  38DF               	swapf	223,w,c
 22380  0065D6  32E8               	rrcf	wreg,f,c
 22381  0065D8  0B07               	andlw	7
 22382  0065DA  0A03               	xorlw	3
 22383  0065DC  B4D8               	btfsc	status,2,c
 22384  0065DE  D002               	goto	l2123
 22385  0065E0                     u9970:
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;lorawan.c: 2110: {
 22389                           ;lorawan.c: 2111: return 0;
 22390                           
 22391                           ; BSR set to: 0
 22392  0065E0  0E00               	movlw	0
 22393                           
 22394                           ; BSR set to: 0
 22395  0065E2  0012               	return	
 22396  0065E4                     l2123:
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;lorawan.c: 2112: }
 22400                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 22401                           
 22402                           ; BSR set to: 0
 22403  0065E4  EE20 F005          	lfsr	2,5
 22404  0065E8  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22405  0065EA  26D9               	addwf	fsr2l,f,c
 22406  0065EC  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22407  0065EE  22DA               	addwfc	fsr2h,f,c
 22408  0065F0  50DF               	movf	223,w,c
 22409  0065F2  0B0F               	andlw	15
 22410  0065F4  0900               	iorlw	0
 22411  0065F6  B4D8               	btfsc	status,2,c
 22412  0065F8  D002               	goto	l2127
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;lorawan.c: 2115: {
 22416                           ;lorawan.c: 2116: return 0;
 22417  0065FA  0E00               	movlw	0
 22418                           
 22419                           ; BSR set to: 0
 22420  0065FC  0012               	return	
 22421  0065FE                     l2127:
 22422                           
 22423                           ; BSR set to: 0
 22424                           ;lorawan.c: 2118: else
 22425                           ;lorawan.c: 2119: {
 22426                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 22427                           
 22428                           ; BSR set to: 0
 22429  0065FE  EE20 F008          	lfsr	2,8
 22430  006602  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22431  006604  26D9               	addwf	fsr2l,f,c
 22432  006606  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22433  006608  22DA               	addwfc	fsr2h,f,c
 22434  00660A  50DF               	movf	indf2,w,c
 22435  00660C  A4D8               	btfss	status,2,c
 22436  00660E  D002               	goto	l2129
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;lorawan.c: 2121: {
 22440                           ;lorawan.c: 2122: return 0;
 22441  006610  0E00               	movlw	0
 22442                           
 22443                           ; BSR set to: 0
 22444  006612  0012               	return	
 22445  006614                     l2129:
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;lorawan.c: 2123: }
 22449                           ;lorawan.c: 2124: }
 22450                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 22451                           
 22452                           ; BSR set to: 0
 22453                           
 22454                           ; BSR set to: 0
 22455  006614  EE20 F005          	lfsr	2,5
 22456  006618  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22457  00661A  26D9               	addwf	fsr2l,f,c
 22458  00661C  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22459  00661E  22DA               	addwfc	fsr2h,f,c
 22460  006620  A8DF               	btfss	indf2,4,c
 22461  006622  D002               	goto	l2130
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;lorawan.c: 2127: {
 22465                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 22466  006624  0102               	movlb	2	; () banked
 22467  006626  8700               	bsf	_loRa& (0+255),3,b
 22468  006628                     l2130:
 22469                           
 22470                           ;lorawan.c: 2129: }
 22471                           ;lorawan.c: 2131: return 1;
 22472                           
 22473                           ; BSR set to: 2
 22474  006628  0E01               	movlw	1
 22475  00662A  0012               	return	
 22476  00662C                     __end_of_CheckMcastFlags:
 22477                           	opt stack 0
 22478                           tosu	equ	0xFFF
 22479                           tosh	equ	0xFFE
 22480                           tosl	equ	0xFFD
 22481                           pclath	equ	0xFFA
 22482                           tblptru	equ	0xFF8
 22483                           tblptrh	equ	0xFF7
 22484                           tblptrl	equ	0xFF6
 22485                           tablat	equ	0xFF5
 22486                           prodh	equ	0xFF4
 22487                           prodl	equ	0xFF3
 22488                           intcon	equ	0xFF2
 22489                           intcon2	equ	0xFF1
 22490                           intcon3	equ	0xFF0
 22491                           indf0	equ	0xFEF
 22492                           postinc0	equ	0xFEE
 22493                           fsr0h	equ	0xFEA
 22494                           fsr0l	equ	0xFE9
 22495                           wreg	equ	0xFE8
 22496                           postinc1	equ	0xFE6
 22497                           postdec1	equ	0xFE5
 22498                           plusw1	equ	0xFE3
 22499                           fsr1h	equ	0xFE2
 22500                           fsr1l	equ	0xFE1
 22501                           indf2	equ	0xFDF
 22502                           postinc2	equ	0xFDE
 22503                           postdec2	equ	0xFDD
 22504                           plusw2	equ	0xFDB
 22505                           fsr2h	equ	0xFDA
 22506                           fsr2l	equ	0xFD9
 22507                           status	equ	0xFD8
 22508                           
 22509 ;; *************** function _CheckFlags *****************
 22510 ;; Defined at:
 22511 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;  hdr             2    0[BANK0 ] PTR struct .
 22514 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22515 ;; Auto vars:     Size  Location     Type
 22516 ;;		None
 22517 ;; Return value:  Size  Location     Type
 22518 ;;                  1    wreg      void 
 22519 ;; Registers used:
 22520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22521 ;; Tracked objects:
 22522 ;;		On entry : 0/0
 22523 ;;		On exit  : 0/0
 22524 ;;		Unchanged: 0/0
 22525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22530 ;;Total ram usage:        2 bytes
 22531 ;; Hardware stack levels used:    1
 22532 ;; Hardware stack levels required when called:    7
 22533 ;; This function calls:
 22534 ;;		Nothing
 22535 ;; This function is called by:
 22536 ;;		_LORAWAN_RxDone
 22537 ;; This function uses a non-reentrant model
 22538 ;;
 22539                           
 22540                           	psect	text112
 22541  006D3A                     __ptext112:
 22542                           	opt stack 0
 22543  006D3A                     _CheckFlags:
 22544                           	opt stack 19
 22545                           
 22546                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 22547                           
 22548                           ;incstack = 0
 22549  006D3A  0100               	movlb	0	; () banked
 22550  006D3C  EE20 F005          	lfsr	2,5
 22551  006D40  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22552  006D42  26D9               	addwf	fsr2l,f,c
 22553  006D44  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22554  006D46  22DA               	addwfc	fsr2h,f,c
 22555  006D48  AEDF               	btfss	indf2,7,c
 22556  006D4A  D002               	goto	l2116
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;lorawan.c: 2077: {
 22560                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 22561  006D4C  0102               	movlb	2	; () banked
 22562  006D4E  8D02               	bsf	(_loRa+2)& (0+255),6,b
 22563  006D50                     l2116:
 22564                           
 22565                           ;lorawan.c: 2079: }
 22566                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 22567                           
 22568                           ; BSR set to: 2
 22569  006D50  0100               	movlb	0	; () banked
 22570  006D52  EE20 F005          	lfsr	2,5
 22571  006D56  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22572  006D58  26D9               	addwf	fsr2l,f,c
 22573  006D5A  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22574  006D5C  22DA               	addwfc	fsr2h,f,c
 22575  006D5E  A8DF               	btfss	indf2,4,c
 22576  006D60  D002               	goto	l2117
 22577                           
 22578                           ; BSR set to: 0
 22579                           ;lorawan.c: 2082: {
 22580                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 22581  006D62  0102               	movlb	2	; () banked
 22582  006D64  8700               	bsf	_loRa& (0+255),3,b
 22583  006D66                     l2117:
 22584                           
 22585                           ;lorawan.c: 2084: }
 22586                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 22587                           
 22588                           ; BSR set to: 2
 22589  006D66  0100               	movlb	0	; () banked
 22590  006D68  EE20 F005          	lfsr	2,5
 22591  006D6C  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22592  006D6E  26D9               	addwf	fsr2l,f,c
 22593  006D70  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22594  006D72  22DA               	addwfc	fsr2h,f,c
 22595  006D74  ACDF               	btfss	indf2,6,c
 22596  006D76  D002               	goto	l2118
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;lorawan.c: 2087: {
 22600                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 22601  006D78  0102               	movlb	2	; () banked
 22602  006D7A  8900               	bsf	_loRa& (0+255),4,b
 22603  006D7C                     l2118:
 22604                           
 22605                           ;lorawan.c: 2089: }
 22606                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 22607                           
 22608                           ; BSR set to: 2
 22609  006D7C  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 22610  006D80  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 22611  006D84  0100               	movlb	0	; () banked
 22612  006D86  38DF               	swapf	223,w,c
 22613  006D88  32E8               	rrcf	wreg,f,c
 22614  006D8A  0B07               	andlw	7
 22615  006D8C  0A05               	xorlw	5
 22616  006D8E  A4D8               	btfss	status,2,c
 22617  006D90  0012               	return	
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;lorawan.c: 2092: {
 22621                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 22622  006D92  0102               	movlb	2	; () banked
 22623  006D94  8300               	bsf	_loRa& (0+255),1,b
 22624  006D96  0012               	return	
 22625  006D98                     __end_of_CheckFlags:
 22626                           	opt stack 0
 22627                           tosu	equ	0xFFF
 22628                           tosh	equ	0xFFE
 22629                           tosl	equ	0xFFD
 22630                           pclath	equ	0xFFA
 22631                           tblptru	equ	0xFF8
 22632                           tblptrh	equ	0xFF7
 22633                           tblptrl	equ	0xFF6
 22634                           tablat	equ	0xFF5
 22635                           prodh	equ	0xFF4
 22636                           prodl	equ	0xFF3
 22637                           intcon	equ	0xFF2
 22638                           intcon2	equ	0xFF1
 22639                           intcon3	equ	0xFF0
 22640                           indf0	equ	0xFEF
 22641                           postinc0	equ	0xFEE
 22642                           fsr0h	equ	0xFEA
 22643                           fsr0l	equ	0xFE9
 22644                           wreg	equ	0xFE8
 22645                           postinc1	equ	0xFE6
 22646                           postdec1	equ	0xFE5
 22647                           plusw1	equ	0xFE3
 22648                           fsr1h	equ	0xFE2
 22649                           fsr1l	equ	0xFE1
 22650                           indf2	equ	0xFDF
 22651                           postinc2	equ	0xFDE
 22652                           postdec2	equ	0xFDD
 22653                           plusw2	equ	0xFDB
 22654                           fsr2h	equ	0xFDA
 22655                           fsr2l	equ	0xFD9
 22656                           status	equ	0xFD8
 22657                           
 22658 ;; *************** function _RADIO_FSKPacketSent *****************
 22659 ;; Defined at:
 22660 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22661 ;; Parameters:    Size  Location     Type
 22662 ;;		None
 22663 ;; Auto vars:     Size  Location     Type
 22664 ;;  timeOnAir       4   74[BANK0 ] unsigned long 
 22665 ;;  irqFlags        1   82[BANK0 ] unsigned char 
 22666 ;; Return value:  Size  Location     Type
 22667 ;;                  1    wreg      void 
 22668 ;; Registers used:
 22669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22670 ;; Tracked objects:
 22671 ;;		On entry : 0/0
 22672 ;;		On exit  : 0/0
 22673 ;;		Unchanged: 0/0
 22674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22676 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22677 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22678 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22679 ;;Total ram usage:       13 bytes
 22680 ;; Hardware stack levels used:    1
 22681 ;; Hardware stack levels required when called:   12
 22682 ;; This function calls:
 22683 ;;		_LORAWAN_TxDone
 22684 ;;		_RADIO_RegisterRead
 22685 ;;		_RADIO_WriteMode
 22686 ;;		_SwTimerReadValue
 22687 ;;		_SwTimerStop
 22688 ;;		___lmul
 22689 ;; This function is called by:
 22690 ;;		_RADIO_DIO0
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           
 22694                           	psect	text113
 22695  004914                     __ptext113:
 22696                           	opt stack 0
 22697  004914                     _RADIO_FSKPacketSent:
 22698                           	opt stack 16
 22699                           
 22700                           ;radio_driver_SX1276.c: 1168: uint8_t irqFlags;
 22701                           ;radio_driver_SX1276.c: 1169: uint32_t timeOnAir;
 22702                           ;radio_driver_SX1276.c: 1171: irqFlags = RADIO_RegisterRead(0x3F);
 22703                           
 22704                           ;incstack = 0
 22705  004914  0E3F               	movlw	63
 22706  004916  EC75  F03C         	call	_RADIO_RegisterRead
 22707  00491A  0100               	movlb	0	; () banked
 22708  00491C  6FB2               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;radio_driver_SX1276.c: 1172: if ((1<<(3)) == (irqFlags & (1<<(3))))
 22712  00491E  A7B2               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 22713  004920  0012               	return	
 22714                           
 22715                           ; BSR set to: 0
 22716                           ;radio_driver_SX1276.c: 1173: {
 22717                           ;radio_driver_SX1276.c: 1174: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 22718  004922  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 22719  004926  0E00               	movlw	0
 22720  004928  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 22721  00492A  0E00               	movlw	0
 22722  00492C  EC5E  F028         	call	_RADIO_WriteMode
 22723                           
 22724                           ;radio_driver_SX1276.c: 1175: RadioConfiguration.flags &= ~(1 << (0));
 22725  004930  0101               	movlb	1	; () banked
 22726  004932  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 22727                           
 22728                           ; BSR set to: 1
 22729                           ;radio_driver_SX1276.c: 1177: SwTimerStop(RadioConfiguration.watchdogTimerId);
 22730  004934  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 22731  004936  EC89  F03C         	call	_SwTimerStop
 22732                           
 22733                           ;radio_driver_SX1276.c: 1180: do { LATB3 = 0; } while(0);
 22734  00493A  968A               	bcf	3978,3,c	;volatile
 22735                           
 22736                           ;radio_driver_SX1276.c: 1183: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 22737  00493C  0101               	movlb	1	; () banked
 22738  00493E  B997               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 22739  004940  0012               	return	
 22740                           
 22741                           ; BSR set to: 1
 22742                           ;radio_driver_SX1276.c: 1184: {
 22743                           ;radio_driver_SX1276.c: 1185: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 22744  004942  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22745  004944  EC44  F03A         	call	_SwTimerReadValue
 22746  004948  0100               	movlb	0	; () banked
 22747  00494A  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 22748  00494C  E108               	bnz	u11390
 22749  00494E  0E1F               	movlw	31
 22750  004950  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 22751  004952  0EAC               	movlw	172
 22752  004954  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 22753  004956  0EDF               	movlw	223
 22754  004958  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 22755  00495A  A0D8               	btfss	status,0,c
 22756  00495C  D021               	goto	l634
 22757  00495E                     u11390:
 22758                           
 22759                           ; BSR set to: 0
 22760  00495E  0101               	movlb	1	; () banked
 22761  004960  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22762  004962  EC44  F03A         	call	_SwTimerReadValue
 22763  004966  0E0D               	movlw	13
 22764  004968  D006               	goto	u11400
 22765  00496A                     u11405:
 22766  00496A  0100               	movlb	0	; () banked
 22767  00496C  90D8               	bcf	status,0,c
 22768  00496E  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 22769  004970  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 22770  004972  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 22771  004974  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 22772  004976                     u11400:
 22773  004976  2EE8               	decfsz	wreg,f,c
 22774  004978  D7F8               	goto	u11405
 22775  00497A  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22776  00497E  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22777  004982  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22778  004986  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22779  00498A  0E7D               	movlw	125
 22780  00498C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22781  00498E  0E00               	movlw	0
 22782  004990  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22783  004992  0E00               	movlw	0
 22784  004994  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22785  004996  0E00               	movlw	0
 22786  004998  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22787  00499A  EC55  F037         	call	___lmul	;wreg free
 22788  00499E  D021               	goto	L14
 22789  0049A0                     l634:
 22790  0049A0  0101               	movlb	1	; () banked
 22791  0049A2  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22792  0049A4  EC44  F03A         	call	_SwTimerReadValue
 22793  0049A8  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22794  0049AC  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22795  0049B0  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22796  0049B4  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22797  0049B8  0E7D               	movlw	125
 22798  0049BA  0100               	movlb	0	; () banked
 22799  0049BC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22800  0049BE  0E00               	movlw	0
 22801  0049C0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22802  0049C2  0E00               	movlw	0
 22803  0049C4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22804  0049C6  0E00               	movlw	0
 22805  0049C8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22806  0049CA  EC55  F037         	call	___lmul	;wreg free
 22807  0049CE  0E0D               	movlw	13
 22808  0049D0  D006               	goto	u11410
 22809  0049D2                     u11415:
 22810  0049D2  0100               	movlb	0	; () banked
 22811  0049D4  90D8               	bcf	status,0,c
 22812  0049D6  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 22813  0049D8  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 22814  0049DA  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 22815  0049DC  339A               	rrcf	?___lmul& (0+255),f,b
 22816  0049DE                     u11410:
 22817  0049DE  2EE8               	decfsz	wreg,f,c
 22818  0049E0  D7F8               	goto	u11415
 22819  0049E2                     L14:
 22820  0049E2  C09A  F0AE         	movff	?___lmul,_RADIO_FSKPacketSent$910
 22821  0049E6  C09B  F0AF         	movff	?___lmul+1,_RADIO_FSKPacketSent$910+1
 22822  0049EA  C09C  F0B0         	movff	?___lmul+2,_RADIO_FSKPacketSent$910+2
 22823  0049EE  C09D  F0B1         	movff	?___lmul+3,_RADIO_FSKPacketSent$910+3
 22824                           
 22825                           ; BSR set to: 0
 22826  0049F2  C0AE  F0A6         	movff	_RADIO_FSKPacketSent$910,??_RADIO_FSKPacketSent
 22827  0049F6  C0AF  F0A7         	movff	_RADIO_FSKPacketSent$910+1,??_RADIO_FSKPacketSent+1
 22828  0049FA  C0B0  F0A8         	movff	_RADIO_FSKPacketSent$910+2,??_RADIO_FSKPacketSent+2
 22829  0049FE  C0B1  F0A9         	movff	_RADIO_FSKPacketSent$910+3,??_RADIO_FSKPacketSent+3
 22830  004A02  0100               	movlb	0	; () banked
 22831  004A04  1FA6               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 22832  004A06  1FA7               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22833  004A08  1FA8               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22834  004A0A  1FA9               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22835  004A0C  2BA6               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 22836  004A0E  0E00               	movlw	0
 22837  004A10  23A7               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22838  004A12  23A8               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22839  004A14  23A9               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22840  004A16  0E20               	movlw	32
 22841  004A18  25A6               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 22842  004A1A  6FAA               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 22843  004A1C  0E4E               	movlw	78
 22844  004A1E  21A7               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 22845  004A20  6FAB               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 22846  004A22  0E00               	movlw	0
 22847  004A24  21A8               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 22848  004A26  6FAC               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 22849  004A28  0E00               	movlw	0
 22850  004A2A  21A9               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 22851  004A2C  6FAD               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;radio_driver_SX1276.c: 1186: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 22855  004A2E  0101               	movlb	1	; () banked
 22856  004A30  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22857  004A32  EC89  F03C         	call	_SwTimerStop
 22858                           
 22859                           ;radio_driver_SX1276.c: 1187: LORAWAN_TxDone((uint16_t)timeOnAir);
 22860  004A36  C0AA  F09A         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 22861  004A3A  C0AB  F09B         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 22862  004A3E  EC61  F014         	call	_LORAWAN_TxDone	;wreg free
 22863  004A42  0012               	return	
 22864  004A44                     __end_of_RADIO_FSKPacketSent:
 22865                           	opt stack 0
 22866                           tosu	equ	0xFFF
 22867                           tosh	equ	0xFFE
 22868                           tosl	equ	0xFFD
 22869                           pclath	equ	0xFFA
 22870                           tblptru	equ	0xFF8
 22871                           tblptrh	equ	0xFF7
 22872                           tblptrl	equ	0xFF6
 22873                           tablat	equ	0xFF5
 22874                           prodh	equ	0xFF4
 22875                           prodl	equ	0xFF3
 22876                           intcon	equ	0xFF2
 22877                           intcon2	equ	0xFF1
 22878                           intcon3	equ	0xFF0
 22879                           indf0	equ	0xFEF
 22880                           postinc0	equ	0xFEE
 22881                           fsr0h	equ	0xFEA
 22882                           fsr0l	equ	0xFE9
 22883                           wreg	equ	0xFE8
 22884                           postinc1	equ	0xFE6
 22885                           postdec1	equ	0xFE5
 22886                           plusw1	equ	0xFE3
 22887                           fsr1h	equ	0xFE2
 22888                           fsr1l	equ	0xFE1
 22889                           indf2	equ	0xFDF
 22890                           postinc2	equ	0xFDE
 22891                           postdec2	equ	0xFDD
 22892                           plusw2	equ	0xFDB
 22893                           fsr2h	equ	0xFDA
 22894                           fsr2l	equ	0xFD9
 22895                           status	equ	0xFD8
 22896                           
 22897 ;; *************** function _SwTimerReadValue *****************
 22898 ;; Defined at:
 22899 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22900 ;; Parameters:    Size  Location     Type
 22901 ;;  timerId         1    wreg     unsigned char 
 22902 ;; Auto vars:     Size  Location     Type
 22903 ;;  timerId         1   57[BANK0 ] unsigned char 
 22904 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 22905 ;; Return value:  Size  Location     Type
 22906 ;;                  4   49[BANK0 ] unsigned long 
 22907 ;; Registers used:
 22908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22909 ;; Tracked objects:
 22910 ;;		On entry : 0/0
 22911 ;;		On exit  : 0/0
 22912 ;;		Unchanged: 0/0
 22913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22915 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22917 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22918 ;;Total ram usage:        9 bytes
 22919 ;; Hardware stack levels used:    1
 22920 ;; Hardware stack levels required when called:   10
 22921 ;; This function calls:
 22922 ;;		_SwTimersInterrupt
 22923 ;; This function is called by:
 22924 ;;		_RADIO_TxDone
 22925 ;;		_RADIO_FSKPacketSent
 22926 ;;		_LORAWAN_Pause
 22927 ;; This function uses a non-reentrant model
 22928 ;;
 22929                           
 22930                           	psect	text114
 22931  007488                     __ptext114:
 22932                           	opt stack 0
 22933  007488                     _SwTimerReadValue:
 22934                           	opt stack 17
 22935                           
 22936                           ;incstack = 0
 22937                           ;SwTimerReadValue@timerId stored from wreg
 22938  007488  0100               	movlb	0	; () banked
 22939  00748A  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 22940                           
 22941                           ;sw_timer.c: 195: uint32_t ticksCount;
 22942                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22943  00748C  9EF2               	bcf	intcon,7,c	;volatile
 22944                           
 22945                           ;sw_timer.c: 200: SwTimersInterrupt();
 22946  00748E  EC5D  F027         	call	_SwTimersInterrupt	;wreg free
 22947                           
 22948                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22949  007492  0100               	movlb	0	; () banked
 22950  007494  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22951  007496  0D08               	mullw	8
 22952  007498  0E00               	movlw	low _swTimers
 22953  00749A  24F3               	addwf	prodl,w,c
 22954  00749C  6ED9               	movwf	fsr2l,c
 22955  00749E  0E03               	movlw	high _swTimers
 22956  0074A0  20F4               	addwfc	prodh,w,c
 22957  0074A2  6EDA               	movwf	fsr2h,c
 22958  0074A4  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 22959  0074A8  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22960  0074AC  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22961  0074B0  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22962                           
 22963                           ; BSR set to: 0
 22964                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22965  0074B4  8EF2               	bsf	intcon,7,c	;volatile
 22966                           
 22967                           ; BSR set to: 0
 22968                           ;sw_timer.c: 204: return ticksCount;
 22969  0074B6  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22970  0074BA  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22971  0074BE  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22972  0074C2  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22973  0074C6  0012               	return	
 22974  0074C8                     __end_of_SwTimerReadValue:
 22975                           	opt stack 0
 22976                           tosu	equ	0xFFF
 22977                           tosh	equ	0xFFE
 22978                           tosl	equ	0xFFD
 22979                           pclath	equ	0xFFA
 22980                           tblptru	equ	0xFF8
 22981                           tblptrh	equ	0xFF7
 22982                           tblptrl	equ	0xFF6
 22983                           tablat	equ	0xFF5
 22984                           prodh	equ	0xFF4
 22985                           prodl	equ	0xFF3
 22986                           intcon	equ	0xFF2
 22987                           intcon2	equ	0xFF1
 22988                           intcon3	equ	0xFF0
 22989                           indf0	equ	0xFEF
 22990                           postinc0	equ	0xFEE
 22991                           fsr0h	equ	0xFEA
 22992                           fsr0l	equ	0xFE9
 22993                           wreg	equ	0xFE8
 22994                           postinc1	equ	0xFE6
 22995                           postdec1	equ	0xFE5
 22996                           plusw1	equ	0xFE3
 22997                           fsr1h	equ	0xFE2
 22998                           fsr1l	equ	0xFE1
 22999                           indf2	equ	0xFDF
 23000                           postinc2	equ	0xFDE
 23001                           postdec2	equ	0xFDD
 23002                           plusw2	equ	0xFDB
 23003                           fsr2h	equ	0xFDA
 23004                           fsr2l	equ	0xFD9
 23005                           status	equ	0xFD8
 23006                           
 23007 ;; *************** function _LORAWAN_TxDone *****************
 23008 ;; Defined at:
 23009 ;;		line 297 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 23010 ;; Parameters:    Size  Location     Type
 23011 ;;  timeOnAir       2   58[BANK0 ] unsigned int 
 23012 ;; Auto vars:     Size  Location     Type
 23013 ;;  delta           4   65[BANK0 ] unsigned long 
 23014 ;;  ticks           4    0        unsigned long 
 23015 ;;  i               1   69[BANK0 ] unsigned char 
 23016 ;; Return value:  Size  Location     Type
 23017 ;;                  1    wreg      void 
 23018 ;; Registers used:
 23019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23020 ;; Tracked objects:
 23021 ;;		On entry : 0/0
 23022 ;;		On exit  : 0/0
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23026 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23027 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23028 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23029 ;;Total ram usage:       12 bytes
 23030 ;; Hardware stack levels used:    1
 23031 ;; Hardware stack levels required when called:   11
 23032 ;; This function calls:
 23033 ;;		_RADIO_GetStatus
 23034 ;;		_RxData
 23035 ;;		_SwTimerSetTimeout
 23036 ;;		_SwTimerStart
 23037 ;;		___lldiv
 23038 ;; This function is called by:
 23039 ;;		_RADIO_TxDone
 23040 ;;		_RADIO_FSKPacketSent
 23041 ;;		_RADIO_WatchdogTimeout
 23042 ;; This function uses a non-reentrant model
 23043 ;;
 23044                           
 23045                           	psect	text115
 23046  0028C2                     __ptext115:
 23047                           	opt stack 0
 23048  0028C2                     _LORAWAN_TxDone:
 23049                           	opt stack 16
 23050                           
 23051                           ;lorawan_na.c: 299: if (loRa.macStatus.macPause == 0)
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;incstack = 0
 23055  0028C2  0102               	movlb	2	; () banked
 23056  0028C4  B103               	btfsc	(_loRa+3)& (0+255),0,b
 23057  0028C6  D12D               	goto	l1053
 23058                           
 23059                           ; BSR set to: 2
 23060                           ;lorawan_na.c: 300: {
 23061                           ;lorawan_na.c: 301: uint8_t i;
 23062                           ;lorawan_na.c: 302: uint32_t delta = 0, ticks;
 23063  0028C8  0E00               	movlw	0
 23064  0028CA  0100               	movlb	0	; () banked
 23065  0028CC  6FA1               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23066  0028CE  0E00               	movlw	0
 23067  0028D0  6FA2               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23068  0028D2  0E00               	movlw	0
 23069  0028D4  6FA3               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23070  0028D6  0E00               	movlw	0
 23071  0028D8  6FA4               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23072                           
 23073                           ;lorawan_na.c: 305: loRa.rx2DelayExpired = 0;
 23074  0028DA  0E00               	movlw	0
 23075  0028DC  0102               	movlb	2	; () banked
 23076  0028DE  6FE2               	movwf	(_loRa+226)& (0+255),b
 23077                           
 23078                           ;lorawan_na.c: 307: loRa.macStatus.macState = BEFORE_RX1;
 23079  0028E0  5102               	movf	(_loRa+2)& (0+255),w,b
 23080  0028E2  0BF0               	andlw	-16
 23081  0028E4  0902               	iorlw	2
 23082  0028E6  6F02               	movwf	(_loRa+2)& (0+255),b
 23083                           
 23084                           ; BSR set to: 2
 23085                           ;lorawan_na.c: 309: i = loRa.lastUsedChannelIndex;
 23086  0028E8  C2CB  F0A5         	movff	_loRa+203,LORAWAN_TxDone@i
 23087                           
 23088                           ; BSR set to: 2
 23089                           ;lorawan_na.c: 311: if (loRa.lorawanMacStatus.joining == 1)
 23090  0028EC  A500               	btfss	_loRa& (0+255),2,b
 23091  0028EE  D08C               	goto	l1054
 23092                           
 23093                           ; BSR set to: 2
 23094                           ;lorawan_na.c: 312: {
 23095                           ;lorawan_na.c: 313: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23096  0028F0  5117               	movf	(_loRa+23)& (0+255),w,b
 23097  0028F2  0D01               	mullw	1
 23098  0028F4  0E2D               	movlw	low _rxWindowOffset
 23099  0028F6  24F3               	addwf	prodl,w,c
 23100  0028F8  6EF6               	movwf	tblptrl,c
 23101  0028FA  0EFF               	movlw	high _rxWindowOffset
 23102  0028FC  20F4               	addwfc	prodh,w,c
 23103  0028FE  6EF7               	movwf	tblptrh,c
 23104  002900                     	if	1	;There are 3 active tblptr bytes
 23105  002900  6AF8               	clrf	tblptru,c
 23106  002902  0E00               	movlw	low (__mediumconst shr (0+16))
 23107  002904  22F8               	addwfc	tblptru,f,c
 23108  002906                     	endif
 23109  002906  0008               	tblrd		*
 23110  002908  CFF5 F09C          	movff	tablat,??_LORAWAN_TxDone
 23111  00290C  518A               	movf	(_loRa+138)& (0+255),w,b
 23112  00290E  0100               	movlb	0	; () banked
 23113  002910  259C               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23114  002912  6F9D               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23115  002914  0E00               	movlw	0
 23116  002916  BF9C               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23117  002918  0EFF               	movlw	255
 23118  00291A  0102               	movlb	2	; () banked
 23119  00291C  218B               	addwfc	(_loRa+139)& (0+255),w,b
 23120  00291E  0100               	movlb	0	; () banked
 23121  002920  6F9E               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23122  002922  6B9F               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23123  002924  6BA0               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23124  002926  0E0C               	movlw	12
 23125  002928                     u11005:
 23126  002928  90D8               	bcf	status,0,c
 23127  00292A  379D               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23128  00292C  379E               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23129  00292E  379F               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23130  002930  37A0               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23131  002932  2EE8               	decfsz	wreg,f,c
 23132  002934  D7F9               	goto	u11005
 23133  002936  C09D  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23134  00293A  C09E  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23135  00293E  C09F  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23136  002942  C0A0  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23137  002946  0E7D               	movlw	125
 23138  002948  6F64               	movwf	___lldiv@divisor& (0+255),b
 23139  00294A  0E00               	movlw	0
 23140  00294C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23141  00294E  0E00               	movlw	0
 23142  002950  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23143  002952  0E00               	movlw	0
 23144  002954  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23145  002956  EC93  F032         	call	___lldiv	;wreg free
 23146  00295A  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23147  00295E  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23148  002962  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23149  002966  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23150  00296A  0102               	movlb	2	; () banked
 23151  00296C  51D3               	movf	(_loRa+211)& (0+255),w,b
 23152  00296E  EC9D  F039         	call	_SwTimerSetTimeout
 23153                           
 23154                           ;lorawan_na.c: 314: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23155  002972  0102               	movlb	2	; () banked
 23156  002974  511C               	movf	(_loRa+28)& (0+255),w,b
 23157  002976  0D01               	mullw	1
 23158  002978  0E2D               	movlw	low _rxWindowOffset
 23159  00297A  24F3               	addwf	prodl,w,c
 23160  00297C  6EF6               	movwf	tblptrl,c
 23161  00297E  0EFF               	movlw	high _rxWindowOffset
 23162  002980  20F4               	addwfc	prodh,w,c
 23163  002982  6EF7               	movwf	tblptrh,c
 23164  002984                     	if	1	;There are 3 active tblptr bytes
 23165  002984  6AF8               	clrf	tblptru,c
 23166  002986  0E00               	movlw	low (__mediumconst shr (0+16))
 23167  002988  22F8               	addwfc	tblptru,f,c
 23168  00298A                     	endif
 23169  00298A  0008               	tblrd		*
 23170  00298C  CFF5 F09C          	movff	tablat,??_LORAWAN_TxDone
 23171  002990  518C               	movf	(_loRa+140)& (0+255),w,b
 23172  002992  0100               	movlb	0	; () banked
 23173  002994  259C               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23174  002996  6F9D               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23175  002998  0E00               	movlw	0
 23176  00299A  BF9C               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23177  00299C  0EFF               	movlw	255
 23178  00299E  0102               	movlb	2	; () banked
 23179  0029A0  218D               	addwfc	(_loRa+141)& (0+255),w,b
 23180  0029A2  0100               	movlb	0	; () banked
 23181  0029A4  6F9E               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23182  0029A6  6B9F               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23183  0029A8  6BA0               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23184  0029AA  0E0C               	movlw	12
 23185  0029AC                     u11015:
 23186  0029AC  90D8               	bcf	status,0,c
 23187  0029AE  379D               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23188  0029B0  379E               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23189  0029B2  379F               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23190  0029B4  37A0               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23191  0029B6  2EE8               	decfsz	wreg,f,c
 23192  0029B8  D7F9               	goto	u11015
 23193  0029BA  C09D  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23194  0029BE  C09E  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23195  0029C2  C09F  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23196  0029C6  C0A0  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23197  0029CA  0E7D               	movlw	125
 23198  0029CC  6F64               	movwf	___lldiv@divisor& (0+255),b
 23199  0029CE  0E00               	movlw	0
 23200  0029D0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23201  0029D2  0E00               	movlw	0
 23202  0029D4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23203  0029D6  0E00               	movlw	0
 23204  0029D8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23205  0029DA  EC93  F032         	call	___lldiv	;wreg free
 23206  0029DE  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23207  0029E2  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23208  0029E6  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23209  0029EA  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23210  0029EE  0102               	movlb	2	; () banked
 23211  0029F0  51D4               	movf	(_loRa+212)& (0+255),w,b
 23212  0029F2  EC9D  F039         	call	_SwTimerSetTimeout
 23213                           
 23214                           ;lorawan_na.c: 316: SwTimerStart(loRa.joinAccept1TimerId);
 23215  0029F6  0102               	movlb	2	; () banked
 23216  0029F8  51D3               	movf	(_loRa+211)& (0+255),w,b
 23217  0029FA  EC62  F030         	call	_SwTimerStart
 23218                           
 23219                           ;lorawan_na.c: 317: SwTimerStart(loRa.joinAccept2TimerId);
 23220  0029FE  0102               	movlb	2	; () banked
 23221  002A00  51D4               	movf	(_loRa+212)& (0+255),w,b
 23222  002A02  EC62  F030         	call	_SwTimerStart
 23223                           
 23224                           ;lorawan_na.c: 318: }
 23225  002A06  0012               	return	
 23226  002A08                     l1054:
 23227                           
 23228                           ;lorawan_na.c: 319: else
 23229                           ;lorawan_na.c: 320: {
 23230                           ;lorawan_na.c: 321: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23231  002A08  0102               	movlb	2	; () banked
 23232  002A0A  5117               	movf	(_loRa+23)& (0+255),w,b
 23233  002A0C  0D01               	mullw	1
 23234  002A0E  0E2D               	movlw	low _rxWindowOffset
 23235  002A10  24F3               	addwf	prodl,w,c
 23236  002A12  6EF6               	movwf	tblptrl,c
 23237  002A14  0EFF               	movlw	high _rxWindowOffset
 23238  002A16  20F4               	addwfc	prodh,w,c
 23239  002A18  6EF7               	movwf	tblptrh,c
 23240  002A1A                     	if	1	;There are 3 active tblptr bytes
 23241  002A1A  6AF8               	clrf	tblptru,c
 23242  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 23243  002A1E  22F8               	addwfc	tblptru,f,c
 23244  002A20                     	endif
 23245  002A20  0008               	tblrd		*
 23246  002A22  CFF5 F09C          	movff	tablat,??_LORAWAN_TxDone
 23247  002A26  5186               	movf	(_loRa+134)& (0+255),w,b
 23248  002A28  0100               	movlb	0	; () banked
 23249  002A2A  259C               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23250  002A2C  6F9D               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23251  002A2E  0E00               	movlw	0
 23252  002A30  BF9C               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23253  002A32  0EFF               	movlw	255
 23254  002A34  0102               	movlb	2	; () banked
 23255  002A36  2187               	addwfc	(_loRa+135)& (0+255),w,b
 23256  002A38  0100               	movlb	0	; () banked
 23257  002A3A  6F9E               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23258  002A3C  6B9F               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23259  002A3E  6BA0               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23260  002A40  0E0C               	movlw	12
 23261  002A42                     u11025:
 23262  002A42  90D8               	bcf	status,0,c
 23263  002A44  379D               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23264  002A46  379E               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23265  002A48  379F               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23266  002A4A  37A0               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23267  002A4C  2EE8               	decfsz	wreg,f,c
 23268  002A4E  D7F9               	goto	u11025
 23269  002A50  C09D  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23270  002A54  C09E  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23271  002A58  C09F  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23272  002A5C  C0A0  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23273  002A60  0E7D               	movlw	125
 23274  002A62  6F64               	movwf	___lldiv@divisor& (0+255),b
 23275  002A64  0E00               	movlw	0
 23276  002A66  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23277  002A68  0E00               	movlw	0
 23278  002A6A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23279  002A6C  0E00               	movlw	0
 23280  002A6E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23281  002A70  EC93  F032         	call	___lldiv	;wreg free
 23282  002A74  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23283  002A78  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23284  002A7C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23285  002A80  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23286  002A84  0102               	movlb	2	; () banked
 23287  002A86  51D5               	movf	(_loRa+213)& (0+255),w,b
 23288  002A88  EC9D  F039         	call	_SwTimerSetTimeout
 23289                           
 23290                           ;lorawan_na.c: 322: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23291  002A8C  0102               	movlb	2	; () banked
 23292  002A8E  511C               	movf	(_loRa+28)& (0+255),w,b
 23293  002A90  0D01               	mullw	1
 23294  002A92  0E2D               	movlw	low _rxWindowOffset
 23295  002A94  24F3               	addwf	prodl,w,c
 23296  002A96  6EF6               	movwf	tblptrl,c
 23297  002A98  0EFF               	movlw	high _rxWindowOffset
 23298  002A9A  20F4               	addwfc	prodh,w,c
 23299  002A9C  6EF7               	movwf	tblptrh,c
 23300  002A9E                     	if	1	;There are 3 active tblptr bytes
 23301  002A9E  6AF8               	clrf	tblptru,c
 23302  002AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 23303  002AA2  22F8               	addwfc	tblptru,f,c
 23304  002AA4                     	endif
 23305  002AA4  0008               	tblrd		*
 23306  002AA6  CFF5 F09C          	movff	tablat,??_LORAWAN_TxDone
 23307  002AAA  5188               	movf	(_loRa+136)& (0+255),w,b
 23308  002AAC  0100               	movlb	0	; () banked
 23309  002AAE  259C               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23310  002AB0  6F9D               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23311  002AB2  0E00               	movlw	0
 23312  002AB4  BF9C               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23313  002AB6  0EFF               	movlw	255
 23314  002AB8  0102               	movlb	2	; () banked
 23315  002ABA  2189               	addwfc	(_loRa+137)& (0+255),w,b
 23316  002ABC  0100               	movlb	0	; () banked
 23317  002ABE  6F9E               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23318  002AC0  6B9F               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23319  002AC2  6BA0               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23320  002AC4  0E0C               	movlw	12
 23321  002AC6                     u11035:
 23322  002AC6  90D8               	bcf	status,0,c
 23323  002AC8  379D               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23324  002ACA  379E               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23325  002ACC  379F               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23326  002ACE  37A0               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23327  002AD0  2EE8               	decfsz	wreg,f,c
 23328  002AD2  D7F9               	goto	u11035
 23329  002AD4  C09D  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23330  002AD8  C09E  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23331  002ADC  C09F  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23332  002AE0  C0A0  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23333  002AE4  0E7D               	movlw	125
 23334  002AE6  6F64               	movwf	___lldiv@divisor& (0+255),b
 23335  002AE8  0E00               	movlw	0
 23336  002AEA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23337  002AEC  0E00               	movlw	0
 23338  002AEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23339  002AF0  0E00               	movlw	0
 23340  002AF2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23341  002AF4  EC93  F032         	call	___lldiv	;wreg free
 23342  002AF8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23343  002AFC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23344  002B00  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23345  002B04  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23346  002B08  0102               	movlb	2	; () banked
 23347  002B0A  51D6               	movf	(_loRa+214)& (0+255),w,b
 23348  002B0C  EC9D  F039         	call	_SwTimerSetTimeout
 23349                           
 23350                           ;lorawan_na.c: 324: SwTimerStart(loRa.receiveWindow1TimerId);
 23351  002B10  0102               	movlb	2	; () banked
 23352  002B12  51D5               	movf	(_loRa+213)& (0+255),w,b
 23353  002B14  EC62  F030         	call	_SwTimerStart
 23354                           
 23355                           ;lorawan_na.c: 325: SwTimerStart(loRa.receiveWindow2TimerId);
 23356  002B18  0102               	movlb	2	; () banked
 23357  002B1A  51D6               	movf	(_loRa+214)& (0+255),w,b
 23358  002B1C  EC62  F030         	call	_SwTimerStart
 23359                           
 23360                           ;lorawan_na.c: 326: }
 23361                           ;lorawan_na.c: 327: }
 23362  002B20  0012               	return	
 23363  002B22                     l1053:
 23364                           
 23365                           ;lorawan_na.c: 328: else
 23366                           ;lorawan_na.c: 329: {
 23367                           ;lorawan_na.c: 330: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 23368  002B22  EC38  F03F         	call	_RADIO_GetStatus	;wreg free
 23369  002B26  0100               	movlb	0	; () banked
 23370  002B28  6F9C               	movwf	??_LORAWAN_TxDone& (0+255),b
 23371  002B2A  A99C               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 23372  002B2C  D013               	goto	l1057
 23373                           
 23374                           ; BSR set to: 0
 23375                           ;lorawan_na.c: 331: {
 23376                           ;lorawan_na.c: 333: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 23377  002B2E  0E00               	movlw	0
 23378  002B30  6F60               	movwf	RxData@pData& (0+255),b
 23379  002B32  0E00               	movlw	0
 23380  002B34  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23381  002B36  0E00               	movlw	0
 23382  002B38  6F62               	movwf	RxData@dataLength& (0+255),b
 23383  002B3A  0E02               	movlw	2
 23384  002B3C  6F63               	movwf	RxData@status& (0+255),b
 23385  002B3E  D801               	call	u11058
 23386  002B40  0012               	return	
 23387  002B42                     u11058:
 23388  002B42  0005               	push	
 23389  002B44  6EFA               	movwf	pclath,c
 23390  002B46  51F9               	movf	_rxPayload& (0+255),w,b
 23391  002B48  6EFD               	movwf	tosl,c
 23392  002B4A  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 23393  002B4C  6EFE               	movwf	tosh,c
 23394  002B4E  6AFF               	clrf	tosu,c
 23395  002B50  50FA               	movf	pclath,w,c
 23396  002B52  0012               	return		;indir
 23397  002B54                     l1057:
 23398                           
 23399                           ;lorawan_na.c: 335: else
 23400                           ;lorawan_na.c: 336: {
 23401                           ;lorawan_na.c: 338: if ( rxPayload.RxAppData != (0) )
 23402  002B54  0100               	movlb	0	; () banked
 23403  002B56  51F9               	movf	_rxPayload& (0+255),w,b
 23404  002B58  11FA               	iorwf	(_rxPayload+1)& (0+255),w,b
 23405  002B5A  B4D8               	btfsc	status,2,c
 23406  002B5C  0012               	return	
 23407                           
 23408                           ; BSR set to: 0
 23409                           ;lorawan_na.c: 339: {
 23410                           ;lorawan_na.c: 340: rxPayload.RxAppData( (0), 0, RADIO_OK );
 23411  002B5E  0E00               	movlw	0
 23412  002B60  6F60               	movwf	RxData@pData& (0+255),b
 23413  002B62  0E00               	movlw	0
 23414  002B64  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23415  002B66  0E00               	movlw	0
 23416  002B68  6F62               	movwf	RxData@dataLength& (0+255),b
 23417  002B6A  0E03               	movlw	3
 23418  002B6C  6F63               	movwf	RxData@status& (0+255),b
 23419  002B6E  D801               	call	u11078
 23420  002B70  0012               	return	
 23421  002B72                     u11078:
 23422  002B72  0005               	push	
 23423  002B74  6EFA               	movwf	pclath,c
 23424  002B76  51F9               	movf	_rxPayload& (0+255),w,b
 23425  002B78  6EFD               	movwf	tosl,c
 23426  002B7A  51FA               	movf	(_rxPayload+1)& (0+255),w,b
 23427  002B7C  6EFE               	movwf	tosh,c
 23428  002B7E  6AFF               	clrf	tosu,c
 23429  002B80  50FA               	movf	pclath,w,c
 23430  002B82  0012               	return		;indir
 23431  002B84                     __end_of_LORAWAN_TxDone:
 23432                           	opt stack 0
 23433                           tosu	equ	0xFFF
 23434                           tosh	equ	0xFFE
 23435                           tosl	equ	0xFFD
 23436                           pclath	equ	0xFFA
 23437                           tblptru	equ	0xFF8
 23438                           tblptrh	equ	0xFF7
 23439                           tblptrl	equ	0xFF6
 23440                           tablat	equ	0xFF5
 23441                           prodh	equ	0xFF4
 23442                           prodl	equ	0xFF3
 23443                           intcon	equ	0xFF2
 23444                           intcon2	equ	0xFF1
 23445                           intcon3	equ	0xFF0
 23446                           indf0	equ	0xFEF
 23447                           postinc0	equ	0xFEE
 23448                           fsr0h	equ	0xFEA
 23449                           fsr0l	equ	0xFE9
 23450                           wreg	equ	0xFE8
 23451                           postinc1	equ	0xFE6
 23452                           postdec1	equ	0xFE5
 23453                           plusw1	equ	0xFE3
 23454                           fsr1h	equ	0xFE2
 23455                           fsr1l	equ	0xFE1
 23456                           indf2	equ	0xFDF
 23457                           postinc2	equ	0xFDE
 23458                           postdec2	equ	0xFDD
 23459                           plusw2	equ	0xFDB
 23460                           fsr2h	equ	0xFDA
 23461                           fsr2l	equ	0xFD9
 23462                           status	equ	0xFD8
 23463                           
 23464 ;; *************** function _RxData *****************
 23465 ;; Defined at:
 23466 ;;		line 50 in file "main.c"
 23467 ;; Parameters:    Size  Location     Type
 23468 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 23469 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 23470 ;;  dataLength      1    2[BANK0 ] unsigned char 
 23471 ;;  status          1    3[BANK0 ] enum E7303
 23472 ;; Auto vars:     Size  Location     Type
 23473 ;;		None
 23474 ;; Return value:  Size  Location     Type
 23475 ;;                  1    wreg      void 
 23476 ;; Registers used:
 23477 ;;		None
 23478 ;; Tracked objects:
 23479 ;;		On entry : 0/0
 23480 ;;		On exit  : 0/0
 23481 ;;		Unchanged: 0/0
 23482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23486 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23487 ;;Total ram usage:        4 bytes
 23488 ;; Hardware stack levels used:    1
 23489 ;; Hardware stack levels required when called:    7
 23490 ;; This function calls:
 23491 ;;		Nothing
 23492 ;; This function is called by:
 23493 ;;		_main
 23494 ;;		_LORAWAN_EnterContinuousReceive
 23495 ;;		_Retransmissions
 23496 ;;		_SetReceptionNotOkState
 23497 ;;		_LORAWAN_RxDone
 23498 ;;		_LORAWAN_RxTimeout
 23499 ;;		_LORAWAN_TxDone
 23500 ;;		_TransmissionErrorCallback
 23501 ;;		_LORAWAN_ReceiveWindow2Callback
 23502 ;;		_AckRetransmissionCallback
 23503 ;;		_UnconfirmedTransmissionCallback
 23504 ;; This function uses a non-reentrant model
 23505 ;;
 23506                           
 23507                           	psect	text116
 23508  007EAC                     __ptext116:
 23509                           	opt stack 0
 23510  007EAC                     _RxData:
 23511                           	opt stack 20
 23512                           
 23513                           ;incstack = 0
 23514  007EAC  0012               	return		;funcret
 23515  007EAE                     __end_of_RxData:
 23516                           	opt stack 0
 23517                           tosu	equ	0xFFF
 23518                           tosh	equ	0xFFE
 23519                           tosl	equ	0xFFD
 23520                           pclath	equ	0xFFA
 23521                           tblptru	equ	0xFF8
 23522                           tblptrh	equ	0xFF7
 23523                           tblptrl	equ	0xFF6
 23524                           tablat	equ	0xFF5
 23525                           prodh	equ	0xFF4
 23526                           prodl	equ	0xFF3
 23527                           intcon	equ	0xFF2
 23528                           intcon2	equ	0xFF1
 23529                           intcon3	equ	0xFF0
 23530                           indf0	equ	0xFEF
 23531                           postinc0	equ	0xFEE
 23532                           fsr0h	equ	0xFEA
 23533                           fsr0l	equ	0xFE9
 23534                           wreg	equ	0xFE8
 23535                           postinc1	equ	0xFE6
 23536                           postdec1	equ	0xFE5
 23537                           plusw1	equ	0xFE3
 23538                           fsr1h	equ	0xFE2
 23539                           fsr1l	equ	0xFE1
 23540                           indf2	equ	0xFDF
 23541                           postinc2	equ	0xFDE
 23542                           postdec2	equ	0xFDD
 23543                           plusw2	equ	0xFDB
 23544                           fsr2h	equ	0xFDA
 23545                           fsr2l	equ	0xFD9
 23546                           status	equ	0xFD8
 23547                           
 23548 ;; *************** function _RADIO_GetStatus *****************
 23549 ;; Defined at:
 23550 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23551 ;; Parameters:    Size  Location     Type
 23552 ;;		None
 23553 ;; Auto vars:     Size  Location     Type
 23554 ;;		None
 23555 ;; Return value:  Size  Location     Type
 23556 ;;                  1    wreg      unsigned char 
 23557 ;; Registers used:
 23558 ;;		wreg, status,2
 23559 ;; Tracked objects:
 23560 ;;		On entry : 0/0
 23561 ;;		On exit  : 0/0
 23562 ;;		Unchanged: 0/0
 23563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23568 ;;Total ram usage:        0 bytes
 23569 ;; Hardware stack levels used:    1
 23570 ;; Hardware stack levels required when called:    7
 23571 ;; This function calls:
 23572 ;;		Nothing
 23573 ;; This function is called by:
 23574 ;;		_LORAWAN_TxDone
 23575 ;;		_LORAWAN_ReceiveWindow2Callback
 23576 ;;		_LORAWAN_RxDone
 23577 ;; This function uses a non-reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text117
 23581  007E70                     __ptext117:
 23582                           	opt stack 0
 23583  007E70                     _RADIO_GetStatus:
 23584                           	opt stack 19
 23585                           
 23586                           ;radio_driver_SX1276.c: 1195: return RadioConfiguration.flags;
 23587                           
 23588                           ;incstack = 0
 23589  007E70  0101               	movlb	1	; () banked
 23590  007E72  5197               	movf	(_RadioConfiguration+35)& (0+255),w,b
 23591  007E74  0012               	return	
 23592  007E76                     __end_of_RADIO_GetStatus:
 23593                           	opt stack 0
 23594                           tosu	equ	0xFFF
 23595                           tosh	equ	0xFFE
 23596                           tosl	equ	0xFFD
 23597                           pclath	equ	0xFFA
 23598                           tblptru	equ	0xFF8
 23599                           tblptrh	equ	0xFF7
 23600                           tblptrl	equ	0xFF6
 23601                           tablat	equ	0xFF5
 23602                           prodh	equ	0xFF4
 23603                           prodl	equ	0xFF3
 23604                           intcon	equ	0xFF2
 23605                           intcon2	equ	0xFF1
 23606                           intcon3	equ	0xFF0
 23607                           indf0	equ	0xFEF
 23608                           postinc0	equ	0xFEE
 23609                           fsr0h	equ	0xFEA
 23610                           fsr0l	equ	0xFE9
 23611                           wreg	equ	0xFE8
 23612                           postinc1	equ	0xFE6
 23613                           postdec1	equ	0xFE5
 23614                           plusw1	equ	0xFE3
 23615                           fsr1h	equ	0xFE2
 23616                           fsr1l	equ	0xFE1
 23617                           indf2	equ	0xFDF
 23618                           postinc2	equ	0xFDE
 23619                           postdec2	equ	0xFDD
 23620                           plusw2	equ	0xFDB
 23621                           fsr2h	equ	0xFDA
 23622                           fsr2l	equ	0xFD9
 23623                           status	equ	0xFD8
 23624                           
 23625 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23626 ;; Defined at:
 23627 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23628 ;; Parameters:    Size  Location     Type
 23629 ;;		None
 23630 ;; Auto vars:     Size  Location     Type
 23631 ;;  a               1    0[BANK0 ] unsigned char 
 23632 ;; Return value:  Size  Location     Type
 23633 ;;                  1    wreg      unsigned char 
 23634 ;; Registers used:
 23635 ;;		wreg, status,2
 23636 ;; Tracked objects:
 23637 ;;		On entry : 0/0
 23638 ;;		On exit  : 0/0
 23639 ;;		Unchanged: 0/0
 23640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23644 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23645 ;;Total ram usage:        1 bytes
 23646 ;; Hardware stack levels used:    1
 23647 ;; Hardware stack levels required when called:    7
 23648 ;; This function calls:
 23649 ;;		Nothing
 23650 ;; This function is called by:
 23651 ;;		_LORAWAN_Mainloop
 23652 ;; This function uses a non-reentrant model
 23653 ;;
 23654                           
 23655                           	psect	text118
 23656  007CD0                     __ptext118:
 23657                           	opt stack 0
 23658  007CD0                     _INTERRUPT_GetDioStatus:
 23659                           	opt stack 22
 23660                           
 23661                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 23662                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 23663                           
 23664                           ; BSR set to: 1
 23665                           ;incstack = 0
 23666  007CD0  9EF2               	bcf	intcon,7,c	;volatile
 23667                           
 23668                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23669  007CD2  C173  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23670                           
 23671                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23672  007CD6  0E00               	movlw	0
 23673  007CD8  0101               	movlb	1	; () banked
 23674  007CDA  6F73               	movwf	_dioStatus& (0+255),b	;volatile
 23675                           
 23676                           ; BSR set to: 1
 23677                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23678  007CDC  8EF2               	bsf	intcon,7,c	;volatile
 23679                           
 23680                           ;interrupt_manager_lora_addons.c: 55: return a;
 23681  007CDE  0100               	movlb	0	; () banked
 23682  007CE0  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23683  007CE2  0012               	return	
 23684  007CE4                     __end_of_INTERRUPT_GetDioStatus:
 23685                           	opt stack 0
 23686                           tosu	equ	0xFFF
 23687                           tosh	equ	0xFFE
 23688                           tosl	equ	0xFFD
 23689                           pclath	equ	0xFFA
 23690                           tblptru	equ	0xFF8
 23691                           tblptrh	equ	0xFF7
 23692                           tblptrl	equ	0xFF6
 23693                           tablat	equ	0xFF5
 23694                           prodh	equ	0xFF4
 23695                           prodl	equ	0xFF3
 23696                           intcon	equ	0xFF2
 23697                           intcon2	equ	0xFF1
 23698                           intcon3	equ	0xFF0
 23699                           indf0	equ	0xFEF
 23700                           postinc0	equ	0xFEE
 23701                           fsr0h	equ	0xFEA
 23702                           fsr0l	equ	0xFE9
 23703                           wreg	equ	0xFE8
 23704                           postinc1	equ	0xFE6
 23705                           postdec1	equ	0xFE5
 23706                           plusw1	equ	0xFE3
 23707                           fsr1h	equ	0xFE2
 23708                           fsr1l	equ	0xFE1
 23709                           indf2	equ	0xFDF
 23710                           postinc2	equ	0xFDE
 23711                           postdec2	equ	0xFDD
 23712                           plusw2	equ	0xFDB
 23713                           fsr2h	equ	0xFDA
 23714                           fsr2l	equ	0xFD9
 23715                           status	equ	0xFD8
 23716                           
 23717 ;; *************** function _LORAWAN_Join *****************
 23718 ;; Defined at:
 23719 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23720 ;; Parameters:    Size  Location     Type
 23721 ;;  activationTy    1    wreg     enum E7213
 23722 ;; Auto vars:     Size  Location     Type
 23723 ;;  activationTy    1  125[BANK0 ] enum E7213
 23724 ;;  result          1  124[BANK0 ] enum E7190
 23725 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 23726 ;; Return value:  Size  Location     Type
 23727 ;;                  1    wreg      enum E7190
 23728 ;; Registers used:
 23729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23730 ;; Tracked objects:
 23731 ;;		On entry : 0/0
 23732 ;;		On exit  : 0/0
 23733 ;;		Unchanged: 0/0
 23734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23736 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23739 ;;Total ram usage:        3 bytes
 23740 ;; Hardware stack levels used:    1
 23741 ;; Hardware stack levels required when called:   14
 23742 ;; This function calls:
 23743 ;;		_PrepareJoinRequestFrame
 23744 ;;		_RADIO_Transmit
 23745 ;;		_SelectChannelForTransmission
 23746 ;;		_SwTimerSetTimeout
 23747 ;;		_SwTimerStart
 23748 ;;		_UpdateJoinInProgress
 23749 ;; This function is called by:
 23750 ;;		_main
 23751 ;; This function uses a non-reentrant model
 23752 ;;
 23753                           
 23754                           	psect	text119
 23755  005EE4                     __ptext119:
 23756                           	opt stack 0
 23757  005EE4                     _LORAWAN_Join:
 23758                           	opt stack 16
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;incstack = 0
 23762                           ;LORAWAN_Join@activationTypeNew stored from wreg
 23763  005EE4  0100               	movlb	0	; () banked
 23764  005EE6  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 23765                           
 23766                           ;lorawan.c: 117: uint8_t bufferIndex;
 23767                           ;lorawan.c: 118: LorawanError_t result;
 23768                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 23769  005EE8  0102               	movlb	2	; () banked
 23770  005EEA  B103               	btfsc	(_loRa+3)& (0+255),0,b
 23771  005EEC  0012               	return	
 23772                           
 23773                           ; BSR set to: 2
 23774                           ;lorawan.c: 123: }
 23775                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 23776                           
 23777                           ; BSR set to: 2
 23778                           ;lorawan.c: 121: {
 23779                           ;lorawan.c: 122: return MAC_PAUSED;
 23780                           ;	Return value of _LORAWAN_Join is never used
 23781  005EEE  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 23782  005EF0  0012               	return	
 23783                           
 23784                           ; BSR set to: 2
 23785                           ;lorawan.c: 128: }
 23786                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 23787                           
 23788                           ; BSR set to: 2
 23789                           
 23790                           ; BSR set to: 2
 23791                           ;lorawan.c: 126: {
 23792                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 23793                           ;	Return value of _LORAWAN_Join is never used
 23794  005EF2  5102               	movf	(_loRa+2)& (0+255),w,b
 23795  005EF4  0B0F               	andlw	15
 23796  005EF6  0900               	iorlw	0
 23797  005EF8  A4D8               	btfss	status,2,c
 23798  005EFA  0012               	return	
 23799                           
 23800                           ; BSR set to: 2
 23801                           ;lorawan.c: 133: }
 23802                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 23803                           
 23804                           ; BSR set to: 2
 23805                           ;lorawan.c: 131: {
 23806                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 23807                           ;	Return value of _LORAWAN_Join is never used
 23808  005EFC  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 23809                           
 23810                           ; BSR set to: 2
 23811                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 23812  005F00  0100               	movlb	0	; () banked
 23813  005F02  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 23814  005F04  A4D8               	btfss	status,2,c
 23815  005F06  D024               	goto	l1505
 23816                           
 23817                           ; BSR set to: 0
 23818                           ;lorawan.c: 138: {
 23819                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 23820  005F08  0102               	movlb	2	; () banked
 23821  005F0A  A196               	btfss	(_loRa+150)& (0+255),0,b
 23822  005F0C  0012               	return	
 23823                           
 23824                           ; BSR set to: 2
 23825  005F0E  A396               	btfss	(_loRa+150)& (0+255),1,b
 23826  005F10  0012               	return	
 23827                           
 23828                           ; BSR set to: 2
 23829  005F12  A796               	btfss	(_loRa+150)& (0+255),3,b
 23830  005F14  0012               	return	
 23831                           
 23832                           ; BSR set to: 2
 23833                           ;lorawan.c: 144: else
 23834                           ;lorawan.c: 145: {
 23835                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 23836                           
 23837                           ; BSR set to: 2
 23838                           
 23839                           ; BSR set to: 2
 23840                           ;lorawan.c: 143: }
 23841                           
 23842                           ; BSR set to: 2
 23843                           ;lorawan.c: 141: {
 23844                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 23845                           ;	Return value of _LORAWAN_Join is never used
 23846  005F16  EC2A  F01E         	call	_PrepareJoinRequestFrame	;wreg free
 23847  005F1A  0100               	movlb	0	; () banked
 23848  005F1C  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 23852  005F1E  0E00               	movlw	0
 23853  005F20  EC4F  F01B         	call	_SelectChannelForTransmission
 23854  005F24  0100               	movlb	0	; () banked
 23855  005F26  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 23856                           
 23857                           ; BSR set to: 0
 23858                           ;lorawan.c: 149: if (result == OK)
 23859  005F28  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 23860  005F2A  A4D8               	btfss	status,2,c
 23861  005F2C  0012               	return	
 23862                           
 23863                           ; BSR set to: 0
 23864                           ;lorawan.c: 150: {
 23865                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 23866  005F2E  0E90               	movlw	low _macBuffer
 23867  005F30  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 23868  005F32  0E04               	movlw	high _macBuffer
 23869  005F34  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 23870  005F36  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 23871  005F3A  EC14  F017         	call	_RADIO_Transmit	;wreg free
 23872  005F3E  0100               	movlb	0	; () banked
 23873  005F40  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 23874  005F42  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 23875  005F44  A4D8               	btfss	status,2,c
 23876  005F46  0012               	return	
 23877                           
 23878                           ; BSR set to: 0
 23879                           ;lorawan.c: 152: {
 23880                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 23881  005F48  0E01               	movlw	1
 23882  005F4A  EC15  F03E         	call	_UpdateJoinInProgress
 23883                           
 23884                           ;lorawan.c: 164: }
 23885                           ;lorawan.c: 165: }
 23886                           ;lorawan.c: 166: }
 23887                           
 23888                           ;lorawan.c: 161: else
 23889                           ;lorawan.c: 162: {
 23890                           ;lorawan.c: 163: return result;
 23891                           ;	Return value of _LORAWAN_Join is never used
 23892                           
 23893                           ;lorawan.c: 159: }
 23894                           ;lorawan.c: 160: }
 23895                           
 23896                           ;lorawan.c: 156: else
 23897                           ;lorawan.c: 157: {
 23898                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 23899                           ;	Return value of _LORAWAN_Join is never used
 23900                           
 23901                           ;lorawan.c: 155: }
 23902                           
 23903                           ;lorawan.c: 154: return OK;
 23904                           ;	Return value of _LORAWAN_Join is never used
 23905  005F4E  0012               	return	
 23906  005F50                     l1505:
 23907                           
 23908                           ; BSR set to: 0
 23909                           ;lorawan.c: 167: else
 23910                           ;lorawan.c: 168: {
 23911                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 23912  005F50  0102               	movlb	2	; () banked
 23913  005F52  AB96               	btfss	(_loRa+150)& (0+255),5,b
 23914  005F54  0012               	return	
 23915                           
 23916                           ; BSR set to: 2
 23917  005F56  A996               	btfss	(_loRa+150)& (0+255),4,b
 23918  005F58  0012               	return	
 23919                           
 23920                           ; BSR set to: 2
 23921  005F5A  A596               	btfss	(_loRa+150)& (0+255),2,b
 23922  005F5C  0012               	return	
 23923                           
 23924                           ; BSR set to: 2
 23925                           ;lorawan.c: 174: else
 23926                           ;lorawan.c: 175: {
 23927                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 23928                           
 23929                           ; BSR set to: 2
 23930                           
 23931                           ; BSR set to: 2
 23932                           ;lorawan.c: 173: }
 23933                           
 23934                           ; BSR set to: 2
 23935                           ;lorawan.c: 171: {
 23936                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 23937                           ;	Return value of _LORAWAN_Join is never used
 23938  005F5E  0E07               	movlw	7
 23939  005F60  EC15  F03E         	call	_UpdateJoinInProgress
 23940                           
 23941                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 23942  005F64  0E8F               	movlw	143
 23943  005F66  0100               	movlb	0	; () banked
 23944  005F68  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 23945  005F6A  0E02               	movlw	2
 23946  005F6C  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 23947  005F6E  0E00               	movlw	0
 23948  005F70  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 23949  005F72  0E00               	movlw	0
 23950  005F74  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 23951  005F76  0102               	movlb	2	; () banked
 23952  005F78  51E4               	movf	(_loRa+228)& (0+255),w,b
 23953  005F7A  EC9D  F039         	call	_SwTimerSetTimeout
 23954                           
 23955                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 23956  005F7E  0102               	movlb	2	; () banked
 23957  005F80  51E4               	movf	(_loRa+228)& (0+255),w,b
 23958  005F82  EC62  F030         	call	_SwTimerStart
 23959                           
 23960                           ;lorawan.c: 180: return OK;
 23961                           ;	Return value of _LORAWAN_Join is never used
 23962  005F86  0012               	return	
 23963  005F88                     __end_of_LORAWAN_Join:
 23964                           	opt stack 0
 23965                           tosu	equ	0xFFF
 23966                           tosh	equ	0xFFE
 23967                           tosl	equ	0xFFD
 23968                           pclath	equ	0xFFA
 23969                           tblptru	equ	0xFF8
 23970                           tblptrh	equ	0xFF7
 23971                           tblptrl	equ	0xFF6
 23972                           tablat	equ	0xFF5
 23973                           prodh	equ	0xFF4
 23974                           prodl	equ	0xFF3
 23975                           intcon	equ	0xFF2
 23976                           intcon2	equ	0xFF1
 23977                           intcon3	equ	0xFF0
 23978                           indf0	equ	0xFEF
 23979                           postinc0	equ	0xFEE
 23980                           fsr0h	equ	0xFEA
 23981                           fsr0l	equ	0xFE9
 23982                           wreg	equ	0xFE8
 23983                           postinc1	equ	0xFE6
 23984                           postdec1	equ	0xFE5
 23985                           plusw1	equ	0xFE3
 23986                           fsr1h	equ	0xFE2
 23987                           fsr1l	equ	0xFE1
 23988                           indf2	equ	0xFDF
 23989                           postinc2	equ	0xFDE
 23990                           postdec2	equ	0xFDD
 23991                           plusw2	equ	0xFDB
 23992                           fsr2h	equ	0xFDA
 23993                           fsr2l	equ	0xFD9
 23994                           status	equ	0xFD8
 23995                           
 23996 ;; *************** function _UpdateJoinInProgress *****************
 23997 ;; Defined at:
 23998 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;  state           1    wreg     unsigned char 
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;  state           1    0[BANK0 ] unsigned char 
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1    wreg      void 
 24005 ;; Registers used:
 24006 ;;		wreg, status,2, status,0
 24007 ;; Tracked objects:
 24008 ;;		On entry : 0/0
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24016 ;;Total ram usage:        1 bytes
 24017 ;; Hardware stack levels used:    1
 24018 ;; Hardware stack levels required when called:    7
 24019 ;; This function calls:
 24020 ;;		Nothing
 24021 ;; This function is called by:
 24022 ;;		_LORAWAN_Join
 24023 ;; This function uses a non-reentrant model
 24024 ;;
 24025                           
 24026                           	psect	text120
 24027  007C2A                     __ptext120:
 24028                           	opt stack 0
 24029  007C2A                     _UpdateJoinInProgress:
 24030                           	opt stack 22
 24031                           
 24032                           ;incstack = 0
 24033                           ;UpdateJoinInProgress@state stored from wreg
 24034  007C2A  0100               	movlb	0	; () banked
 24035  007C2C  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 24036                           
 24037                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24038  007C2E  0102               	movlb	2	; () banked
 24039  007C30  9902               	bcf	(_loRa+2)& (0+255),4,b
 24040                           
 24041                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24042  007C32  8500               	bsf	_loRa& (0+255),2,b
 24043                           
 24044                           ; BSR set to: 2
 24045                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24046  007C34  5102               	movf	(_loRa+2)& (0+255),w,b
 24047  007C36  0100               	movlb	0	; () banked
 24048  007C38  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24049  007C3A  0BF0               	andlw	-16
 24050  007C3C  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24051  007C3E  0102               	movlb	2	; () banked
 24052  007C40  6F02               	movwf	(_loRa+2)& (0+255),b
 24053                           
 24054                           ; BSR set to: 2
 24055  007C42  0012               	return		;funcret
 24056  007C44                     __end_of_UpdateJoinInProgress:
 24057                           	opt stack 0
 24058                           tosu	equ	0xFFF
 24059                           tosh	equ	0xFFE
 24060                           tosl	equ	0xFFD
 24061                           pclath	equ	0xFFA
 24062                           tblptru	equ	0xFF8
 24063                           tblptrh	equ	0xFF7
 24064                           tblptrl	equ	0xFF6
 24065                           tablat	equ	0xFF5
 24066                           prodh	equ	0xFF4
 24067                           prodl	equ	0xFF3
 24068                           intcon	equ	0xFF2
 24069                           intcon2	equ	0xFF1
 24070                           intcon3	equ	0xFF0
 24071                           indf0	equ	0xFEF
 24072                           postinc0	equ	0xFEE
 24073                           fsr0h	equ	0xFEA
 24074                           fsr0l	equ	0xFE9
 24075                           wreg	equ	0xFE8
 24076                           postinc1	equ	0xFE6
 24077                           postdec1	equ	0xFE5
 24078                           plusw1	equ	0xFE3
 24079                           fsr1h	equ	0xFE2
 24080                           fsr1l	equ	0xFE1
 24081                           indf2	equ	0xFDF
 24082                           postinc2	equ	0xFDE
 24083                           postdec2	equ	0xFDD
 24084                           plusw2	equ	0xFDB
 24085                           fsr2h	equ	0xFDA
 24086                           fsr2l	equ	0xFD9
 24087                           status	equ	0xFD8
 24088                           
 24089 ;; *************** function _SelectChannelForTransmission *****************
 24090 ;; Defined at:
 24091 ;;		line 711 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 24092 ;; Parameters:    Size  Location     Type
 24093 ;;  transmission    1    wreg     unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;  transmission    1  100[BANK0 ] unsigned char 
 24096 ;;  frequency       4   94[BANK0 ] unsigned long 
 24097 ;;  channelIndex    1  101[BANK0 ] unsigned char 
 24098 ;;  result          1   99[BANK0 ] enum E7249
 24099 ;;  lastDataRate    1   98[BANK0 ] unsigned char 
 24100 ;; Return value:  Size  Location     Type
 24101 ;;                  1    wreg      enum E7249
 24102 ;; Registers used:
 24103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24104 ;; Tracked objects:
 24105 ;;		On entry : 0/0
 24106 ;;		On exit  : 0/0
 24107 ;;		Unchanged: 0/0
 24108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24110 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24112 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24113 ;;Total ram usage:        9 bytes
 24114 ;; Hardware stack levels used:    1
 24115 ;; Hardware stack levels required when called:   11
 24116 ;; This function calls:
 24117 ;;		_GenerateUSFrequency1
 24118 ;;		_GenerateUSFrequency2
 24119 ;;		_RADIO_SetBandwidth
 24120 ;;		_RADIO_SetCRC
 24121 ;;		_RADIO_SetChannelFrequency
 24122 ;;		_RADIO_SetIQInverted
 24123 ;;		_RADIO_SetLoRaSyncWord
 24124 ;;		_RADIO_SetOutputPower
 24125 ;;		_RADIO_SetSpreadingFactor
 24126 ;;		_SearchAvailableChannel
 24127 ;; This function is called by:
 24128 ;;		_Retransmissions
 24129 ;;		_TransmissionErrorCallback
 24130 ;;		_LORAWAN_Join
 24131 ;;		_LORAWAN_Send
 24132 ;;		_AckRetransmissionCallback
 24133 ;;		_UnconfirmedTransmissionCallback
 24134 ;; This function uses a non-reentrant model
 24135 ;;
 24136                           
 24137                           	psect	text121
 24138  00369E                     __ptext121:
 24139                           	opt stack 0
 24140  00369E                     _SelectChannelForTransmission:
 24141                           	opt stack 18
 24142                           
 24143                           ; BSR set to: 2
 24144                           ;incstack = 0
 24145                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24146  00369E  0100               	movlb	0	; () banked
 24147  0036A0  6FC4               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24148                           
 24149                           ;lorawan_na.c: 713: LorawanError_t result = OK;
 24150  0036A2  0E00               	movlw	0
 24151  0036A4  0100               	movlb	0	; () banked
 24152  0036A6  6FC3               	movwf	SelectChannelForTransmission@result& (0+255),b
 24153                           
 24154                           ; BSR set to: 0
 24155                           ;lorawan_na.c: 714: uint8_t channelIndex;
 24156                           ;lorawan_na.c: 715: uint32_t frequency;
 24157                           ;lorawan_na.c: 716: uint8_t lastDataRate;
 24158                           ;lorawan_na.c: 718: RADIO_SetLoRaSyncWord(loRa.syncWord);
 24159  0036A8  0102               	movlb	2	; () banked
 24160  0036AA  51E6               	movf	(_loRa+230)& (0+255),w,b
 24161  0036AC  EC1C  F03F         	call	_RADIO_SetLoRaSyncWord
 24162                           
 24163                           ;lorawan_na.c: 719: lastDataRate = loRa.currentDataRate;
 24164  0036B0  C2D0  F0C2         	movff	_loRa+208,SelectChannelForTransmission@lastDataRate
 24165                           
 24166                           ;lorawan_na.c: 720: if (transmissionType == 1)
 24167  0036B4  0100               	movlb	0	; () banked
 24168  0036B6  05C4               	decf	SelectChannelForTransmission@transmissionType& (0+255),w,b
 24169  0036B8  A4D8               	btfss	status,2,c
 24170  0036BA  D028               	goto	l1178
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;lorawan_na.c: 721: {
 24174                           ;lorawan_na.c: 722: result = SearchAvailableChannel (loRa.maxChannels, transmissionType,
      +                           &channelIndex);
 24175  0036BC  C0C4  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24176  0036C0  0EC5               	movlw	low SelectChannelForTransmission@channelIndex
 24177  0036C2  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24178  0036C4  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 24179  0036C6  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24180  0036C8  0102               	movlb	2	; () banked
 24181  0036CA  51DE               	movf	(_loRa+222)& (0+255),w,b
 24182  0036CC  ECD9  F026         	call	_SearchAvailableChannel
 24183  0036D0  0100               	movlb	0	; () banked
 24184  0036D2  6FC3               	movwf	SelectChannelForTransmission@result& (0+255),b
 24185                           
 24186                           ; BSR set to: 0
 24187                           ;lorawan_na.c: 723: RADIO_SetSpreadingFactor (spreadingFactor[loRa.currentDataRate]);
 24188  0036D4  0102               	movlb	2	; () banked
 24189  0036D6  51D0               	movf	(_loRa+208)& (0+255),w,b
 24190  0036D8  0D01               	mullw	1
 24191  0036DA  0E1F               	movlw	low _spreadingFactor
 24192  0036DC  24F3               	addwf	prodl,w,c
 24193  0036DE  6EF6               	movwf	tblptrl,c
 24194  0036E0  0EFF               	movlw	high _spreadingFactor
 24195  0036E2  20F4               	addwfc	prodh,w,c
 24196  0036E4  6EF7               	movwf	tblptrh,c
 24197  0036E6                     	if	1	;There are 3 active tblptr bytes
 24198  0036E6  6AF8               	clrf	tblptru,c
 24199  0036E8  0E00               	movlw	low (__mediumconst shr (0+16))
 24200  0036EA  22F8               	addwfc	tblptru,f,c
 24201  0036EC                     	endif
 24202  0036EC  0008               	tblrd		*
 24203  0036EE  50F5               	movf	tablat,w,c
 24204  0036F0  ECFE  F03E         	call	_RADIO_SetSpreadingFactor
 24205                           
 24206                           ;lorawan_na.c: 724: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate + 10 -
      +                           loRa.offset;
 24207  0036F4  0102               	movlb	2	; () banked
 24208  0036F6  51E0               	movf	(_loRa+224)& (0+255),w,b
 24209  0036F8  0800               	sublw	0
 24210  0036FA  25D0               	addwf	(_loRa+208)& (0+255),w,b
 24211  0036FC  0F0A               	addlw	10
 24212  0036FE  6F17               	movwf	(_loRa+23)& (0+255),b
 24213                           
 24214                           ; BSR set to: 2
 24215                           ;lorawan_na.c: 725: if (loRa.receiveWindow1Parameters.dataRate >= 14)
 24216  003700  0E0D               	movlw	13
 24217  003702  6517               	cpfsgt	(_loRa+23)& (0+255),b
 24218  003704  D053               	goto	l1180
 24219                           
 24220                           ; BSR set to: 2
 24221                           ;lorawan_na.c: 726: {
 24222                           ;lorawan_na.c: 727: loRa.receiveWindow1Parameters.dataRate = 13;
 24223  003706  0E0D               	movlw	13
 24224  003708  6F17               	movwf	(_loRa+23)& (0+255),b
 24225                           
 24226                           ; BSR set to: 2
 24227                           ;lorawan_na.c: 728: }
 24228                           ;lorawan_na.c: 729: }
 24229  00370A  D050               	goto	l1180
 24230  00370C                     l1178:
 24231                           
 24232                           ; BSR set to: 0
 24233                           ;lorawan_na.c: 730: else
 24234                           ;lorawan_na.c: 731: {
 24235                           ;lorawan_na.c: 732: if (loRa.lorawanMacStatus.alternativeChannelUs == 0)
 24236  00370C  0102               	movlb	2	; () banked
 24237  00370E  BD00               	btfsc	_loRa& (0+255),6,b
 24238  003710  D01A               	goto	l1181
 24239                           
 24240                           ; BSR set to: 2
 24241                           ;lorawan_na.c: 733: {
 24242                           ;lorawan_na.c: 734: loRa.currentDataRate = 0;
 24243  003712  0E00               	movlw	0
 24244  003714  6FD0               	movwf	(_loRa+208)& (0+255),b
 24245                           
 24246                           ; BSR set to: 2
 24247                           ;lorawan_na.c: 735: result = SearchAvailableChannel (64, transmissionType, &channelIndex
      +                          );
 24248  003716  C0C4  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24249  00371A  0EC5               	movlw	low SelectChannelForTransmission@channelIndex
 24250  00371C  0100               	movlb	0	; () banked
 24251  00371E  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24252  003720  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 24253  003722  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24254  003724  0E40               	movlw	64
 24255  003726  ECD9  F026         	call	_SearchAvailableChannel
 24256  00372A  0100               	movlb	0	; () banked
 24257  00372C  6FC3               	movwf	SelectChannelForTransmission@result& (0+255),b
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;lorawan_na.c: 736: RADIO_SetSpreadingFactor (SF_10);
 24261  00372E  0E0A               	movlw	10
 24262  003730  ECFE  F03E         	call	_RADIO_SetSpreadingFactor
 24263                           
 24264                           ;lorawan_na.c: 737: loRa.receiveWindow1Parameters.dataRate = 0 + 10 - loRa.offset;
 24265  003734  0102               	movlb	2	; () banked
 24266  003736  51E0               	movf	(_loRa+224)& (0+255),w,b
 24267  003738  0800               	sublw	0
 24268  00373A  0F0A               	addlw	10
 24269  00373C  6F17               	movwf	(_loRa+23)& (0+255),b
 24270                           
 24271                           ; BSR set to: 2
 24272                           ;lorawan_na.c: 738: RADIO_SetBandwidth (BW_125KHZ);
 24273  00373E  0E07               	movlw	7
 24274  003740  EC12  F03F         	call	_RADIO_SetBandwidth
 24275                           
 24276                           ;lorawan_na.c: 739: }
 24277  003744  D01F               	goto	l1182
 24278  003746                     l1181:
 24279                           
 24280                           ;lorawan_na.c: 740: else
 24281                           ;lorawan_na.c: 741: {
 24282                           ;lorawan_na.c: 742: loRa.currentDataRate = 4;
 24283  003746  0E04               	movlw	4
 24284  003748  0102               	movlb	2	; () banked
 24285  00374A  6FD0               	movwf	(_loRa+208)& (0+255),b
 24286                           
 24287                           ; BSR set to: 2
 24288                           ;lorawan_na.c: 743: result = SearchAvailableChannel (8, transmissionType, &channelIndex)
      +                          ;
 24289  00374C  C0C4  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24290  003750  0EC5               	movlw	low SelectChannelForTransmission@channelIndex
 24291  003752  0100               	movlb	0	; () banked
 24292  003754  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24293  003756  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 24294  003758  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24295  00375A  0E08               	movlw	8
 24296  00375C  ECD9  F026         	call	_SearchAvailableChannel
 24297  003760  0100               	movlb	0	; () banked
 24298  003762  6FC3               	movwf	SelectChannelForTransmission@result& (0+255),b
 24299                           
 24300                           ; BSR set to: 0
 24301                           ;lorawan_na.c: 744: RADIO_SetSpreadingFactor (SF_8);
 24302  003764  0E08               	movlw	8
 24303  003766  ECFE  F03E         	call	_RADIO_SetSpreadingFactor
 24304                           
 24305                           ;lorawan_na.c: 745: loRa.receiveWindow1Parameters.dataRate = 4 + 10 - loRa.offset;
 24306  00376A  0102               	movlb	2	; () banked
 24307  00376C  51E0               	movf	(_loRa+224)& (0+255),w,b
 24308  00376E  0800               	sublw	0
 24309  003770  0F0E               	addlw	14
 24310  003772  6F17               	movwf	(_loRa+23)& (0+255),b
 24311                           
 24312                           ; BSR set to: 2
 24313                           ;lorawan_na.c: 746: if (loRa.receiveWindow1Parameters.dataRate >= 14)
 24314  003774  0E0D               	movlw	13
 24315  003776  6517               	cpfsgt	(_loRa+23)& (0+255),b
 24316  003778  D002               	goto	l1183
 24317                           
 24318                           ; BSR set to: 2
 24319                           ;lorawan_na.c: 747: {
 24320                           ;lorawan_na.c: 748: loRa.receiveWindow1Parameters.dataRate = 13;
 24321  00377A  0E0D               	movlw	13
 24322  00377C  6F17               	movwf	(_loRa+23)& (0+255),b
 24323  00377E                     l1183:
 24324                           
 24325                           ; BSR set to: 2
 24326                           ;lorawan_na.c: 749: }
 24327                           ;lorawan_na.c: 750: RADIO_SetBandwidth (BW_500KHZ);
 24328                           
 24329                           ; BSR set to: 2
 24330  00377E  0E09               	movlw	9
 24331  003780  EC12  F03F         	call	_RADIO_SetBandwidth
 24332  003784                     l1182:
 24333                           
 24334                           ;lorawan_na.c: 751: }
 24335                           ;lorawan_na.c: 752: loRa.lorawanMacStatus.alternativeChannelUs = !loRa.lorawanMacStatus.
      +                          alternativeChannelUs;
 24336  003784  0102               	movlb	2	; () banked
 24337  003786  BD00               	btfsc	_loRa& (0+255),6,b
 24338  003788  D004               	goto	u9340
 24339  00378A  0100               	movlb	0	; () banked
 24340  00378C  6BBD               	clrf	??_SelectChannelForTransmission& (0+255),b
 24341  00378E  2BBD               	incf	??_SelectChannelForTransmission& (0+255),f,b
 24342  003790  D002               	goto	u9358
 24343  003792                     u9340:
 24344  003792  0100               	movlb	0	; () banked
 24345  003794  6BBD               	clrf	??_SelectChannelForTransmission& (0+255),b
 24346  003796                     u9358:
 24347  003796  3BBD               	swapf	??_SelectChannelForTransmission& (0+255),f,b
 24348  003798  47BD               	rlncf	??_SelectChannelForTransmission& (0+255),f,b
 24349  00379A  47BD               	rlncf	??_SelectChannelForTransmission& (0+255),f,b
 24350  00379C  0102               	movlb	2	; () banked
 24351  00379E  5100               	movf	_loRa& (0+255),w,b
 24352  0037A0  0100               	movlb	0	; () banked
 24353  0037A2  19BD               	xorwf	??_SelectChannelForTransmission& (0+255),w,b
 24354  0037A4  0BBF               	andlw	-65
 24355  0037A6  19BD               	xorwf	??_SelectChannelForTransmission& (0+255),w,b
 24356  0037A8  0102               	movlb	2	; () banked
 24357  0037AA  6F00               	movwf	_loRa& (0+255),b
 24358  0037AC                     l1180:
 24359                           
 24360                           ; BSR set to: 2
 24361                           ;lorawan_na.c: 753: }
 24362                           ;lorawan_na.c: 755: loRa.currentDataRate = lastDataRate;
 24363                           
 24364                           ; BSR set to: 2
 24365  0037AC  C0C2  F2D0         	movff	SelectChannelForTransmission@lastDataRate,_loRa+208
 24366                           
 24367                           ; BSR set to: 2
 24368                           ;lorawan_na.c: 757: if (result == OK)
 24369  0037B0  0100               	movlb	0	; () banked
 24370  0037B2  51C3               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24371  0037B4  A4D8               	btfss	status,2,c
 24372  0037B6  D068               	goto	l1184
 24373                           
 24374                           ; BSR set to: 0
 24375                           ;lorawan_na.c: 758: {
 24376                           ;lorawan_na.c: 759: if (channelIndex < 64)
 24377  0037B8  0E40               	movlw	64
 24378  0037BA  61C5               	cpfslt	SelectChannelForTransmission@channelIndex& (0+255),b
 24379  0037BC  D01F               	goto	l1185
 24380                           
 24381                           ; BSR set to: 0
 24382                           ;lorawan_na.c: 760: {
 24383                           ;lorawan_na.c: 761: frequency = GenerateUSFrequency1 (channelIndex);
 24384  0037BE  51C5               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24385  0037C0  EC7C  F038         	call	_GenerateUSFrequency1
 24386  0037C4  C0A6  F0BE         	movff	?_GenerateUSFrequency1,SelectChannelForTransmission@frequency
 24387  0037C8  C0A7  F0BF         	movff	?_GenerateUSFrequency1+1,SelectChannelForTransmission@frequency+1
 24388  0037CC  C0A8  F0C0         	movff	?_GenerateUSFrequency1+2,SelectChannelForTransmission@frequency+2
 24389  0037D0  C0A9  F0C1         	movff	?_GenerateUSFrequency1+3,SelectChannelForTransmission@frequency+3
 24390                           
 24391                           ;lorawan_na.c: 762: RADIO_SetBandwidth (BW_125KHZ);
 24392  0037D4  0E07               	movlw	7
 24393  0037D6  EC12  F03F         	call	_RADIO_SetBandwidth
 24394                           
 24395                           ;lorawan_na.c: 763: RADIO_SetOutputPower (txPower915[loRa.txPower]);
 24396  0037DA  0102               	movlb	2	; () banked
 24397  0037DC  51D2               	movf	(_loRa+210)& (0+255),w,b
 24398  0037DE  0D01               	mullw	1
 24399  0037E0  0E57               	movlw	low _txPower915
 24400  0037E2  24F3               	addwf	prodl,w,c
 24401  0037E4  6EF6               	movwf	tblptrl,c
 24402  0037E6  0EFF               	movlw	high _txPower915
 24403  0037E8  20F4               	addwfc	prodh,w,c
 24404  0037EA  6EF7               	movwf	tblptrh,c
 24405  0037EC                     	if	1	;There are 3 active tblptr bytes
 24406  0037EC  6AF8               	clrf	tblptru,c
 24407  0037EE  0E00               	movlw	low (__mediumconst shr (0+16))
 24408  0037F0  22F8               	addwfc	tblptru,f,c
 24409  0037F2                     	endif
 24410  0037F2  0008               	tblrd		*
 24411  0037F4  50F5               	movf	tablat,w,c
 24412  0037F6  EC03  F03F         	call	_RADIO_SetOutputPower
 24413                           
 24414                           ;lorawan_na.c: 764: }
 24415  0037FA  D034               	goto	l1188
 24416  0037FC                     l1185:
 24417                           
 24418                           ;lorawan_na.c: 765: else
 24419                           ;lorawan_na.c: 766: {
 24420                           ;lorawan_na.c: 767: frequency = GenerateUSFrequency2 (channelIndex);
 24421  0037FC  0100               	movlb	0	; () banked
 24422  0037FE  51C5               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24423  003800  EC75  F034         	call	_GenerateUSFrequency2
 24424  003804  C0A6  F0BE         	movff	?_GenerateUSFrequency2,SelectChannelForTransmission@frequency
 24425  003808  C0A7  F0BF         	movff	?_GenerateUSFrequency2+1,SelectChannelForTransmission@frequency+1
 24426  00380C  C0A8  F0C0         	movff	?_GenerateUSFrequency2+2,SelectChannelForTransmission@frequency+2
 24427  003810  C0A9  F0C1         	movff	?_GenerateUSFrequency2+3,SelectChannelForTransmission@frequency+3
 24428                           
 24429                           ;lorawan_na.c: 768: RADIO_SetBandwidth (BW_500KHZ);
 24430  003814  0E09               	movlw	9
 24431  003816  EC12  F03F         	call	_RADIO_SetBandwidth
 24432                           
 24433                           ;lorawan_na.c: 771: if (txPower915[loRa.txPower] <= 26)
 24434  00381A  0102               	movlb	2	; () banked
 24435  00381C  51D2               	movf	(_loRa+210)& (0+255),w,b
 24436  00381E  0D01               	mullw	1
 24437  003820  0E57               	movlw	low _txPower915
 24438  003822  24F3               	addwf	prodl,w,c
 24439  003824  6EF6               	movwf	tblptrl,c
 24440  003826  0EFF               	movlw	high _txPower915
 24441  003828  20F4               	addwfc	prodh,w,c
 24442  00382A  6EF7               	movwf	tblptrh,c
 24443  00382C                     	if	1	;There are 3 active tblptr bytes
 24444  00382C  6AF8               	clrf	tblptru,c
 24445  00382E  0E00               	movlw	low (__mediumconst shr (0+16))
 24446  003830  22F8               	addwfc	tblptru,f,c
 24447  003832                     	endif
 24448  003832  0008               	tblrd		*
 24449  003834  50F5               	movf	tablat,w,c
 24450  003836  0A80               	xorlw	128
 24451  003838  0F65               	addlw	-155
 24452  00383A  B0D8               	btfsc	status,0,c
 24453  00383C  D010               	goto	l1187
 24454                           
 24455                           ; BSR set to: 2
 24456                           ;lorawan_na.c: 772: {
 24457                           ;lorawan_na.c: 773: RADIO_SetOutputPower (txPower915[loRa.txPower]);
 24458  00383E  51D2               	movf	(_loRa+210)& (0+255),w,b
 24459  003840  0D01               	mullw	1
 24460  003842  0E57               	movlw	low _txPower915
 24461  003844  24F3               	addwf	prodl,w,c
 24462  003846  6EF6               	movwf	tblptrl,c
 24463  003848  0EFF               	movlw	high _txPower915
 24464  00384A  20F4               	addwfc	prodh,w,c
 24465  00384C  6EF7               	movwf	tblptrh,c
 24466  00384E                     	if	1	;There are 3 active tblptr bytes
 24467  00384E  6AF8               	clrf	tblptru,c
 24468  003850  0E00               	movlw	low (__mediumconst shr (0+16))
 24469  003852  22F8               	addwfc	tblptru,f,c
 24470  003854                     	endif
 24471  003854  0008               	tblrd		*
 24472  003856  50F5               	movf	tablat,w,c
 24473  003858  EC03  F03F         	call	_RADIO_SetOutputPower
 24474                           
 24475                           ;lorawan_na.c: 774: }
 24476  00385C  D003               	goto	l1188
 24477  00385E                     l1187:
 24478                           
 24479                           ;lorawan_na.c: 775: else
 24480                           ;lorawan_na.c: 776: {
 24481                           ;lorawan_na.c: 777: RADIO_SetOutputPower (26);
 24482  00385E  0E1A               	movlw	26
 24483  003860  EC03  F03F         	call	_RADIO_SetOutputPower
 24484  003864                     l1188:
 24485                           
 24486                           ;lorawan_na.c: 778: }
 24487                           ;lorawan_na.c: 779: }
 24488                           ;lorawan_na.c: 780: RADIO_SetChannelFrequency (frequency);
 24489  003864  C0BE  F060         	movff	SelectChannelForTransmission@frequency,RADIO_SetChannelFrequency@frequency
 24490  003868  C0BF  F061         	movff	SelectChannelForTransmission@frequency+1,RADIO_SetChannelFrequency@frequency+1
 24491  00386C  C0C0  F062         	movff	SelectChannelForTransmission@frequency+2,RADIO_SetChannelFrequency@frequency+2
 24492  003870  C0C1  F063         	movff	SelectChannelForTransmission@frequency+3,RADIO_SetChannelFrequency@frequency+3
 24493  003874  EC86  F031         	call	_RADIO_SetChannelFrequency	;wreg free
 24494                           
 24495                           ;lorawan_na.c: 781: RADIO_SetCRC(1);
 24496  003878  0E01               	movlw	1
 24497  00387A  EC0D  F03F         	call	_RADIO_SetCRC
 24498                           
 24499                           ;lorawan_na.c: 782: RADIO_SetIQInverted(0);
 24500  00387E  0E00               	movlw	0
 24501  003880  EC08  F03F         	call	_RADIO_SetIQInverted
 24502                           
 24503                           ;lorawan_na.c: 783: loRa.lastUsedChannelIndex = channelIndex;
 24504  003884  C0C5  F2CB         	movff	SelectChannelForTransmission@channelIndex,_loRa+203
 24505  003888                     l1184:
 24506                           
 24507                           ;lorawan_na.c: 784: }
 24508                           ;lorawan_na.c: 786: return result;
 24509  003888  0100               	movlb	0	; () banked
 24510  00388A  51C3               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24511  00388C  0012               	return	
 24512  00388E                     __end_of_SelectChannelForTransmission:
 24513                           	opt stack 0
 24514                           tosu	equ	0xFFF
 24515                           tosh	equ	0xFFE
 24516                           tosl	equ	0xFFD
 24517                           pclath	equ	0xFFA
 24518                           tblptru	equ	0xFF8
 24519                           tblptrh	equ	0xFF7
 24520                           tblptrl	equ	0xFF6
 24521                           tablat	equ	0xFF5
 24522                           prodh	equ	0xFF4
 24523                           prodl	equ	0xFF3
 24524                           intcon	equ	0xFF2
 24525                           intcon2	equ	0xFF1
 24526                           intcon3	equ	0xFF0
 24527                           indf0	equ	0xFEF
 24528                           postinc0	equ	0xFEE
 24529                           fsr0h	equ	0xFEA
 24530                           fsr0l	equ	0xFE9
 24531                           wreg	equ	0xFE8
 24532                           postinc1	equ	0xFE6
 24533                           postdec1	equ	0xFE5
 24534                           plusw1	equ	0xFE3
 24535                           fsr1h	equ	0xFE2
 24536                           fsr1l	equ	0xFE1
 24537                           indf2	equ	0xFDF
 24538                           postinc2	equ	0xFDE
 24539                           postdec2	equ	0xFDD
 24540                           plusw2	equ	0xFDB
 24541                           fsr2h	equ	0xFDA
 24542                           fsr2l	equ	0xFD9
 24543                           status	equ	0xFD8
 24544                           
 24545 ;; *************** function _SearchAvailableChannel *****************
 24546 ;; Defined at:
 24547 ;;		line 625 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 24548 ;; Parameters:    Size  Location     Type
 24549 ;;  maxChannels     1    wreg     unsigned char 
 24550 ;;  transmission    1   79[BANK0 ] unsigned char 
 24551 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 24552 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24553 ;; Auto vars:     Size  Location     Type
 24554 ;;  maxChannels     1   90[BANK0 ] unsigned char 
 24555 ;;  i               1   92[BANK0 ] unsigned char 
 24556 ;;  randomNumber    1   91[BANK0 ] unsigned char 
 24557 ;;  startingInde    1   89[BANK0 ] unsigned char 
 24558 ;;  result          1   88[BANK0 ] enum E7249
 24559 ;;  randomNumber    1   87[BANK0 ] unsigned char 
 24560 ;; Return value:  Size  Location     Type
 24561 ;;                  1    wreg      enum E7249
 24562 ;; Registers used:
 24563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24564 ;; Tracked objects:
 24565 ;;		On entry : 0/0
 24566 ;;		On exit  : 0/0
 24567 ;;		Unchanged: 0/0
 24568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24569 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24571 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24573 ;;Total ram usage:       14 bytes
 24574 ;; Hardware stack levels used:    1
 24575 ;; Hardware stack levels required when called:   10
 24576 ;; This function calls:
 24577 ;;		_Random
 24578 ;; This function is called by:
 24579 ;;		_SelectChannelForTransmission
 24580 ;;		_LORAWAN_RxDone
 24581 ;; This function uses a non-reentrant model
 24582 ;;
 24583                           
 24584                           	psect	text122
 24585  004DB2                     __ptext122:
 24586                           	opt stack 0
 24587  004DB2                     _SearchAvailableChannel:
 24588                           	opt stack 18
 24589                           
 24590                           ; BSR set to: 0
 24591                           ;incstack = 0
 24592                           ;SearchAvailableChannel@maxChannels stored from wreg
 24593  004DB2  0100               	movlb	0	; () banked
 24594  004DB4  6FBA               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24595                           
 24596                           ;lorawan_na.c: 627: uint8_t randomNumberCopy, randomNumber, i;
 24597                           ;lorawan_na.c: 628: LorawanError_t result = OK;
 24598  004DB6  0E00               	movlw	0
 24599  004DB8  0100               	movlb	0	; () banked
 24600  004DBA  6FB8               	movwf	SearchAvailableChannel@result& (0+255),b
 24601                           
 24602                           ;lorawan_na.c: 629: uint8_t startingIndex = 0;
 24603  004DBC  0E00               	movlw	0
 24604  004DBE  6FB9               	movwf	SearchAvailableChannel@startingIndex& (0+255),b
 24605                           
 24606                           ; BSR set to: 0
 24607                           ;lorawan_na.c: 631: if (maxChannels == 8)
 24608  004DC0  0E08               	movlw	8
 24609  004DC2  19BA               	xorwf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24610  004DC4  A4D8               	btfss	status,2,c
 24611  004DC6  D002               	goto	l1145
 24612                           
 24613                           ; BSR set to: 0
 24614                           ;lorawan_na.c: 632: {
 24615                           ;lorawan_na.c: 633: startingIndex = 64;
 24616  004DC8  0E40               	movlw	64
 24617  004DCA  6FB9               	movwf	SearchAvailableChannel@startingIndex& (0+255),b
 24618  004DCC                     l1145:
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;lorawan_na.c: 634: }
 24622                           ;lorawan_na.c: 635: randomNumber = Random (maxChannels) + 1;
 24623                           
 24624                           ; BSR set to: 0
 24625  004DCC  C0BA  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 24626  004DD0  6BAE               	clrf	(Random@max+1)& (0+255),b
 24627  004DD2  EC2B  F03D         	call	_Random	;wreg free
 24628  004DD6  0100               	movlb	0	; () banked
 24629  004DD8  29AD               	incf	?_Random& (0+255),w,b
 24630  004DDA  6FBB               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24631                           
 24632                           ; BSR set to: 0
 24633                           ;lorawan_na.c: 636: randomNumberCopy = randomNumber;
 24634  004DDC  C0BB  F0B7         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24635                           
 24636                           ;lorawan_na.c: 638: while (randomNumber)
 24637  004DE0  D05C               	goto	l1154
 24638  004DE2                     l1147:
 24639                           
 24640                           ; BSR set to: 0
 24641                           ;lorawan_na.c: 639: {
 24642                           ;lorawan_na.c: 640: for (i = startingIndex; (i < (startingIndex + maxChannels)) && (rand
      +                          omNumber != 0) ; i++)
 24643  004DE2  C0B9  F0BC         	movff	SearchAvailableChannel@startingIndex,SearchAvailableChannel@i
 24644  004DE6  D03B               	goto	l1148
 24645  004DE8                     
 24646                           ; BSR set to: 0
 24647                           ;lorawan_na.c: 641: {
 24648                           ;lorawan_na.c: 642: if ( (loRa.currentDataRate >= Channels[i].dataRange.min) && (loRa.cu
      +                          rrentDataRate <= Channels[i].dataRange.max) && (Channels[i].status == 1) )
 24649                           
 24650                           ; BSR set to: 0
 24651  004DE8  51BC               	movf	SearchAvailableChannel@i& (0+255),w,b
 24652  004DEA  0D02               	mullw	2
 24653  004DEC  0E01               	movlw	1
 24654  004DEE  26F3               	addwf	prodl,f,c
 24655  004DF0  0E00               	movlw	0
 24656  004DF2  22F4               	addwfc	prodh,f,c
 24657  004DF4  0E00               	movlw	low _Channels
 24658  004DF6  24F3               	addwf	prodl,w,c
 24659  004DF8  6ED9               	movwf	fsr2l,c
 24660  004DFA  0E04               	movlw	high _Channels
 24661  004DFC  20F4               	addwfc	prodh,w,c
 24662  004DFE  6EDA               	movwf	fsr2h,c
 24663  004E00  0104               	movlb	4	; () banked
 24664  004E02  50DF               	movf	223,w,c
 24665  004E04  0B0F               	andlw	15
 24666  004E06  0100               	movlb	0	; () banked
 24667  004E08  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 24668  004E0A  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 24669  004E0C  0102               	movlb	2	; () banked
 24670  004E0E  5DD0               	subwf	(_loRa+208)& (0+255),w,b
 24671  004E10  A0D8               	btfss	status,0,c
 24672  004E12  D023               	goto	l1150
 24673                           
 24674                           ; BSR set to: 2
 24675  004E14  0100               	movlb	0	; () banked
 24676  004E16  51BC               	movf	SearchAvailableChannel@i& (0+255),w,b
 24677  004E18  0D02               	mullw	2
 24678  004E1A  0E01               	movlw	1
 24679  004E1C  26F3               	addwf	prodl,f,c
 24680  004E1E  0E00               	movlw	0
 24681  004E20  22F4               	addwfc	prodh,f,c
 24682  004E22  0E00               	movlw	low _Channels
 24683  004E24  24F3               	addwf	prodl,w,c
 24684  004E26  6ED9               	movwf	fsr2l,c
 24685  004E28  0E04               	movlw	high _Channels
 24686  004E2A  20F4               	addwfc	prodh,w,c
 24687  004E2C  6EDA               	movwf	fsr2h,c
 24688  004E2E  0104               	movlb	4	; () banked
 24689  004E30  38DF               	swapf	223,w,c
 24690  004E32  0B0F               	andlw	15
 24691  004E34  0100               	movlb	0	; () banked
 24692  004E36  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 24693  004E38  0102               	movlb	2	; () banked
 24694  004E3A  51D0               	movf	(_loRa+208)& (0+255),w,b
 24695  004E3C  0100               	movlb	0	; () banked
 24696  004E3E  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24697  004E40  A0D8               	btfss	status,0,c
 24698  004E42  D00B               	goto	l1150
 24699                           
 24700                           ; BSR set to: 0
 24701  004E44  51BC               	movf	SearchAvailableChannel@i& (0+255),w,b
 24702  004E46  0D02               	mullw	2
 24703  004E48  0E00               	movlw	low _Channels
 24704  004E4A  24F3               	addwf	prodl,w,c
 24705  004E4C  6ED9               	movwf	fsr2l,c
 24706  004E4E  0E04               	movlw	high _Channels
 24707  004E50  20F4               	addwfc	prodh,w,c
 24708  004E52  6EDA               	movwf	fsr2h,c
 24709  004E54  04DE               	decf	postinc2,w,c
 24710  004E56  B4D8               	btfsc	status,2,c
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;lorawan_na.c: 643: {
 24714                           ;lorawan_na.c: 644: randomNumber --;
 24715  004E58  07BB               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24716  004E5A                     l1150:
 24717  004E5A  0100               	movlb	0	; () banked
 24718  004E5C  2BBC               	incf	SearchAvailableChannel@i& (0+255),f,b
 24719  004E5E                     l1148:
 24720                           
 24721                           ; BSR set to: 0
 24722                           
 24723                           ; BSR set to: 0
 24724  004E5E  51BA               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24725  004E60  C0B9  F0B2         	movff	SearchAvailableChannel@startingIndex,??_SearchAvailableChannel
 24726  004E64  6BB3               	clrf	(??_SearchAvailableChannel+1)& (0+255),b
 24727  004E66  27B2               	addwf	??_SearchAvailableChannel& (0+255),f,b
 24728  004E68  0E00               	movlw	0
 24729  004E6A  23B3               	addwfc	(??_SearchAvailableChannel+1)& (0+255),f,b
 24730  004E6C  51BC               	movf	SearchAvailableChannel@i& (0+255),w,b
 24731  004E6E  6FB4               	movwf	(??_SearchAvailableChannel+2)& (0+255),b
 24732  004E70  6BB5               	clrf	(??_SearchAvailableChannel+3)& (0+255),b
 24733  004E72  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 24734  004E74  5DB4               	subwf	(??_SearchAvailableChannel+2)& (0+255),w,b
 24735  004E76  51B5               	movf	(??_SearchAvailableChannel+3)& (0+255),w,b
 24736  004E78  0A80               	xorlw	128
 24737  004E7A  6FB6               	movwf	(??_SearchAvailableChannel+4)& (0+255),b
 24738  004E7C  51B3               	movf	(??_SearchAvailableChannel+1)& (0+255),w,b
 24739  004E7E  0A80               	xorlw	128
 24740  004E80  59B6               	subwfb	(??_SearchAvailableChannel+4)& (0+255),w,b
 24741  004E82  B0D8               	btfsc	status,0,c
 24742  004E84  D003               	goto	u8410
 24743                           
 24744                           ; BSR set to: 0
 24745  004E86  51BB               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24746  004E88  A4D8               	btfss	status,2,c
 24747  004E8A  D7AE               	goto	l1149
 24748  004E8C                     u8410:
 24749                           
 24750                           ; BSR set to: 0
 24751                           ;lorawan_na.c: 645: }
 24752                           ;lorawan_na.c: 646: }
 24753                           ;lorawan_na.c: 649: if ( randomNumber == randomNumberCopy )
 24754                           
 24755                           ; BSR set to: 0
 24756                           
 24757                           ; BSR set to: 0
 24758  004E8C  51B7               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24759  004E8E  19BB               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24760  004E90  A4D8               	btfss	status,2,c
 24761  004E92  D003               	goto	l1154
 24762                           
 24763                           ; BSR set to: 0
 24764                           ;lorawan_na.c: 650: {
 24765                           ;lorawan_na.c: 651: result = NO_CHANNELS_FOUND;
 24766  004E94  0E09               	movlw	9
 24767  004E96  6FB8               	movwf	SearchAvailableChannel@result& (0+255),b
 24768                           
 24769                           ;lorawan_na.c: 652: break;
 24770  004E98  D003               	goto	u8430
 24771  004E9A                     l1154:
 24772                           
 24773                           ; BSR set to: 0
 24774                           
 24775                           ; BSR set to: 0
 24776                           
 24777                           ; BSR set to: 0
 24778  004E9A  51BB               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24779  004E9C  A4D8               	btfss	status,2,c
 24780  004E9E  D7A1               	goto	l1147
 24781  004EA0                     u8430:
 24782                           
 24783                           ; BSR set to: 0
 24784                           ;lorawan_na.c: 653: }
 24785                           ;lorawan_na.c: 654: }
 24786                           ;lorawan_na.c: 656: if (i != 0)
 24787                           
 24788                           ; BSR set to: 0
 24789  004EA0  51BC               	movf	SearchAvailableChannel@i& (0+255),w,b
 24790  004EA2  B4D8               	btfsc	status,2,c
 24791  004EA4  D002               	goto	l1156
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;lorawan_na.c: 657: {
 24795                           ;lorawan_na.c: 658: *channelIndex = i - 1;
 24796  004EA6  05BC               	decf	SearchAvailableChannel@i& (0+255),w,b
 24797  004EA8  D001               	goto	L15
 24798  004EAA                     l1156:
 24799                           
 24800                           ; BSR set to: 0
 24801                           ;lorawan_na.c: 660: else
 24802                           ;lorawan_na.c: 661: {
 24803                           ;lorawan_na.c: 662: *channelIndex = maxChannels - 1;
 24804                           
 24805                           ; BSR set to: 0
 24806  004EAA  05BA               	decf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24807  004EAC                     L15:
 24808  004EAC  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24809  004EB0  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24810  004EB4  6EDF               	movwf	indf2,c
 24811                           
 24812                           ; BSR set to: 0
 24813                           ;lorawan_na.c: 663: }
 24814                           ;lorawan_na.c: 664: return result;
 24815                           
 24816                           ; BSR set to: 0
 24817  004EB6  51B8               	movf	SearchAvailableChannel@result& (0+255),w,b
 24818  004EB8  0012               	return	
 24819  004EBA                     __end_of_SearchAvailableChannel:
 24820                           	opt stack 0
 24821                           tosu	equ	0xFFF
 24822                           tosh	equ	0xFFE
 24823                           tosl	equ	0xFFD
 24824                           pclath	equ	0xFFA
 24825                           tblptru	equ	0xFF8
 24826                           tblptrh	equ	0xFF7
 24827                           tblptrl	equ	0xFF6
 24828                           tablat	equ	0xFF5
 24829                           prodh	equ	0xFF4
 24830                           prodl	equ	0xFF3
 24831                           intcon	equ	0xFF2
 24832                           intcon2	equ	0xFF1
 24833                           intcon3	equ	0xFF0
 24834                           indf0	equ	0xFEF
 24835                           postinc0	equ	0xFEE
 24836                           fsr0h	equ	0xFEA
 24837                           fsr0l	equ	0xFE9
 24838                           wreg	equ	0xFE8
 24839                           postinc1	equ	0xFE6
 24840                           postdec1	equ	0xFE5
 24841                           plusw1	equ	0xFE3
 24842                           fsr1h	equ	0xFE2
 24843                           fsr1l	equ	0xFE1
 24844                           indf2	equ	0xFDF
 24845                           postinc2	equ	0xFDE
 24846                           postdec2	equ	0xFDD
 24847                           plusw2	equ	0xFDB
 24848                           fsr2h	equ	0xFDA
 24849                           fsr2l	equ	0xFD9
 24850                           status	equ	0xFD8
 24851                           
 24852 ;; *************** function _RADIO_SetSpreadingFactor *****************
 24853 ;; Defined at:
 24854 ;;		line 1527 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;  spreadingFac    1    wreg     enum E6994
 24857 ;; Auto vars:     Size  Location     Type
 24858 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 24859 ;; Return value:  Size  Location     Type
 24860 ;;                  1    wreg      void 
 24861 ;; Registers used:
 24862 ;;		wreg
 24863 ;; Tracked objects:
 24864 ;;		On entry : 0/0
 24865 ;;		On exit  : 0/0
 24866 ;;		Unchanged: 0/0
 24867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24872 ;;Total ram usage:        1 bytes
 24873 ;; Hardware stack levels used:    1
 24874 ;; Hardware stack levels required when called:    7
 24875 ;; This function calls:
 24876 ;;		Nothing
 24877 ;; This function is called by:
 24878 ;;		_ConfigureRadio
 24879 ;;		_SelectChannelForTransmission
 24880 ;; This function uses a non-reentrant model
 24881 ;;
 24882                           
 24883                           	psect	text123
 24884  007DFC                     __ptext123:
 24885                           	opt stack 0
 24886  007DFC                     _RADIO_SetSpreadingFactor:
 24887                           	opt stack 21
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;incstack = 0
 24891                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 24892  007DFC  0100               	movlb	0	; () banked
 24893  007DFE  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 24894                           
 24895                           ;radio_driver_SX1276.c: 1529: RadioConfiguration.dataRate = spreadingFactor;
 24896  007E00  C060  F18D         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 24897  007E04  0012               	return		;funcret
 24898  007E06                     __end_of_RADIO_SetSpreadingFactor:
 24899                           	opt stack 0
 24900                           tosu	equ	0xFFF
 24901                           tosh	equ	0xFFE
 24902                           tosl	equ	0xFFD
 24903                           pclath	equ	0xFFA
 24904                           tblptru	equ	0xFF8
 24905                           tblptrh	equ	0xFF7
 24906                           tblptrl	equ	0xFF6
 24907                           tablat	equ	0xFF5
 24908                           prodh	equ	0xFF4
 24909                           prodl	equ	0xFF3
 24910                           intcon	equ	0xFF2
 24911                           intcon2	equ	0xFF1
 24912                           intcon3	equ	0xFF0
 24913                           indf0	equ	0xFEF
 24914                           postinc0	equ	0xFEE
 24915                           fsr0h	equ	0xFEA
 24916                           fsr0l	equ	0xFE9
 24917                           wreg	equ	0xFE8
 24918                           postinc1	equ	0xFE6
 24919                           postdec1	equ	0xFE5
 24920                           plusw1	equ	0xFE3
 24921                           fsr1h	equ	0xFE2
 24922                           fsr1l	equ	0xFE1
 24923                           indf2	equ	0xFDF
 24924                           postinc2	equ	0xFDE
 24925                           postdec2	equ	0xFDD
 24926                           plusw2	equ	0xFDB
 24927                           fsr2h	equ	0xFDA
 24928                           fsr2l	equ	0xFD9
 24929                           status	equ	0xFD8
 24930                           
 24931 ;; *************** function _RADIO_SetOutputPower *****************
 24932 ;; Defined at:
 24933 ;;		line 1557 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24934 ;; Parameters:    Size  Location     Type
 24935 ;;  power           1    wreg     char 
 24936 ;; Auto vars:     Size  Location     Type
 24937 ;;  power           1    0[BANK0 ] char 
 24938 ;; Return value:  Size  Location     Type
 24939 ;;                  1    wreg      void 
 24940 ;; Registers used:
 24941 ;;		wreg
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24951 ;;Total ram usage:        1 bytes
 24952 ;; Hardware stack levels used:    1
 24953 ;; Hardware stack levels required when called:    7
 24954 ;; This function calls:
 24955 ;;		Nothing
 24956 ;; This function is called by:
 24957 ;;		_SelectChannelForTransmission
 24958 ;; This function uses a non-reentrant model
 24959 ;;
 24960                           
 24961                           	psect	text124
 24962  007E06                     __ptext124:
 24963                           	opt stack 0
 24964  007E06                     _RADIO_SetOutputPower:
 24965                           	opt stack 21
 24966                           
 24967                           ;incstack = 0
 24968                           ;RADIO_SetOutputPower@power stored from wreg
 24969  007E06  0100               	movlb	0	; () banked
 24970  007E08  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 24971                           
 24972                           ;radio_driver_SX1276.c: 1559: RadioConfiguration.outputPower = power;
 24973  007E0A  C060  F18F         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 24974  007E0E  0012               	return		;funcret
 24975  007E10                     __end_of_RADIO_SetOutputPower:
 24976                           	opt stack 0
 24977                           tosu	equ	0xFFF
 24978                           tosh	equ	0xFFE
 24979                           tosl	equ	0xFFD
 24980                           pclath	equ	0xFFA
 24981                           tblptru	equ	0xFF8
 24982                           tblptrh	equ	0xFF7
 24983                           tblptrl	equ	0xFF6
 24984                           tablat	equ	0xFF5
 24985                           prodh	equ	0xFF4
 24986                           prodl	equ	0xFF3
 24987                           intcon	equ	0xFF2
 24988                           intcon2	equ	0xFF1
 24989                           intcon3	equ	0xFF0
 24990                           indf0	equ	0xFEF
 24991                           postinc0	equ	0xFEE
 24992                           fsr0h	equ	0xFEA
 24993                           fsr0l	equ	0xFE9
 24994                           wreg	equ	0xFE8
 24995                           postinc1	equ	0xFE6
 24996                           postdec1	equ	0xFE5
 24997                           plusw1	equ	0xFE3
 24998                           fsr1h	equ	0xFE2
 24999                           fsr1l	equ	0xFE1
 25000                           indf2	equ	0xFDF
 25001                           postinc2	equ	0xFDE
 25002                           postdec2	equ	0xFDD
 25003                           plusw2	equ	0xFDB
 25004                           fsr2h	equ	0xFDA
 25005                           fsr2l	equ	0xFD9
 25006                           status	equ	0xFD8
 25007                           
 25008 ;; *************** function _RADIO_SetIQInverted *****************
 25009 ;; Defined at:
 25010 ;;		line 1577 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25011 ;; Parameters:    Size  Location     Type
 25012 ;;  iqInverted      1    wreg     unsigned char 
 25013 ;; Auto vars:     Size  Location     Type
 25014 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 25015 ;; Return value:  Size  Location     Type
 25016 ;;                  1    wreg      void 
 25017 ;; Registers used:
 25018 ;;		wreg
 25019 ;; Tracked objects:
 25020 ;;		On entry : 0/0
 25021 ;;		On exit  : 0/0
 25022 ;;		Unchanged: 0/0
 25023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25028 ;;Total ram usage:        1 bytes
 25029 ;; Hardware stack levels used:    1
 25030 ;; Hardware stack levels required when called:    7
 25031 ;; This function calls:
 25032 ;;		Nothing
 25033 ;; This function is called by:
 25034 ;;		_SelectChannelForTransmission
 25035 ;;		_ConfigureRadioRx
 25036 ;; This function uses a non-reentrant model
 25037 ;;
 25038                           
 25039                           	psect	text125
 25040  007E10                     __ptext125:
 25041                           	opt stack 0
 25042  007E10                     _RADIO_SetIQInverted:
 25043                           	opt stack 21
 25044                           
 25045                           ;incstack = 0
 25046                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 25047  007E10  0100               	movlb	0	; () banked
 25048  007E12  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 25049                           
 25050                           ;radio_driver_SX1276.c: 1579: RadioConfiguration.iqInverted = iqInverted;
 25051  007E14  C060  F194         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25052  007E18  0012               	return		;funcret
 25053  007E1A                     __end_of_RADIO_SetIQInverted:
 25054                           	opt stack 0
 25055                           tosu	equ	0xFFF
 25056                           tosh	equ	0xFFE
 25057                           tosl	equ	0xFFD
 25058                           pclath	equ	0xFFA
 25059                           tblptru	equ	0xFF8
 25060                           tblptrh	equ	0xFF7
 25061                           tblptrl	equ	0xFF6
 25062                           tablat	equ	0xFF5
 25063                           prodh	equ	0xFF4
 25064                           prodl	equ	0xFF3
 25065                           intcon	equ	0xFF2
 25066                           intcon2	equ	0xFF1
 25067                           intcon3	equ	0xFF0
 25068                           indf0	equ	0xFEF
 25069                           postinc0	equ	0xFEE
 25070                           fsr0h	equ	0xFEA
 25071                           fsr0l	equ	0xFE9
 25072                           wreg	equ	0xFE8
 25073                           postinc1	equ	0xFE6
 25074                           postdec1	equ	0xFE5
 25075                           plusw1	equ	0xFE3
 25076                           fsr1h	equ	0xFE2
 25077                           fsr1l	equ	0xFE1
 25078                           indf2	equ	0xFDF
 25079                           postinc2	equ	0xFDE
 25080                           postdec2	equ	0xFDD
 25081                           plusw2	equ	0xFDB
 25082                           fsr2h	equ	0xFDA
 25083                           fsr2l	equ	0xFD9
 25084                           status	equ	0xFD8
 25085                           
 25086 ;; *************** function _RADIO_SetChannelFrequency *****************
 25087 ;; Defined at:
 25088 ;;		line 1537 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25089 ;; Parameters:    Size  Location     Type
 25090 ;;  frequency       4    0[BANK0 ] unsigned long 
 25091 ;; Auto vars:     Size  Location     Type
 25092 ;;		None
 25093 ;; Return value:  Size  Location     Type
 25094 ;;                  2    0[BANK0 ] enum E7038
 25095 ;; Registers used:
 25096 ;;		wreg, status,2, status,0
 25097 ;; Tracked objects:
 25098 ;;		On entry : 0/0
 25099 ;;		On exit  : 0/0
 25100 ;;		Unchanged: 0/0
 25101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25106 ;;Total ram usage:        4 bytes
 25107 ;; Hardware stack levels used:    1
 25108 ;; Hardware stack levels required when called:    7
 25109 ;; This function calls:
 25110 ;;		Nothing
 25111 ;; This function is called by:
 25112 ;;		_ConfigureRadio
 25113 ;;		_SelectChannelForTransmission
 25114 ;; This function uses a non-reentrant model
 25115 ;;
 25116                           
 25117                           	psect	text126
 25118  00630C                     __ptext126:
 25119                           	opt stack 0
 25120  00630C                     _RADIO_SetChannelFrequency:
 25121                           	opt stack 21
 25122                           
 25123                           ;radio_driver_SX1276.c: 1539: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25124                           ;radio_driver_SX1276.c: 1540: (frequency >= 410000000) && (frequency <= 525000000) ||
 25125                           ;radio_driver_SX1276.c: 1541: (frequency >= 862000000) && (frequency <= 1020000000) )
 25126                           
 25127                           ;incstack = 0
 25128  00630C  0E40               	movlw	64
 25129  00630E  0100               	movlb	0	; () banked
 25130  006310  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25131  006312  0E74               	movlw	116
 25132  006314  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25133  006316  0E2A               	movlw	42
 25134  006318  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25135  00631A  0E08               	movlw	8
 25136  00631C  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25137  00631E  A0D8               	btfss	status,0,c
 25138  006320  D00A               	goto	u7290
 25139                           
 25140                           ; BSR set to: 0
 25141  006322  0EC1               	movlw	193
 25142  006324  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25143  006326  0E49               	movlw	73
 25144  006328  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25145  00632A  0E6E               	movlw	110
 25146  00632C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25147  00632E  0E0A               	movlw	10
 25148  006330  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25149  006332  A0D8               	btfss	status,0,c
 25150  006334  D027               	goto	u7330
 25151  006336                     u7290:
 25152                           
 25153                           ; BSR set to: 0
 25154                           
 25155                           ; BSR set to: 0
 25156  006336  0E80               	movlw	128
 25157  006338  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25158  00633A  0E1A               	movlw	26
 25159  00633C  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25160  00633E  0E70               	movlw	112
 25161  006340  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25162  006342  0E18               	movlw	24
 25163  006344  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25164  006346  A0D8               	btfss	status,0,c
 25165  006348  D00A               	goto	u7310
 25166                           
 25167                           ; BSR set to: 0
 25168  00634A  0E41               	movlw	65
 25169  00634C  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25170  00634E  0EDD               	movlw	221
 25171  006350  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25172  006352  0E4A               	movlw	74
 25173  006354  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25174  006356  0E1F               	movlw	31
 25175  006358  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25176  00635A  A0D8               	btfss	status,0,c
 25177  00635C  D013               	goto	u7330
 25178  00635E                     u7310:
 25179                           
 25180                           ; BSR set to: 0
 25181                           
 25182                           ; BSR set to: 0
 25183  00635E  0E80               	movlw	128
 25184  006360  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25185  006362  0E13               	movlw	19
 25186  006364  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25187  006366  0E61               	movlw	97
 25188  006368  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25189  00636A  0E33               	movlw	51
 25190  00636C  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25191  00636E  A0D8               	btfss	status,0,c
 25192  006370  0012               	return	
 25193                           
 25194                           ; BSR set to: 0
 25195  006372  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25196  006374  0EF7               	movlw	247
 25197  006376  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25198  006378  0ECB               	movlw	203
 25199  00637A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25200  00637C  0E3C               	movlw	60
 25201  00637E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25202  006380  B0D8               	btfsc	status,0,c
 25203  006382  0012               	return	
 25204  006384                     u7330:
 25205                           
 25206                           ; BSR set to: 0
 25207                           ;radio_driver_SX1276.c: 1542: {
 25208                           ;radio_driver_SX1276.c: 1543: RadioConfiguration.frequency = frequency;
 25209  006384  C060  F174         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25210  006388  C061  F175         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25211  00638C  C062  F176         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25212  006390  C063  F177         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25213                           
 25214                           ; BSR set to: 0
 25215                           ;radio_driver_SX1276.c: 1546: else
 25216                           ;radio_driver_SX1276.c: 1547: {
 25217                           ;radio_driver_SX1276.c: 1548: return ERR_OUT_OF_RANGE;
 25218                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25219                           
 25220                           ; BSR set to: 0
 25221                           ;radio_driver_SX1276.c: 1545: }
 25222                           
 25223                           ;radio_driver_SX1276.c: 1544: return ERR_NONE;
 25224                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25225  006394  0012               	return	
 25226  006396                     __end_of_RADIO_SetChannelFrequency:
 25227                           	opt stack 0
 25228                           tosu	equ	0xFFF
 25229                           tosh	equ	0xFFE
 25230                           tosl	equ	0xFFD
 25231                           pclath	equ	0xFFA
 25232                           tblptru	equ	0xFF8
 25233                           tblptrh	equ	0xFF7
 25234                           tblptrl	equ	0xFF6
 25235                           tablat	equ	0xFF5
 25236                           prodh	equ	0xFF4
 25237                           prodl	equ	0xFF3
 25238                           intcon	equ	0xFF2
 25239                           intcon2	equ	0xFF1
 25240                           intcon3	equ	0xFF0
 25241                           indf0	equ	0xFEF
 25242                           postinc0	equ	0xFEE
 25243                           fsr0h	equ	0xFEA
 25244                           fsr0l	equ	0xFE9
 25245                           wreg	equ	0xFE8
 25246                           postinc1	equ	0xFE6
 25247                           postdec1	equ	0xFE5
 25248                           plusw1	equ	0xFE3
 25249                           fsr1h	equ	0xFE2
 25250                           fsr1l	equ	0xFE1
 25251                           indf2	equ	0xFDF
 25252                           postinc2	equ	0xFDE
 25253                           postdec2	equ	0xFDD
 25254                           plusw2	equ	0xFDB
 25255                           fsr2h	equ	0xFDA
 25256                           fsr2l	equ	0xFD9
 25257                           status	equ	0xFD8
 25258                           
 25259 ;; *************** function _RADIO_SetCRC *****************
 25260 ;; Defined at:
 25261 ;;		line 1567 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25262 ;; Parameters:    Size  Location     Type
 25263 ;;  crc             1    wreg     unsigned char 
 25264 ;; Auto vars:     Size  Location     Type
 25265 ;;  crc             1    0[BANK0 ] unsigned char 
 25266 ;; Return value:  Size  Location     Type
 25267 ;;                  1    wreg      void 
 25268 ;; Registers used:
 25269 ;;		wreg
 25270 ;; Tracked objects:
 25271 ;;		On entry : 0/0
 25272 ;;		On exit  : 0/0
 25273 ;;		Unchanged: 0/0
 25274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25279 ;;Total ram usage:        1 bytes
 25280 ;; Hardware stack levels used:    1
 25281 ;; Hardware stack levels required when called:    7
 25282 ;; This function calls:
 25283 ;;		Nothing
 25284 ;; This function is called by:
 25285 ;;		_SelectChannelForTransmission
 25286 ;;		_ConfigureRadioRx
 25287 ;; This function uses a non-reentrant model
 25288 ;;
 25289                           
 25290                           	psect	text127
 25291  007E1A                     __ptext127:
 25292                           	opt stack 0
 25293  007E1A                     _RADIO_SetCRC:
 25294                           	opt stack 21
 25295                           
 25296                           ; BSR set to: 0
 25297                           ;incstack = 0
 25298                           ;RADIO_SetCRC@crc stored from wreg
 25299  007E1A  0100               	movlb	0	; () banked
 25300  007E1C  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 25301                           
 25302                           ;radio_driver_SX1276.c: 1569: RadioConfiguration.crcOn = crc;
 25303  007E1E  C060  F190         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25304  007E22  0012               	return		;funcret
 25305  007E24                     __end_of_RADIO_SetCRC:
 25306                           	opt stack 0
 25307                           tosu	equ	0xFFF
 25308                           tosh	equ	0xFFE
 25309                           tosl	equ	0xFFD
 25310                           pclath	equ	0xFFA
 25311                           tblptru	equ	0xFF8
 25312                           tblptrh	equ	0xFF7
 25313                           tblptrl	equ	0xFF6
 25314                           tablat	equ	0xFF5
 25315                           prodh	equ	0xFF4
 25316                           prodl	equ	0xFF3
 25317                           intcon	equ	0xFF2
 25318                           intcon2	equ	0xFF1
 25319                           intcon3	equ	0xFF0
 25320                           indf0	equ	0xFEF
 25321                           postinc0	equ	0xFEE
 25322                           fsr0h	equ	0xFEA
 25323                           fsr0l	equ	0xFE9
 25324                           wreg	equ	0xFE8
 25325                           postinc1	equ	0xFE6
 25326                           postdec1	equ	0xFE5
 25327                           plusw1	equ	0xFE3
 25328                           fsr1h	equ	0xFE2
 25329                           fsr1l	equ	0xFE1
 25330                           indf2	equ	0xFDF
 25331                           postinc2	equ	0xFDE
 25332                           postdec2	equ	0xFDD
 25333                           plusw2	equ	0xFDB
 25334                           fsr2h	equ	0xFDA
 25335                           fsr2l	equ	0xFD9
 25336                           status	equ	0xFD8
 25337                           
 25338 ;; *************** function _RADIO_SetBandwidth *****************
 25339 ;; Defined at:
 25340 ;;		line 1588 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;  bandwidth       1    wreg     enum E7002
 25343 ;; Auto vars:     Size  Location     Type
 25344 ;;  bandwidth       1    0[BANK0 ] enum E7002
 25345 ;; Return value:  Size  Location     Type
 25346 ;;                  1    wreg      void 
 25347 ;; Registers used:
 25348 ;;		wreg
 25349 ;; Tracked objects:
 25350 ;;		On entry : 0/0
 25351 ;;		On exit  : 0/0
 25352 ;;		Unchanged: 0/0
 25353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;Total ram usage:        1 bytes
 25359 ;; Hardware stack levels used:    1
 25360 ;; Hardware stack levels required when called:    7
 25361 ;; This function calls:
 25362 ;;		Nothing
 25363 ;; This function is called by:
 25364 ;;		_ConfigureRadio
 25365 ;;		_SelectChannelForTransmission
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           
 25369                           	psect	text128
 25370  007E24                     __ptext128:
 25371                           	opt stack 0
 25372  007E24                     _RADIO_SetBandwidth:
 25373                           	opt stack 21
 25374                           
 25375                           ;incstack = 0
 25376                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25377  007E24  0100               	movlb	0	; () banked
 25378  007E26  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25379                           
 25380                           ;radio_driver_SX1276.c: 1590: RadioConfiguration.bandWidth = bandwidth;
 25381  007E28  C060  F18E         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25382  007E2C  0012               	return		;funcret
 25383  007E2E                     __end_of_RADIO_SetBandwidth:
 25384                           	opt stack 0
 25385                           tosu	equ	0xFFF
 25386                           tosh	equ	0xFFE
 25387                           tosl	equ	0xFFD
 25388                           pclath	equ	0xFFA
 25389                           tblptru	equ	0xFF8
 25390                           tblptrh	equ	0xFF7
 25391                           tblptrl	equ	0xFF6
 25392                           tablat	equ	0xFF5
 25393                           prodh	equ	0xFF4
 25394                           prodl	equ	0xFF3
 25395                           intcon	equ	0xFF2
 25396                           intcon2	equ	0xFF1
 25397                           intcon3	equ	0xFF0
 25398                           indf0	equ	0xFEF
 25399                           postinc0	equ	0xFEE
 25400                           fsr0h	equ	0xFEA
 25401                           fsr0l	equ	0xFE9
 25402                           wreg	equ	0xFE8
 25403                           postinc1	equ	0xFE6
 25404                           postdec1	equ	0xFE5
 25405                           plusw1	equ	0xFE3
 25406                           fsr1h	equ	0xFE2
 25407                           fsr1l	equ	0xFE1
 25408                           indf2	equ	0xFDF
 25409                           postinc2	equ	0xFDE
 25410                           postdec2	equ	0xFDD
 25411                           plusw2	equ	0xFDB
 25412                           fsr2h	equ	0xFDA
 25413                           fsr2l	equ	0xFD9
 25414                           status	equ	0xFD8
 25415                           
 25416 ;; *************** function _GenerateUSFrequency2 *****************
 25417 ;; Defined at:
 25418 ;;		line 987 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 25419 ;; Parameters:    Size  Location     Type
 25420 ;;  channelIndex    1    wreg     unsigned char 
 25421 ;; Auto vars:     Size  Location     Type
 25422 ;;  channelIndex    1   82[BANK0 ] unsigned char 
 25423 ;;  channelFrequ    4   78[BANK0 ] unsigned long 
 25424 ;; Return value:  Size  Location     Type
 25425 ;;                  4   70[BANK0 ] unsigned long 
 25426 ;; Registers used:
 25427 ;;		wreg, status,2, status,0, cstack
 25428 ;; Tracked objects:
 25429 ;;		On entry : 0/0
 25430 ;;		On exit  : 0/0
 25431 ;;		Unchanged: 0/0
 25432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25434 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25436 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25437 ;;Total ram usage:       13 bytes
 25438 ;; Hardware stack levels used:    1
 25439 ;; Hardware stack levels required when called:    8
 25440 ;; This function calls:
 25441 ;;		___lmul
 25442 ;; This function is called by:
 25443 ;;		_ExecuteNewChannel
 25444 ;;		_SelectChannelForTransmission
 25445 ;;		_LORAWAN_GetFrequency
 25446 ;; This function uses a non-reentrant model
 25447 ;;
 25448                           
 25449                           	psect	text129
 25450  0068EA                     __ptext129:
 25451                           	opt stack 0
 25452  0068EA                     _GenerateUSFrequency2:
 25453                           	opt stack 20
 25454                           
 25455                           ;incstack = 0
 25456                           ;GenerateUSFrequency2@channelIndex stored from wreg
 25457  0068EA  0100               	movlb	0	; () banked
 25458  0068EC  6FB2               	movwf	GenerateUSFrequency2@channelIndex& (0+255),b
 25459                           
 25460                           ;lorawan_na.c: 989: uint32_t channelFrequency;
 25461                           ;lorawan_na.c: 991: channelFrequency = (903000000) + 1600000 * (channelIndex - 64);
 25462  0068EE  0EC0               	movlw	192
 25463  0068F0  0100               	movlb	0	; () banked
 25464  0068F2  6FAA               	movwf	??_GenerateUSFrequency2& (0+255),b
 25465  0068F4  0EFF               	movlw	255
 25466  0068F6  6FAB               	movwf	(??_GenerateUSFrequency2+1)& (0+255),b
 25467  0068F8  51B2               	movf	GenerateUSFrequency2@channelIndex& (0+255),w,b
 25468  0068FA  6FAC               	movwf	(??_GenerateUSFrequency2+2)& (0+255),b
 25469  0068FC  6BAD               	clrf	(??_GenerateUSFrequency2+3)& (0+255),b
 25470  0068FE  51AA               	movf	??_GenerateUSFrequency2& (0+255),w,b
 25471  006900  27AC               	addwf	(??_GenerateUSFrequency2+2)& (0+255),f,b
 25472  006902  51AB               	movf	(??_GenerateUSFrequency2+1)& (0+255),w,b
 25473  006904  23AD               	addwfc	(??_GenerateUSFrequency2+3)& (0+255),f,b
 25474  006906  C0AC  F09A         	movff	??_GenerateUSFrequency2+2,___lmul@multiplier
 25475  00690A  C0AD  F09B         	movff	??_GenerateUSFrequency2+3,___lmul@multiplier+1
 25476  00690E  0E00               	movlw	0
 25477  006910  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 25478  006912  0EFF               	movlw	-1
 25479  006914  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 25480  006916  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 25481  006918  0E00               	movlw	0
 25482  00691A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25483  00691C  0E6A               	movlw	106
 25484  00691E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25485  006920  0E18               	movlw	24
 25486  006922  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25487  006924  0E00               	movlw	0
 25488  006926  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25489  006928  EC55  F037         	call	___lmul	;wreg free
 25490  00692C  0EC0               	movlw	192
 25491  00692E  0100               	movlb	0	; () banked
 25492  006930  259A               	addwf	?___lmul& (0+255),w,b
 25493  006932  6FAE               	movwf	GenerateUSFrequency2@channelFrequency& (0+255),b
 25494  006934  0EAF               	movlw	175
 25495  006936  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 25496  006938  6FAF               	movwf	(GenerateUSFrequency2@channelFrequency+1)& (0+255),b
 25497  00693A  0ED2               	movlw	210
 25498  00693C  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 25499  00693E  6FB0               	movwf	(GenerateUSFrequency2@channelFrequency+2)& (0+255),b
 25500  006940  0E35               	movlw	53
 25501  006942  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 25502  006944  6FB1               	movwf	(GenerateUSFrequency2@channelFrequency+3)& (0+255),b
 25503                           
 25504                           ; BSR set to: 0
 25505                           ;lorawan_na.c: 992: return channelFrequency;
 25506  006946  C0AE  F0A6         	movff	GenerateUSFrequency2@channelFrequency,?_GenerateUSFrequency2
 25507  00694A  C0AF  F0A7         	movff	GenerateUSFrequency2@channelFrequency+1,?_GenerateUSFrequency2+1
 25508  00694E  C0B0  F0A8         	movff	GenerateUSFrequency2@channelFrequency+2,?_GenerateUSFrequency2+2
 25509  006952  C0B1  F0A9         	movff	GenerateUSFrequency2@channelFrequency+3,?_GenerateUSFrequency2+3
 25510  006956  0012               	return	
 25511  006958                     __end_of_GenerateUSFrequency2:
 25512                           	opt stack 0
 25513                           tosu	equ	0xFFF
 25514                           tosh	equ	0xFFE
 25515                           tosl	equ	0xFFD
 25516                           pclath	equ	0xFFA
 25517                           tblptru	equ	0xFF8
 25518                           tblptrh	equ	0xFF7
 25519                           tblptrl	equ	0xFF6
 25520                           tablat	equ	0xFF5
 25521                           prodh	equ	0xFF4
 25522                           prodl	equ	0xFF3
 25523                           intcon	equ	0xFF2
 25524                           intcon2	equ	0xFF1
 25525                           intcon3	equ	0xFF0
 25526                           indf0	equ	0xFEF
 25527                           postinc0	equ	0xFEE
 25528                           fsr0h	equ	0xFEA
 25529                           fsr0l	equ	0xFE9
 25530                           wreg	equ	0xFE8
 25531                           postinc1	equ	0xFE6
 25532                           postdec1	equ	0xFE5
 25533                           plusw1	equ	0xFE3
 25534                           fsr1h	equ	0xFE2
 25535                           fsr1l	equ	0xFE1
 25536                           indf2	equ	0xFDF
 25537                           postinc2	equ	0xFDE
 25538                           postdec2	equ	0xFDD
 25539                           plusw2	equ	0xFDB
 25540                           fsr2h	equ	0xFDA
 25541                           fsr2l	equ	0xFD9
 25542                           status	equ	0xFD8
 25543                           
 25544 ;; *************** function _GenerateUSFrequency1 *****************
 25545 ;; Defined at:
 25546 ;;		line 978 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 25547 ;; Parameters:    Size  Location     Type
 25548 ;;  channelIndex    1    wreg     unsigned char 
 25549 ;; Auto vars:     Size  Location     Type
 25550 ;;  channelIndex    1   78[BANK0 ] unsigned char 
 25551 ;;  channelFrequ    4   74[BANK0 ] unsigned long 
 25552 ;; Return value:  Size  Location     Type
 25553 ;;                  4   70[BANK0 ] unsigned long 
 25554 ;; Registers used:
 25555 ;;		wreg, status,2, status,0, cstack
 25556 ;; Tracked objects:
 25557 ;;		On entry : 0/0
 25558 ;;		On exit  : 0/0
 25559 ;;		Unchanged: 0/0
 25560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25562 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25564 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25565 ;;Total ram usage:        9 bytes
 25566 ;; Hardware stack levels used:    1
 25567 ;; Hardware stack levels required when called:    8
 25568 ;; This function calls:
 25569 ;;		___lmul
 25570 ;; This function is called by:
 25571 ;;		_ExecuteNewChannel
 25572 ;;		_SelectChannelForTransmission
 25573 ;;		_LORAWAN_GetFrequency
 25574 ;; This function uses a non-reentrant model
 25575 ;;
 25576                           
 25577                           	psect	text130
 25578  0070F8                     __ptext130:
 25579                           	opt stack 0
 25580  0070F8                     _GenerateUSFrequency1:
 25581                           	opt stack 20
 25582                           
 25583                           ; BSR set to: 0
 25584                           ;incstack = 0
 25585                           ;GenerateUSFrequency1@channelIndex stored from wreg
 25586  0070F8  0100               	movlb	0	; () banked
 25587  0070FA  6FAE               	movwf	GenerateUSFrequency1@channelIndex& (0+255),b
 25588                           
 25589                           ;lorawan_na.c: 980: uint32_t channelFrequency;
 25590                           ;lorawan_na.c: 982: channelFrequency = (902300000) + 200000 * channelIndex;
 25591  0070FC  0100               	movlb	0	; () banked
 25592  0070FE  51AE               	movf	GenerateUSFrequency1@channelIndex& (0+255),w,b
 25593  007100  6F9A               	movwf	___lmul@multiplier& (0+255),b
 25594  007102  6B9B               	clrf	(___lmul@multiplier+1)& (0+255),b
 25595  007104  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 25596  007106  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 25597  007108  0E40               	movlw	64
 25598  00710A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25599  00710C  0E0D               	movlw	13
 25600  00710E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25601  007110  0E03               	movlw	3
 25602  007112  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25603  007114  0E00               	movlw	0
 25604  007116  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25605  007118  EC55  F037         	call	___lmul	;wreg free
 25606  00711C  0E60               	movlw	96
 25607  00711E  0100               	movlb	0	; () banked
 25608  007120  259A               	addwf	?___lmul& (0+255),w,b
 25609  007122  6FAA               	movwf	GenerateUSFrequency1@channelFrequency& (0+255),b
 25610  007124  0E01               	movlw	1
 25611  007126  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 25612  007128  6FAB               	movwf	(GenerateUSFrequency1@channelFrequency+1)& (0+255),b
 25613  00712A  0EC8               	movlw	200
 25614  00712C  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 25615  00712E  6FAC               	movwf	(GenerateUSFrequency1@channelFrequency+2)& (0+255),b
 25616  007130  0E35               	movlw	53
 25617  007132  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 25618  007134  6FAD               	movwf	(GenerateUSFrequency1@channelFrequency+3)& (0+255),b
 25619                           
 25620                           ; BSR set to: 0
 25621                           ;lorawan_na.c: 983: return channelFrequency;
 25622  007136  C0AA  F0A6         	movff	GenerateUSFrequency1@channelFrequency,?_GenerateUSFrequency1
 25623  00713A  C0AB  F0A7         	movff	GenerateUSFrequency1@channelFrequency+1,?_GenerateUSFrequency1+1
 25624  00713E  C0AC  F0A8         	movff	GenerateUSFrequency1@channelFrequency+2,?_GenerateUSFrequency1+2
 25625  007142  C0AD  F0A9         	movff	GenerateUSFrequency1@channelFrequency+3,?_GenerateUSFrequency1+3
 25626  007146  0012               	return	
 25627  007148                     __end_of_GenerateUSFrequency1:
 25628                           	opt stack 0
 25629                           tosu	equ	0xFFF
 25630                           tosh	equ	0xFFE
 25631                           tosl	equ	0xFFD
 25632                           pclath	equ	0xFFA
 25633                           tblptru	equ	0xFF8
 25634                           tblptrh	equ	0xFF7
 25635                           tblptrl	equ	0xFF6
 25636                           tablat	equ	0xFF5
 25637                           prodh	equ	0xFF4
 25638                           prodl	equ	0xFF3
 25639                           intcon	equ	0xFF2
 25640                           intcon2	equ	0xFF1
 25641                           intcon3	equ	0xFF0
 25642                           indf0	equ	0xFEF
 25643                           postinc0	equ	0xFEE
 25644                           fsr0h	equ	0xFEA
 25645                           fsr0l	equ	0xFE9
 25646                           wreg	equ	0xFE8
 25647                           postinc1	equ	0xFE6
 25648                           postdec1	equ	0xFE5
 25649                           plusw1	equ	0xFE3
 25650                           fsr1h	equ	0xFE2
 25651                           fsr1l	equ	0xFE1
 25652                           indf2	equ	0xFDF
 25653                           postinc2	equ	0xFDE
 25654                           postdec2	equ	0xFDD
 25655                           plusw2	equ	0xFDB
 25656                           fsr2h	equ	0xFDA
 25657                           fsr2l	equ	0xFD9
 25658                           status	equ	0xFD8
 25659                           
 25660 ;; *************** function _RADIO_Transmit *****************
 25661 ;; Defined at:
 25662 ;;		line 826 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25663 ;; Parameters:    Size  Location     Type
 25664 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 25665 ;;		 -> macBuffer(271), 
 25666 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 25667 ;; Auto vars:     Size  Location     Type
 25668 ;;  i               1   97[BANK0 ] unsigned char 
 25669 ;;  regValue        1   96[BANK0 ] unsigned char 
 25670 ;; Return value:  Size  Location     Type
 25671 ;;                  2   81[BANK0 ] enum E7038
 25672 ;; Registers used:
 25673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25674 ;; Tracked objects:
 25675 ;;		On entry : 0/0
 25676 ;;		On exit  : 0/0
 25677 ;;		Unchanged: 0/0
 25678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25679 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25680 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25682 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25683 ;;Total ram usage:       17 bytes
 25684 ;; Hardware stack levels used:    1
 25685 ;; Hardware stack levels required when called:   12
 25686 ;; This function calls:
 25687 ;;		_HALSPICSAssert
 25688 ;;		_HALSPICSDeassert
 25689 ;;		_HALSPISend
 25690 ;;		_RADIO_RegisterRead
 25691 ;;		_RADIO_RegisterWrite
 25692 ;;		_RADIO_WriteConfiguration
 25693 ;;		_RADIO_WriteMode
 25694 ;;		_SwTimerSetTimeout
 25695 ;;		_SwTimerStart
 25696 ;;		_SwTimerStop
 25697 ;;		___lldiv
 25698 ;; This function is called by:
 25699 ;;		_Retransmissions
 25700 ;;		_TransmissionErrorCallback
 25701 ;;		_LORAWAN_Join
 25702 ;;		_LORAWAN_Send
 25703 ;;		_AckRetransmissionCallback
 25704 ;;		_UnconfirmedTransmissionCallback
 25705 ;; This function uses a non-reentrant model
 25706 ;;
 25707                           
 25708                           	psect	text131
 25709  002E28                     __ptext131:
 25710                           	opt stack 0
 25711  002E28                     _RADIO_Transmit:
 25712                           	opt stack 17
 25713                           
 25714                           ;radio_driver_SX1276.c: 828: uint8_t regValue;
 25715                           ;radio_driver_SX1276.c: 829: uint8_t i;
 25716                           ;radio_driver_SX1276.c: 831: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25717                           
 25718                           ; BSR set to: 0
 25719                           ;incstack = 0
 25720  002E28  0101               	movlb	1	; () banked
 25721  002E2A  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25722  002E2C  D006               	goto	l537
 25723                           
 25724                           ; BSR set to: 1
 25725                           ;radio_driver_SX1276.c: 832: {
 25726                           ;radio_driver_SX1276.c: 833: return ERR_BUFFER_LOCKED;
 25727  002E2E  0E80               	movlw	128
 25728  002E30  0100               	movlb	0	; () banked
 25729  002E32  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25730  002E34  0E03               	movlw	3
 25731  002E36  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 25732                           
 25733                           ; BSR set to: 0
 25734  002E38  0012               	return	
 25735  002E3A                     l537:
 25736                           
 25737                           ;radio_driver_SX1276.c: 834: }
 25738                           ;radio_driver_SX1276.c: 836: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25739                           
 25740                           ; BSR set to: 0
 25741  002E3A  C197  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 25742  002E3E  0E03               	movlw	3
 25743  002E40  0100               	movlb	0	; () banked
 25744  002E42  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 25745  002E44  B4D8               	btfsc	status,2,c
 25746  002E46  D005               	goto	l539
 25747                           
 25748                           ; BSR set to: 0
 25749                           ;radio_driver_SX1276.c: 837: {
 25750                           ;radio_driver_SX1276.c: 838: return ERR_RADIO_BUSY;
 25751  002E48  0E80               	movlw	128
 25752  002E4A  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25753  002E4C  0E04               	movlw	4
 25754  002E4E  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 25755                           
 25756                           ; BSR set to: 0
 25757  002E50  0012               	return	
 25758  002E52                     l539:
 25759                           
 25760                           ; BSR set to: 0
 25761                           ;radio_driver_SX1276.c: 839: }
 25762                           ;radio_driver_SX1276.c: 841: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 25763                           
 25764                           ; BSR set to: 0
 25765  002E52  0101               	movlb	1	; () banked
 25766  002E54  518C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25767  002E56  A4D8               	btfss	status,2,c
 25768  002E58  D009               	goto	l540
 25769                           
 25770                           ; BSR set to: 1
 25771  002E5A  0E40               	movlw	64
 25772  002E5C  0100               	movlb	0	; () banked
 25773  002E5E  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 25774  002E60  D005               	goto	l540
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;radio_driver_SX1276.c: 842: {
 25778                           ;radio_driver_SX1276.c: 843: return ERR_DATA_SIZE;
 25779  002E62  0E80               	movlw	128
 25780  002E64  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25781  002E66  0E02               	movlw	2
 25782  002E68  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 25783                           
 25784                           ; BSR set to: 0
 25785  002E6A  0012               	return	
 25786  002E6C                     l540:
 25787                           
 25788                           ; BSR set to: 0
 25789                           ;radio_driver_SX1276.c: 844: }
 25790                           ;radio_driver_SX1276.c: 852: do { LATB3 = 1; } while(0);
 25791  002E6C  868A               	bsf	3978,3,c	;volatile
 25792                           
 25793                           ;radio_driver_SX1276.c: 854: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25794  002E6E  0101               	movlb	1	; () banked
 25795  002E70  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25796  002E72  EC89  F03C         	call	_SwTimerStop
 25797                           
 25798                           ;radio_driver_SX1276.c: 858: RADIO_WriteConfiguration(4);
 25799  002E76  0E00               	movlw	0
 25800  002E78  0100               	movlb	0	; () banked
 25801  002E7A  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25802  002E7C  0E04               	movlw	4
 25803  002E7E  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25804  002E80  EC89  F006         	call	_RADIO_WriteConfiguration	;wreg free
 25805                           
 25806                           ;radio_driver_SX1276.c: 860: if (MODULATION_LORA == RadioConfiguration.modulation)
 25807  002E84  0101               	movlb	1	; () banked
 25808  002E86  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25809  002E88  A4D8               	btfss	status,2,c
 25810  002E8A  D027               	goto	l543
 25811                           
 25812                           ; BSR set to: 1
 25813                           ;radio_driver_SX1276.c: 861: {
 25814                           ;radio_driver_SX1276.c: 862: RADIO_RegisterWrite(0x22, bufferLen);
 25815  002E8C  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25816  002E90  0E22               	movlw	34
 25817  002E92  EC5D  F03D         	call	_RADIO_RegisterWrite
 25818                           
 25819                           ;radio_driver_SX1276.c: 865: regValue = RADIO_RegisterRead(0x0A);
 25820  002E96  0E0A               	movlw	10
 25821  002E98  EC75  F03C         	call	_RADIO_RegisterRead
 25822  002E9C  0100               	movlb	0	; () banked
 25823  002E9E  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;radio_driver_SX1276.c: 866: regValue &= ~0x0F;
 25827  002EA0  0EF0               	movlw	240
 25828  002EA2  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;radio_driver_SX1276.c: 867: regValue |= 0x08;
 25832  002EA4  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 25833                           
 25834                           ; BSR set to: 0
 25835                           ;radio_driver_SX1276.c: 868: RADIO_RegisterWrite(0x0A, regValue);
 25836  002EA6  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 25837  002EAA  0E0A               	movlw	10
 25838  002EAC  EC5D  F03D         	call	_RADIO_RegisterWrite
 25839                           
 25840                           ;radio_driver_SX1276.c: 872: RADIO_RegisterWrite(0x40, 0x40);
 25841  002EB0  0E40               	movlw	64
 25842  002EB2  0100               	movlb	0	; () banked
 25843  002EB4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25844  002EB6  0E40               	movlw	64
 25845  002EB8  EC5D  F03D         	call	_RADIO_RegisterWrite
 25846                           
 25847                           ;radio_driver_SX1276.c: 873: RADIO_RegisterWrite(0x41, 0x00);
 25848  002EBC  0E00               	movlw	0
 25849  002EBE  0100               	movlb	0	; () banked
 25850  002EC0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25851  002EC2  0E41               	movlw	65
 25852  002EC4  EC5D  F03D         	call	_RADIO_RegisterWrite
 25853                           
 25854                           ;radio_driver_SX1276.c: 875: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 25855  002EC8  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25856  002ECC  0E01               	movlw	1
 25857  002ECE  0100               	movlb	0	; () banked
 25858  002ED0  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25859  002ED2  0E01               	movlw	1
 25860  002ED4  EC5E  F028         	call	_RADIO_WriteMode
 25861                           
 25862                           ;radio_driver_SX1276.c: 876: }
 25863  002ED8  D00C               	goto	l544
 25864  002EDA                     l543:
 25865                           
 25866                           ;radio_driver_SX1276.c: 877: else
 25867                           ;radio_driver_SX1276.c: 878: {
 25868                           ;radio_driver_SX1276.c: 880: RADIO_RegisterWrite(0x40, 0x00);
 25869  002EDA  0E00               	movlw	0
 25870  002EDC  0100               	movlb	0	; () banked
 25871  002EDE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25872  002EE0  0E40               	movlw	64
 25873  002EE2  EC5D  F03D         	call	_RADIO_RegisterWrite
 25874                           
 25875                           ;radio_driver_SX1276.c: 881: RADIO_RegisterWrite(0x41, 0x00);
 25876  002EE6  0E00               	movlw	0
 25877  002EE8  0100               	movlb	0	; () banked
 25878  002EEA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25879  002EEC  0E41               	movlw	65
 25880  002EEE  EC5D  F03D         	call	_RADIO_RegisterWrite
 25881  002EF2                     l544:
 25882                           
 25883                           ;radio_driver_SX1276.c: 882: }
 25884                           ;radio_driver_SX1276.c: 884: if (MODULATION_FSK == RadioConfiguration.modulation)
 25885  002EF2  0101               	movlb	1	; () banked
 25886  002EF4  518C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25887  002EF6  A4D8               	btfss	status,2,c
 25888  002EF8  D005               	goto	l545
 25889                           
 25890                           ; BSR set to: 1
 25891                           ;radio_driver_SX1276.c: 885: {
 25892                           ;radio_driver_SX1276.c: 887: RADIO_RegisterWrite(0x00, bufferLen);
 25893  002EFA  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25894  002EFE  0E00               	movlw	0
 25895  002F00  EC5D  F03D         	call	_RADIO_RegisterWrite
 25896  002F04                     l545:
 25897                           
 25898                           ;radio_driver_SX1276.c: 888: }
 25899                           ;radio_driver_SX1276.c: 890: HALSPICSAssert();
 25900  002F04  EC4A  F03F         	call	_HALSPICSAssert	;wreg free
 25901                           
 25902                           ;radio_driver_SX1276.c: 891: HALSPISend(0x80 | 0x00);
 25903  002F08  0E80               	movlw	128
 25904  002F0A  ECC4  F03E         	call	_HALSPISend
 25905                           
 25906                           ;radio_driver_SX1276.c: 893: for (i = 0; i < bufferLen; i++)
 25907  002F0E  0E00               	movlw	0
 25908  002F10  0100               	movlb	0	; () banked
 25909  002F12  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 25910  002F14  D00D               	goto	l546
 25911  002F16                     
 25912                           ; BSR set to: 0
 25913                           ;radio_driver_SX1276.c: 894: {
 25914                           ;radio_driver_SX1276.c: 895: HALSPISend(buffer[i]);
 25915                           
 25916                           ; BSR set to: 0
 25917  002F16  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 25918  002F18  0D01               	mullw	1
 25919  002F1A  50F3               	movf	prodl,w,c
 25920  002F1C  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 25921  002F1E  6ED9               	movwf	fsr2l,c
 25922  002F20  50F4               	movf	prodh,w,c
 25923  002F22  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 25924  002F24  6EDA               	movwf	fsr2h,c
 25925  002F26  50DF               	movf	indf2,w,c
 25926  002F28  ECC4  F03E         	call	_HALSPISend
 25927  002F2C  0100               	movlb	0	; () banked
 25928  002F2E  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 25929  002F30                     l546:
 25930                           
 25931                           ; BSR set to: 0
 25932                           
 25933                           ; BSR set to: 0
 25934  002F30  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 25935  002F32  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 25936  002F34  A0D8               	btfss	status,0,c
 25937  002F36  D7EF               	goto	l547
 25938                           
 25939                           ; BSR set to: 0
 25940                           ;radio_driver_SX1276.c: 896: }
 25941                           ;radio_driver_SX1276.c: 897: HALSPICSDeassert();
 25942                           
 25943                           ; BSR set to: 0
 25944  002F38  EC48  F03F         	call	_HALSPICSDeassert	;wreg free
 25945                           
 25946                           ;radio_driver_SX1276.c: 899: RadioConfiguration.flags |= (1 << (0));
 25947  002F3C  0101               	movlb	1	; () banked
 25948  002F3E  8197               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 25949                           
 25950                           ; BSR set to: 1
 25951                           ;radio_driver_SX1276.c: 900: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 25952  002F40  0EE7               	movlw	231
 25953  002F42  1797               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 25954                           
 25955                           ; BSR set to: 1
 25956                           ;radio_driver_SX1276.c: 905: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 25957  002F44  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25958  002F48  0E00               	movlw	0
 25959  002F4A  0100               	movlb	0	; () banked
 25960  002F4C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25961  002F4E  0E03               	movlw	3
 25962  002F50  EC5E  F028         	call	_RADIO_WriteMode
 25963                           
 25964                           ; BSR set to: 0
 25965                           
 25966                           ;radio_driver_SX1276.c: 910: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 25967  002F54  0E00               	movlw	0
 25968  002F56  0100               	movlb	0	; () banked
 25969  002F58  6FB8               	movwf	_RADIO_Transmit$889& (0+255),b
 25970  002F5A  0E00               	movlw	0
 25971  002F5C  6FB9               	movwf	(_RADIO_Transmit$889+1)& (0+255),b
 25972  002F5E  0E0A               	movlw	10
 25973  002F60  6FBA               	movwf	(_RADIO_Transmit$889+2)& (0+255),b
 25974  002F62  0E00               	movlw	0
 25975  002F64  6FBB               	movwf	(_RADIO_Transmit$889+3)& (0+255),b
 25976                           
 25977                           ; BSR set to: 0
 25978                           
 25979                           ; BSR set to: 0
 25980  002F66  C0B8  F06D         	movff	_RADIO_Transmit$889,SwTimerSetTimeout@timeout
 25981  002F6A  C0B9  F06E         	movff	_RADIO_Transmit$889+1,SwTimerSetTimeout@timeout+1
 25982  002F6E  C0BA  F06F         	movff	_RADIO_Transmit$889+2,SwTimerSetTimeout@timeout+2
 25983  002F72  C0BB  F070         	movff	_RADIO_Transmit$889+3,SwTimerSetTimeout@timeout+3
 25984  002F76  0101               	movlb	1	; () banked
 25985  002F78  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25986  002F7A  EC9D  F039         	call	_SwTimerSetTimeout
 25987                           
 25988                           ;radio_driver_SX1276.c: 911: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 25989  002F7E  0101               	movlb	1	; () banked
 25990  002F80  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25991  002F82  EC62  F030         	call	_SwTimerStart
 25992                           
 25993                           ;radio_driver_SX1276.c: 913: if (0 != RadioConfiguration.watchdogTimerTimeout)
 25994  002F86  0101               	movlb	1	; () banked
 25995  002F88  519E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 25996  002F8A  119F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 25997  002F8C  11A0               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 25998  002F8E  11A1               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 25999  002F90  B4D8               	btfsc	status,2,c
 26000  002F92  D061               	goto	l553
 26001                           
 26002                           ; BSR set to: 1
 26003                           ;radio_driver_SX1276.c: 914: {
 26004                           ;radio_driver_SX1276.c: 915: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26005  002F94  51A1               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26006  002F96  E107               	bnz	u8880
 26007  002F98  299E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26008  002F9A  0EFF               	movlw	255
 26009  002F9C  599F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26010  002F9E  0E0F               	movlw	15
 26011  002FA0  59A0               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26012  002FA2  A0D8               	btfss	status,0,c
 26013  002FA4  D01D               	goto	l555
 26014  002FA6                     u8880:
 26015                           
 26016                           ; BSR set to: 1
 26017  002FA6  C19E  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 26018  002FAA  C19F  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26019  002FAE  C1A0  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26020  002FB2  C1A1  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26021  002FB6  0E7D               	movlw	125
 26022  002FB8  0100               	movlb	0	; () banked
 26023  002FBA  6F64               	movwf	___lldiv@divisor& (0+255),b
 26024  002FBC  0E00               	movlw	0
 26025  002FBE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26026  002FC0  0E00               	movlw	0
 26027  002FC2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26028  002FC4  0E00               	movlw	0
 26029  002FC6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26030  002FC8  EC93  F032         	call	___lldiv	;wreg free
 26031  002FCC  0E0C               	movlw	12
 26032  002FCE                     u8895:
 26033  002FCE  90D8               	bcf	status,0,c
 26034  002FD0  0100               	movlb	0	; () banked
 26035  002FD2  3760               	rlcf	?___lldiv& (0+255),f,b
 26036  002FD4  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 26037  002FD6  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 26038  002FD8  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 26039  002FDA  2EE8               	decfsz	wreg,f,c
 26040  002FDC  D7F8               	goto	u8895
 26041  002FDE  D023               	goto	L16
 26042  002FE0                     l555:
 26043                           
 26044                           ; BSR set to: 0
 26045  002FE0  C19E  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26046  002FE4  C19F  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26047  002FE8  C1A0  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26048  002FEC  C1A1  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26049  002FF0  0E0C               	movlw	12
 26050  002FF2                     u8905:
 26051  002FF2  90D8               	bcf	status,0,c
 26052  002FF4  0100               	movlb	0	; () banked
 26053  002FF6  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26054  002FF8  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26055  002FFA  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26056  002FFC  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26057  002FFE  2EE8               	decfsz	wreg,f,c
 26058  003000  D7F8               	goto	u8905
 26059  003002  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 26060  003006  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26061  00300A  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26062  00300E  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26063  003012  0E7D               	movlw	125
 26064  003014  6F64               	movwf	___lldiv@divisor& (0+255),b
 26065  003016  0E00               	movlw	0
 26066  003018  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26067  00301A  0E00               	movlw	0
 26068  00301C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26069  00301E  0E00               	movlw	0
 26070  003020  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26071  003022  EC93  F032         	call	___lldiv	;wreg free
 26072  003026                     L16:
 26073  003026  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$891
 26074  00302A  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$891+1
 26075  00302E  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$891+2
 26076  003032  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$891+3
 26077  003036  C0BC  F06D         	movff	_RADIO_Transmit$891,SwTimerSetTimeout@timeout
 26078  00303A  C0BD  F06E         	movff	_RADIO_Transmit$891+1,SwTimerSetTimeout@timeout+1
 26079  00303E  C0BE  F06F         	movff	_RADIO_Transmit$891+2,SwTimerSetTimeout@timeout+2
 26080  003042  C0BF  F070         	movff	_RADIO_Transmit$891+3,SwTimerSetTimeout@timeout+3
 26081  003046  0101               	movlb	1	; () banked
 26082  003048  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26083  00304A  EC9D  F039         	call	_SwTimerSetTimeout
 26084                           
 26085                           ;radio_driver_SX1276.c: 916: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26086  00304E  0101               	movlb	1	; () banked
 26087  003050  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26088  003052  EC62  F030         	call	_SwTimerStart
 26089  003056                     l553:
 26090                           
 26091                           ;radio_driver_SX1276.c: 917: }
 26092                           ;radio_driver_SX1276.c: 919: return ERR_NONE;
 26093  003056  0E00               	movlw	0
 26094  003058  0100               	movlb	0	; () banked
 26095  00305A  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26096  00305C  0E00               	movlw	0
 26097  00305E  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 26098  003060  0012               	return	
 26099  003062                     __end_of_RADIO_Transmit:
 26100                           	opt stack 0
 26101                           tosu	equ	0xFFF
 26102                           tosh	equ	0xFFE
 26103                           tosl	equ	0xFFD
 26104                           pclath	equ	0xFFA
 26105                           tblptru	equ	0xFF8
 26106                           tblptrh	equ	0xFF7
 26107                           tblptrl	equ	0xFF6
 26108                           tablat	equ	0xFF5
 26109                           prodh	equ	0xFF4
 26110                           prodl	equ	0xFF3
 26111                           intcon	equ	0xFF2
 26112                           intcon2	equ	0xFF1
 26113                           intcon3	equ	0xFF0
 26114                           indf0	equ	0xFEF
 26115                           postinc0	equ	0xFEE
 26116                           fsr0h	equ	0xFEA
 26117                           fsr0l	equ	0xFE9
 26118                           wreg	equ	0xFE8
 26119                           postinc1	equ	0xFE6
 26120                           postdec1	equ	0xFE5
 26121                           plusw1	equ	0xFE3
 26122                           fsr1h	equ	0xFE2
 26123                           fsr1l	equ	0xFE1
 26124                           indf2	equ	0xFDF
 26125                           postinc2	equ	0xFDE
 26126                           postdec2	equ	0xFDD
 26127                           plusw2	equ	0xFDB
 26128                           fsr2h	equ	0xFDA
 26129                           fsr2l	equ	0xFD9
 26130                           status	equ	0xFD8
 26131                           
 26132 ;; *************** function _RADIO_WriteConfiguration *****************
 26133 ;; Defined at:
 26134 ;;		line 561 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26135 ;; Parameters:    Size  Location     Type
 26136 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 26137 ;; Auto vars:     Size  Location     Type
 26138 ;;  tempValue       4   76[BANK0 ] unsigned long 
 26139 ;;  regValue        1   80[BANK0 ] unsigned char 
 26140 ;;  i               1   75[BANK0 ] unsigned char 
 26141 ;; Return value:  Size  Location     Type
 26142 ;;                  1    wreg      void 
 26143 ;; Registers used:
 26144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26145 ;; Tracked objects:
 26146 ;;		On entry : 0/0
 26147 ;;		On exit  : 0/0
 26148 ;;		Unchanged: 0/0
 26149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26151 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26152 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26153 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26154 ;;Total ram usage:       11 bytes
 26155 ;; Hardware stack levels used:    1
 26156 ;; Hardware stack levels required when called:   11
 26157 ;; This function calls:
 26158 ;;		_RADIO_RegisterRead
 26159 ;;		_RADIO_RegisterWrite
 26160 ;;		_RADIO_WriteFSKBitRate
 26161 ;;		_RADIO_WriteFSKFrequencyDeviation
 26162 ;;		_RADIO_WriteFrequency
 26163 ;;		_RADIO_WriteMode
 26164 ;;		_RADIO_WritePower
 26165 ;;		___lmul
 26166 ;; This function is called by:
 26167 ;;		_RADIO_Transmit
 26168 ;;		_RADIO_ReceiveStart
 26169 ;;		_RADIO_TransmitCW
 26170 ;; This function uses a non-reentrant model
 26171 ;;
 26172                           
 26173                           	psect	text132
 26174  000D12                     __ptext132:
 26175                           	opt stack 0
 26176  000D12                     _RADIO_WriteConfiguration:
 26177                           	opt stack 17
 26178                           
 26179                           ;radio_driver_SX1276.c: 563: uint32_t tempValue;
 26180                           ;radio_driver_SX1276.c: 564: uint8_t regValue;
 26181                           ;radio_driver_SX1276.c: 565: uint8_t i;
 26182                           ;radio_driver_SX1276.c: 568: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26183                           
 26184                           ; BSR set to: 0
 26185                           ;incstack = 0
 26186  000D12  C18C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26187  000D16  0E00               	movlw	0
 26188  000D18  0100               	movlb	0	; () banked
 26189  000D1A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26190  000D1C  0E00               	movlw	0
 26191  000D1E  EC5E  F028         	call	_RADIO_WriteMode
 26192                           
 26193                           ;radio_driver_SX1276.c: 569: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26194  000D22  C174  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26195  000D26  C175  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26196  000D2A  C176  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26197  000D2E  C177  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26198  000D32  ECCF  F029         	call	_RADIO_WriteFrequency	;wreg free
 26199                           
 26200                           ;radio_driver_SX1276.c: 570: RADIO_WritePower(RadioConfiguration.outputPower);
 26201  000D36  0101               	movlb	1	; () banked
 26202  000D38  518F               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26203  000D3A  EC57  F029         	call	_RADIO_WritePower
 26204                           
 26205                           ;radio_driver_SX1276.c: 572: if (MODULATION_LORA == RadioConfiguration.modulation)
 26206  000D3E  0101               	movlb	1	; () banked
 26207  000D40  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26208  000D42  A4D8               	btfss	status,2,c
 26209  000D44  D1ED               	goto	l489
 26210                           
 26211                           ; BSR set to: 1
 26212                           ;radio_driver_SX1276.c: 573: {
 26213                           ;radio_driver_SX1276.c: 574: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26214  000D46  C182  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26215  000D4A  0E39               	movlw	57
 26216  000D4C  EC5D  F03D         	call	_RADIO_RegisterWrite
 26217                           
 26218                           ;radio_driver_SX1276.c: 576: RADIO_RegisterWrite(0x1D,
 26219                           ;radio_driver_SX1276.c: 577: (RadioConfiguration.bandWidth << (4)) |
 26220                           ;radio_driver_SX1276.c: 578: (RadioConfiguration.errorCodingRate << (1)) |
 26221                           ;radio_driver_SX1276.c: 579: (RadioConfiguration.implicitHeaderMode & 0x01));
 26222  000D50  C196  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26223  000D54  0E01               	movlw	1
 26224  000D56  0100               	movlb	0	; () banked
 26225  000D58  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26226  000D5A  0101               	movlb	1	; () banked
 26227  000D5C  90D8               	bcf	status,0,c
 26228  000D5E  3595               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26229  000D60  0100               	movlb	0	; () banked
 26230  000D62  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26231  000D64  0101               	movlb	1	; () banked
 26232  000D66  398E               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26233  000D68  0BF0               	andlw	240
 26234  000D6A  0100               	movlb	0	; () banked
 26235  000D6C  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26236  000D6E  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26237  000D70  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26238  000D72  0E1D               	movlw	29
 26239  000D74  EC5D  F03D         	call	_RADIO_RegisterWrite
 26240                           
 26241                           ;radio_driver_SX1276.c: 581: RADIO_RegisterWrite(0x1E,
 26242                           ;radio_driver_SX1276.c: 582: (RadioConfiguration.dataRate << (4)) |
 26243                           ;radio_driver_SX1276.c: 583: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26244                           ;radio_driver_SX1276.c: 584: ((symbolTimeout & 0x0300) >> (8)));
 26245  000D78  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 26246  000D7C  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 26247  000D80  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 26248  000D84  0100               	movlb	0	; () banked
 26249  000D86  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26250  000D88  0E03               	movlw	3
 26251  000D8A  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26252  000D8C  C190  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 26253  000D90  0E01               	movlw	1
 26254  000D92  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 26255  000D94  90D8               	bcf	status,0,c
 26256  000D96  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 26257  000D98  90D8               	bcf	status,0,c
 26258  000D9A  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 26259  000D9C  0101               	movlb	1	; () banked
 26260  000D9E  398D               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26261  000DA0  0BF0               	andlw	240
 26262  000DA2  0100               	movlb	0	; () banked
 26263  000DA4  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 26264  000DA6  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26265  000DA8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26266  000DAA  0E1E               	movlw	30
 26267  000DAC  EC5D  F03D         	call	_RADIO_RegisterWrite
 26268                           
 26269                           ;radio_driver_SX1276.c: 588: if (0 != RadioConfiguration.frequencyHopPeriod)
 26270  000DB0  0101               	movlb	1	; () banked
 26271  000DB2  5192               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26272  000DB4  1193               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26273  000DB6  B4D8               	btfsc	status,2,c
 26274  000DB8  D06F               	goto	l490
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;radio_driver_SX1276.c: 589: {
 26278                           ;radio_driver_SX1276.c: 590: tempValue = RadioConfiguration.frequencyHopPeriod;
 26279  000DBA  C192  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26280  000DBE  C193  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26281  000DC2  0100               	movlb	0	; () banked
 26282  000DC4  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26283  000DC6  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26284                           
 26285                           ;radio_driver_SX1276.c: 592: switch (RadioConfiguration.bandWidth)
 26286  000DC8  D04E               	goto	l491
 26287  000DCA                     
 26288                           ;radio_driver_SX1276.c: 595: tempValue *= 125;
 26289                           
 26290                           ; BSR set to: 0
 26291  000DCA  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26292  000DCE  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26293  000DD2  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26294  000DD6  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26295  000DDA  0E7D               	movlw	125
 26296  000DDC  0100               	movlb	0	; () banked
 26297  000DDE  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 26298  000DE0  0E00               	movlw	0
 26299  000DE2  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26300  000DE4  0E00               	movlw	0
 26301  000DE6  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26302  000DE8  0E00               	movlw	0
 26303  000DEA  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26304  000DEC  EC55  F037         	call	___lmul	;wreg free
 26305  000DF0  D027               	goto	L18
 26306  000DF2                     
 26307                           ;radio_driver_SX1276.c: 598: tempValue *= 250;
 26308  000DF2  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26309  000DF6  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26310  000DFA  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26311  000DFE  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26312  000E02  0EFA               	movlw	250
 26313  000E04  0100               	movlb	0	; () banked
 26314  000E06  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 26315  000E08  0E00               	movlw	0
 26316  000E0A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26317  000E0C  0E00               	movlw	0
 26318  000E0E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26319  000E10  0E00               	movlw	0
 26320  000E12  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26321  000E14  EC55  F037         	call	___lmul	;wreg free
 26322  000E18  D013               	goto	L18
 26323  000E1A                     
 26324                           ;radio_driver_SX1276.c: 601: tempValue *= 500;
 26325  000E1A  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26326  000E1E  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26327  000E22  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26328  000E26  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26329  000E2A  0EF4               	movlw	244
 26330  000E2C  0100               	movlb	0	; () banked
 26331  000E2E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 26332  000E30  0E01               	movlw	1
 26333  000E32  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26334  000E34  0E00               	movlw	0
 26335  000E36  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26336  000E38  0E00               	movlw	0
 26337  000E3A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26338  000E3C  EC55  F037         	call	___lmul	;wreg free
 26339  000E40                     L18:
 26340  000E40  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26341  000E44  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26342  000E48  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26343  000E4C  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26344                           
 26345                           ;radio_driver_SX1276.c: 602: break;
 26346  000E50  D016               	goto	l493
 26347  000E52                     
 26348                           ;radio_driver_SX1276.c: 605: tempValue = 0;
 26349  000E52  0E00               	movlw	0
 26350  000E54  0100               	movlb	0	; () banked
 26351  000E56  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26352  000E58  0E00               	movlw	0
 26353  000E5A  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26354  000E5C  0E00               	movlw	0
 26355  000E5E  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26356  000E60  0E00               	movlw	0
 26357  000E62  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26358                           
 26359                           ; BSR set to: 0
 26360                           ;radio_driver_SX1276.c: 607: }
 26361                           
 26362                           ;radio_driver_SX1276.c: 606: break;
 26363  000E64  D00C               	goto	l493
 26364  000E66                     l491:
 26365                           
 26366                           ; BSR set to: 0
 26367                           
 26368                           ; BSR set to: 0
 26369  000E66  0101               	movlb	1	; () banked
 26370  000E68  518E               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26371                           
 26372                           ; Switch size 1, requested type "space"
 26373                           ; Number of cases is 3, Range of values is 7 to 9
 26374                           ; switch strategies available:
 26375                           ; Name         Instructions Cycles
 26376                           ; simple_byte           10     6 (average)
 26377                           ;	Chosen strategy is simple_byte
 26378  000E6A  0A07               	xorlw	7	; case 7
 26379  000E6C  B4D8               	btfsc	status,2,c
 26380  000E6E  D7AD               	goto	l492
 26381  000E70  0A0F               	xorlw	15	; case 8
 26382  000E72  B4D8               	btfsc	status,2,c
 26383  000E74  D7BE               	goto	l494
 26384  000E76  0A01               	xorlw	1	; case 9
 26385  000E78  B4D8               	btfsc	status,2,c
 26386  000E7A  D7CF               	goto	l495
 26387  000E7C  D7EA               	goto	l496
 26388  000E7E                     l493:
 26389                           
 26390                           ;radio_driver_SX1276.c: 609: tempValue >>= RadioConfiguration.dataRate;
 26391                           
 26392                           ; BSR set to: 1
 26393  000E7E  0101               	movlb	1	; () banked
 26394  000E80  298D               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26395  000E82  0100               	movlb	0	; () banked
 26396  000E84  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26397  000E86  D005               	goto	u7480
 26398  000E88                     u7485:
 26399  000E88  90D8               	bcf	status,0,c
 26400  000E8A  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26401  000E8C  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26402  000E8E  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26403  000E90  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26404  000E92                     u7480:
 26405  000E92  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26406  000E94  D7F9               	goto	u7485
 26407                           
 26408                           ;radio_driver_SX1276.c: 610: }
 26409  000E96  D009               	goto	l497
 26410  000E98                     l490:
 26411                           
 26412                           ;radio_driver_SX1276.c: 611: else
 26413                           ;radio_driver_SX1276.c: 612: {
 26414                           ;radio_driver_SX1276.c: 613: tempValue = 0;
 26415  000E98  0E00               	movlw	0
 26416  000E9A  0100               	movlb	0	; () banked
 26417  000E9C  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26418  000E9E  0E00               	movlw	0
 26419  000EA0  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26420  000EA2  0E00               	movlw	0
 26421  000EA4  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26422  000EA6  0E00               	movlw	0
 26423  000EA8  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26424  000EAA                     l497:
 26425                           
 26426                           ;radio_driver_SX1276.c: 614: }
 26427                           ;radio_driver_SX1276.c: 615: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26428                           
 26429                           ; BSR set to: 0
 26430  000EAA  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26431  000EAE  0E24               	movlw	36
 26432  000EB0  EC5D  F03D         	call	_RADIO_RegisterWrite
 26433                           
 26434                           ;radio_driver_SX1276.c: 617: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26435  000EB4  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26436  000EB8  0E1F               	movlw	31
 26437  000EBA  EC5D  F03D         	call	_RADIO_RegisterWrite
 26438                           
 26439                           ;radio_driver_SX1276.c: 623: regValue = RADIO_RegisterRead(0x26);
 26440  000EBE  0E26               	movlw	38
 26441  000EC0  EC75  F03C         	call	_RADIO_RegisterRead
 26442  000EC4  0100               	movlb	0	; () banked
 26443  000EC6  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26444                           
 26445                           ; BSR set to: 0
 26446                           ;radio_driver_SX1276.c: 624: if (
 26447                           ;radio_driver_SX1276.c: 625: (
 26448                           ;radio_driver_SX1276.c: 626: (SF_12 == RadioConfiguration.dataRate) &&
 26449                           ;radio_driver_SX1276.c: 627: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26450                           ;radio_driver_SX1276.c: 628: ) ||
 26451                           ;radio_driver_SX1276.c: 629: (
 26452                           ;radio_driver_SX1276.c: 630: (SF_11 == RadioConfiguration.dataRate) &&
 26453                           ;radio_driver_SX1276.c: 631: (BW_125KHZ == RadioConfiguration.bandWidth)
 26454                           ;radio_driver_SX1276.c: 632: )
 26455                           ;radio_driver_SX1276.c: 633: )
 26456  000EC8  0E0C               	movlw	12
 26457  000ECA  0101               	movlb	1	; () banked
 26458  000ECC  198D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26459  000ECE  A4D8               	btfss	status,2,c
 26460  000ED0  D008               	goto	u7510
 26461                           
 26462                           ; BSR set to: 1
 26463  000ED2  0E07               	movlw	7
 26464  000ED4  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26465  000ED6  B4D8               	btfsc	status,2,c
 26466  000ED8  D00C               	goto	u7530
 26467                           
 26468                           ; BSR set to: 1
 26469  000EDA  0E08               	movlw	8
 26470  000EDC  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26471  000EDE  B4D8               	btfsc	status,2,c
 26472  000EE0  D008               	goto	u7530
 26473  000EE2                     u7510:
 26474                           
 26475                           ; BSR set to: 1
 26476                           
 26477                           ; BSR set to: 1
 26478  000EE2  0E0B               	movlw	11
 26479  000EE4  198D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26480  000EE6  A4D8               	btfss	status,2,c
 26481  000EE8  D007               	goto	l498
 26482                           
 26483                           ; BSR set to: 1
 26484  000EEA  0E07               	movlw	7
 26485  000EEC  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26486  000EEE  A4D8               	btfss	status,2,c
 26487  000EF0  D003               	goto	l498
 26488  000EF2                     u7530:
 26489                           
 26490                           ; BSR set to: 1
 26491                           ;radio_driver_SX1276.c: 634: {
 26492                           ;radio_driver_SX1276.c: 635: regValue |= 1 << (3);
 26493                           
 26494                           ; BSR set to: 1
 26495  000EF2  0100               	movlb	0	; () banked
 26496  000EF4  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26497                           
 26498                           ;radio_driver_SX1276.c: 636: }
 26499  000EF6  D002               	goto	l503
 26500  000EF8                     l498:
 26501                           
 26502                           ;radio_driver_SX1276.c: 637: else
 26503                           ;radio_driver_SX1276.c: 638: {
 26504                           ;radio_driver_SX1276.c: 639: regValue &= ~(1 << (3));
 26505                           
 26506                           ; BSR set to: 0
 26507  000EF8  0100               	movlb	0	; () banked
 26508  000EFA  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26509  000EFC                     l503:
 26510                           
 26511                           ; BSR set to: 0
 26512                           ;radio_driver_SX1276.c: 640: }
 26513                           ;radio_driver_SX1276.c: 641: regValue |= 1 << (2);
 26514  000EFC  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;radio_driver_SX1276.c: 642: RADIO_RegisterWrite(0x26, regValue);
 26518  000EFE  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26519  000F02  0E26               	movlw	38
 26520  000F04  EC5D  F03D         	call	_RADIO_RegisterWrite
 26521                           
 26522                           ;radio_driver_SX1276.c: 644: regValue = RADIO_RegisterRead(0x31);
 26523  000F08  0E31               	movlw	49
 26524  000F0A  EC75  F03C         	call	_RADIO_RegisterRead
 26525  000F0E  0100               	movlb	0	; () banked
 26526  000F10  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26527                           
 26528                           ; BSR set to: 0
 26529                           ;radio_driver_SX1276.c: 645: regValue &= ~(0x07);
 26530  000F12  0EF8               	movlw	248
 26531  000F14  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26532                           
 26533                           ; BSR set to: 0
 26534                           ;radio_driver_SX1276.c: 646: regValue |= 0x03;
 26535  000F16  0E03               	movlw	3
 26536  000F18  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26537                           
 26538                           ; BSR set to: 0
 26539                           ;radio_driver_SX1276.c: 647: RADIO_RegisterWrite(0x31, regValue);
 26540  000F1A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26541  000F1E  0E31               	movlw	49
 26542  000F20  EC5D  F03D         	call	_RADIO_RegisterWrite
 26543                           
 26544                           ;radio_driver_SX1276.c: 650: RADIO_RegisterWrite(0x37, 0x0A);
 26545  000F24  0E0A               	movlw	10
 26546  000F26  0100               	movlb	0	; () banked
 26547  000F28  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26548  000F2A  0E37               	movlw	55
 26549  000F2C  EC5D  F03D         	call	_RADIO_RegisterWrite
 26550                           
 26551                           ;radio_driver_SX1276.c: 653: if (0x12 == RadioConfiguration.regVersion)
 26552  000F30  0E12               	movlw	18
 26553  000F32  0101               	movlb	1	; () banked
 26554  000F34  19A5               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26555  000F36  A4D8               	btfss	status,2,c
 26556  000F38  D02F               	goto	l508
 26557                           
 26558                           ; BSR set to: 1
 26559                           ;radio_driver_SX1276.c: 654: {
 26560                           ;radio_driver_SX1276.c: 657: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26561                           ;radio_driver_SX1276.c: 658: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26562  000F3A  0E07               	movlw	7
 26563  000F3C  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26564  000F3E  B4D8               	btfsc	status,2,c
 26565  000F40  D004               	goto	u7560
 26566                           
 26567                           ; BSR set to: 1
 26568  000F42  0E08               	movlw	8
 26569  000F44  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26570  000F46  A4D8               	btfss	status,2,c
 26571  000F48  D017               	goto	l505
 26572  000F4A                     u7560:
 26573                           
 26574                           ; BSR set to: 1
 26575                           ;radio_driver_SX1276.c: 659: {
 26576                           ;radio_driver_SX1276.c: 660: regValue = RADIO_RegisterRead(0x31);
 26577                           
 26578                           ; BSR set to: 1
 26579  000F4A  0E31               	movlw	49
 26580  000F4C  EC75  F03C         	call	_RADIO_RegisterRead
 26581  000F50  0100               	movlb	0	; () banked
 26582  000F52  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26583                           
 26584                           ; BSR set to: 0
 26585                           ;radio_driver_SX1276.c: 661: regValue &= ~0x80;
 26586  000F54  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26587                           
 26588                           ; BSR set to: 0
 26589                           ;radio_driver_SX1276.c: 662: RADIO_RegisterWrite(0x31, regValue);
 26590  000F56  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26591  000F5A  0E31               	movlw	49
 26592  000F5C  EC5D  F03D         	call	_RADIO_RegisterWrite
 26593                           
 26594                           ;radio_driver_SX1276.c: 663: RADIO_RegisterWrite(0x2F, 0x40);
 26595  000F60  0E40               	movlw	64
 26596  000F62  0100               	movlb	0	; () banked
 26597  000F64  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26598  000F66  0E2F               	movlw	47
 26599  000F68  EC5D  F03D         	call	_RADIO_RegisterWrite
 26600                           
 26601                           ;radio_driver_SX1276.c: 664: RADIO_RegisterWrite(0x30, 0x00);
 26602  000F6C  0E00               	movlw	0
 26603  000F6E  0100               	movlb	0	; () banked
 26604  000F70  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26605  000F72  0E30               	movlw	48
 26606  000F74  EC5D  F03D         	call	_RADIO_RegisterWrite
 26607  000F78                     l505:
 26608                           
 26609                           ;radio_driver_SX1276.c: 665: }
 26610                           ;radio_driver_SX1276.c: 667: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26611  000F78  0E09               	movlw	9
 26612  000F7A  0101               	movlb	1	; () banked
 26613  000F7C  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26614  000F7E  A4D8               	btfss	status,2,c
 26615  000F80  D00B               	goto	l508
 26616                           
 26617                           ; BSR set to: 1
 26618                           ;radio_driver_SX1276.c: 668: {
 26619                           ;radio_driver_SX1276.c: 669: regValue = RADIO_RegisterRead(0x31);
 26620  000F82  0E31               	movlw	49
 26621  000F84  EC75  F03C         	call	_RADIO_RegisterRead
 26622  000F88  0100               	movlb	0	; () banked
 26623  000F8A  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;radio_driver_SX1276.c: 670: regValue |= 0x80;
 26627  000F8C  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26628                           
 26629                           ; BSR set to: 0
 26630                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x31, regValue);
 26631  000F8E  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26632  000F92  0E31               	movlw	49
 26633  000F94  EC5D  F03D         	call	_RADIO_RegisterWrite
 26634  000F98                     l508:
 26635                           
 26636                           ;radio_driver_SX1276.c: 672: }
 26637                           ;radio_driver_SX1276.c: 673: }
 26638                           ;radio_driver_SX1276.c: 675: regValue = RADIO_RegisterRead(0x33);
 26639  000F98  0E33               	movlw	51
 26640  000F9A  EC75  F03C         	call	_RADIO_RegisterRead
 26641  000F9E  0100               	movlb	0	; () banked
 26642  000FA0  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26643                           
 26644                           ; BSR set to: 0
 26645                           ;radio_driver_SX1276.c: 676: regValue &= ~(1 << (6));
 26646  000FA2  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26647                           
 26648                           ; BSR set to: 0
 26649                           ;radio_driver_SX1276.c: 677: regValue |= (1 << (0));
 26650  000FA4  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;radio_driver_SX1276.c: 678: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26654  000FA6  C194  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26655  000FAA  0E01               	movlw	1
 26656  000FAC  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26657  000FAE  0E06               	movlw	6
 26658  000FB0  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26659  000FB2                     u7585:
 26660  000FB2  90D8               	bcf	status,0,c
 26661  000FB4  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26662  000FB6  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26663  000FB8  D7FC               	goto	u7585
 26664  000FBA  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26665  000FBC  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x33, regValue);
 26669  000FBE  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26670  000FC2  0E33               	movlw	51
 26671  000FC4  EC5D  F03D         	call	_RADIO_RegisterWrite
 26672                           
 26673                           ;radio_driver_SX1276.c: 681: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26674  000FC8  C194  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26675  000FCC  0E01               	movlw	1
 26676  000FCE  0100               	movlb	0	; () banked
 26677  000FD0  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26678  000FD2  90D8               	bcf	status,0,c
 26679  000FD4  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26680  000FD6  90D8               	bcf	status,0,c
 26681  000FD8  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26682  000FDA  0AFF               	xorlw	255
 26683  000FDC  0B1D               	andlw	29
 26684  000FDE  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26685                           
 26686                           ; BSR set to: 0
 26687                           ;radio_driver_SX1276.c: 682: RADIO_RegisterWrite(0x3B, regValue);
 26688  000FE0  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26689  000FE4  0E3B               	movlw	59
 26690  000FE6  EC5D  F03D         	call	_RADIO_RegisterWrite
 26691                           
 26692                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26693  000FEA  0101               	movlb	1	; () banked
 26694  000FEC  5181               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26695  000FEE  0100               	movlb	0	; () banked
 26696  000FF0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26697  000FF2  0E20               	movlw	32
 26698  000FF4  EC5D  F03D         	call	_RADIO_RegisterWrite
 26699                           
 26700                           ;radio_driver_SX1276.c: 685: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26701  000FF8  C180  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26702  000FFC  0E21               	movlw	33
 26703  000FFE  EC5D  F03D         	call	_RADIO_RegisterWrite
 26704                           
 26705                           ;radio_driver_SX1276.c: 687: RADIO_RegisterWrite(0x0D, 0x00);
 26706  001002  0E00               	movlw	0
 26707  001004  0100               	movlb	0	; () banked
 26708  001006  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26709  001008  0E0D               	movlw	13
 26710  00100A  EC5D  F03D         	call	_RADIO_RegisterWrite
 26711                           
 26712                           ;radio_driver_SX1276.c: 688: RADIO_RegisterWrite(0x0E, 0x00);
 26713  00100E  0E00               	movlw	0
 26714  001010  0100               	movlb	0	; () banked
 26715  001012  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26716  001014  0E0E               	movlw	14
 26717  001016  EC5D  F03D         	call	_RADIO_RegisterWrite
 26718                           
 26719                           ;radio_driver_SX1276.c: 689: RADIO_RegisterWrite(0x0F, 0x00);
 26720  00101A  0E00               	movlw	0
 26721  00101C  0100               	movlb	0	; () banked
 26722  00101E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26723  001020  0E0F               	movlw	15
 26724  001022  EC5D  F03D         	call	_RADIO_RegisterWrite
 26725                           
 26726                           ;radio_driver_SX1276.c: 692: if (0x12 == RadioConfiguration.regVersion)
 26727  001026  0E12               	movlw	18
 26728  001028  0101               	movlb	1	; () banked
 26729  00102A  19A5               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26730  00102C  A4D8               	btfss	status,2,c
 26731  00102E  D071               	goto	l515
 26732                           
 26733                           ; BSR set to: 1
 26734                           ;radio_driver_SX1276.c: 693: {
 26735                           ;radio_driver_SX1276.c: 694: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26736                           ;radio_driver_SX1276.c: 695: (RadioConfiguration.frequency >= 862000000) &&
 26737                           ;radio_driver_SX1276.c: 696: (RadioConfiguration.frequency <= 1020000000)
 26738                           ;radio_driver_SX1276.c: 697: )
 26739  001030  0E09               	movlw	9
 26740  001032  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26741  001034  A4D8               	btfss	status,2,c
 26742  001036  D020               	goto	l510
 26743                           
 26744                           ; BSR set to: 1
 26745  001038  0E80               	movlw	128
 26746  00103A  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 26747  00103C  0E13               	movlw	19
 26748  00103E  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26749  001040  0E61               	movlw	97
 26750  001042  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26751  001044  0E33               	movlw	51
 26752  001046  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26753  001048  A0D8               	btfss	status,0,c
 26754  00104A  D016               	goto	l510
 26755                           
 26756                           ; BSR set to: 1
 26757  00104C  0574               	decf	_RadioConfiguration& (0+255),w,b
 26758  00104E  0EF7               	movlw	247
 26759  001050  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26760  001052  0ECB               	movlw	203
 26761  001054  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26762  001056  0E3C               	movlw	60
 26763  001058  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26764  00105A  B0D8               	btfsc	status,0,c
 26765  00105C  D00D               	goto	l510
 26766                           
 26767                           ; BSR set to: 1
 26768                           ;radio_driver_SX1276.c: 698: {
 26769                           ;radio_driver_SX1276.c: 699: RADIO_RegisterWrite(0x36, 0x02);
 26770  00105E  0E02               	movlw	2
 26771  001060  0100               	movlb	0	; () banked
 26772  001062  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26773  001064  0E36               	movlw	54
 26774  001066  EC5D  F03D         	call	_RADIO_RegisterWrite
 26775                           
 26776                           ;radio_driver_SX1276.c: 700: RADIO_RegisterWrite(0x3a, 0x64);
 26777  00106A  0E64               	movlw	100
 26778  00106C  0100               	movlb	0	; () banked
 26779  00106E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26780  001070  0E3A               	movlw	58
 26781  001072  EC5D  F03D         	call	_RADIO_RegisterWrite
 26782                           
 26783                           ;radio_driver_SX1276.c: 701: }
 26784  001076  D02C               	goto	l513
 26785  001078                     l510:
 26786                           
 26787                           ;radio_driver_SX1276.c: 702: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26788                           ;radio_driver_SX1276.c: 703: (RadioConfiguration.frequency >= 410000000) &&
 26789                           ;radio_driver_SX1276.c: 704: (RadioConfiguration.frequency <= 525000000)
 26790                           ;radio_driver_SX1276.c: 705: )
 26791  001078  0E09               	movlw	9
 26792  00107A  0101               	movlb	1	; () banked
 26793  00107C  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26794  00107E  A4D8               	btfss	status,2,c
 26795  001080  D021               	goto	l512
 26796                           
 26797                           ; BSR set to: 1
 26798  001082  0E80               	movlw	128
 26799  001084  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 26800  001086  0E1A               	movlw	26
 26801  001088  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26802  00108A  0E70               	movlw	112
 26803  00108C  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26804  00108E  0E18               	movlw	24
 26805  001090  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26806  001092  A0D8               	btfss	status,0,c
 26807  001094  D017               	goto	l512
 26808                           
 26809                           ; BSR set to: 1
 26810  001096  0E41               	movlw	65
 26811  001098  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 26812  00109A  0EDD               	movlw	221
 26813  00109C  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26814  00109E  0E4A               	movlw	74
 26815  0010A0  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26816  0010A2  0E1F               	movlw	31
 26817  0010A4  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26818  0010A6  B0D8               	btfsc	status,0,c
 26819  0010A8  D00D               	goto	l512
 26820                           
 26821                           ; BSR set to: 1
 26822                           ;radio_driver_SX1276.c: 706: {
 26823                           ;radio_driver_SX1276.c: 707: RADIO_RegisterWrite(0x36, 0x02);
 26824  0010AA  0E02               	movlw	2
 26825  0010AC  0100               	movlb	0	; () banked
 26826  0010AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26827  0010B0  0E36               	movlw	54
 26828  0010B2  EC5D  F03D         	call	_RADIO_RegisterWrite
 26829                           
 26830                           ;radio_driver_SX1276.c: 708: RADIO_RegisterWrite(0x3a, 0x7F);
 26831  0010B6  0E7F               	movlw	127
 26832  0010B8  0100               	movlb	0	; () banked
 26833  0010BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26834  0010BC  0E3A               	movlw	58
 26835  0010BE  EC5D  F03D         	call	_RADIO_RegisterWrite
 26836                           
 26837                           ;radio_driver_SX1276.c: 709: }
 26838  0010C2  D006               	goto	l513
 26839  0010C4                     l512:
 26840                           
 26841                           ;radio_driver_SX1276.c: 710: else
 26842                           ;radio_driver_SX1276.c: 711: {
 26843                           ;radio_driver_SX1276.c: 712: RADIO_RegisterWrite(0x36, 0x03);
 26844  0010C4  0E03               	movlw	3
 26845  0010C6  0100               	movlb	0	; () banked
 26846  0010C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26847  0010CA  0E36               	movlw	54
 26848  0010CC  EC5D  F03D         	call	_RADIO_RegisterWrite
 26849  0010D0                     l513:
 26850                           
 26851                           ;radio_driver_SX1276.c: 713: }
 26852                           ;radio_driver_SX1276.c: 716: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 26853  0010D0  0E09               	movlw	9
 26854  0010D2  0101               	movlb	1	; () banked
 26855  0010D4  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26856  0010D6  A4D8               	btfss	status,2,c
 26857  0010D8  D010               	goto	l514
 26858                           
 26859                           ; BSR set to: 1
 26860  0010DA  0594               	decf	(_RadioConfiguration+32)& (0+255),w,b
 26861  0010DC  A4D8               	btfss	status,2,c
 26862  0010DE  D00D               	goto	l514
 26863                           
 26864                           ; BSR set to: 1
 26865                           ;radio_driver_SX1276.c: 717: {
 26866                           ;radio_driver_SX1276.c: 718: RADIO_RegisterWrite(0x3A, 0x65);
 26867  0010E0  0E65               	movlw	101
 26868  0010E2  0100               	movlb	0	; () banked
 26869  0010E4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26870  0010E6  0E3A               	movlw	58
 26871  0010E8  EC5D  F03D         	call	_RADIO_RegisterWrite
 26872                           
 26873                           ;radio_driver_SX1276.c: 719: RADIO_RegisterWrite(0x3B, 25);
 26874  0010EC  0E19               	movlw	25
 26875  0010EE  0100               	movlb	0	; () banked
 26876  0010F0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26877  0010F2  0E3B               	movlw	59
 26878  0010F4  EC5D  F03D         	call	_RADIO_RegisterWrite
 26879                           
 26880                           ;radio_driver_SX1276.c: 720: }
 26881  0010F8  D00C               	goto	l515
 26882  0010FA                     l514:
 26883                           
 26884                           ;radio_driver_SX1276.c: 721: else
 26885                           ;radio_driver_SX1276.c: 722: {
 26886                           ;radio_driver_SX1276.c: 723: RADIO_RegisterWrite(0x3A, 0x65);
 26887  0010FA  0E65               	movlw	101
 26888  0010FC  0100               	movlb	0	; () banked
 26889  0010FE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26890  001100  0E3A               	movlw	58
 26891  001102  EC5D  F03D         	call	_RADIO_RegisterWrite
 26892                           
 26893                           ;radio_driver_SX1276.c: 724: RADIO_RegisterWrite(0x3B, 29);
 26894  001106  0E1D               	movlw	29
 26895  001108  0100               	movlb	0	; () banked
 26896  00110A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26897  00110C  0E3B               	movlw	59
 26898  00110E  EC5D  F03D         	call	_RADIO_RegisterWrite
 26899  001112                     l515:
 26900                           
 26901                           ;radio_driver_SX1276.c: 725: }
 26902                           ;radio_driver_SX1276.c: 726: }
 26903                           ;radio_driver_SX1276.c: 729: RADIO_RegisterWrite(0x12, 0xFF);
 26904  001112  0EFF               	movlw	255
 26905  001114  0100               	movlb	0	; () banked
 26906  001116  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26907  001118  0E12               	movlw	18
 26908  00111A  EC5D  F03D         	call	_RADIO_RegisterWrite
 26909                           
 26910                           ;radio_driver_SX1276.c: 730: }
 26911  00111E  0012               	return	
 26912  001120                     l489:
 26913                           
 26914                           ;radio_driver_SX1276.c: 731: else
 26915                           ;radio_driver_SX1276.c: 732: {
 26916                           ;radio_driver_SX1276.c: 734: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 26917  001120  C178  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 26918  001124  C179  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 26919  001128  C17A  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 26920  00112C  C17B  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 26921  001130  ECAC  F034         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 26922                           
 26923                           ;radio_driver_SX1276.c: 735: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 26924  001134  C17C  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 26925  001138  C17D  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 26926  00113C  C17E  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 26927  001140  C17F  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 26928  001144  ECE1  F034         	call	_RADIO_WriteFSKBitRate	;wreg free
 26929                           
 26930                           ;radio_driver_SX1276.c: 737: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 26931  001148  0101               	movlb	1	; () banked
 26932  00114A  5181               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26933  00114C  0100               	movlb	0	; () banked
 26934  00114E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26935  001150  0E25               	movlw	37
 26936  001152  EC5D  F03D         	call	_RADIO_RegisterWrite
 26937                           
 26938                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26939  001156  C180  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26940  00115A  0E26               	movlw	38
 26941  00115C  EC5D  F03D         	call	_RADIO_RegisterWrite
 26942                           
 26943                           ;radio_driver_SX1276.c: 741: regValue = RADIO_RegisterRead(0x0A);
 26944  001160  0E0A               	movlw	10
 26945  001162  EC75  F03C         	call	_RADIO_RegisterRead
 26946  001166  0100               	movlb	0	; () banked
 26947  001168  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26948                           
 26949                           ; BSR set to: 0
 26950                           ;radio_driver_SX1276.c: 742: regValue &= ~0x60;
 26951  00116A  0E9F               	movlw	159
 26952  00116C  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26953                           
 26954                           ; BSR set to: 0
 26955                           ;radio_driver_SX1276.c: 743: regValue |= RadioConfiguration.fskDataShaping << (5);
 26956  00116E  0101               	movlb	1	; () banked
 26957  001170  39A7               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 26958  001172  46E8               	rlncf	wreg,f,c
 26959  001174  0BE0               	andlw	224
 26960  001176  0100               	movlb	0	; () banked
 26961  001178  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26962                           
 26963                           ;radio_driver_SX1276.c: 744: RADIO_RegisterWrite(0x0A, regValue);
 26964  00117A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26965  00117E  0E0A               	movlw	10
 26966  001180  EC5D  F03D         	call	_RADIO_RegisterWrite
 26967                           
 26968                           ;radio_driver_SX1276.c: 748: regValue = 0xC8;
 26969  001184  0EC8               	movlw	200
 26970  001186  0100               	movlb	0	; () banked
 26971  001188  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26972                           
 26973                           ; BSR set to: 0
 26974                           ;radio_driver_SX1276.c: 749: if (RadioConfiguration.crcOn)
 26975  00118A  0101               	movlb	1	; () banked
 26976  00118C  5190               	movf	(_RadioConfiguration+28)& (0+255),w,b
 26977  00118E  B4D8               	btfsc	status,2,c
 26978  001190  D002               	goto	l517
 26979                           
 26980                           ; BSR set to: 1
 26981                           ;radio_driver_SX1276.c: 750: {
 26982                           ;radio_driver_SX1276.c: 751: regValue |= 0x10;
 26983  001192  0100               	movlb	0	; () banked
 26984  001194  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 26985  001196                     l517:
 26986                           
 26987                           ;radio_driver_SX1276.c: 752: }
 26988                           ;radio_driver_SX1276.c: 753: RADIO_RegisterWrite(0x30, regValue);
 26989                           
 26990                           ; BSR set to: 0
 26991  001196  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26992  00119A  0E30               	movlw	48
 26993  00119C  EC5D  F03D         	call	_RADIO_RegisterWrite
 26994                           
 26995                           ;radio_driver_SX1276.c: 756: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 26996  0011A0  0E00               	movlw	0
 26997  0011A2  0100               	movlb	0	; () banked
 26998  0011A4  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 26999  0011A6  D010               	goto	l518
 27000  0011A8                     
 27001                           ; BSR set to: 0
 27002                           ;radio_driver_SX1276.c: 757: {
 27003                           ;radio_driver_SX1276.c: 760: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27004                           
 27005                           ; BSR set to: 0
 27006  0011A8  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27007  0011AA  0D01               	mullw	1
 27008  0011AC  0E83               	movlw	low (_RadioConfiguration+15)
 27009  0011AE  24F3               	addwf	prodl,w,c
 27010  0011B0  6ED9               	movwf	fsr2l,c
 27011  0011B2  0E01               	movlw	high (_RadioConfiguration+15)
 27012  0011B4  20F4               	addwfc	prodh,w,c
 27013  0011B6  6EDA               	movwf	fsr2h,c
 27014  0011B8  50DF               	movf	indf2,w,c
 27015  0011BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27016  0011BC  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27017  0011BE  0F28               	addlw	40
 27018  0011C0  EC5D  F03D         	call	_RADIO_RegisterWrite
 27019  0011C4  0100               	movlb	0	; () banked
 27020  0011C6  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27021  0011C8                     l518:
 27022                           
 27023                           ; BSR set to: 0
 27024                           
 27025                           ; BSR set to: 0
 27026  0011C8  0101               	movlb	1	; () banked
 27027  0011CA  518B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27028  0011CC  0100               	movlb	0	; () banked
 27029  0011CE  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27030  0011D0  A0D8               	btfss	status,0,c
 27031  0011D2  D7EA               	goto	l519
 27032                           
 27033                           ; BSR set to: 0
 27034                           ;radio_driver_SX1276.c: 761: }
 27035                           ;radio_driver_SX1276.c: 764: if (RadioConfiguration.syncWordLen != 0)
 27036                           
 27037                           ; BSR set to: 0
 27038  0011D4  0101               	movlb	1	; () banked
 27039  0011D6  518B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27040  0011D8  B4D8               	btfsc	status,2,c
 27041  0011DA  D008               	goto	l521
 27042                           
 27043                           ; BSR set to: 1
 27044                           ;radio_driver_SX1276.c: 765: {
 27045                           ;radio_driver_SX1276.c: 766: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27046  0011DC  058B               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27047  0011DE  0910               	iorlw	16
 27048  0011E0  0100               	movlb	0	; () banked
 27049  0011E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27050  0011E4  0E27               	movlw	39
 27051  0011E6  EC5D  F03D         	call	_RADIO_RegisterWrite
 27052                           
 27053                           ;radio_driver_SX1276.c: 767: }
 27054  0011EA  D006               	goto	l522
 27055  0011EC                     l521:
 27056                           
 27057                           ;radio_driver_SX1276.c: 768: else
 27058                           ;radio_driver_SX1276.c: 769: {
 27059                           ;radio_driver_SX1276.c: 770: RADIO_RegisterWrite(0x27, 0x00);
 27060  0011EC  0E00               	movlw	0
 27061  0011EE  0100               	movlb	0	; () banked
 27062  0011F0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27063  0011F2  0E27               	movlw	39
 27064  0011F4  EC5D  F03D         	call	_RADIO_RegisterWrite
 27065  0011F8                     l522:
 27066                           
 27067                           ;radio_driver_SX1276.c: 771: }
 27068                           ;radio_driver_SX1276.c: 774: RADIO_RegisterWrite(0x3E, 0xFF);
 27069  0011F8  0EFF               	movlw	255
 27070  0011FA  0100               	movlb	0	; () banked
 27071  0011FC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27072  0011FE  0E3E               	movlw	62
 27073  001200  EC5D  F03D         	call	_RADIO_RegisterWrite
 27074                           
 27075                           ;radio_driver_SX1276.c: 775: RADIO_RegisterWrite(0x3F, 0xFF);
 27076  001204  0EFF               	movlw	255
 27077  001206  0100               	movlb	0	; () banked
 27078  001208  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27079  00120A  0E3F               	movlw	63
 27080  00120C  EC5D  F03D         	call	_RADIO_RegisterWrite
 27081  001210  0012               	return	
 27082  001212                     __end_of_RADIO_WriteConfiguration:
 27083                           	opt stack 0
 27084                           tosu	equ	0xFFF
 27085                           tosh	equ	0xFFE
 27086                           tosl	equ	0xFFD
 27087                           pclath	equ	0xFFA
 27088                           tblptru	equ	0xFF8
 27089                           tblptrh	equ	0xFF7
 27090                           tblptrl	equ	0xFF6
 27091                           tablat	equ	0xFF5
 27092                           prodh	equ	0xFF4
 27093                           prodl	equ	0xFF3
 27094                           intcon	equ	0xFF2
 27095                           intcon2	equ	0xFF1
 27096                           intcon3	equ	0xFF0
 27097                           indf0	equ	0xFEF
 27098                           postinc0	equ	0xFEE
 27099                           fsr0h	equ	0xFEA
 27100                           fsr0l	equ	0xFE9
 27101                           wreg	equ	0xFE8
 27102                           postinc1	equ	0xFE6
 27103                           postdec1	equ	0xFE5
 27104                           plusw1	equ	0xFE3
 27105                           fsr1h	equ	0xFE2
 27106                           fsr1l	equ	0xFE1
 27107                           indf2	equ	0xFDF
 27108                           postinc2	equ	0xFDE
 27109                           postdec2	equ	0xFDD
 27110                           plusw2	equ	0xFDB
 27111                           fsr2h	equ	0xFDA
 27112                           fsr2l	equ	0xFD9
 27113                           status	equ	0xFD8
 27114                           
 27115 ;; *************** function _RADIO_WritePower *****************
 27116 ;; Defined at:
 27117 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27118 ;; Parameters:    Size  Location     Type
 27119 ;;  power           1    wreg     char 
 27120 ;; Auto vars:     Size  Location     Type
 27121 ;;  power           1    6[BANK0 ] char 
 27122 ;;  paDac           1    5[BANK0 ] unsigned char 
 27123 ;;  ocp             1    4[BANK0 ] unsigned char 
 27124 ;; Return value:  Size  Location     Type
 27125 ;;                  1    wreg      void 
 27126 ;; Registers used:
 27127 ;;		wreg, status,2, status,0, cstack
 27128 ;; Tracked objects:
 27129 ;;		On entry : 0/0
 27130 ;;		On exit  : 0/0
 27131 ;;		Unchanged: 0/0
 27132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27136 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27137 ;;Total ram usage:        3 bytes
 27138 ;; Hardware stack levels used:    1
 27139 ;; Hardware stack levels required when called:   10
 27140 ;; This function calls:
 27141 ;;		_RADIO_RegisterRead
 27142 ;;		_RADIO_RegisterWrite
 27143 ;; This function is called by:
 27144 ;;		_RADIO_WriteConfiguration
 27145 ;; This function uses a non-reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text133
 27149  0052AE                     __ptext133:
 27150                           	opt stack 0
 27151  0052AE                     _RADIO_WritePower:
 27152                           	opt stack 17
 27153                           
 27154                           ;incstack = 0
 27155                           ;RADIO_WritePower@power stored from wreg
 27156  0052AE  0100               	movlb	0	; () banked
 27157  0052B0  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27158                           
 27159                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27160                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27161                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27162  0052B2  0101               	movlb	1	; () banked
 27163  0052B4  5191               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27164  0052B6  A4D8               	btfss	status,2,c
 27165  0052B8  D030               	goto	l448
 27166                           
 27167                           ; BSR set to: 1
 27168                           ;radio_driver_SX1276.c: 348: {
 27169                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27170  0052BA  0100               	movlb	0	; () banked
 27171  0052BC  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27172  0052BE  0A80               	xorlw	128
 27173  0052C0  0F83               	addlw	131
 27174  0052C2  B0D8               	btfsc	status,0,c
 27175  0052C4  D002               	goto	l449
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;radio_driver_SX1276.c: 351: {
 27179                           ;radio_driver_SX1276.c: 352: power = -3;
 27180  0052C6  0EFD               	movlw	253
 27181  0052C8  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27182  0052CA                     l449:
 27183                           
 27184                           ; BSR set to: 0
 27185                           ;radio_driver_SX1276.c: 353: }
 27186                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27187                           
 27188                           ; BSR set to: 0
 27189  0052CA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27190  0052CC  0A80               	xorlw	128
 27191  0052CE  0F70               	addlw	-144
 27192  0052D0  A0D8               	btfss	status,0,c
 27193  0052D2  D002               	goto	l450
 27194                           
 27195                           ; BSR set to: 0
 27196                           ;radio_driver_SX1276.c: 355: {
 27197                           ;radio_driver_SX1276.c: 356: power = 15;
 27198  0052D4  0E0F               	movlw	15
 27199  0052D6  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27200  0052D8                     l450:
 27201                           
 27202                           ; BSR set to: 0
 27203                           ;radio_driver_SX1276.c: 357: }
 27204                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27205                           
 27206                           ; BSR set to: 0
 27207  0052D8  0E4D               	movlw	77
 27208  0052DA  EC75  F03C         	call	_RADIO_RegisterRead
 27209  0052DE  0100               	movlb	0	; () banked
 27210  0052E0  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 27211                           
 27212                           ; BSR set to: 0
 27213                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27214  0052E2  0EF8               	movlw	248
 27215  0052E4  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27216                           
 27217                           ; BSR set to: 0
 27218                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27219  0052E6  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27220                           
 27221                           ; BSR set to: 0
 27222                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27223  0052E8  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27224  0052EC  0E4D               	movlw	77
 27225  0052EE  EC5D  F03D         	call	_RADIO_RegisterWrite
 27226                           
 27227                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27228  0052F2  0100               	movlb	0	; () banked
 27229  0052F4  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 27230  0052F6  D009               	goto	l451
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;radio_driver_SX1276.c: 365: {
 27234                           ;radio_driver_SX1276.c: 369: power += 3;
 27235  0052F8  0E03               	movlw	3
 27236  0052FA  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 27237                           
 27238                           ; BSR set to: 0
 27239                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27240  0052FC  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27241  0052FE  0920               	iorlw	32
 27242  005300  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27243  005302  0E09               	movlw	9
 27244  005304  EC5D  F03D         	call	_RADIO_RegisterWrite
 27245                           
 27246                           ;radio_driver_SX1276.c: 371: }
 27247  005308  0012               	return	
 27248  00530A                     l451:
 27249                           
 27250                           ;radio_driver_SX1276.c: 372: else
 27251                           ;radio_driver_SX1276.c: 373: {
 27252                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27253  00530A  0100               	movlb	0	; () banked
 27254  00530C  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27255  00530E  0970               	iorlw	112
 27256  005310  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27257  005312  0E09               	movlw	9
 27258  005314  EC5D  F03D         	call	_RADIO_RegisterWrite
 27259                           
 27260                           ;radio_driver_SX1276.c: 378: }
 27261                           ;radio_driver_SX1276.c: 379: }
 27262  005318  0012               	return	
 27263  00531A                     l448:
 27264                           
 27265                           ;radio_driver_SX1276.c: 380: else
 27266                           ;radio_driver_SX1276.c: 381: {
 27267                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27268  00531A  0100               	movlb	0	; () banked
 27269  00531C  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27270  00531E  0A80               	xorlw	128
 27271  005320  0F7E               	addlw	-130
 27272  005322  B0D8               	btfsc	status,0,c
 27273  005324  D002               	goto	l454
 27274                           
 27275                           ; BSR set to: 0
 27276                           ;radio_driver_SX1276.c: 386: {
 27277                           ;radio_driver_SX1276.c: 387: power = 2;
 27278  005326  0E02               	movlw	2
 27279  005328  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27280  00532A                     l454:
 27281                           
 27282                           ; BSR set to: 0
 27283                           ;radio_driver_SX1276.c: 388: }
 27284                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27285                           
 27286                           ; BSR set to: 0
 27287  00532A  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27288  00532C  0A80               	xorlw	128
 27289  00532E  0F6C               	addlw	-148
 27290  005330  A0D8               	btfss	status,0,c
 27291  005332  D002               	goto	l455
 27292                           
 27293                           ; BSR set to: 0
 27294                           ;radio_driver_SX1276.c: 392: {
 27295                           ;radio_driver_SX1276.c: 393: power = 20;
 27296  005334  0E14               	movlw	20
 27297  005336  D006               	goto	L19
 27298  005338                     l455:
 27299                           
 27300                           ; BSR set to: 0
 27301                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27302                           
 27303                           ; BSR set to: 0
 27304  005338  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27305  00533A  0A80               	xorlw	128
 27306  00533C  0F6E               	addlw	-146
 27307  00533E  A0D8               	btfss	status,0,c
 27308  005340  D002               	goto	l457
 27309                           
 27310                           ; BSR set to: 0
 27311                           ;radio_driver_SX1276.c: 396: {
 27312                           ;radio_driver_SX1276.c: 397: power = 17;
 27313  005342  0E11               	movlw	17
 27314  005344                     L19:
 27315  005344  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27316  005346                     l457:
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;radio_driver_SX1276.c: 398: }
 27320                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27321                           
 27322                           ; BSR set to: 0
 27323                           
 27324                           ; BSR set to: 0
 27325  005346  0E0B               	movlw	11
 27326  005348  EC75  F03C         	call	_RADIO_RegisterRead
 27327  00534C  0100               	movlb	0	; () banked
 27328  00534E  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 27329                           
 27330                           ; BSR set to: 0
 27331                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27332  005350  0E4D               	movlw	77
 27333  005352  EC75  F03C         	call	_RADIO_RegisterRead
 27334  005356  0100               	movlb	0	; () banked
 27335  005358  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 27336                           
 27337                           ; BSR set to: 0
 27338                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27339  00535A  0EF8               	movlw	248
 27340  00535C  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27344  00535E  0E14               	movlw	20
 27345  005360  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27346  005362  A4D8               	btfss	status,2,c
 27347  005364  D006               	goto	l458
 27348                           
 27349                           ; BSR set to: 0
 27350                           ;radio_driver_SX1276.c: 404: {
 27351                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27352  005366  0E07               	movlw	7
 27353  005368  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27354                           
 27355                           ; BSR set to: 0
 27356                           ;radio_driver_SX1276.c: 406: power = 15;
 27357  00536A  0E0F               	movlw	15
 27358  00536C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 27359                           
 27360                           ; BSR set to: 0
 27361                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27362  00536E  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27363                           
 27364                           ;radio_driver_SX1276.c: 408: }
 27365  005370  D004               	goto	l459
 27366  005372                     l458:
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;radio_driver_SX1276.c: 409: else
 27370                           ;radio_driver_SX1276.c: 410: {
 27371                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27372                           
 27373                           ; BSR set to: 0
 27374  005372  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27375                           
 27376                           ; BSR set to: 0
 27377                           ;radio_driver_SX1276.c: 412: power -= 2;
 27378  005374  0EFE               	movlw	254
 27379  005376  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 27380                           
 27381                           ; BSR set to: 0
 27382                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27383  005378  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27384  00537A                     l459:
 27385                           
 27386                           ; BSR set to: 0
 27387                           ;radio_driver_SX1276.c: 414: }
 27388                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27389                           
 27390                           ; BSR set to: 0
 27391  00537A  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27392  00537E  0E4D               	movlw	77
 27393  005380  EC5D  F03D         	call	_RADIO_RegisterWrite
 27394                           
 27395                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27396  005384  0100               	movlb	0	; () banked
 27397  005386  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 27398  005388  0980               	iorlw	128
 27399  00538A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27400  00538C  0E09               	movlw	9
 27401  00538E  EC5D  F03D         	call	_RADIO_RegisterWrite
 27402                           
 27403                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27404  005392  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27405  005396  0E0B               	movlw	11
 27406  005398  EC5D  F03D         	call	_RADIO_RegisterWrite
 27407  00539C  0012               	return	
 27408  00539E                     __end_of_RADIO_WritePower:
 27409                           	opt stack 0
 27410                           tosu	equ	0xFFF
 27411                           tosh	equ	0xFFE
 27412                           tosl	equ	0xFFD
 27413                           pclath	equ	0xFFA
 27414                           tblptru	equ	0xFF8
 27415                           tblptrh	equ	0xFF7
 27416                           tblptrl	equ	0xFF6
 27417                           tablat	equ	0xFF5
 27418                           prodh	equ	0xFF4
 27419                           prodl	equ	0xFF3
 27420                           intcon	equ	0xFF2
 27421                           intcon2	equ	0xFF1
 27422                           intcon3	equ	0xFF0
 27423                           indf0	equ	0xFEF
 27424                           postinc0	equ	0xFEE
 27425                           fsr0h	equ	0xFEA
 27426                           fsr0l	equ	0xFE9
 27427                           wreg	equ	0xFE8
 27428                           postinc1	equ	0xFE6
 27429                           postdec1	equ	0xFE5
 27430                           plusw1	equ	0xFE3
 27431                           fsr1h	equ	0xFE2
 27432                           fsr1l	equ	0xFE1
 27433                           indf2	equ	0xFDF
 27434                           postinc2	equ	0xFDE
 27435                           postdec2	equ	0xFDD
 27436                           plusw2	equ	0xFDB
 27437                           fsr2h	equ	0xFDA
 27438                           fsr2l	equ	0xFD9
 27439                           status	equ	0xFD8
 27440                           
 27441 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27442 ;; Defined at:
 27443 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27444 ;; Parameters:    Size  Location     Type
 27445 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 27446 ;; Auto vars:     Size  Location     Type
 27447 ;;  num             4   17[BANK0 ] unsigned long 
 27448 ;; Return value:  Size  Location     Type
 27449 ;;                  1    wreg      void 
 27450 ;; Registers used:
 27451 ;;		wreg, status,2, status,0, cstack
 27452 ;; Tracked objects:
 27453 ;;		On entry : 0/0
 27454 ;;		On exit  : 0/0
 27455 ;;		Unchanged: 0/0
 27456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27460 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27461 ;;Total ram usage:        8 bytes
 27462 ;; Hardware stack levels used:    1
 27463 ;; Hardware stack levels required when called:   10
 27464 ;; This function calls:
 27465 ;;		_RADIO_RegisterWrite
 27466 ;;		___lldiv
 27467 ;; This function is called by:
 27468 ;;		_RADIO_WriteConfiguration
 27469 ;; This function uses a non-reentrant model
 27470 ;;
 27471                           
 27472                           	psect	text134
 27473  006958                     __ptext134:
 27474                           	opt stack 0
 27475  006958                     _RADIO_WriteFSKFrequencyDeviation:
 27476                           	opt stack 17
 27477                           
 27478                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27479                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27480                           
 27481                           ;incstack = 0
 27482  006958  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27483  00695C  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27484  006960  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27485  006964  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27486                           
 27487                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27488  006968  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27489  00696C  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27490  006970  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27491  006974  0100               	movlb	0	; () banked
 27492  006976  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27493                           
 27494                           ; BSR set to: 0
 27495                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27496  006978  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27497  00697C  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27498  006980  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27499  006984  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27500  006988  0E09               	movlw	9
 27501  00698A  6F64               	movwf	___lldiv@divisor& (0+255),b
 27502  00698C  0E3D               	movlw	61
 27503  00698E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27504  006990  0E00               	movlw	0
 27505  006992  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27506  006994  0E00               	movlw	0
 27507  006996  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27508  006998  EC93  F032         	call	___lldiv	;wreg free
 27509  00699C  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27510  0069A0  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27511  0069A4  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27512  0069A8  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27513                           
 27514                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27515  0069AC  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27516  0069B0  0E04               	movlw	4
 27517  0069B2  EC5D  F03D         	call	_RADIO_RegisterWrite
 27518                           
 27519                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27520  0069B6  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27521  0069BA  0E05               	movlw	5
 27522  0069BC  EC5D  F03D         	call	_RADIO_RegisterWrite
 27523  0069C0  0012               	return		;funcret
 27524  0069C2                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27525                           	opt stack 0
 27526                           tosu	equ	0xFFF
 27527                           tosh	equ	0xFFE
 27528                           tosl	equ	0xFFD
 27529                           pclath	equ	0xFFA
 27530                           tblptru	equ	0xFF8
 27531                           tblptrh	equ	0xFF7
 27532                           tblptrl	equ	0xFF6
 27533                           tablat	equ	0xFF5
 27534                           prodh	equ	0xFF4
 27535                           prodl	equ	0xFF3
 27536                           intcon	equ	0xFF2
 27537                           intcon2	equ	0xFF1
 27538                           intcon3	equ	0xFF0
 27539                           indf0	equ	0xFEF
 27540                           postinc0	equ	0xFEE
 27541                           fsr0h	equ	0xFEA
 27542                           fsr0l	equ	0xFE9
 27543                           wreg	equ	0xFE8
 27544                           postinc1	equ	0xFE6
 27545                           postdec1	equ	0xFE5
 27546                           plusw1	equ	0xFE3
 27547                           fsr1h	equ	0xFE2
 27548                           fsr1l	equ	0xFE1
 27549                           indf2	equ	0xFDF
 27550                           postinc2	equ	0xFDE
 27551                           postdec2	equ	0xFDD
 27552                           plusw2	equ	0xFDB
 27553                           fsr2h	equ	0xFDA
 27554                           fsr2l	equ	0xFD9
 27555                           status	equ	0xFD8
 27556                           
 27557 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27558 ;; Defined at:
 27559 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27560 ;; Parameters:    Size  Location     Type
 27561 ;;  bitRate         4   13[BANK0 ] unsigned long 
 27562 ;; Auto vars:     Size  Location     Type
 27563 ;;  num             4   17[BANK0 ] unsigned long 
 27564 ;; Return value:  Size  Location     Type
 27565 ;;                  1    wreg      void 
 27566 ;; Registers used:
 27567 ;;		wreg, status,2, status,0, cstack
 27568 ;; Tracked objects:
 27569 ;;		On entry : 0/0
 27570 ;;		On exit  : 0/0
 27571 ;;		Unchanged: 0/0
 27572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27574 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27576 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27577 ;;Total ram usage:        8 bytes
 27578 ;; Hardware stack levels used:    1
 27579 ;; Hardware stack levels required when called:   10
 27580 ;; This function calls:
 27581 ;;		_RADIO_RegisterWrite
 27582 ;;		___lldiv
 27583 ;; This function is called by:
 27584 ;;		_RADIO_WriteConfiguration
 27585 ;; This function uses a non-reentrant model
 27586 ;;
 27587                           
 27588                           	psect	text135
 27589  0069C2                     __ptext135:
 27590                           	opt stack 0
 27591  0069C2                     _RADIO_WriteFSKBitRate:
 27592                           	opt stack 17
 27593                           
 27594                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27595                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27596                           
 27597                           ;incstack = 0
 27598  0069C2  0E00               	movlw	0
 27599  0069C4  0100               	movlb	0	; () banked
 27600  0069C6  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 27601  0069C8  0E48               	movlw	72
 27602  0069CA  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27603  0069CC  0EE8               	movlw	232
 27604  0069CE  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27605  0069D0  0E01               	movlw	1
 27606  0069D2  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27607                           
 27608                           ; BSR set to: 0
 27609                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27610  0069D4  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27611  0069D8  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27612  0069DC  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27613  0069E0  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27614  0069E4  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27615  0069E8  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27616  0069EC  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27617  0069F0  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27618  0069F4  EC93  F032         	call	___lldiv	;wreg free
 27619  0069F8  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27620  0069FC  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27621  006A00  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27622  006A04  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27623                           
 27624                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27625  006A08  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27626  006A0C  0E02               	movlw	2
 27627  006A0E  EC5D  F03D         	call	_RADIO_RegisterWrite
 27628                           
 27629                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27630  006A12  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27631  006A16  0E03               	movlw	3
 27632  006A18  EC5D  F03D         	call	_RADIO_RegisterWrite
 27633                           
 27634                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27635  006A1C  0E00               	movlw	0
 27636  006A1E  0100               	movlb	0	; () banked
 27637  006A20  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27638  006A22  0E5D               	movlw	93
 27639  006A24  EC5D  F03D         	call	_RADIO_RegisterWrite
 27640  006A28  0012               	return		;funcret
 27641  006A2A                     __end_of_RADIO_WriteFSKBitRate:
 27642                           	opt stack 0
 27643                           tosu	equ	0xFFF
 27644                           tosh	equ	0xFFE
 27645                           tosl	equ	0xFFD
 27646                           pclath	equ	0xFFA
 27647                           tblptru	equ	0xFF8
 27648                           tblptrh	equ	0xFF7
 27649                           tblptrl	equ	0xFF6
 27650                           tablat	equ	0xFF5
 27651                           prodh	equ	0xFF4
 27652                           prodl	equ	0xFF3
 27653                           intcon	equ	0xFF2
 27654                           intcon2	equ	0xFF1
 27655                           intcon3	equ	0xFF0
 27656                           indf0	equ	0xFEF
 27657                           postinc0	equ	0xFEE
 27658                           fsr0h	equ	0xFEA
 27659                           fsr0l	equ	0xFE9
 27660                           wreg	equ	0xFE8
 27661                           postinc1	equ	0xFE6
 27662                           postdec1	equ	0xFE5
 27663                           plusw1	equ	0xFE3
 27664                           fsr1h	equ	0xFE2
 27665                           fsr1l	equ	0xFE1
 27666                           indf2	equ	0xFDF
 27667                           postinc2	equ	0xFDE
 27668                           postdec2	equ	0xFDD
 27669                           plusw2	equ	0xFDB
 27670                           fsr2h	equ	0xFDA
 27671                           fsr2l	equ	0xFD9
 27672                           status	equ	0xFD8
 27673                           
 27674 ;; *************** function _PrepareJoinRequestFrame *****************
 27675 ;; Defined at:
 27676 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27677 ;; Parameters:    Size  Location     Type
 27678 ;;		None
 27679 ;; Auto vars:     Size  Location     Type
 27680 ;;  mic             4  116[BANK0 ] unsigned long 
 27681 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27682 ;;  iCtr            1  121[BANK0 ] unsigned char 
 27683 ;;  mhdr            1  120[BANK0 ] struct .
 27684 ;; Return value:  Size  Location     Type
 27685 ;;                  1    wreg      unsigned char 
 27686 ;; Registers used:
 27687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27688 ;; Tracked objects:
 27689 ;;		On entry : 0/0
 27690 ;;		On exit  : 0/0
 27691 ;;		Unchanged: 0/0
 27692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27694 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27696 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27697 ;;Total ram usage:       11 bytes
 27698 ;; Hardware stack levels used:    1
 27699 ;; Hardware stack levels required when called:   13
 27700 ;; This function calls:
 27701 ;;		_ComputeMic
 27702 ;;		_Random
 27703 ;;		_memcpy
 27704 ;;		_memset
 27705 ;; This function is called by:
 27706 ;;		_LORAWAN_Join
 27707 ;; This function uses a non-reentrant model
 27708 ;;
 27709                           
 27710                           	psect	text136
 27711  003C54                     __ptext136:
 27712                           	opt stack 0
 27713  003C54                     _PrepareJoinRequestFrame:
 27714                           	opt stack 16
 27715                           
 27716                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27717                           
 27718                           ;incstack = 0
 27719  003C54  0E00               	movlw	0
 27720  003C56  0100               	movlb	0	; () banked
 27721  003C58  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27722                           
 27723                           ; BSR set to: 0
 27724                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27725                           ;lorawan.c: 1810: uint32_t mic;
 27726                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27727  003C5A  0E90               	movlw	low _macBuffer
 27728  003C5C  6F60               	movwf	memset@p1& (0+255),b
 27729  003C5E  0E04               	movlw	high _macBuffer
 27730  003C60  6F61               	movwf	(memset@p1+1)& (0+255),b
 27731  003C62  0E00               	movlw	0
 27732  003C64  6F63               	movwf	(memset@c+1)& (0+255),b
 27733  003C66  0E00               	movlw	0
 27734  003C68  6F62               	movwf	memset@c& (0+255),b
 27735  003C6A  0E01               	movlw	1
 27736  003C6C  6F65               	movwf	(memset@n+1)& (0+255),b
 27737  003C6E  0E0F               	movlw	15
 27738  003C70  6F64               	movwf	memset@n& (0+255),b
 27739  003C72  EC9D  F03B         	call	_memset	;wreg free
 27740                           
 27741                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27742  003C76  0100               	movlb	0	; () banked
 27743  003C78  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 27744  003C7A  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 27745  003C7C  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 27746                           
 27747                           ; BSR set to: 0
 27748                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27749  003C7E  0EFC               	movlw	-4
 27750  003C80  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27751                           
 27752                           ; BSR set to: 0
 27753                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27754  003C82  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 27755  003C84  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 27756  003C86  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 27757                           
 27758                           ; BSR set to: 0
 27759                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27760  003C88  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27761  003C8A  0D01               	mullw	1
 27762  003C8C  0E90               	movlw	low _macBuffer
 27763  003C8E  24F3               	addwf	prodl,w,c
 27764  003C90  6ED9               	movwf	fsr2l,c
 27765  003C92  0E04               	movlw	high _macBuffer
 27766  003C94  20F4               	addwfc	prodh,w,c
 27767  003C96  6EDA               	movwf	fsr2h,c
 27768  003C98  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27769                           
 27770                           ; BSR set to: 0
 27771  003C9C  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27772                           
 27773                           ; BSR set to: 0
 27774                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27775  003C9E  0E00               	movlw	0
 27776  003CA0  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27777  003CA2                     l11480:
 27778                           
 27779                           ; BSR set to: 0
 27780  003CA2  0E07               	movlw	7
 27781  003CA4  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27782  003CA6  D001               	goto	l2040
 27783  003CA8  D022               	goto	u12170
 27784  003CAA                     l2040:
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;lorawan.c: 1821: {
 27788                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27789                           
 27790                           ; BSR set to: 0
 27791  003CAA  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27792  003CAC  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27793  003CAE  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27794  003CB0  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 27795  003CB2  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27796  003CB4  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 27797  003CB6  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27798  003CB8  0E07               	movlw	7
 27799  003CBA  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27800  003CBC  0E00               	movlw	0
 27801  003CBE  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27802  003CC0  0E52               	movlw	low (_loRa+82)
 27803  003CC2  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27804  003CC4  6ED9               	movwf	fsr2l,c
 27805  003CC6  0E02               	movlw	high (_loRa+82)
 27806  003CC8  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27807  003CCA  6EDA               	movwf	fsr2h,c
 27808  003CCC  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27809  003CCE  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 27810  003CD2  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 27811  003CD4  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 27812  003CD6  0E00               	movlw	0
 27813  003CD8  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 27814  003CDA  0E90               	movlw	low _macBuffer
 27815  003CDC  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 27816  003CDE  6EE9               	movwf	fsr0l,c
 27817  003CE0  0E04               	movlw	high _macBuffer
 27818  003CE2  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 27819  003CE4  6EEA               	movwf	fsr0h,c
 27820  003CE6  CFDF FFEF          	movff	indf2,indf0
 27821                           
 27822                           ; BSR set to: 0
 27823  003CEA  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27824  003CEC  D7DA               	goto	l11480
 27825  003CEE                     u12170:
 27826                           
 27827                           ; BSR set to: 0
 27828                           ;lorawan.c: 1823: }
 27829                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27830                           
 27831                           ; BSR set to: 0
 27832  003CEE  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27833  003CF0  0F08               	addlw	8
 27834  003CF2  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27838  003CF4  0E00               	movlw	0
 27839  003CF6  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27840  003CF8                     l11494:
 27841                           
 27842                           ; BSR set to: 0
 27843  003CF8  0E07               	movlw	7
 27844  003CFA  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27845  003CFC  D001               	goto	l2042
 27846  003CFE  D022               	goto	u12190
 27847  003D00                     l2042:
 27848                           
 27849                           ; BSR set to: 0
 27850                           ;lorawan.c: 1828: {
 27851                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27852                           
 27853                           ; BSR set to: 0
 27854  003D00  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27855  003D02  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27856  003D04  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27857  003D06  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 27858  003D08  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27859  003D0A  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 27860  003D0C  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27861  003D0E  0E07               	movlw	7
 27862  003D10  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27863  003D12  0E00               	movlw	0
 27864  003D14  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27865  003D16  0E5A               	movlw	low (_loRa+90)
 27866  003D18  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27867  003D1A  6ED9               	movwf	fsr2l,c
 27868  003D1C  0E02               	movlw	high (_loRa+90)
 27869  003D1E  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27870  003D20  6EDA               	movwf	fsr2h,c
 27871  003D22  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27872  003D24  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 27873  003D28  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 27874  003D2A  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 27875  003D2C  0E00               	movlw	0
 27876  003D2E  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 27877  003D30  0E90               	movlw	low _macBuffer
 27878  003D32  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 27879  003D34  6EE9               	movwf	fsr0l,c
 27880  003D36  0E04               	movlw	high _macBuffer
 27881  003D38  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 27882  003D3A  6EEA               	movwf	fsr0h,c
 27883  003D3C  CFDF FFEF          	movff	indf2,indf0
 27884                           
 27885                           ; BSR set to: 0
 27886  003D40  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27887  003D42  D7DA               	goto	l11494
 27888  003D44                     u12190:
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;lorawan.c: 1830: }
 27892                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27893                           
 27894                           ; BSR set to: 0
 27895  003D44  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27896  003D46  0F08               	addlw	8
 27897  003D48  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27898                           
 27899                           ; BSR set to: 0
 27900                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27901  003D4A  0EFF               	movlw	255
 27902  003D4C  6FAE               	movwf	(Random@max+1)& (0+255),b
 27903  003D4E  69AD               	setf	Random@max& (0+255),b
 27904  003D50  EC2B  F03D         	call	_Random	;wreg free
 27905  003D54  C0AD  F2C3         	movff	?_Random,_loRa+195
 27906  003D58  C0AE  F2C4         	movff	?_Random+1,_loRa+196
 27907                           
 27908                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27909  003D5C  0100               	movlb	0	; () banked
 27910  003D5E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27911  003D60  0D01               	mullw	1
 27912  003D62  0E90               	movlw	low _macBuffer
 27913  003D64  24F3               	addwf	prodl,w,c
 27914  003D66  6F60               	movwf	memcpy@d1& (0+255),b
 27915  003D68  0E04               	movlw	high _macBuffer
 27916  003D6A  20F4               	addwfc	prodh,w,c
 27917  003D6C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27918  003D6E  0EC3               	movlw	low (_loRa+195)
 27919  003D70  6F62               	movwf	memcpy@s1& (0+255),b
 27920  003D72  0E02               	movlw	high (_loRa+195)
 27921  003D74  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27922  003D76  0E00               	movlw	0
 27923  003D78  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27924  003D7A  0E02               	movlw	2
 27925  003D7C  6F64               	movwf	memcpy@n& (0+255),b
 27926  003D7E  EC3E  F036         	call	_memcpy	;wreg free
 27927                           
 27928                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 27929  003D82  0100               	movlb	0	; () banked
 27930  003D84  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27931  003D86  0F02               	addlw	2
 27932  003D88  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 27936  003D8A  0E42               	movlw	low (_loRa+66)
 27937  003D8C  6FC7               	movwf	ComputeMic@key& (0+255),b
 27938  003D8E  0E02               	movlw	high (_loRa+66)
 27939  003D90  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 27940  003D92  0E90               	movlw	low _macBuffer
 27941  003D94  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 27942  003D96  0E04               	movlw	high _macBuffer
 27943  003D98  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 27944  003D9A  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 27945  003D9E  EC7C  F035         	call	_ComputeMic	;wreg free
 27946  003DA2  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 27947  003DA6  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 27948  003DAA  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 27949  003DAE  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 27950                           
 27951                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 27952  003DB2  0100               	movlb	0	; () banked
 27953  003DB4  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27954  003DB6  0D01               	mullw	1
 27955  003DB8  0E90               	movlw	low _macBuffer
 27956  003DBA  24F3               	addwf	prodl,w,c
 27957  003DBC  6F60               	movwf	memcpy@d1& (0+255),b
 27958  003DBE  0E04               	movlw	high _macBuffer
 27959  003DC0  20F4               	addwfc	prodh,w,c
 27960  003DC2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27961  003DC4  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 27962  003DC6  6F62               	movwf	memcpy@s1& (0+255),b
 27963  003DC8  0E00               	movlw	high PrepareJoinRequestFrame@mic
 27964  003DCA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27965  003DCC  0E00               	movlw	0
 27966  003DCE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27967  003DD0  0E04               	movlw	4
 27968  003DD2  6F64               	movwf	memcpy@n& (0+255),b
 27969  003DD4  EC3E  F036         	call	_memcpy	;wreg free
 27970                           
 27971                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 27972  003DD8  0100               	movlb	0	; () banked
 27973  003DDA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27974  003DDC  0F04               	addlw	4
 27975  003DDE  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27976                           
 27977                           ; BSR set to: 0
 27978                           ;lorawan.c: 1842: return bufferIndex;
 27979  003DE0  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27980  003DE2  0012               	return	
 27981  003DE4                     __end_of_PrepareJoinRequestFrame:
 27982                           	opt stack 0
 27983                           tosu	equ	0xFFF
 27984                           tosh	equ	0xFFE
 27985                           tosl	equ	0xFFD
 27986                           pclath	equ	0xFFA
 27987                           tblptru	equ	0xFF8
 27988                           tblptrh	equ	0xFF7
 27989                           tblptrl	equ	0xFF6
 27990                           tablat	equ	0xFF5
 27991                           prodh	equ	0xFF4
 27992                           prodl	equ	0xFF3
 27993                           intcon	equ	0xFF2
 27994                           intcon2	equ	0xFF1
 27995                           intcon3	equ	0xFF0
 27996                           indf0	equ	0xFEF
 27997                           postinc0	equ	0xFEE
 27998                           fsr0h	equ	0xFEA
 27999                           fsr0l	equ	0xFE9
 28000                           wreg	equ	0xFE8
 28001                           postinc1	equ	0xFE6
 28002                           postdec1	equ	0xFE5
 28003                           plusw1	equ	0xFE3
 28004                           fsr1h	equ	0xFE2
 28005                           fsr1l	equ	0xFE1
 28006                           indf2	equ	0xFDF
 28007                           postinc2	equ	0xFDE
 28008                           postdec2	equ	0xFDD
 28009                           plusw2	equ	0xFDB
 28010                           fsr2h	equ	0xFDA
 28011                           fsr2l	equ	0xFD9
 28012                           status	equ	0xFD8
 28013                           
 28014 ;; *************** function _Random *****************
 28015 ;; Defined at:
 28016 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28017 ;; Parameters:    Size  Location     Type
 28018 ;;  max             2   77[BANK0 ] unsigned int 
 28019 ;; Auto vars:     Size  Location     Type
 28020 ;;		None
 28021 ;; Return value:  Size  Location     Type
 28022 ;;                  2   77[BANK0 ] unsigned int 
 28023 ;; Registers used:
 28024 ;;		wreg, status,2, status,0, cstack
 28025 ;; Tracked objects:
 28026 ;;		On entry : 0/0
 28027 ;;		On exit  : 0/0
 28028 ;;		Unchanged: 0/0
 28029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28034 ;;Total ram usage:        2 bytes
 28035 ;; Hardware stack levels used:    1
 28036 ;; Hardware stack levels required when called:    9
 28037 ;; This function calls:
 28038 ;;		___lwmod
 28039 ;;		_rand
 28040 ;; This function is called by:
 28041 ;;		_SearchAvailableChannel
 28042 ;;		_PrepareJoinRequestFrame
 28043 ;; This function uses a non-reentrant model
 28044 ;;
 28045                           
 28046                           	psect	text137
 28047  007A56                     __ptext137:
 28048                           	opt stack 0
 28049  007A56                     _Random:
 28050                           	opt stack 18
 28051                           
 28052                           ;lorawan.c: 1118: return (rand () % max);
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;incstack = 0
 28056  007A56  ECFA  F036         	call	_rand	;wreg free
 28057  007A5A  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 28058  007A5E  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 28059  007A62  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 28060  007A66  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 28061  007A6A  EC59  F039         	call	___lwmod	;wreg free
 28062  007A6E  C0A8  F0AD         	movff	?___lwmod,?_Random
 28063  007A72  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 28064  007A76  0012               	return	
 28065  007A78                     __end_of_Random:
 28066                           	opt stack 0
 28067                           tosu	equ	0xFFF
 28068                           tosh	equ	0xFFE
 28069                           tosl	equ	0xFFD
 28070                           pclath	equ	0xFFA
 28071                           tblptru	equ	0xFF8
 28072                           tblptrh	equ	0xFF7
 28073                           tblptrl	equ	0xFF6
 28074                           tablat	equ	0xFF5
 28075                           prodh	equ	0xFF4
 28076                           prodl	equ	0xFF3
 28077                           intcon	equ	0xFF2
 28078                           intcon2	equ	0xFF1
 28079                           intcon3	equ	0xFF0
 28080                           indf0	equ	0xFEF
 28081                           postinc0	equ	0xFEE
 28082                           fsr0h	equ	0xFEA
 28083                           fsr0l	equ	0xFE9
 28084                           wreg	equ	0xFE8
 28085                           postinc1	equ	0xFE6
 28086                           postdec1	equ	0xFE5
 28087                           plusw1	equ	0xFE3
 28088                           fsr1h	equ	0xFE2
 28089                           fsr1l	equ	0xFE1
 28090                           indf2	equ	0xFDF
 28091                           postinc2	equ	0xFDE
 28092                           postdec2	equ	0xFDD
 28093                           plusw2	equ	0xFDB
 28094                           fsr2h	equ	0xFDA
 28095                           fsr2l	equ	0xFD9
 28096                           status	equ	0xFD8
 28097                           
 28098 ;; *************** function _rand *****************
 28099 ;; Defined at:
 28100 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 28101 ;; Parameters:    Size  Location     Type
 28102 ;;		None
 28103 ;; Auto vars:     Size  Location     Type
 28104 ;;		None
 28105 ;; Return value:  Size  Location     Type
 28106 ;;                  2   70[BANK0 ] int 
 28107 ;; Registers used:
 28108 ;;		wreg, status,2, status,0, cstack
 28109 ;; Tracked objects:
 28110 ;;		On entry : 0/0
 28111 ;;		On exit  : 0/0
 28112 ;;		Unchanged: 0/0
 28113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;Total ram usage:        2 bytes
 28119 ;; Hardware stack levels used:    1
 28120 ;; Hardware stack levels required when called:    8
 28121 ;; This function calls:
 28122 ;;		___lmul
 28123 ;; This function is called by:
 28124 ;;		_Random
 28125 ;; This function uses a non-reentrant model
 28126 ;;
 28127                           
 28128                           	psect	text138
 28129  006DF4                     __ptext138:
 28130                           	opt stack 0
 28131  006DF4                     _rand:
 28132                           	opt stack 18
 28133                           
 28134                           ;incstack = 0
 28135  006DF4  C1CA  F09A         	movff	_randx,___lmul@multiplier
 28136  006DF8  C1CB  F09B         	movff	_randx+1,___lmul@multiplier+1
 28137  006DFC  C1CC  F09C         	movff	_randx+2,___lmul@multiplier+2
 28138  006E00  C1CD  F09D         	movff	_randx+3,___lmul@multiplier+3
 28139  006E04  0E6D               	movlw	109
 28140  006E06  0100               	movlb	0	; () banked
 28141  006E08  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28142  006E0A  0E4E               	movlw	78
 28143  006E0C  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28144  006E0E  0EC6               	movlw	198
 28145  006E10  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28146  006E12  0E41               	movlw	65
 28147  006E14  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28148  006E16  EC55  F037         	call	___lmul	;wreg free
 28149  006E1A  C09A  F1CA         	movff	?___lmul,_randx
 28150  006E1E  C09B  F1CB         	movff	?___lmul+1,_randx+1
 28151  006E22  C09C  F1CC         	movff	?___lmul+2,_randx+2
 28152  006E26  C09D  F1CD         	movff	?___lmul+3,_randx+3
 28153  006E2A  0E39               	movlw	57
 28154  006E2C  0101               	movlb	1	; () banked
 28155  006E2E  27CA               	addwf	_randx& (0+255),f,b
 28156  006E30  0E30               	movlw	48
 28157  006E32  23CB               	addwfc	(_randx+1)& (0+255),f,b
 28158  006E34  0E00               	movlw	0
 28159  006E36  23CC               	addwfc	(_randx+2)& (0+255),f,b
 28160  006E38  0E00               	movlw	0
 28161  006E3A  23CD               	addwfc	(_randx+3)& (0+255),f,b
 28162                           
 28163                           ; BSR set to: 1
 28164  006E3C  0EFF               	movlw	255
 28165  006E3E  15CC               	andwf	(_randx+2)& (0+255),w,b
 28166  006E40  0100               	movlb	0	; () banked
 28167  006E42  6FA6               	movwf	?_rand& (0+255),b
 28168  006E44  0E7F               	movlw	127
 28169  006E46  0101               	movlb	1	; () banked
 28170  006E48  15CD               	andwf	(_randx+3)& (0+255),w,b
 28171  006E4A  0100               	movlb	0	; () banked
 28172  006E4C  6FA7               	movwf	(?_rand+1)& (0+255),b
 28173  006E4E  0012               	return	
 28174  006E50                     __end_of_rand:
 28175                           	opt stack 0
 28176                           tosu	equ	0xFFF
 28177                           tosh	equ	0xFFE
 28178                           tosl	equ	0xFFD
 28179                           pclath	equ	0xFFA
 28180                           tblptru	equ	0xFF8
 28181                           tblptrh	equ	0xFF7
 28182                           tblptrl	equ	0xFF6
 28183                           tablat	equ	0xFF5
 28184                           prodh	equ	0xFF4
 28185                           prodl	equ	0xFF3
 28186                           intcon	equ	0xFF2
 28187                           intcon2	equ	0xFF1
 28188                           intcon3	equ	0xFF0
 28189                           indf0	equ	0xFEF
 28190                           postinc0	equ	0xFEE
 28191                           fsr0h	equ	0xFEA
 28192                           fsr0l	equ	0xFE9
 28193                           wreg	equ	0xFE8
 28194                           postinc1	equ	0xFE6
 28195                           postdec1	equ	0xFE5
 28196                           plusw1	equ	0xFE3
 28197                           fsr1h	equ	0xFE2
 28198                           fsr1l	equ	0xFE1
 28199                           indf2	equ	0xFDF
 28200                           postinc2	equ	0xFDE
 28201                           postdec2	equ	0xFDD
 28202                           plusw2	equ	0xFDB
 28203                           fsr2h	equ	0xFDA
 28204                           fsr2l	equ	0xFD9
 28205                           status	equ	0xFD8
 28206                           
 28207 ;; *************** function ___lwmod *****************
 28208 ;; Defined at:
 28209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 28210 ;; Parameters:    Size  Location     Type
 28211 ;;  dividend        2   72[BANK0 ] unsigned int 
 28212 ;;  divisor         2   74[BANK0 ] unsigned int 
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;  counter         1   76[BANK0 ] unsigned char 
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  2   72[BANK0 ] unsigned int 
 28217 ;; Registers used:
 28218 ;;		wreg, status,2, status,0
 28219 ;; Tracked objects:
 28220 ;;		On entry : 0/0
 28221 ;;		On exit  : 0/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;Total ram usage:        5 bytes
 28229 ;; Hardware stack levels used:    1
 28230 ;; Hardware stack levels required when called:    7
 28231 ;; This function calls:
 28232 ;;		Nothing
 28233 ;; This function is called by:
 28234 ;;		_Random
 28235 ;; This function uses a non-reentrant model
 28236 ;;
 28237                           
 28238                           	psect	text139
 28239  0072B2                     __ptext139:
 28240                           	opt stack 0
 28241  0072B2                     ___lwmod:
 28242                           	opt stack 19
 28243                           
 28244                           ; BSR set to: 0
 28245                           ;incstack = 0
 28246  0072B2  0100               	movlb	0	; () banked
 28247  0072B4  51AA               	movf	___lwmod@divisor& (0+255),w,b
 28248  0072B6  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28249  0072B8  B4D8               	btfsc	status,2,c
 28250  0072BA  D018               	goto	l2915
 28251                           
 28252                           ; BSR set to: 0
 28253  0072BC  0E01               	movlw	1
 28254  0072BE  6FAC               	movwf	___lwmod@counter& (0+255),b
 28255  0072C0  D004               	goto	l2910
 28256  0072C2                     
 28257                           ; BSR set to: 0
 28258                           
 28259                           ; BSR set to: 0
 28260  0072C2  90D8               	bcf	status,0,c
 28261  0072C4  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 28262  0072C6  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28263  0072C8  2BAC               	incf	___lwmod@counter& (0+255),f,b
 28264  0072CA                     l2910:
 28265                           
 28266                           ; BSR set to: 0
 28267                           
 28268                           ; BSR set to: 0
 28269  0072CA  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28270  0072CC  D7FA               	goto	l2911
 28271  0072CE                     u7360:
 28272                           
 28273                           ; BSR set to: 0
 28274                           
 28275                           ; BSR set to: 0
 28276                           
 28277                           ; BSR set to: 0
 28278  0072CE  51AA               	movf	___lwmod@divisor& (0+255),w,b
 28279  0072D0  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 28280  0072D2  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28281  0072D4  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28282  0072D6  A0D8               	btfss	status,0,c
 28283  0072D8  D004               	goto	l2914
 28284                           
 28285                           ; BSR set to: 0
 28286  0072DA  51AA               	movf	___lwmod@divisor& (0+255),w,b
 28287  0072DC  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 28288  0072DE  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28289  0072E0  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28290  0072E2                     l2914:
 28291                           
 28292                           ; BSR set to: 0
 28293                           
 28294                           ; BSR set to: 0
 28295  0072E2  90D8               	bcf	status,0,c
 28296  0072E4  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28297  0072E6  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 28298                           
 28299                           ; BSR set to: 0
 28300  0072E8  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 28301  0072EA  D7F1               	goto	u7360
 28302  0072EC                     l2915:
 28303                           
 28304                           ; BSR set to: 0
 28305                           
 28306                           ; BSR set to: 0
 28307  0072EC  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 28308  0072F0  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 28309                           
 28310                           ; BSR set to: 0
 28311  0072F4  0012               	return		;funcret
 28312  0072F6                     __end_of___lwmod:
 28313                           	opt stack 0
 28314                           tosu	equ	0xFFF
 28315                           tosh	equ	0xFFE
 28316                           tosl	equ	0xFFD
 28317                           pclath	equ	0xFFA
 28318                           tblptru	equ	0xFF8
 28319                           tblptrh	equ	0xFF7
 28320                           tblptrl	equ	0xFF6
 28321                           tablat	equ	0xFF5
 28322                           prodh	equ	0xFF4
 28323                           prodl	equ	0xFF3
 28324                           intcon	equ	0xFF2
 28325                           intcon2	equ	0xFF1
 28326                           intcon3	equ	0xFF0
 28327                           indf0	equ	0xFEF
 28328                           postinc0	equ	0xFEE
 28329                           fsr0h	equ	0xFEA
 28330                           fsr0l	equ	0xFE9
 28331                           wreg	equ	0xFE8
 28332                           postinc1	equ	0xFE6
 28333                           postdec1	equ	0xFE5
 28334                           plusw1	equ	0xFE3
 28335                           fsr1h	equ	0xFE2
 28336                           fsr1l	equ	0xFE1
 28337                           indf2	equ	0xFDF
 28338                           postinc2	equ	0xFDE
 28339                           postdec2	equ	0xFDD
 28340                           plusw2	equ	0xFDB
 28341                           fsr2h	equ	0xFDA
 28342                           fsr2l	equ	0xFD9
 28343                           status	equ	0xFD8
 28344                           
 28345 ;; *************** function _ComputeMic *****************
 28346 ;; Defined at:
 28347 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28348 ;; Parameters:    Size  Location     Type
 28349 ;;  key             2  103[BANK0 ] PTR unsigned char 
 28350 ;;		 -> loRa.activationParameters(105), loRa(231), 
 28351 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 28352 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28353 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 28354 ;; Auto vars:     Size  Location     Type
 28355 ;;  mic             4  108[BANK0 ] unsigned long 
 28356 ;; Return value:  Size  Location     Type
 28357 ;;                  4  103[BANK0 ] unsigned long 
 28358 ;; Registers used:
 28359 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28360 ;; Tracked objects:
 28361 ;;		On entry : 0/0
 28362 ;;		On exit  : 0/0
 28363 ;;		Unchanged: 0/0
 28364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28365 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28366 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28368 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28369 ;;Total ram usage:        9 bytes
 28370 ;; Hardware stack levels used:    1
 28371 ;; Hardware stack levels required when called:   12
 28372 ;; This function calls:
 28373 ;;		_AESCmac
 28374 ;;		_memcpy
 28375 ;; This function is called by:
 28376 ;;		_LORAWAN_RxDone
 28377 ;;		_PrepareJoinRequestFrame
 28378 ;; This function uses a non-reentrant model
 28379 ;;
 28380                           
 28381                           	psect	text140
 28382  006AF8                     __ptext140:
 28383                           	opt stack 0
 28384  006AF8                     _ComputeMic:
 28385                           	opt stack 14
 28386                           
 28387                           ;lorawan.c: 2196: uint32_t mic = 0;
 28388                           
 28389                           ; BSR set to: 0
 28390                           ;incstack = 0
 28391  006AF8  0E00               	movlw	0
 28392  006AFA  0100               	movlb	0	; () banked
 28393  006AFC  6FCC               	movwf	ComputeMic@mic& (0+255),b
 28394  006AFE  0E00               	movlw	0
 28395  006B00  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 28396  006B02  0E00               	movlw	0
 28397  006B04  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 28398  006B06  0E00               	movlw	0
 28399  006B08  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 28400                           
 28401                           ; BSR set to: 0
 28402                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28403  006B0A  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 28404  006B0E  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 28405  006B12  0EAA               	movlw	low _aesBuffer
 28406  006B14  6FBB               	movwf	AESCmac@output& (0+255),b
 28407  006B16  0E01               	movlw	high _aesBuffer
 28408  006B18  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 28409  006B1A  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 28410  006B1E  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28411  006B22  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 28412  006B26  EC6C  F00F         	call	_AESCmac	;wreg free
 28413                           
 28414                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28415  006B2A  0ECC               	movlw	low ComputeMic@mic
 28416  006B2C  0100               	movlb	0	; () banked
 28417  006B2E  6F60               	movwf	memcpy@d1& (0+255),b
 28418  006B30  0E00               	movlw	high ComputeMic@mic
 28419  006B32  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28420  006B34  0EAA               	movlw	low _aesBuffer
 28421  006B36  6F62               	movwf	memcpy@s1& (0+255),b
 28422  006B38  0E01               	movlw	high _aesBuffer
 28423  006B3A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28424  006B3C  0E00               	movlw	0
 28425  006B3E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28426  006B40  0E04               	movlw	4
 28427  006B42  6F64               	movwf	memcpy@n& (0+255),b
 28428  006B44  EC3E  F036         	call	_memcpy	;wreg free
 28429                           
 28430                           ;lorawan.c: 2202: return mic;
 28431  006B48  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 28432  006B4C  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28433  006B50  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28434  006B54  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28435  006B58  0012               	return	
 28436  006B5A                     __end_of_ComputeMic:
 28437                           	opt stack 0
 28438                           tosu	equ	0xFFF
 28439                           tosh	equ	0xFFE
 28440                           tosl	equ	0xFFD
 28441                           pclath	equ	0xFFA
 28442                           tblptru	equ	0xFF8
 28443                           tblptrh	equ	0xFF7
 28444                           tblptrl	equ	0xFF6
 28445                           tablat	equ	0xFF5
 28446                           prodh	equ	0xFF4
 28447                           prodl	equ	0xFF3
 28448                           intcon	equ	0xFF2
 28449                           intcon2	equ	0xFF1
 28450                           intcon3	equ	0xFF0
 28451                           indf0	equ	0xFEF
 28452                           postinc0	equ	0xFEE
 28453                           fsr0h	equ	0xFEA
 28454                           fsr0l	equ	0xFE9
 28455                           wreg	equ	0xFE8
 28456                           postinc1	equ	0xFE6
 28457                           postdec1	equ	0xFE5
 28458                           plusw1	equ	0xFE3
 28459                           fsr1h	equ	0xFE2
 28460                           fsr1l	equ	0xFE1
 28461                           indf2	equ	0xFDF
 28462                           postinc2	equ	0xFDE
 28463                           postdec2	equ	0xFDD
 28464                           plusw2	equ	0xFDB
 28465                           fsr2h	equ	0xFDA
 28466                           fsr2l	equ	0xFD9
 28467                           status	equ	0xFD8
 28468                           
 28469 ;; *************** function _AESCmac *****************
 28470 ;; Defined at:
 28471 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28472 ;; Parameters:    Size  Location     Type
 28473 ;;  key             2   89[BANK0 ] PTR unsigned char 
 28474 ;;		 -> loRa.activationParameters(105), loRa(231), 
 28475 ;;  output          2   91[BANK0 ] PTR unsigned char 
 28476 ;;		 -> aesBuffer(16), 
 28477 ;;  input           2   93[BANK0 ] PTR unsigned char 
 28478 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28479 ;;  size            1   95[BANK0 ] unsigned char 
 28480 ;; Auto vars:     Size  Location     Type
 28481 ;;  x              16   80[BANK1 ] unsigned char [16]
 28482 ;;  y              16   64[BANK1 ] unsigned char [16]
 28483 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28484 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28485 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28486 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28487 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28488 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28489 ;;  i               1  101[BANK1 ] unsigned char 
 28490 ;;  j               1  100[BANK1 ] unsigned char 
 28491 ;;  n               1   99[BANK1 ] unsigned char 
 28492 ;;  flag            1   98[BANK1 ] unsigned char 
 28493 ;; Return value:  Size  Location     Type
 28494 ;;                  1    wreg      void 
 28495 ;; Registers used:
 28496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28497 ;; Tracked objects:
 28498 ;;		On entry : 0/0
 28499 ;;		On exit  : 0/0
 28500 ;;		Unchanged: 0/0
 28501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28502 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28503 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28504 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28505 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28506 ;;Total ram usage:      116 bytes
 28507 ;; Hardware stack levels used:    1
 28508 ;; Hardware stack levels required when called:   11
 28509 ;; This function calls:
 28510 ;;		_AESEncodeLoRa
 28511 ;;		_GenerateSubkey
 28512 ;;		_memcpy
 28513 ;;		_memset
 28514 ;; This function is called by:
 28515 ;;		_LORAWAN_RxDone
 28516 ;;		_AssemblePacket
 28517 ;;		_ComputeMic
 28518 ;; This function uses a non-reentrant model
 28519 ;;
 28520                           
 28521                           	psect	text141
 28522  001ED8                     __ptext141:
 28523                           	opt stack 0
 28524  001ED8                     _AESCmac:
 28525                           	opt stack 17
 28526                           
 28527                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 28528                           
 28529                           ;incstack = 0
 28530  001ED8  0E00               	movlw	0
 28531  001EDA  0101               	movlb	1	; () banked
 28532  001EDC  6F63               	movwf	AESCmac@n& (0+255),b
 28533  001EDE  0E00               	movlw	0
 28534  001EE0  6F65               	movwf	AESCmac@i& (0+255),b
 28535  001EE2  0E00               	movlw	0
 28536  001EE4  6F64               	movwf	AESCmac@j& (0+255),b
 28537                           
 28538                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28539  001EE6  0E00               	movlw	0
 28540  001EE8  6F62               	movwf	AESCmac@flag& (0+255),b
 28541                           
 28542                           ; BSR set to: 1
 28543                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28544                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28545                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28546  001EEA  0E00               	movlw	0
 28547  001EEC  6F60               	movwf	AESCmac@ptr& (0+255),b
 28548  001EEE  0E00               	movlw	0
 28549  001EF0  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28550                           
 28551                           ; BSR set to: 1
 28552                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28553  001EF2  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 28554  001EF6  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28555  001EFA  0E10               	movlw	low AESCmac@k1
 28556  001EFC  0100               	movlb	0	; () banked
 28557  001EFE  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 28558  001F00  0E01               	movlw	high AESCmac@k1
 28559  001F02  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28560  001F04  0E00               	movlw	low AESCmac@k2
 28561  001F06  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 28562  001F08  0E01               	movlw	high AESCmac@k2
 28563  001F0A  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28564  001F0C  EC45  F023         	call	_GenerateSubkey	;wreg free
 28565                           
 28566                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28567  001F10  0100               	movlb	0	; () banked
 28568  001F12  51BF               	movf	AESCmac@size& (0+255),w,b
 28569  001F14  6FC0               	movwf	??_AESCmac& (0+255),b
 28570  001F16  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 28571  001F18  0E0F               	movlw	15
 28572  001F1A  27C0               	addwf	??_AESCmac& (0+255),f,b
 28573  001F1C  0E00               	movlw	0
 28574  001F1E  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28575  001F20  0E04               	movlw	4
 28576  001F22  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 28577  001F24                     u7935:
 28578  001F24  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28579  001F26  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28580  001F28  33C0               	rrcf	??_AESCmac& (0+255),f,b
 28581  001F2A  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28582  001F2C  D7FB               	goto	u7935
 28583  001F2E  51C0               	movf	??_AESCmac& (0+255),w,b
 28584  001F30  0101               	movlb	1	; () banked
 28585  001F32  6F63               	movwf	AESCmac@n& (0+255),b
 28586                           
 28587                           ; BSR set to: 1
 28588                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28589  001F34  5163               	movf	AESCmac@n& (0+255),w,b
 28590  001F36  A4D8               	btfss	status,2,c
 28591  001F38  D004               	goto	l41
 28592                           
 28593                           ; BSR set to: 1
 28594                           ;lorawan_aes_cmac.c: 53: {
 28595                           ;lorawan_aes_cmac.c: 54: n = 1;
 28596  001F3A  0E01               	movlw	1
 28597  001F3C  6F63               	movwf	AESCmac@n& (0+255),b
 28598                           
 28599                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28600  001F3E  0E00               	movlw	0
 28601  001F40  D00B               	goto	L20
 28602  001F42                     l41:
 28603                           
 28604                           ; BSR set to: 1
 28605                           ;lorawan_aes_cmac.c: 57: else
 28606                           ;lorawan_aes_cmac.c: 58: {
 28607                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28608                           
 28609                           ; BSR set to: 1
 28610  001F42  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 28611  001F46  0E0F               	movlw	15
 28612  001F48  0100               	movlb	0	; () banked
 28613  001F4A  17C0               	andwf	??_AESCmac& (0+255),f,b
 28614  001F4C  A4D8               	btfss	status,2,c
 28615  001F4E  D002               	goto	u7950
 28616  001F50  0E01               	movlw	1
 28617  001F52  D001               	goto	u7960
 28618  001F54                     u7950:
 28619  001F54  0E00               	movlw	0
 28620  001F56                     u7960:
 28621  001F56  0101               	movlb	1	; () banked
 28622  001F58                     L20:
 28623  001F58  6F62               	movwf	AESCmac@flag& (0+255),b
 28624                           
 28625                           ; BSR set to: 1
 28626                           ;lorawan_aes_cmac.c: 60: }
 28627                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28628  001F5A  0562               	decf	AESCmac@flag& (0+255),w,b
 28629  001F5C  A4D8               	btfss	status,2,c
 28630  001F5E  D048               	goto	l43
 28631                           
 28632                           ; BSR set to: 1
 28633                           ;lorawan_aes_cmac.c: 63: {
 28634                           ;lorawan_aes_cmac.c: 64: j = 0;
 28635  001F60  0E00               	movlw	0
 28636  001F62  6F64               	movwf	AESCmac@j& (0+255),b
 28637                           
 28638                           ; BSR set to: 1
 28639                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28640  001F64  3963               	swapf	AESCmac@n& (0+255),w,b
 28641  001F66  0BF0               	andlw	240
 28642  001F68  0FF0               	addlw	240
 28643  001F6A  6F65               	movwf	AESCmac@i& (0+255),b
 28644  001F6C  D024               	goto	l44
 28645  001F6E                     
 28646                           ;lorawan_aes_cmac.c: 66: {
 28647                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28648                           
 28649                           ; BSR set to: 1
 28650  001F6E  0101               	movlb	1	; () banked
 28651  001F70  5164               	movf	AESCmac@j& (0+255),w,b
 28652  001F72  0D01               	mullw	1
 28653  001F74  0E20               	movlw	low AESCmac@mLast
 28654  001F76  24F3               	addwf	prodl,w,c
 28655  001F78  6ED9               	movwf	fsr2l,c
 28656  001F7A  0E01               	movlw	high AESCmac@mLast
 28657  001F7C  20F4               	addwfc	prodh,w,c
 28658  001F7E  6EDA               	movwf	fsr2h,c
 28659  001F80  5164               	movf	AESCmac@j& (0+255),w,b
 28660  001F82  0D01               	mullw	1
 28661  001F84  0E10               	movlw	low AESCmac@k1
 28662  001F86  24F3               	addwf	prodl,w,c
 28663  001F88  6EE9               	movwf	fsr0l,c
 28664  001F8A  0E01               	movlw	high AESCmac@k1
 28665  001F8C  20F4               	addwfc	prodh,w,c
 28666  001F8E  6EEA               	movwf	fsr0h,c
 28667  001F90  50EF               	movf	indf0,w,c
 28668  001F92  0100               	movlb	0	; () banked
 28669  001F94  6FC0               	movwf	??_AESCmac& (0+255),b
 28670  001F96  0101               	movlb	1	; () banked
 28671  001F98  5165               	movf	AESCmac@i& (0+255),w,b
 28672  001F9A  0D01               	mullw	1
 28673  001F9C  50F3               	movf	prodl,w,c
 28674  001F9E  0100               	movlb	0	; () banked
 28675  001FA0  25BD               	addwf	AESCmac@input& (0+255),w,b
 28676  001FA2  6EE9               	movwf	fsr0l,c
 28677  001FA4  50F4               	movf	prodh,w,c
 28678  001FA6  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28679  001FA8  6EEA               	movwf	fsr0h,c
 28680  001FAA  50EF               	movf	indf0,w,c
 28681  001FAC  19C0               	xorwf	??_AESCmac& (0+255),w,b
 28682  001FAE  6EDF               	movwf	indf2,c
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;lorawan_aes_cmac.c: 68: j++;
 28686  001FB0  0101               	movlb	1	; () banked
 28687  001FB2  2B64               	incf	AESCmac@j& (0+255),f,b
 28688                           
 28689                           ; BSR set to: 1
 28690  001FB4  2B65               	incf	AESCmac@i& (0+255),f,b
 28691  001FB6                     l44:
 28692                           
 28693                           ; BSR set to: 1
 28694                           
 28695                           ; BSR set to: 1
 28696  001FB6  5163               	movf	AESCmac@n& (0+255),w,b
 28697  001FB8  0100               	movlb	0	; () banked
 28698  001FBA  6FC0               	movwf	??_AESCmac& (0+255),b
 28699  001FBC  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 28700  001FBE  3BC0               	swapf	??_AESCmac& (0+255),f,b
 28701  001FC0  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 28702  001FC2  0EF0               	movlw	240
 28703  001FC4  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 28704  001FC6  51C0               	movf	??_AESCmac& (0+255),w,b
 28705  001FC8  0B0F               	andlw	15
 28706  001FCA  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28707  001FCC  0EF0               	movlw	240
 28708  001FCE  17C0               	andwf	??_AESCmac& (0+255),f,b
 28709  001FD0  0101               	movlb	1	; () banked
 28710  001FD2  5165               	movf	AESCmac@i& (0+255),w,b
 28711  001FD4  0100               	movlb	0	; () banked
 28712  001FD6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 28713  001FD8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 28714  001FDA  51C0               	movf	??_AESCmac& (0+255),w,b
 28715  001FDC  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 28716  001FDE  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 28717  001FE0  0A80               	xorlw	128
 28718  001FE2  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 28719  001FE4  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 28720  001FE6  0A80               	xorlw	128
 28721  001FE8  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28722  001FEA  B0D8               	btfsc	status,0,c
 28723  001FEC  D07F               	goto	u8040
 28724  001FEE  D7BF               	goto	l45
 28725  001FF0                     l43:
 28726                           
 28727                           ;lorawan_aes_cmac.c: 71: else
 28728                           ;lorawan_aes_cmac.c: 72: {
 28729                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28730                           
 28731                           ; BSR set to: 0
 28732  001FF0  0100               	movlb	0	; () banked
 28733  001FF2  51BF               	movf	AESCmac@size& (0+255),w,b
 28734  001FF4  0B0F               	andlw	15
 28735  001FF6  6FC0               	movwf	??_AESCmac& (0+255),b
 28736  001FF8  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 28737  001FFA  1FC0               	comf	??_AESCmac& (0+255),f,b
 28738  001FFC  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 28739  001FFE  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 28740  002000  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 28741  002002  51BF               	movf	AESCmac@size& (0+255),w,b
 28742  002004  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 28743  002006  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 28744  002008  51C0               	movf	??_AESCmac& (0+255),w,b
 28745  00200A  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 28746  00200C  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 28747  00200E  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 28748  002010  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 28749  002012  25BD               	addwf	AESCmac@input& (0+255),w,b
 28750  002014  0101               	movlb	1	; () banked
 28751  002016  6F60               	movwf	AESCmac@ptr& (0+255),b
 28752  002018  0100               	movlb	0	; () banked
 28753  00201A  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 28754  00201C  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28755  00201E  0101               	movlb	1	; () banked
 28756  002020  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28757                           
 28758                           ; BSR set to: 1
 28759                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28760  002022  0E00               	movlw	0
 28761  002024  6F65               	movwf	AESCmac@i& (0+255),b
 28762  002026                     l8726:
 28763                           
 28764                           ; BSR set to: 1
 28765  002026  0E0F               	movlw	15
 28766  002028  6565               	cpfsgt	AESCmac@i& (0+255),b
 28767  00202A  D001               	goto	l48
 28768  00202C  D036               	goto	u8020
 28769  00202E                     l48:
 28770                           
 28771                           ; BSR set to: 1
 28772                           ;lorawan_aes_cmac.c: 76: {
 28773                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28774                           
 28775                           ; BSR set to: 1
 28776  00202E  0100               	movlb	0	; () banked
 28777  002030  51BF               	movf	AESCmac@size& (0+255),w,b
 28778  002032  0B0F               	andlw	15
 28779  002034  0101               	movlb	1	; () banked
 28780  002036  6165               	cpfslt	AESCmac@i& (0+255),b
 28781  002038  D013               	goto	l50
 28782                           
 28783                           ; BSR set to: 1
 28784                           ;lorawan_aes_cmac.c: 78: {
 28785                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28786  00203A  5165               	movf	AESCmac@i& (0+255),w,b
 28787  00203C  0D01               	mullw	1
 28788  00203E  50F3               	movf	prodl,w,c
 28789  002040  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28790  002042  6ED9               	movwf	fsr2l,c
 28791  002044  50F4               	movf	prodh,w,c
 28792  002046  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28793  002048  6EDA               	movwf	fsr2h,c
 28794  00204A  5165               	movf	AESCmac@i& (0+255),w,b
 28795  00204C  0D01               	mullw	1
 28796  00204E  0E30               	movlw	low AESCmac@padded
 28797  002050  24F3               	addwf	prodl,w,c
 28798  002052  6EE9               	movwf	fsr0l,c
 28799  002054  0E01               	movlw	high AESCmac@padded
 28800  002056  20F4               	addwfc	prodh,w,c
 28801  002058  6EEA               	movwf	fsr0h,c
 28802  00205A  CFDF FFEF          	movff	indf2,indf0
 28803                           
 28804                           ;lorawan_aes_cmac.c: 80: }
 28805  00205E  D01B               	goto	l53
 28806  002060                     l50:
 28807                           
 28808                           ; BSR set to: 1
 28809                           ;lorawan_aes_cmac.c: 81: else
 28810                           ;lorawan_aes_cmac.c: 82: {
 28811                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28812                           
 28813                           ; BSR set to: 1
 28814  002060  0100               	movlb	0	; () banked
 28815  002062  51BF               	movf	AESCmac@size& (0+255),w,b
 28816  002064  0B0F               	andlw	15
 28817  002066  0101               	movlb	1	; () banked
 28818  002068  1965               	xorwf	AESCmac@i& (0+255),w,b
 28819  00206A  A4D8               	btfss	status,2,c
 28820  00206C  D00A               	goto	l52
 28821                           
 28822                           ; BSR set to: 1
 28823                           ;lorawan_aes_cmac.c: 84: {
 28824                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28825  00206E  5165               	movf	AESCmac@i& (0+255),w,b
 28826  002070  0D01               	mullw	1
 28827  002072  0E30               	movlw	low AESCmac@padded
 28828  002074  24F3               	addwf	prodl,w,c
 28829  002076  6ED9               	movwf	fsr2l,c
 28830  002078  0E01               	movlw	high AESCmac@padded
 28831  00207A  20F4               	addwfc	prodh,w,c
 28832  00207C  6EDA               	movwf	fsr2h,c
 28833  00207E  0E80               	movlw	128
 28834  002080  D009               	goto	L21
 28835  002082                     l52:
 28836                           
 28837                           ; BSR set to: 1
 28838                           ;lorawan_aes_cmac.c: 87: else
 28839                           ;lorawan_aes_cmac.c: 88: {
 28840                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 28841                           
 28842                           ; BSR set to: 1
 28843  002082  5165               	movf	AESCmac@i& (0+255),w,b
 28844  002084  0D01               	mullw	1
 28845  002086  0E30               	movlw	low AESCmac@padded
 28846  002088  24F3               	addwf	prodl,w,c
 28847  00208A  6ED9               	movwf	fsr2l,c
 28848  00208C  0E01               	movlw	high AESCmac@padded
 28849  00208E  20F4               	addwfc	prodh,w,c
 28850  002090  6EDA               	movwf	fsr2h,c
 28851  002092  0E00               	movlw	0
 28852  002094                     L21:
 28853  002094  6EDF               	movwf	indf2,c
 28854  002096                     l53:
 28855                           
 28856                           ; BSR set to: 1
 28857                           
 28858                           ; BSR set to: 1
 28859                           
 28860                           ; BSR set to: 1
 28861  002096  2B65               	incf	AESCmac@i& (0+255),f,b
 28862  002098  D7C6               	goto	l8726
 28863  00209A                     u8020:
 28864                           
 28865                           ; BSR set to: 1
 28866                           ;lorawan_aes_cmac.c: 90: }
 28867                           ;lorawan_aes_cmac.c: 91: }
 28868                           ;lorawan_aes_cmac.c: 92: }
 28869                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 28870                           
 28871                           ; BSR set to: 1
 28872  00209A  0E00               	movlw	0
 28873  00209C  6F65               	movwf	AESCmac@i& (0+255),b
 28874  00209E                     l8746:
 28875                           
 28876                           ; BSR set to: 1
 28877  00209E  0E0F               	movlw	15
 28878  0020A0  6565               	cpfsgt	AESCmac@i& (0+255),b
 28879  0020A2  D001               	goto	l54
 28880  0020A4  D023               	goto	u8040
 28881  0020A6                     l54:
 28882                           
 28883                           ; BSR set to: 1
 28884                           ;lorawan_aes_cmac.c: 96: {
 28885                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 28886                           
 28887                           ; BSR set to: 1
 28888  0020A6  5165               	movf	AESCmac@i& (0+255),w,b
 28889  0020A8  0D01               	mullw	1
 28890  0020AA  0E20               	movlw	low AESCmac@mLast
 28891  0020AC  24F3               	addwf	prodl,w,c
 28892  0020AE  6ED9               	movwf	fsr2l,c
 28893  0020B0  0E01               	movlw	high AESCmac@mLast
 28894  0020B2  20F4               	addwfc	prodh,w,c
 28895  0020B4  6EDA               	movwf	fsr2h,c
 28896  0020B6  5165               	movf	AESCmac@i& (0+255),w,b
 28897  0020B8  0D01               	mullw	1
 28898  0020BA  0E00               	movlw	low AESCmac@k2
 28899  0020BC  24F3               	addwf	prodl,w,c
 28900  0020BE  6EE9               	movwf	fsr0l,c
 28901  0020C0  0E01               	movlw	high AESCmac@k2
 28902  0020C2  20F4               	addwfc	prodh,w,c
 28903  0020C4  6EEA               	movwf	fsr0h,c
 28904  0020C6  50EF               	movf	indf0,w,c
 28905  0020C8  0100               	movlb	0	; () banked
 28906  0020CA  6FC0               	movwf	??_AESCmac& (0+255),b
 28907  0020CC  0101               	movlb	1	; () banked
 28908  0020CE  5165               	movf	AESCmac@i& (0+255),w,b
 28909  0020D0  0D01               	mullw	1
 28910  0020D2  0E30               	movlw	low AESCmac@padded
 28911  0020D4  24F3               	addwf	prodl,w,c
 28912  0020D6  6EE9               	movwf	fsr0l,c
 28913  0020D8  0E01               	movlw	high AESCmac@padded
 28914  0020DA  20F4               	addwfc	prodh,w,c
 28915  0020DC  6EEA               	movwf	fsr0h,c
 28916  0020DE  50EF               	movf	indf0,w,c
 28917  0020E0  0100               	movlb	0	; () banked
 28918  0020E2  19C0               	xorwf	??_AESCmac& (0+255),w,b
 28919  0020E4  6EDF               	movwf	indf2,c
 28920                           
 28921                           ; BSR set to: 0
 28922  0020E6  0101               	movlb	1	; () banked
 28923  0020E8  2B65               	incf	AESCmac@i& (0+255),f,b
 28924  0020EA  D7D9               	goto	l8746
 28925  0020EC                     u8040:
 28926                           
 28927                           ;lorawan_aes_cmac.c: 98: }
 28928                           ;lorawan_aes_cmac.c: 99: }
 28929                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 28930                           
 28931                           ; BSR set to: 1
 28932                           
 28933                           ; BSR set to: 1
 28934  0020EC  0E50               	movlw	low AESCmac@x
 28935  0020EE  0100               	movlb	0	; () banked
 28936  0020F0  6F60               	movwf	memset@p1& (0+255),b
 28937  0020F2  0E01               	movlw	high AESCmac@x
 28938  0020F4  6F61               	movwf	(memset@p1+1)& (0+255),b
 28939  0020F6  0E00               	movlw	0
 28940  0020F8  6F63               	movwf	(memset@c+1)& (0+255),b
 28941  0020FA  0E00               	movlw	0
 28942  0020FC  6F62               	movwf	memset@c& (0+255),b
 28943  0020FE  0E00               	movlw	0
 28944  002100  6F65               	movwf	(memset@n+1)& (0+255),b
 28945  002102  0E10               	movlw	16
 28946  002104  6F64               	movwf	memset@n& (0+255),b
 28947  002106  EC9D  F03B         	call	_memset	;wreg free
 28948                           
 28949                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 28950  00210A  0E00               	movlw	0
 28951  00210C  0101               	movlb	1	; () banked
 28952  00210E  6F65               	movwf	AESCmac@i& (0+255),b
 28953  002110  D056               	goto	l56
 28954  002112                     
 28955                           ;lorawan_aes_cmac.c: 104: {
 28956                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 28957                           
 28958                           ; BSR set to: 1
 28959  002112  0E00               	movlw	0
 28960  002114  0101               	movlb	1	; () banked
 28961  002116  6F64               	movwf	AESCmac@j& (0+255),b
 28962  002118                     l8762:
 28963                           
 28964                           ; BSR set to: 1
 28965  002118  0E0F               	movlw	15
 28966  00211A  6564               	cpfsgt	AESCmac@j& (0+255),b
 28967  00211C  D001               	goto	l58
 28968  00211E  D033               	goto	u8060
 28969  002120                     l58:
 28970                           
 28971                           ; BSR set to: 1
 28972                           ;lorawan_aes_cmac.c: 106: {
 28973                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 28974                           
 28975                           ; BSR set to: 1
 28976  002120  5164               	movf	AESCmac@j& (0+255),w,b
 28977  002122  0D01               	mullw	1
 28978  002124  0E40               	movlw	low AESCmac@y
 28979  002126  24F3               	addwf	prodl,w,c
 28980  002128  6ED9               	movwf	fsr2l,c
 28981  00212A  0E01               	movlw	high AESCmac@y
 28982  00212C  20F4               	addwfc	prodh,w,c
 28983  00212E  6EDA               	movwf	fsr2h,c
 28984  002130  5165               	movf	AESCmac@i& (0+255),w,b
 28985  002132  0100               	movlb	0	; () banked
 28986  002134  6FC0               	movwf	??_AESCmac& (0+255),b
 28987  002136  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 28988  002138  3BC0               	swapf	??_AESCmac& (0+255),f,b
 28989  00213A  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 28990  00213C  0EF0               	movlw	240
 28991  00213E  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 28992  002140  51C0               	movf	??_AESCmac& (0+255),w,b
 28993  002142  0B0F               	andlw	15
 28994  002144  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28995  002146  0EF0               	movlw	240
 28996  002148  17C0               	andwf	??_AESCmac& (0+255),f,b
 28997  00214A  0101               	movlb	1	; () banked
 28998  00214C  5164               	movf	AESCmac@j& (0+255),w,b
 28999  00214E  0100               	movlb	0	; () banked
 29000  002150  27C0               	addwf	??_AESCmac& (0+255),f,b
 29001  002152  0E00               	movlw	0
 29002  002154  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 29003  002156  51C0               	movf	??_AESCmac& (0+255),w,b
 29004  002158  25BD               	addwf	AESCmac@input& (0+255),w,b
 29005  00215A  6EE9               	movwf	fsr0l,c
 29006  00215C  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 29007  00215E  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 29008  002160  6EEA               	movwf	fsr0h,c
 29009  002162  50EF               	movf	indf0,w,c
 29010  002164  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 29011  002166  0101               	movlb	1	; () banked
 29012  002168  5164               	movf	AESCmac@j& (0+255),w,b
 29013  00216A  0D01               	mullw	1
 29014  00216C  0E50               	movlw	low AESCmac@x
 29015  00216E  24F3               	addwf	prodl,w,c
 29016  002170  6EE9               	movwf	fsr0l,c
 29017  002172  0E01               	movlw	high AESCmac@x
 29018  002174  20F4               	addwfc	prodh,w,c
 29019  002176  6EEA               	movwf	fsr0h,c
 29020  002178  50EF               	movf	indf0,w,c
 29021  00217A  0100               	movlb	0	; () banked
 29022  00217C  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 29023  00217E  6EDF               	movwf	indf2,c
 29024                           
 29025                           ; BSR set to: 0
 29026  002180  0101               	movlb	1	; () banked
 29027  002182  2B64               	incf	AESCmac@j& (0+255),f,b
 29028  002184  D7C9               	goto	l8762
 29029  002186                     u8060:
 29030                           
 29031                           ; BSR set to: 1
 29032                           ;lorawan_aes_cmac.c: 108: }
 29033                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 29034                           
 29035                           ; BSR set to: 1
 29036  002186  0E50               	movlw	low AESCmac@x
 29037  002188  0100               	movlb	0	; () banked
 29038  00218A  6F60               	movwf	memcpy@d1& (0+255),b
 29039  00218C  0E01               	movlw	high AESCmac@x
 29040  00218E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29041  002190  0E40               	movlw	low AESCmac@y
 29042  002192  6F62               	movwf	memcpy@s1& (0+255),b
 29043  002194  0E01               	movlw	high AESCmac@y
 29044  002196  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29045  002198  0E00               	movlw	0
 29046  00219A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29047  00219C  0E10               	movlw	16
 29048  00219E  6F64               	movwf	memcpy@n& (0+255),b
 29049  0021A0  EC3E  F036         	call	_memcpy	;wreg free
 29050                           
 29051                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29052  0021A4  0E50               	movlw	low AESCmac@x
 29053  0021A6  0100               	movlb	0	; () banked
 29054  0021A8  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 29055  0021AA  0E01               	movlw	high AESCmac@x
 29056  0021AC  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29057  0021AE  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 29058  0021B2  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29059  0021B6  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 29060  0021BA  0101               	movlb	1	; () banked
 29061  0021BC  2B65               	incf	AESCmac@i& (0+255),f,b
 29062  0021BE                     l56:
 29063                           
 29064                           ; BSR set to: 1
 29065                           
 29066                           ; BSR set to: 1
 29067  0021BE  0EFF               	movlw	255
 29068  0021C0  0100               	movlb	0	; () banked
 29069  0021C2  6FC0               	movwf	??_AESCmac& (0+255),b
 29070  0021C4  0EFF               	movlw	255
 29071  0021C6  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 29072  0021C8  0101               	movlb	1	; () banked
 29073  0021CA  5163               	movf	AESCmac@n& (0+255),w,b
 29074  0021CC  0100               	movlb	0	; () banked
 29075  0021CE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 29076  0021D0  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 29077  0021D2  51C0               	movf	??_AESCmac& (0+255),w,b
 29078  0021D4  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 29079  0021D6  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 29080  0021D8  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29081  0021DA  0101               	movlb	1	; () banked
 29082  0021DC  5165               	movf	AESCmac@i& (0+255),w,b
 29083  0021DE  0100               	movlb	0	; () banked
 29084  0021E0  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 29085  0021E2  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 29086  0021E4  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 29087  0021E6  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 29088  0021E8  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 29089  0021EA  0A80               	xorlw	128
 29090  0021EC  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 29091  0021EE  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 29092  0021F0  0A80               	xorlw	128
 29093  0021F2  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29094  0021F4  A0D8               	btfss	status,0,c
 29095  0021F6  D78D               	goto	l57
 29096                           
 29097                           ; BSR set to: 0
 29098                           ;lorawan_aes_cmac.c: 111: }
 29099                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29100                           
 29101                           ; BSR set to: 0
 29102  0021F8  0E00               	movlw	0
 29103  0021FA  0101               	movlb	1	; () banked
 29104  0021FC  6F65               	movwf	AESCmac@i& (0+255),b
 29105  0021FE                     l8782:
 29106                           
 29107                           ; BSR set to: 1
 29108  0021FE  0E0F               	movlw	15
 29109  002200  6565               	cpfsgt	AESCmac@i& (0+255),b
 29110  002202  D001               	goto	l61
 29111  002204  D023               	goto	u8090
 29112  002206                     l61:
 29113                           
 29114                           ; BSR set to: 1
 29115                           ;lorawan_aes_cmac.c: 114: {
 29116                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29117                           
 29118                           ; BSR set to: 1
 29119  002206  5165               	movf	AESCmac@i& (0+255),w,b
 29120  002208  0D01               	mullw	1
 29121  00220A  0E40               	movlw	low AESCmac@y
 29122  00220C  24F3               	addwf	prodl,w,c
 29123  00220E  6ED9               	movwf	fsr2l,c
 29124  002210  0E01               	movlw	high AESCmac@y
 29125  002212  20F4               	addwfc	prodh,w,c
 29126  002214  6EDA               	movwf	fsr2h,c
 29127  002216  5165               	movf	AESCmac@i& (0+255),w,b
 29128  002218  0D01               	mullw	1
 29129  00221A  0E20               	movlw	low AESCmac@mLast
 29130  00221C  24F3               	addwf	prodl,w,c
 29131  00221E  6EE9               	movwf	fsr0l,c
 29132  002220  0E01               	movlw	high AESCmac@mLast
 29133  002222  20F4               	addwfc	prodh,w,c
 29134  002224  6EEA               	movwf	fsr0h,c
 29135  002226  50EF               	movf	indf0,w,c
 29136  002228  0100               	movlb	0	; () banked
 29137  00222A  6FC0               	movwf	??_AESCmac& (0+255),b
 29138  00222C  0101               	movlb	1	; () banked
 29139  00222E  5165               	movf	AESCmac@i& (0+255),w,b
 29140  002230  0D01               	mullw	1
 29141  002232  0E50               	movlw	low AESCmac@x
 29142  002234  24F3               	addwf	prodl,w,c
 29143  002236  6EE9               	movwf	fsr0l,c
 29144  002238  0E01               	movlw	high AESCmac@x
 29145  00223A  20F4               	addwfc	prodh,w,c
 29146  00223C  6EEA               	movwf	fsr0h,c
 29147  00223E  50EF               	movf	indf0,w,c
 29148  002240  0100               	movlb	0	; () banked
 29149  002242  19C0               	xorwf	??_AESCmac& (0+255),w,b
 29150  002244  6EDF               	movwf	indf2,c
 29151                           
 29152                           ; BSR set to: 0
 29153  002246  0101               	movlb	1	; () banked
 29154  002248  2B65               	incf	AESCmac@i& (0+255),f,b
 29155  00224A  D7D9               	goto	l8782
 29156  00224C                     u8090:
 29157                           
 29158                           ; BSR set to: 1
 29159                           ;lorawan_aes_cmac.c: 116: }
 29160                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29161                           
 29162                           ; BSR set to: 1
 29163  00224C  0E40               	movlw	low AESCmac@y
 29164  00224E  0100               	movlb	0	; () banked
 29165  002250  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 29166  002252  0E01               	movlw	high AESCmac@y
 29167  002254  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29168  002256  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 29169  00225A  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29170  00225E  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 29171                           
 29172                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29173  002262  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 29174  002266  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 29175  00226A  0E40               	movlw	low AESCmac@y
 29176  00226C  0100               	movlb	0	; () banked
 29177  00226E  6F62               	movwf	memcpy@s1& (0+255),b
 29178  002270  0E01               	movlw	high AESCmac@y
 29179  002272  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29180  002274  0E00               	movlw	0
 29181  002276  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29182  002278  0E10               	movlw	16
 29183  00227A  6F64               	movwf	memcpy@n& (0+255),b
 29184  00227C  EC3E  F036         	call	_memcpy	;wreg free
 29185  002280  0012               	return		;funcret
 29186  002282                     __end_of_AESCmac:
 29187                           	opt stack 0
 29188                           tosu	equ	0xFFF
 29189                           tosh	equ	0xFFE
 29190                           tosl	equ	0xFFD
 29191                           pclath	equ	0xFFA
 29192                           tblptru	equ	0xFF8
 29193                           tblptrh	equ	0xFF7
 29194                           tblptrl	equ	0xFF6
 29195                           tablat	equ	0xFF5
 29196                           prodh	equ	0xFF4
 29197                           prodl	equ	0xFF3
 29198                           intcon	equ	0xFF2
 29199                           intcon2	equ	0xFF1
 29200                           intcon3	equ	0xFF0
 29201                           indf0	equ	0xFEF
 29202                           postinc0	equ	0xFEE
 29203                           fsr0h	equ	0xFEA
 29204                           fsr0l	equ	0xFE9
 29205                           wreg	equ	0xFE8
 29206                           postinc1	equ	0xFE6
 29207                           postdec1	equ	0xFE5
 29208                           plusw1	equ	0xFE3
 29209                           fsr1h	equ	0xFE2
 29210                           fsr1l	equ	0xFE1
 29211                           indf2	equ	0xFDF
 29212                           postinc2	equ	0xFDE
 29213                           postdec2	equ	0xFDD
 29214                           plusw2	equ	0xFDB
 29215                           fsr2h	equ	0xFDA
 29216                           fsr2l	equ	0xFD9
 29217                           status	equ	0xFD8
 29218                           
 29219 ;; *************** function _GenerateSubkey *****************
 29220 ;; Defined at:
 29221 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29222 ;; Parameters:    Size  Location     Type
 29223 ;;  key             2   49[BANK0 ] PTR unsigned char 
 29224 ;;		 -> loRa.activationParameters(105), loRa(231), 
 29225 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 29226 ;;		 -> AESCmac@k1(16), 
 29227 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 29228 ;;		 -> AESCmac@k2(16), 
 29229 ;; Auto vars:     Size  Location     Type
 29230 ;;  l              16   72[BANK0 ] unsigned char [16]
 29231 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 29232 ;;  i               1   88[BANK0 ] unsigned char 
 29233 ;; Return value:  Size  Location     Type
 29234 ;;                  1    wreg      void 
 29235 ;; Registers used:
 29236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29237 ;; Tracked objects:
 29238 ;;		On entry : 0/0
 29239 ;;		On exit  : 0/0
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29242 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29243 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29245 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29246 ;;Total ram usage:       40 bytes
 29247 ;; Hardware stack levels used:    1
 29248 ;; Hardware stack levels required when called:   10
 29249 ;; This function calls:
 29250 ;;		_AESEncodeLoRa
 29251 ;;		_FillSubKey
 29252 ;;		_memset
 29253 ;; This function is called by:
 29254 ;;		_AESCmac
 29255 ;; This function uses a non-reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text142
 29259  00468A                     __ptext142:
 29260                           	opt stack 0
 29261  00468A                     _GenerateSubkey:
 29262                           	opt stack 17
 29263                           
 29264                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 29265                           
 29266                           ;incstack = 0
 29267  00468A  0E00               	movlw	0
 29268  00468C  0100               	movlb	0	; () banked
 29269  00468E  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 29270                           
 29271                           ; BSR set to: 0
 29272                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29273                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29274                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29275  004690  EE21  F0BA         	lfsr	2,GenerateSubkey@F7103
 29276  004694  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 29277  004698  0E0F               	movlw	15
 29278  00469A                     u7381:
 29279  00469A  CFDB FFEB          	movff	plusw2,plusw0
 29280  00469E  06E8               	decf	wreg,f,c
 29281  0046A0  E2FC               	bc	u7381
 29282                           
 29283                           ; BSR set to: 0
 29284                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29285  0046A2  0EA8               	movlw	low GenerateSubkey@l
 29286  0046A4  6F60               	movwf	memset@p1& (0+255),b
 29287  0046A6  0E00               	movlw	high GenerateSubkey@l
 29288  0046A8  6F61               	movwf	(memset@p1+1)& (0+255),b
 29289  0046AA  0E00               	movlw	0
 29290  0046AC  6F63               	movwf	(memset@c+1)& (0+255),b
 29291  0046AE  0E00               	movlw	0
 29292  0046B0  6F62               	movwf	memset@c& (0+255),b
 29293  0046B2  0E00               	movlw	0
 29294  0046B4  6F65               	movwf	(memset@n+1)& (0+255),b
 29295  0046B6  0E10               	movlw	16
 29296  0046B8  6F64               	movwf	memset@n& (0+255),b
 29297  0046BA  EC9D  F03B         	call	_memset	;wreg free
 29298                           
 29299                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29300  0046BE  0EA8               	movlw	low GenerateSubkey@l
 29301  0046C0  0100               	movlb	0	; () banked
 29302  0046C2  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 29303  0046C4  0E00               	movlw	high GenerateSubkey@l
 29304  0046C6  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29305  0046C8  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29306  0046CC  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29307  0046D0  ECBE  F03A         	call	_AESEncodeLoRa	;wreg free
 29308                           
 29309                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29310  0046D4  0100               	movlb	0	; () banked
 29311  0046D6  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 29312  0046D8  D00D               	goto	l68
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;lorawan_aes_cmac.c: 138: {
 29316                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29317  0046DA  0EA8               	movlw	low GenerateSubkey@l
 29318  0046DC  6F60               	movwf	FillSubKey@source& (0+255),b
 29319  0046DE  0E00               	movlw	high GenerateSubkey@l
 29320  0046E0  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 29321  0046E2  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 29322  0046E6  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29323  0046EA  0E10               	movlw	16
 29324  0046EC  6F64               	movwf	FillSubKey@size& (0+255),b
 29325  0046EE  ECAD  F035         	call	_FillSubKey	;wreg free
 29326                           
 29327                           ;lorawan_aes_cmac.c: 140: }
 29328  0046F2  D02A               	goto	u7410
 29329  0046F4                     l68:
 29330                           
 29331                           ;lorawan_aes_cmac.c: 141: else
 29332                           ;lorawan_aes_cmac.c: 142: {
 29333                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29334  0046F4  0EA8               	movlw	low GenerateSubkey@l
 29335  0046F6  0100               	movlb	0	; () banked
 29336  0046F8  6F60               	movwf	FillSubKey@source& (0+255),b
 29337  0046FA  0E00               	movlw	high GenerateSubkey@l
 29338  0046FC  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 29339  0046FE  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 29340  004702  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29341  004706  0E10               	movlw	16
 29342  004708  6F64               	movwf	FillSubKey@size& (0+255),b
 29343  00470A  ECAD  F035         	call	_FillSubKey	;wreg free
 29344                           
 29345                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29346  00470E  0E00               	movlw	0
 29347  004710  0100               	movlb	0	; () banked
 29348  004712  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 29349  004714                     l8328:
 29350                           
 29351                           ; BSR set to: 0
 29352  004714  0E0F               	movlw	15
 29353  004716  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 29354  004718  D001               	goto	l70
 29355  00471A  D016               	goto	u7410
 29356  00471C                     l70:
 29357                           
 29358                           ; BSR set to: 0
 29359                           ;lorawan_aes_cmac.c: 146: {
 29360                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29361                           
 29362                           ; BSR set to: 0
 29363  00471C  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 29364  00471E  0D01               	mullw	1
 29365  004720  0E98               	movlw	low GenerateSubkey@const_Rb
 29366  004722  24F3               	addwf	prodl,w,c
 29367  004724  6ED9               	movwf	fsr2l,c
 29368  004726  0E00               	movlw	high GenerateSubkey@const_Rb
 29369  004728  20F4               	addwfc	prodh,w,c
 29370  00472A  6EDA               	movwf	fsr2h,c
 29371  00472C  50DF               	movf	indf2,w,c
 29372  00472E  6F97               	movwf	??_GenerateSubkey& (0+255),b
 29373  004730  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 29374  004732  0D01               	mullw	1
 29375  004734  50F3               	movf	prodl,w,c
 29376  004736  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 29377  004738  6ED9               	movwf	fsr2l,c
 29378  00473A  50F4               	movf	prodh,w,c
 29379  00473C  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29380  00473E  6EDA               	movwf	fsr2h,c
 29381  004740  5197               	movf	??_GenerateSubkey& (0+255),w,b
 29382  004742  1ADF               	xorwf	indf2,f,c
 29383                           
 29384                           ; BSR set to: 0
 29385  004744  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 29386  004746  D7E6               	goto	l8328
 29387  004748                     u7410:
 29388                           
 29389                           ;lorawan_aes_cmac.c: 148: }
 29390                           ;lorawan_aes_cmac.c: 149: }
 29391                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29392                           
 29393                           ; BSR set to: 0
 29394                           
 29395                           ; BSR set to: 0
 29396  004748  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29397  00474C  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29398  004750  0100               	movlb	0	; () banked
 29399  004752  BEDF               	btfsc	indf2,7,c
 29400  004754  D00D               	goto	l72
 29401                           
 29402                           ; BSR set to: 0
 29403                           ;lorawan_aes_cmac.c: 153: {
 29404                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29405  004756  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 29406  00475A  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29407  00475E  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 29408  004762  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29409  004766  0E10               	movlw	16
 29410  004768  6F64               	movwf	FillSubKey@size& (0+255),b
 29411  00476A  ECAD  F035         	call	_FillSubKey	;wreg free
 29412                           
 29413                           ;lorawan_aes_cmac.c: 155: }
 29414  00476E  0012               	return	
 29415  004770                     l72:
 29416                           
 29417                           ;lorawan_aes_cmac.c: 156: else
 29418                           ;lorawan_aes_cmac.c: 157: {
 29419                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29420  004770  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 29421  004774  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29422  004778  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 29423  00477C  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29424  004780  0E10               	movlw	16
 29425  004782  0100               	movlb	0	; () banked
 29426  004784  6F64               	movwf	FillSubKey@size& (0+255),b
 29427  004786  ECAD  F035         	call	_FillSubKey	;wreg free
 29428                           
 29429                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29430  00478A  0E00               	movlw	0
 29431  00478C  0100               	movlb	0	; () banked
 29432  00478E  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 29433  004790                     l8346:
 29434                           
 29435                           ; BSR set to: 0
 29436  004790  0E0F               	movlw	15
 29437  004792  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 29438  004794  D001               	goto	l74
 29439  004796  0012               	return	
 29440  004798                     l74:
 29441                           
 29442                           ; BSR set to: 0
 29443                           ;lorawan_aes_cmac.c: 161: {
 29444                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29445                           
 29446                           ; BSR set to: 0
 29447  004798  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 29448  00479A  0D01               	mullw	1
 29449  00479C  50F3               	movf	prodl,w,c
 29450  00479E  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 29451  0047A0  6ED9               	movwf	fsr2l,c
 29452  0047A2  50F4               	movf	prodh,w,c
 29453  0047A4  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29454  0047A6  6EDA               	movwf	fsr2h,c
 29455  0047A8  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 29456  0047AA  0D01               	mullw	1
 29457  0047AC  0E98               	movlw	low GenerateSubkey@const_Rb
 29458  0047AE  24F3               	addwf	prodl,w,c
 29459  0047B0  6EE9               	movwf	fsr0l,c
 29460  0047B2  0E00               	movlw	high GenerateSubkey@const_Rb
 29461  0047B4  20F4               	addwfc	prodh,w,c
 29462  0047B6  6EEA               	movwf	fsr0h,c
 29463  0047B8  50EF               	movf	indf0,w,c
 29464  0047BA  6F97               	movwf	??_GenerateSubkey& (0+255),b
 29465  0047BC  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 29466  0047BE  0D01               	mullw	1
 29467  0047C0  50F3               	movf	prodl,w,c
 29468  0047C2  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 29469  0047C4  6EE9               	movwf	fsr0l,c
 29470  0047C6  50F4               	movf	prodh,w,c
 29471  0047C8  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29472  0047CA  6EEA               	movwf	fsr0h,c
 29473  0047CC  50EF               	movf	indf0,w,c
 29474  0047CE  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 29475  0047D0  6EDF               	movwf	indf2,c
 29476                           
 29477                           ; BSR set to: 0
 29478  0047D2  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 29479  0047D4  D7DD               	goto	l8346
 29480  0047D6                     __end_of_GenerateSubkey:
 29481                           	opt stack 0
 29482                           tosu	equ	0xFFF
 29483                           tosh	equ	0xFFE
 29484                           tosl	equ	0xFFD
 29485                           pclath	equ	0xFFA
 29486                           tblptru	equ	0xFF8
 29487                           tblptrh	equ	0xFF7
 29488                           tblptrl	equ	0xFF6
 29489                           tablat	equ	0xFF5
 29490                           prodh	equ	0xFF4
 29491                           prodl	equ	0xFF3
 29492                           intcon	equ	0xFF2
 29493                           intcon2	equ	0xFF1
 29494                           intcon3	equ	0xFF0
 29495                           indf0	equ	0xFEF
 29496                           postinc0	equ	0xFEE
 29497                           plusw0	equ	0xFEB
 29498                           fsr0h	equ	0xFEA
 29499                           fsr0l	equ	0xFE9
 29500                           wreg	equ	0xFE8
 29501                           postinc1	equ	0xFE6
 29502                           postdec1	equ	0xFE5
 29503                           plusw1	equ	0xFE3
 29504                           fsr1h	equ	0xFE2
 29505                           fsr1l	equ	0xFE1
 29506                           indf2	equ	0xFDF
 29507                           postinc2	equ	0xFDE
 29508                           postdec2	equ	0xFDD
 29509                           plusw2	equ	0xFDB
 29510                           fsr2h	equ	0xFDA
 29511                           fsr2l	equ	0xFD9
 29512                           status	equ	0xFD8
 29513                           
 29514 ;; *************** function _FillSubKey *****************
 29515 ;; Defined at:
 29516 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29517 ;; Parameters:    Size  Location     Type
 29518 ;;  source          2    0[BANK0 ] PTR unsigned char 
 29519 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29520 ;;  key             2    2[BANK0 ] PTR unsigned char 
 29521 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29522 ;;  size            1    4[BANK0 ] unsigned char 
 29523 ;; Auto vars:     Size  Location     Type
 29524 ;;  i               1    7[BANK0 ] unsigned char 
 29525 ;;  carry           1    6[BANK0 ] unsigned char 
 29526 ;; Return value:  Size  Location     Type
 29527 ;;                  1    wreg      void 
 29528 ;; Registers used:
 29529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29530 ;; Tracked objects:
 29531 ;;		On entry : 0/0
 29532 ;;		On exit  : 0/0
 29533 ;;		Unchanged: 0/0
 29534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29535 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29536 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29538 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29539 ;;Total ram usage:        8 bytes
 29540 ;; Hardware stack levels used:    1
 29541 ;; Hardware stack levels required when called:    7
 29542 ;; This function calls:
 29543 ;;		Nothing
 29544 ;; This function is called by:
 29545 ;;		_GenerateSubkey
 29546 ;; This function uses a non-reentrant model
 29547 ;;
 29548                           
 29549                           	psect	text143
 29550  006B5A                     __ptext143:
 29551                           	opt stack 0
 29552  006B5A                     _FillSubKey:
 29553                           	opt stack 19
 29554                           
 29555                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29556                           
 29557                           ;incstack = 0
 29558  006B5A  0E00               	movlw	0
 29559  006B5C  0100               	movlb	0	; () banked
 29560  006B5E  6F67               	movwf	FillSubKey@i& (0+255),b
 29561                           
 29562                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29563  006B60  0E00               	movlw	0
 29564  006B62  6F66               	movwf	FillSubKey@carry& (0+255),b
 29565                           
 29566                           ; BSR set to: 0
 29567                           ;lorawan_aes_cmac.c: 172: i=size;
 29568  006B64  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 29569                           
 29570                           ;lorawan_aes_cmac.c: 174: while(i--)
 29571  006B68  D024               	goto	l79
 29572  006B6A                     
 29573                           ; BSR set to: 0
 29574                           ;lorawan_aes_cmac.c: 175: {
 29575                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29576                           
 29577                           ; BSR set to: 0
 29578  006B6A  5167               	movf	FillSubKey@i& (0+255),w,b
 29579  006B6C  0D01               	mullw	1
 29580  006B6E  50F3               	movf	prodl,w,c
 29581  006B70  2562               	addwf	FillSubKey@key& (0+255),w,b
 29582  006B72  6ED9               	movwf	fsr2l,c
 29583  006B74  50F4               	movf	prodh,w,c
 29584  006B76  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29585  006B78  6EDA               	movwf	fsr2h,c
 29586  006B7A  5167               	movf	FillSubKey@i& (0+255),w,b
 29587  006B7C  0D01               	mullw	1
 29588  006B7E  50F3               	movf	prodl,w,c
 29589  006B80  2560               	addwf	FillSubKey@source& (0+255),w,b
 29590  006B82  6EE9               	movwf	fsr0l,c
 29591  006B84  50F4               	movf	prodh,w,c
 29592  006B86  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29593  006B88  6EEA               	movwf	fsr0h,c
 29594  006B8A  50EF               	movf	indf0,w,c
 29595  006B8C  6F65               	movwf	??_FillSubKey& (0+255),b
 29596  006B8E  90D8               	bcf	status,0,c
 29597  006B90  3565               	rlcf	??_FillSubKey& (0+255),w,b
 29598  006B92  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 29599  006B94  6EDF               	movwf	indf2,c
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29603  006B96  5167               	movf	FillSubKey@i& (0+255),w,b
 29604  006B98  0D01               	mullw	1
 29605  006B9A  50F3               	movf	prodl,w,c
 29606  006B9C  2560               	addwf	FillSubKey@source& (0+255),w,b
 29607  006B9E  6ED9               	movwf	fsr2l,c
 29608  006BA0  50F4               	movf	prodh,w,c
 29609  006BA2  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29610  006BA4  6EDA               	movwf	fsr2h,c
 29611  006BA6  AEDF               	btfss	indf2,7,c
 29612  006BA8  D002               	goto	u6970
 29613  006BAA  0E01               	movlw	1
 29614  006BAC  D001               	goto	u6980
 29615  006BAE                     u6970:
 29616  006BAE  0E00               	movlw	0
 29617  006BB0                     u6980:
 29618  006BB0  6F66               	movwf	FillSubKey@carry& (0+255),b
 29619  006BB2                     l79:
 29620                           
 29621                           ; BSR set to: 0
 29622                           
 29623                           ; BSR set to: 0
 29624  006BB2  0767               	decf	FillSubKey@i& (0+255),f,b
 29625  006BB4  2967               	incf	FillSubKey@i& (0+255),w,b
 29626  006BB6  B4D8               	btfsc	status,2,c
 29627  006BB8  0012               	return	
 29628  006BBA  D7D7               	goto	l80
 29629  006BBC                     __end_of_FillSubKey:
 29630                           	opt stack 0
 29631                           tosu	equ	0xFFF
 29632                           tosh	equ	0xFFE
 29633                           tosl	equ	0xFFD
 29634                           pclath	equ	0xFFA
 29635                           tblptru	equ	0xFF8
 29636                           tblptrh	equ	0xFF7
 29637                           tblptrl	equ	0xFF6
 29638                           tablat	equ	0xFF5
 29639                           prodh	equ	0xFF4
 29640                           prodl	equ	0xFF3
 29641                           intcon	equ	0xFF2
 29642                           intcon2	equ	0xFF1
 29643                           intcon3	equ	0xFF0
 29644                           indf0	equ	0xFEF
 29645                           postinc0	equ	0xFEE
 29646                           plusw0	equ	0xFEB
 29647                           fsr0h	equ	0xFEA
 29648                           fsr0l	equ	0xFE9
 29649                           wreg	equ	0xFE8
 29650                           postinc1	equ	0xFE6
 29651                           postdec1	equ	0xFE5
 29652                           plusw1	equ	0xFE3
 29653                           fsr1h	equ	0xFE2
 29654                           fsr1l	equ	0xFE1
 29655                           indf2	equ	0xFDF
 29656                           postinc2	equ	0xFDE
 29657                           postdec2	equ	0xFDD
 29658                           plusw2	equ	0xFDB
 29659                           fsr2h	equ	0xFDA
 29660                           fsr2l	equ	0xFD9
 29661                           status	equ	0xFD8
 29662                           
 29663 ;; *************** function _AESEncodeLoRa *****************
 29664 ;; Defined at:
 29665 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29666 ;; Parameters:    Size  Location     Type
 29667 ;;  block           2   29[BANK0 ] PTR unsigned char 
 29668 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 29669 ;;		 -> loRa(231), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 29670 ;;  key             2   31[BANK0 ] PTR unsigned char 
 29671 ;;		 -> loRa.activationParameters(105), loRa(231), 
 29672 ;; Auto vars:     Size  Location     Type
 29673 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 29674 ;; Return value:  Size  Location     Type
 29675 ;;                  1    wreg      void 
 29676 ;; Registers used:
 29677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29678 ;; Tracked objects:
 29679 ;;		On entry : 0/0
 29680 ;;		On exit  : 0/0
 29681 ;;		Unchanged: 0/0
 29682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29684 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29686 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29687 ;;Total ram usage:       20 bytes
 29688 ;; Hardware stack levels used:    1
 29689 ;; Hardware stack levels required when called:    9
 29690 ;; This function calls:
 29691 ;;		_AESEncode
 29692 ;;		_memcpy
 29693 ;; This function is called by:
 29694 ;;		_AESCmac
 29695 ;;		_GenerateSubkey
 29696 ;;		_LORAWAN_RxDone
 29697 ;;		_ComputeSessionKeys
 29698 ;;		_EncryptFRMPayload
 29699 ;; This function uses a non-reentrant model
 29700 ;;
 29701                           
 29702                           	psect	text144
 29703  00757C                     __ptext144:
 29704                           	opt stack 0
 29705  00757C                     _AESEncodeLoRa:
 29706                           	opt stack 18
 29707                           
 29708                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29709                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;incstack = 0
 29713  00757C  0E81               	movlw	low AESEncodeLoRa@useKey
 29714  00757E  0100               	movlb	0	; () banked
 29715  007580  6F60               	movwf	memcpy@d1& (0+255),b
 29716  007582  0E00               	movlw	high AESEncodeLoRa@useKey
 29717  007584  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29718  007586  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 29719  00758A  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29720  00758E  0E00               	movlw	0
 29721  007590  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29722  007592  0E10               	movlw	16
 29723  007594  6F64               	movwf	memcpy@n& (0+255),b
 29724  007596  EC3E  F036         	call	_memcpy	;wreg free
 29725                           
 29726                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29727  00759A  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 29728  00759E  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29729  0075A2  0E81               	movlw	low AESEncodeLoRa@useKey
 29730  0075A4  0100               	movlb	0	; () banked
 29731  0075A6  6F68               	movwf	AESEncode@key& (0+255),b
 29732  0075A8  0E00               	movlw	high AESEncodeLoRa@useKey
 29733  0075AA  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 29734  0075AC  EC41  F011         	call	_AESEncode	;wreg free
 29735  0075B0  0012               	return		;funcret
 29736  0075B2                     __end_of_AESEncodeLoRa:
 29737                           	opt stack 0
 29738                           tosu	equ	0xFFF
 29739                           tosh	equ	0xFFE
 29740                           tosl	equ	0xFFD
 29741                           pclath	equ	0xFFA
 29742                           tblptru	equ	0xFF8
 29743                           tblptrh	equ	0xFF7
 29744                           tblptrl	equ	0xFF6
 29745                           tablat	equ	0xFF5
 29746                           prodh	equ	0xFF4
 29747                           prodl	equ	0xFF3
 29748                           intcon	equ	0xFF2
 29749                           intcon2	equ	0xFF1
 29750                           intcon3	equ	0xFF0
 29751                           indf0	equ	0xFEF
 29752                           postinc0	equ	0xFEE
 29753                           plusw0	equ	0xFEB
 29754                           fsr0h	equ	0xFEA
 29755                           fsr0l	equ	0xFE9
 29756                           wreg	equ	0xFE8
 29757                           postinc1	equ	0xFE6
 29758                           postdec1	equ	0xFE5
 29759                           plusw1	equ	0xFE3
 29760                           fsr1h	equ	0xFE2
 29761                           fsr1l	equ	0xFE1
 29762                           indf2	equ	0xFDF
 29763                           postinc2	equ	0xFDE
 29764                           postdec2	equ	0xFDD
 29765                           plusw2	equ	0xFDB
 29766                           fsr2h	equ	0xFDA
 29767                           fsr2l	equ	0xFD9
 29768                           status	equ	0xFD8
 29769                           
 29770 ;; *************** function _AESEncode *****************
 29771 ;; Defined at:
 29772 ;;		line 216 in file "mcc_generated_files/LoRaWAN/AES.c"
 29773 ;; Parameters:    Size  Location     Type
 29774 ;;  block           2    6[BANK0 ] PTR unsigned char 
 29775 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 29776 ;;		 -> loRa(231), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 29777 ;;  key             2    8[BANK0 ] PTR unsigned char 
 29778 ;;		 -> AESEncodeLoRa@useKey(16), 
 29779 ;; Auto vars:     Size  Location     Type
 29780 ;;  aux3            1   27[BANK0 ] unsigned char 
 29781 ;;  aux1            1   26[BANK0 ] unsigned char 
 29782 ;;  aux2            1   25[BANK0 ] unsigned char 
 29783 ;;  aux             1   24[BANK0 ] unsigned char 
 29784 ;;  i               1   28[BANK0 ] unsigned char 
 29785 ;;  temp            1    0        unsigned char 
 29786 ;; Return value:  Size  Location     Type
 29787 ;;                  1    wreg      void 
 29788 ;; Registers used:
 29789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29790 ;; Tracked objects:
 29791 ;;		On entry : 0/0
 29792 ;;		On exit  : 0/0
 29793 ;;		Unchanged: 0/0
 29794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29796 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29797 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29798 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29799 ;;Total ram usage:       23 bytes
 29800 ;; Hardware stack levels used:    1
 29801 ;; Hardware stack levels required when called:    8
 29802 ;; This function calls:
 29803 ;;		_EncKeySchedule
 29804 ;;		_EncodeShiftRow
 29805 ;; This function is called by:
 29806 ;;		_AESEncodeLoRa
 29807 ;; This function uses a non-reentrant model
 29808 ;;
 29809                           
 29810                           	psect	text145
 29811  002282                     __ptext145:
 29812                           	opt stack 0
 29813  002282                     _AESEncode:
 29814                           	opt stack 18
 29815                           
 29816                           ;AES.c: 218: unsigned char i;
 29817                           ;AES.c: 219: unsigned char temp;
 29818                           ;AES.c: 222: _roundCounter = 10;
 29819                           
 29820                           ;incstack = 0
 29821  002282  0E0A               	movlw	10
 29822  002284  0101               	movlb	1	; () banked
 29823  002286  6F72               	movwf	__roundCounter& (0+255),b
 29824                           
 29825                           ;AES.c: 224: _rcon = 0x01;
 29826  002288  0E01               	movlw	1
 29827  00228A  6E46               	movwf	__rcon,c
 29828                           
 29829                           ;AES.c: 227: for(i=0;i<16;i++)
 29830  00228C  0E00               	movlw	0
 29831  00228E  0100               	movlb	0	; () banked
 29832  002290  6F7C               	movwf	AESEncode@i& (0+255),b
 29833  002292                     l7860:
 29834                           
 29835                           ; BSR set to: 0
 29836  002292  0E0F               	movlw	15
 29837  002294  657C               	cpfsgt	AESEncode@i& (0+255),b
 29838  002296  D001               	goto	l315
 29839  002298  D016               	goto	u6690
 29840  00229A                     l315:
 29841                           
 29842                           ; BSR set to: 0
 29843                           ;AES.c: 228: {
 29844                           ;AES.c: 229: block[i] ^= key[i];
 29845                           
 29846                           ; BSR set to: 0
 29847  00229A  517C               	movf	AESEncode@i& (0+255),w,b
 29848  00229C  0D01               	mullw	1
 29849  00229E  50F3               	movf	prodl,w,c
 29850  0022A0  2568               	addwf	AESEncode@key& (0+255),w,b
 29851  0022A2  6ED9               	movwf	fsr2l,c
 29852  0022A4  50F4               	movf	prodh,w,c
 29853  0022A6  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 29854  0022A8  6EDA               	movwf	fsr2h,c
 29855  0022AA  50DF               	movf	indf2,w,c
 29856  0022AC  6F6A               	movwf	??_AESEncode& (0+255),b
 29857  0022AE  517C               	movf	AESEncode@i& (0+255),w,b
 29858  0022B0  0D01               	mullw	1
 29859  0022B2  50F3               	movf	prodl,w,c
 29860  0022B4  2566               	addwf	AESEncode@block& (0+255),w,b
 29861  0022B6  6ED9               	movwf	fsr2l,c
 29862  0022B8  50F4               	movf	prodh,w,c
 29863  0022BA  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29864  0022BC  6EDA               	movwf	fsr2h,c
 29865  0022BE  516A               	movf	??_AESEncode& (0+255),w,b
 29866  0022C0  1ADF               	xorwf	indf2,f,c
 29867                           
 29868                           ; BSR set to: 0
 29869  0022C2  2B7C               	incf	AESEncode@i& (0+255),f,b
 29870  0022C4  D7E6               	goto	l7860
 29871  0022C6                     u6690:
 29872                           
 29873                           ;AES.c: 233: {
 29874                           ;AES.c: 236: for(i=0;i<16;i++)
 29875                           
 29876                           ; BSR set to: 0
 29877                           
 29878                           ;AES.c: 230: }
 29879                           ;AES.c: 232: do
 29880                           
 29881                           ; BSR set to: 0
 29882  0022C6  0E00               	movlw	0
 29883  0022C8  0100               	movlb	0	; () banked
 29884  0022CA  6F7C               	movwf	AESEncode@i& (0+255),b
 29885  0022CC                     l7872:
 29886                           
 29887                           ; BSR set to: 0
 29888  0022CC  0E0F               	movlw	15
 29889  0022CE  657C               	cpfsgt	AESEncode@i& (0+255),b
 29890  0022D0  D001               	goto	l318
 29891  0022D2  D022               	goto	u6710
 29892  0022D4                     l318:
 29893                           
 29894                           ; BSR set to: 0
 29895                           ;AES.c: 237: {
 29896                           ;AES.c: 238: block[i]=STable[block[i]];
 29897                           
 29898                           ; BSR set to: 0
 29899  0022D4  517C               	movf	AESEncode@i& (0+255),w,b
 29900  0022D6  0D01               	mullw	1
 29901  0022D8  50F3               	movf	prodl,w,c
 29902  0022DA  2566               	addwf	AESEncode@block& (0+255),w,b
 29903  0022DC  6ED9               	movwf	fsr2l,c
 29904  0022DE  50F4               	movf	prodh,w,c
 29905  0022E0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29906  0022E2  6EDA               	movwf	fsr2h,c
 29907  0022E4  50DF               	movf	indf2,w,c
 29908  0022E6  6F6A               	movwf	??_AESEncode& (0+255),b
 29909  0022E8  516A               	movf	??_AESEncode& (0+255),w,b
 29910  0022EA  0D01               	mullw	1
 29911  0022EC  0E1F               	movlw	low _STable
 29912  0022EE  24F3               	addwf	prodl,w,c
 29913  0022F0  6EF6               	movwf	tblptrl,c
 29914  0022F2  0EFE               	movlw	high _STable
 29915  0022F4  20F4               	addwfc	prodh,w,c
 29916  0022F6  6EF7               	movwf	tblptrh,c
 29917  0022F8                     	if	1	;There are 3 active tblptr bytes
 29918  0022F8  6AF8               	clrf	tblptru,c
 29919  0022FA  0E00               	movlw	low (__mediumconst shr (0+16))
 29920  0022FC  22F8               	addwfc	tblptru,f,c
 29921  0022FE                     	endif
 29922  0022FE  517C               	movf	AESEncode@i& (0+255),w,b
 29923  002300  0D01               	mullw	1
 29924  002302  50F3               	movf	prodl,w,c
 29925  002304  2566               	addwf	AESEncode@block& (0+255),w,b
 29926  002306  6ED9               	movwf	fsr2l,c
 29927  002308  50F4               	movf	prodh,w,c
 29928  00230A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29929  00230C  6EDA               	movwf	fsr2h,c
 29930  00230E  0008               	tblrd		*
 29931  002310  CFF5 FFDF          	movff	tablat,indf2
 29932                           
 29933                           ; BSR set to: 0
 29934  002314  2B7C               	incf	AESEncode@i& (0+255),f,b
 29935  002316  D7DA               	goto	l7872
 29936  002318                     u6710:
 29937                           
 29938                           ; BSR set to: 0
 29939                           ;AES.c: 239: }
 29940                           ;AES.c: 242: EncodeShiftRow(block);
 29941                           
 29942                           ; BSR set to: 0
 29943  002318  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29944  00231C  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29945  002320  ECE4  F021         	call	_EncodeShiftRow	;wreg free
 29946                           
 29947                           ;AES.c: 245: if(_roundCounter != 1)
 29948  002324  0101               	movlb	1	; () banked
 29949  002326  0572               	decf	__roundCounter& (0+255),w,b
 29950  002328  B4D8               	btfsc	status,2,c
 29951  00232A  D127               	goto	u6770
 29952                           
 29953                           ; BSR set to: 1
 29954                           ;AES.c: 246: {
 29955                           ;AES.c: 247: unsigned char aux,aux1,aux2,aux3;
 29956                           ;AES.c: 249: for(i=0;i<16;i+=4)
 29957  00232C  0E00               	movlw	0
 29958  00232E  0100               	movlb	0	; () banked
 29959  002330  6F7C               	movwf	AESEncode@i& (0+255),b
 29960  002332                     l7888:
 29961                           
 29962                           ; BSR set to: 0
 29963  002332  0E0F               	movlw	15
 29964  002334  657C               	cpfsgt	AESEncode@i& (0+255),b
 29965  002336  D001               	goto	l321
 29966  002338  D120               	goto	u6770
 29967  00233A                     l321:
 29968                           
 29969                           ; BSR set to: 0
 29970                           ;AES.c: 250: {
 29971                           ;AES.c: 251: aux1= block[i+0] ^ block[i+1];
 29972                           
 29973                           ; BSR set to: 0
 29974  00233A  517C               	movf	AESEncode@i& (0+255),w,b
 29975  00233C  6F6A               	movwf	??_AESEncode& (0+255),b
 29976  00233E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 29977  002340  0E01               	movlw	1
 29978  002342  276A               	addwf	??_AESEncode& (0+255),f,b
 29979  002344  0E00               	movlw	0
 29980  002346  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 29981  002348  516A               	movf	??_AESEncode& (0+255),w,b
 29982  00234A  2566               	addwf	AESEncode@block& (0+255),w,b
 29983  00234C  6ED9               	movwf	fsr2l,c
 29984  00234E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 29985  002350  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29986  002352  6EDA               	movwf	fsr2h,c
 29987  002354  50DF               	movf	indf2,w,c
 29988  002356  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 29989  002358  517C               	movf	AESEncode@i& (0+255),w,b
 29990  00235A  2566               	addwf	AESEncode@block& (0+255),w,b
 29991  00235C  6ED9               	movwf	fsr2l,c
 29992  00235E  0E00               	movlw	0
 29993  002360  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29994  002362  6EDA               	movwf	fsr2h,c
 29995  002364  50DF               	movf	indf2,w,c
 29996  002366  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29997  002368  6F7A               	movwf	AESEncode@aux1& (0+255),b
 29998                           
 29999                           ;AES.c: 252: aux3= block[i+2]^block[i+3];
 30000  00236A  517C               	movf	AESEncode@i& (0+255),w,b
 30001  00236C  6F6A               	movwf	??_AESEncode& (0+255),b
 30002  00236E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30003  002370  0E03               	movlw	3
 30004  002372  276A               	addwf	??_AESEncode& (0+255),f,b
 30005  002374  0E00               	movlw	0
 30006  002376  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 30007  002378  516A               	movf	??_AESEncode& (0+255),w,b
 30008  00237A  2566               	addwf	AESEncode@block& (0+255),w,b
 30009  00237C  6ED9               	movwf	fsr2l,c
 30010  00237E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30011  002380  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30012  002382  6EDA               	movwf	fsr2h,c
 30013  002384  50DF               	movf	indf2,w,c
 30014  002386  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 30015  002388  517C               	movf	AESEncode@i& (0+255),w,b
 30016  00238A  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 30017  00238C  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 30018  00238E  0E02               	movlw	2
 30019  002390  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 30020  002392  0E00               	movlw	0
 30021  002394  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 30022  002396  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 30023  002398  2566               	addwf	AESEncode@block& (0+255),w,b
 30024  00239A  6ED9               	movwf	fsr2l,c
 30025  00239C  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 30026  00239E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30027  0023A0  6EDA               	movwf	fsr2h,c
 30028  0023A2  50DF               	movf	indf2,w,c
 30029  0023A4  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30030  0023A6  6F7B               	movwf	AESEncode@aux3& (0+255),b
 30031                           
 30032                           ; BSR set to: 0
 30033                           ;AES.c: 253: aux = aux1 ^ aux3;
 30034  0023A8  517A               	movf	AESEncode@aux1& (0+255),w,b
 30035  0023AA  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 30036  0023AC  6F78               	movwf	AESEncode@aux& (0+255),b
 30037                           
 30038                           ; BSR set to: 0
 30039                           ;AES.c: 254: aux2= block[i+2]^block[i+1];
 30040  0023AE  517C               	movf	AESEncode@i& (0+255),w,b
 30041  0023B0  6F6A               	movwf	??_AESEncode& (0+255),b
 30042  0023B2  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30043  0023B4  0E01               	movlw	1
 30044  0023B6  276A               	addwf	??_AESEncode& (0+255),f,b
 30045  0023B8  0E00               	movlw	0
 30046  0023BA  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 30047  0023BC  516A               	movf	??_AESEncode& (0+255),w,b
 30048  0023BE  2566               	addwf	AESEncode@block& (0+255),w,b
 30049  0023C0  6ED9               	movwf	fsr2l,c
 30050  0023C2  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30051  0023C4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30052  0023C6  6EDA               	movwf	fsr2h,c
 30053  0023C8  50DF               	movf	indf2,w,c
 30054  0023CA  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 30055  0023CC  517C               	movf	AESEncode@i& (0+255),w,b
 30056  0023CE  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 30057  0023D0  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 30058  0023D2  0E02               	movlw	2
 30059  0023D4  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 30060  0023D6  0E00               	movlw	0
 30061  0023D8  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 30062  0023DA  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 30063  0023DC  2566               	addwf	AESEncode@block& (0+255),w,b
 30064  0023DE  6ED9               	movwf	fsr2l,c
 30065  0023E0  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 30066  0023E2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30067  0023E4  6EDA               	movwf	fsr2h,c
 30068  0023E6  50DF               	movf	indf2,w,c
 30069  0023E8  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30070  0023EA  6F79               	movwf	AESEncode@aux2& (0+255),b
 30071                           
 30072                           ;AES.c: 256: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 30073  0023EC  0E7F               	movlw	127
 30074  0023EE  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 30075  0023F0  D00C               	goto	l324
 30076                           
 30077                           ; BSR set to: 0
 30078  0023F2  0E1B               	movlw	27
 30079  0023F4  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 30080  0023F8  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30081  0023FA  90D8               	bcf	status,0,c
 30082  0023FC  376A               	rlcf	??_AESEncode& (0+255),f,b
 30083  0023FE  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30084  002400  196A               	xorwf	??_AESEncode& (0+255),w,b
 30085  002402  6F72               	movwf	_AESEncode$514& (0+255),b
 30086  002404  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30087  002406  6F73               	movwf	(_AESEncode$514+1)& (0+255),b
 30088  002408  D005               	goto	l326
 30089  00240A                     l324:
 30090                           
 30091                           ; BSR set to: 0
 30092                           
 30093                           ; BSR set to: 0
 30094  00240A  90D8               	bcf	status,0,c
 30095  00240C  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 30096  00240E  6F72               	movwf	_AESEncode$514& (0+255),b
 30097  002410  6B73               	clrf	(_AESEncode$514+1)& (0+255),b
 30098  002412  3773               	rlcf	(_AESEncode$514+1)& (0+255),f,b
 30099  002414                     l326:
 30100                           
 30101                           ; BSR set to: 0
 30102                           
 30103                           ; BSR set to: 0
 30104  002414  C072  F07A         	movff	_AESEncode$514,AESEncode@aux1
 30105                           
 30106                           ;AES.c: 257: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 30107  002418  0E7F               	movlw	127
 30108  00241A  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 30109  00241C  D00C               	goto	l328
 30110                           
 30111                           ; BSR set to: 0
 30112  00241E  0E1B               	movlw	27
 30113  002420  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 30114  002424  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30115  002426  90D8               	bcf	status,0,c
 30116  002428  376A               	rlcf	??_AESEncode& (0+255),f,b
 30117  00242A  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30118  00242C  196A               	xorwf	??_AESEncode& (0+255),w,b
 30119  00242E  6F74               	movwf	_AESEncode$515& (0+255),b
 30120  002430  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30121  002432  6F75               	movwf	(_AESEncode$515+1)& (0+255),b
 30122  002434  D005               	goto	l330
 30123  002436                     l328:
 30124                           
 30125                           ; BSR set to: 0
 30126                           
 30127                           ; BSR set to: 0
 30128  002436  90D8               	bcf	status,0,c
 30129  002438  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 30130  00243A  6F74               	movwf	_AESEncode$515& (0+255),b
 30131  00243C  6B75               	clrf	(_AESEncode$515+1)& (0+255),b
 30132  00243E  3775               	rlcf	(_AESEncode$515+1)& (0+255),f,b
 30133  002440                     l330:
 30134                           
 30135                           ; BSR set to: 0
 30136                           
 30137                           ; BSR set to: 0
 30138  002440  C074  F079         	movff	_AESEncode$515,AESEncode@aux2
 30139                           
 30140                           ;AES.c: 258: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 30141  002444  0E7F               	movlw	127
 30142  002446  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 30143  002448  D00C               	goto	l332
 30144                           
 30145                           ; BSR set to: 0
 30146  00244A  0E1B               	movlw	27
 30147  00244C  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 30148  002450  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30149  002452  90D8               	bcf	status,0,c
 30150  002454  376A               	rlcf	??_AESEncode& (0+255),f,b
 30151  002456  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30152  002458  196A               	xorwf	??_AESEncode& (0+255),w,b
 30153  00245A  6F76               	movwf	_AESEncode$516& (0+255),b
 30154  00245C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30155  00245E  6F77               	movwf	(_AESEncode$516+1)& (0+255),b
 30156  002460  D005               	goto	l334
 30157  002462                     l332:
 30158                           
 30159                           ; BSR set to: 0
 30160                           
 30161                           ; BSR set to: 0
 30162  002462  90D8               	bcf	status,0,c
 30163  002464  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 30164  002466  6F76               	movwf	_AESEncode$516& (0+255),b
 30165  002468  6B77               	clrf	(_AESEncode$516+1)& (0+255),b
 30166  00246A  3777               	rlcf	(_AESEncode$516+1)& (0+255),f,b
 30167  00246C                     l334:
 30168                           
 30169                           ; BSR set to: 0
 30170                           
 30171                           ; BSR set to: 0
 30172  00246C  C076  F07B         	movff	_AESEncode$516,AESEncode@aux3
 30173                           
 30174                           ; BSR set to: 0
 30175                           ;AES.c: 260: block[i+0]= aux^aux1^block[i+0];
 30176  002470  517C               	movf	AESEncode@i& (0+255),w,b
 30177  002472  2566               	addwf	AESEncode@block& (0+255),w,b
 30178  002474  6ED9               	movwf	fsr2l,c
 30179  002476  0E00               	movlw	0
 30180  002478  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30181  00247A  6EDA               	movwf	fsr2h,c
 30182  00247C  517C               	movf	AESEncode@i& (0+255),w,b
 30183  00247E  2566               	addwf	AESEncode@block& (0+255),w,b
 30184  002480  6EE9               	movwf	fsr0l,c
 30185  002482  0E00               	movlw	0
 30186  002484  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30187  002486  6EEA               	movwf	fsr0h,c
 30188  002488  50EF               	movf	indf0,w,c
 30189  00248A  1978               	xorwf	AESEncode@aux& (0+255),w,b
 30190  00248C  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 30191  00248E  6EDF               	movwf	indf2,c
 30192                           
 30193                           ; BSR set to: 0
 30194                           ;AES.c: 261: block[i+1]= aux^aux2^block[i+1];
 30195  002490  517C               	movf	AESEncode@i& (0+255),w,b
 30196  002492  6F6A               	movwf	??_AESEncode& (0+255),b
 30197  002494  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30198  002496  0E01               	movlw	1
 30199  002498  276A               	addwf	??_AESEncode& (0+255),f,b
 30200  00249A  0E00               	movlw	0
 30201  00249C  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 30202  00249E  516A               	movf	??_AESEncode& (0+255),w,b
 30203  0024A0  2566               	addwf	AESEncode@block& (0+255),w,b
 30204  0024A2  6ED9               	movwf	fsr2l,c
 30205  0024A4  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30206  0024A6  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30207  0024A8  6EDA               	movwf	fsr2h,c
 30208  0024AA  517C               	movf	AESEncode@i& (0+255),w,b
 30209  0024AC  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 30210  0024AE  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 30211  0024B0  0E01               	movlw	1
 30212  0024B2  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 30213  0024B4  0E00               	movlw	0
 30214  0024B6  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 30215  0024B8  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 30216  0024BA  2566               	addwf	AESEncode@block& (0+255),w,b
 30217  0024BC  6EE9               	movwf	fsr0l,c
 30218  0024BE  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 30219  0024C0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30220  0024C2  6EEA               	movwf	fsr0h,c
 30221  0024C4  50EF               	movf	indf0,w,c
 30222  0024C6  1978               	xorwf	AESEncode@aux& (0+255),w,b
 30223  0024C8  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 30224  0024CA  6EDF               	movwf	indf2,c
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;AES.c: 262: block[i+2]= aux^aux3^block[i+2];
 30228  0024CC  517C               	movf	AESEncode@i& (0+255),w,b
 30229  0024CE  6F6A               	movwf	??_AESEncode& (0+255),b
 30230  0024D0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30231  0024D2  0E02               	movlw	2
 30232  0024D4  276A               	addwf	??_AESEncode& (0+255),f,b
 30233  0024D6  0E00               	movlw	0
 30234  0024D8  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 30235  0024DA  516A               	movf	??_AESEncode& (0+255),w,b
 30236  0024DC  2566               	addwf	AESEncode@block& (0+255),w,b
 30237  0024DE  6ED9               	movwf	fsr2l,c
 30238  0024E0  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30239  0024E2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30240  0024E4  6EDA               	movwf	fsr2h,c
 30241  0024E6  517C               	movf	AESEncode@i& (0+255),w,b
 30242  0024E8  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 30243  0024EA  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 30244  0024EC  0E02               	movlw	2
 30245  0024EE  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 30246  0024F0  0E00               	movlw	0
 30247  0024F2  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 30248  0024F4  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 30249  0024F6  2566               	addwf	AESEncode@block& (0+255),w,b
 30250  0024F8  6EE9               	movwf	fsr0l,c
 30251  0024FA  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 30252  0024FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30253  0024FE  6EEA               	movwf	fsr0h,c
 30254  002500  50EF               	movf	indf0,w,c
 30255  002502  1978               	xorwf	AESEncode@aux& (0+255),w,b
 30256  002504  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 30257  002506  6EDF               	movwf	indf2,c
 30258                           
 30259                           ; BSR set to: 0
 30260                           ;AES.c: 263: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30261  002508  517C               	movf	AESEncode@i& (0+255),w,b
 30262  00250A  6F6A               	movwf	??_AESEncode& (0+255),b
 30263  00250C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 30264  00250E  0E03               	movlw	3
 30265  002510  276A               	addwf	??_AESEncode& (0+255),f,b
 30266  002512  0E00               	movlw	0
 30267  002514  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 30268  002516  516A               	movf	??_AESEncode& (0+255),w,b
 30269  002518  2566               	addwf	AESEncode@block& (0+255),w,b
 30270  00251A  6ED9               	movwf	fsr2l,c
 30271  00251C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 30272  00251E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30273  002520  6EDA               	movwf	fsr2h,c
 30274  002522  517C               	movf	AESEncode@i& (0+255),w,b
 30275  002524  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 30276  002526  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 30277  002528  0E02               	movlw	2
 30278  00252A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 30279  00252C  0E00               	movlw	0
 30280  00252E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 30281  002530  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 30282  002532  2566               	addwf	AESEncode@block& (0+255),w,b
 30283  002534  6EE9               	movwf	fsr0l,c
 30284  002536  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 30285  002538  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30286  00253A  6EEA               	movwf	fsr0h,c
 30287  00253C  50EF               	movf	indf0,w,c
 30288  00253E  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 30289  002540  517C               	movf	AESEncode@i& (0+255),w,b
 30290  002542  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 30291  002544  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 30292  002546  0E01               	movlw	1
 30293  002548  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 30294  00254A  0E00               	movlw	0
 30295  00254C  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 30296  00254E  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 30297  002550  2566               	addwf	AESEncode@block& (0+255),w,b
 30298  002552  6EE9               	movwf	fsr0l,c
 30299  002554  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 30300  002556  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30301  002558  6EEA               	movwf	fsr0h,c
 30302  00255A  50EF               	movf	indf0,w,c
 30303  00255C  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 30304  00255E  517C               	movf	AESEncode@i& (0+255),w,b
 30305  002560  2566               	addwf	AESEncode@block& (0+255),w,b
 30306  002562  6EE9               	movwf	fsr0l,c
 30307  002564  0E00               	movlw	0
 30308  002566  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30309  002568  6EEA               	movwf	fsr0h,c
 30310  00256A  50EF               	movf	indf0,w,c
 30311  00256C  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30312  00256E  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30313  002570  1978               	xorwf	AESEncode@aux& (0+255),w,b
 30314  002572  6EDF               	movwf	indf2,c
 30315  002574  0E04               	movlw	4
 30316  002576  277C               	addwf	AESEncode@i& (0+255),f,b
 30317  002578  D6DC               	goto	l7888
 30318  00257A                     u6770:
 30319                           
 30320                           ;AES.c: 264: }
 30321                           ;AES.c: 265: }
 30322                           ;AES.c: 267: EncKeySchedule(key);
 30323                           
 30324                           ; BSR set to: 0
 30325                           
 30326                           ; BSR set to: 0
 30327  00257A  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 30328  00257E  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 30329  002582  ECC2  F015         	call	_EncKeySchedule	;wreg free
 30330                           
 30331                           ;AES.c: 270: for(i=0;i<16;i++)
 30332  002586  0E00               	movlw	0
 30333  002588  0100               	movlb	0	; () banked
 30334  00258A  6F7C               	movwf	AESEncode@i& (0+255),b
 30335  00258C                     l7928:
 30336                           
 30337                           ; BSR set to: 0
 30338  00258C  0E0F               	movlw	15
 30339  00258E  657C               	cpfsgt	AESEncode@i& (0+255),b
 30340  002590  D001               	goto	l335
 30341  002592  D016               	goto	u6790
 30342  002594                     l335:
 30343                           
 30344                           ; BSR set to: 0
 30345                           ;AES.c: 271: {
 30346                           ;AES.c: 272: block[i] ^= key[i];
 30347                           
 30348                           ; BSR set to: 0
 30349  002594  517C               	movf	AESEncode@i& (0+255),w,b
 30350  002596  0D01               	mullw	1
 30351  002598  50F3               	movf	prodl,w,c
 30352  00259A  2568               	addwf	AESEncode@key& (0+255),w,b
 30353  00259C  6ED9               	movwf	fsr2l,c
 30354  00259E  50F4               	movf	prodh,w,c
 30355  0025A0  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 30356  0025A2  6EDA               	movwf	fsr2h,c
 30357  0025A4  50DF               	movf	indf2,w,c
 30358  0025A6  6F6A               	movwf	??_AESEncode& (0+255),b
 30359  0025A8  517C               	movf	AESEncode@i& (0+255),w,b
 30360  0025AA  0D01               	mullw	1
 30361  0025AC  50F3               	movf	prodl,w,c
 30362  0025AE  2566               	addwf	AESEncode@block& (0+255),w,b
 30363  0025B0  6ED9               	movwf	fsr2l,c
 30364  0025B2  50F4               	movf	prodh,w,c
 30365  0025B4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30366  0025B6  6EDA               	movwf	fsr2h,c
 30367  0025B8  516A               	movf	??_AESEncode& (0+255),w,b
 30368  0025BA  1ADF               	xorwf	indf2,f,c
 30369                           
 30370                           ; BSR set to: 0
 30371  0025BC  2B7C               	incf	AESEncode@i& (0+255),f,b
 30372  0025BE  D7E6               	goto	l7928
 30373  0025C0                     u6790:
 30374                           
 30375                           ; BSR set to: 0
 30376                           ;AES.c: 273: }
 30377                           ;AES.c: 275: _roundCounter--;
 30378                           
 30379                           ; BSR set to: 0
 30380  0025C0  0101               	movlb	1	; () banked
 30381  0025C2  0772               	decf	__roundCounter& (0+255),f,b
 30382                           
 30383                           ; BSR set to: 1
 30384                           ;AES.c: 276: }
 30385                           ;AES.c: 277: while(_roundCounter !=0);
 30386  0025C4  5172               	movf	__roundCounter& (0+255),w,b
 30387  0025C6  B4D8               	btfsc	status,2,c
 30388  0025C8  0012               	return	
 30389  0025CA  D67D               	goto	u6690
 30390  0025CC                     __end_of_AESEncode:
 30391                           	opt stack 0
 30392                           tosu	equ	0xFFF
 30393                           tosh	equ	0xFFE
 30394                           tosl	equ	0xFFD
 30395                           pclath	equ	0xFFA
 30396                           tblptru	equ	0xFF8
 30397                           tblptrh	equ	0xFF7
 30398                           tblptrl	equ	0xFF6
 30399                           tablat	equ	0xFF5
 30400                           prodh	equ	0xFF4
 30401                           prodl	equ	0xFF3
 30402                           intcon	equ	0xFF2
 30403                           intcon2	equ	0xFF1
 30404                           intcon3	equ	0xFF0
 30405                           indf0	equ	0xFEF
 30406                           postinc0	equ	0xFEE
 30407                           plusw0	equ	0xFEB
 30408                           fsr0h	equ	0xFEA
 30409                           fsr0l	equ	0xFE9
 30410                           wreg	equ	0xFE8
 30411                           postinc1	equ	0xFE6
 30412                           postdec1	equ	0xFE5
 30413                           plusw1	equ	0xFE3
 30414                           fsr1h	equ	0xFE2
 30415                           fsr1l	equ	0xFE1
 30416                           indf2	equ	0xFDF
 30417                           postinc2	equ	0xFDE
 30418                           postdec2	equ	0xFDD
 30419                           plusw2	equ	0xFDB
 30420                           fsr2h	equ	0xFDA
 30421                           fsr2l	equ	0xFD9
 30422                           status	equ	0xFD8
 30423                           
 30424 ;; *************** function _EncodeShiftRow *****************
 30425 ;; Defined at:
 30426 ;;		line 353 in file "mcc_generated_files/LoRaWAN/AES.c"
 30427 ;; Parameters:    Size  Location     Type
 30428 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 30429 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 30430 ;;		 -> loRa(231), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 30431 ;; Auto vars:     Size  Location     Type
 30432 ;;  temp            1    2[BANK0 ] unsigned char 
 30433 ;; Return value:  Size  Location     Type
 30434 ;;                  1    wreg      void 
 30435 ;; Registers used:
 30436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30437 ;; Tracked objects:
 30438 ;;		On entry : 0/0
 30439 ;;		On exit  : 0/0
 30440 ;;		Unchanged: 0/0
 30441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30446 ;;Total ram usage:        3 bytes
 30447 ;; Hardware stack levels used:    1
 30448 ;; Hardware stack levels required when called:    7
 30449 ;; This function calls:
 30450 ;;		Nothing
 30451 ;; This function is called by:
 30452 ;;		_AESEncode
 30453 ;; This function uses a non-reentrant model
 30454 ;;
 30455                           
 30456                           	psect	text146
 30457  0043C8                     __ptext146:
 30458                           	opt stack 0
 30459  0043C8                     _EncodeShiftRow:
 30460                           	opt stack 18
 30461                           
 30462                           ;AES.c: 355: unsigned char temp;
 30463                           ;AES.c: 360: temp=stateTable[1];
 30464                           
 30465                           ; BSR set to: 1
 30466                           ;incstack = 0
 30467  0043C8  0100               	movlb	0	; () banked
 30468  0043CA  EE20 F001          	lfsr	2,1
 30469  0043CE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30470  0043D0  26D9               	addwf	fsr2l,f,c
 30471  0043D2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30472  0043D4  22DA               	addwfc	fsr2h,f,c
 30473  0043D6  50DF               	movf	indf2,w,c
 30474  0043D8  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 30475                           
 30476                           ; BSR set to: 0
 30477                           ;AES.c: 361: stateTable[1]=stateTable[5];
 30478  0043DA  EE20 F005          	lfsr	2,5
 30479  0043DE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30480  0043E0  26D9               	addwf	fsr2l,f,c
 30481  0043E2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30482  0043E4  22DA               	addwfc	fsr2h,f,c
 30483  0043E6  EE00 F001          	lfsr	0,1
 30484  0043EA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30485  0043EC  26E9               	addwf	fsr0l,f,c
 30486  0043EE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30487  0043F0  22EA               	addwfc	fsr0h,f,c
 30488  0043F2  CFDF FFEF          	movff	indf2,indf0
 30489                           
 30490                           ; BSR set to: 0
 30491                           ;AES.c: 362: stateTable[5]=stateTable[9];
 30492  0043F6  EE20 F009          	lfsr	2,9
 30493  0043FA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30494  0043FC  26D9               	addwf	fsr2l,f,c
 30495  0043FE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30496  004400  22DA               	addwfc	fsr2h,f,c
 30497  004402  EE00 F005          	lfsr	0,5
 30498  004406  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30499  004408  26E9               	addwf	fsr0l,f,c
 30500  00440A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30501  00440C  22EA               	addwfc	fsr0h,f,c
 30502  00440E  CFDF FFEF          	movff	indf2,indf0
 30503                           
 30504                           ; BSR set to: 0
 30505                           ;AES.c: 363: stateTable[9]=stateTable[13];
 30506  004412  EE20 F00D          	lfsr	2,13
 30507  004416  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30508  004418  26D9               	addwf	fsr2l,f,c
 30509  00441A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30510  00441C  22DA               	addwfc	fsr2h,f,c
 30511  00441E  EE00 F009          	lfsr	0,9
 30512  004422  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30513  004424  26E9               	addwf	fsr0l,f,c
 30514  004426  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30515  004428  22EA               	addwfc	fsr0h,f,c
 30516  00442A  CFDF FFEF          	movff	indf2,indf0
 30517                           
 30518                           ; BSR set to: 0
 30519                           ;AES.c: 364: stateTable[13]=temp;
 30520  00442E  EE20 F00D          	lfsr	2,13
 30521  004432  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30522  004434  26D9               	addwf	fsr2l,f,c
 30523  004436  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30524  004438  22DA               	addwfc	fsr2h,f,c
 30525  00443A  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;AES.c: 367: temp=stateTable[2];
 30529  00443E  EE20 F002          	lfsr	2,2
 30530  004442  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30531  004444  26D9               	addwf	fsr2l,f,c
 30532  004446  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30533  004448  22DA               	addwfc	fsr2h,f,c
 30534  00444A  50DF               	movf	indf2,w,c
 30535  00444C  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 30536                           
 30537                           ; BSR set to: 0
 30538                           ;AES.c: 368: stateTable[2]=stateTable[10];
 30539  00444E  EE20 F00A          	lfsr	2,10
 30540  004452  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30541  004454  26D9               	addwf	fsr2l,f,c
 30542  004456  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30543  004458  22DA               	addwfc	fsr2h,f,c
 30544  00445A  EE00 F002          	lfsr	0,2
 30545  00445E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30546  004460  26E9               	addwf	fsr0l,f,c
 30547  004462  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30548  004464  22EA               	addwfc	fsr0h,f,c
 30549  004466  CFDF FFEF          	movff	indf2,indf0
 30550                           
 30551                           ;AES.c: 369: stateTable[10]=temp;
 30552  00446A  EE20 F00A          	lfsr	2,10
 30553  00446E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30554  004470  26D9               	addwf	fsr2l,f,c
 30555  004472  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30556  004474  22DA               	addwfc	fsr2h,f,c
 30557  004476  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 30558                           
 30559                           ;AES.c: 370: temp=stateTable[14];
 30560  00447A  EE20 F00E          	lfsr	2,14
 30561  00447E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30562  004480  26D9               	addwf	fsr2l,f,c
 30563  004482  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30564  004484  22DA               	addwfc	fsr2h,f,c
 30565  004486  50DF               	movf	indf2,w,c
 30566  004488  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 30567                           
 30568                           ; BSR set to: 0
 30569                           ;AES.c: 371: stateTable[14]=stateTable[6];
 30570  00448A  EE20 F006          	lfsr	2,6
 30571  00448E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30572  004490  26D9               	addwf	fsr2l,f,c
 30573  004492  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30574  004494  22DA               	addwfc	fsr2h,f,c
 30575  004496  EE00 F00E          	lfsr	0,14
 30576  00449A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30577  00449C  26E9               	addwf	fsr0l,f,c
 30578  00449E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30579  0044A0  22EA               	addwfc	fsr0h,f,c
 30580  0044A2  CFDF FFEF          	movff	indf2,indf0
 30581                           
 30582                           ; BSR set to: 0
 30583                           ;AES.c: 372: stateTable[6]=temp;
 30584  0044A6  EE20 F006          	lfsr	2,6
 30585  0044AA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30586  0044AC  26D9               	addwf	fsr2l,f,c
 30587  0044AE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30588  0044B0  22DA               	addwfc	fsr2h,f,c
 30589  0044B2  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 30590                           
 30591                           ; BSR set to: 0
 30592                           ;AES.c: 375: temp=stateTable[3];
 30593  0044B6  EE20 F003          	lfsr	2,3
 30594  0044BA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30595  0044BC  26D9               	addwf	fsr2l,f,c
 30596  0044BE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30597  0044C0  22DA               	addwfc	fsr2h,f,c
 30598  0044C2  50DF               	movf	indf2,w,c
 30599  0044C4  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 30600                           
 30601                           ; BSR set to: 0
 30602                           ;AES.c: 376: stateTable[3]=stateTable[15];
 30603  0044C6  EE20 F00F          	lfsr	2,15
 30604  0044CA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30605  0044CC  26D9               	addwf	fsr2l,f,c
 30606  0044CE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30607  0044D0  22DA               	addwfc	fsr2h,f,c
 30608  0044D2  EE00 F003          	lfsr	0,3
 30609  0044D6  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30610  0044D8  26E9               	addwf	fsr0l,f,c
 30611  0044DA  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30612  0044DC  22EA               	addwfc	fsr0h,f,c
 30613  0044DE  CFDF FFEF          	movff	indf2,indf0
 30614                           
 30615                           ; BSR set to: 0
 30616                           ;AES.c: 377: stateTable[15]=stateTable[11];
 30617  0044E2  EE20 F00B          	lfsr	2,11
 30618  0044E6  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30619  0044E8  26D9               	addwf	fsr2l,f,c
 30620  0044EA  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30621  0044EC  22DA               	addwfc	fsr2h,f,c
 30622  0044EE  EE00 F00F          	lfsr	0,15
 30623  0044F2  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30624  0044F4  26E9               	addwf	fsr0l,f,c
 30625  0044F6  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30626  0044F8  22EA               	addwfc	fsr0h,f,c
 30627  0044FA  CFDF FFEF          	movff	indf2,indf0
 30628                           
 30629                           ; BSR set to: 0
 30630                           ;AES.c: 378: stateTable[11]=stateTable[7];
 30631  0044FE  EE20 F007          	lfsr	2,7
 30632  004502  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30633  004504  26D9               	addwf	fsr2l,f,c
 30634  004506  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30635  004508  22DA               	addwfc	fsr2h,f,c
 30636  00450A  EE00 F00B          	lfsr	0,11
 30637  00450E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30638  004510  26E9               	addwf	fsr0l,f,c
 30639  004512  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30640  004514  22EA               	addwfc	fsr0h,f,c
 30641  004516  CFDF FFEF          	movff	indf2,indf0
 30642                           
 30643                           ;AES.c: 379: stateTable[7]=temp;
 30644  00451A  EE20 F007          	lfsr	2,7
 30645  00451E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30646  004520  26D9               	addwf	fsr2l,f,c
 30647  004522  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30648  004524  22DA               	addwfc	fsr2h,f,c
 30649  004526  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 30650                           
 30651                           ; BSR set to: 0
 30652  00452A  0012               	return		;funcret
 30653  00452C                     __end_of_EncodeShiftRow:
 30654                           	opt stack 0
 30655                           tosu	equ	0xFFF
 30656                           tosh	equ	0xFFE
 30657                           tosl	equ	0xFFD
 30658                           pclath	equ	0xFFA
 30659                           tblptru	equ	0xFF8
 30660                           tblptrh	equ	0xFF7
 30661                           tblptrl	equ	0xFF6
 30662                           tablat	equ	0xFF5
 30663                           prodh	equ	0xFF4
 30664                           prodl	equ	0xFF3
 30665                           intcon	equ	0xFF2
 30666                           intcon2	equ	0xFF1
 30667                           intcon3	equ	0xFF0
 30668                           indf0	equ	0xFEF
 30669                           postinc0	equ	0xFEE
 30670                           plusw0	equ	0xFEB
 30671                           fsr0h	equ	0xFEA
 30672                           fsr0l	equ	0xFE9
 30673                           wreg	equ	0xFE8
 30674                           postinc1	equ	0xFE6
 30675                           postdec1	equ	0xFE5
 30676                           plusw1	equ	0xFE3
 30677                           fsr1h	equ	0xFE2
 30678                           fsr1l	equ	0xFE1
 30679                           indf2	equ	0xFDF
 30680                           postinc2	equ	0xFDE
 30681                           postdec2	equ	0xFDD
 30682                           plusw2	equ	0xFDB
 30683                           fsr2h	equ	0xFDA
 30684                           fsr2l	equ	0xFD9
 30685                           status	equ	0xFD8
 30686                           
 30687 ;; *************** function _EncKeySchedule *****************
 30688 ;; Defined at:
 30689 ;;		line 305 in file "mcc_generated_files/LoRaWAN/AES.c"
 30690 ;; Parameters:    Size  Location     Type
 30691 ;;  key             2    0[BANK0 ] PTR unsigned char 
 30692 ;;		 -> AESEncodeLoRa@useKey(16), 
 30693 ;; Auto vars:     Size  Location     Type
 30694 ;;		None
 30695 ;; Return value:  Size  Location     Type
 30696 ;;                  1    wreg      void 
 30697 ;; Registers used:
 30698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 30699 ;; Tracked objects:
 30700 ;;		On entry : 0/0
 30701 ;;		On exit  : 0/0
 30702 ;;		Unchanged: 0/0
 30703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30706 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30707 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30708 ;;Total ram usage:        6 bytes
 30709 ;; Hardware stack levels used:    1
 30710 ;; Hardware stack levels required when called:    7
 30711 ;; This function calls:
 30712 ;;		Nothing
 30713 ;; This function is called by:
 30714 ;;		_AESEncode
 30715 ;; This function uses a non-reentrant model
 30716 ;;
 30717                           
 30718                           	psect	text147
 30719  002B84                     __ptext147:
 30720                           	opt stack 0
 30721  002B84                     _EncKeySchedule:
 30722                           	opt stack 18
 30723                           
 30724                           ;AES.c: 308: key[0]^=STable[key[13]];
 30725                           
 30726                           ; BSR set to: 0
 30727                           ;incstack = 0
 30728  002B84  0100               	movlb	0	; () banked
 30729  002B86  EE20 F00D          	lfsr	2,13
 30730  002B8A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30731  002B8C  26D9               	addwf	fsr2l,f,c
 30732  002B8E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30733  002B90  22DA               	addwfc	fsr2h,f,c
 30734  002B92  50DF               	movf	indf2,w,c
 30735  002B94  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30736  002B96  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30737  002B98  0D01               	mullw	1
 30738  002B9A  0E1F               	movlw	low _STable
 30739  002B9C  24F3               	addwf	prodl,w,c
 30740  002B9E  6EF6               	movwf	tblptrl,c
 30741  002BA0  0EFE               	movlw	high _STable
 30742  002BA2  20F4               	addwfc	prodh,w,c
 30743  002BA4  6EF7               	movwf	tblptrh,c
 30744  002BA6                     	if	1	;There are 3 active tblptr bytes
 30745  002BA6  6AF8               	clrf	tblptru,c
 30746  002BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 30747  002BAA  22F8               	addwfc	tblptru,f,c
 30748  002BAC                     	endif
 30749  002BAC  0008               	tblrd		*
 30750  002BAE  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 30751  002BB2  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 30752  002BB6  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 30753  002BBA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30754  002BBC  1ADF               	xorwf	indf2,f,c
 30755                           
 30756                           ;AES.c: 309: key[1]^=STable[key[14]];
 30757  002BBE  EE20 F00E          	lfsr	2,14
 30758  002BC2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30759  002BC4  26D9               	addwf	fsr2l,f,c
 30760  002BC6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30761  002BC8  22DA               	addwfc	fsr2h,f,c
 30762  002BCA  50DF               	movf	indf2,w,c
 30763  002BCC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30764  002BCE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30765  002BD0  0D01               	mullw	1
 30766  002BD2  0E1F               	movlw	low _STable
 30767  002BD4  24F3               	addwf	prodl,w,c
 30768  002BD6  6EF6               	movwf	tblptrl,c
 30769  002BD8  0EFE               	movlw	high _STable
 30770  002BDA  20F4               	addwfc	prodh,w,c
 30771  002BDC  6EF7               	movwf	tblptrh,c
 30772  002BDE                     	if	1	;There are 3 active tblptr bytes
 30773  002BDE  6AF8               	clrf	tblptru,c
 30774  002BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30775  002BE2  22F8               	addwfc	tblptru,f,c
 30776  002BE4                     	endif
 30777  002BE4  0008               	tblrd		*
 30778  002BE6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 30779  002BEA  EE20 F001          	lfsr	2,1
 30780  002BEE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30781  002BF0  26D9               	addwf	fsr2l,f,c
 30782  002BF2  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30783  002BF4  22DA               	addwfc	fsr2h,f,c
 30784  002BF6  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30785  002BF8  1ADF               	xorwf	indf2,f,c
 30786                           
 30787                           ;AES.c: 310: key[2]^=STable[key[15]];
 30788  002BFA  EE20 F00F          	lfsr	2,15
 30789  002BFE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30790  002C00  26D9               	addwf	fsr2l,f,c
 30791  002C02  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30792  002C04  22DA               	addwfc	fsr2h,f,c
 30793  002C06  50DF               	movf	indf2,w,c
 30794  002C08  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30795  002C0A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30796  002C0C  0D01               	mullw	1
 30797  002C0E  0E1F               	movlw	low _STable
 30798  002C10  24F3               	addwf	prodl,w,c
 30799  002C12  6EF6               	movwf	tblptrl,c
 30800  002C14  0EFE               	movlw	high _STable
 30801  002C16  20F4               	addwfc	prodh,w,c
 30802  002C18  6EF7               	movwf	tblptrh,c
 30803  002C1A                     	if	1	;There are 3 active tblptr bytes
 30804  002C1A  6AF8               	clrf	tblptru,c
 30805  002C1C  0E00               	movlw	low (__mediumconst shr (0+16))
 30806  002C1E  22F8               	addwfc	tblptru,f,c
 30807  002C20                     	endif
 30808  002C20  0008               	tblrd		*
 30809  002C22  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 30810  002C26  EE20 F002          	lfsr	2,2
 30811  002C2A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30812  002C2C  26D9               	addwf	fsr2l,f,c
 30813  002C2E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30814  002C30  22DA               	addwfc	fsr2h,f,c
 30815  002C32  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30816  002C34  1ADF               	xorwf	indf2,f,c
 30817                           
 30818                           ;AES.c: 311: key[3]^=STable[key[12]];
 30819  002C36  EE20 F00C          	lfsr	2,12
 30820  002C3A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30821  002C3C  26D9               	addwf	fsr2l,f,c
 30822  002C3E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30823  002C40  22DA               	addwfc	fsr2h,f,c
 30824  002C42  50DF               	movf	indf2,w,c
 30825  002C44  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30826  002C46  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30827  002C48  0D01               	mullw	1
 30828  002C4A  0E1F               	movlw	low _STable
 30829  002C4C  24F3               	addwf	prodl,w,c
 30830  002C4E  6EF6               	movwf	tblptrl,c
 30831  002C50  0EFE               	movlw	high _STable
 30832  002C52  20F4               	addwfc	prodh,w,c
 30833  002C54  6EF7               	movwf	tblptrh,c
 30834  002C56                     	if	1	;There are 3 active tblptr bytes
 30835  002C56  6AF8               	clrf	tblptru,c
 30836  002C58  0E00               	movlw	low (__mediumconst shr (0+16))
 30837  002C5A  22F8               	addwfc	tblptru,f,c
 30838  002C5C                     	endif
 30839  002C5C  0008               	tblrd		*
 30840  002C5E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 30841  002C62  EE20 F003          	lfsr	2,3
 30842  002C66  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30843  002C68  26D9               	addwf	fsr2l,f,c
 30844  002C6A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30845  002C6C  22DA               	addwfc	fsr2h,f,c
 30846  002C6E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30847  002C70  1ADF               	xorwf	indf2,f,c
 30848                           
 30849                           ; BSR set to: 0
 30850                           ;AES.c: 313: key[0]^=_rcon;
 30851  002C72  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 30852  002C76  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 30853  002C7A  5046               	movf	__rcon,w,c
 30854  002C7C  1ADF               	xorwf	indf2,f,c
 30855                           
 30856                           ; BSR set to: 0
 30857                           ;AES.c: 314: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30858  002C7E  0E7F               	movlw	127
 30859  002C80  6446               	cpfsgt	__rcon,c
 30860  002C82  D00C               	goto	l342
 30861                           
 30862                           ; BSR set to: 0
 30863  002C84  0E1B               	movlw	27
 30864  002C86  C046  F062         	movff	__rcon,??_EncKeySchedule
 30865  002C8A  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30866  002C8C  90D8               	bcf	status,0,c
 30867  002C8E  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 30868  002C90  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30869  002C92  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 30870  002C94  6F64               	movwf	_EncKeySchedule$519& (0+255),b
 30871  002C96  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30872  002C98  6F65               	movwf	(_EncKeySchedule$519+1)& (0+255),b
 30873  002C9A  D005               	goto	l344
 30874  002C9C                     l342:
 30875                           
 30876                           ; BSR set to: 0
 30877                           
 30878                           ; BSR set to: 0
 30879  002C9C  90D8               	bcf	status,0,c
 30880  002C9E  3446               	rlcf	__rcon,w,c
 30881  002CA0  6F64               	movwf	_EncKeySchedule$519& (0+255),b
 30882  002CA2  6B65               	clrf	(_EncKeySchedule$519+1)& (0+255),b
 30883  002CA4  3765               	rlcf	(_EncKeySchedule$519+1)& (0+255),f,b
 30884  002CA6                     l344:
 30885                           
 30886                           ; BSR set to: 0
 30887                           
 30888                           ; BSR set to: 0
 30889  002CA6  C064  F046         	movff	_EncKeySchedule$519,__rcon
 30890                           
 30891                           ; BSR set to: 0
 30892                           ;AES.c: 317: key[4]^=key[0];
 30893  002CAA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 30894  002CAE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 30895  002CB2  50DF               	movf	indf2,w,c
 30896  002CB4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30897  002CB6  EE20 F004          	lfsr	2,4
 30898  002CBA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30899  002CBC  26D9               	addwf	fsr2l,f,c
 30900  002CBE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30901  002CC0  22DA               	addwfc	fsr2h,f,c
 30902  002CC2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30903  002CC4  1ADF               	xorwf	indf2,f,c
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;AES.c: 318: key[5]^=key[1];
 30907  002CC6  EE20 F001          	lfsr	2,1
 30908  002CCA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30909  002CCC  26D9               	addwf	fsr2l,f,c
 30910  002CCE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30911  002CD0  22DA               	addwfc	fsr2h,f,c
 30912  002CD2  50DF               	movf	indf2,w,c
 30913  002CD4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30914  002CD6  EE20 F005          	lfsr	2,5
 30915  002CDA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30916  002CDC  26D9               	addwf	fsr2l,f,c
 30917  002CDE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30918  002CE0  22DA               	addwfc	fsr2h,f,c
 30919  002CE2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30920  002CE4  1ADF               	xorwf	indf2,f,c
 30921                           
 30922                           ; BSR set to: 0
 30923                           ;AES.c: 319: key[6]^=key[2];
 30924  002CE6  EE20 F002          	lfsr	2,2
 30925  002CEA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30926  002CEC  26D9               	addwf	fsr2l,f,c
 30927  002CEE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30928  002CF0  22DA               	addwfc	fsr2h,f,c
 30929  002CF2  50DF               	movf	indf2,w,c
 30930  002CF4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30931  002CF6  EE20 F006          	lfsr	2,6
 30932  002CFA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30933  002CFC  26D9               	addwf	fsr2l,f,c
 30934  002CFE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30935  002D00  22DA               	addwfc	fsr2h,f,c
 30936  002D02  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30937  002D04  1ADF               	xorwf	indf2,f,c
 30938                           
 30939                           ; BSR set to: 0
 30940                           ;AES.c: 320: key[7]^=key[3];
 30941  002D06  EE20 F003          	lfsr	2,3
 30942  002D0A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30943  002D0C  26D9               	addwf	fsr2l,f,c
 30944  002D0E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30945  002D10  22DA               	addwfc	fsr2h,f,c
 30946  002D12  50DF               	movf	indf2,w,c
 30947  002D14  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30948  002D16  EE20 F007          	lfsr	2,7
 30949  002D1A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30950  002D1C  26D9               	addwf	fsr2l,f,c
 30951  002D1E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30952  002D20  22DA               	addwfc	fsr2h,f,c
 30953  002D22  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30954  002D24  1ADF               	xorwf	indf2,f,c
 30955                           
 30956                           ; BSR set to: 0
 30957                           ;AES.c: 323: key[8]^=key[4];
 30958  002D26  EE20 F004          	lfsr	2,4
 30959  002D2A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30960  002D2C  26D9               	addwf	fsr2l,f,c
 30961  002D2E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30962  002D30  22DA               	addwfc	fsr2h,f,c
 30963  002D32  50DF               	movf	indf2,w,c
 30964  002D34  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30965  002D36  EE20 F008          	lfsr	2,8
 30966  002D3A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30967  002D3C  26D9               	addwf	fsr2l,f,c
 30968  002D3E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30969  002D40  22DA               	addwfc	fsr2h,f,c
 30970  002D42  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30971  002D44  1ADF               	xorwf	indf2,f,c
 30972                           
 30973                           ; BSR set to: 0
 30974                           ;AES.c: 324: key[9]^=key[5];
 30975  002D46  EE20 F005          	lfsr	2,5
 30976  002D4A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30977  002D4C  26D9               	addwf	fsr2l,f,c
 30978  002D4E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30979  002D50  22DA               	addwfc	fsr2h,f,c
 30980  002D52  50DF               	movf	indf2,w,c
 30981  002D54  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30982  002D56  EE20 F009          	lfsr	2,9
 30983  002D5A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30984  002D5C  26D9               	addwf	fsr2l,f,c
 30985  002D5E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30986  002D60  22DA               	addwfc	fsr2h,f,c
 30987  002D62  5162               	movf	??_EncKeySchedule& (0+255),w,b
 30988  002D64  1ADF               	xorwf	indf2,f,c
 30989                           
 30990                           ; BSR set to: 0
 30991                           ;AES.c: 325: key[10]^=key[6];
 30992  002D66  EE20 F006          	lfsr	2,6
 30993  002D6A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 30994  002D6C  26D9               	addwf	fsr2l,f,c
 30995  002D6E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 30996  002D70  22DA               	addwfc	fsr2h,f,c
 30997  002D72  50DF               	movf	indf2,w,c
 30998  002D74  6F62               	movwf	??_EncKeySchedule& (0+255),b
 30999  002D76  EE20 F00A          	lfsr	2,10
 31000  002D7A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31001  002D7C  26D9               	addwf	fsr2l,f,c
 31002  002D7E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31003  002D80  22DA               	addwfc	fsr2h,f,c
 31004  002D82  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31005  002D84  1ADF               	xorwf	indf2,f,c
 31006                           
 31007                           ; BSR set to: 0
 31008                           ;AES.c: 326: key[11]^=key[7];
 31009  002D86  EE20 F007          	lfsr	2,7
 31010  002D8A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31011  002D8C  26D9               	addwf	fsr2l,f,c
 31012  002D8E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31013  002D90  22DA               	addwfc	fsr2h,f,c
 31014  002D92  50DF               	movf	indf2,w,c
 31015  002D94  6F62               	movwf	??_EncKeySchedule& (0+255),b
 31016  002D96  EE20 F00B          	lfsr	2,11
 31017  002D9A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31018  002D9C  26D9               	addwf	fsr2l,f,c
 31019  002D9E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31020  002DA0  22DA               	addwfc	fsr2h,f,c
 31021  002DA2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31022  002DA4  1ADF               	xorwf	indf2,f,c
 31023                           
 31024                           ; BSR set to: 0
 31025                           ;AES.c: 329: key[12]^=key[8];
 31026  002DA6  EE20 F008          	lfsr	2,8
 31027  002DAA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31028  002DAC  26D9               	addwf	fsr2l,f,c
 31029  002DAE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31030  002DB0  22DA               	addwfc	fsr2h,f,c
 31031  002DB2  50DF               	movf	indf2,w,c
 31032  002DB4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 31033  002DB6  EE20 F00C          	lfsr	2,12
 31034  002DBA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31035  002DBC  26D9               	addwf	fsr2l,f,c
 31036  002DBE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31037  002DC0  22DA               	addwfc	fsr2h,f,c
 31038  002DC2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31039  002DC4  1ADF               	xorwf	indf2,f,c
 31040                           
 31041                           ; BSR set to: 0
 31042                           ;AES.c: 330: key[13]^=key[9];
 31043  002DC6  EE20 F009          	lfsr	2,9
 31044  002DCA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31045  002DCC  26D9               	addwf	fsr2l,f,c
 31046  002DCE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31047  002DD0  22DA               	addwfc	fsr2h,f,c
 31048  002DD2  50DF               	movf	indf2,w,c
 31049  002DD4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 31050  002DD6  EE20 F00D          	lfsr	2,13
 31051  002DDA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31052  002DDC  26D9               	addwf	fsr2l,f,c
 31053  002DDE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31054  002DE0  22DA               	addwfc	fsr2h,f,c
 31055  002DE2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31056  002DE4  1ADF               	xorwf	indf2,f,c
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;AES.c: 331: key[14]^=key[10];
 31060  002DE6  EE20 F00A          	lfsr	2,10
 31061  002DEA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31062  002DEC  26D9               	addwf	fsr2l,f,c
 31063  002DEE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31064  002DF0  22DA               	addwfc	fsr2h,f,c
 31065  002DF2  50DF               	movf	indf2,w,c
 31066  002DF4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 31067  002DF6  EE20 F00E          	lfsr	2,14
 31068  002DFA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31069  002DFC  26D9               	addwf	fsr2l,f,c
 31070  002DFE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31071  002E00  22DA               	addwfc	fsr2h,f,c
 31072  002E02  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31073  002E04  1ADF               	xorwf	indf2,f,c
 31074                           
 31075                           ; BSR set to: 0
 31076                           ;AES.c: 332: key[15]^=key[11];
 31077  002E06  EE20 F00B          	lfsr	2,11
 31078  002E0A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31079  002E0C  26D9               	addwf	fsr2l,f,c
 31080  002E0E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31081  002E10  22DA               	addwfc	fsr2h,f,c
 31082  002E12  50DF               	movf	indf2,w,c
 31083  002E14  6F62               	movwf	??_EncKeySchedule& (0+255),b
 31084  002E16  EE20 F00F          	lfsr	2,15
 31085  002E1A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 31086  002E1C  26D9               	addwf	fsr2l,f,c
 31087  002E1E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 31088  002E20  22DA               	addwfc	fsr2h,f,c
 31089  002E22  5162               	movf	??_EncKeySchedule& (0+255),w,b
 31090  002E24  1ADF               	xorwf	indf2,f,c
 31091                           
 31092                           ; BSR set to: 0
 31093  002E26  0012               	return		;funcret
 31094  002E28                     __end_of_EncKeySchedule:
 31095                           	opt stack 0
 31096                           tosu	equ	0xFFF
 31097                           tosh	equ	0xFFE
 31098                           tosl	equ	0xFFD
 31099                           pclath	equ	0xFFA
 31100                           tblptru	equ	0xFF8
 31101                           tblptrh	equ	0xFF7
 31102                           tblptrl	equ	0xFF6
 31103                           tablat	equ	0xFF5
 31104                           prodh	equ	0xFF4
 31105                           prodl	equ	0xFF3
 31106                           intcon	equ	0xFF2
 31107                           intcon2	equ	0xFF1
 31108                           intcon3	equ	0xFF0
 31109                           indf0	equ	0xFEF
 31110                           postinc0	equ	0xFEE
 31111                           plusw0	equ	0xFEB
 31112                           fsr0h	equ	0xFEA
 31113                           fsr0l	equ	0xFE9
 31114                           wreg	equ	0xFE8
 31115                           postinc1	equ	0xFE6
 31116                           postdec1	equ	0xFE5
 31117                           plusw1	equ	0xFE3
 31118                           fsr1h	equ	0xFE2
 31119                           fsr1l	equ	0xFE1
 31120                           indf2	equ	0xFDF
 31121                           postinc2	equ	0xFDE
 31122                           postdec2	equ	0xFDD
 31123                           plusw2	equ	0xFDB
 31124                           fsr2h	equ	0xFDA
 31125                           fsr2l	equ	0xFD9
 31126                           status	equ	0xFD8
 31127                           
 31128 ;; *************** function _LORAWAN_Init *****************
 31129 ;; Defined at:
 31130 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 31131 ;; Parameters:    Size  Location     Type
 31132 ;;  RxPayload       2   81[BANK0 ] PTR FTN(PTR unsigned cha
 31133 ;;		 -> RxData(1), 
 31134 ;;  RxJoinRespon    2   83[BANK0 ] PTR FTN(unsigned char ,)
 31135 ;;		 -> RxJoinResponse(1), 
 31136 ;; Auto vars:     Size  Location     Type
 31137 ;;		None
 31138 ;; Return value:  Size  Location     Type
 31139 ;;                  1    wreg      void 
 31140 ;; Registers used:
 31141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31142 ;; Tracked objects:
 31143 ;;		On entry : 0/0
 31144 ;;		On exit  : 0/0
 31145 ;;		Unchanged: 0/0
 31146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31150 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31151 ;;Total ram usage:        4 bytes
 31152 ;; Hardware stack levels used:    1
 31153 ;; Hardware stack levels required when called:   13
 31154 ;; This function calls:
 31155 ;;		_CreateAllSoftwareTimers
 31156 ;;		_LORAWAN_Reset
 31157 ;;		_RADIO_Init
 31158 ;;		_RADIO_ReadRandom
 31159 ;;		_SetCallbackSoftwareTimers
 31160 ;;		_StopAllSoftwareTimers
 31161 ;;		_srand
 31162 ;; This function is called by:
 31163 ;;		_main
 31164 ;; This function uses a non-reentrant model
 31165 ;;
 31166                           
 31167                           	psect	text148
 31168  006C1C                     __ptext148:
 31169                           	opt stack 0
 31170  006C1C                     _LORAWAN_Init:
 31171                           	opt stack 17
 31172                           
 31173                           ;lorawan_na.c: 118: if (loRa.macInitialized == 0)
 31174                           
 31175                           ; BSR set to: 0
 31176                           ;incstack = 0
 31177  006C1C  0102               	movlb	2	; () banked
 31178  006C1E  51E1               	movf	(_loRa+225)& (0+255),w,b
 31179  006C20  A4D8               	btfss	status,2,c
 31180  006C22  D008               	goto	l1015
 31181                           
 31182                           ; BSR set to: 2
 31183                           ;lorawan_na.c: 119: {
 31184                           ;lorawan_na.c: 120: CreateAllSoftwareTimers ();
 31185  006C24  EC2B  F038         	call	_CreateAllSoftwareTimers	;wreg free
 31186                           
 31187                           ;lorawan_na.c: 121: SetCallbackSoftwareTimers ();
 31188  006C28  ECA2  F02B         	call	_SetCallbackSoftwareTimers	;wreg free
 31189                           
 31190                           ;lorawan_na.c: 122: loRa.macInitialized = 1;
 31191  006C2C  0E01               	movlw	1
 31192  006C2E  0102               	movlb	2	; () banked
 31193  006C30  6FE1               	movwf	(_loRa+225)& (0+255),b
 31194                           
 31195                           ;lorawan_na.c: 123: }
 31196  006C32  D002               	goto	l1016
 31197  006C34                     l1015:
 31198                           
 31199                           ; BSR set to: 2
 31200                           ;lorawan_na.c: 124: else
 31201                           ;lorawan_na.c: 125: {
 31202                           ;lorawan_na.c: 126: StopAllSoftwareTimers ();
 31203                           
 31204                           ; BSR set to: 2
 31205  006C34  EC02  F038         	call	_StopAllSoftwareTimers	;wreg free
 31206  006C38                     l1016:
 31207                           
 31208                           ;lorawan_na.c: 127: }
 31209                           ;lorawan_na.c: 129: rxPayload.RxAppData = RxPayload;
 31210  006C38  C0B1  F0F9         	movff	LORAWAN_Init@RxPayload,_rxPayload
 31211  006C3C  C0B2  F0FA         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 31212                           
 31213                           ;lorawan_na.c: 130: rxPayload.RxJoinResponse = RxJoinResponse;
 31214  006C40  C0B3  F0FB         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 31215  006C44  C0B4  F0FC         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 31216                           
 31217                           ;lorawan_na.c: 132: RADIO_Init(&radioBuffer[16], (923300000));
 31218  006C48  0EAF               	movlw	low (_radioBuffer+16)
 31219  006C4A  0100               	movlb	0	; () banked
 31220  006C4C  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31221  006C4E  0E05               	movlw	high (_radioBuffer+16)
 31222  006C50  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31223  006C52  0EA0               	movlw	160
 31224  006C54  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 31225  006C56  0E70               	movlw	112
 31226  006C58  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31227  006C5A  0E08               	movlw	8
 31228  006C5C  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31229  006C5E  0E37               	movlw	55
 31230  006C60  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31231  006C62  EC47  F01C         	call	_RADIO_Init	;wreg free
 31232                           
 31233                           ;lorawan_na.c: 134: srand (RADIO_ReadRandom ());
 31234  006C66  EC1E  F02F         	call	_RADIO_ReadRandom	;wreg free
 31235  006C6A  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 31236  006C6E  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31237  006C72  ECAE  F03E         	call	_srand	;wreg free
 31238                           
 31239                           ;lorawan_na.c: 136: LORAWAN_Reset ();
 31240  006C76  ECB7  F01F         	call	_LORAWAN_Reset	;wreg free
 31241  006C7A  0012               	return		;funcret
 31242  006C7C                     __end_of_LORAWAN_Init:
 31243                           	opt stack 0
 31244                           tosu	equ	0xFFF
 31245                           tosh	equ	0xFFE
 31246                           tosl	equ	0xFFD
 31247                           pclath	equ	0xFFA
 31248                           tblptru	equ	0xFF8
 31249                           tblptrh	equ	0xFF7
 31250                           tblptrl	equ	0xFF6
 31251                           tablat	equ	0xFF5
 31252                           prodh	equ	0xFF4
 31253                           prodl	equ	0xFF3
 31254                           intcon	equ	0xFF2
 31255                           intcon2	equ	0xFF1
 31256                           intcon3	equ	0xFF0
 31257                           indf0	equ	0xFEF
 31258                           postinc0	equ	0xFEE
 31259                           plusw0	equ	0xFEB
 31260                           fsr0h	equ	0xFEA
 31261                           fsr0l	equ	0xFE9
 31262                           wreg	equ	0xFE8
 31263                           postinc1	equ	0xFE6
 31264                           postdec1	equ	0xFE5
 31265                           plusw1	equ	0xFE3
 31266                           fsr1h	equ	0xFE2
 31267                           fsr1l	equ	0xFE1
 31268                           indf2	equ	0xFDF
 31269                           postinc2	equ	0xFDE
 31270                           postdec2	equ	0xFDD
 31271                           plusw2	equ	0xFDB
 31272                           fsr2h	equ	0xFDA
 31273                           fsr2l	equ	0xFD9
 31274                           status	equ	0xFD8
 31275                           
 31276 ;; *************** function _srand *****************
 31277 ;; Defined at:
 31278 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 31279 ;; Parameters:    Size  Location     Type
 31280 ;;  x               2   18[BANK0 ] unsigned int 
 31281 ;; Auto vars:     Size  Location     Type
 31282 ;;		None
 31283 ;; Return value:  Size  Location     Type
 31284 ;;                  1    wreg      void 
 31285 ;; Registers used:
 31286 ;;		status,2
 31287 ;; Tracked objects:
 31288 ;;		On entry : 0/0
 31289 ;;		On exit  : 0/0
 31290 ;;		Unchanged: 0/0
 31291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31296 ;;Total ram usage:        2 bytes
 31297 ;; Hardware stack levels used:    1
 31298 ;; Hardware stack levels required when called:    7
 31299 ;; This function calls:
 31300 ;;		Nothing
 31301 ;; This function is called by:
 31302 ;;		_LORAWAN_Init
 31303 ;; This function uses a non-reentrant model
 31304 ;;
 31305                           
 31306                           	psect	text149
 31307  007D5C                     __ptext149:
 31308                           	opt stack 0
 31309  007D5C                     _srand:
 31310                           	opt stack 22
 31311                           
 31312                           ;incstack = 0
 31313  007D5C  C072  F1CA         	movff	srand@x,_randx
 31314  007D60  C073  F1CB         	movff	srand@x+1,_randx+1
 31315  007D64  0101               	movlb	1	; () banked
 31316  007D66  6BCC               	clrf	(_randx+2)& (0+255),b
 31317  007D68  6BCD               	clrf	(_randx+3)& (0+255),b
 31318                           
 31319                           ; BSR set to: 1
 31320  007D6A  0012               	return		;funcret
 31321  007D6C                     __end_of_srand:
 31322                           	opt stack 0
 31323                           tosu	equ	0xFFF
 31324                           tosh	equ	0xFFE
 31325                           tosl	equ	0xFFD
 31326                           pclath	equ	0xFFA
 31327                           tblptru	equ	0xFF8
 31328                           tblptrh	equ	0xFF7
 31329                           tblptrl	equ	0xFF6
 31330                           tablat	equ	0xFF5
 31331                           prodh	equ	0xFF4
 31332                           prodl	equ	0xFF3
 31333                           intcon	equ	0xFF2
 31334                           intcon2	equ	0xFF1
 31335                           intcon3	equ	0xFF0
 31336                           indf0	equ	0xFEF
 31337                           postinc0	equ	0xFEE
 31338                           plusw0	equ	0xFEB
 31339                           fsr0h	equ	0xFEA
 31340                           fsr0l	equ	0xFE9
 31341                           wreg	equ	0xFE8
 31342                           postinc1	equ	0xFE6
 31343                           postdec1	equ	0xFE5
 31344                           plusw1	equ	0xFE3
 31345                           fsr1h	equ	0xFE2
 31346                           fsr1l	equ	0xFE1
 31347                           indf2	equ	0xFDF
 31348                           postinc2	equ	0xFDE
 31349                           postdec2	equ	0xFDD
 31350                           plusw2	equ	0xFDB
 31351                           fsr2h	equ	0xFDA
 31352                           fsr2l	equ	0xFD9
 31353                           status	equ	0xFD8
 31354                           
 31355 ;; *************** function _SetCallbackSoftwareTimers *****************
 31356 ;; Defined at:
 31357 ;;		line 803 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 31358 ;; Parameters:    Size  Location     Type
 31359 ;;		None
 31360 ;; Auto vars:     Size  Location     Type
 31361 ;;		None
 31362 ;; Return value:  Size  Location     Type
 31363 ;;                  1    wreg      void 
 31364 ;; Registers used:
 31365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31366 ;; Tracked objects:
 31367 ;;		On entry : 0/0
 31368 ;;		On exit  : 0/0
 31369 ;;		Unchanged: 0/0
 31370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31375 ;;Total ram usage:        0 bytes
 31376 ;; Hardware stack levels used:    1
 31377 ;; Hardware stack levels required when called:    8
 31378 ;; This function calls:
 31379 ;;		_SwTimerSetCallback
 31380 ;; This function is called by:
 31381 ;;		_LORAWAN_Init
 31382 ;; This function uses a non-reentrant model
 31383 ;;
 31384                           
 31385                           	psect	text150
 31386  005744                     __ptext150:
 31387                           	opt stack 0
 31388  005744                     _SetCallbackSoftwareTimers:
 31389                           	opt stack 21
 31390                           
 31391                           ;lorawan_na.c: 805: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31392                           
 31393                           ; BSR set to: 1
 31394                           ;incstack = 0
 31395  005744  0E22               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31396  005746  0100               	movlb	0	; () banked
 31397  005748  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31398  00574A  0E5C               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31399  00574C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31400  00574E  0E00               	movlw	0
 31401  005750  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31402  005752  0102               	movlb	2	; () banked
 31403  005754  51D3               	movf	(_loRa+211)& (0+255),w,b
 31404  005756  EC7B  F039         	call	_SwTimerSetCallback
 31405                           
 31406                           ;lorawan_na.c: 806: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31407  00575A  0EF8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31408  00575C  0100               	movlb	0	; () banked
 31409  00575E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31410  005760  0E58               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31411  005762  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31412  005764  0E00               	movlw	0
 31413  005766  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31414  005768  0102               	movlb	2	; () banked
 31415  00576A  51D4               	movf	(_loRa+212)& (0+255),w,b
 31416  00576C  EC7B  F039         	call	_SwTimerSetCallback
 31417                           
 31418                           ;lorawan_na.c: 807: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31419  005770  0E5C               	movlw	low _LORAWAN_LinkCheckCallback
 31420  005772  0100               	movlb	0	; () banked
 31421  005774  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31422  005776  0E42               	movlw	high _LORAWAN_LinkCheckCallback
 31423  005778  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31424  00577A  0E00               	movlw	0
 31425  00577C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31426  00577E  0102               	movlb	2	; () banked
 31427  005780  51D8               	movf	(_loRa+216)& (0+255),w,b
 31428  005782  EC7B  F039         	call	_SwTimerSetCallback
 31429                           
 31430                           ;lorawan_na.c: 808: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31431  005786  0E22               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31432  005788  0100               	movlb	0	; () banked
 31433  00578A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31434  00578C  0E5C               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31435  00578E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31436  005790  0E00               	movlw	0
 31437  005792  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31438  005794  0102               	movlb	2	; () banked
 31439  005796  51D5               	movf	(_loRa+213)& (0+255),w,b
 31440  005798  EC7B  F039         	call	_SwTimerSetCallback
 31441                           
 31442                           ;lorawan_na.c: 809: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31443  00579C  0EF8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31444  00579E  0100               	movlb	0	; () banked
 31445  0057A0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31446  0057A2  0E58               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31447  0057A4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31448  0057A6  0E00               	movlw	0
 31449  0057A8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31450  0057AA  0102               	movlb	2	; () banked
 31451  0057AC  51D6               	movf	(_loRa+214)& (0+255),w,b
 31452  0057AE  EC7B  F039         	call	_SwTimerSetCallback
 31453                           
 31454                           ;lorawan_na.c: 810: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31455  0057B2  0E9A               	movlw	low _AckRetransmissionCallback
 31456  0057B4  0100               	movlb	0	; () banked
 31457  0057B6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31458  0057B8  0E4C               	movlw	high _AckRetransmissionCallback
 31459  0057BA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31460  0057BC  0E00               	movlw	0
 31461  0057BE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31462  0057C0  0102               	movlb	2	; () banked
 31463  0057C2  51D9               	movf	(_loRa+217)& (0+255),w,b
 31464  0057C4  EC7B  F039         	call	_SwTimerSetCallback
 31465                           
 31466                           ;lorawan_na.c: 811: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31467  0057C8  0E3A               	movlw	low _AutomaticReplyCallback
 31468  0057CA  0100               	movlb	0	; () banked
 31469  0057CC  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31470  0057CE  0E79               	movlw	high _AutomaticReplyCallback
 31471  0057D0  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31472  0057D2  0E00               	movlw	0
 31473  0057D4  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31474  0057D6  0102               	movlb	2	; () banked
 31475  0057D8  51D7               	movf	(_loRa+215)& (0+255),w,b
 31476  0057DA  EC7B  F039         	call	_SwTimerSetCallback
 31477                           
 31478                           ;lorawan_na.c: 812: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31479  0057DE  0E22               	movlw	low _UnconfirmedTransmissionCallback
 31480  0057E0  0100               	movlb	0	; () banked
 31481  0057E2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31482  0057E4  0E67               	movlw	high _UnconfirmedTransmissionCallback
 31483  0057E6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31484  0057E8  0E00               	movlw	0
 31485  0057EA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31486  0057EC  0102               	movlb	2	; () banked
 31487  0057EE  51DB               	movf	(_loRa+219)& (0+255),w,b
 31488  0057F0  EC7B  F039         	call	_SwTimerSetCallback
 31489                           
 31490                           ;lorawan_na.c: 813: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31491  0057F4  0ED6               	movlw	low _UpdateJoinSuccessState
 31492  0057F6  0100               	movlb	0	; () banked
 31493  0057F8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31494  0057FA  0E47               	movlw	high _UpdateJoinSuccessState
 31495  0057FC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31496  0057FE  0E00               	movlw	0
 31497  005800  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31498  005802  0102               	movlb	2	; () banked
 31499  005804  51E4               	movf	(_loRa+228)& (0+255),w,b
 31500  005806  EC7B  F039         	call	_SwTimerSetCallback
 31501                           
 31502                           ;lorawan_na.c: 814: SwTimerSetCallback(loRa.transmissionErrorTimerId, TransmissionErrorC
      +                          allback, 0);
 31503  00580A  0E2A               	movlw	low _TransmissionErrorCallback
 31504  00580C  0100               	movlb	0	; () banked
 31505  00580E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 31506  005810  0E60               	movlw	high _TransmissionErrorCallback
 31507  005812  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31508  005814  0E00               	movlw	0
 31509  005816  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 31510  005818  0102               	movlb	2	; () banked
 31511  00581A  51E5               	movf	(_loRa+229)& (0+255),w,b
 31512  00581C  EC7B  F039         	call	_SwTimerSetCallback
 31513  005820  0012               	return		;funcret
 31514  005822                     __end_of_SetCallbackSoftwareTimers:
 31515                           	opt stack 0
 31516                           tosu	equ	0xFFF
 31517                           tosh	equ	0xFFE
 31518                           tosl	equ	0xFFD
 31519                           pclath	equ	0xFFA
 31520                           tblptru	equ	0xFF8
 31521                           tblptrh	equ	0xFF7
 31522                           tblptrl	equ	0xFF6
 31523                           tablat	equ	0xFF5
 31524                           prodh	equ	0xFF4
 31525                           prodl	equ	0xFF3
 31526                           intcon	equ	0xFF2
 31527                           intcon2	equ	0xFF1
 31528                           intcon3	equ	0xFF0
 31529                           indf0	equ	0xFEF
 31530                           postinc0	equ	0xFEE
 31531                           plusw0	equ	0xFEB
 31532                           fsr0h	equ	0xFEA
 31533                           fsr0l	equ	0xFE9
 31534                           wreg	equ	0xFE8
 31535                           postinc1	equ	0xFE6
 31536                           postdec1	equ	0xFE5
 31537                           plusw1	equ	0xFE3
 31538                           fsr1h	equ	0xFE2
 31539                           fsr1l	equ	0xFE1
 31540                           indf2	equ	0xFDF
 31541                           postinc2	equ	0xFDE
 31542                           postdec2	equ	0xFDD
 31543                           plusw2	equ	0xFDB
 31544                           fsr2h	equ	0xFDA
 31545                           fsr2l	equ	0xFD9
 31546                           status	equ	0xFD8
 31547                           
 31548 ;; *************** function _RADIO_ReadRandom *****************
 31549 ;; Defined at:
 31550 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31551 ;; Parameters:    Size  Location     Type
 31552 ;;		None
 31553 ;; Auto vars:     Size  Location     Type
 31554 ;;  retVal          2   15[BANK0 ] unsigned int 
 31555 ;;  i               1   17[BANK0 ] unsigned char 
 31556 ;; Return value:  Size  Location     Type
 31557 ;;                  2   12[BANK0 ] unsigned int 
 31558 ;; Registers used:
 31559 ;;		wreg, status,2, status,0, cstack
 31560 ;; Tracked objects:
 31561 ;;		On entry : 0/0
 31562 ;;		On exit  : 0/0
 31563 ;;		Unchanged: 0/0
 31564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31566 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31569 ;;Total ram usage:        6 bytes
 31570 ;; Hardware stack levels used:    1
 31571 ;; Hardware stack levels required when called:   11
 31572 ;; This function calls:
 31573 ;;		_RADIO_RegisterRead
 31574 ;;		_RADIO_RegisterWrite
 31575 ;;		_RADIO_WriteMode
 31576 ;;		_SystemBlockingWaitMs
 31577 ;; This function is called by:
 31578 ;;		_LORAWAN_Init
 31579 ;; This function uses a non-reentrant model
 31580 ;;
 31581                           
 31582                           	psect	text151
 31583  005E3C                     __ptext151:
 31584                           	opt stack 0
 31585  005E3C                     _RADIO_ReadRandom:
 31586                           	opt stack 18
 31587                           
 31588                           ;radio_driver_SX1276.c: 1446: uint8_t i;
 31589                           ;radio_driver_SX1276.c: 1447: uint16_t retVal;
 31590                           ;radio_driver_SX1276.c: 1448: retVal = 0;
 31591                           
 31592                           ;incstack = 0
 31593  005E3C  0E00               	movlw	0
 31594  005E3E  0100               	movlb	0	; () banked
 31595  005E40  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31596  005E42  0E00               	movlw	0
 31597  005E44  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 31598                           
 31599                           ; BSR set to: 0
 31600                           
 31601                           ; BSR set to: 0
 31602                           
 31603                           ;radio_driver_SX1276.c: 1451: do { LATB3 = 1; } while(0);
 31604  005E46  868A               	bsf	3978,3,c	;volatile
 31605                           
 31606                           ; BSR set to: 0
 31607                           ;radio_driver_SX1276.c: 1454: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31608                           
 31609                           ; BSR set to: 0
 31610  005E48  0E01               	movlw	1
 31611  005E4A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31612  005E4C  0E01               	movlw	1
 31613  005E4E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31614  005E50  0E00               	movlw	0
 31615  005E52  EC5E  F028         	call	_RADIO_WriteMode
 31616                           
 31617                           ;radio_driver_SX1276.c: 1455: RADIO_RegisterWrite(0x11, 0xFF);
 31618  005E56  0EFF               	movlw	255
 31619  005E58  0100               	movlb	0	; () banked
 31620  005E5A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31621  005E5C  0E11               	movlw	17
 31622  005E5E  EC5D  F03D         	call	_RADIO_RegisterWrite
 31623                           
 31624                           ;radio_driver_SX1276.c: 1456: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31625  005E62  0E01               	movlw	1
 31626  005E64  0100               	movlb	0	; () banked
 31627  005E66  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31628  005E68  0E01               	movlw	1
 31629  005E6A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31630  005E6C  0E05               	movlw	5
 31631  005E6E  EC5E  F028         	call	_RADIO_WriteMode
 31632                           
 31633                           ;radio_driver_SX1276.c: 1457: for (i = 0; i < 16; i++)
 31634  005E72  0E00               	movlw	0
 31635  005E74  0100               	movlb	0	; () banked
 31636  005E76  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 31637  005E78                     l11352:
 31638                           
 31639                           ; BSR set to: 0
 31640  005E78  0E0F               	movlw	15
 31641  005E7A  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31642  005E7C  D001               	goto	l729
 31643  005E7E  D019               	goto	u12140
 31644  005E80                     l729:
 31645                           
 31646                           ; BSR set to: 0
 31647                           ;radio_driver_SX1276.c: 1458: {
 31648                           ;radio_driver_SX1276.c: 1459: SystemBlockingWaitMs(1);
 31649                           
 31650                           ; BSR set to: 0
 31651  005E80  0E01               	movlw	1
 31652  005E82  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31653  005E84  0E00               	movlw	0
 31654  005E86  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31655  005E88  0E00               	movlw	0
 31656  005E8A  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31657  005E8C  0E00               	movlw	0
 31658  005E8E  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31659  005E90  EC85  F03B         	call	_SystemBlockingWaitMs	;wreg free
 31660                           
 31661                           ;radio_driver_SX1276.c: 1460: retVal <<= (1);
 31662  005E94  0100               	movlb	0	; () banked
 31663  005E96  90D8               	bcf	status,0,c
 31664  005E98  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31665  005E9A  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31666                           
 31667                           ; BSR set to: 0
 31668                           ;radio_driver_SX1276.c: 1461: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31669  005E9C  0E2C               	movlw	44
 31670  005E9E  EC75  F03C         	call	_RADIO_RegisterRead
 31671  005EA2  0100               	movlb	0	; () banked
 31672  005EA4  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 31673  005EA6  0E01               	movlw	1
 31674  005EA8  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 31675  005EAA  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 31676  005EAC  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31677  005EAE  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31678  005EB0  D7E3               	goto	l11352
 31679  005EB2                     u12140:
 31680                           
 31681                           ; BSR set to: 0
 31682                           
 31683                           ; BSR set to: 0
 31684                           ;radio_driver_SX1276.c: 1462: }
 31685                           ;radio_driver_SX1276.c: 1465: do { LATB3 = 0; } while(0);
 31686  005EB2  968A               	bcf	3978,3,c	;volatile
 31687                           
 31688                           ; BSR set to: 0
 31689                           ;radio_driver_SX1276.c: 1469: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31690                           
 31691                           ; BSR set to: 0
 31692  005EB4  0E01               	movlw	1
 31693  005EB6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31694  005EB8  0E01               	movlw	1
 31695  005EBA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31696  005EBC  0E00               	movlw	0
 31697  005EBE  EC5E  F028         	call	_RADIO_WriteMode
 31698                           
 31699                           ;radio_driver_SX1276.c: 1471: RADIO_RegisterWrite(0x12, 0xFF);
 31700  005EC2  0EFF               	movlw	255
 31701  005EC4  0100               	movlb	0	; () banked
 31702  005EC6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31703  005EC8  0E12               	movlw	18
 31704  005ECA  EC5D  F03D         	call	_RADIO_RegisterWrite
 31705                           
 31706                           ;radio_driver_SX1276.c: 1473: RADIO_RegisterWrite(0x11, 0x00);
 31707  005ECE  0E00               	movlw	0
 31708  005ED0  0100               	movlb	0	; () banked
 31709  005ED2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31710  005ED4  0E11               	movlw	17
 31711  005ED6  EC5D  F03D         	call	_RADIO_RegisterWrite
 31712                           
 31713                           ;radio_driver_SX1276.c: 1474: return retVal;
 31714  005EDA  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31715  005EDE  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31716  005EE2  0012               	return	
 31717  005EE4                     __end_of_RADIO_ReadRandom:
 31718                           	opt stack 0
 31719                           tosu	equ	0xFFF
 31720                           tosh	equ	0xFFE
 31721                           tosl	equ	0xFFD
 31722                           pclath	equ	0xFFA
 31723                           tblptru	equ	0xFF8
 31724                           tblptrh	equ	0xFF7
 31725                           tblptrl	equ	0xFF6
 31726                           tablat	equ	0xFF5
 31727                           prodh	equ	0xFF4
 31728                           prodl	equ	0xFF3
 31729                           intcon	equ	0xFF2
 31730                           intcon2	equ	0xFF1
 31731                           intcon3	equ	0xFF0
 31732                           indf0	equ	0xFEF
 31733                           postinc0	equ	0xFEE
 31734                           plusw0	equ	0xFEB
 31735                           fsr0h	equ	0xFEA
 31736                           fsr0l	equ	0xFE9
 31737                           wreg	equ	0xFE8
 31738                           postinc1	equ	0xFE6
 31739                           postdec1	equ	0xFE5
 31740                           plusw1	equ	0xFE3
 31741                           fsr1h	equ	0xFE2
 31742                           fsr1l	equ	0xFE1
 31743                           indf2	equ	0xFDF
 31744                           postinc2	equ	0xFDE
 31745                           postdec2	equ	0xFDD
 31746                           plusw2	equ	0xFDB
 31747                           fsr2h	equ	0xFDA
 31748                           fsr2l	equ	0xFD9
 31749                           status	equ	0xFD8
 31750                           
 31751 ;; *************** function _LORAWAN_Reset *****************
 31752 ;; Defined at:
 31753 ;;		line 140 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 31754 ;; Parameters:    Size  Location     Type
 31755 ;;		None
 31756 ;; Auto vars:     Size  Location     Type
 31757 ;;		None
 31758 ;; Return value:  Size  Location     Type
 31759 ;;                  1    wreg      void 
 31760 ;; Registers used:
 31761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31762 ;; Tracked objects:
 31763 ;;		On entry : 0/0
 31764 ;;		On exit  : 0/0
 31765 ;;		Unchanged: 0/0
 31766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31771 ;;Total ram usage:        0 bytes
 31772 ;; Hardware stack levels used:    1
 31773 ;; Hardware stack levels required when called:   12
 31774 ;; This function calls:
 31775 ;;		_InitDefault915Channels
 31776 ;;		_LORAWAN_LinkCheckConfigure
 31777 ;;		_RADIO_Init
 31778 ;;		_RADIO_SetLoRaSyncWord
 31779 ;;		_RADIO_SetPABoost
 31780 ;;		_StopAllSoftwareTimers
 31781 ;;		_UpdateMinMaxChDataRate
 31782 ;;		_memset
 31783 ;; This function is called by:
 31784 ;;		_LORAWAN_Init
 31785 ;; This function uses a non-reentrant model
 31786 ;;
 31787                           
 31788                           	psect	text152
 31789  003F6E                     __ptext152:
 31790                           	opt stack 0
 31791  003F6E                     _LORAWAN_Reset:
 31792                           	opt stack 17
 31793                           
 31794                           ;lorawan_na.c: 142: if (loRa.macInitialized == 1)
 31795                           
 31796                           ;incstack = 0
 31797  003F6E  0102               	movlb	2	; () banked
 31798  003F70  05E1               	decf	(_loRa+225)& (0+255),w,b
 31799  003F72  B4D8               	btfsc	status,2,c
 31800                           
 31801                           ; BSR set to: 2
 31802                           ;lorawan_na.c: 143: {
 31803                           ;lorawan_na.c: 144: StopAllSoftwareTimers ();
 31804  003F74  EC02  F038         	call	_StopAllSoftwareTimers	;wreg free
 31805                           
 31806                           ;lorawan_na.c: 145: }
 31807                           ;lorawan_na.c: 147: loRa.syncWord = 0x34;
 31808  003F78  0E34               	movlw	52
 31809  003F7A  0102               	movlb	2	; () banked
 31810  003F7C  6FE6               	movwf	(_loRa+230)& (0+255),b
 31811                           
 31812                           ; BSR set to: 2
 31813                           ;lorawan_na.c: 148: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31814  003F7E  51E6               	movf	(_loRa+230)& (0+255),w,b
 31815  003F80  EC1C  F03F         	call	_RADIO_SetLoRaSyncWord
 31816                           
 31817                           ;lorawan_na.c: 150: loRa.macStatus.value = 0;
 31818  003F84  0E00               	movlw	0
 31819  003F86  0102               	movlb	2	; () banked
 31820  003F88  6F02               	movwf	(_loRa+2)& (0+255),b
 31821  003F8A  0E00               	movlw	0
 31822  003F8C  6F03               	movwf	(_loRa+3)& (0+255),b
 31823  003F8E  0E00               	movlw	0
 31824  003F90  6F04               	movwf	(_loRa+4)& (0+255),b
 31825  003F92  0E00               	movlw	0
 31826  003F94  6F05               	movwf	(_loRa+5)& (0+255),b
 31827                           
 31828                           ; BSR set to: 2
 31829                           ;lorawan_na.c: 151: loRa.linkCheckMargin = 255;
 31830  003F96  69CE               	setf	(_loRa+206)& (0+255),b
 31831                           
 31832                           ; BSR set to: 2
 31833                           ;lorawan_na.c: 152: loRa.linkCheckGwCnt = 0;
 31834  003F98  0E00               	movlw	0
 31835  003F9A  6FCF               	movwf	(_loRa+207)& (0+255),b
 31836                           
 31837                           ; BSR set to: 2
 31838                           ;lorawan_na.c: 153: loRa.lastTimerValue = 0;
 31839  003F9C  0E00               	movlw	0
 31840  003F9E  6FB9               	movwf	(_loRa+185)& (0+255),b
 31841  003FA0  0E00               	movlw	0
 31842  003FA2  6FBA               	movwf	(_loRa+186)& (0+255),b
 31843  003FA4  0E00               	movlw	0
 31844  003FA6  6FBB               	movwf	(_loRa+187)& (0+255),b
 31845  003FA8  0E00               	movlw	0
 31846  003FAA  6FBC               	movwf	(_loRa+188)& (0+255),b
 31847                           
 31848                           ; BSR set to: 2
 31849                           ;lorawan_na.c: 154: loRa.lastPacketLength = 0;
 31850  003FAC  0E00               	movlw	0
 31851  003FAE  6FC6               	movwf	(_loRa+198)& (0+255),b
 31852  003FB0  0E00               	movlw	0
 31853  003FB2  6FC5               	movwf	(_loRa+197)& (0+255),b
 31854                           
 31855                           ; BSR set to: 2
 31856                           ;lorawan_na.c: 155: loRa.fCntDown.value = 0;
 31857  003FB4  0E00               	movlw	0
 31858  003FB6  6F0A               	movwf	(_loRa+10)& (0+255),b
 31859  003FB8  0E00               	movlw	0
 31860  003FBA  6F0B               	movwf	(_loRa+11)& (0+255),b
 31861  003FBC  0E00               	movlw	0
 31862  003FBE  6F0C               	movwf	(_loRa+12)& (0+255),b
 31863  003FC0  0E00               	movlw	0
 31864  003FC2  6F0D               	movwf	(_loRa+13)& (0+255),b
 31865                           
 31866                           ; BSR set to: 2
 31867                           ;lorawan_na.c: 156: loRa.fCntUp.value = 0;
 31868  003FC4  0E00               	movlw	0
 31869  003FC6  6F06               	movwf	(_loRa+6)& (0+255),b
 31870  003FC8  0E00               	movlw	0
 31871  003FCA  6F07               	movwf	(_loRa+7)& (0+255),b
 31872  003FCC  0E00               	movlw	0
 31873  003FCE  6F08               	movwf	(_loRa+8)& (0+255),b
 31874  003FD0  0E00               	movlw	0
 31875  003FD2  6F09               	movwf	(_loRa+9)& (0+255),b
 31876                           
 31877                           ; BSR set to: 2
 31878                           ;lorawan_na.c: 157: loRa.devNonce = 0;
 31879  003FD4  0E00               	movlw	0
 31880  003FD6  6FC4               	movwf	(_loRa+196)& (0+255),b
 31881  003FD8  0E00               	movlw	0
 31882  003FDA  6FC3               	movwf	(_loRa+195)& (0+255),b
 31883                           
 31884                           ; BSR set to: 2
 31885                           ;lorawan_na.c: 158: loRa.prescaler = 1;
 31886  003FDC  0E00               	movlw	0
 31887  003FDE  6FCD               	movwf	(_loRa+205)& (0+255),b
 31888  003FE0  0E01               	movlw	1
 31889  003FE2  6FCC               	movwf	(_loRa+204)& (0+255),b
 31890                           
 31891                           ; BSR set to: 2
 31892                           ;lorawan_na.c: 159: loRa.adrAckCnt = 0;
 31893  003FE4  0E00               	movlw	0
 31894  003FE6  6FC2               	movwf	(_loRa+194)& (0+255),b
 31895  003FE8  0E00               	movlw	0
 31896  003FEA  6FC1               	movwf	(_loRa+193)& (0+255),b
 31897                           
 31898                           ; BSR set to: 2
 31899                           ;lorawan_na.c: 160: loRa.counterAdrAckDelay = 0;
 31900  003FEC  0E00               	movlw	0
 31901  003FEE  6FDF               	movwf	(_loRa+223)& (0+255),b
 31902                           
 31903                           ; BSR set to: 2
 31904                           ;lorawan_na.c: 161: loRa.offset = 0;
 31905  003FF0  0E00               	movlw	0
 31906  003FF2  6FE0               	movwf	(_loRa+224)& (0+255),b
 31907                           
 31908                           ; BSR set to: 2
 31909                           ;lorawan_na.c: 162: loRa.lastTimerValue = 0;
 31910  003FF4  0E00               	movlw	0
 31911  003FF6  6FB9               	movwf	(_loRa+185)& (0+255),b
 31912  003FF8  0E00               	movlw	0
 31913  003FFA  6FBA               	movwf	(_loRa+186)& (0+255),b
 31914  003FFC  0E00               	movlw	0
 31915  003FFE  6FBB               	movwf	(_loRa+187)& (0+255),b
 31916  004000  0E00               	movlw	0
 31917  004002  6FBC               	movwf	(_loRa+188)& (0+255),b
 31918                           
 31919                           ; BSR set to: 2
 31920                           ;lorawan_na.c: 165: loRa.macStatus.linkCheck = 0;
 31921  004004  9503               	bcf	(_loRa+3)& (0+255),2,b
 31922                           
 31923                           ; BSR set to: 2
 31924                           ;lorawan_na.c: 168: loRa.macStatus.value = 0;
 31925  004006  0E00               	movlw	0
 31926  004008  6F02               	movwf	(_loRa+2)& (0+255),b
 31927  00400A  0E00               	movlw	0
 31928  00400C  6F03               	movwf	(_loRa+3)& (0+255),b
 31929  00400E  0E00               	movlw	0
 31930  004010  6F04               	movwf	(_loRa+4)& (0+255),b
 31931  004012  0E00               	movlw	0
 31932  004014  6F05               	movwf	(_loRa+5)& (0+255),b
 31933                           
 31934                           ; BSR set to: 2
 31935                           ;lorawan_na.c: 169: loRa.lorawanMacStatus.value = 0;
 31936  004016  0E00               	movlw	0
 31937  004018  6F01               	movwf	(_loRa+1)& (0+255),b
 31938  00401A  0E00               	movlw	0
 31939  00401C  6F00               	movwf	_loRa& (0+255),b
 31940                           
 31941                           ; BSR set to: 2
 31942                           ;lorawan_na.c: 171: loRa.maxRepetitionsConfirmedUplink = 7;
 31943  00401E  0E07               	movlw	7
 31944  004020  6FC8               	movwf	(_loRa+200)& (0+255),b
 31945                           
 31946                           ; BSR set to: 2
 31947                           ;lorawan_na.c: 172: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31948  004022  0E00               	movlw	0
 31949  004024  6FC7               	movwf	(_loRa+199)& (0+255),b
 31950                           
 31951                           ; BSR set to: 2
 31952                           ;lorawan_na.c: 173: loRa.counterRepetitionsConfirmedUplink = 1;
 31953  004026  0E01               	movlw	1
 31954  004028  6FCA               	movwf	(_loRa+202)& (0+255),b
 31955                           
 31956                           ; BSR set to: 2
 31957                           ;lorawan_na.c: 174: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31958  00402A  0E01               	movlw	1
 31959  00402C  6FC9               	movwf	(_loRa+201)& (0+255),b
 31960                           
 31961                           ; BSR set to: 2
 31962                           ;lorawan_na.c: 176: loRa.batteryLevel = (0xFF);
 31963  00402E  69D1               	setf	(_loRa+209)& (0+255),b
 31964                           
 31965                           ; BSR set to: 2
 31966                           ;lorawan_na.c: 179: RADIO_Init(&radioBuffer[16], (923300000));
 31967  004030  0EAF               	movlw	low (_radioBuffer+16)
 31968  004032  0100               	movlb	0	; () banked
 31969  004034  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31970  004036  0E05               	movlw	high (_radioBuffer+16)
 31971  004038  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31972  00403A  0EA0               	movlw	160
 31973  00403C  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 31974  00403E  0E70               	movlw	112
 31975  004040  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31976  004042  0E08               	movlw	8
 31977  004044  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31978  004046  0E37               	movlw	55
 31979  004048  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31980  00404A  EC47  F01C         	call	_RADIO_Init	;wreg free
 31981                           
 31982                           ;lorawan_na.c: 181: InitDefault915Channels ();
 31983  00404E  ECBF  F039         	call	_InitDefault915Channels	;wreg free
 31984                           
 31985                           ;lorawan_na.c: 183: loRa.txPower = 6;
 31986  004052  0E06               	movlw	6
 31987  004054  0102               	movlb	2	; () banked
 31988  004056  6FD2               	movwf	(_loRa+210)& (0+255),b
 31989                           
 31990                           ; BSR set to: 2
 31991                           ;lorawan_na.c: 186: loRa.receiveWindow2Parameters.frequency = (923300000);
 31992  004058  0EA0               	movlw	160
 31993  00405A  6F18               	movwf	(_loRa+24)& (0+255),b
 31994  00405C  0E70               	movlw	112
 31995  00405E  6F19               	movwf	(_loRa+25)& (0+255),b
 31996  004060  0E08               	movlw	8
 31997  004062  6F1A               	movwf	(_loRa+26)& (0+255),b
 31998  004064  0E37               	movlw	55
 31999  004066  6F1B               	movwf	(_loRa+27)& (0+255),b
 32000                           
 32001                           ; BSR set to: 2
 32002                           ;lorawan_na.c: 187: loRa.receiveWindow2Parameters.dataRate = (8);
 32003  004068  0E08               	movlw	8
 32004  00406A  6F1C               	movwf	(_loRa+28)& (0+255),b
 32005                           
 32006                           ; BSR set to: 2
 32007                           ;lorawan_na.c: 189: loRa.currentDataRate = 0;
 32008  00406C  0E00               	movlw	0
 32009  00406E  6FD0               	movwf	(_loRa+208)& (0+255),b
 32010                           
 32011                           ; BSR set to: 2
 32012                           ;lorawan_na.c: 191: UpdateMinMaxChDataRate ();
 32013  004070  EC47  F02A         	call	_UpdateMinMaxChDataRate	;wreg free
 32014                           
 32015                           ;lorawan_na.c: 194: loRa.macKeys.value = 0;
 32016  004074  0E00               	movlw	0
 32017  004076  0102               	movlb	2	; () banked
 32018  004078  6F97               	movwf	(_loRa+151)& (0+255),b
 32019  00407A  0E00               	movlw	0
 32020  00407C  6F96               	movwf	(_loRa+150)& (0+255),b
 32021                           
 32022                           ; BSR set to: 2
 32023                           ;lorawan_na.c: 195: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 32024  00407E  0E1D               	movlw	low (_loRa+29)
 32025  004080  0100               	movlb	0	; () banked
 32026  004082  6F60               	movwf	memset@p1& (0+255),b
 32027  004084  0E02               	movlw	high (_loRa+29)
 32028  004086  6F61               	movwf	(memset@p1+1)& (0+255),b
 32029  004088  0E00               	movlw	0
 32030  00408A  6F63               	movwf	(memset@c+1)& (0+255),b
 32031  00408C  0E00               	movlw	0
 32032  00408E  6F62               	movwf	memset@c& (0+255),b
 32033  004090  0E00               	movlw	0
 32034  004092  6F65               	movwf	(memset@n+1)& (0+255),b
 32035  004094  0E69               	movlw	105
 32036  004096  6F64               	movwf	memset@n& (0+255),b
 32037  004098  EC9D  F03B         	call	_memset	;wreg free
 32038                           
 32039                           ;lorawan_na.c: 198: loRa.protocolParameters.receiveDelay1 = 1000UL;
 32040  00409C  0E03               	movlw	3
 32041  00409E  0102               	movlb	2	; () banked
 32042  0040A0  6F87               	movwf	(_loRa+135)& (0+255),b
 32043  0040A2  0EE8               	movlw	232
 32044  0040A4  6F86               	movwf	(_loRa+134)& (0+255),b
 32045                           
 32046                           ; BSR set to: 2
 32047                           ;lorawan_na.c: 199: loRa.protocolParameters.receiveDelay2 = 2000UL;
 32048  0040A6  0E07               	movlw	7
 32049  0040A8  6F89               	movwf	(_loRa+137)& (0+255),b
 32050  0040AA  0ED0               	movlw	208
 32051  0040AC  6F88               	movwf	(_loRa+136)& (0+255),b
 32052                           
 32053                           ; BSR set to: 2
 32054                           ;lorawan_na.c: 200: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 32055  0040AE  0E13               	movlw	19
 32056  0040B0  6F8B               	movwf	(_loRa+139)& (0+255),b
 32057  0040B2  0E88               	movlw	136
 32058  0040B4  6F8A               	movwf	(_loRa+138)& (0+255),b
 32059                           
 32060                           ; BSR set to: 2
 32061                           ;lorawan_na.c: 201: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 32062  0040B6  0E17               	movlw	23
 32063  0040B8  6F8D               	movwf	(_loRa+141)& (0+255),b
 32064  0040BA  0E70               	movlw	112
 32065  0040BC  6F8C               	movwf	(_loRa+140)& (0+255),b
 32066                           
 32067                           ; BSR set to: 2
 32068                           ;lorawan_na.c: 202: loRa.protocolParameters.ackTimeout = 2000;
 32069  0040BE  0E07               	movlw	7
 32070  0040C0  6F93               	movwf	(_loRa+147)& (0+255),b
 32071  0040C2  0ED0               	movlw	208
 32072  0040C4  6F92               	movwf	(_loRa+146)& (0+255),b
 32073                           
 32074                           ; BSR set to: 2
 32075                           ;lorawan_na.c: 203: loRa.protocolParameters.adrAckDelay = 32;
 32076  0040C6  0E20               	movlw	32
 32077  0040C8  6F95               	movwf	(_loRa+149)& (0+255),b
 32078                           
 32079                           ; BSR set to: 2
 32080                           ;lorawan_na.c: 204: loRa.protocolParameters.adrAckLimit = 64;
 32081  0040CA  0E40               	movlw	64
 32082  0040CC  6F94               	movwf	(_loRa+148)& (0+255),b
 32083                           
 32084                           ; BSR set to: 2
 32085                           ;lorawan_na.c: 205: loRa.protocolParameters.maxFcntGap = 16384;
 32086  0040CE  0E40               	movlw	64
 32087  0040D0  6F8F               	movwf	(_loRa+143)& (0+255),b
 32088  0040D2  0E00               	movlw	0
 32089  0040D4  6F8E               	movwf	(_loRa+142)& (0+255),b
 32090                           
 32091                           ; BSR set to: 2
 32092                           ;lorawan_na.c: 207: LORAWAN_LinkCheckConfigure (0);
 32093  0040D6  0E00               	movlw	0
 32094  0040D8  0100               	movlb	0	; () banked
 32095  0040DA  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 32096  0040DC  0E00               	movlw	0
 32097  0040DE  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 32098  0040E0  EC96  F022         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 32099                           
 32100                           ;lorawan_na.c: 209: RADIO_SetPABoost (1);
 32101  0040E4  0E01               	movlw	1
 32102  0040E6  EC17  F03F         	call	_RADIO_SetPABoost
 32103  0040EA  0012               	return		;funcret
 32104  0040EC                     __end_of_LORAWAN_Reset:
 32105                           	opt stack 0
 32106                           tosu	equ	0xFFF
 32107                           tosh	equ	0xFFE
 32108                           tosl	equ	0xFFD
 32109                           pclath	equ	0xFFA
 32110                           tblptru	equ	0xFF8
 32111                           tblptrh	equ	0xFF7
 32112                           tblptrl	equ	0xFF6
 32113                           tablat	equ	0xFF5
 32114                           prodh	equ	0xFF4
 32115                           prodl	equ	0xFF3
 32116                           intcon	equ	0xFF2
 32117                           intcon2	equ	0xFF1
 32118                           intcon3	equ	0xFF0
 32119                           indf0	equ	0xFEF
 32120                           postinc0	equ	0xFEE
 32121                           plusw0	equ	0xFEB
 32122                           fsr0h	equ	0xFEA
 32123                           fsr0l	equ	0xFE9
 32124                           wreg	equ	0xFE8
 32125                           postinc1	equ	0xFE6
 32126                           postdec1	equ	0xFE5
 32127                           plusw1	equ	0xFE3
 32128                           fsr1h	equ	0xFE2
 32129                           fsr1l	equ	0xFE1
 32130                           indf2	equ	0xFDF
 32131                           postinc2	equ	0xFDE
 32132                           postdec2	equ	0xFDD
 32133                           plusw2	equ	0xFDB
 32134                           fsr2h	equ	0xFDA
 32135                           fsr2l	equ	0xFD9
 32136                           status	equ	0xFD8
 32137                           
 32138 ;; *************** function _UpdateMinMaxChDataRate *****************
 32139 ;; Defined at:
 32140 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32141 ;; Parameters:    Size  Location     Type
 32142 ;;		None
 32143 ;; Auto vars:     Size  Location     Type
 32144 ;;  i               1    1[BANK0 ] unsigned char 
 32145 ;; Return value:  Size  Location     Type
 32146 ;;                  1    wreg      void 
 32147 ;; Registers used:
 32148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32149 ;; Tracked objects:
 32150 ;;		On entry : 0/0
 32151 ;;		On exit  : 0/0
 32152 ;;		Unchanged: 0/0
 32153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32157 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32158 ;;Total ram usage:        2 bytes
 32159 ;; Hardware stack levels used:    1
 32160 ;; Hardware stack levels required when called:    7
 32161 ;; This function calls:
 32162 ;;		Nothing
 32163 ;; This function is called by:
 32164 ;;		_LORAWAN_Reset
 32165 ;;		_UpdateChannelIdStatus
 32166 ;; This function uses a non-reentrant model
 32167 ;;
 32168                           
 32169                           	psect	text153
 32170  00548E                     __ptext153:
 32171                           	opt stack 0
 32172  00548E                     _UpdateMinMaxChDataRate:
 32173                           	opt stack 15
 32174                           
 32175                           ;lorawan.c: 1065: uint8_t i;
 32176                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 32177                           
 32178                           ;incstack = 0
 32179  00548E  0E07               	movlw	7
 32180  005490  0102               	movlb	2	; () banked
 32181  005492  6FDC               	movwf	(_loRa+220)& (0+255),b
 32182                           
 32183                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 32184  005494  0E00               	movlw	0
 32185  005496  6FDD               	movwf	(_loRa+221)& (0+255),b
 32186                           
 32187                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 32188  005498  0E00               	movlw	0
 32189  00549A  0100               	movlb	0	; () banked
 32190  00549C  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 32191  00549E  D065               	goto	l1880
 32192  0054A0                     
 32193                           ; BSR set to: 0
 32194                           ;lorawan.c: 1072: {
 32195                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 32196                           
 32197                           ; BSR set to: 0
 32198  0054A0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32199  0054A2  0D02               	mullw	2
 32200  0054A4  0E01               	movlw	1
 32201  0054A6  26F3               	addwf	prodl,f,c
 32202  0054A8  0E00               	movlw	0
 32203  0054AA  22F4               	addwfc	prodh,f,c
 32204  0054AC  0E00               	movlw	low _Channels
 32205  0054AE  24F3               	addwf	prodl,w,c
 32206  0054B0  6ED9               	movwf	fsr2l,c
 32207  0054B2  0E04               	movlw	high _Channels
 32208  0054B4  20F4               	addwfc	prodh,w,c
 32209  0054B6  6EDA               	movwf	fsr2h,c
 32210  0054B8  0104               	movlb	4	; () banked
 32211  0054BA  50DF               	movf	223,w,c
 32212  0054BC  0B0F               	andlw	15
 32213  0054BE  0100               	movlb	0	; () banked
 32214  0054C0  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 32215  0054C2  0102               	movlb	2	; () banked
 32216  0054C4  51DC               	movf	(_loRa+220)& (0+255),w,b
 32217  0054C6  0100               	movlb	0	; () banked
 32218  0054C8  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 32219  0054CA  B0D8               	btfsc	status,0,c
 32220  0054CC  D01C               	goto	l1882
 32221                           
 32222                           ; BSR set to: 0
 32223  0054CE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32224  0054D0  0D02               	mullw	2
 32225  0054D2  0E00               	movlw	low _Channels
 32226  0054D4  24F3               	addwf	prodl,w,c
 32227  0054D6  6ED9               	movwf	fsr2l,c
 32228  0054D8  0E04               	movlw	high _Channels
 32229  0054DA  20F4               	addwfc	prodh,w,c
 32230  0054DC  6EDA               	movwf	fsr2h,c
 32231  0054DE  04DE               	decf	postinc2,w,c
 32232  0054E0  A4D8               	btfss	status,2,c
 32233  0054E2  D011               	goto	l1882
 32234                           
 32235                           ; BSR set to: 0
 32236                           ;lorawan.c: 1074: {
 32237                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 32238  0054E4  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32239  0054E6  0D02               	mullw	2
 32240  0054E8  0E01               	movlw	1
 32241  0054EA  26F3               	addwf	prodl,f,c
 32242  0054EC  0E00               	movlw	0
 32243  0054EE  22F4               	addwfc	prodh,f,c
 32244  0054F0  0E00               	movlw	low _Channels
 32245  0054F2  24F3               	addwf	prodl,w,c
 32246  0054F4  6ED9               	movwf	fsr2l,c
 32247  0054F6  0E04               	movlw	high _Channels
 32248  0054F8  20F4               	addwfc	prodh,w,c
 32249  0054FA  6EDA               	movwf	fsr2h,c
 32250  0054FC  0104               	movlb	4	; () banked
 32251  0054FE  50DF               	movf	223,w,c
 32252  005500  0B0F               	andlw	15
 32253  005502  0102               	movlb	2	; () banked
 32254  005504  6FDC               	movwf	(_loRa+220)& (0+255),b
 32255  005506                     l1882:
 32256                           
 32257                           ;lorawan.c: 1076: }
 32258                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 32259  005506  0100               	movlb	0	; () banked
 32260  005508  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32261  00550A  0D02               	mullw	2
 32262  00550C  0E01               	movlw	1
 32263  00550E  26F3               	addwf	prodl,f,c
 32264  005510  0E00               	movlw	0
 32265  005512  22F4               	addwfc	prodh,f,c
 32266  005514  0E00               	movlw	low _Channels
 32267  005516  24F3               	addwf	prodl,w,c
 32268  005518  6ED9               	movwf	fsr2l,c
 32269  00551A  0E04               	movlw	high _Channels
 32270  00551C  20F4               	addwfc	prodh,w,c
 32271  00551E  6EDA               	movwf	fsr2h,c
 32272  005520  0104               	movlb	4	; () banked
 32273  005522  38DF               	swapf	223,w,c
 32274  005524  0B0F               	andlw	15
 32275  005526  0102               	movlb	2	; () banked
 32276  005528  61DD               	cpfslt	(_loRa+221)& (0+255),b
 32277  00552A  D01D               	goto	l1883
 32278                           
 32279                           ; BSR set to: 2
 32280  00552C  0100               	movlb	0	; () banked
 32281  00552E  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32282  005530  0D02               	mullw	2
 32283  005532  0E00               	movlw	low _Channels
 32284  005534  24F3               	addwf	prodl,w,c
 32285  005536  6ED9               	movwf	fsr2l,c
 32286  005538  0E04               	movlw	high _Channels
 32287  00553A  20F4               	addwfc	prodh,w,c
 32288  00553C  6EDA               	movwf	fsr2h,c
 32289  00553E  04DE               	decf	postinc2,w,c
 32290  005540  A4D8               	btfss	status,2,c
 32291  005542  D011               	goto	l1883
 32292                           
 32293                           ; BSR set to: 0
 32294                           ;lorawan.c: 1078: {
 32295                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32296  005544  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32297  005546  0D02               	mullw	2
 32298  005548  0E01               	movlw	1
 32299  00554A  26F3               	addwf	prodl,f,c
 32300  00554C  0E00               	movlw	0
 32301  00554E  22F4               	addwfc	prodh,f,c
 32302  005550  0E00               	movlw	low _Channels
 32303  005552  24F3               	addwf	prodl,w,c
 32304  005554  6ED9               	movwf	fsr2l,c
 32305  005556  0E04               	movlw	high _Channels
 32306  005558  20F4               	addwfc	prodh,w,c
 32307  00555A  6EDA               	movwf	fsr2h,c
 32308  00555C  0104               	movlb	4	; () banked
 32309  00555E  38DF               	swapf	223,w,c
 32310  005560  0B0F               	andlw	15
 32311  005562  0102               	movlb	2	; () banked
 32312  005564  6FDD               	movwf	(_loRa+221)& (0+255),b
 32313  005566                     l1883:
 32314                           
 32315                           ; BSR set to: 2
 32316  005566  0100               	movlb	0	; () banked
 32317  005568  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32318  00556A                     l1880:
 32319                           
 32320                           ; BSR set to: 0
 32321                           
 32322                           ; BSR set to: 0
 32323  00556A  0102               	movlb	2	; () banked
 32324  00556C  51DE               	movf	(_loRa+222)& (0+255),w,b
 32325  00556E  0100               	movlb	0	; () banked
 32326  005570  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32327  005572  B0D8               	btfsc	status,0,c
 32328  005574  0012               	return	
 32329  005576  D794               	goto	l1881
 32330  005578                     __end_of_UpdateMinMaxChDataRate:
 32331                           	opt stack 0
 32332                           tosu	equ	0xFFF
 32333                           tosh	equ	0xFFE
 32334                           tosl	equ	0xFFD
 32335                           pclath	equ	0xFFA
 32336                           tblptru	equ	0xFF8
 32337                           tblptrh	equ	0xFF7
 32338                           tblptrl	equ	0xFF6
 32339                           tablat	equ	0xFF5
 32340                           prodh	equ	0xFF4
 32341                           prodl	equ	0xFF3
 32342                           intcon	equ	0xFF2
 32343                           intcon2	equ	0xFF1
 32344                           intcon3	equ	0xFF0
 32345                           indf0	equ	0xFEF
 32346                           postinc0	equ	0xFEE
 32347                           plusw0	equ	0xFEB
 32348                           fsr0h	equ	0xFEA
 32349                           fsr0l	equ	0xFE9
 32350                           wreg	equ	0xFE8
 32351                           postinc1	equ	0xFE6
 32352                           postdec1	equ	0xFE5
 32353                           plusw1	equ	0xFE3
 32354                           fsr1h	equ	0xFE2
 32355                           fsr1l	equ	0xFE1
 32356                           indf2	equ	0xFDF
 32357                           postinc2	equ	0xFDE
 32358                           postdec2	equ	0xFDD
 32359                           plusw2	equ	0xFDB
 32360                           fsr2h	equ	0xFDA
 32361                           fsr2l	equ	0xFD9
 32362                           status	equ	0xFD8
 32363                           
 32364 ;; *************** function _StopAllSoftwareTimers *****************
 32365 ;; Defined at:
 32366 ;;		line 817 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 32367 ;; Parameters:    Size  Location     Type
 32368 ;;		None
 32369 ;; Auto vars:     Size  Location     Type
 32370 ;;		None
 32371 ;; Return value:  Size  Location     Type
 32372 ;;                  1    wreg      void 
 32373 ;; Registers used:
 32374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32375 ;; Tracked objects:
 32376 ;;		On entry : 0/0
 32377 ;;		On exit  : 0/0
 32378 ;;		Unchanged: 0/0
 32379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32384 ;;Total ram usage:        0 bytes
 32385 ;; Hardware stack levels used:    1
 32386 ;; Hardware stack levels required when called:    8
 32387 ;; This function calls:
 32388 ;;		_SwTimerStop
 32389 ;; This function is called by:
 32390 ;;		_LORAWAN_Init
 32391 ;;		_LORAWAN_Reset
 32392 ;; This function uses a non-reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text154
 32396  007004                     __ptext154:
 32397                           	opt stack 0
 32398  007004                     _StopAllSoftwareTimers:
 32399                           	opt stack 21
 32400                           
 32401                           ;lorawan_na.c: 819: SwTimerStop(loRa.joinAccept1TimerId);
 32402                           
 32403                           ; BSR set to: 0
 32404                           ;incstack = 0
 32405  007004  0102               	movlb	2	; () banked
 32406  007006  51D3               	movf	(_loRa+211)& (0+255),w,b
 32407  007008  EC89  F03C         	call	_SwTimerStop
 32408                           
 32409                           ;lorawan_na.c: 820: SwTimerStop(loRa.joinAccept2TimerId);
 32410  00700C  0102               	movlb	2	; () banked
 32411  00700E  51D4               	movf	(_loRa+212)& (0+255),w,b
 32412  007010  EC89  F03C         	call	_SwTimerStop
 32413                           
 32414                           ;lorawan_na.c: 821: SwTimerStop(loRa.linkCheckTimerId);
 32415  007014  0102               	movlb	2	; () banked
 32416  007016  51D8               	movf	(_loRa+216)& (0+255),w,b
 32417  007018  EC89  F03C         	call	_SwTimerStop
 32418                           
 32419                           ;lorawan_na.c: 822: SwTimerStop(loRa.receiveWindow1TimerId);
 32420  00701C  0102               	movlb	2	; () banked
 32421  00701E  51D5               	movf	(_loRa+213)& (0+255),w,b
 32422  007020  EC89  F03C         	call	_SwTimerStop
 32423                           
 32424                           ;lorawan_na.c: 823: SwTimerStop(loRa.receiveWindow2TimerId);
 32425  007024  0102               	movlb	2	; () banked
 32426  007026  51D6               	movf	(_loRa+214)& (0+255),w,b
 32427  007028  EC89  F03C         	call	_SwTimerStop
 32428                           
 32429                           ;lorawan_na.c: 824: SwTimerStop(loRa.ackTimeoutTimerId);
 32430  00702C  0102               	movlb	2	; () banked
 32431  00702E  51D9               	movf	(_loRa+217)& (0+255),w,b
 32432  007030  EC89  F03C         	call	_SwTimerStop
 32433                           
 32434                           ;lorawan_na.c: 825: SwTimerStop(loRa.automaticReplyTimerId);
 32435  007034  0102               	movlb	2	; () banked
 32436  007036  51D7               	movf	(_loRa+215)& (0+255),w,b
 32437  007038  EC89  F03C         	call	_SwTimerStop
 32438                           
 32439                           ;lorawan_na.c: 826: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32440  00703C  0102               	movlb	2	; () banked
 32441  00703E  51DB               	movf	(_loRa+219)& (0+255),w,b
 32442  007040  EC89  F03C         	call	_SwTimerStop
 32443                           
 32444                           ;lorawan_na.c: 827: SwTimerStop(loRa.abpJoinTimerId);
 32445  007044  0102               	movlb	2	; () banked
 32446  007046  51E4               	movf	(_loRa+228)& (0+255),w,b
 32447  007048  EC89  F03C         	call	_SwTimerStop
 32448                           
 32449                           ;lorawan_na.c: 828: SwTimerStop(loRa.transmissionErrorTimerId);
 32450  00704C  0102               	movlb	2	; () banked
 32451  00704E  51E5               	movf	(_loRa+229)& (0+255),w,b
 32452  007050  EC89  F03C         	call	_SwTimerStop
 32453  007054  0012               	return		;funcret
 32454  007056                     __end_of_StopAllSoftwareTimers:
 32455                           	opt stack 0
 32456                           tosu	equ	0xFFF
 32457                           tosh	equ	0xFFE
 32458                           tosl	equ	0xFFD
 32459                           pclath	equ	0xFFA
 32460                           tblptru	equ	0xFF8
 32461                           tblptrh	equ	0xFF7
 32462                           tblptrl	equ	0xFF6
 32463                           tablat	equ	0xFF5
 32464                           prodh	equ	0xFF4
 32465                           prodl	equ	0xFF3
 32466                           intcon	equ	0xFF2
 32467                           intcon2	equ	0xFF1
 32468                           intcon3	equ	0xFF0
 32469                           indf0	equ	0xFEF
 32470                           postinc0	equ	0xFEE
 32471                           plusw0	equ	0xFEB
 32472                           fsr0h	equ	0xFEA
 32473                           fsr0l	equ	0xFE9
 32474                           wreg	equ	0xFE8
 32475                           postinc1	equ	0xFE6
 32476                           postdec1	equ	0xFE5
 32477                           plusw1	equ	0xFE3
 32478                           fsr1h	equ	0xFE2
 32479                           fsr1l	equ	0xFE1
 32480                           indf2	equ	0xFDF
 32481                           postinc2	equ	0xFDE
 32482                           postdec2	equ	0xFDD
 32483                           plusw2	equ	0xFDB
 32484                           fsr2h	equ	0xFDA
 32485                           fsr2l	equ	0xFD9
 32486                           status	equ	0xFD8
 32487                           
 32488 ;; *************** function _RADIO_SetPABoost *****************
 32489 ;; Defined at:
 32490 ;;		line 1598 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32491 ;; Parameters:    Size  Location     Type
 32492 ;;  paBoost         1    wreg     unsigned char 
 32493 ;; Auto vars:     Size  Location     Type
 32494 ;;  paBoost         1    0[BANK0 ] unsigned char 
 32495 ;; Return value:  Size  Location     Type
 32496 ;;                  1    wreg      void 
 32497 ;; Registers used:
 32498 ;;		wreg
 32499 ;; Tracked objects:
 32500 ;;		On entry : 0/0
 32501 ;;		On exit  : 0/0
 32502 ;;		Unchanged: 0/0
 32503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32507 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32508 ;;Total ram usage:        1 bytes
 32509 ;; Hardware stack levels used:    1
 32510 ;; Hardware stack levels required when called:    7
 32511 ;; This function calls:
 32512 ;;		Nothing
 32513 ;; This function is called by:
 32514 ;;		_LORAWAN_Reset
 32515 ;; This function uses a non-reentrant model
 32516 ;;
 32517                           
 32518                           	psect	text155
 32519  007E2E                     __ptext155:
 32520                           	opt stack 0
 32521  007E2E                     _RADIO_SetPABoost:
 32522                           	opt stack 21
 32523                           
 32524                           ;incstack = 0
 32525                           ;RADIO_SetPABoost@paBoost stored from wreg
 32526  007E2E  0100               	movlb	0	; () banked
 32527  007E30  6F60               	movwf	RADIO_SetPABoost@paBoost& (0+255),b
 32528                           
 32529                           ;radio_driver_SX1276.c: 1600: RadioConfiguration.paBoost = paBoost;
 32530  007E32  C060  F191         	movff	RADIO_SetPABoost@paBoost,_RadioConfiguration+29
 32531  007E36  0012               	return		;funcret
 32532  007E38                     __end_of_RADIO_SetPABoost:
 32533                           	opt stack 0
 32534                           tosu	equ	0xFFF
 32535                           tosh	equ	0xFFE
 32536                           tosl	equ	0xFFD
 32537                           pclath	equ	0xFFA
 32538                           tblptru	equ	0xFF8
 32539                           tblptrh	equ	0xFF7
 32540                           tblptrl	equ	0xFF6
 32541                           tablat	equ	0xFF5
 32542                           prodh	equ	0xFF4
 32543                           prodl	equ	0xFF3
 32544                           intcon	equ	0xFF2
 32545                           intcon2	equ	0xFF1
 32546                           intcon3	equ	0xFF0
 32547                           indf0	equ	0xFEF
 32548                           postinc0	equ	0xFEE
 32549                           plusw0	equ	0xFEB
 32550                           fsr0h	equ	0xFEA
 32551                           fsr0l	equ	0xFE9
 32552                           wreg	equ	0xFE8
 32553                           postinc1	equ	0xFE6
 32554                           postdec1	equ	0xFE5
 32555                           plusw1	equ	0xFE3
 32556                           fsr1h	equ	0xFE2
 32557                           fsr1l	equ	0xFE1
 32558                           indf2	equ	0xFDF
 32559                           postinc2	equ	0xFDE
 32560                           postdec2	equ	0xFDD
 32561                           plusw2	equ	0xFDB
 32562                           fsr2h	equ	0xFDA
 32563                           fsr2l	equ	0xFD9
 32564                           status	equ	0xFD8
 32565                           
 32566 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32567 ;; Defined at:
 32568 ;;		line 550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32569 ;; Parameters:    Size  Location     Type
 32570 ;;  syncWord        1    wreg     unsigned char 
 32571 ;; Auto vars:     Size  Location     Type
 32572 ;;  syncWord        1    0[BANK0 ] unsigned char 
 32573 ;; Return value:  Size  Location     Type
 32574 ;;                  1    wreg      void 
 32575 ;; Registers used:
 32576 ;;		wreg
 32577 ;; Tracked objects:
 32578 ;;		On entry : 0/0
 32579 ;;		On exit  : 0/0
 32580 ;;		Unchanged: 0/0
 32581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32586 ;;Total ram usage:        1 bytes
 32587 ;; Hardware stack levels used:    1
 32588 ;; Hardware stack levels required when called:    7
 32589 ;; This function calls:
 32590 ;;		Nothing
 32591 ;; This function is called by:
 32592 ;;		_LORAWAN_Reset
 32593 ;;		_ConfigureRadio
 32594 ;;		_SelectChannelForTransmission
 32595 ;; This function uses a non-reentrant model
 32596 ;;
 32597                           
 32598                           	psect	text156
 32599  007E38                     __ptext156:
 32600                           	opt stack 0
 32601  007E38                     _RADIO_SetLoRaSyncWord:
 32602                           	opt stack 21
 32603                           
 32604                           ;incstack = 0
 32605                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32606  007E38  0100               	movlb	0	; () banked
 32607  007E3A  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32608                           
 32609                           ;radio_driver_SX1276.c: 553: RadioConfiguration.syncWordLoRa = syncWord;
 32610  007E3C  C060  F182         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32611  007E40  0012               	return		;funcret
 32612  007E42                     __end_of_RADIO_SetLoRaSyncWord:
 32613                           	opt stack 0
 32614                           tosu	equ	0xFFF
 32615                           tosh	equ	0xFFE
 32616                           tosl	equ	0xFFD
 32617                           pclath	equ	0xFFA
 32618                           tblptru	equ	0xFF8
 32619                           tblptrh	equ	0xFF7
 32620                           tblptrl	equ	0xFF6
 32621                           tablat	equ	0xFF5
 32622                           prodh	equ	0xFF4
 32623                           prodl	equ	0xFF3
 32624                           intcon	equ	0xFF2
 32625                           intcon2	equ	0xFF1
 32626                           intcon3	equ	0xFF0
 32627                           indf0	equ	0xFEF
 32628                           postinc0	equ	0xFEE
 32629                           plusw0	equ	0xFEB
 32630                           fsr0h	equ	0xFEA
 32631                           fsr0l	equ	0xFE9
 32632                           wreg	equ	0xFE8
 32633                           postinc1	equ	0xFE6
 32634                           postdec1	equ	0xFE5
 32635                           plusw1	equ	0xFE3
 32636                           fsr1h	equ	0xFE2
 32637                           fsr1l	equ	0xFE1
 32638                           indf2	equ	0xFDF
 32639                           postinc2	equ	0xFDE
 32640                           postdec2	equ	0xFDD
 32641                           plusw2	equ	0xFDB
 32642                           fsr2h	equ	0xFDA
 32643                           fsr2l	equ	0xFD9
 32644                           status	equ	0xFD8
 32645                           
 32646 ;; *************** function _RADIO_Init *****************
 32647 ;; Defined at:
 32648 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32649 ;; Parameters:    Size  Location     Type
 32650 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 32651 ;;		 -> radioBuffer(271), 
 32652 ;;  frequency       4   27[BANK0 ] unsigned long 
 32653 ;; Auto vars:     Size  Location     Type
 32654 ;;  cnt             1   32[BANK0 ] unsigned char 
 32655 ;; Return value:  Size  Location     Type
 32656 ;;                  1    wreg      void 
 32657 ;; Registers used:
 32658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32659 ;; Tracked objects:
 32660 ;;		On entry : 0/0
 32661 ;;		On exit  : 0/0
 32662 ;;		Unchanged: 0/0
 32663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32667 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32668 ;;Total ram usage:        8 bytes
 32669 ;; Hardware stack levels used:    1
 32670 ;; Hardware stack levels required when called:   11
 32671 ;; This function calls:
 32672 ;;		_RADIO_RegisterRead
 32673 ;;		_RADIO_RegisterWrite
 32674 ;;		_RADIO_Reset
 32675 ;;		_RADIO_WriteFrequency
 32676 ;;		_RADIO_WriteMode
 32677 ;;		_SwTimerCreate
 32678 ;;		_SwTimerSetCallback
 32679 ;;		_SwTimerStop
 32680 ;; This function is called by:
 32681 ;;		_LORAWAN_Init
 32682 ;;		_LORAWAN_Reset
 32683 ;; This function uses a non-reentrant model
 32684 ;;
 32685                           
 32686                           	psect	text157
 32687  00388E                     __ptext157:
 32688                           	opt stack 0
 32689  00388E                     _RADIO_Init:
 32690                           	opt stack 18
 32691                           
 32692                           ;radio_driver_SX1276.c: 424: char cnt=0;
 32693                           
 32694                           ;incstack = 0
 32695  00388E  0E00               	movlw	0
 32696  003890  0100               	movlb	0	; () banked
 32697  003892  6F80               	movwf	RADIO_Init@cnt& (0+255),b
 32698                           
 32699                           ; BSR set to: 0
 32700                           ;radio_driver_SX1276.c: 426: RadioConfiguration.frequency = frequency;
 32701  003894  C07B  F174         	movff	RADIO_Init@frequency,_RadioConfiguration
 32702  003898  C07C  F175         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32703  00389C  C07D  F176         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32704  0038A0  C07E  F177         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32705                           
 32706                           ;radio_driver_SX1276.c: 427: RadioConfiguration.frequencyDeviation = 25000;
 32707  0038A4  0EA8               	movlw	168
 32708  0038A6  0101               	movlb	1	; () banked
 32709  0038A8  6F78               	movwf	(_RadioConfiguration+4)& (0+255),b
 32710  0038AA  0E61               	movlw	97
 32711  0038AC  6F79               	movwf	(_RadioConfiguration+5)& (0+255),b
 32712  0038AE  0E00               	movlw	0
 32713  0038B0  6F7A               	movwf	(_RadioConfiguration+6)& (0+255),b
 32714  0038B2  0E00               	movlw	0
 32715  0038B4  6F7B               	movwf	(_RadioConfiguration+7)& (0+255),b
 32716                           
 32717                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bitRate = 50000;
 32718  0038B6  0E50               	movlw	80
 32719  0038B8  6F7C               	movwf	(_RadioConfiguration+8)& (0+255),b
 32720  0038BA  0EC3               	movlw	195
 32721  0038BC  6F7D               	movwf	(_RadioConfiguration+9)& (0+255),b
 32722  0038BE  0E00               	movlw	0
 32723  0038C0  6F7E               	movwf	(_RadioConfiguration+10)& (0+255),b
 32724  0038C2  0E00               	movlw	0
 32725  0038C4  6F7F               	movwf	(_RadioConfiguration+11)& (0+255),b
 32726                           
 32727                           ;radio_driver_SX1276.c: 429: RadioConfiguration.modulation = MODULATION_LORA;
 32728  0038C6  0E01               	movlw	1
 32729  0038C8  6F8C               	movwf	(_RadioConfiguration+24)& (0+255),b
 32730                           
 32731                           ;radio_driver_SX1276.c: 430: RadioConfiguration.bandWidth = BW_125KHZ;
 32732  0038CA  0E07               	movlw	7
 32733  0038CC  6F8E               	movwf	(_RadioConfiguration+26)& (0+255),b
 32734                           
 32735                           ;radio_driver_SX1276.c: 431: RadioConfiguration.outputPower = 2;
 32736  0038CE  0E02               	movlw	2
 32737  0038D0  6F8F               	movwf	(_RadioConfiguration+27)& (0+255),b
 32738                           
 32739                           ;radio_driver_SX1276.c: 432: RadioConfiguration.errorCodingRate = CR_4_5;
 32740  0038D2  0E01               	movlw	1
 32741  0038D4  6F95               	movwf	(_RadioConfiguration+33)& (0+255),b
 32742                           
 32743                           ;radio_driver_SX1276.c: 433: RadioConfiguration.implicitHeaderMode = 0;
 32744  0038D6  0E00               	movlw	0
 32745  0038D8  6F96               	movwf	(_RadioConfiguration+34)& (0+255),b
 32746                           
 32747                           ;radio_driver_SX1276.c: 434: RadioConfiguration.preambleLen = 8;
 32748  0038DA  0E00               	movlw	0
 32749  0038DC  6F81               	movwf	(_RadioConfiguration+13)& (0+255),b
 32750  0038DE  0E08               	movlw	8
 32751  0038E0  6F80               	movwf	(_RadioConfiguration+12)& (0+255),b
 32752                           
 32753                           ;radio_driver_SX1276.c: 435: RadioConfiguration.dataRate = SF_12;
 32754  0038E2  0E0C               	movlw	12
 32755  0038E4  6F8D               	movwf	(_RadioConfiguration+25)& (0+255),b
 32756                           
 32757                           ;radio_driver_SX1276.c: 436: RadioConfiguration.crcOn = 1;
 32758  0038E6  0E01               	movlw	1
 32759  0038E8  6F90               	movwf	(_RadioConfiguration+28)& (0+255),b
 32760                           
 32761                           ;radio_driver_SX1276.c: 437: RadioConfiguration.paBoost = 0;
 32762  0038EA  0E00               	movlw	0
 32763  0038EC  6F91               	movwf	(_RadioConfiguration+29)& (0+255),b
 32764                           
 32765                           ;radio_driver_SX1276.c: 438: RadioConfiguration.iqInverted = 0;
 32766  0038EE  0E00               	movlw	0
 32767  0038F0  6F94               	movwf	(_RadioConfiguration+32)& (0+255),b
 32768                           
 32769                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[0] = 0xC1;
 32770  0038F2  0EC1               	movlw	193
 32771  0038F4  6F83               	movwf	(_RadioConfiguration+15)& (0+255),b
 32772                           
 32773                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWord[1] = 0x94;
 32774  0038F6  0E94               	movlw	148
 32775  0038F8  6F84               	movwf	(_RadioConfiguration+16)& (0+255),b
 32776                           
 32777                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWord[2] = 0xC1;
 32778  0038FA  0EC1               	movlw	193
 32779  0038FC  6F85               	movwf	(_RadioConfiguration+17)& (0+255),b
 32780                           
 32781                           ;radio_driver_SX1276.c: 442: RadioConfiguration.syncWordLen = 3;
 32782  0038FE  0E03               	movlw	3
 32783  003900  6F8B               	movwf	(_RadioConfiguration+23)& (0+255),b
 32784                           
 32785                           ;radio_driver_SX1276.c: 443: RadioConfiguration.syncWordLoRa = 0x34;
 32786  003902  0E34               	movlw	52
 32787  003904  6F82               	movwf	(_RadioConfiguration+14)& (0+255),b
 32788                           
 32789                           ;radio_driver_SX1276.c: 444: RadioConfiguration.flags = 0;
 32790  003906  0E00               	movlw	0
 32791  003908  6F97               	movwf	(_RadioConfiguration+35)& (0+255),b
 32792                           
 32793                           ;radio_driver_SX1276.c: 445: RadioConfiguration.dataBufferLen = 0;
 32794  00390A  0E00               	movlw	0
 32795  00390C  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
 32796                           
 32797                           ; BSR set to: 1
 32798                           ;radio_driver_SX1276.c: 446: RadioConfiguration.dataBuffer = radioBuffer;
 32799  00390E  C079  F199         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32800  003912  C07A  F19A         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32801                           
 32802                           ; BSR set to: 1
 32803                           ;radio_driver_SX1276.c: 447: RadioConfiguration.frequencyHopPeriod = 0;
 32804  003916  0E00               	movlw	0
 32805  003918  6F93               	movwf	(_RadioConfiguration+31)& (0+255),b
 32806  00391A  0E00               	movlw	0
 32807  00391C  6F92               	movwf	(_RadioConfiguration+30)& (0+255),b
 32808                           
 32809                           ; BSR set to: 1
 32810                           ;radio_driver_SX1276.c: 448: RadioConfiguration.packetSNR = -128;
 32811  00391E  0E80               	movlw	128
 32812  003920  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
 32813                           
 32814                           ; BSR set to: 1
 32815                           ;radio_driver_SX1276.c: 449: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32816  003922  0E98               	movlw	152
 32817  003924  6F9E               	movwf	(_RadioConfiguration+42)& (0+255),b
 32818  003926  0E3A               	movlw	58
 32819  003928  6F9F               	movwf	(_RadioConfiguration+43)& (0+255),b
 32820  00392A  0E00               	movlw	0
 32821  00392C  6FA0               	movwf	(_RadioConfiguration+44)& (0+255),b
 32822  00392E  0E00               	movlw	0
 32823  003930  6FA1               	movwf	(_RadioConfiguration+45)& (0+255),b
 32824                           
 32825                           ; BSR set to: 1
 32826                           ;radio_driver_SX1276.c: 450: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32827  003932  0E02               	movlw	2
 32828  003934  6FA7               	movwf	(_RadioConfiguration+51)& (0+255),b
 32829                           
 32830                           ; BSR set to: 1
 32831                           ;radio_driver_SX1276.c: 451: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32832  003936  0E0B               	movlw	11
 32833  003938  6FA8               	movwf	(_RadioConfiguration+52)& (0+255),b
 32834                           
 32835                           ; BSR set to: 1
 32836                           ;radio_driver_SX1276.c: 452: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32837  00393A  0E12               	movlw	18
 32838  00393C  6FA9               	movwf	(_RadioConfiguration+53)& (0+255),b
 32839                           
 32840                           ; BSR set to: 1
 32841                           ;radio_driver_SX1276.c: 453: RadioConfiguration.fhssNextFrequency = (0);
 32842  00393E  0E00               	movlw	0
 32843  003940  6FA3               	movwf	(_RadioConfiguration+47)& (0+255),b
 32844  003942  0E00               	movlw	0
 32845  003944  6FA4               	movwf	(_RadioConfiguration+48)& (0+255),b
 32846                           
 32847                           ;radio_driver_SX1276.c: 458: if (0 == RadioConfiguration.initialized)
 32848  003946  51A2               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32849  003948  A4D8               	btfss	status,2,c
 32850  00394A  D026               	goto	l463
 32851                           
 32852                           ; BSR set to: 1
 32853                           ;radio_driver_SX1276.c: 459: {
 32854                           ;radio_driver_SX1276.c: 462: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32855  00394C  EC40  F031         	call	_SwTimerCreate	;wreg free
 32856  003950  0101               	movlb	1	; () banked
 32857  003952  6F9B               	movwf	(_RadioConfiguration+39)& (0+255),b
 32858                           
 32859                           ;radio_driver_SX1276.c: 463: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32860  003954  EC40  F031         	call	_SwTimerCreate	;wreg free
 32861  003958  0101               	movlb	1	; () banked
 32862  00395A  6F9C               	movwf	(_RadioConfiguration+40)& (0+255),b
 32863                           
 32864                           ;radio_driver_SX1276.c: 464: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32865  00395C  EC40  F031         	call	_SwTimerCreate	;wreg free
 32866  003960  0101               	movlb	1	; () banked
 32867  003962  6F9D               	movwf	(_RadioConfiguration+41)& (0+255),b
 32868                           
 32869                           ;radio_driver_SX1276.c: 465: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32870  003964  0E06               	movlw	low _RADIO_RxFSKTimeout
 32871  003966  0100               	movlb	0	; () banked
 32872  003968  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 32873  00396A  0E75               	movlw	high _RADIO_RxFSKTimeout
 32874  00396C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32875  00396E  0E00               	movlw	0
 32876  003970  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 32877  003972  0101               	movlb	1	; () banked
 32878  003974  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32879  003976  EC7B  F039         	call	_SwTimerSetCallback
 32880                           
 32881                           ;radio_driver_SX1276.c: 466: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32882  00397A  0EE0               	movlw	low _RADIO_WatchdogTimeout
 32883  00397C  0100               	movlb	0	; () banked
 32884  00397E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 32885  003980  0E71               	movlw	high _RADIO_WatchdogTimeout
 32886  003982  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32887  003984  0E00               	movlw	0
 32888  003986  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 32889  003988  0101               	movlb	1	; () banked
 32890  00398A  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32891  00398C  EC7B  F039         	call	_SwTimerSetCallback
 32892                           
 32893                           ;radio_driver_SX1276.c: 467: RadioConfiguration.initialized = 1;
 32894  003990  0E01               	movlw	1
 32895  003992  0101               	movlb	1	; () banked
 32896  003994  6FA2               	movwf	(_RadioConfiguration+46)& (0+255),b
 32897                           
 32898                           ;radio_driver_SX1276.c: 468: }
 32899  003996  D00B               	goto	l464
 32900  003998                     l463:
 32901                           
 32902                           ; BSR set to: 1
 32903                           ;radio_driver_SX1276.c: 469: else
 32904                           ;radio_driver_SX1276.c: 470: {
 32905                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32906                           
 32907                           ; BSR set to: 1
 32908  003998  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32909  00399A  EC89  F03C         	call	_SwTimerStop
 32910                           
 32911                           ;radio_driver_SX1276.c: 472: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32912  00399E  0101               	movlb	1	; () banked
 32913  0039A0  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32914  0039A2  EC89  F03C         	call	_SwTimerStop
 32915                           
 32916                           ;radio_driver_SX1276.c: 473: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32917  0039A6  0101               	movlb	1	; () banked
 32918  0039A8  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32919  0039AA  EC89  F03C         	call	_SwTimerStop
 32920  0039AE                     l464:
 32921                           
 32922                           ;radio_driver_SX1276.c: 474: }
 32923                           ;radio_driver_SX1276.c: 476: RADIO_Reset();
 32924  0039AE  EC14  F039         	call	_RADIO_Reset	;wreg free
 32925                           
 32926                           ;radio_driver_SX1276.c: 481: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32927  0039B2  0E00               	movlw	0
 32928  0039B4  0100               	movlb	0	; () banked
 32929  0039B6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32930  0039B8  0E01               	movlw	1
 32931  0039BA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32932  0039BC  0E01               	movlw	1
 32933  0039BE  EC5E  F028         	call	_RADIO_WriteMode
 32934                           
 32935                           ;radio_driver_SX1276.c: 484: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32936  0039C2  C174  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32937  0039C6  C175  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32938  0039CA  C176  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32939  0039CE  C177  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32940  0039D2  ECCF  F029         	call	_RADIO_WriteFrequency	;wreg free
 32941                           
 32942                           ;radio_driver_SX1276.c: 488: RADIO_RegisterWrite(0x3B, 0x42);
 32943  0039D6  0E42               	movlw	66
 32944  0039D8  0100               	movlb	0	; () banked
 32945  0039DA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32946  0039DC  0E3B               	movlw	59
 32947  0039DE  EC5D  F03D         	call	_RADIO_RegisterWrite
 32948  0039E2                     
 32949                           ;radio_driver_SX1276.c: 492: ;
 32950  0039E2  0E3B               	movlw	59
 32951  0039E4  EC75  F03C         	call	_RADIO_RegisterRead
 32952  0039E8  0100               	movlb	0	; () banked
 32953  0039EA  6F7F               	movwf	??_RADIO_Init& (0+255),b
 32954  0039EC  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 32955  0039EE  D7F9               	goto	l466
 32956                           
 32957                           ; BSR set to: 0
 32958                           ;radio_driver_SX1276.c: 495: RADIO_RegisterWrite(0x0C, 0x23);
 32959                           
 32960                           ; BSR set to: 0
 32961  0039F0  0E23               	movlw	35
 32962  0039F2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32963  0039F4  0E0C               	movlw	12
 32964  0039F6  EC5D  F03D         	call	_RADIO_RegisterWrite
 32965                           
 32966                           ;radio_driver_SX1276.c: 498: RADIO_RegisterWrite(0x0D, 0x1E);
 32967  0039FA  0E1E               	movlw	30
 32968  0039FC  0100               	movlb	0	; () banked
 32969  0039FE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32970  003A00  0E0D               	movlw	13
 32971  003A02  EC5D  F03D         	call	_RADIO_RegisterWrite
 32972                           
 32973                           ;radio_driver_SX1276.c: 502: RADIO_RegisterWrite(0x1F, 0xAA);
 32974  003A06  0EAA               	movlw	170
 32975  003A08  0100               	movlb	0	; () banked
 32976  003A0A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32977  003A0C  0E1F               	movlw	31
 32978  003A0E  EC5D  F03D         	call	_RADIO_RegisterWrite
 32979                           
 32980                           ;radio_driver_SX1276.c: 506: RADIO_RegisterWrite(0x35, 0x8F);
 32981  003A12  0E8F               	movlw	143
 32982  003A14  0100               	movlb	0	; () banked
 32983  003A16  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32984  003A18  0E35               	movlw	53
 32985  003A1A  EC5D  F03D         	call	_RADIO_RegisterWrite
 32986                           
 32987                           ;radio_driver_SX1276.c: 509: RADIO_RegisterWrite(0x32, 0xFF);
 32988  003A1E  0EFF               	movlw	255
 32989  003A20  0100               	movlb	0	; () banked
 32990  003A22  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32991  003A24  0E32               	movlw	50
 32992  003A26  EC5D  F03D         	call	_RADIO_RegisterWrite
 32993                           
 32994                           ;radio_driver_SX1276.c: 512: RADIO_RegisterWrite(0x31, 1 << (6));
 32995  003A2A  0E40               	movlw	64
 32996  003A2C  0100               	movlb	0	; () banked
 32997  003A2E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32998  003A30  0E31               	movlw	49
 32999  003A32  EC5D  F03D         	call	_RADIO_RegisterWrite
 33000                           
 33001                           ;radio_driver_SX1276.c: 515: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33002  003A36  0E01               	movlw	1
 33003  003A38  0100               	movlb	0	; () banked
 33004  003A3A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33005  003A3C  0E01               	movlw	1
 33006  003A3E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33007  003A40  0E00               	movlw	0
 33008  003A42  EC5E  F028         	call	_RADIO_WriteMode
 33009                           
 33010                           ;radio_driver_SX1276.c: 531: do { TRISB3 = 1; } while(0);
 33011  003A46  8693               	bsf	3987,3,c	;volatile
 33012                           
 33013                           ;radio_driver_SX1276.c: 532: do { WPUB3 = 1; } while(0);
 33014  003A48  8661               	bsf	3937,3,c	;volatile
 33015                           
 33016                           ;radio_driver_SX1276.c: 533: INTCON2bits.nRBPU = 0;
 33017  003A4A  9EF1               	bcf	intcon2,7,c	;volatile
 33018                           
 33019                           ;radio_driver_SX1276.c: 534: for (cnt=0; !(cnt&0x80); cnt++)
 33020  003A4C  0E00               	movlw	0
 33021  003A4E  0100               	movlb	0	; () banked
 33022  003A50  6F80               	movwf	RADIO_Init@cnt& (0+255),b
 33023  003A52  D005               	goto	l472
 33024  003A54                     l473:
 33025                           
 33026                           ; BSR set to: 0
 33027                           ;radio_driver_SX1276.c: 535: if (PORTBbits.RB3)
 33028  003A54  A681               	btfss	3969,3,c	;volatile
 33029  003A56  D002               	goto	l474
 33030                           
 33031                           ; BSR set to: 0
 33032                           
 33033                           ;radio_driver_SX1276.c: 536: {
 33034                           ;radio_driver_SX1276.c: 537: do { TRISB3 = 0; } while(0);
 33035  003A58  9693               	bcf	3987,3,c	;volatile
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;radio_driver_SX1276.c: 538: break;
 33039  003A5A  D003               	goto	u11220
 33040  003A5C                     l474:
 33041                           
 33042                           ; BSR set to: 0
 33043                           
 33044                           ; BSR set to: 0
 33045  003A5C  2B80               	incf	RADIO_Init@cnt& (0+255),f,b
 33046  003A5E                     l472:
 33047                           
 33048                           ; BSR set to: 0
 33049                           
 33050                           ; BSR set to: 0
 33051  003A5E  AF80               	btfss	RADIO_Init@cnt& (0+255),7,b
 33052  003A60  D7F9               	goto	l473
 33053  003A62                     u11220:
 33054                           
 33055                           ; BSR set to: 0
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;radio_driver_SX1276.c: 539: }
 33059                           ;radio_driver_SX1276.c: 541: do { WPUB3 = 0; } while(0);
 33060  003A62  9661               	bcf	3937,3,c	;volatile
 33061                           
 33062                           ; BSR set to: 0
 33063                           ;radio_driver_SX1276.c: 542: INTCON2bits.nRBPU = 1;
 33064  003A64  8EF1               	bsf	intcon2,7,c	;volatile
 33065                           
 33066                           ; BSR set to: 0
 33067                           ;radio_driver_SX1276.c: 545: RADIO_RegisterWrite(0x23, 0xFF);
 33068  003A66  0EFF               	movlw	255
 33069  003A68  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33070  003A6A  0E23               	movlw	35
 33071  003A6C  EC5D  F03D         	call	_RADIO_RegisterWrite
 33072                           
 33073                           ;radio_driver_SX1276.c: 547: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 33074  003A70  0E42               	movlw	66
 33075  003A72  EC75  F03C         	call	_RADIO_RegisterRead
 33076  003A76  0101               	movlb	1	; () banked
 33077  003A78  6FA5               	movwf	(_RadioConfiguration+49)& (0+255),b
 33078                           
 33079                           ; BSR set to: 1
 33080  003A7A  0012               	return		;funcret
 33081  003A7C                     __end_of_RADIO_Init:
 33082                           	opt stack 0
 33083                           tosu	equ	0xFFF
 33084                           tosh	equ	0xFFE
 33085                           tosl	equ	0xFFD
 33086                           pclath	equ	0xFFA
 33087                           tblptru	equ	0xFF8
 33088                           tblptrh	equ	0xFF7
 33089                           tblptrl	equ	0xFF6
 33090                           tablat	equ	0xFF5
 33091                           prodh	equ	0xFF4
 33092                           prodl	equ	0xFF3
 33093                           intcon	equ	0xFF2
 33094                           intcon2	equ	0xFF1
 33095                           intcon3	equ	0xFF0
 33096                           indf0	equ	0xFEF
 33097                           postinc0	equ	0xFEE
 33098                           plusw0	equ	0xFEB
 33099                           fsr0h	equ	0xFEA
 33100                           fsr0l	equ	0xFE9
 33101                           wreg	equ	0xFE8
 33102                           postinc1	equ	0xFE6
 33103                           postdec1	equ	0xFE5
 33104                           plusw1	equ	0xFE3
 33105                           fsr1h	equ	0xFE2
 33106                           fsr1l	equ	0xFE1
 33107                           indf2	equ	0xFDF
 33108                           postinc2	equ	0xFDE
 33109                           postdec2	equ	0xFDD
 33110                           plusw2	equ	0xFDB
 33111                           fsr2h	equ	0xFDA
 33112                           fsr2l	equ	0xFD9
 33113                           status	equ	0xFD8
 33114                           
 33115 ;; *************** function _SwTimerSetCallback *****************
 33116 ;; Defined at:
 33117 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 33118 ;; Parameters:    Size  Location     Type
 33119 ;;  timerId         1    wreg     unsigned char 
 33120 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 33121 ;;		 -> TransmissionErrorCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallb
      +ack(1), 
 33122 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow2Callback(1), LORAWAN_ReceiveWi
      +ndow1Callback(1), 
 33123 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 33124 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 33125 ;; Auto vars:     Size  Location     Type
 33126 ;;  timerId         1    3[BANK0 ] unsigned char 
 33127 ;; Return value:  Size  Location     Type
 33128 ;;                  1    wreg      void 
 33129 ;; Registers used:
 33130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33131 ;; Tracked objects:
 33132 ;;		On entry : 0/0
 33133 ;;		On exit  : 0/0
 33134 ;;		Unchanged: 0/0
 33135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33136 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33139 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33140 ;;Total ram usage:        4 bytes
 33141 ;; Hardware stack levels used:    1
 33142 ;; Hardware stack levels required when called:    7
 33143 ;; This function calls:
 33144 ;;		Nothing
 33145 ;; This function is called by:
 33146 ;;		_RADIO_Init
 33147 ;;		_SetCallbackSoftwareTimers
 33148 ;; This function uses a non-reentrant model
 33149 ;;
 33150                           
 33151                           	psect	text158
 33152  0072F6                     __ptext158:
 33153                           	opt stack 0
 33154  0072F6                     _SwTimerSetCallback:
 33155                           	opt stack 21
 33156                           
 33157                           ; BSR set to: 1
 33158                           ;incstack = 0
 33159                           ;SwTimerSetCallback@timerId stored from wreg
 33160  0072F6  0100               	movlb	0	; () banked
 33161  0072F8  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 33162                           
 33163                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 33164  0072FA  0100               	movlb	0	; () banked
 33165  0072FC  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 33166  0072FE  0D08               	mullw	8
 33167  007300  0E06               	movlw	6
 33168  007302  26F3               	addwf	prodl,f,c
 33169  007304  0E00               	movlw	0
 33170  007306  22F4               	addwfc	prodh,f,c
 33171  007308  0E00               	movlw	low _swTimers
 33172  00730A  24F3               	addwf	prodl,w,c
 33173  00730C  6ED9               	movwf	fsr2l,c
 33174  00730E  0E03               	movlw	high _swTimers
 33175  007310  20F4               	addwfc	prodh,w,c
 33176  007312  6EDA               	movwf	fsr2h,c
 33177  007314  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 33178  007318  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 33179                           
 33180                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 33181  00731C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 33182  00731E  0D08               	mullw	8
 33183  007320  0E05               	movlw	5
 33184  007322  26F3               	addwf	prodl,f,c
 33185  007324  0E00               	movlw	0
 33186  007326  22F4               	addwfc	prodh,f,c
 33187  007328  0E00               	movlw	low _swTimers
 33188  00732A  24F3               	addwf	prodl,w,c
 33189  00732C  6ED9               	movwf	fsr2l,c
 33190  00732E  0E03               	movlw	high _swTimers
 33191  007330  20F4               	addwfc	prodh,w,c
 33192  007332  6EDA               	movwf	fsr2h,c
 33193  007334  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 33194                           
 33195                           ; BSR set to: 0
 33196  007338  0012               	return		;funcret
 33197  00733A                     __end_of_SwTimerSetCallback:
 33198                           	opt stack 0
 33199                           tosu	equ	0xFFF
 33200                           tosh	equ	0xFFE
 33201                           tosl	equ	0xFFD
 33202                           pclath	equ	0xFFA
 33203                           tblptru	equ	0xFF8
 33204                           tblptrh	equ	0xFF7
 33205                           tblptrl	equ	0xFF6
 33206                           tablat	equ	0xFF5
 33207                           prodh	equ	0xFF4
 33208                           prodl	equ	0xFF3
 33209                           intcon	equ	0xFF2
 33210                           intcon2	equ	0xFF1
 33211                           intcon3	equ	0xFF0
 33212                           indf0	equ	0xFEF
 33213                           postinc0	equ	0xFEE
 33214                           plusw0	equ	0xFEB
 33215                           fsr0h	equ	0xFEA
 33216                           fsr0l	equ	0xFE9
 33217                           wreg	equ	0xFE8
 33218                           postinc1	equ	0xFE6
 33219                           postdec1	equ	0xFE5
 33220                           plusw1	equ	0xFE3
 33221                           fsr1h	equ	0xFE2
 33222                           fsr1l	equ	0xFE1
 33223                           indf2	equ	0xFDF
 33224                           postinc2	equ	0xFDE
 33225                           postdec2	equ	0xFDD
 33226                           plusw2	equ	0xFDB
 33227                           fsr2h	equ	0xFDA
 33228                           fsr2l	equ	0xFD9
 33229                           status	equ	0xFD8
 33230                           
 33231 ;; *************** function _RADIO_WriteMode *****************
 33232 ;; Defined at:
 33233 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33234 ;; Parameters:    Size  Location     Type
 33235 ;;  newMode         1    wreg     enum E7712
 33236 ;;  newModulatio    1    5[BANK0 ] enum E6984
 33237 ;;  blocking        1    6[BANK0 ] unsigned char 
 33238 ;; Auto vars:     Size  Location     Type
 33239 ;;  newMode         1   10[BANK0 ] enum E7712
 33240 ;;  opMode          1   11[BANK0 ] unsigned char 
 33241 ;;  currentMode     1    9[BANK0 ] enum E7712
 33242 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 33243 ;;  currentModul    1    7[BANK0 ] enum E6984
 33244 ;; Return value:  Size  Location     Type
 33245 ;;                  1    wreg      void 
 33246 ;; Registers used:
 33247 ;;		wreg, status,2, status,0, cstack
 33248 ;; Tracked objects:
 33249 ;;		On entry : 0/0
 33250 ;;		On exit  : 0/0
 33251 ;;		Unchanged: 0/0
 33252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33254 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33256 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33257 ;;Total ram usage:        7 bytes
 33258 ;; Hardware stack levels used:    1
 33259 ;; Hardware stack levels required when called:   10
 33260 ;; This function calls:
 33261 ;;		_HALDIO5PinValue
 33262 ;;		_RADIO_RegisterRead
 33263 ;;		_RADIO_RegisterWrite
 33264 ;;		_SystemBlockingWaitMs
 33265 ;; This function is called by:
 33266 ;;		_RADIO_Init
 33267 ;;		_RADIO_WriteConfiguration
 33268 ;;		_RADIO_Transmit
 33269 ;;		_RADIO_ReceiveStart
 33270 ;;		_RADIO_ReceiveStop
 33271 ;;		_RADIO_RxDone
 33272 ;;		_RADIO_FSKPayloadReady
 33273 ;;		_RADIO_RxTimeout
 33274 ;;		_RADIO_TxDone
 33275 ;;		_RADIO_FSKPacketSent
 33276 ;;		_RADIO_ReadRandom
 33277 ;;		_RADIO_RxFSKTimeout
 33278 ;;		_RADIO_WatchdogTimeout
 33279 ;;		_RADIO_StopCW
 33280 ;; This function uses a non-reentrant model
 33281 ;;
 33282                           
 33283                           	psect	text159
 33284  0050BC                     __ptext159:
 33285                           	opt stack 0
 33286  0050BC                     _RADIO_WriteMode:
 33287                           	opt stack 18
 33288                           
 33289                           ; BSR set to: 0
 33290                           ;incstack = 0
 33291                           ;RADIO_WriteMode@newMode stored from wreg
 33292  0050BC  0100               	movlb	0	; () banked
 33293  0050BE  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 33294                           
 33295                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 33296                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 33297                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 33298                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 33299                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 33300                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 33301  0050C0  0100               	movlb	0	; () banked
 33302  0050C2  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33303  0050C4  A4D8               	btfss	status,2,c
 33304  0050C6  D008               	goto	l409
 33305                           
 33306                           ; BSR set to: 0
 33307  0050C8  0E06               	movlw	6
 33308  0050CA  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33309  0050CC  B4D8               	btfsc	status,2,c
 33310  0050CE  0012               	return	
 33311                           
 33312                           ; BSR set to: 0
 33313  0050D0  0E07               	movlw	7
 33314  0050D2  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33315  0050D4  B4D8               	btfsc	status,2,c
 33316  0050D6  0012               	return	
 33317  0050D8                     l409:
 33318                           
 33319                           ; BSR set to: 0
 33320                           ;radio_driver_SX1276.c: 159: }
 33321                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 33322                           
 33323                           ; BSR set to: 0
 33324  0050D8  0E07               	movlw	7
 33325  0050DA  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 33326                           
 33327                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 33328  0050DC  0E01               	movlw	1
 33329  0050DE  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 33330                           
 33331                           ; BSR set to: 0
 33332                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 33333  0050E0  0E01               	movlw	1
 33334  0050E2  EC75  F03C         	call	_RADIO_RegisterRead
 33335  0050E6  0100               	movlb	0	; () banked
 33336  0050E8  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33337                           
 33338                           ; BSR set to: 0
 33339                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 33340  0050EA  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 33341  0050EC  D002               	goto	l413
 33342                           
 33343                           ; BSR set to: 0
 33344                           ;radio_driver_SX1276.c: 168: {
 33345                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 33346  0050EE  0E01               	movlw	1
 33347  0050F0  D001               	goto	L22
 33348  0050F2                     l413:
 33349                           
 33350                           ; BSR set to: 0
 33351                           ;radio_driver_SX1276.c: 171: else
 33352                           ;radio_driver_SX1276.c: 172: {
 33353                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 33354                           
 33355                           ; BSR set to: 0
 33356  0050F2  0E00               	movlw	0
 33357  0050F4                     L22:
 33358  0050F4  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 33359                           
 33360                           ; BSR set to: 0
 33361                           ;radio_driver_SX1276.c: 174: }
 33362                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 33363                           
 33364                           ; BSR set to: 0
 33365  0050F6  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33366  0050F8  0B07               	andlw	7
 33367  0050FA  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 33371  0050FC  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 33372  0050FE  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 33373  005100  B4D8               	btfsc	status,2,c
 33374  005102  D01B               	goto	l415
 33375                           
 33376                           ; BSR set to: 0
 33377                           ;radio_driver_SX1276.c: 181: {
 33378                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 33379  005104  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33380  005106  B4D8               	btfsc	status,2,c
 33381  005108  D009               	goto	l416
 33382                           
 33383                           ; BSR set to: 0
 33384                           ;radio_driver_SX1276.c: 184: {
 33385                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 33386  00510A  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33387  00510C  0BF8               	andlw	248
 33388  00510E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33389  005110  0E01               	movlw	1
 33390  005112  EC5D  F03D         	call	_RADIO_RegisterWrite
 33391                           
 33392                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 33393  005116  0E00               	movlw	0
 33394  005118  0100               	movlb	0	; () banked
 33395  00511A  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33396  00511C                     l416:
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;radio_driver_SX1276.c: 188: }
 33400                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 33401                           
 33402                           ; BSR set to: 0
 33403  00511C  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33404  00511E  A4D8               	btfss	status,2,c
 33405  005120  D003               	goto	l417
 33406                           
 33407                           ; BSR set to: 0
 33408                           ;radio_driver_SX1276.c: 191: {
 33409                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 33410  005122  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33411  005124  0B78               	andlw	120
 33412  005126  D003               	goto	L23
 33413  005128                     l417:
 33414                           
 33415                           ; BSR set to: 0
 33416                           ;radio_driver_SX1276.c: 195: else
 33417                           ;radio_driver_SX1276.c: 196: {
 33418                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 33419                           
 33420                           ; BSR set to: 0
 33421  005128  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33422  00512A  0B78               	andlw	120
 33423  00512C  0980               	iorlw	128
 33424  00512E                     L23:
 33425  00512E  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33426                           
 33427                           ; BSR set to: 0
 33428                           ;radio_driver_SX1276.c: 199: }
 33429                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 33430                           
 33431                           ; BSR set to: 0
 33432  005130  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33433  005134  0E01               	movlw	1
 33434  005136  EC5D  F03D         	call	_RADIO_RegisterWrite
 33435  00513A                     l415:
 33436                           
 33437                           ;radio_driver_SX1276.c: 201: }
 33438                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 33439  00513A  0100               	movlb	0	; () banked
 33440  00513C  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33441  00513E  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33442  005140  B4D8               	btfsc	status,2,c
 33443  005142  0012               	return	
 33444                           
 33445                           ; BSR set to: 0
 33446                           ;radio_driver_SX1276.c: 208: {
 33447                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 33448  005144  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33449  005146  B4D8               	btfsc	status,2,c
 33450  005148  D015               	goto	l420
 33451                           
 33452                           ; BSR set to: 0
 33453  00514A  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33454  00514C  A4D8               	btfss	status,2,c
 33455  00514E  D012               	goto	l420
 33456                           
 33457                           ; BSR set to: 0
 33458                           ;radio_driver_SX1276.c: 212: {
 33459                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 33460  005150  0E41               	movlw	65
 33461  005152  EC75  F03C         	call	_RADIO_RegisterRead
 33462  005156  0100               	movlb	0	; () banked
 33463  005158  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 33464                           
 33465                           ; BSR set to: 0
 33466                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 33467  00515A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33468  00515C  A4D8               	btfss	status,2,c
 33469  00515E  D003               	goto	l421
 33470                           
 33471                           ; BSR set to: 0
 33472                           ;radio_driver_SX1276.c: 215: {
 33473                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 33474  005160  0E30               	movlw	48
 33475  005162  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33476                           
 33477                           ;radio_driver_SX1276.c: 218: }
 33478  005164  D002               	goto	l422
 33479  005166                     l421:
 33480                           
 33481                           ; BSR set to: 0
 33482                           ;radio_driver_SX1276.c: 219: else
 33483                           ;radio_driver_SX1276.c: 220: {
 33484                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33485                           
 33486                           ; BSR set to: 0
 33487  005166  0ECF               	movlw	207
 33488  005168  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33489  00516A                     l422:
 33490                           
 33491                           ; BSR set to: 0
 33492                           ;radio_driver_SX1276.c: 223: }
 33493                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33494                           
 33495                           ; BSR set to: 0
 33496  00516A  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33497  00516E  0E41               	movlw	65
 33498  005170  EC5D  F03D         	call	_RADIO_RegisterWrite
 33499  005174                     l420:
 33500                           
 33501                           ;radio_driver_SX1276.c: 225: }
 33502                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33503  005174  0EF8               	movlw	248
 33504  005176  0100               	movlb	0	; () banked
 33505  005178  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33506                           
 33507                           ; BSR set to: 0
 33508                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33509  00517A  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33510  00517C  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33511                           
 33512                           ; BSR set to: 0
 33513                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33514  00517E  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33515  005182  0E01               	movlw	1
 33516  005184  EC5D  F03D         	call	_RADIO_RegisterWrite
 33517                           
 33518                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33519  005188  0100               	movlb	0	; () banked
 33520  00518A  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33521  00518C  A4D8               	btfss	status,2,c
 33522  00518E  0012               	return	
 33523                           
 33524                           ; BSR set to: 0
 33525                           ;radio_driver_SX1276.c: 234: {
 33526                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33527  005190  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33528  005192  B4D8               	btfsc	status,2,c
 33529  005194  D006               	goto	l424
 33530  005196                     u7180:
 33531                           
 33532                           ; BSR set to: 0
 33533                           
 33534                           ;radio_driver_SX1276.c: 238: ;
 33535                           
 33536                           ; BSR set to: 0
 33537                           
 33538                           ; BSR set to: 0
 33539                           ;radio_driver_SX1276.c: 236: {
 33540                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 33541  005196  ECCB  F03E         	call	_HALDIO5PinValue	;wreg free
 33542  00519A  0900               	iorlw	0
 33543  00519C  A4D8               	btfss	status,2,c
 33544  00519E  0012               	return	
 33545  0051A0  D7FA               	goto	u7180
 33546  0051A2                     l424:
 33547                           
 33548                           ;radio_driver_SX1276.c: 240: else
 33549                           ;radio_driver_SX1276.c: 241: {
 33550                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33551  0051A2  0E01               	movlw	1
 33552  0051A4  0100               	movlb	0	; () banked
 33553  0051A6  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33554  0051A8  0E00               	movlw	0
 33555  0051AA  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33556  0051AC  0E00               	movlw	0
 33557  0051AE  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33558  0051B0  0E00               	movlw	0
 33559  0051B2  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33560  0051B4  EC85  F03B         	call	_SystemBlockingWaitMs	;wreg free
 33561  0051B8  0012               	return	
 33562  0051BA                     __end_of_RADIO_WriteMode:
 33563                           	opt stack 0
 33564                           tosu	equ	0xFFF
 33565                           tosh	equ	0xFFE
 33566                           tosl	equ	0xFFD
 33567                           pclath	equ	0xFFA
 33568                           tblptru	equ	0xFF8
 33569                           tblptrh	equ	0xFF7
 33570                           tblptrl	equ	0xFF6
 33571                           tablat	equ	0xFF5
 33572                           prodh	equ	0xFF4
 33573                           prodl	equ	0xFF3
 33574                           intcon	equ	0xFF2
 33575                           intcon2	equ	0xFF1
 33576                           intcon3	equ	0xFF0
 33577                           indf0	equ	0xFEF
 33578                           postinc0	equ	0xFEE
 33579                           plusw0	equ	0xFEB
 33580                           fsr0h	equ	0xFEA
 33581                           fsr0l	equ	0xFE9
 33582                           wreg	equ	0xFE8
 33583                           postinc1	equ	0xFE6
 33584                           postdec1	equ	0xFE5
 33585                           plusw1	equ	0xFE3
 33586                           fsr1h	equ	0xFE2
 33587                           fsr1l	equ	0xFE1
 33588                           indf2	equ	0xFDF
 33589                           postinc2	equ	0xFDE
 33590                           postdec2	equ	0xFDD
 33591                           plusw2	equ	0xFDB
 33592                           fsr2h	equ	0xFDA
 33593                           fsr2l	equ	0xFD9
 33594                           status	equ	0xFD8
 33595                           
 33596 ;; *************** function _RADIO_RegisterRead *****************
 33597 ;; Defined at:
 33598 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33599 ;; Parameters:    Size  Location     Type
 33600 ;;  reg             1    wreg     unsigned char 
 33601 ;; Auto vars:     Size  Location     Type
 33602 ;;  reg             1    2[BANK0 ] unsigned char 
 33603 ;;  readValue       1    3[BANK0 ] unsigned char 
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1    wreg      unsigned char 
 33606 ;; Registers used:
 33607 ;;		wreg, status,2, status,0, cstack
 33608 ;; Tracked objects:
 33609 ;;		On entry : 0/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33617 ;;Total ram usage:        2 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:    9
 33620 ;; This function calls:
 33621 ;;		_HALSPICSAssert
 33622 ;;		_HALSPICSDeassert
 33623 ;;		_HALSPISend
 33624 ;; This function is called by:
 33625 ;;		_RADIO_WriteMode
 33626 ;;		_RADIO_WritePower
 33627 ;;		_RADIO_Init
 33628 ;;		_RADIO_WriteConfiguration
 33629 ;;		_RADIO_Transmit
 33630 ;;		_RADIO_RxDone
 33631 ;;		_RADIO_FSKPayloadReady
 33632 ;;		_RADIO_FSKPacketSent
 33633 ;;		_RADIO_FHSSChangeChannel
 33634 ;;		_RADIO_DIO0
 33635 ;;		_RADIO_DIO1
 33636 ;;		_RADIO_DIO2
 33637 ;;		_RADIO_DIO3
 33638 ;;		_RADIO_DIO4
 33639 ;;		_RADIO_DIO5
 33640 ;;		_RADIO_ReadRandom
 33641 ;;		_RADIO_RxFSKTimeout
 33642 ;; This function uses a non-reentrant model
 33643 ;;
 33644                           
 33645                           	psect	text160
 33646  0078EA                     __ptext160:
 33647                           	opt stack 0
 33648  0078EA                     _RADIO_RegisterRead:
 33649                           	opt stack 18
 33650                           
 33651                           ;incstack = 0
 33652                           ;RADIO_RegisterRead@reg stored from wreg
 33653  0078EA  0100               	movlb	0	; () banked
 33654  0078EC  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33655                           
 33656                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33657                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33658  0078EE  0100               	movlb	0	; () banked
 33659  0078F0  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33663  0078F2  EC4A  F03F         	call	_HALSPICSAssert	;wreg free
 33664                           
 33665                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33666  0078F6  0100               	movlb	0	; () banked
 33667  0078F8  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33668  0078FA  ECC4  F03E         	call	_HALSPISend
 33669                           
 33670                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33671  0078FE  0EFF               	movlw	255
 33672  007900  ECC4  F03E         	call	_HALSPISend
 33673  007904  0100               	movlb	0	; () banked
 33674  007906  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33675                           
 33676                           ; BSR set to: 0
 33677                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33678  007908  EC48  F03F         	call	_HALSPICSDeassert	;wreg free
 33679                           
 33680                           ;radio_driver_SX1276.c: 142: return readValue;
 33681  00790C  0100               	movlb	0	; () banked
 33682  00790E  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33683  007910  0012               	return	
 33684  007912                     __end_of_RADIO_RegisterRead:
 33685                           	opt stack 0
 33686                           tosu	equ	0xFFF
 33687                           tosh	equ	0xFFE
 33688                           tosl	equ	0xFFD
 33689                           pclath	equ	0xFFA
 33690                           tblptru	equ	0xFF8
 33691                           tblptrh	equ	0xFF7
 33692                           tblptrl	equ	0xFF6
 33693                           tablat	equ	0xFF5
 33694                           prodh	equ	0xFF4
 33695                           prodl	equ	0xFF3
 33696                           intcon	equ	0xFF2
 33697                           intcon2	equ	0xFF1
 33698                           intcon3	equ	0xFF0
 33699                           indf0	equ	0xFEF
 33700                           postinc0	equ	0xFEE
 33701                           plusw0	equ	0xFEB
 33702                           fsr0h	equ	0xFEA
 33703                           fsr0l	equ	0xFE9
 33704                           wreg	equ	0xFE8
 33705                           postinc1	equ	0xFE6
 33706                           postdec1	equ	0xFE5
 33707                           plusw1	equ	0xFE3
 33708                           fsr1h	equ	0xFE2
 33709                           fsr1l	equ	0xFE1
 33710                           indf2	equ	0xFDF
 33711                           postinc2	equ	0xFDE
 33712                           postdec2	equ	0xFDD
 33713                           plusw2	equ	0xFDB
 33714                           fsr2h	equ	0xFDA
 33715                           fsr2l	equ	0xFD9
 33716                           status	equ	0xFD8
 33717                           
 33718 ;; *************** function _HALDIO5PinValue *****************
 33719 ;; Defined at:
 33720 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33721 ;; Parameters:    Size  Location     Type
 33722 ;;		None
 33723 ;; Auto vars:     Size  Location     Type
 33724 ;;		None
 33725 ;; Return value:  Size  Location     Type
 33726 ;;                  1    wreg      unsigned char 
 33727 ;; Registers used:
 33728 ;;		wreg
 33729 ;; Tracked objects:
 33730 ;;		On entry : 0/0
 33731 ;;		On exit  : 0/0
 33732 ;;		Unchanged: 0/0
 33733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33738 ;;Total ram usage:        0 bytes
 33739 ;; Hardware stack levels used:    1
 33740 ;; Hardware stack levels required when called:    7
 33741 ;; This function calls:
 33742 ;;		Nothing
 33743 ;; This function is called by:
 33744 ;;		_RADIO_WriteMode
 33745 ;; This function uses a non-reentrant model
 33746 ;;
 33747                           
 33748                           	psect	text161
 33749  007D96                     __ptext161:
 33750                           	opt stack 0
 33751  007D96                     _HALDIO5PinValue:
 33752                           	opt stack 20
 33753                           
 33754                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33755                           
 33756                           ; BSR set to: 0
 33757                           ;incstack = 0
 33758  007D96  A081               	btfss	3969,0,c	;volatile
 33759  007D98  D002               	goto	u6640
 33760  007D9A  0E01               	movlw	1
 33761  007D9C  0012               	return	
 33762  007D9E                     u6640:
 33763  007D9E  0E00               	movlw	0
 33764  007DA0  0012               	return	
 33765  007DA2                     __end_of_HALDIO5PinValue:
 33766                           	opt stack 0
 33767                           tosu	equ	0xFFF
 33768                           tosh	equ	0xFFE
 33769                           tosl	equ	0xFFD
 33770                           pclath	equ	0xFFA
 33771                           tblptru	equ	0xFF8
 33772                           tblptrh	equ	0xFF7
 33773                           tblptrl	equ	0xFF6
 33774                           tablat	equ	0xFF5
 33775                           prodh	equ	0xFF4
 33776                           prodl	equ	0xFF3
 33777                           intcon	equ	0xFF2
 33778                           intcon2	equ	0xFF1
 33779                           intcon3	equ	0xFF0
 33780                           indf0	equ	0xFEF
 33781                           postinc0	equ	0xFEE
 33782                           plusw0	equ	0xFEB
 33783                           fsr0h	equ	0xFEA
 33784                           fsr0l	equ	0xFE9
 33785                           wreg	equ	0xFE8
 33786                           postinc1	equ	0xFE6
 33787                           postdec1	equ	0xFE5
 33788                           plusw1	equ	0xFE3
 33789                           fsr1h	equ	0xFE2
 33790                           fsr1l	equ	0xFE1
 33791                           indf2	equ	0xFDF
 33792                           postinc2	equ	0xFDE
 33793                           postdec2	equ	0xFDD
 33794                           plusw2	equ	0xFDB
 33795                           fsr2h	equ	0xFDA
 33796                           fsr2l	equ	0xFD9
 33797                           status	equ	0xFD8
 33798                           
 33799 ;; *************** function _RADIO_WriteFrequency *****************
 33800 ;; Defined at:
 33801 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33802 ;; Parameters:    Size  Location     Type
 33803 ;;  frequency       4   13[BANK0 ] unsigned long 
 33804 ;; Auto vars:     Size  Location     Type
 33805 ;;  num             4   21[BANK0 ] unsigned long 
 33806 ;;  num_mod         4   17[BANK0 ] unsigned long 
 33807 ;; Return value:  Size  Location     Type
 33808 ;;                  1    wreg      void 
 33809 ;; Registers used:
 33810 ;;		wreg, status,2, status,0, cstack
 33811 ;; Tracked objects:
 33812 ;;		On entry : 0/0
 33813 ;;		On exit  : 0/0
 33814 ;;		Unchanged: 0/0
 33815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33817 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33820 ;;Total ram usage:       12 bytes
 33821 ;; Hardware stack levels used:    1
 33822 ;; Hardware stack levels required when called:   10
 33823 ;; This function calls:
 33824 ;;		_RADIO_RegisterWrite
 33825 ;;		___lldiv
 33826 ;;		___llmod
 33827 ;; This function is called by:
 33828 ;;		_RADIO_Init
 33829 ;;		_RADIO_WriteConfiguration
 33830 ;;		_RADIO_FHSSChangeChannel
 33831 ;; This function uses a non-reentrant model
 33832 ;;
 33833                           
 33834                           	psect	text162
 33835  00539E                     __ptext162:
 33836                           	opt stack 0
 33837  00539E                     _RADIO_WriteFrequency:
 33838                           	opt stack 17
 33839                           
 33840                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33841                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33842                           
 33843                           ;incstack = 0
 33844  00539E  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33845  0053A2  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33846  0053A6  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33847  0053AA  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33848  0053AE  0E09               	movlw	9
 33849  0053B0  0100               	movlb	0	; () banked
 33850  0053B2  6F64               	movwf	___lldiv@divisor& (0+255),b
 33851  0053B4  0E3D               	movlw	61
 33852  0053B6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 33853  0053B8  0E00               	movlw	0
 33854  0053BA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 33855  0053BC  0E00               	movlw	0
 33856  0053BE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 33857  0053C0  EC93  F032         	call	___lldiv	;wreg free
 33858  0053C4  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 33859  0053C8  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33860  0053CC  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33861  0053D0  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33862                           
 33863                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33864  0053D4  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33865  0053D8  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33866  0053DC  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33867  0053E0  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33868  0053E4  0E09               	movlw	9
 33869  0053E6  0100               	movlb	0	; () banked
 33870  0053E8  6F64               	movwf	___llmod@divisor& (0+255),b
 33871  0053EA  0E3D               	movlw	61
 33872  0053EC  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 33873  0053EE  0E00               	movlw	0
 33874  0053F0  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 33875  0053F2  0E00               	movlw	0
 33876  0053F4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 33877  0053F6  EC15  F035         	call	___llmod	;wreg free
 33878  0053FA  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33879  0053FE  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33880  005402  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33881  005406  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33882                           
 33883                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33884  00540A  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33885  00540E  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33886  005412  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33887  005416  0100               	movlb	0	; () banked
 33888  005418  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33889                           
 33890                           ; BSR set to: 0
 33891                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33892  00541A  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33893  00541E  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33894  005422  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33895  005426  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33896                           
 33897                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33898  005428  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33899  00542C  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33900  005430  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33901  005434  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33902  005438  0E09               	movlw	9
 33903  00543A  6F64               	movwf	___lldiv@divisor& (0+255),b
 33904  00543C  0E3D               	movlw	61
 33905  00543E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 33906  005440  0E00               	movlw	0
 33907  005442  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 33908  005444  0E00               	movlw	0
 33909  005446  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 33910  005448  EC93  F032         	call	___lldiv	;wreg free
 33911  00544C  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33912  005450  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33913  005454  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33914  005458  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33915                           
 33916                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33917  00545C  0100               	movlb	0	; () banked
 33918  00545E  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33919  005460  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33920  005462  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33921  005464  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33922  005466  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33923  005468  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33924  00546A  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33925  00546C  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33926                           
 33927                           ; BSR set to: 0
 33928                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33929  00546E  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33930  005472  0E06               	movlw	6
 33931  005474  EC5D  F03D         	call	_RADIO_RegisterWrite
 33932                           
 33933                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33934  005478  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33935  00547C  0E07               	movlw	7
 33936  00547E  EC5D  F03D         	call	_RADIO_RegisterWrite
 33937                           
 33938                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33939  005482  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33940  005486  0E08               	movlw	8
 33941  005488  EC5D  F03D         	call	_RADIO_RegisterWrite
 33942  00548C  0012               	return		;funcret
 33943  00548E                     __end_of_RADIO_WriteFrequency:
 33944                           	opt stack 0
 33945                           tosu	equ	0xFFF
 33946                           tosh	equ	0xFFE
 33947                           tosl	equ	0xFFD
 33948                           pclath	equ	0xFFA
 33949                           tblptru	equ	0xFF8
 33950                           tblptrh	equ	0xFF7
 33951                           tblptrl	equ	0xFF6
 33952                           tablat	equ	0xFF5
 33953                           prodh	equ	0xFF4
 33954                           prodl	equ	0xFF3
 33955                           intcon	equ	0xFF2
 33956                           intcon2	equ	0xFF1
 33957                           intcon3	equ	0xFF0
 33958                           indf0	equ	0xFEF
 33959                           postinc0	equ	0xFEE
 33960                           plusw0	equ	0xFEB
 33961                           fsr0h	equ	0xFEA
 33962                           fsr0l	equ	0xFE9
 33963                           wreg	equ	0xFE8
 33964                           postinc1	equ	0xFE6
 33965                           postdec1	equ	0xFE5
 33966                           plusw1	equ	0xFE3
 33967                           fsr1h	equ	0xFE2
 33968                           fsr1l	equ	0xFE1
 33969                           indf2	equ	0xFDF
 33970                           postinc2	equ	0xFDE
 33971                           postdec2	equ	0xFDD
 33972                           plusw2	equ	0xFDB
 33973                           fsr2h	equ	0xFDA
 33974                           fsr2l	equ	0xFD9
 33975                           status	equ	0xFD8
 33976                           
 33977 ;; *************** function ___llmod *****************
 33978 ;; Defined at:
 33979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 33980 ;; Parameters:    Size  Location     Type
 33981 ;;  dividend        4    0[BANK0 ] unsigned long 
 33982 ;;  divisor         4    4[BANK0 ] unsigned long 
 33983 ;; Auto vars:     Size  Location     Type
 33984 ;;  counter         1    8[BANK0 ] unsigned char 
 33985 ;; Return value:  Size  Location     Type
 33986 ;;                  4    0[BANK0 ] unsigned long 
 33987 ;; Registers used:
 33988 ;;		wreg, status,2, status,0
 33989 ;; Tracked objects:
 33990 ;;		On entry : 0/0
 33991 ;;		On exit  : 0/0
 33992 ;;		Unchanged: 0/0
 33993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33994 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33998 ;;Total ram usage:        9 bytes
 33999 ;; Hardware stack levels used:    1
 34000 ;; Hardware stack levels required when called:    7
 34001 ;; This function calls:
 34002 ;;		Nothing
 34003 ;; This function is called by:
 34004 ;;		_RADIO_WriteFrequency
 34005 ;;		_ValidateFrequency
 34006 ;; This function uses a non-reentrant model
 34007 ;;
 34008                           
 34009                           	psect	text163
 34010  006A2A                     __ptext163:
 34011                           	opt stack 0
 34012  006A2A                     ___llmod:
 34013                           	opt stack 19
 34014                           
 34015                           ;incstack = 0
 34016  006A2A  0100               	movlb	0	; () banked
 34017  006A2C  5164               	movf	___llmod@divisor& (0+255),w,b
 34018  006A2E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 34019  006A30  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 34020  006A32  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 34021  006A34  B4D8               	btfsc	status,2,c
 34022  006A36  D024               	goto	l2862
 34023                           
 34024                           ; BSR set to: 0
 34025  006A38  0E01               	movlw	1
 34026  006A3A  6F68               	movwf	___llmod@counter& (0+255),b
 34027  006A3C  D006               	goto	l2857
 34028  006A3E                     
 34029                           ; BSR set to: 0
 34030                           
 34031                           ; BSR set to: 0
 34032  006A3E  90D8               	bcf	status,0,c
 34033  006A40  3764               	rlcf	___llmod@divisor& (0+255),f,b
 34034  006A42  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 34035  006A44  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 34036  006A46  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 34037  006A48  2B68               	incf	___llmod@counter& (0+255),f,b
 34038  006A4A                     l2857:
 34039                           
 34040                           ; BSR set to: 0
 34041                           
 34042                           ; BSR set to: 0
 34043  006A4A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 34044  006A4C  D7F8               	goto	l2858
 34045  006A4E                     u6940:
 34046                           
 34047                           ; BSR set to: 0
 34048                           
 34049                           ; BSR set to: 0
 34050                           
 34051                           ; BSR set to: 0
 34052  006A4E  5164               	movf	___llmod@divisor& (0+255),w,b
 34053  006A50  5D60               	subwf	___llmod@dividend& (0+255),w,b
 34054  006A52  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 34055  006A54  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 34056  006A56  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 34057  006A58  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 34058  006A5A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 34059  006A5C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 34060  006A5E  A0D8               	btfss	status,0,c
 34061  006A60  D008               	goto	l2861
 34062                           
 34063                           ; BSR set to: 0
 34064  006A62  5164               	movf	___llmod@divisor& (0+255),w,b
 34065  006A64  5F60               	subwf	___llmod@dividend& (0+255),f,b
 34066  006A66  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 34067  006A68  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 34068  006A6A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 34069  006A6C  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 34070  006A6E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 34071  006A70  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 34072  006A72                     l2861:
 34073                           
 34074                           ; BSR set to: 0
 34075                           
 34076                           ; BSR set to: 0
 34077  006A72  90D8               	bcf	status,0,c
 34078  006A74  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 34079  006A76  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 34080  006A78  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 34081  006A7A  3364               	rrcf	___llmod@divisor& (0+255),f,b
 34082                           
 34083                           ; BSR set to: 0
 34084  006A7C  2F68               	decfsz	___llmod@counter& (0+255),f,b
 34085  006A7E  D7E7               	goto	u6940
 34086  006A80                     l2862:
 34087                           
 34088                           ; BSR set to: 0
 34089                           
 34090                           ; BSR set to: 0
 34091  006A80  C060  F060         	movff	___llmod@dividend,?___llmod
 34092  006A84  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 34093  006A88  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 34094  006A8C  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 34095                           
 34096                           ; BSR set to: 0
 34097  006A90  0012               	return		;funcret
 34098  006A92                     __end_of___llmod:
 34099                           	opt stack 0
 34100                           tosu	equ	0xFFF
 34101                           tosh	equ	0xFFE
 34102                           tosl	equ	0xFFD
 34103                           pclath	equ	0xFFA
 34104                           tblptru	equ	0xFF8
 34105                           tblptrh	equ	0xFF7
 34106                           tblptrl	equ	0xFF6
 34107                           tablat	equ	0xFF5
 34108                           prodh	equ	0xFF4
 34109                           prodl	equ	0xFF3
 34110                           intcon	equ	0xFF2
 34111                           intcon2	equ	0xFF1
 34112                           intcon3	equ	0xFF0
 34113                           indf0	equ	0xFEF
 34114                           postinc0	equ	0xFEE
 34115                           plusw0	equ	0xFEB
 34116                           fsr0h	equ	0xFEA
 34117                           fsr0l	equ	0xFE9
 34118                           wreg	equ	0xFE8
 34119                           postinc1	equ	0xFE6
 34120                           postdec1	equ	0xFE5
 34121                           plusw1	equ	0xFE3
 34122                           fsr1h	equ	0xFE2
 34123                           fsr1l	equ	0xFE1
 34124                           indf2	equ	0xFDF
 34125                           postinc2	equ	0xFDE
 34126                           postdec2	equ	0xFDD
 34127                           plusw2	equ	0xFDB
 34128                           fsr2h	equ	0xFDA
 34129                           fsr2l	equ	0xFD9
 34130                           status	equ	0xFD8
 34131                           
 34132 ;; *************** function _RADIO_RegisterWrite *****************
 34133 ;; Defined at:
 34134 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34135 ;; Parameters:    Size  Location     Type
 34136 ;;  reg             1    wreg     unsigned char 
 34137 ;;  value           1    2[BANK0 ] unsigned char 
 34138 ;; Auto vars:     Size  Location     Type
 34139 ;;  reg             1    3[BANK0 ] unsigned char 
 34140 ;; Return value:  Size  Location     Type
 34141 ;;                  1    wreg      void 
 34142 ;; Registers used:
 34143 ;;		wreg, status,2, status,0, cstack
 34144 ;; Tracked objects:
 34145 ;;		On entry : 0/0
 34146 ;;		On exit  : 0/0
 34147 ;;		Unchanged: 0/0
 34148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34153 ;;Total ram usage:        2 bytes
 34154 ;; Hardware stack levels used:    1
 34155 ;; Hardware stack levels required when called:    9
 34156 ;; This function calls:
 34157 ;;		_HALSPICSAssert
 34158 ;;		_HALSPICSDeassert
 34159 ;;		_HALSPISend
 34160 ;; This function is called by:
 34161 ;;		_RADIO_WriteMode
 34162 ;;		_RADIO_WriteFrequency
 34163 ;;		_RADIO_WriteFSKFrequencyDeviation
 34164 ;;		_RADIO_WriteFSKBitRate
 34165 ;;		_RADIO_WritePower
 34166 ;;		_RADIO_Init
 34167 ;;		_RADIO_WriteConfiguration
 34168 ;;		_RADIO_Transmit
 34169 ;;		_RADIO_ReceiveStart
 34170 ;;		_RADIO_RxDone
 34171 ;;		_RADIO_RxTimeout
 34172 ;;		_RADIO_TxDone
 34173 ;;		_RADIO_UnhandledInterrupt
 34174 ;;		_RADIO_FHSSChangeChannel
 34175 ;;		_RADIO_ReadRandom
 34176 ;;		_RADIO_TransmitCW
 34177 ;; This function uses a non-reentrant model
 34178 ;;
 34179                           
 34180                           	psect	text164
 34181  007ABA                     __ptext164:
 34182                           	opt stack 0
 34183  007ABA                     _RADIO_RegisterWrite:
 34184                           	opt stack 18
 34185                           
 34186                           ; BSR set to: 0
 34187                           ;incstack = 0
 34188                           ;RADIO_RegisterWrite@reg stored from wreg
 34189  007ABA  0100               	movlb	0	; () banked
 34190  007ABC  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 34191                           
 34192                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 34193  007ABE  EC4A  F03F         	call	_HALSPICSAssert	;wreg free
 34194                           
 34195                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 34196  007AC2  0100               	movlb	0	; () banked
 34197  007AC4  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 34198  007AC6  0980               	iorlw	128
 34199  007AC8  ECC4  F03E         	call	_HALSPISend
 34200                           
 34201                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 34202  007ACC  0100               	movlb	0	; () banked
 34203  007ACE  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 34204  007AD0  ECC4  F03E         	call	_HALSPISend
 34205                           
 34206                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 34207  007AD4  EC48  F03F         	call	_HALSPICSDeassert	;wreg free
 34208  007AD8  0012               	return		;funcret
 34209  007ADA                     __end_of_RADIO_RegisterWrite:
 34210                           	opt stack 0
 34211                           tosu	equ	0xFFF
 34212                           tosh	equ	0xFFE
 34213                           tosl	equ	0xFFD
 34214                           pclath	equ	0xFFA
 34215                           tblptru	equ	0xFF8
 34216                           tblptrh	equ	0xFF7
 34217                           tblptrl	equ	0xFF6
 34218                           tablat	equ	0xFF5
 34219                           prodh	equ	0xFF4
 34220                           prodl	equ	0xFF3
 34221                           intcon	equ	0xFF2
 34222                           intcon2	equ	0xFF1
 34223                           intcon3	equ	0xFF0
 34224                           indf0	equ	0xFEF
 34225                           postinc0	equ	0xFEE
 34226                           plusw0	equ	0xFEB
 34227                           fsr0h	equ	0xFEA
 34228                           fsr0l	equ	0xFE9
 34229                           wreg	equ	0xFE8
 34230                           postinc1	equ	0xFE6
 34231                           postdec1	equ	0xFE5
 34232                           plusw1	equ	0xFE3
 34233                           fsr1h	equ	0xFE2
 34234                           fsr1l	equ	0xFE1
 34235                           indf2	equ	0xFDF
 34236                           postinc2	equ	0xFDE
 34237                           postdec2	equ	0xFDD
 34238                           plusw2	equ	0xFDB
 34239                           fsr2h	equ	0xFDA
 34240                           fsr2l	equ	0xFD9
 34241                           status	equ	0xFD8
 34242                           
 34243 ;; *************** function _HALSPISend *****************
 34244 ;; Defined at:
 34245 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34246 ;; Parameters:    Size  Location     Type
 34247 ;;  data            1    wreg     unsigned char 
 34248 ;; Auto vars:     Size  Location     Type
 34249 ;;  data            1    1[BANK0 ] unsigned char 
 34250 ;; Return value:  Size  Location     Type
 34251 ;;                  1    wreg      unsigned char 
 34252 ;; Registers used:
 34253 ;;		wreg, status,2, cstack
 34254 ;; Tracked objects:
 34255 ;;		On entry : 0/0
 34256 ;;		On exit  : 0/0
 34257 ;;		Unchanged: 0/0
 34258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34262 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34263 ;;Total ram usage:        1 bytes
 34264 ;; Hardware stack levels used:    1
 34265 ;; Hardware stack levels required when called:    8
 34266 ;; This function calls:
 34267 ;;		_SPI2_Exchange8bit
 34268 ;; This function is called by:
 34269 ;;		_RADIO_RegisterWrite
 34270 ;;		_RADIO_RegisterRead
 34271 ;;		_RADIO_Transmit
 34272 ;;		_RADIO_RxDone
 34273 ;;		_RADIO_FSKPayloadReady
 34274 ;; This function uses a non-reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text165
 34278  007D88                     __ptext165:
 34279                           	opt stack 0
 34280  007D88                     _HALSPISend:
 34281                           	opt stack 18
 34282                           
 34283                           ;incstack = 0
 34284                           ;HALSPISend@data stored from wreg
 34285  007D88  0100               	movlb	0	; () banked
 34286  007D8A  6F61               	movwf	HALSPISend@data& (0+255),b
 34287                           
 34288                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 34289  007D8C  0100               	movlb	0	; () banked
 34290  007D8E  5161               	movf	HALSPISend@data& (0+255),w,b
 34291  007D90  EC85  F03E         	call	_SPI2_Exchange8bit
 34292  007D94  0012               	return	
 34293  007D96                     __end_of_HALSPISend:
 34294                           	opt stack 0
 34295                           tosu	equ	0xFFF
 34296                           tosh	equ	0xFFE
 34297                           tosl	equ	0xFFD
 34298                           pclath	equ	0xFFA
 34299                           tblptru	equ	0xFF8
 34300                           tblptrh	equ	0xFF7
 34301                           tblptrl	equ	0xFF6
 34302                           tablat	equ	0xFF5
 34303                           prodh	equ	0xFF4
 34304                           prodl	equ	0xFF3
 34305                           intcon	equ	0xFF2
 34306                           intcon2	equ	0xFF1
 34307                           intcon3	equ	0xFF0
 34308                           indf0	equ	0xFEF
 34309                           postinc0	equ	0xFEE
 34310                           plusw0	equ	0xFEB
 34311                           fsr0h	equ	0xFEA
 34312                           fsr0l	equ	0xFE9
 34313                           wreg	equ	0xFE8
 34314                           postinc1	equ	0xFE6
 34315                           postdec1	equ	0xFE5
 34316                           plusw1	equ	0xFE3
 34317                           fsr1h	equ	0xFE2
 34318                           fsr1l	equ	0xFE1
 34319                           indf2	equ	0xFDF
 34320                           postinc2	equ	0xFDE
 34321                           postdec2	equ	0xFDD
 34322                           plusw2	equ	0xFDB
 34323                           fsr2h	equ	0xFDA
 34324                           fsr2l	equ	0xFD9
 34325                           status	equ	0xFD8
 34326                           
 34327 ;; *************** function _SPI2_Exchange8bit *****************
 34328 ;; Defined at:
 34329 ;;		line 79 in file "mcc_generated_files/spi2.c"
 34330 ;; Parameters:    Size  Location     Type
 34331 ;;  data            1    wreg     unsigned char 
 34332 ;; Auto vars:     Size  Location     Type
 34333 ;;  data            1    0[BANK0 ] unsigned char 
 34334 ;; Return value:  Size  Location     Type
 34335 ;;                  1    wreg      unsigned char 
 34336 ;; Registers used:
 34337 ;;		wreg, status,2
 34338 ;; Tracked objects:
 34339 ;;		On entry : 0/0
 34340 ;;		On exit  : 0/0
 34341 ;;		Unchanged: 0/0
 34342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34346 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34347 ;;Total ram usage:        1 bytes
 34348 ;; Hardware stack levels used:    1
 34349 ;; Hardware stack levels required when called:    7
 34350 ;; This function calls:
 34351 ;;		Nothing
 34352 ;; This function is called by:
 34353 ;;		_HALSPISend
 34354 ;;		_SPI2_Exchange8bitBuffer
 34355 ;; This function uses a non-reentrant model
 34356 ;;
 34357                           
 34358                           	psect	text166
 34359  007D0A                     __ptext166:
 34360                           	opt stack 0
 34361  007D0A                     _SPI2_Exchange8bit:
 34362                           	opt stack 18
 34363                           
 34364                           ;incstack = 0
 34365                           ;SPI2_Exchange8bit@data stored from wreg
 34366  007D0A  0100               	movlb	0	; () banked
 34367  007D0C  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 34368                           
 34369                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 34370  007D0E  9E6C               	bcf	3948,7,c	;volatile
 34371                           
 34372                           ;spi2.c: 84: SSP2BUF = data;
 34373  007D10  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 34374  007D14                     
 34375                           ;spi2.c: 87: {
 34376  007D14  A06D               	btfss	3949,0,c	;volatile
 34377  007D16  D7FE               	goto	l2259
 34378                           
 34379                           ;spi2.c: 88: }
 34380                           ;spi2.c: 90: return (SSP2BUF);
 34381  007D18  506F               	movf	3951,w,c	;volatile
 34382  007D1A  0012               	return		;funcret
 34383  007D1C                     __end_of_SPI2_Exchange8bit:
 34384                           	opt stack 0
 34385                           tosu	equ	0xFFF
 34386                           tosh	equ	0xFFE
 34387                           tosl	equ	0xFFD
 34388                           pclath	equ	0xFFA
 34389                           tblptru	equ	0xFF8
 34390                           tblptrh	equ	0xFF7
 34391                           tblptrl	equ	0xFF6
 34392                           tablat	equ	0xFF5
 34393                           prodh	equ	0xFF4
 34394                           prodl	equ	0xFF3
 34395                           intcon	equ	0xFF2
 34396                           intcon2	equ	0xFF1
 34397                           intcon3	equ	0xFF0
 34398                           indf0	equ	0xFEF
 34399                           postinc0	equ	0xFEE
 34400                           plusw0	equ	0xFEB
 34401                           fsr0h	equ	0xFEA
 34402                           fsr0l	equ	0xFE9
 34403                           wreg	equ	0xFE8
 34404                           postinc1	equ	0xFE6
 34405                           postdec1	equ	0xFE5
 34406                           plusw1	equ	0xFE3
 34407                           fsr1h	equ	0xFE2
 34408                           fsr1l	equ	0xFE1
 34409                           indf2	equ	0xFDF
 34410                           postinc2	equ	0xFDE
 34411                           postdec2	equ	0xFDD
 34412                           plusw2	equ	0xFDB
 34413                           fsr2h	equ	0xFDA
 34414                           fsr2l	equ	0xFD9
 34415                           status	equ	0xFD8
 34416                           
 34417 ;; *************** function _HALSPICSDeassert *****************
 34418 ;; Defined at:
 34419 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34420 ;; Parameters:    Size  Location     Type
 34421 ;;		None
 34422 ;; Auto vars:     Size  Location     Type
 34423 ;;		None
 34424 ;; Return value:  Size  Location     Type
 34425 ;;                  1    wreg      void 
 34426 ;; Registers used:
 34427 ;;		None
 34428 ;; Tracked objects:
 34429 ;;		On entry : 0/0
 34430 ;;		On exit  : 0/0
 34431 ;;		Unchanged: 0/0
 34432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34437 ;;Total ram usage:        0 bytes
 34438 ;; Hardware stack levels used:    1
 34439 ;; Hardware stack levels required when called:    7
 34440 ;; This function calls:
 34441 ;;		Nothing
 34442 ;; This function is called by:
 34443 ;;		_RADIO_RegisterWrite
 34444 ;;		_RADIO_RegisterRead
 34445 ;;		_RADIO_Transmit
 34446 ;;		_RADIO_RxDone
 34447 ;;		_RADIO_FSKPayloadReady
 34448 ;; This function uses a non-reentrant model
 34449 ;;
 34450                           
 34451                           	psect	text167
 34452  007E90                     __ptext167:
 34453                           	opt stack 0
 34454  007E90                     _HALSPICSDeassert:
 34455                           	opt stack 19
 34456                           
 34457                           ;incstack = 0
 34458                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 34459  007E90  868C               	bsf	3980,3,c	;volatile
 34460  007E92  0012               	return	
 34461  007E94                     __end_of_HALSPICSDeassert:
 34462                           	opt stack 0
 34463                           tosu	equ	0xFFF
 34464                           tosh	equ	0xFFE
 34465                           tosl	equ	0xFFD
 34466                           pclath	equ	0xFFA
 34467                           tblptru	equ	0xFF8
 34468                           tblptrh	equ	0xFF7
 34469                           tblptrl	equ	0xFF6
 34470                           tablat	equ	0xFF5
 34471                           prodh	equ	0xFF4
 34472                           prodl	equ	0xFF3
 34473                           intcon	equ	0xFF2
 34474                           intcon2	equ	0xFF1
 34475                           intcon3	equ	0xFF0
 34476                           indf0	equ	0xFEF
 34477                           postinc0	equ	0xFEE
 34478                           plusw0	equ	0xFEB
 34479                           fsr0h	equ	0xFEA
 34480                           fsr0l	equ	0xFE9
 34481                           wreg	equ	0xFE8
 34482                           postinc1	equ	0xFE6
 34483                           postdec1	equ	0xFE5
 34484                           plusw1	equ	0xFE3
 34485                           fsr1h	equ	0xFE2
 34486                           fsr1l	equ	0xFE1
 34487                           indf2	equ	0xFDF
 34488                           postinc2	equ	0xFDE
 34489                           postdec2	equ	0xFDD
 34490                           plusw2	equ	0xFDB
 34491                           fsr2h	equ	0xFDA
 34492                           fsr2l	equ	0xFD9
 34493                           status	equ	0xFD8
 34494                           
 34495 ;; *************** function _HALSPICSAssert *****************
 34496 ;; Defined at:
 34497 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34498 ;; Parameters:    Size  Location     Type
 34499 ;;		None
 34500 ;; Auto vars:     Size  Location     Type
 34501 ;;		None
 34502 ;; Return value:  Size  Location     Type
 34503 ;;                  1    wreg      void 
 34504 ;; Registers used:
 34505 ;;		None
 34506 ;; Tracked objects:
 34507 ;;		On entry : 0/0
 34508 ;;		On exit  : 0/0
 34509 ;;		Unchanged: 0/0
 34510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34515 ;;Total ram usage:        0 bytes
 34516 ;; Hardware stack levels used:    1
 34517 ;; Hardware stack levels required when called:    7
 34518 ;; This function calls:
 34519 ;;		Nothing
 34520 ;; This function is called by:
 34521 ;;		_RADIO_RegisterWrite
 34522 ;;		_RADIO_RegisterRead
 34523 ;;		_RADIO_Transmit
 34524 ;;		_RADIO_RxDone
 34525 ;;		_RADIO_FSKPayloadReady
 34526 ;; This function uses a non-reentrant model
 34527 ;;
 34528                           
 34529                           	psect	text168
 34530  007E94                     __ptext168:
 34531                           	opt stack 0
 34532  007E94                     _HALSPICSAssert:
 34533                           	opt stack 19
 34534                           
 34535                           ;incstack = 0
 34536                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34537  007E94  968C               	bcf	3980,3,c	;volatile
 34538  007E96  0012               	return	
 34539  007E98                     __end_of_HALSPICSAssert:
 34540                           	opt stack 0
 34541                           tosu	equ	0xFFF
 34542                           tosh	equ	0xFFE
 34543                           tosl	equ	0xFFD
 34544                           pclath	equ	0xFFA
 34545                           tblptru	equ	0xFF8
 34546                           tblptrh	equ	0xFF7
 34547                           tblptrl	equ	0xFF6
 34548                           tablat	equ	0xFF5
 34549                           prodh	equ	0xFF4
 34550                           prodl	equ	0xFF3
 34551                           intcon	equ	0xFF2
 34552                           intcon2	equ	0xFF1
 34553                           intcon3	equ	0xFF0
 34554                           indf0	equ	0xFEF
 34555                           postinc0	equ	0xFEE
 34556                           plusw0	equ	0xFEB
 34557                           fsr0h	equ	0xFEA
 34558                           fsr0l	equ	0xFE9
 34559                           wreg	equ	0xFE8
 34560                           postinc1	equ	0xFE6
 34561                           postdec1	equ	0xFE5
 34562                           plusw1	equ	0xFE3
 34563                           fsr1h	equ	0xFE2
 34564                           fsr1l	equ	0xFE1
 34565                           indf2	equ	0xFDF
 34566                           postinc2	equ	0xFDE
 34567                           postdec2	equ	0xFDD
 34568                           plusw2	equ	0xFDB
 34569                           fsr2h	equ	0xFDA
 34570                           fsr2l	equ	0xFD9
 34571                           status	equ	0xFD8
 34572                           
 34573 ;; *************** function _RADIO_Reset *****************
 34574 ;; Defined at:
 34575 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34576 ;; Parameters:    Size  Location     Type
 34577 ;;		None
 34578 ;; Auto vars:     Size  Location     Type
 34579 ;;		None
 34580 ;; Return value:  Size  Location     Type
 34581 ;;                  1    wreg      void 
 34582 ;; Registers used:
 34583 ;;		wreg, status,2, status,0, cstack
 34584 ;; Tracked objects:
 34585 ;;		On entry : 0/0
 34586 ;;		On exit  : 0/0
 34587 ;;		Unchanged: 0/0
 34588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34593 ;;Total ram usage:        0 bytes
 34594 ;; Hardware stack levels used:    1
 34595 ;; Hardware stack levels required when called:    8
 34596 ;; This function calls:
 34597 ;;		_HALResetPinMakeInput
 34598 ;;		_HALResetPinMakeOutput
 34599 ;;		_HALResetPinOutputValue
 34600 ;;		_SystemBlockingWaitMs
 34601 ;; This function is called by:
 34602 ;;		_RADIO_Init
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text169
 34607  007228                     __ptext169:
 34608                           	opt stack 0
 34609  007228                     _RADIO_Reset:
 34610                           	opt stack 20
 34611                           
 34612                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34613                           
 34614                           ;incstack = 0
 34615  007228  EC4C  F03F         	call	_HALResetPinMakeOutput	;wreg free
 34616                           
 34617                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34618  00722C  0E00               	movlw	0
 34619  00722E  EC22  F03E         	call	_HALResetPinOutputValue
 34620                           
 34621                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34622  007232  0E01               	movlw	1
 34623  007234  0100               	movlb	0	; () banked
 34624  007236  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34625  007238  0E00               	movlw	0
 34626  00723A  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34627  00723C  0E00               	movlw	0
 34628  00723E  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34629  007240  0E00               	movlw	0
 34630  007242  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34631  007244  EC85  F03B         	call	_SystemBlockingWaitMs	;wreg free
 34632                           
 34633                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34634  007248  EC4E  F03F         	call	_HALResetPinMakeInput	;wreg free
 34635                           
 34636                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34637  00724C  0E0A               	movlw	10
 34638  00724E  0100               	movlb	0	; () banked
 34639  007250  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34640  007252  0E00               	movlw	0
 34641  007254  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34642  007256  0E00               	movlw	0
 34643  007258  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34644  00725A  0E00               	movlw	0
 34645  00725C  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34646  00725E  EC85  F03B         	call	_SystemBlockingWaitMs	;wreg free
 34647                           
 34648                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34649  007262  0E01               	movlw	1
 34650  007264  EC22  F03E         	call	_HALResetPinOutputValue
 34651                           
 34652                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34653  007268  EC4C  F03F         	call	_HALResetPinMakeOutput	;wreg free
 34654  00726C  0012               	return		;funcret
 34655  00726E                     __end_of_RADIO_Reset:
 34656                           	opt stack 0
 34657                           tosu	equ	0xFFF
 34658                           tosh	equ	0xFFE
 34659                           tosl	equ	0xFFD
 34660                           pclath	equ	0xFFA
 34661                           tblptru	equ	0xFF8
 34662                           tblptrh	equ	0xFF7
 34663                           tblptrl	equ	0xFF6
 34664                           tablat	equ	0xFF5
 34665                           prodh	equ	0xFF4
 34666                           prodl	equ	0xFF3
 34667                           intcon	equ	0xFF2
 34668                           intcon2	equ	0xFF1
 34669                           intcon3	equ	0xFF0
 34670                           indf0	equ	0xFEF
 34671                           postinc0	equ	0xFEE
 34672                           plusw0	equ	0xFEB
 34673                           fsr0h	equ	0xFEA
 34674                           fsr0l	equ	0xFE9
 34675                           wreg	equ	0xFE8
 34676                           postinc1	equ	0xFE6
 34677                           postdec1	equ	0xFE5
 34678                           plusw1	equ	0xFE3
 34679                           fsr1h	equ	0xFE2
 34680                           fsr1l	equ	0xFE1
 34681                           indf2	equ	0xFDF
 34682                           postinc2	equ	0xFDE
 34683                           postdec2	equ	0xFDD
 34684                           plusw2	equ	0xFDB
 34685                           fsr2h	equ	0xFDA
 34686                           fsr2l	equ	0xFD9
 34687                           status	equ	0xFD8
 34688                           
 34689 ;; *************** function _SystemBlockingWaitMs *****************
 34690 ;; Defined at:
 34691 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34692 ;; Parameters:    Size  Location     Type
 34693 ;;  ms              4    0[BANK0 ] unsigned long 
 34694 ;; Auto vars:     Size  Location     Type
 34695 ;;		None
 34696 ;; Return value:  Size  Location     Type
 34697 ;;                  1    wreg      void 
 34698 ;; Registers used:
 34699 ;;		wreg, status,2, status,0
 34700 ;; Tracked objects:
 34701 ;;		On entry : 0/0
 34702 ;;		On exit  : 0/0
 34703 ;;		Unchanged: 0/0
 34704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34708 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34709 ;;Total ram usage:        5 bytes
 34710 ;; Hardware stack levels used:    1
 34711 ;; Hardware stack levels required when called:    7
 34712 ;; This function calls:
 34713 ;;		Nothing
 34714 ;; This function is called by:
 34715 ;;		_RADIO_WriteMode
 34716 ;;		_RADIO_Reset
 34717 ;;		_RADIO_ReadRandom
 34718 ;;		_RADIO_StopCW
 34719 ;; This function uses a non-reentrant model
 34720 ;;
 34721                           
 34722                           	psect	text170
 34723  00770A                     __ptext170:
 34724                           	opt stack 0
 34725  00770A                     _SystemBlockingWaitMs:
 34726                           	opt stack 20
 34727                           
 34728                           ;sw_timer.c: 147: while (ms > 0)
 34729                           
 34730                           ;incstack = 0
 34731  00770A  D00F               	goto	l246
 34732  00770C                     
 34733                           ;sw_timer.c: 148: {
 34734                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34735  00770C  0E06               	movlw	6
 34736  00770E  0100               	movlb	0	; () banked
 34737  007710  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34738  007712  0E30               	movlw	48
 34739  007714                     u14307:
 34740  007714  2EE8               	decfsz	wreg,f,c
 34741  007716  D7FE               	bra	u14307
 34742  007718  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34743  00771A  D7FC               	bra	u14307
 34744  00771C  F000               	nop	
 34745                           
 34746                           ;sw_timer.c: 150: ms--;
 34747  00771E  0100               	movlb	0	; () banked
 34748  007720  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34749  007722  0E00               	movlw	0
 34750  007724  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34751  007726  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34752  007728  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34753  00772A                     l246:
 34754                           
 34755                           ; BSR set to: 0
 34756  00772A  0100               	movlb	0	; () banked
 34757  00772C  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34758  00772E  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34759  007730  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34760  007732  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34761  007734  B4D8               	btfsc	status,2,c
 34762  007736  0012               	return	
 34763  007738  D7E9               	goto	l247
 34764  00773A                     __end_of_SystemBlockingWaitMs:
 34765                           	opt stack 0
 34766                           tosu	equ	0xFFF
 34767                           tosh	equ	0xFFE
 34768                           tosl	equ	0xFFD
 34769                           pclath	equ	0xFFA
 34770                           tblptru	equ	0xFF8
 34771                           tblptrh	equ	0xFF7
 34772                           tblptrl	equ	0xFF6
 34773                           tablat	equ	0xFF5
 34774                           prodh	equ	0xFF4
 34775                           prodl	equ	0xFF3
 34776                           intcon	equ	0xFF2
 34777                           intcon2	equ	0xFF1
 34778                           intcon3	equ	0xFF0
 34779                           indf0	equ	0xFEF
 34780                           postinc0	equ	0xFEE
 34781                           plusw0	equ	0xFEB
 34782                           fsr0h	equ	0xFEA
 34783                           fsr0l	equ	0xFE9
 34784                           wreg	equ	0xFE8
 34785                           postinc1	equ	0xFE6
 34786                           postdec1	equ	0xFE5
 34787                           plusw1	equ	0xFE3
 34788                           fsr1h	equ	0xFE2
 34789                           fsr1l	equ	0xFE1
 34790                           indf2	equ	0xFDF
 34791                           postinc2	equ	0xFDE
 34792                           postdec2	equ	0xFDD
 34793                           plusw2	equ	0xFDB
 34794                           fsr2h	equ	0xFDA
 34795                           fsr2l	equ	0xFD9
 34796                           status	equ	0xFD8
 34797                           
 34798 ;; *************** function _HALResetPinOutputValue *****************
 34799 ;; Defined at:
 34800 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34801 ;; Parameters:    Size  Location     Type
 34802 ;;  value           1    wreg     unsigned char 
 34803 ;; Auto vars:     Size  Location     Type
 34804 ;;  value           1    0[BANK0 ] unsigned char 
 34805 ;; Return value:  Size  Location     Type
 34806 ;;                  1    wreg      void 
 34807 ;; Registers used:
 34808 ;;		wreg, status,2, status,0
 34809 ;; Tracked objects:
 34810 ;;		On entry : 0/0
 34811 ;;		On exit  : 0/0
 34812 ;;		Unchanged: 0/0
 34813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34818 ;;Total ram usage:        1 bytes
 34819 ;; Hardware stack levels used:    1
 34820 ;; Hardware stack levels required when called:    7
 34821 ;; This function calls:
 34822 ;;		Nothing
 34823 ;; This function is called by:
 34824 ;;		_RADIO_Reset
 34825 ;; This function uses a non-reentrant model
 34826 ;;
 34827                           
 34828                           	psect	text171
 34829  007C44                     __ptext171:
 34830                           	opt stack 0
 34831  007C44                     _HALResetPinOutputValue:
 34832                           	opt stack 20
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;incstack = 0
 34836                           ;HALResetPinOutputValue@value stored from wreg
 34837  007C44  0100               	movlb	0	; () banked
 34838  007C46  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 34839                           
 34840                           ;radio_driver_hal.c: 57: if (value == 0)
 34841  007C48  0100               	movlb	0	; () banked
 34842  007C4A  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34843  007C4C  A4D8               	btfss	status,2,c
 34844  007C4E  D002               	goto	l146
 34845                           
 34846                           ; BSR set to: 0
 34847                           
 34848                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34849  007C50  948B               	bcf	3979,2,c	;volatile
 34850                           
 34851                           ; BSR set to: 0
 34852  007C52  0012               	return	
 34853  007C54                     l146:
 34854                           
 34855                           ; BSR set to: 0
 34856                           ;radio_driver_hal.c: 59: else if (value == 1)
 34857                           
 34858                           ; BSR set to: 0
 34859  007C54  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34860  007C56  A4D8               	btfss	status,2,c
 34861  007C58  0012               	return	
 34862                           
 34863                           ; BSR set to: 0
 34864                           
 34865                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34866  007C5A  848B               	bsf	3979,2,c	;volatile
 34867                           
 34868                           ; BSR set to: 0
 34869                           
 34870                           ; BSR set to: 0
 34871  007C5C  0012               	return	
 34872  007C5E                     __end_of_HALResetPinOutputValue:
 34873                           	opt stack 0
 34874                           tosu	equ	0xFFF
 34875                           tosh	equ	0xFFE
 34876                           tosl	equ	0xFFD
 34877                           pclath	equ	0xFFA
 34878                           tblptru	equ	0xFF8
 34879                           tblptrh	equ	0xFF7
 34880                           tblptrl	equ	0xFF6
 34881                           tablat	equ	0xFF5
 34882                           prodh	equ	0xFF4
 34883                           prodl	equ	0xFF3
 34884                           intcon	equ	0xFF2
 34885                           intcon2	equ	0xFF1
 34886                           intcon3	equ	0xFF0
 34887                           indf0	equ	0xFEF
 34888                           postinc0	equ	0xFEE
 34889                           plusw0	equ	0xFEB
 34890                           fsr0h	equ	0xFEA
 34891                           fsr0l	equ	0xFE9
 34892                           wreg	equ	0xFE8
 34893                           postinc1	equ	0xFE6
 34894                           postdec1	equ	0xFE5
 34895                           plusw1	equ	0xFE3
 34896                           fsr1h	equ	0xFE2
 34897                           fsr1l	equ	0xFE1
 34898                           indf2	equ	0xFDF
 34899                           postinc2	equ	0xFDE
 34900                           postdec2	equ	0xFDD
 34901                           plusw2	equ	0xFDB
 34902                           fsr2h	equ	0xFDA
 34903                           fsr2l	equ	0xFD9
 34904                           status	equ	0xFD8
 34905                           
 34906 ;; *************** function _HALResetPinMakeOutput *****************
 34907 ;; Defined at:
 34908 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34909 ;; Parameters:    Size  Location     Type
 34910 ;;		None
 34911 ;; Auto vars:     Size  Location     Type
 34912 ;;		None
 34913 ;; Return value:  Size  Location     Type
 34914 ;;                  1    wreg      void 
 34915 ;; Registers used:
 34916 ;;		None
 34917 ;; Tracked objects:
 34918 ;;		On entry : 0/0
 34919 ;;		On exit  : 0/0
 34920 ;;		Unchanged: 0/0
 34921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34926 ;;Total ram usage:        0 bytes
 34927 ;; Hardware stack levels used:    1
 34928 ;; Hardware stack levels required when called:    7
 34929 ;; This function calls:
 34930 ;;		Nothing
 34931 ;; This function is called by:
 34932 ;;		_RADIO_Reset
 34933 ;; This function uses a non-reentrant model
 34934 ;;
 34935                           
 34936                           	psect	text172
 34937  007E98                     __ptext172:
 34938                           	opt stack 0
 34939  007E98                     _HALResetPinMakeOutput:
 34940                           	opt stack 20
 34941                           
 34942                           ; BSR set to: 0
 34943                           ;incstack = 0
 34944                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34945  007E98  9494               	bcf	3988,2,c	;volatile
 34946  007E9A  0012               	return	
 34947  007E9C                     __end_of_HALResetPinMakeOutput:
 34948                           	opt stack 0
 34949                           tosu	equ	0xFFF
 34950                           tosh	equ	0xFFE
 34951                           tosl	equ	0xFFD
 34952                           pclath	equ	0xFFA
 34953                           tblptru	equ	0xFF8
 34954                           tblptrh	equ	0xFF7
 34955                           tblptrl	equ	0xFF6
 34956                           tablat	equ	0xFF5
 34957                           prodh	equ	0xFF4
 34958                           prodl	equ	0xFF3
 34959                           intcon	equ	0xFF2
 34960                           intcon2	equ	0xFF1
 34961                           intcon3	equ	0xFF0
 34962                           indf0	equ	0xFEF
 34963                           postinc0	equ	0xFEE
 34964                           plusw0	equ	0xFEB
 34965                           fsr0h	equ	0xFEA
 34966                           fsr0l	equ	0xFE9
 34967                           wreg	equ	0xFE8
 34968                           postinc1	equ	0xFE6
 34969                           postdec1	equ	0xFE5
 34970                           plusw1	equ	0xFE3
 34971                           fsr1h	equ	0xFE2
 34972                           fsr1l	equ	0xFE1
 34973                           indf2	equ	0xFDF
 34974                           postinc2	equ	0xFDE
 34975                           postdec2	equ	0xFDD
 34976                           plusw2	equ	0xFDB
 34977                           fsr2h	equ	0xFDA
 34978                           fsr2l	equ	0xFD9
 34979                           status	equ	0xFD8
 34980                           
 34981 ;; *************** function _HALResetPinMakeInput *****************
 34982 ;; Defined at:
 34983 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34984 ;; Parameters:    Size  Location     Type
 34985 ;;		None
 34986 ;; Auto vars:     Size  Location     Type
 34987 ;;		None
 34988 ;; Return value:  Size  Location     Type
 34989 ;;                  1    wreg      void 
 34990 ;; Registers used:
 34991 ;;		None
 34992 ;; Tracked objects:
 34993 ;;		On entry : 0/0
 34994 ;;		On exit  : 0/0
 34995 ;;		Unchanged: 0/0
 34996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35001 ;;Total ram usage:        0 bytes
 35002 ;; Hardware stack levels used:    1
 35003 ;; Hardware stack levels required when called:    7
 35004 ;; This function calls:
 35005 ;;		Nothing
 35006 ;; This function is called by:
 35007 ;;		_RADIO_Reset
 35008 ;; This function uses a non-reentrant model
 35009 ;;
 35010                           
 35011                           	psect	text173
 35012  007E9C                     __ptext173:
 35013                           	opt stack 0
 35014  007E9C                     _HALResetPinMakeInput:
 35015                           	opt stack 20
 35016                           
 35017                           ;incstack = 0
 35018                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 35019  007E9C  8494               	bsf	3988,2,c	;volatile
 35020  007E9E  0012               	return	
 35021  007EA0                     __end_of_HALResetPinMakeInput:
 35022                           	opt stack 0
 35023                           tosu	equ	0xFFF
 35024                           tosh	equ	0xFFE
 35025                           tosl	equ	0xFFD
 35026                           pclath	equ	0xFFA
 35027                           tblptru	equ	0xFF8
 35028                           tblptrh	equ	0xFF7
 35029                           tblptrl	equ	0xFF6
 35030                           tablat	equ	0xFF5
 35031                           prodh	equ	0xFF4
 35032                           prodl	equ	0xFF3
 35033                           intcon	equ	0xFF2
 35034                           intcon2	equ	0xFF1
 35035                           intcon3	equ	0xFF0
 35036                           indf0	equ	0xFEF
 35037                           postinc0	equ	0xFEE
 35038                           plusw0	equ	0xFEB
 35039                           fsr0h	equ	0xFEA
 35040                           fsr0l	equ	0xFE9
 35041                           wreg	equ	0xFE8
 35042                           postinc1	equ	0xFE6
 35043                           postdec1	equ	0xFE5
 35044                           plusw1	equ	0xFE3
 35045                           fsr1h	equ	0xFE2
 35046                           fsr1l	equ	0xFE1
 35047                           indf2	equ	0xFDF
 35048                           postinc2	equ	0xFDE
 35049                           postdec2	equ	0xFDD
 35050                           plusw2	equ	0xFDB
 35051                           fsr2h	equ	0xFDA
 35052                           fsr2l	equ	0xFD9
 35053                           status	equ	0xFD8
 35054                           
 35055 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 35056 ;; Defined at:
 35057 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35058 ;; Parameters:    Size  Location     Type
 35059 ;;  period          2   70[BANK0 ] unsigned int 
 35060 ;; Auto vars:     Size  Location     Type
 35061 ;;  iCtr            1   80[BANK0 ] unsigned char 
 35062 ;; Return value:  Size  Location     Type
 35063 ;;                  1    wreg      void 
 35064 ;; Registers used:
 35065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35066 ;; Tracked objects:
 35067 ;;		On entry : 0/0
 35068 ;;		On exit  : 0/0
 35069 ;;		Unchanged: 0/0
 35070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35072 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35073 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35074 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35075 ;;Total ram usage:       11 bytes
 35076 ;; Hardware stack levels used:    1
 35077 ;; Hardware stack levels required when called:   11
 35078 ;; This function calls:
 35079 ;;		_SwTimerSetTimeout
 35080 ;;		_SwTimerStart
 35081 ;;		_SwTimerStop
 35082 ;;		___lldiv
 35083 ;;		___lmul
 35084 ;; This function is called by:
 35085 ;;		_LORAWAN_Reset
 35086 ;; This function uses a non-reentrant model
 35087 ;;
 35088                           
 35089                           	psect	text174
 35090  00452C                     __ptext174:
 35091                           	opt stack 0
 35092  00452C                     _LORAWAN_LinkCheckConfigure:
 35093                           	opt stack 17
 35094                           
 35095                           ;lorawan.c: 757: uint8_t iCtr;
 35096                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 35097                           
 35098                           ;incstack = 0
 35099  00452C  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 35100  004530  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 35101  004534  0100               	movlb	0	; () banked
 35102  004536  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 35103  004538  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 35104  00453A  0EE8               	movlw	232
 35105  00453C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 35106  00453E  0E03               	movlw	3
 35107  004540  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35108  004542  0E00               	movlw	0
 35109  004544  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35110  004546  0E00               	movlw	0
 35111  004548  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35112  00454A  EC55  F037         	call	___lmul	;wreg free
 35113  00454E  C09A  F2BD         	movff	?___lmul,_loRa+189
 35114  004552  C09B  F2BE         	movff	?___lmul+1,_loRa+190
 35115  004556  C09C  F2BF         	movff	?___lmul+2,_loRa+191
 35116  00455A  C09D  F2C0         	movff	?___lmul+3,_loRa+192
 35117                           
 35118                           ;lorawan.c: 761: if (period == 0)
 35119  00455E  0100               	movlb	0	; () banked
 35120  004560  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 35121  004562  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 35122  004564  A4D8               	btfss	status,2,c
 35123  004566  D02B               	goto	l1780
 35124                           
 35125                           ; BSR set to: 0
 35126                           ;lorawan.c: 762: {
 35127                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 35128  004568  0102               	movlb	2	; () banked
 35129  00456A  51D8               	movf	(_loRa+216)& (0+255),w,b
 35130  00456C  EC89  F03C         	call	_SwTimerStop
 35131                           
 35132                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 35133  004570  0102               	movlb	2	; () banked
 35134  004572  9503               	bcf	(_loRa+3)& (0+255),2,b
 35135                           
 35136                           ; BSR set to: 2
 35137                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 35138  004574  0E00               	movlw	0
 35139  004576  0100               	movlb	0	; () banked
 35140  004578  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 35141  00457A  D01A               	goto	l1781
 35142  00457C                     
 35143                           ; BSR set to: 0
 35144                           ;lorawan.c: 766: {
 35145                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 35146                           
 35147                           ; BSR set to: 0
 35148  00457C  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35149  00457E  0D02               	mullw	2
 35150  004580  0E99               	movlw	low (_loRa+153)
 35151  004582  24F3               	addwf	prodl,w,c
 35152  004584  6ED9               	movwf	fsr2l,c
 35153  004586  0E02               	movlw	high (_loRa+153)
 35154  004588  20F4               	addwfc	prodh,w,c
 35155  00458A  6EDA               	movwf	fsr2h,c
 35156  00458C  0E02               	movlw	2
 35157  00458E  18DE               	xorwf	postinc2,w,c
 35158  004590  A4D8               	btfss	status,2,c
 35159  004592  D00C               	goto	l1783
 35160                           
 35161                           ; BSR set to: 0
 35162                           ;lorawan.c: 768: {
 35163                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 35164  004594  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35165  004596  0D02               	mullw	2
 35166  004598  0E99               	movlw	low (_loRa+153)
 35167  00459A  24F3               	addwf	prodl,w,c
 35168  00459C  6ED9               	movwf	fsr2l,c
 35169  00459E  0E02               	movlw	high (_loRa+153)
 35170  0045A0  20F4               	addwfc	prodh,w,c
 35171  0045A2  6EDA               	movwf	fsr2h,c
 35172  0045A4  0EFF               	movlw	255
 35173  0045A6  6EDF               	movwf	indf2,c
 35174                           
 35175                           ; BSR set to: 0
 35176                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 35177  0045A8  0102               	movlb	2	; () banked
 35178  0045AA  0798               	decf	(_loRa+152)& (0+255),f,b
 35179  0045AC                     l1783:
 35180                           
 35181                           ; BSR set to: 2
 35182  0045AC  0100               	movlb	0	; () banked
 35183  0045AE  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 35184  0045B0                     l1781:
 35185                           
 35186                           ; BSR set to: 0
 35187                           
 35188                           ; BSR set to: 0
 35189  0045B0  0102               	movlb	2	; () banked
 35190  0045B2  5198               	movf	(_loRa+152)& (0+255),w,b
 35191  0045B4  0100               	movlb	0	; () banked
 35192  0045B6  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35193  0045B8  B0D8               	btfsc	status,0,c
 35194  0045BA  0012               	return	
 35195  0045BC  D7DF               	goto	l1782
 35196  0045BE                     l1780:
 35197                           
 35198                           ; BSR set to: 0
 35199                           ;lorawan.c: 776: else
 35200                           ;lorawan.c: 777: {
 35201                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 35202  0045BE  0102               	movlb	2	; () banked
 35203  0045C0  8503               	bsf	(_loRa+3)& (0+255),2,b
 35204                           
 35205                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 35206  0045C2  A902               	btfss	(_loRa+2)& (0+255),4,b
 35207  0045C4  0012               	return	
 35208                           
 35209                           ; BSR set to: 2
 35210                           ;lorawan.c: 782: {
 35211                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 35212  0045C6  51C0               	movf	(_loRa+192)& (0+255),w,b
 35213  0045C8  E107               	bnz	u11520
 35214  0045CA  29BD               	incf	(_loRa+189)& (0+255),w,b
 35215  0045CC  0EFF               	movlw	255
 35216  0045CE  59BE               	subwfb	(_loRa+190)& (0+255),w,b
 35217  0045D0  0E0F               	movlw	15
 35218  0045D2  59BF               	subwfb	(_loRa+191)& (0+255),w,b
 35219  0045D4  A0D8               	btfss	status,0,c
 35220  0045D6  D01D               	goto	l1788
 35221  0045D8                     u11520:
 35222                           
 35223                           ; BSR set to: 2
 35224  0045D8  C2BD  F060         	movff	_loRa+189,___lldiv@dividend
 35225  0045DC  C2BE  F061         	movff	_loRa+190,___lldiv@dividend+1
 35226  0045E0  C2BF  F062         	movff	_loRa+191,___lldiv@dividend+2
 35227  0045E4  C2C0  F063         	movff	_loRa+192,___lldiv@dividend+3
 35228  0045E8  0E7D               	movlw	125
 35229  0045EA  0100               	movlb	0	; () banked
 35230  0045EC  6F64               	movwf	___lldiv@divisor& (0+255),b
 35231  0045EE  0E00               	movlw	0
 35232  0045F0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35233  0045F2  0E00               	movlw	0
 35234  0045F4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35235  0045F6  0E00               	movlw	0
 35236  0045F8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35237  0045FA  EC93  F032         	call	___lldiv	;wreg free
 35238  0045FE  0E0C               	movlw	12
 35239  004600                     u11535:
 35240  004600  90D8               	bcf	status,0,c
 35241  004602  0100               	movlb	0	; () banked
 35242  004604  3760               	rlcf	?___lldiv& (0+255),f,b
 35243  004606  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 35244  004608  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 35245  00460A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 35246  00460C  2EE8               	decfsz	wreg,f,c
 35247  00460E  D7F8               	goto	u11535
 35248  004610  D023               	goto	L24
 35249  004612                     l1788:
 35250                           
 35251                           ; BSR set to: 0
 35252  004612  C2BD  F0A8         	movff	_loRa+189,??_LORAWAN_LinkCheckConfigure
 35253  004616  C2BE  F0A9         	movff	_loRa+190,??_LORAWAN_LinkCheckConfigure+1
 35254  00461A  C2BF  F0AA         	movff	_loRa+191,??_LORAWAN_LinkCheckConfigure+2
 35255  00461E  C2C0  F0AB         	movff	_loRa+192,??_LORAWAN_LinkCheckConfigure+3
 35256  004622  0E0C               	movlw	12
 35257  004624                     u11545:
 35258  004624  90D8               	bcf	status,0,c
 35259  004626  0100               	movlb	0	; () banked
 35260  004628  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 35261  00462A  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 35262  00462C  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 35263  00462E  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 35264  004630  2EE8               	decfsz	wreg,f,c
 35265  004632  D7F8               	goto	u11545
 35266  004634  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 35267  004638  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 35268  00463C  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 35269  004640  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 35270  004644  0E7D               	movlw	125
 35271  004646  6F64               	movwf	___lldiv@divisor& (0+255),b
 35272  004648  0E00               	movlw	0
 35273  00464A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35274  00464C  0E00               	movlw	0
 35275  00464E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35276  004650  0E00               	movlw	0
 35277  004652  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35278  004654  EC93  F032         	call	___lldiv	;wreg free
 35279  004658                     L24:
 35280  004658  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2509
 35281  00465C  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2509+1
 35282  004660  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2509+2
 35283  004664  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2509+3
 35284  004668  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$2509,SwTimerSetTimeout@timeout
 35285  00466C  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$2509+1,SwTimerSetTimeout@timeout+1
 35286  004670  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$2509+2,SwTimerSetTimeout@timeout+2
 35287  004674  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$2509+3,SwTimerSetTimeout@timeout+3
 35288  004678  0102               	movlb	2	; () banked
 35289  00467A  51D8               	movf	(_loRa+216)& (0+255),w,b
 35290  00467C  EC9D  F039         	call	_SwTimerSetTimeout
 35291                           
 35292                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 35293  004680  0102               	movlb	2	; () banked
 35294  004682  51D8               	movf	(_loRa+216)& (0+255),w,b
 35295  004684  EC62  F030         	call	_SwTimerStart
 35296  004688  0012               	return	
 35297  00468A                     __end_of_LORAWAN_LinkCheckConfigure:
 35298                           	opt stack 0
 35299                           tosu	equ	0xFFF
 35300                           tosh	equ	0xFFE
 35301                           tosl	equ	0xFFD
 35302                           pclath	equ	0xFFA
 35303                           tblptru	equ	0xFF8
 35304                           tblptrh	equ	0xFF7
 35305                           tblptrl	equ	0xFF6
 35306                           tablat	equ	0xFF5
 35307                           prodh	equ	0xFF4
 35308                           prodl	equ	0xFF3
 35309                           intcon	equ	0xFF2
 35310                           intcon2	equ	0xFF1
 35311                           intcon3	equ	0xFF0
 35312                           indf0	equ	0xFEF
 35313                           postinc0	equ	0xFEE
 35314                           plusw0	equ	0xFEB
 35315                           fsr0h	equ	0xFEA
 35316                           fsr0l	equ	0xFE9
 35317                           wreg	equ	0xFE8
 35318                           postinc1	equ	0xFE6
 35319                           postdec1	equ	0xFE5
 35320                           plusw1	equ	0xFE3
 35321                           fsr1h	equ	0xFE2
 35322                           fsr1l	equ	0xFE1
 35323                           indf2	equ	0xFDF
 35324                           postinc2	equ	0xFDE
 35325                           postdec2	equ	0xFDD
 35326                           plusw2	equ	0xFDB
 35327                           fsr2h	equ	0xFDA
 35328                           fsr2l	equ	0xFD9
 35329                           status	equ	0xFD8
 35330                           
 35331 ;; *************** function ___lmul *****************
 35332 ;; Defined at:
 35333 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 35334 ;; Parameters:    Size  Location     Type
 35335 ;;  multiplier      4   58[BANK0 ] unsigned long 
 35336 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 35337 ;; Auto vars:     Size  Location     Type
 35338 ;;  product         4   66[BANK0 ] unsigned long 
 35339 ;; Return value:  Size  Location     Type
 35340 ;;                  4   58[BANK0 ] unsigned long 
 35341 ;; Registers used:
 35342 ;;		wreg, status,2, status,0
 35343 ;; Tracked objects:
 35344 ;;		On entry : 0/0
 35345 ;;		On exit  : 0/0
 35346 ;;		Unchanged: 0/0
 35347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35348 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35351 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35352 ;;Total ram usage:       12 bytes
 35353 ;; Hardware stack levels used:    1
 35354 ;; Hardware stack levels required when called:    7
 35355 ;; This function calls:
 35356 ;;		Nothing
 35357 ;; This function is called by:
 35358 ;;		_RADIO_WriteConfiguration
 35359 ;;		_RADIO_TxDone
 35360 ;;		_RADIO_FSKPacketSent
 35361 ;;		_ExecuteNewChannel
 35362 ;;		_ExecuteRxParamSetupReq
 35363 ;;		_GenerateUSFrequency1
 35364 ;;		_GenerateUSFrequency2
 35365 ;;		_GenerateUSFrequencyReception
 35366 ;;		_LORAWAN_LinkCheckConfigure
 35367 ;;		_rand
 35368 ;;		_LORAWAN_Pause
 35369 ;; This function uses a non-reentrant model
 35370 ;;
 35371                           
 35372                           	psect	text175
 35373  006EAA                     __ptext175:
 35374                           	opt stack 0
 35375  006EAA                     ___lmul:
 35376                           	opt stack 18
 35377                           
 35378                           ;incstack = 0
 35379  006EAA  0E00               	movlw	0
 35380  006EAC  0100               	movlb	0	; () banked
 35381  006EAE  6FA2               	movwf	___lmul@product& (0+255),b
 35382  006EB0  0E00               	movlw	0
 35383  006EB2  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 35384  006EB4  0E00               	movlw	0
 35385  006EB6  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 35386  006EB8  0E00               	movlw	0
 35387  006EBA  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 35388  006EBC                     
 35389                           ; BSR set to: 0
 35390                           
 35391                           ; BSR set to: 0
 35392  006EBC  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 35393  006EBE  D008               	goto	l2509
 35394                           
 35395                           ; BSR set to: 0
 35396  006EC0  519E               	movf	___lmul@multiplicand& (0+255),w,b
 35397  006EC2  27A2               	addwf	___lmul@product& (0+255),f,b
 35398  006EC4  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35399  006EC6  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 35400  006EC8  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35401  006ECA  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 35402  006ECC  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35403  006ECE  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 35404  006ED0                     l2509:
 35405                           
 35406                           ; BSR set to: 0
 35407                           
 35408                           ; BSR set to: 0
 35409  006ED0  90D8               	bcf	status,0,c
 35410  006ED2  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 35411  006ED4  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35412  006ED6  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35413  006ED8  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35414                           
 35415                           ; BSR set to: 0
 35416  006EDA  90D8               	bcf	status,0,c
 35417  006EDC  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35418  006EDE  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35419  006EE0  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35420  006EE2  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 35421  006EE4  519A               	movf	___lmul@multiplier& (0+255),w,b
 35422  006EE6  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35423  006EE8  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35424  006EEA  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35425  006EEC  A4D8               	btfss	status,2,c
 35426  006EEE  D7E6               	goto	l2508
 35427                           
 35428                           ; BSR set to: 0
 35429  006EF0  C0A2  F09A         	movff	___lmul@product,?___lmul
 35430  006EF4  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 35431  006EF8  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 35432  006EFC  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 35433                           
 35434                           ; BSR set to: 0
 35435  006F00  0012               	return		;funcret
 35436  006F02                     __end_of___lmul:
 35437                           	opt stack 0
 35438                           tosu	equ	0xFFF
 35439                           tosh	equ	0xFFE
 35440                           tosl	equ	0xFFD
 35441                           pclath	equ	0xFFA
 35442                           tblptru	equ	0xFF8
 35443                           tblptrh	equ	0xFF7
 35444                           tblptrl	equ	0xFF6
 35445                           tablat	equ	0xFF5
 35446                           prodh	equ	0xFF4
 35447                           prodl	equ	0xFF3
 35448                           intcon	equ	0xFF2
 35449                           intcon2	equ	0xFF1
 35450                           intcon3	equ	0xFF0
 35451                           indf0	equ	0xFEF
 35452                           postinc0	equ	0xFEE
 35453                           plusw0	equ	0xFEB
 35454                           fsr0h	equ	0xFEA
 35455                           fsr0l	equ	0xFE9
 35456                           wreg	equ	0xFE8
 35457                           postinc1	equ	0xFE6
 35458                           postdec1	equ	0xFE5
 35459                           plusw1	equ	0xFE3
 35460                           fsr1h	equ	0xFE2
 35461                           fsr1l	equ	0xFE1
 35462                           indf2	equ	0xFDF
 35463                           postinc2	equ	0xFDE
 35464                           postdec2	equ	0xFDD
 35465                           plusw2	equ	0xFDB
 35466                           fsr2h	equ	0xFDA
 35467                           fsr2l	equ	0xFD9
 35468                           status	equ	0xFD8
 35469                           
 35470 ;; *************** function ___lldiv *****************
 35471 ;; Defined at:
 35472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 35473 ;; Parameters:    Size  Location     Type
 35474 ;;  dividend        4    0[BANK0 ] unsigned long 
 35475 ;;  divisor         4    4[BANK0 ] unsigned long 
 35476 ;; Auto vars:     Size  Location     Type
 35477 ;;  quotient        4    8[BANK0 ] unsigned long 
 35478 ;;  counter         1   12[BANK0 ] unsigned char 
 35479 ;; Return value:  Size  Location     Type
 35480 ;;                  4    0[BANK0 ] unsigned long 
 35481 ;; Registers used:
 35482 ;;		wreg, status,2, status,0
 35483 ;; Tracked objects:
 35484 ;;		On entry : 0/0
 35485 ;;		On exit  : 0/0
 35486 ;;		Unchanged: 0/0
 35487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35489 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35491 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35492 ;;Total ram usage:       13 bytes
 35493 ;; Hardware stack levels used:    1
 35494 ;; Hardware stack levels required when called:    7
 35495 ;; This function calls:
 35496 ;;		Nothing
 35497 ;; This function is called by:
 35498 ;;		_RADIO_WriteFrequency
 35499 ;;		_RADIO_WriteFSKFrequencyDeviation
 35500 ;;		_RADIO_WriteFSKBitRate
 35501 ;;		_RADIO_Transmit
 35502 ;;		_RADIO_ReceiveStart
 35503 ;;		_LORAWAN_TxDone
 35504 ;;		_LORAWAN_LinkCheckConfigure
 35505 ;;		_LORAWAN_LinkCheckCallback
 35506 ;;		_UpdateRetransmissionAckTimeoutState
 35507 ;;		_UpdateJoinSuccessState
 35508 ;; This function uses a non-reentrant model
 35509 ;;
 35510                           
 35511                           	psect	text176
 35512  006526                     __ptext176:
 35513                           	opt stack 0
 35514  006526                     ___lldiv:
 35515                           	opt stack 21
 35516                           
 35517                           ; BSR set to: 0
 35518                           ;incstack = 0
 35519  006526  0E00               	movlw	0
 35520  006528  0100               	movlb	0	; () banked
 35521  00652A  6F68               	movwf	___lldiv@quotient& (0+255),b
 35522  00652C  0E00               	movlw	0
 35523  00652E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 35524  006530  0E00               	movlw	0
 35525  006532  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 35526  006534  0E00               	movlw	0
 35527  006536  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 35528                           
 35529                           ; BSR set to: 0
 35530  006538  5164               	movf	___lldiv@divisor& (0+255),w,b
 35531  00653A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35532  00653C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35533  00653E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35534  006540  B4D8               	btfsc	status,2,c
 35535  006542  D02A               	goto	l2852
 35536                           
 35537                           ; BSR set to: 0
 35538  006544  0E01               	movlw	1
 35539  006546  6F6C               	movwf	___lldiv@counter& (0+255),b
 35540  006548  D006               	goto	l2847
 35541  00654A                     
 35542                           ; BSR set to: 0
 35543                           
 35544                           ; BSR set to: 0
 35545  00654A  90D8               	bcf	status,0,c
 35546  00654C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 35547  00654E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35548  006550  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35549  006552  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35550  006554  2B6C               	incf	___lldiv@counter& (0+255),f,b
 35551  006556                     l2847:
 35552                           
 35553                           ; BSR set to: 0
 35554                           
 35555                           ; BSR set to: 0
 35556  006556  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35557  006558  D7F8               	goto	l2848
 35558  00655A                     u6910:
 35559                           
 35560                           ; BSR set to: 0
 35561                           
 35562                           ; BSR set to: 0
 35563                           
 35564                           ; BSR set to: 0
 35565  00655A  90D8               	bcf	status,0,c
 35566  00655C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 35567  00655E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35568  006560  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35569  006562  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35570                           
 35571                           ; BSR set to: 0
 35572  006564  5164               	movf	___lldiv@divisor& (0+255),w,b
 35573  006566  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 35574  006568  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35575  00656A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35576  00656C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35577  00656E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35578  006570  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35579  006572  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35580  006574  A0D8               	btfss	status,0,c
 35581  006576  D009               	goto	l2851
 35582                           
 35583                           ; BSR set to: 0
 35584  006578  5164               	movf	___lldiv@divisor& (0+255),w,b
 35585  00657A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 35586  00657C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35587  00657E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35588  006580  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35589  006582  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35590  006584  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35591  006586  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35592                           
 35593                           ; BSR set to: 0
 35594  006588  8168               	bsf	___lldiv@quotient& (0+255),0,b
 35595  00658A                     l2851:
 35596                           
 35597                           ; BSR set to: 0
 35598                           
 35599                           ; BSR set to: 0
 35600  00658A  90D8               	bcf	status,0,c
 35601  00658C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35602  00658E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35603  006590  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35604  006592  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 35605                           
 35606                           ; BSR set to: 0
 35607  006594  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 35608  006596  D7E1               	goto	u6910
 35609  006598                     l2852:
 35610                           
 35611                           ; BSR set to: 0
 35612                           
 35613                           ; BSR set to: 0
 35614  006598  C068  F060         	movff	___lldiv@quotient,?___lldiv
 35615  00659C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 35616  0065A0  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 35617  0065A4  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 35618                           
 35619                           ; BSR set to: 0
 35620  0065A8  0012               	return		;funcret
 35621  0065AA                     __end_of___lldiv:
 35622                           	opt stack 0
 35623                           tosu	equ	0xFFF
 35624                           tosh	equ	0xFFE
 35625                           tosl	equ	0xFFD
 35626                           pclath	equ	0xFFA
 35627                           tblptru	equ	0xFF8
 35628                           tblptrh	equ	0xFF7
 35629                           tblptrl	equ	0xFF6
 35630                           tablat	equ	0xFF5
 35631                           prodh	equ	0xFF4
 35632                           prodl	equ	0xFF3
 35633                           intcon	equ	0xFF2
 35634                           intcon2	equ	0xFF1
 35635                           intcon3	equ	0xFF0
 35636                           indf0	equ	0xFEF
 35637                           postinc0	equ	0xFEE
 35638                           plusw0	equ	0xFEB
 35639                           fsr0h	equ	0xFEA
 35640                           fsr0l	equ	0xFE9
 35641                           wreg	equ	0xFE8
 35642                           postinc1	equ	0xFE6
 35643                           postdec1	equ	0xFE5
 35644                           plusw1	equ	0xFE3
 35645                           fsr1h	equ	0xFE2
 35646                           fsr1l	equ	0xFE1
 35647                           indf2	equ	0xFDF
 35648                           postinc2	equ	0xFDE
 35649                           postdec2	equ	0xFDD
 35650                           plusw2	equ	0xFDB
 35651                           fsr2h	equ	0xFDA
 35652                           fsr2l	equ	0xFD9
 35653                           status	equ	0xFD8
 35654                           
 35655 ;; *************** function _SwTimerStop *****************
 35656 ;; Defined at:
 35657 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35658 ;; Parameters:    Size  Location     Type
 35659 ;;  timerId         1    wreg     unsigned char 
 35660 ;; Auto vars:     Size  Location     Type
 35661 ;;  timerId         1    0[BANK0 ] unsigned char 
 35662 ;; Return value:  Size  Location     Type
 35663 ;;                  1    wreg      void 
 35664 ;; Registers used:
 35665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35666 ;; Tracked objects:
 35667 ;;		On entry : 0/0
 35668 ;;		On exit  : 0/0
 35669 ;;		Unchanged: 0/0
 35670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35675 ;;Total ram usage:        1 bytes
 35676 ;; Hardware stack levels used:    1
 35677 ;; Hardware stack levels required when called:    7
 35678 ;; This function calls:
 35679 ;;		Nothing
 35680 ;; This function is called by:
 35681 ;;		_RADIO_Init
 35682 ;;		_RADIO_Transmit
 35683 ;;		_RADIO_RxDone
 35684 ;;		_RADIO_FSKPayloadReady
 35685 ;;		_RADIO_RxTimeout
 35686 ;;		_RADIO_TxDone
 35687 ;;		_RADIO_FSKPacketSent
 35688 ;;		_RADIO_RxFSKTimeout
 35689 ;;		_StopAllSoftwareTimers
 35690 ;;		_LORAWAN_LinkCheckConfigure
 35691 ;;		_LORAWAN_RxDone
 35692 ;; This function uses a non-reentrant model
 35693 ;;
 35694                           
 35695                           	psect	text177
 35696  007912                     __ptext177:
 35697                           	opt stack 0
 35698  007912                     _SwTimerStop:
 35699                           	opt stack 21
 35700                           
 35701                           ; BSR set to: 0
 35702                           ;incstack = 0
 35703                           ;SwTimerStop@timerId stored from wreg
 35704  007912  0100               	movlb	0	; () banked
 35705  007914  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 35706                           
 35707                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35708  007916  9EF2               	bcf	intcon,7,c	;volatile
 35709                           
 35710                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35711  007918  0100               	movlb	0	; () banked
 35712  00791A  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 35713  00791C  0D08               	mullw	8
 35714  00791E  0E04               	movlw	4
 35715  007920  26F3               	addwf	prodl,f,c
 35716  007922  0E00               	movlw	0
 35717  007924  22F4               	addwfc	prodh,f,c
 35718  007926  0E00               	movlw	low _swTimers
 35719  007928  24F3               	addwf	prodl,w,c
 35720  00792A  6ED9               	movwf	fsr2l,c
 35721  00792C  0E03               	movlw	high _swTimers
 35722  00792E  20F4               	addwfc	prodh,w,c
 35723  007930  6EDA               	movwf	fsr2h,c
 35724  007932  0E00               	movlw	0
 35725  007934  6EDF               	movwf	indf2,c
 35726                           
 35727                           ; BSR set to: 0
 35728                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35729  007936  8EF2               	bsf	intcon,7,c	;volatile
 35730                           
 35731                           ; BSR set to: 0
 35732  007938  0012               	return		;funcret
 35733  00793A                     __end_of_SwTimerStop:
 35734                           	opt stack 0
 35735                           tosu	equ	0xFFF
 35736                           tosh	equ	0xFFE
 35737                           tosl	equ	0xFFD
 35738                           pclath	equ	0xFFA
 35739                           tblptru	equ	0xFF8
 35740                           tblptrh	equ	0xFF7
 35741                           tblptrl	equ	0xFF6
 35742                           tablat	equ	0xFF5
 35743                           prodh	equ	0xFF4
 35744                           prodl	equ	0xFF3
 35745                           intcon	equ	0xFF2
 35746                           intcon2	equ	0xFF1
 35747                           intcon3	equ	0xFF0
 35748                           indf0	equ	0xFEF
 35749                           postinc0	equ	0xFEE
 35750                           plusw0	equ	0xFEB
 35751                           fsr0h	equ	0xFEA
 35752                           fsr0l	equ	0xFE9
 35753                           wreg	equ	0xFE8
 35754                           postinc1	equ	0xFE6
 35755                           postdec1	equ	0xFE5
 35756                           plusw1	equ	0xFE3
 35757                           fsr1h	equ	0xFE2
 35758                           fsr1l	equ	0xFE1
 35759                           indf2	equ	0xFDF
 35760                           postinc2	equ	0xFDE
 35761                           postdec2	equ	0xFDD
 35762                           plusw2	equ	0xFDB
 35763                           fsr2h	equ	0xFDA
 35764                           fsr2l	equ	0xFD9
 35765                           status	equ	0xFD8
 35766                           
 35767 ;; *************** function _SwTimerStart *****************
 35768 ;; Defined at:
 35769 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35770 ;; Parameters:    Size  Location     Type
 35771 ;;  timerId         1    wreg     unsigned char 
 35772 ;; Auto vars:     Size  Location     Type
 35773 ;;  timerId         1   57[BANK0 ] unsigned char 
 35774 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 35775 ;; Return value:  Size  Location     Type
 35776 ;;                  1    wreg      void 
 35777 ;; Registers used:
 35778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35779 ;; Tracked objects:
 35780 ;;		On entry : 0/0
 35781 ;;		On exit  : 0/0
 35782 ;;		Unchanged: 0/0
 35783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35785 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35788 ;;Total ram usage:        9 bytes
 35789 ;; Hardware stack levels used:    1
 35790 ;; Hardware stack levels required when called:   10
 35791 ;; This function calls:
 35792 ;;		_SwTimersInterrupt
 35793 ;;		_TMR_OverrideRemaining
 35794 ;; This function is called by:
 35795 ;;		_RADIO_Transmit
 35796 ;;		_RADIO_ReceiveStart
 35797 ;;		_LORAWAN_TxDone
 35798 ;;		_Retransmissions
 35799 ;;		_TransmissionErrorCallback
 35800 ;;		_LORAWAN_Join
 35801 ;;		_LORAWAN_LinkCheckConfigure
 35802 ;;		_LORAWAN_LinkCheckCallback
 35803 ;;		_UpdateRetransmissionAckTimeoutState
 35804 ;;		_UpdateJoinSuccessState
 35805 ;; This function uses a non-reentrant model
 35806 ;;
 35807                           
 35808                           	psect	text178
 35809  0060C4                     __ptext178:
 35810                           	opt stack 0
 35811  0060C4                     _SwTimerStart:
 35812                           	opt stack 18
 35813                           
 35814                           ; BSR set to: 0
 35815                           ;incstack = 0
 35816                           ;SwTimerStart@timerId stored from wreg
 35817  0060C4  0100               	movlb	0	; () banked
 35818  0060C6  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 35819                           
 35820                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35821                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35822  0060C8  9EF2               	bcf	intcon,7,c	;volatile
 35823                           
 35824                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35825  0060CA  EC5D  F027         	call	_SwTimersInterrupt	;wreg free
 35826  0060CE  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35827  0060D2  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35828  0060D6  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35829  0060DA  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35830                           
 35831                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35832  0060DE  0100               	movlb	0	; () banked
 35833  0060E0  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 35834  0060E2  0D08               	mullw	8
 35835  0060E4  0E00               	movlw	low _swTimers
 35836  0060E6  24F3               	addwf	prodl,w,c
 35837  0060E8  6ED9               	movwf	fsr2l,c
 35838  0060EA  0E03               	movlw	high _swTimers
 35839  0060EC  20F4               	addwfc	prodh,w,c
 35840  0060EE  6EDA               	movwf	fsr2h,c
 35841  0060F0  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35842  0060F2  5CDE               	subwf	postinc2,w,c
 35843  0060F4  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35844  0060F6  58DE               	subwfb	postinc2,w,c
 35845  0060F8  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35846  0060FA  58DE               	subwfb	postinc2,w,c
 35847  0060FC  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35848  0060FE  58DE               	subwfb	postinc2,w,c
 35849  006100  B0D8               	btfsc	status,0,c
 35850  006102  D010               	goto	l272
 35851                           
 35852                           ; BSR set to: 0
 35853                           ;sw_timer.c: 225: {
 35854                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35855  006104  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 35856  006106  0D08               	mullw	8
 35857  006108  0E00               	movlw	low _swTimers
 35858  00610A  24F3               	addwf	prodl,w,c
 35859  00610C  6ED9               	movwf	fsr2l,c
 35860  00610E  0E03               	movlw	high _swTimers
 35861  006110  20F4               	addwfc	prodh,w,c
 35862  006112  6EDA               	movwf	fsr2h,c
 35863  006114  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 35864  006118  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35865  00611C  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35866  006120  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35867  006124                     l272:
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;sw_timer.c: 227: }
 35871                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35872                           
 35873                           ; BSR set to: 0
 35874  006124  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35875  006128  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35876  00612C  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35877  006130  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35878  006134  ECAD  F030         	call	_TMR_OverrideRemaining	;wreg free
 35879                           
 35880                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35881  006138  0100               	movlb	0	; () banked
 35882  00613A  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 35883  00613C  0D08               	mullw	8
 35884  00613E  0E04               	movlw	4
 35885  006140  26F3               	addwf	prodl,f,c
 35886  006142  0E00               	movlw	0
 35887  006144  22F4               	addwfc	prodh,f,c
 35888  006146  0E00               	movlw	low _swTimers
 35889  006148  24F3               	addwf	prodl,w,c
 35890  00614A  6ED9               	movwf	fsr2l,c
 35891  00614C  0E03               	movlw	high _swTimers
 35892  00614E  20F4               	addwfc	prodh,w,c
 35893  006150  6EDA               	movwf	fsr2h,c
 35894  006152  0E01               	movlw	1
 35895  006154  6EDF               	movwf	indf2,c
 35896                           
 35897                           ; BSR set to: 0
 35898                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35899  006156  8EF2               	bsf	intcon,7,c	;volatile
 35900                           
 35901                           ; BSR set to: 0
 35902  006158  0012               	return		;funcret
 35903  00615A                     __end_of_SwTimerStart:
 35904                           	opt stack 0
 35905                           tosu	equ	0xFFF
 35906                           tosh	equ	0xFFE
 35907                           tosl	equ	0xFFD
 35908                           pclath	equ	0xFFA
 35909                           tblptru	equ	0xFF8
 35910                           tblptrh	equ	0xFF7
 35911                           tblptrl	equ	0xFF6
 35912                           tablat	equ	0xFF5
 35913                           prodh	equ	0xFF4
 35914                           prodl	equ	0xFF3
 35915                           intcon	equ	0xFF2
 35916                           intcon2	equ	0xFF1
 35917                           intcon3	equ	0xFF0
 35918                           indf0	equ	0xFEF
 35919                           postinc0	equ	0xFEE
 35920                           plusw0	equ	0xFEB
 35921                           fsr0h	equ	0xFEA
 35922                           fsr0l	equ	0xFE9
 35923                           wreg	equ	0xFE8
 35924                           postinc1	equ	0xFE6
 35925                           postdec1	equ	0xFE5
 35926                           plusw1	equ	0xFE3
 35927                           fsr1h	equ	0xFE2
 35928                           fsr1l	equ	0xFE1
 35929                           indf2	equ	0xFDF
 35930                           postinc2	equ	0xFDE
 35931                           postdec2	equ	0xFDD
 35932                           plusw2	equ	0xFDB
 35933                           fsr2h	equ	0xFDA
 35934                           fsr2l	equ	0xFD9
 35935                           status	equ	0xFD8
 35936                           
 35937 ;; *************** function _TMR_OverrideRemaining *****************
 35938 ;; Defined at:
 35939 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35940 ;; Parameters:    Size  Location     Type
 35941 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 35942 ;; Auto vars:     Size  Location     Type
 35943 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 35944 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 35945 ;; Return value:  Size  Location     Type
 35946 ;;                  1    wreg      void 
 35947 ;; Registers used:
 35948 ;;		wreg, status,2, status,0, cstack
 35949 ;; Tracked objects:
 35950 ;;		On entry : 0/0
 35951 ;;		On exit  : 0/0
 35952 ;;		Unchanged: 0/0
 35953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35955 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35957 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35958 ;;Total ram usage:       10 bytes
 35959 ;; Hardware stack levels used:    1
 35960 ;; Hardware stack levels required when called:    9
 35961 ;; This function calls:
 35962 ;;		_TMR_SwapTimer
 35963 ;; This function is called by:
 35964 ;;		_SwTimerStart
 35965 ;; This function uses a non-reentrant model
 35966 ;;
 35967                           
 35968                           	psect	text179
 35969  00615A                     __ptext179:
 35970                           	opt stack 0
 35971  00615A                     _TMR_OverrideRemaining:
 35972                           	opt stack 18
 35973                           
 35974                           ;sw_timer.c: 67: uint16_t tmrVal;
 35975                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35976                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35977                           
 35978                           ; BSR set to: 0
 35979                           ;incstack = 0
 35980  00615A  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35981  00615C  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35982  00615E  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35983  006160  E104               	bnz	u7000
 35984  006162  0E0B               	movlw	11
 35985  006164  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35986  006166  A0D8               	btfss	status,0,c
 35987  006168  0012               	return	
 35988  00616A                     u7000:
 35989                           
 35990                           ;sw_timer.c: 72: {
 35991                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35992  00616A  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35993  00616C  0100               	movlb	0	; () banked
 35994  00616E  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35995  006170  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35996  006172  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35997  006174  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35998  006176  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35999  006178  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 36000  00617A  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 36001  00617C  B0D8               	btfsc	status,0,c
 36002  00617E  0012               	return	
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;sw_timer.c: 74: {
 36006                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 36007  006180  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 36008  006184  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 36009  006188  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 36010  00618C  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 36011                           
 36012                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 36013  006190  C0FD  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 36014  006194  C0FE  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 36015                           
 36016                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 36017  006198  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 36018  00619C  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 36019  0061A0  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 36020  0061A2  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 36021  0061A4  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 36022  0061A6  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 36023  0061A8  C06E  F0FD         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 36024  0061AC  C06F  F0FE         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 36025                           
 36026                           ; BSR set to: 0
 36027                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 36028  0061B0  C0FD  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 36029  0061B4  C0FE  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 36030  0061B8  ECCB  F038         	call	_TMR_SwapTimer	;wreg free
 36031  0061BC  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 36032  0061C0  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 36033                           
 36034                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 36035  0061C4  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 36036  0061C8  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 36037  0061CC  0100               	movlb	0	; () banked
 36038  0061CE  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 36039  0061D0  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 36040  0061D2  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 36041  0061D4  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 36042  0061D6  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 36043  0061D8  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 36044  0061DA  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 36045  0061DC  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 36046  0061DE  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 36047  0061E0  2640               	addwf	_ticksAdded,f,c	;volatile
 36048  0061E2  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 36049  0061E4  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 36050  0061E6  0E00               	movlw	0
 36051  0061E8  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 36052  0061EA  0E00               	movlw	0
 36053  0061EC  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 36054                           
 36055                           ; BSR set to: 0
 36056  0061EE  0012               	return	
 36057  0061F0                     __end_of_TMR_OverrideRemaining:
 36058                           	opt stack 0
 36059                           tosu	equ	0xFFF
 36060                           tosh	equ	0xFFE
 36061                           tosl	equ	0xFFD
 36062                           pclath	equ	0xFFA
 36063                           tblptru	equ	0xFF8
 36064                           tblptrh	equ	0xFF7
 36065                           tblptrl	equ	0xFF6
 36066                           tablat	equ	0xFF5
 36067                           prodh	equ	0xFF4
 36068                           prodl	equ	0xFF3
 36069                           intcon	equ	0xFF2
 36070                           intcon2	equ	0xFF1
 36071                           intcon3	equ	0xFF0
 36072                           indf0	equ	0xFEF
 36073                           postinc0	equ	0xFEE
 36074                           plusw0	equ	0xFEB
 36075                           fsr0h	equ	0xFEA
 36076                           fsr0l	equ	0xFE9
 36077                           wreg	equ	0xFE8
 36078                           postinc1	equ	0xFE6
 36079                           postdec1	equ	0xFE5
 36080                           plusw1	equ	0xFE3
 36081                           fsr1h	equ	0xFE2
 36082                           fsr1l	equ	0xFE1
 36083                           indf2	equ	0xFDF
 36084                           postinc2	equ	0xFDE
 36085                           postdec2	equ	0xFDD
 36086                           plusw2	equ	0xFDB
 36087                           fsr2h	equ	0xFDA
 36088                           fsr2l	equ	0xFD9
 36089                           status	equ	0xFD8
 36090                           
 36091 ;; *************** function _TMR_SwapTimer *****************
 36092 ;; Defined at:
 36093 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36094 ;; Parameters:    Size  Location     Type
 36095 ;;  timerVal        2    8[BANK0 ] unsigned int 
 36096 ;; Auto vars:     Size  Location     Type
 36097 ;;		None
 36098 ;; Return value:  Size  Location     Type
 36099 ;;                  2    8[BANK0 ] unsigned int 
 36100 ;; Registers used:
 36101 ;;		wreg, status,2, status,0, cstack
 36102 ;; Tracked objects:
 36103 ;;		On entry : 0/0
 36104 ;;		On exit  : 0/0
 36105 ;;		Unchanged: 0/0
 36106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36111 ;;Total ram usage:        2 bytes
 36112 ;; Hardware stack levels used:    1
 36113 ;; Hardware stack levels required when called:    8
 36114 ;; This function calls:
 36115 ;;		_TMR1_ReadTimer
 36116 ;;		_TMR1_WriteTimer
 36117 ;; This function is called by:
 36118 ;;		_TMR_OverrideRemaining
 36119 ;; This function uses a non-reentrant model
 36120 ;;
 36121                           
 36122                           	psect	text180
 36123  007196                     __ptext180:
 36124                           	opt stack 0
 36125  007196                     _TMR_SwapTimer:
 36126                           	opt stack 18
 36127                           
 36128                           ;sw_timer.c: 114: static uint16_t oldVal;
 36129                           ;sw_timer.c: 115: static uint16_t retVal;
 36130                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 36131                           
 36132                           ;incstack = 0
 36133  007196  EC3C  F03D         	call	_TMR1_ReadTimer	;wreg free
 36134  00719A  C060  F16F         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 36135  00719E  C061  F170         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 36136  0071A2                     
 36137                           ;sw_timer.c: 123: ;
 36138  0071A2  EC3C  F03D         	call	_TMR1_ReadTimer	;wreg free
 36139  0071A6  0101               	movlb	1	; () banked
 36140  0071A8  516F               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 36141  0071AA  0100               	movlb	0	; () banked
 36142  0071AC  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 36143  0071AE  E106               	bnz	l7820
 36144  0071B0  0101               	movlb	1	; () banked
 36145  0071B2  5170               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 36146  0071B4  0100               	movlb	0	; () banked
 36147  0071B6  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 36148  0071B8  B4D8               	btfsc	status,2,c
 36149  0071BA  D7F3               	goto	l238
 36150  0071BC                     l7820:
 36151                           
 36152                           ; BSR set to: 0
 36153                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 36154  0071BC  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 36155  0071C0  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 36156  0071C4  EC6D  F03D         	call	_TMR1_WriteTimer	;wreg free
 36157                           
 36158                           ;sw_timer.c: 128: oldVal++;
 36159  0071C8  0101               	movlb	1	; () banked
 36160  0071CA  4B6F               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 36161  0071CC  2B70               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 36162                           
 36163                           ; BSR set to: 1
 36164                           ;sw_timer.c: 130: retVal = oldVal;
 36165  0071CE  C16F  F16D         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 36166  0071D2  C170  F16E         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 36167                           
 36168                           ; BSR set to: 1
 36169                           ;sw_timer.c: 132: return retVal;
 36170  0071D6  C16D  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 36171  0071DA  C16E  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 36172  0071DE  0012               	return	
 36173  0071E0                     __end_of_TMR_SwapTimer:
 36174                           	opt stack 0
 36175                           tosu	equ	0xFFF
 36176                           tosh	equ	0xFFE
 36177                           tosl	equ	0xFFD
 36178                           pclath	equ	0xFFA
 36179                           tblptru	equ	0xFF8
 36180                           tblptrh	equ	0xFF7
 36181                           tblptrl	equ	0xFF6
 36182                           tablat	equ	0xFF5
 36183                           prodh	equ	0xFF4
 36184                           prodl	equ	0xFF3
 36185                           intcon	equ	0xFF2
 36186                           intcon2	equ	0xFF1
 36187                           intcon3	equ	0xFF0
 36188                           indf0	equ	0xFEF
 36189                           postinc0	equ	0xFEE
 36190                           plusw0	equ	0xFEB
 36191                           fsr0h	equ	0xFEA
 36192                           fsr0l	equ	0xFE9
 36193                           wreg	equ	0xFE8
 36194                           postinc1	equ	0xFE6
 36195                           postdec1	equ	0xFE5
 36196                           plusw1	equ	0xFE3
 36197                           fsr1h	equ	0xFE2
 36198                           fsr1l	equ	0xFE1
 36199                           indf2	equ	0xFDF
 36200                           postinc2	equ	0xFDE
 36201                           postdec2	equ	0xFDD
 36202                           plusw2	equ	0xFDB
 36203                           fsr2h	equ	0xFDA
 36204                           fsr2l	equ	0xFD9
 36205                           status	equ	0xFD8
 36206                           
 36207 ;; *************** function _TMR1_WriteTimer *****************
 36208 ;; Defined at:
 36209 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 36210 ;; Parameters:    Size  Location     Type
 36211 ;;  timerVal        2    0[BANK0 ] unsigned int 
 36212 ;; Auto vars:     Size  Location     Type
 36213 ;;		None
 36214 ;; Return value:  Size  Location     Type
 36215 ;;                  1    wreg      void 
 36216 ;; Registers used:
 36217 ;;		wreg, status,2
 36218 ;; Tracked objects:
 36219 ;;		On entry : 0/0
 36220 ;;		On exit  : 0/0
 36221 ;;		Unchanged: 0/0
 36222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36227 ;;Total ram usage:        2 bytes
 36228 ;; Hardware stack levels used:    1
 36229 ;; Hardware stack levels required when called:    7
 36230 ;; This function calls:
 36231 ;;		Nothing
 36232 ;; This function is called by:
 36233 ;;		_TMR_SwapTimer
 36234 ;;		_TMR1_Reload
 36235 ;; This function uses a non-reentrant model
 36236 ;;
 36237                           
 36238                           	psect	text181
 36239  007ADA                     __ptext181:
 36240                           	opt stack 0
 36241  007ADA                     _TMR1_WriteTimer:
 36242                           	opt stack 18
 36243                           
 36244                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 36245                           
 36246                           ; BSR set to: 1
 36247                           ;incstack = 0
 36248  007ADA  A4CD               	btfss	4045,2,c	;volatile
 36249  007ADC  D008               	goto	l2432
 36250                           
 36251                           ;tmr1.c: 124: {
 36252                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 36253  007ADE  90CD               	bcf	4045,0,c	;volatile
 36254                           
 36255                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 36256  007AE0  0100               	movlb	0	; () banked
 36257  007AE2  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 36258  007AE4  6ECF               	movwf	4047,c	;volatile
 36259                           
 36260                           ; BSR set to: 0
 36261                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 36262  007AE6  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 36263                           
 36264                           ; BSR set to: 0
 36265                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 36266  007AEA  80CD               	bsf	4045,0,c	;volatile
 36267                           
 36268                           ;tmr1.c: 134: }
 36269  007AEC  0012               	return	
 36270  007AEE                     l2432:
 36271                           
 36272                           ;tmr1.c: 135: else
 36273                           ;tmr1.c: 136: {
 36274                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 36275                           
 36276                           ; BSR set to: 0
 36277  007AEE  0100               	movlb	0	; () banked
 36278  007AF0  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 36279  007AF2  6ECF               	movwf	4047,c	;volatile
 36280                           
 36281                           ; BSR set to: 0
 36282                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 36283  007AF4  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 36284  007AF8  0012               	return	
 36285  007AFA                     __end_of_TMR1_WriteTimer:
 36286                           	opt stack 0
 36287                           tosu	equ	0xFFF
 36288                           tosh	equ	0xFFE
 36289                           tosl	equ	0xFFD
 36290                           pclath	equ	0xFFA
 36291                           tblptru	equ	0xFF8
 36292                           tblptrh	equ	0xFF7
 36293                           tblptrl	equ	0xFF6
 36294                           tablat	equ	0xFF5
 36295                           prodh	equ	0xFF4
 36296                           prodl	equ	0xFF3
 36297                           intcon	equ	0xFF2
 36298                           intcon2	equ	0xFF1
 36299                           intcon3	equ	0xFF0
 36300                           indf0	equ	0xFEF
 36301                           postinc0	equ	0xFEE
 36302                           plusw0	equ	0xFEB
 36303                           fsr0h	equ	0xFEA
 36304                           fsr0l	equ	0xFE9
 36305                           wreg	equ	0xFE8
 36306                           postinc1	equ	0xFE6
 36307                           postdec1	equ	0xFE5
 36308                           plusw1	equ	0xFE3
 36309                           fsr1h	equ	0xFE2
 36310                           fsr1l	equ	0xFE1
 36311                           indf2	equ	0xFDF
 36312                           postinc2	equ	0xFDE
 36313                           postdec2	equ	0xFDD
 36314                           plusw2	equ	0xFDB
 36315                           fsr2h	equ	0xFDA
 36316                           fsr2l	equ	0xFD9
 36317                           status	equ	0xFD8
 36318                           
 36319 ;; *************** function _SwTimersInterrupt *****************
 36320 ;; Defined at:
 36321 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36322 ;; Parameters:    Size  Location     Type
 36323 ;;		None
 36324 ;; Auto vars:     Size  Location     Type
 36325 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 36326 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 36327 ;;  i               1   48[BANK0 ] unsigned char 
 36328 ;; Return value:  Size  Location     Type
 36329 ;;                  4   32[BANK0 ] unsigned long 
 36330 ;; Registers used:
 36331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36332 ;; Tracked objects:
 36333 ;;		On entry : 0/0
 36334 ;;		On exit  : 0/0
 36335 ;;		Unchanged: 0/0
 36336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36338 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36340 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36341 ;;Total ram usage:       17 bytes
 36342 ;; Hardware stack levels used:    1
 36343 ;; Hardware stack levels required when called:    9
 36344 ;; This function calls:
 36345 ;;		_TMR_GetDeltaTime
 36346 ;; This function is called by:
 36347 ;;		_SwTimerReadValue
 36348 ;;		_SwTimerStart
 36349 ;;		_SwTimersCanSleep
 36350 ;; This function uses a non-reentrant model
 36351 ;;
 36352                           
 36353                           	psect	text182
 36354  004EBA                     __ptext182:
 36355                           	opt stack 0
 36356  004EBA                     _SwTimersInterrupt:
 36357                           	opt stack 18
 36358                           
 36359                           ;sw_timer.c: 289: uint8_t i;
 36360                           ;sw_timer.c: 290: uint32_t timeElapsed;
 36361                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 36362                           
 36363                           ; BSR set to: 0
 36364                           ;incstack = 0
 36365  004EBA  0100               	movlb	0	; () banked
 36366  004EBC  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 36367  004EBE  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 36368  004EC0  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 36369  004EC2  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 36370                           
 36371                           ; BSR set to: 0
 36372                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 36373  004EC4  ECF2  F01E         	call	_TMR_GetDeltaTime	;wreg free
 36374  004EC8  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 36375  004ECC  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 36376  004ED0  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 36377  004ED4  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 36378                           
 36379                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 36380  004ED8  0E00               	movlw	0
 36381  004EDA  0100               	movlb	0	; () banked
 36382  004EDC  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 36383  004EDE  D061               	goto	l295
 36384  004EE0                     
 36385                           ; BSR set to: 0
 36386                           ;sw_timer.c: 298: {
 36387                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 36388                           
 36389                           ; BSR set to: 0
 36390  004EE0  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36391  004EE2  0D08               	mullw	8
 36392  004EE4  0E04               	movlw	4
 36393  004EE6  26F3               	addwf	prodl,f,c
 36394  004EE8  0E00               	movlw	0
 36395  004EEA  22F4               	addwfc	prodh,f,c
 36396  004EEC  0E00               	movlw	low _swTimers
 36397  004EEE  24F3               	addwf	prodl,w,c
 36398  004EF0  6ED9               	movwf	fsr2l,c
 36399  004EF2  0E03               	movlw	high _swTimers
 36400  004EF4  20F4               	addwfc	prodh,w,c
 36401  004EF6  6EDA               	movwf	fsr2h,c
 36402  004EF8  04DE               	decf	postinc2,w,c
 36403  004EFA  A4D8               	btfss	status,2,c
 36404  004EFC  D051               	goto	l300
 36405                           
 36406                           ; BSR set to: 0
 36407                           ;sw_timer.c: 302: {
 36408                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 36409  004EFE  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36410  004F00  0D08               	mullw	8
 36411  004F02  0E00               	movlw	low _swTimers
 36412  004F04  24F3               	addwf	prodl,w,c
 36413  004F06  6ED9               	movwf	fsr2l,c
 36414  004F08  0E03               	movlw	high _swTimers
 36415  004F0A  20F4               	addwfc	prodh,w,c
 36416  004F0C  6EDA               	movwf	fsr2h,c
 36417  004F0E  50DE               	movf	postinc2,w,c
 36418  004F10  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 36419  004F12  50DE               	movf	postinc2,w,c
 36420  004F14  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 36421  004F16  50DE               	movf	postinc2,w,c
 36422  004F18  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 36423  004F1A  50DE               	movf	postinc2,w,c
 36424  004F1C  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 36425  004F1E  A0D8               	btfss	status,0,c
 36426  004F20  D00D               	goto	l298
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;sw_timer.c: 304: {
 36430                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 36431  004F22  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36432  004F24  0D08               	mullw	8
 36433  004F26  0E00               	movlw	low _swTimers
 36434  004F28  24F3               	addwf	prodl,w,c
 36435  004F2A  6ED9               	movwf	fsr2l,c
 36436  004F2C  0E03               	movlw	high _swTimers
 36437  004F2E  20F4               	addwfc	prodh,w,c
 36438  004F30  6EDA               	movwf	fsr2h,c
 36439  004F32  6ADE               	clrf	postinc2,c
 36440  004F34  6ADE               	clrf	postinc2,c
 36441  004F36  6ADE               	clrf	postinc2,c
 36442  004F38  6ADD               	clrf	postdec2,c
 36443                           
 36444                           ;sw_timer.c: 306: }
 36445  004F3A  D032               	goto	l300
 36446  004F3C                     l298:
 36447                           
 36448                           ; BSR set to: 0
 36449                           ;sw_timer.c: 307: else
 36450                           ;sw_timer.c: 308: {
 36451                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 36452                           
 36453                           ; BSR set to: 0
 36454  004F3C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36455  004F3E  0D08               	mullw	8
 36456  004F40  0E00               	movlw	low _swTimers
 36457  004F42  24F3               	addwf	prodl,w,c
 36458  004F44  6ED9               	movwf	fsr2l,c
 36459  004F46  0E03               	movlw	high _swTimers
 36460  004F48  20F4               	addwfc	prodh,w,c
 36461  004F4A  6EDA               	movwf	fsr2h,c
 36462  004F4C  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 36463  004F4E  5EDE               	subwf	postinc2,f,c
 36464  004F50  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 36465  004F52  5ADE               	subwfb	postinc2,f,c
 36466  004F54  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 36467  004F56  5ADE               	subwfb	postinc2,f,c
 36468  004F58  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 36469  004F5A  5ADE               	subwfb	postinc2,f,c
 36470                           
 36471                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 36472  004F5C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36473  004F5E  0D08               	mullw	8
 36474  004F60  0E00               	movlw	low _swTimers
 36475  004F62  24F3               	addwf	prodl,w,c
 36476  004F64  6ED9               	movwf	fsr2l,c
 36477  004F66  0E03               	movlw	high _swTimers
 36478  004F68  20F4               	addwfc	prodh,w,c
 36479  004F6A  6EDA               	movwf	fsr2h,c
 36480  004F6C  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 36481  004F6E  5CDE               	subwf	postinc2,w,c
 36482  004F70  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 36483  004F72  58DE               	subwfb	postinc2,w,c
 36484  004F74  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 36485  004F76  58DE               	subwfb	postinc2,w,c
 36486  004F78  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 36487  004F7A  58DE               	subwfb	postinc2,w,c
 36488  004F7C  B0D8               	btfsc	status,0,c
 36489  004F7E  D010               	goto	l300
 36490                           
 36491                           ; BSR set to: 0
 36492                           ;sw_timer.c: 313: {
 36493                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 36494  004F80  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 36495  004F82  0D08               	mullw	8
 36496  004F84  0E00               	movlw	low _swTimers
 36497  004F86  24F3               	addwf	prodl,w,c
 36498  004F88  6ED9               	movwf	fsr2l,c
 36499  004F8A  0E03               	movlw	high _swTimers
 36500  004F8C  20F4               	addwfc	prodh,w,c
 36501  004F8E  6EDA               	movwf	fsr2h,c
 36502  004F90  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 36503  004F94  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 36504  004F98  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 36505  004F9C  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 36506  004FA0                     l300:
 36507                           
 36508                           ; BSR set to: 0
 36509                           
 36510                           ; BSR set to: 0
 36511                           
 36512                           ; BSR set to: 0
 36513                           
 36514                           ; BSR set to: 0
 36515  004FA0  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 36516  004FA2                     l295:
 36517                           
 36518                           ; BSR set to: 0
 36519                           
 36520                           ; BSR set to: 0
 36521  004FA2  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 36522  004FA4  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 36523  004FA6  A0D8               	btfss	status,0,c
 36524  004FA8  D79B               	goto	l296
 36525                           
 36526                           ; BSR set to: 0
 36527                           ;sw_timer.c: 315: }
 36528                           ;sw_timer.c: 316: }
 36529                           ;sw_timer.c: 317: }
 36530                           ;sw_timer.c: 318: }
 36531                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 36532  004FAA  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 36533  004FAE  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 36534  004FB2  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 36535  004FB6  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 36536                           
 36537                           ; BSR set to: 0
 36538  004FBA  0012               	return		;funcret
 36539  004FBC                     __end_of_SwTimersInterrupt:
 36540                           	opt stack 0
 36541                           tosu	equ	0xFFF
 36542                           tosh	equ	0xFFE
 36543                           tosl	equ	0xFFD
 36544                           pclath	equ	0xFFA
 36545                           tblptru	equ	0xFF8
 36546                           tblptrh	equ	0xFF7
 36547                           tblptrl	equ	0xFF6
 36548                           tablat	equ	0xFF5
 36549                           prodh	equ	0xFF4
 36550                           prodl	equ	0xFF3
 36551                           intcon	equ	0xFF2
 36552                           intcon2	equ	0xFF1
 36553                           intcon3	equ	0xFF0
 36554                           indf0	equ	0xFEF
 36555                           postinc0	equ	0xFEE
 36556                           plusw0	equ	0xFEB
 36557                           fsr0h	equ	0xFEA
 36558                           fsr0l	equ	0xFE9
 36559                           wreg	equ	0xFE8
 36560                           postinc1	equ	0xFE6
 36561                           postdec1	equ	0xFE5
 36562                           plusw1	equ	0xFE3
 36563                           fsr1h	equ	0xFE2
 36564                           fsr1l	equ	0xFE1
 36565                           indf2	equ	0xFDF
 36566                           postinc2	equ	0xFDE
 36567                           postdec2	equ	0xFDD
 36568                           plusw2	equ	0xFDB
 36569                           fsr2h	equ	0xFDA
 36570                           fsr2l	equ	0xFD9
 36571                           status	equ	0xFD8
 36572                           
 36573 ;; *************** function _TMR_GetDeltaTime *****************
 36574 ;; Defined at:
 36575 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36576 ;; Parameters:    Size  Location     Type
 36577 ;;		None
 36578 ;; Auto vars:     Size  Location     Type
 36579 ;;		None
 36580 ;; Return value:  Size  Location     Type
 36581 ;;                  4    8[BANK0 ] unsigned long 
 36582 ;; Registers used:
 36583 ;;		wreg, status,2, status,0, cstack
 36584 ;; Tracked objects:
 36585 ;;		On entry : 0/0
 36586 ;;		On exit  : 0/0
 36587 ;;		Unchanged: 0/0
 36588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36591 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36592 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36593 ;;Total ram usage:       24 bytes
 36594 ;; Hardware stack levels used:    1
 36595 ;; Hardware stack levels required when called:    8
 36596 ;; This function calls:
 36597 ;;		_TMR1_ReadTimer
 36598 ;; This function is called by:
 36599 ;;		_SwTimersInterrupt
 36600 ;; This function uses a non-reentrant model
 36601 ;;
 36602                           
 36603                           	psect	text183
 36604  003DE4                     __ptext183:
 36605                           	opt stack 0
 36606  003DE4                     _TMR_GetDeltaTime:
 36607                           	opt stack 18
 36608                           
 36609                           ;sw_timer.c: 90: static uint32_t retVal;
 36610                           ;sw_timer.c: 91: static uint16_t tmrVal;
 36611                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 36612                           
 36613                           ; BSR set to: 0
 36614                           ;incstack = 0
 36615  003DE4  EC3C  F03D         	call	_TMR1_ReadTimer	;wreg free
 36616  003DE8  C060  F044         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 36617  003DEC  C061  F045         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 36618                           
 36619                           ;sw_timer.c: 95: if (timerOverflow == 1)
 36620  003DF0  0447               	decf	_timerOverflow,w,c	;volatile
 36621  003DF2  A4D8               	btfss	status,2,c
 36622  003DF4  D06E               	goto	l228
 36623                           
 36624                           ;sw_timer.c: 96: {
 36625                           ;sw_timer.c: 97: timerOverflow = 0;
 36626  003DF6  0E00               	movlw	0
 36627  003DF8  6E47               	movwf	_timerOverflow,c	;volatile
 36628                           
 36629                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 36630  003DFA  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 36631  003DFE  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 36632  003E02  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 36633  003E06  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 36634  003E0A  0100               	movlb	0	; () banked
 36635  003E0C  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 36636  003E0E  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 36637  003E10  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36638  003E12  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 36639  003E14  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 36640  003E16  0E00               	movlw	0
 36641  003E18  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 36642  003E1A  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36643  003E1C  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 36644  003E1E  51FD               	movf	_reloadVal& (0+255),w,b	;volatile
 36645  003E20  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36646  003E22  51FE               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36647  003E24  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36648  003E26  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36649  003E28  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36650  003E2A  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 36651  003E2C  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 36652  003E2E  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 36653  003E30  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 36654  003E32  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 36655  003E34  0E00               	movlw	0
 36656  003E36  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 36657  003E38  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 36658  003E3A  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 36659  003E3C  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 36660  003E3E  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36661  003E40  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36662  003E42  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 36663  003E44  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36664  003E46  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36665  003E48  0E00               	movlw	0
 36666  003E4A  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36667  003E4C  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 36668  003E4E  0E00               	movlw	0
 36669  003E50  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36670  003E52  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 36671  003E54  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 36672  003E56  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36673  003E58  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 36674  003E5A  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36675  003E5C  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36676  003E5E  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 36677  003E60  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36678  003E62  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 36679  003E64  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 36680  003E66  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36681  003E68  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 36682  003E6A  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 36683  003E6C  5040               	movf	_ticksAdded,w,c	;volatile
 36684  003E6E  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 36685  003E70  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 36686  003E72  5041               	movf	_ticksAdded+1,w,c	;volatile
 36687  003E74  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 36688  003E76  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 36689  003E78  5042               	movf	_ticksAdded+2,w,c	;volatile
 36690  003E7A  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 36691  003E7C  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 36692  003E7E  5043               	movf	_ticksAdded+3,w,c	;volatile
 36693  003E80  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 36694  003E82  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 36695  003E84  0E00               	movlw	0
 36696  003E86  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 36697  003E88  0101               	movlb	1	; () banked
 36698  003E8A  6F69               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 36699  003E8C  0E00               	movlw	0
 36700  003E8E  0100               	movlb	0	; () banked
 36701  003E90  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 36702  003E92  0101               	movlb	1	; () banked
 36703  003E94  6F6A               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 36704  003E96  0E01               	movlw	1
 36705  003E98  0100               	movlb	0	; () banked
 36706  003E9A  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 36707  003E9C  0101               	movlb	1	; () banked
 36708  003E9E  6F6B               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 36709  003EA0  0E00               	movlw	0
 36710  003EA2  0100               	movlb	0	; () banked
 36711  003EA4  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 36712  003EA6  0101               	movlb	1	; () banked
 36713  003EA8  6F6C               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 36714                           
 36715                           ; BSR set to: 1
 36716                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 36717  003EAA  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 36718  003EAE  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 36719  003EB2  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 36720  003EB4  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 36721                           
 36722                           ; BSR set to: 1
 36723                           ;sw_timer.c: 100: ticksAdded = 0;
 36724  003EB6  0E00               	movlw	0
 36725  003EB8  6E40               	movwf	_ticksAdded,c	;volatile
 36726  003EBA  0E00               	movlw	0
 36727  003EBC  6E41               	movwf	_ticksAdded+1,c	;volatile
 36728  003EBE  0E00               	movlw	0
 36729  003EC0  6E42               	movwf	_ticksAdded+2,c	;volatile
 36730  003EC2  0E00               	movlw	0
 36731  003EC4  6E43               	movwf	_ticksAdded+3,c	;volatile
 36732                           
 36733                           ; BSR set to: 1
 36734                           ;sw_timer.c: 101: reloadVal = 0;
 36735  003EC6  0E00               	movlw	0
 36736  003EC8  0100               	movlb	0	; () banked
 36737  003ECA  6FFE               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 36738  003ECC  0E00               	movlw	0
 36739  003ECE  6FFD               	movwf	_reloadVal& (0+255),b	;volatile
 36740                           
 36741                           ;sw_timer.c: 102: }
 36742  003ED0  D045               	goto	l229
 36743  003ED2                     l228:
 36744                           
 36745                           ;sw_timer.c: 103: else
 36746                           ;sw_timer.c: 104: {
 36747                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36748                           
 36749                           ; BSR set to: 0
 36750  003ED2  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 36751  003ED6  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 36752  003EDA  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 36753  003EDE  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 36754  003EE2  0100               	movlb	0	; () banked
 36755  003EE4  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 36756  003EE6  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 36757  003EE8  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36758  003EEA  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 36759  003EEC  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 36760  003EEE  0E00               	movlw	0
 36761  003EF0  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 36762  003EF2  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36763  003EF4  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 36764  003EF6  C0FD  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 36765  003EFA  C0FE  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 36766  003EFE  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 36767  003F00  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 36768  003F02  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 36769  003F04  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 36770  003F06  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 36771  003F08  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 36772  003F0A  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 36773  003F0C  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 36774  003F0E  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36775  003F10  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 36776  003F12  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36777  003F14  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36778  003F16  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36779  003F18  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36780  003F1A  0E00               	movlw	0
 36781  003F1C  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36782  003F1E  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36783  003F20  0E00               	movlw	0
 36784  003F22  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36785  003F24  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36786  003F26  5040               	movf	_ticksAdded,w,c	;volatile
 36787  003F28  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36788  003F2A  0101               	movlb	1	; () banked
 36789  003F2C  6F69               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 36790  003F2E  5041               	movf	_ticksAdded+1,w,c	;volatile
 36791  003F30  0100               	movlb	0	; () banked
 36792  003F32  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36793  003F34  0101               	movlb	1	; () banked
 36794  003F36  6F6A               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 36795  003F38  5042               	movf	_ticksAdded+2,w,c	;volatile
 36796  003F3A  0100               	movlb	0	; () banked
 36797  003F3C  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36798  003F3E  0101               	movlb	1	; () banked
 36799  003F40  6F6B               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 36800  003F42  5043               	movf	_ticksAdded+3,w,c	;volatile
 36801  003F44  0100               	movlb	0	; () banked
 36802  003F46  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36803  003F48  0101               	movlb	1	; () banked
 36804  003F4A  6F6C               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 36805                           
 36806                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36807  003F4C  5169               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 36808  003F4E  263C               	addwf	_ticksAccounted,f,c	;volatile
 36809  003F50  516A               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 36810  003F52  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 36811  003F54  516B               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 36812  003F56  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 36813  003F58  516C               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 36814  003F5A  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 36815  003F5C                     l229:
 36816                           
 36817                           ;sw_timer.c: 107: }
 36818                           ;sw_timer.c: 109: return retVal;
 36819                           
 36820                           ; BSR set to: 1
 36821  003F5C  C169  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36822  003F60  C16A  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36823  003F64  C16B  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36824  003F68  C16C  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36825  003F6C  0012               	return	
 36826  003F6E                     __end_of_TMR_GetDeltaTime:
 36827                           	opt stack 0
 36828                           tosu	equ	0xFFF
 36829                           tosh	equ	0xFFE
 36830                           tosl	equ	0xFFD
 36831                           pclath	equ	0xFFA
 36832                           tblptru	equ	0xFF8
 36833                           tblptrh	equ	0xFF7
 36834                           tblptrl	equ	0xFF6
 36835                           tablat	equ	0xFF5
 36836                           prodh	equ	0xFF4
 36837                           prodl	equ	0xFF3
 36838                           intcon	equ	0xFF2
 36839                           intcon2	equ	0xFF1
 36840                           intcon3	equ	0xFF0
 36841                           indf0	equ	0xFEF
 36842                           postinc0	equ	0xFEE
 36843                           plusw0	equ	0xFEB
 36844                           fsr0h	equ	0xFEA
 36845                           fsr0l	equ	0xFE9
 36846                           wreg	equ	0xFE8
 36847                           postinc1	equ	0xFE6
 36848                           postdec1	equ	0xFE5
 36849                           plusw1	equ	0xFE3
 36850                           fsr1h	equ	0xFE2
 36851                           fsr1l	equ	0xFE1
 36852                           indf2	equ	0xFDF
 36853                           postinc2	equ	0xFDE
 36854                           postdec2	equ	0xFDD
 36855                           plusw2	equ	0xFDB
 36856                           fsr2h	equ	0xFDA
 36857                           fsr2l	equ	0xFD9
 36858                           status	equ	0xFD8
 36859                           
 36860 ;; *************** function _TMR1_ReadTimer *****************
 36861 ;; Defined at:
 36862 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 36863 ;; Parameters:    Size  Location     Type
 36864 ;;		None
 36865 ;; Auto vars:     Size  Location     Type
 36866 ;;  readVal         2    4[BANK0 ] unsigned int 
 36867 ;;  readValLow      1    7[BANK0 ] unsigned char 
 36868 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 36869 ;; Return value:  Size  Location     Type
 36870 ;;                  2    0[BANK0 ] unsigned int 
 36871 ;; Registers used:
 36872 ;;		wreg, status,2
 36873 ;; Tracked objects:
 36874 ;;		On entry : 0/0
 36875 ;;		On exit  : 0/0
 36876 ;;		Unchanged: 0/0
 36877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36882 ;;Total ram usage:        8 bytes
 36883 ;; Hardware stack levels used:    1
 36884 ;; Hardware stack levels required when called:    7
 36885 ;; This function calls:
 36886 ;;		Nothing
 36887 ;; This function is called by:
 36888 ;;		_TMR_GetDeltaTime
 36889 ;;		_TMR_SwapTimer
 36890 ;; This function uses a non-reentrant model
 36891 ;;
 36892                           
 36893                           	psect	text184
 36894  007A78                     __ptext184:
 36895                           	opt stack 0
 36896  007A78                     _TMR1_ReadTimer:
 36897                           	opt stack 18
 36898                           
 36899                           ;tmr1.c: 107: uint16_t readVal;
 36900                           ;tmr1.c: 108: uint8_t readValHigh;
 36901                           ;tmr1.c: 109: uint8_t readValLow;
 36902                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 36903                           
 36904                           ;incstack = 0
 36905  007A78  82CD               	bsf	4045,1,c	;volatile
 36906                           
 36907                           ;tmr1.c: 113: readValLow = TMR1L;
 36908  007A7A  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36909                           
 36910                           ;tmr1.c: 114: readValHigh = TMR1H;
 36911  007A7E  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36912                           
 36913                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36914  007A82  0100               	movlb	0	; () banked
 36915  007A84  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36916  007A86  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 36917  007A88  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36918  007A8A  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36919  007A8C  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36920                           
 36921                           ; BSR set to: 0
 36922                           ;tmr1.c: 118: return readVal;
 36923  007A90  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36924  007A94  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36925  007A98  0012               	return	
 36926  007A9A                     __end_of_TMR1_ReadTimer:
 36927                           	opt stack 0
 36928                           tosu	equ	0xFFF
 36929                           tosh	equ	0xFFE
 36930                           tosl	equ	0xFFD
 36931                           pclath	equ	0xFFA
 36932                           tblptru	equ	0xFF8
 36933                           tblptrh	equ	0xFF7
 36934                           tblptrl	equ	0xFF6
 36935                           tablat	equ	0xFF5
 36936                           prodh	equ	0xFF4
 36937                           prodl	equ	0xFF3
 36938                           intcon	equ	0xFF2
 36939                           intcon2	equ	0xFF1
 36940                           intcon3	equ	0xFF0
 36941                           indf0	equ	0xFEF
 36942                           postinc0	equ	0xFEE
 36943                           plusw0	equ	0xFEB
 36944                           fsr0h	equ	0xFEA
 36945                           fsr0l	equ	0xFE9
 36946                           wreg	equ	0xFE8
 36947                           postinc1	equ	0xFE6
 36948                           postdec1	equ	0xFE5
 36949                           plusw1	equ	0xFE3
 36950                           fsr1h	equ	0xFE2
 36951                           fsr1l	equ	0xFE1
 36952                           indf2	equ	0xFDF
 36953                           postinc2	equ	0xFDE
 36954                           postdec2	equ	0xFDD
 36955                           plusw2	equ	0xFDB
 36956                           fsr2h	equ	0xFDA
 36957                           fsr2l	equ	0xFD9
 36958                           status	equ	0xFD8
 36959                           
 36960 ;; *************** function _SwTimerSetTimeout *****************
 36961 ;; Defined at:
 36962 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36963 ;; Parameters:    Size  Location     Type
 36964 ;;  timerId         1    wreg     unsigned char 
 36965 ;;  timeout         4   13[BANK0 ] unsigned long 
 36966 ;; Auto vars:     Size  Location     Type
 36967 ;;  timerId         1   21[BANK0 ] unsigned char 
 36968 ;; Return value:  Size  Location     Type
 36969 ;;                  1    wreg      void 
 36970 ;; Registers used:
 36971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36972 ;; Tracked objects:
 36973 ;;		On entry : 0/0
 36974 ;;		On exit  : 0/0
 36975 ;;		Unchanged: 0/0
 36976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36981 ;;Total ram usage:        9 bytes
 36982 ;; Hardware stack levels used:    1
 36983 ;; Hardware stack levels required when called:    7
 36984 ;; This function calls:
 36985 ;;		Nothing
 36986 ;; This function is called by:
 36987 ;;		_RADIO_Transmit
 36988 ;;		_RADIO_ReceiveStart
 36989 ;;		_LORAWAN_TxDone
 36990 ;;		_Retransmissions
 36991 ;;		_TransmissionErrorCallback
 36992 ;;		_LORAWAN_Join
 36993 ;;		_LORAWAN_LinkCheckConfigure
 36994 ;;		_LORAWAN_LinkCheckCallback
 36995 ;;		_UpdateRetransmissionAckTimeoutState
 36996 ;;		_UpdateJoinSuccessState
 36997 ;; This function uses a non-reentrant model
 36998 ;;
 36999                           
 37000                           	psect	text185
 37001  00733A                     __ptext185:
 37002                           	opt stack 0
 37003  00733A                     _SwTimerSetTimeout:
 37004                           	opt stack 21
 37005                           
 37006                           ; BSR set to: 0
 37007                           ;incstack = 0
 37008                           ;SwTimerSetTimeout@timerId stored from wreg
 37009  00733A  0100               	movlb	0	; () banked
 37010  00733C  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 37011                           
 37012                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 37013  00733E  9EF2               	bcf	intcon,7,c	;volatile
 37014                           
 37015                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 37016  007340  0EE0               	movlw	224
 37017  007342  0100               	movlb	0	; () banked
 37018  007344  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 37019  007346  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 37020  007348  0EFF               	movlw	255
 37021  00734A  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 37022  00734C  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 37023  00734E  0EFF               	movlw	255
 37024  007350  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 37025  007352  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 37026  007354  0EFF               	movlw	255
 37027  007356  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 37028  007358  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 37029  00735A  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 37030  00735C  0D08               	mullw	8
 37031  00735E  0E00               	movlw	low _swTimers
 37032  007360  24F3               	addwf	prodl,w,c
 37033  007362  6ED9               	movwf	fsr2l,c
 37034  007364  0E03               	movlw	high _swTimers
 37035  007366  20F4               	addwfc	prodh,w,c
 37036  007368  6EDA               	movwf	fsr2h,c
 37037  00736A  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 37038  00736E  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 37039  007372  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 37040  007376  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 37041                           
 37042                           ; BSR set to: 0
 37043                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 37044  00737A  8EF2               	bsf	intcon,7,c	;volatile
 37045                           
 37046                           ; BSR set to: 0
 37047  00737C  0012               	return		;funcret
 37048  00737E                     __end_of_SwTimerSetTimeout:
 37049                           	opt stack 0
 37050                           tosu	equ	0xFFF
 37051                           tosh	equ	0xFFE
 37052                           tosl	equ	0xFFD
 37053                           pclath	equ	0xFFA
 37054                           tblptru	equ	0xFF8
 37055                           tblptrh	equ	0xFF7
 37056                           tblptrl	equ	0xFF6
 37057                           tablat	equ	0xFF5
 37058                           prodh	equ	0xFF4
 37059                           prodl	equ	0xFF3
 37060                           intcon	equ	0xFF2
 37061                           intcon2	equ	0xFF1
 37062                           intcon3	equ	0xFF0
 37063                           indf0	equ	0xFEF
 37064                           postinc0	equ	0xFEE
 37065                           plusw0	equ	0xFEB
 37066                           fsr0h	equ	0xFEA
 37067                           fsr0l	equ	0xFE9
 37068                           wreg	equ	0xFE8
 37069                           postinc1	equ	0xFE6
 37070                           postdec1	equ	0xFE5
 37071                           plusw1	equ	0xFE3
 37072                           fsr1h	equ	0xFE2
 37073                           fsr1l	equ	0xFE1
 37074                           indf2	equ	0xFDF
 37075                           postinc2	equ	0xFDE
 37076                           postdec2	equ	0xFDD
 37077                           plusw2	equ	0xFDB
 37078                           fsr2h	equ	0xFDA
 37079                           fsr2l	equ	0xFD9
 37080                           status	equ	0xFD8
 37081                           
 37082 ;; *************** function _InitDefault915Channels *****************
 37083 ;; Defined at:
 37084 ;;		line 831 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 37085 ;; Parameters:    Size  Location     Type
 37086 ;;		None
 37087 ;; Auto vars:     Size  Location     Type
 37088 ;;		None
 37089 ;; Return value:  Size  Location     Type
 37090 ;;                  1    wreg      void 
 37091 ;; Registers used:
 37092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37093 ;; Tracked objects:
 37094 ;;		On entry : 0/0
 37095 ;;		On exit  : 0/0
 37096 ;;		Unchanged: 0/0
 37097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37102 ;;Total ram usage:        0 bytes
 37103 ;; Hardware stack levels used:    1
 37104 ;; Hardware stack levels required when called:    8
 37105 ;; This function calls:
 37106 ;;		_memcpy
 37107 ;;		_memset
 37108 ;; This function is called by:
 37109 ;;		_LORAWAN_Reset
 37110 ;; This function uses a non-reentrant model
 37111 ;;
 37112                           
 37113                           	psect	text186
 37114  00737E                     __ptext186:
 37115                           	opt stack 0
 37116  00737E                     _InitDefault915Channels:
 37117                           	opt stack 20
 37118                           
 37119                           ;lorawan_na.c: 833: memset (Channels, 0, sizeof(Channels) );
 37120                           
 37121                           ; BSR set to: 0
 37122                           ;incstack = 0
 37123  00737E  0E00               	movlw	low _Channels
 37124  007380  0100               	movlb	0	; () banked
 37125  007382  6F60               	movwf	memset@p1& (0+255),b
 37126  007384  0E04               	movlw	high _Channels
 37127  007386  6F61               	movwf	(memset@p1+1)& (0+255),b
 37128  007388  0E00               	movlw	0
 37129  00738A  6F63               	movwf	(memset@c+1)& (0+255),b
 37130  00738C  0E00               	movlw	0
 37131  00738E  6F62               	movwf	memset@c& (0+255),b
 37132  007390  0E00               	movlw	0
 37133  007392  6F65               	movwf	(memset@n+1)& (0+255),b
 37134  007394  0E90               	movlw	144
 37135  007396  6F64               	movwf	memset@n& (0+255),b
 37136  007398  EC9D  F03B         	call	_memset	;wreg free
 37137                           
 37138                           ;lorawan_na.c: 834: memcpy (Channels, DefaultChannels915, sizeof(DefaultChannels915) );
 37139  00739C  0E00               	movlw	low _Channels
 37140  00739E  0100               	movlb	0	; () banked
 37141  0073A0  6F60               	movwf	memcpy@d1& (0+255),b
 37142  0073A2  0E04               	movlw	high _Channels
 37143  0073A4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37144  0073A6  0E69               	movlw	low _DefaultChannels915
 37145  0073A8  6F62               	movwf	memcpy@s1& (0+255),b
 37146  0073AA  0EFF               	movlw	high _DefaultChannels915
 37147  0073AC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37148  0073AE  0E00               	movlw	0
 37149  0073B0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37150  0073B2  0E90               	movlw	144
 37151  0073B4  6F64               	movwf	memcpy@n& (0+255),b
 37152  0073B6  EC3E  F036         	call	_memcpy	;wreg free
 37153                           
 37154                           ;lorawan_na.c: 835: loRa.maxChannels = 72;
 37155  0073BA  0E48               	movlw	72
 37156  0073BC  0102               	movlb	2	; () banked
 37157  0073BE  6FDE               	movwf	(_loRa+222)& (0+255),b
 37158                           
 37159                           ; BSR set to: 2
 37160  0073C0  0012               	return		;funcret
 37161  0073C2                     __end_of_InitDefault915Channels:
 37162                           	opt stack 0
 37163                           tosu	equ	0xFFF
 37164                           tosh	equ	0xFFE
 37165                           tosl	equ	0xFFD
 37166                           pclath	equ	0xFFA
 37167                           tblptru	equ	0xFF8
 37168                           tblptrh	equ	0xFF7
 37169                           tblptrl	equ	0xFF6
 37170                           tablat	equ	0xFF5
 37171                           prodh	equ	0xFF4
 37172                           prodl	equ	0xFF3
 37173                           intcon	equ	0xFF2
 37174                           intcon2	equ	0xFF1
 37175                           intcon3	equ	0xFF0
 37176                           indf0	equ	0xFEF
 37177                           postinc0	equ	0xFEE
 37178                           plusw0	equ	0xFEB
 37179                           fsr0h	equ	0xFEA
 37180                           fsr0l	equ	0xFE9
 37181                           wreg	equ	0xFE8
 37182                           postinc1	equ	0xFE6
 37183                           postdec1	equ	0xFE5
 37184                           plusw1	equ	0xFE3
 37185                           fsr1h	equ	0xFE2
 37186                           fsr1l	equ	0xFE1
 37187                           indf2	equ	0xFDF
 37188                           postinc2	equ	0xFDE
 37189                           postdec2	equ	0xFDD
 37190                           plusw2	equ	0xFDB
 37191                           fsr2h	equ	0xFDA
 37192                           fsr2l	equ	0xFD9
 37193                           status	equ	0xFD8
 37194                           
 37195 ;; *************** function _memset *****************
 37196 ;; Defined at:
 37197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 37198 ;; Parameters:    Size  Location     Type
 37199 ;;  p1              2    0[BANK0 ] PTR void 
 37200 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(144), 
 37201 ;;		 -> loRa.activationParameters(105), loRa(231), GenerateSubkey@l(16), AESCmac@x(16), 
 37202 ;;  c               2    2[BANK0 ] int 
 37203 ;;  n               2    4[BANK0 ] unsigned int 
 37204 ;; Auto vars:     Size  Location     Type
 37205 ;;  p               2    6[BANK0 ] PTR unsigned char 
 37206 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(144), 
 37207 ;;		 -> loRa.activationParameters(105), loRa(231), GenerateSubkey@l(16), AESCmac@x(16), 
 37208 ;; Return value:  Size  Location     Type
 37209 ;;                  2    0[BANK0 ] PTR void 
 37210 ;; Registers used:
 37211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37212 ;; Tracked objects:
 37213 ;;		On entry : 0/0
 37214 ;;		On exit  : 0/0
 37215 ;;		Unchanged: 0/0
 37216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37220 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37221 ;;Total ram usage:        8 bytes
 37222 ;; Hardware stack levels used:    1
 37223 ;; Hardware stack levels required when called:    7
 37224 ;; This function calls:
 37225 ;;		Nothing
 37226 ;; This function is called by:
 37227 ;;		_AESCmac
 37228 ;;		_GenerateSubkey
 37229 ;;		_LORAWAN_Reset
 37230 ;;		_InitDefault915Channels
 37231 ;;		_AssemblePacket
 37232 ;;		_PrepareJoinRequestFrame
 37233 ;;		_PrepareSessionKeys
 37234 ;;		_AssembleEncryptionBlock
 37235 ;; This function uses a non-reentrant model
 37236 ;;
 37237                           
 37238                           	psect	text187
 37239  00773A                     __ptext187:
 37240                           	opt stack 0
 37241  00773A                     _memset:
 37242                           	opt stack 21
 37243                           
 37244                           ; BSR set to: 2
 37245                           ;incstack = 0
 37246  00773A  C060  F066         	movff	memset@p1,memset@p
 37247  00773E  C061  F067         	movff	memset@p1+1,memset@p+1
 37248  007742  D009               	goto	l2930
 37249  007744                     l8038:
 37250  007744  C066  FFD9         	movff	memset@p,fsr2l
 37251  007748  C067  FFDA         	movff	memset@p+1,fsr2h
 37252  00774C  C062  FFDF         	movff	memset@c,indf2
 37253  007750  0100               	movlb	0	; () banked
 37254  007752  4B66               	infsnz	memset@p& (0+255),f,b
 37255  007754  2B67               	incf	(memset@p+1)& (0+255),f,b
 37256  007756                     l2930:
 37257                           
 37258                           ; BSR set to: 0
 37259  007756  0100               	movlb	0	; () banked
 37260  007758  0764               	decf	memset@n& (0+255),f,b
 37261  00775A  A0D8               	btfss	status,0,c
 37262  00775C  0765               	decf	(memset@n+1)& (0+255),f,b
 37263  00775E  2964               	incf	memset@n& (0+255),w,b
 37264  007760  E1F1               	bnz	l8038
 37265  007762  2965               	incf	(memset@n+1)& (0+255),w,b
 37266  007764  B4D8               	btfsc	status,2,c
 37267  007766  0012               	return	
 37268  007768  D7ED               	goto	l2931
 37269  00776A                     __end_of_memset:
 37270                           	opt stack 0
 37271                           tosu	equ	0xFFF
 37272                           tosh	equ	0xFFE
 37273                           tosl	equ	0xFFD
 37274                           pclath	equ	0xFFA
 37275                           tblptru	equ	0xFF8
 37276                           tblptrh	equ	0xFF7
 37277                           tblptrl	equ	0xFF6
 37278                           tablat	equ	0xFF5
 37279                           prodh	equ	0xFF4
 37280                           prodl	equ	0xFF3
 37281                           intcon	equ	0xFF2
 37282                           intcon2	equ	0xFF1
 37283                           intcon3	equ	0xFF0
 37284                           indf0	equ	0xFEF
 37285                           postinc0	equ	0xFEE
 37286                           plusw0	equ	0xFEB
 37287                           fsr0h	equ	0xFEA
 37288                           fsr0l	equ	0xFE9
 37289                           wreg	equ	0xFE8
 37290                           postinc1	equ	0xFE6
 37291                           postdec1	equ	0xFE5
 37292                           plusw1	equ	0xFE3
 37293                           fsr1h	equ	0xFE2
 37294                           fsr1l	equ	0xFE1
 37295                           indf2	equ	0xFDF
 37296                           postinc2	equ	0xFDE
 37297                           postdec2	equ	0xFDD
 37298                           plusw2	equ	0xFDB
 37299                           fsr2h	equ	0xFDA
 37300                           fsr2l	equ	0xFD9
 37301                           status	equ	0xFD8
 37302                           
 37303 ;; *************** function _memcpy *****************
 37304 ;; Defined at:
 37305 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 37306 ;; Parameters:    Size  Location     Type
 37307 ;;  d1              2    0[BANK0 ] PTR void 
 37308 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 37309 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), m
      +acBuffer(271), 
 37310 ;;		 -> Channels(144), loRa.activationParameters(105), radioBuffer(271), loRa(231), 
 37311 ;;		 -> RadioConfiguration(54), AESCmac@x(16), 
 37312 ;;  s1              2    2[BANK0 ] PTR const void 
 37313 ;;		 -> STR_1(5), appSKey(16), nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), 
 37314 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 37315 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 37316 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 37317 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), loRa.acti
      +vationParameters(105), loRa.devNonce(2), 
 37318 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(231), DefaultChannels915(144), 
 37319 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 37320 ;;  n               2    4[BANK0 ] unsigned int 
 37321 ;; Auto vars:     Size  Location     Type
 37322 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 37323 ;;		 -> STR_1(5), appSKey(16), nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), 
 37324 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 37325 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 37326 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 37327 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), loRa.acti
      +vationParameters(105), loRa.devNonce(2), 
 37328 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(231), DefaultChannels915(144), 
 37329 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 37330 ;;  d               2    6[BANK0 ] PTR unsigned char 
 37331 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 37332 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), m
      +acBuffer(271), 
 37333 ;;		 -> Channels(144), loRa.activationParameters(105), radioBuffer(271), loRa(231), 
 37334 ;;		 -> RadioConfiguration(54), AESCmac@x(16), 
 37335 ;;  tmp             1   10[BANK0 ] unsigned char 
 37336 ;; Return value:  Size  Location     Type
 37337 ;;                  2    0[BANK0 ] PTR void 
 37338 ;; Registers used:
 37339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37340 ;; Tracked objects:
 37341 ;;		On entry : 0/0
 37342 ;;		On exit  : 0/0
 37343 ;;		Unchanged: 0/0
 37344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37345 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37346 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37348 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37349 ;;Total ram usage:       11 bytes
 37350 ;; Hardware stack levels used:    1
 37351 ;; Hardware stack levels required when called:    7
 37352 ;; This function calls:
 37353 ;;		Nothing
 37354 ;; This function is called by:
 37355 ;;		_AESCmac
 37356 ;;		_InitDefault915Channels
 37357 ;;		_AESEncodeLoRa
 37358 ;;		_LORAWAN_SetNetworkSessionKey
 37359 ;;		_LORAWAN_SetApplicationSessionKey
 37360 ;;		_LORAWAN_RxDone
 37361 ;;		_AssemblePacket
 37362 ;;		_PrepareJoinRequestFrame
 37363 ;;		_PrepareSessionKeys
 37364 ;;		_AssembleEncryptionBlock
 37365 ;;		_ExtractMic
 37366 ;;		_ComputeMic
 37367 ;;		_RADIO_GetData
 37368 ;;		_RADIO_SetFSKSyncWord
 37369 ;;		_RADIO_GetFSKSyncWord
 37370 ;;		_LORAWAN_SetMcastNetworkSessionKey
 37371 ;;		_LORAWAN_SetMcastApplicationSessionKey
 37372 ;;		_LORAWAN_GetMcastApplicationSessionKey
 37373 ;;		_LORAWAN_GetMcastNetworkSessionKey
 37374 ;;		_LORAWAN_SetDeviceEui
 37375 ;;		_LORAWAN_GetDeviceEui
 37376 ;;		_LORAWAN_SetApplicationEui
 37377 ;;		_LORAWAN_GetApplicationEui
 37378 ;;		_LORAWAN_GetNetworkSessionKey
 37379 ;;		_LORAWAN_GetApplicationSessionKey
 37380 ;;		_LORAWAN_SetApplicationKey
 37381 ;;		_LORAWAN_GetApplicationKey
 37382 ;; This function uses a non-reentrant model
 37383 ;;
 37384                           
 37385                           	psect	text188
 37386  006C7C                     __ptext188:
 37387                           	opt stack 0
 37388  006C7C                     _memcpy:
 37389                           	opt stack 22
 37390                           
 37391                           ; BSR set to: 0
 37392                           ;incstack = 0
 37393  006C7C  C062  F068         	movff	memcpy@s1,memcpy@s
 37394  006C80  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 37395  006C84  C060  F066         	movff	memcpy@d1,memcpy@d
 37396  006C88  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 37397  006C8C  D01D               	goto	l2924
 37398  006C8E                     l7802:
 37399  006C8E  C068  FFF6         	movff	memcpy@s,tblptrl
 37400  006C92  C069  FFF7         	movff	memcpy@s+1,tblptrh
 37401  006C96  0E00               	movlw	low (__mediumconst shr (0+16))
 37402  006C98  6EF8               	movwf	tblptru,c
 37403  006C9A  0E0F               	movlw	(high __ramtop+-1)
 37404  006C9C  64F7               	cpfsgt	tblptrh,c
 37405  006C9E  D003               	bra	u6627
 37406  006CA0  0008               	tblrd		*
 37407  006CA2  50F5               	movf	tablat,w,c
 37408  006CA4  D005               	bra	u6620
 37409  006CA6                     u6627:
 37410  006CA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 37411  006CAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 37412  006CAE  50EF               	movf	indf0,w,c
 37413  006CB0                     u6620:
 37414  006CB0  0100               	movlb	0	; () banked
 37415  006CB2  6F6A               	movwf	memcpy@tmp& (0+255),b
 37416                           
 37417                           ; BSR set to: 0
 37418  006CB4  4B68               	infsnz	memcpy@s& (0+255),f,b
 37419  006CB6  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 37420                           
 37421                           ; BSR set to: 0
 37422  006CB8  C066  FFD9         	movff	memcpy@d,fsr2l
 37423  006CBC  C067  FFDA         	movff	memcpy@d+1,fsr2h
 37424  006CC0  C06A  FFDF         	movff	memcpy@tmp,indf2
 37425                           
 37426                           ; BSR set to: 0
 37427  006CC4  4B66               	infsnz	memcpy@d& (0+255),f,b
 37428  006CC6  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 37429  006CC8                     l2924:
 37430                           
 37431                           ; BSR set to: 0
 37432  006CC8  0100               	movlb	0	; () banked
 37433  006CCA  0764               	decf	memcpy@n& (0+255),f,b
 37434  006CCC  A0D8               	btfss	status,0,c
 37435  006CCE  0765               	decf	(memcpy@n+1)& (0+255),f,b
 37436  006CD0  2964               	incf	memcpy@n& (0+255),w,b
 37437  006CD2  E1DD               	bnz	l7802
 37438  006CD4  2965               	incf	(memcpy@n+1)& (0+255),w,b
 37439  006CD6  B4D8               	btfsc	status,2,c
 37440  006CD8  0012               	return	
 37441  006CDA  D7D9               	goto	l2925
 37442  006CDC                     __end_of_memcpy:
 37443                           	opt stack 0
 37444                           tosu	equ	0xFFF
 37445                           tosh	equ	0xFFE
 37446                           tosl	equ	0xFFD
 37447                           pclath	equ	0xFFA
 37448                           tblptru	equ	0xFF8
 37449                           tblptrh	equ	0xFF7
 37450                           tblptrl	equ	0xFF6
 37451                           tablat	equ	0xFF5
 37452                           prodh	equ	0xFF4
 37453                           prodl	equ	0xFF3
 37454                           intcon	equ	0xFF2
 37455                           intcon2	equ	0xFF1
 37456                           intcon3	equ	0xFF0
 37457                           indf0	equ	0xFEF
 37458                           postinc0	equ	0xFEE
 37459                           plusw0	equ	0xFEB
 37460                           fsr0h	equ	0xFEA
 37461                           fsr0l	equ	0xFE9
 37462                           wreg	equ	0xFE8
 37463                           postinc1	equ	0xFE6
 37464                           postdec1	equ	0xFE5
 37465                           plusw1	equ	0xFE3
 37466                           fsr1h	equ	0xFE2
 37467                           fsr1l	equ	0xFE1
 37468                           indf2	equ	0xFDF
 37469                           postinc2	equ	0xFDE
 37470                           postdec2	equ	0xFDD
 37471                           plusw2	equ	0xFDB
 37472                           fsr2h	equ	0xFDA
 37473                           fsr2l	equ	0xFD9
 37474                           status	equ	0xFD8
 37475                           
 37476 ;; *************** function _CreateAllSoftwareTimers *****************
 37477 ;; Defined at:
 37478 ;;		line 789 in file "mcc_generated_files/LoRaWAN/lorawan_na.c"
 37479 ;; Parameters:    Size  Location     Type
 37480 ;;		None
 37481 ;; Auto vars:     Size  Location     Type
 37482 ;;		None
 37483 ;; Return value:  Size  Location     Type
 37484 ;;                  1    wreg      void 
 37485 ;; Registers used:
 37486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37487 ;; Tracked objects:
 37488 ;;		On entry : 0/0
 37489 ;;		On exit  : 0/0
 37490 ;;		Unchanged: 0/0
 37491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37496 ;;Total ram usage:        0 bytes
 37497 ;; Hardware stack levels used:    1
 37498 ;; Hardware stack levels required when called:    8
 37499 ;; This function calls:
 37500 ;;		_SwTimerCreate
 37501 ;; This function is called by:
 37502 ;;		_LORAWAN_Init
 37503 ;; This function uses a non-reentrant model
 37504 ;;
 37505                           
 37506                           	psect	text189
 37507  007056                     __ptext189:
 37508                           	opt stack 0
 37509  007056                     _CreateAllSoftwareTimers:
 37510                           	opt stack 21
 37511                           
 37512                           ;lorawan_na.c: 791: loRa.joinAccept1TimerId = SwTimerCreate();
 37513                           
 37514                           ; BSR set to: 0
 37515                           ;incstack = 0
 37516  007056  EC40  F031         	call	_SwTimerCreate	;wreg free
 37517  00705A  0102               	movlb	2	; () banked
 37518  00705C  6FD3               	movwf	(_loRa+211)& (0+255),b
 37519                           
 37520                           ;lorawan_na.c: 792: loRa.joinAccept2TimerId = SwTimerCreate();
 37521  00705E  EC40  F031         	call	_SwTimerCreate	;wreg free
 37522  007062  0102               	movlb	2	; () banked
 37523  007064  6FD4               	movwf	(_loRa+212)& (0+255),b
 37524                           
 37525                           ;lorawan_na.c: 793: loRa.receiveWindow1TimerId = SwTimerCreate();
 37526  007066  EC40  F031         	call	_SwTimerCreate	;wreg free
 37527  00706A  0102               	movlb	2	; () banked
 37528  00706C  6FD5               	movwf	(_loRa+213)& (0+255),b
 37529                           
 37530                           ;lorawan_na.c: 794: loRa.receiveWindow2TimerId = SwTimerCreate();
 37531  00706E  EC40  F031         	call	_SwTimerCreate	;wreg free
 37532  007072  0102               	movlb	2	; () banked
 37533  007074  6FD6               	movwf	(_loRa+214)& (0+255),b
 37534                           
 37535                           ;lorawan_na.c: 795: loRa.linkCheckTimerId = SwTimerCreate();
 37536  007076  EC40  F031         	call	_SwTimerCreate	;wreg free
 37537  00707A  0102               	movlb	2	; () banked
 37538  00707C  6FD8               	movwf	(_loRa+216)& (0+255),b
 37539                           
 37540                           ;lorawan_na.c: 796: loRa.ackTimeoutTimerId = SwTimerCreate();
 37541  00707E  EC40  F031         	call	_SwTimerCreate	;wreg free
 37542  007082  0102               	movlb	2	; () banked
 37543  007084  6FD9               	movwf	(_loRa+217)& (0+255),b
 37544                           
 37545                           ;lorawan_na.c: 797: loRa.automaticReplyTimerId = SwTimerCreate();
 37546  007086  EC40  F031         	call	_SwTimerCreate	;wreg free
 37547  00708A  0102               	movlb	2	; () banked
 37548  00708C  6FD7               	movwf	(_loRa+215)& (0+255),b
 37549                           
 37550                           ;lorawan_na.c: 798: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 37551  00708E  EC40  F031         	call	_SwTimerCreate	;wreg free
 37552  007092  0102               	movlb	2	; () banked
 37553  007094  6FDB               	movwf	(_loRa+219)& (0+255),b
 37554                           
 37555                           ;lorawan_na.c: 799: loRa.abpJoinTimerId = SwTimerCreate();
 37556  007096  EC40  F031         	call	_SwTimerCreate	;wreg free
 37557  00709A  0102               	movlb	2	; () banked
 37558  00709C  6FE4               	movwf	(_loRa+228)& (0+255),b
 37559                           
 37560                           ;lorawan_na.c: 800: loRa.transmissionErrorTimerId = SwTimerCreate();
 37561  00709E  EC40  F031         	call	_SwTimerCreate	;wreg free
 37562  0070A2  0102               	movlb	2	; () banked
 37563  0070A4  6FE5               	movwf	(_loRa+229)& (0+255),b
 37564                           
 37565                           ; BSR set to: 2
 37566  0070A6  0012               	return		;funcret
 37567  0070A8                     __end_of_CreateAllSoftwareTimers:
 37568                           	opt stack 0
 37569                           tosu	equ	0xFFF
 37570                           tosh	equ	0xFFE
 37571                           tosl	equ	0xFFD
 37572                           pclath	equ	0xFFA
 37573                           tblptru	equ	0xFF8
 37574                           tblptrh	equ	0xFF7
 37575                           tblptrl	equ	0xFF6
 37576                           tablat	equ	0xFF5
 37577                           prodh	equ	0xFF4
 37578                           prodl	equ	0xFF3
 37579                           intcon	equ	0xFF2
 37580                           intcon2	equ	0xFF1
 37581                           intcon3	equ	0xFF0
 37582                           indf0	equ	0xFEF
 37583                           postinc0	equ	0xFEE
 37584                           plusw0	equ	0xFEB
 37585                           fsr0h	equ	0xFEA
 37586                           fsr0l	equ	0xFE9
 37587                           wreg	equ	0xFE8
 37588                           postinc1	equ	0xFE6
 37589                           postdec1	equ	0xFE5
 37590                           plusw1	equ	0xFE3
 37591                           fsr1h	equ	0xFE2
 37592                           fsr1l	equ	0xFE1
 37593                           indf2	equ	0xFDF
 37594                           postinc2	equ	0xFDE
 37595                           postdec2	equ	0xFDD
 37596                           plusw2	equ	0xFDB
 37597                           fsr2h	equ	0xFDA
 37598                           fsr2l	equ	0xFD9
 37599                           status	equ	0xFD8
 37600                           
 37601 ;; *************** function _SwTimerCreate *****************
 37602 ;; Defined at:
 37603 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37604 ;; Parameters:    Size  Location     Type
 37605 ;;		None
 37606 ;; Auto vars:     Size  Location     Type
 37607 ;;  retVal          1    0[BANK0 ] unsigned char 
 37608 ;; Return value:  Size  Location     Type
 37609 ;;                  1    wreg      unsigned char 
 37610 ;; Registers used:
 37611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37612 ;; Tracked objects:
 37613 ;;		On entry : 0/0
 37614 ;;		On exit  : 0/0
 37615 ;;		Unchanged: 0/0
 37616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37620 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37621 ;;Total ram usage:        1 bytes
 37622 ;; Hardware stack levels used:    1
 37623 ;; Hardware stack levels required when called:    7
 37624 ;; This function calls:
 37625 ;;		Nothing
 37626 ;; This function is called by:
 37627 ;;		_RADIO_Init
 37628 ;;		_CreateAllSoftwareTimers
 37629 ;; This function uses a non-reentrant model
 37630 ;;
 37631                           
 37632                           	psect	text190
 37633  006280                     __ptext190:
 37634                           	opt stack 0
 37635  006280                     _SwTimerCreate:
 37636                           	opt stack 21
 37637                           
 37638                           ;sw_timer.c: 156: uint8_t retVal;
 37639                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37640                           
 37641                           ; BSR set to: 2
 37642                           ;incstack = 0
 37643  006280  0E14               	movlw	20
 37644  006282  0100               	movlb	0	; () banked
 37645  006284  61FF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37646  006286  D03E               	goto	l252
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;sw_timer.c: 158: {
 37650                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37651  006288  9EF2               	bcf	intcon,7,c	;volatile
 37652                           
 37653                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37654  00628A  C0FF  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37655                           
 37656                           ; BSR set to: 0
 37657                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37658  00628E  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 37659  006290  0D08               	mullw	8
 37660  006292  0E04               	movlw	4
 37661  006294  26F3               	addwf	prodl,f,c
 37662  006296  0E00               	movlw	0
 37663  006298  22F4               	addwfc	prodh,f,c
 37664  00629A  0E00               	movlw	low _swTimers
 37665  00629C  24F3               	addwf	prodl,w,c
 37666  00629E  6ED9               	movwf	fsr2l,c
 37667  0062A0  0E03               	movlw	high _swTimers
 37668  0062A2  20F4               	addwfc	prodh,w,c
 37669  0062A4  6EDA               	movwf	fsr2h,c
 37670  0062A6  0E00               	movlw	0
 37671  0062A8  6EDF               	movwf	indf2,c
 37672                           
 37673                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37674  0062AA  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 37675  0062AC  0D08               	mullw	8
 37676  0062AE  0E00               	movlw	low _swTimers
 37677  0062B0  24F3               	addwf	prodl,w,c
 37678  0062B2  6ED9               	movwf	fsr2l,c
 37679  0062B4  0E03               	movlw	high _swTimers
 37680  0062B6  20F4               	addwfc	prodh,w,c
 37681  0062B8  6EDA               	movwf	fsr2h,c
 37682  0062BA  6ADE               	clrf	postinc2,c
 37683  0062BC  6ADE               	clrf	postinc2,c
 37684  0062BE  6ADE               	clrf	postinc2,c
 37685  0062C0  6ADD               	clrf	postdec2,c
 37686                           
 37687                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37688  0062C2  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 37689  0062C4  0D08               	mullw	8
 37690  0062C6  0E05               	movlw	5
 37691  0062C8  26F3               	addwf	prodl,f,c
 37692  0062CA  0E00               	movlw	0
 37693  0062CC  22F4               	addwfc	prodh,f,c
 37694  0062CE  0E00               	movlw	low _swTimers
 37695  0062D0  24F3               	addwf	prodl,w,c
 37696  0062D2  6ED9               	movwf	fsr2l,c
 37697  0062D4  0E03               	movlw	high _swTimers
 37698  0062D6  20F4               	addwfc	prodh,w,c
 37699  0062D8  6EDA               	movwf	fsr2h,c
 37700  0062DA  0E00               	movlw	0
 37701  0062DC  6EDF               	movwf	indf2,c
 37702                           
 37703                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37704  0062DE  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 37705  0062E0  0D08               	mullw	8
 37706  0062E2  0E06               	movlw	6
 37707  0062E4  26F3               	addwf	prodl,f,c
 37708  0062E6  0E00               	movlw	0
 37709  0062E8  22F4               	addwfc	prodh,f,c
 37710  0062EA  0E00               	movlw	low _swTimers
 37711  0062EC  24F3               	addwf	prodl,w,c
 37712  0062EE  6ED9               	movwf	fsr2l,c
 37713  0062F0  0E03               	movlw	high _swTimers
 37714  0062F2  20F4               	addwfc	prodh,w,c
 37715  0062F4  6EDA               	movwf	fsr2h,c
 37716  0062F6  0E00               	movlw	0
 37717  0062F8  6EDE               	movwf	postinc2,c
 37718  0062FA  0E00               	movlw	0
 37719  0062FC  6EDD               	movwf	postdec2,c
 37720                           
 37721                           ; BSR set to: 0
 37722                           ;sw_timer.c: 165: allocatedTimers++;
 37723  0062FE  2BFF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37724                           
 37725                           ; BSR set to: 0
 37726                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37727  006300  8EF2               	bsf	intcon,7,c	;volatile
 37728                           
 37729                           ;sw_timer.c: 167: }
 37730  006302  D001               	goto	l256
 37731  006304                     l252:
 37732                           
 37733                           ;sw_timer.c: 171: {
 37734                           
 37735                           ; BSR set to: 0
 37736                           ;sw_timer.c: 168: else
 37737                           ;sw_timer.c: 169: {
 37738                           ;sw_timer.c: 170: while(1)
 37739  006304  D7FF               	goto	l252
 37740  006306                     l256:
 37741                           
 37742                           ;sw_timer.c: 175: }
 37743                           ;sw_timer.c: 176: }
 37744                           ;sw_timer.c: 177: return retVal;
 37745  006306  0100               	movlb	0	; () banked
 37746  006308  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 37747  00630A  0012               	return	
 37748  00630C                     __end_of_SwTimerCreate:
 37749                           	opt stack 0
 37750                           tosu	equ	0xFFF
 37751                           tosh	equ	0xFFE
 37752                           tosl	equ	0xFFD
 37753                           pclath	equ	0xFFA
 37754                           tblptru	equ	0xFF8
 37755                           tblptrh	equ	0xFF7
 37756                           tblptrl	equ	0xFF6
 37757                           tablat	equ	0xFF5
 37758                           prodh	equ	0xFF4
 37759                           prodl	equ	0xFF3
 37760                           intcon	equ	0xFF2
 37761                           intcon2	equ	0xFF1
 37762                           intcon3	equ	0xFF0
 37763                           indf0	equ	0xFEF
 37764                           postinc0	equ	0xFEE
 37765                           plusw0	equ	0xFEB
 37766                           fsr0h	equ	0xFEA
 37767                           fsr0l	equ	0xFE9
 37768                           wreg	equ	0xFE8
 37769                           postinc1	equ	0xFE6
 37770                           postdec1	equ	0xFE5
 37771                           plusw1	equ	0xFE3
 37772                           fsr1h	equ	0xFE2
 37773                           fsr1l	equ	0xFE1
 37774                           indf2	equ	0xFDF
 37775                           postinc2	equ	0xFDE
 37776                           postdec2	equ	0xFDD
 37777                           plusw2	equ	0xFDB
 37778                           fsr2h	equ	0xFDA
 37779                           fsr2l	equ	0xFD9
 37780                           status	equ	0xFD8
 37781                           
 37782 ;; *************** function _INTERRUPT_InterruptManager *****************
 37783 ;; Defined at:
 37784 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 37785 ;; Parameters:    Size  Location     Type
 37786 ;;		None
 37787 ;; Auto vars:     Size  Location     Type
 37788 ;;		None
 37789 ;; Return value:  Size  Location     Type
 37790 ;;                  1    wreg      void 
 37791 ;; Registers used:
 37792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37793 ;; Tracked objects:
 37794 ;;		On entry : 0/0
 37795 ;;		On exit  : 0/0
 37796 ;;		Unchanged: 0/0
 37797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37800 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37801 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37802 ;;Total ram usage:        8 bytes
 37803 ;; Hardware stack levels used:    1
 37804 ;; Hardware stack levels required when called:    6
 37805 ;; This function calls:
 37806 ;;		_INT1_ISR
 37807 ;;		_INT2_ISR
 37808 ;;		_PIN_MANAGER_IOC
 37809 ;;		_TMR1_ISR
 37810 ;; This function is called by:
 37811 ;;		Interrupt level 2
 37812 ;; This function uses a non-reentrant model
 37813 ;;
 37814                           
 37815                           	psect	intcode
 37816  000008                     __pintcode:
 37817                           	opt stack 0
 37818  000008                     _INTERRUPT_InterruptManager:
 37819                           	opt stack 12
 37820                           
 37821                           ; BSR set to: 0
 37822                           ;incstack = 0
 37823  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 37824  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37825  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37826  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37827  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37828  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37829  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37830  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37831  000028  EE19  F088         	lfsr	1,___inthi_sp
 37832                           
 37833                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37834  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37835  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37836  000030  D003               	goto	i2l2202
 37837                           
 37838                           ;interrupt_manager.c: 62: {
 37839                           ;interrupt_manager.c: 63: INT1_ISR();
 37840  000032  EC2E  F03F         	call	_INT1_ISR	;wreg free
 37841                           
 37842                           ;interrupt_manager.c: 64: }
 37843  000036  D012               	goto	i2l2209
 37844  000038                     i2l2202:
 37845                           
 37846                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37847  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37848  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37849  00003C  D003               	goto	i2l2204
 37850                           
 37851                           ;interrupt_manager.c: 66: {
 37852                           ;interrupt_manager.c: 67: INT2_ISR();
 37853  00003E  EC2A  F03F         	call	_INT2_ISR	;wreg free
 37854                           
 37855                           ;interrupt_manager.c: 68: }
 37856  000042  D00C               	goto	i2l2209
 37857  000044                     i2l2204:
 37858                           
 37859                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37860  000044  B6F2               	btfsc	intcon,3,c	;volatile
 37861  000046  A0F2               	btfss	intcon,0,c	;volatile
 37862  000048  D003               	goto	i2l2206
 37863                           
 37864                           ;interrupt_manager.c: 70: {
 37865                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 37866  00004A  EC21  F03F         	call	_PIN_MANAGER_IOC	;wreg free
 37867                           
 37868                           ;interrupt_manager.c: 72: }
 37869  00004E  D006               	goto	i2l2209
 37870  000050                     i2l2206:
 37871                           
 37872                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 37873  000050  BCF2               	btfsc	intcon,6,c	;volatile
 37874                           
 37875                           ;interrupt_manager.c: 74: {
 37876                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 37877  000052  A09D               	btfss	3997,0,c	;volatile
 37878  000054  D003               	goto	i2l2209
 37879  000056  B09E               	btfsc	3998,0,c	;volatile
 37880                           
 37881                           ;interrupt_manager.c: 76: {
 37882                           ;interrupt_manager.c: 77: TMR1_ISR();
 37883  000058  EC72  F03E         	call	_TMR1_ISR	;wreg free
 37884  00005C                     i2l2209:
 37885                           
 37886                           ;interrupt_manager.c: 84: else
 37887                           ;interrupt_manager.c: 85: {
 37888                           
 37889                           ;interrupt_manager.c: 82: }
 37890                           ;interrupt_manager.c: 83: }
 37891                           
 37892                           ;interrupt_manager.c: 79: else
 37893                           ;interrupt_manager.c: 80: {
 37894  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37895  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37896  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37897  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37898  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37899  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37900  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37901  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37902  00007C  0011               	retfie		f
 37903  00007E                     __end_of_INTERRUPT_InterruptManager:
 37904                           	opt stack 0
 37905                           tosu	equ	0xFFF
 37906                           tosh	equ	0xFFE
 37907                           tosl	equ	0xFFD
 37908                           pclatu	equ	0xFFB
 37909                           pclath	equ	0xFFA
 37910                           tblptru	equ	0xFF8
 37911                           tblptrh	equ	0xFF7
 37912                           tblptrl	equ	0xFF6
 37913                           tablat	equ	0xFF5
 37914                           prodh	equ	0xFF4
 37915                           prodl	equ	0xFF3
 37916                           intcon	equ	0xFF2
 37917                           intcon2	equ	0xFF1
 37918                           intcon3	equ	0xFF0
 37919                           indf0	equ	0xFEF
 37920                           postinc0	equ	0xFEE
 37921                           plusw0	equ	0xFEB
 37922                           fsr0h	equ	0xFEA
 37923                           fsr0l	equ	0xFE9
 37924                           wreg	equ	0xFE8
 37925                           postinc1	equ	0xFE6
 37926                           postdec1	equ	0xFE5
 37927                           plusw1	equ	0xFE3
 37928                           fsr1h	equ	0xFE2
 37929                           fsr1l	equ	0xFE1
 37930                           indf2	equ	0xFDF
 37931                           postinc2	equ	0xFDE
 37932                           postdec2	equ	0xFDD
 37933                           plusw2	equ	0xFDB
 37934                           fsr2h	equ	0xFDA
 37935                           fsr2l	equ	0xFD9
 37936                           status	equ	0xFD8
 37937                           
 37938 ;; *************** function _TMR1_ISR *****************
 37939 ;; Defined at:
 37940 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 37941 ;; Parameters:    Size  Location     Type
 37942 ;;		None
 37943 ;; Auto vars:     Size  Location     Type
 37944 ;;		None
 37945 ;; Return value:  Size  Location     Type
 37946 ;;                  1    wreg      void 
 37947 ;; Registers used:
 37948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37949 ;; Tracked objects:
 37950 ;;		On entry : 0/0
 37951 ;;		On exit  : 0/0
 37952 ;;		Unchanged: 0/0
 37953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37958 ;;Total ram usage:        0 bytes
 37959 ;; Hardware stack levels used:    1
 37960 ;; Hardware stack levels required when called:    5
 37961 ;; This function calls:
 37962 ;;		_TMR1_CallBack
 37963 ;;		i2_TMR1_WriteTimer
 37964 ;; This function is called by:
 37965 ;;		_INTERRUPT_InterruptManager
 37966 ;; This function uses a non-reentrant model
 37967 ;;
 37968                           
 37969                           	psect	text192
 37970  007CE4                     __ptext192:
 37971                           	opt stack 0
 37972  007CE4                     _TMR1_ISR:
 37973                           	opt stack 12
 37974                           
 37975                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 37976                           
 37977                           ;incstack = 0
 37978  007CE4  909E               	bcf	3998,0,c	;volatile
 37979                           
 37980                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 37981  007CE6  C1F4  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 37982  007CEA  C1F5  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 37983  007CEE  ECFA  F03D         	call	i2_TMR1_WriteTimer	;wreg free
 37984                           
 37985                           ;tmr1.c: 167: TMR1_CallBack();
 37986  007CF2  EC7D  F03D         	call	_TMR1_CallBack	;wreg free
 37987  007CF6  0012               	return		;funcret
 37988  007CF8                     __end_of_TMR1_ISR:
 37989                           	opt stack 0
 37990                           tosu	equ	0xFFF
 37991                           tosh	equ	0xFFE
 37992                           tosl	equ	0xFFD
 37993                           pclatu	equ	0xFFB
 37994                           pclath	equ	0xFFA
 37995                           tblptru	equ	0xFF8
 37996                           tblptrh	equ	0xFF7
 37997                           tblptrl	equ	0xFF6
 37998                           tablat	equ	0xFF5
 37999                           prodh	equ	0xFF4
 38000                           prodl	equ	0xFF3
 38001                           intcon	equ	0xFF2
 38002                           intcon2	equ	0xFF1
 38003                           intcon3	equ	0xFF0
 38004                           indf0	equ	0xFEF
 38005                           postinc0	equ	0xFEE
 38006                           plusw0	equ	0xFEB
 38007                           fsr0h	equ	0xFEA
 38008                           fsr0l	equ	0xFE9
 38009                           wreg	equ	0xFE8
 38010                           postinc1	equ	0xFE6
 38011                           postdec1	equ	0xFE5
 38012                           plusw1	equ	0xFE3
 38013                           fsr1h	equ	0xFE2
 38014                           fsr1l	equ	0xFE1
 38015                           indf2	equ	0xFDF
 38016                           postinc2	equ	0xFDE
 38017                           postdec2	equ	0xFDD
 38018                           plusw2	equ	0xFDB
 38019                           fsr2h	equ	0xFDA
 38020                           fsr2l	equ	0xFD9
 38021                           status	equ	0xFD8
 38022                           
 38023 ;; *************** function _TMR1_CallBack *****************
 38024 ;; Defined at:
 38025 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 38026 ;; Parameters:    Size  Location     Type
 38027 ;;		None
 38028 ;; Auto vars:     Size  Location     Type
 38029 ;;		None
 38030 ;; Return value:  Size  Location     Type
 38031 ;;                  1    wreg      void 
 38032 ;; Registers used:
 38033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38034 ;; Tracked objects:
 38035 ;;		On entry : 0/0
 38036 ;;		On exit  : 0/0
 38037 ;;		Unchanged: 0/0
 38038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38043 ;;Total ram usage:        0 bytes
 38044 ;; Hardware stack levels used:    1
 38045 ;; Hardware stack levels required when called:    4
 38046 ;; This function calls:
 38047 ;;		Absolute function
 38048 ;;		_TMR1_DefaultInterruptHandler
 38049 ;;		_TMR_ISR_lora
 38050 ;; This function is called by:
 38051 ;;		_TMR1_ISR
 38052 ;; This function uses a non-reentrant model
 38053 ;;
 38054                           
 38055                           	psect	text193
 38056  007AFA                     __ptext193:
 38057                           	opt stack 0
 38058  007AFA                     _TMR1_CallBack:
 38059                           	opt stack 12
 38060                           
 38061                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 38062                           
 38063                           ;incstack = 0
 38064  007AFA  0101               	movlb	1	; () banked
 38065  007AFC  51F2               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38066  007AFE  11F3               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38067  007B00  B4D8               	btfsc	status,2,c
 38068  007B02  0012               	return	
 38069                           
 38070                           ; BSR set to: 1
 38071                           ;tmr1.c: 174: {
 38072                           ;tmr1.c: 175: TMR1_InterruptHandler();
 38073  007B04  D801               	call	i2u1413_48
 38074  007B06  0012               	return	
 38075  007B08                     i2u1413_48:
 38076  007B08  0005               	push	
 38077  007B0A  6EFA               	movwf	pclath,c
 38078  007B0C  51F2               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38079  007B0E  6EFD               	movwf	tosl,c
 38080  007B10  51F3               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38081  007B12  6EFE               	movwf	tosh,c
 38082  007B14  6AFF               	clrf	tosu,c
 38083  007B16  50FA               	movf	pclath,w,c
 38084  007B18  0012               	return		;indir
 38085  007B1A                     __end_of_TMR1_CallBack:
 38086                           	opt stack 0
 38087                           tosu	equ	0xFFF
 38088                           tosh	equ	0xFFE
 38089                           tosl	equ	0xFFD
 38090                           pclatu	equ	0xFFB
 38091                           pclath	equ	0xFFA
 38092                           tblptru	equ	0xFF8
 38093                           tblptrh	equ	0xFF7
 38094                           tblptrl	equ	0xFF6
 38095                           tablat	equ	0xFF5
 38096                           prodh	equ	0xFF4
 38097                           prodl	equ	0xFF3
 38098                           intcon	equ	0xFF2
 38099                           intcon2	equ	0xFF1
 38100                           intcon3	equ	0xFF0
 38101                           indf0	equ	0xFEF
 38102                           postinc0	equ	0xFEE
 38103                           plusw0	equ	0xFEB
 38104                           fsr0h	equ	0xFEA
 38105                           fsr0l	equ	0xFE9
 38106                           wreg	equ	0xFE8
 38107                           postinc1	equ	0xFE6
 38108                           postdec1	equ	0xFE5
 38109                           plusw1	equ	0xFE3
 38110                           fsr1h	equ	0xFE2
 38111                           fsr1l	equ	0xFE1
 38112                           indf2	equ	0xFDF
 38113                           postinc2	equ	0xFDE
 38114                           postdec2	equ	0xFDD
 38115                           plusw2	equ	0xFDB
 38116                           fsr2h	equ	0xFDA
 38117                           fsr2l	equ	0xFD9
 38118                           status	equ	0xFD8
 38119                           
 38120 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38121 ;; Defined at:
 38122 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 38123 ;; Parameters:    Size  Location     Type
 38124 ;;		None
 38125 ;; Auto vars:     Size  Location     Type
 38126 ;;		None
 38127 ;; Return value:  Size  Location     Type
 38128 ;;                  1    wreg      void 
 38129 ;; Registers used:
 38130 ;;		None
 38131 ;; Tracked objects:
 38132 ;;		On entry : 0/0
 38133 ;;		On exit  : 0/0
 38134 ;;		Unchanged: 0/0
 38135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38140 ;;Total ram usage:        0 bytes
 38141 ;; Hardware stack levels used:    1
 38142 ;; This function calls:
 38143 ;;		Nothing
 38144 ;; This function is called by:
 38145 ;;		_TMR1_Initialize
 38146 ;;		_TMR1_CallBack
 38147 ;; This function uses a non-reentrant model
 38148 ;;
 38149                           
 38150                           	psect	text194
 38151  007EAE                     __ptext194:
 38152                           	opt stack 0
 38153  007EAE                     _TMR1_DefaultInterruptHandler:
 38154                           	opt stack 15
 38155                           
 38156                           ;incstack = 0
 38157  007EAE  0012               	return		;funcret
 38158  007EB0                     __end_of_TMR1_DefaultInterruptHandler:
 38159                           	opt stack 0
 38160                           tosu	equ	0xFFF
 38161                           tosh	equ	0xFFE
 38162                           tosl	equ	0xFFD
 38163                           pclatu	equ	0xFFB
 38164                           pclath	equ	0xFFA
 38165                           tblptru	equ	0xFF8
 38166                           tblptrh	equ	0xFF7
 38167                           tblptrl	equ	0xFF6
 38168                           tablat	equ	0xFF5
 38169                           prodh	equ	0xFF4
 38170                           prodl	equ	0xFF3
 38171                           intcon	equ	0xFF2
 38172                           intcon2	equ	0xFF1
 38173                           intcon3	equ	0xFF0
 38174                           indf0	equ	0xFEF
 38175                           postinc0	equ	0xFEE
 38176                           plusw0	equ	0xFEB
 38177                           fsr0h	equ	0xFEA
 38178                           fsr0l	equ	0xFE9
 38179                           wreg	equ	0xFE8
 38180                           postinc1	equ	0xFE6
 38181                           postdec1	equ	0xFE5
 38182                           plusw1	equ	0xFE3
 38183                           fsr1h	equ	0xFE2
 38184                           fsr1l	equ	0xFE1
 38185                           indf2	equ	0xFDF
 38186                           postinc2	equ	0xFDE
 38187                           postdec2	equ	0xFDD
 38188                           plusw2	equ	0xFDB
 38189                           fsr2h	equ	0xFDA
 38190                           fsr2l	equ	0xFD9
 38191                           status	equ	0xFD8
 38192                           
 38193 ;; *************** function _TMR_ISR_lora *****************
 38194 ;; Defined at:
 38195 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38196 ;; Parameters:    Size  Location     Type
 38197 ;;		None
 38198 ;; Auto vars:     Size  Location     Type
 38199 ;;		None
 38200 ;; Return value:  Size  Location     Type
 38201 ;;                  1    wreg      void 
 38202 ;; Registers used:
 38203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38204 ;; Tracked objects:
 38205 ;;		On entry : 0/0
 38206 ;;		On exit  : 0/0
 38207 ;;		Unchanged: 0/0
 38208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38213 ;;Total ram usage:        2 bytes
 38214 ;; Hardware stack levels used:    1
 38215 ;; Hardware stack levels required when called:    3
 38216 ;; This function calls:
 38217 ;;		i2_SwTimersInterrupt
 38218 ;;		i2_TMR_SwapTimer
 38219 ;; This function is called by:
 38220 ;;		_TMR_ISR_Lora_Init
 38221 ;;		_TMR1_CallBack
 38222 ;; This function uses a non-reentrant model
 38223 ;;
 38224                           
 38225                           	psect	text195
 38226  006FAE                     __ptext195:
 38227                           	opt stack 0
 38228  006FAE                     _TMR_ISR_lora:
 38229                           	opt stack 12
 38230                           
 38231                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38232                           
 38233                           ;incstack = 0
 38234  006FAE  0E01               	movlw	1
 38235  006FB0  6E47               	movwf	_timerOverflow,c	;volatile
 38236                           
 38237                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38238  006FB2  ECDE  F027         	call	i2_SwTimersInterrupt	;wreg free
 38239  006FB6  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38240  006FBA  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38241  006FBE  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38242  006FC2  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38243                           
 38244                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38245  006FC6  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38246  006FC8  E11C               	bnz	i2l1337
 38247  006FCA  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38248  006FCC  B0D8               	btfsc	status,0,c
 38249  006FCE  0012               	return	
 38250                           
 38251                           ;tmr_lora_addons.c: 66: {
 38252                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38253  006FD0  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 38254  006FD4  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 38255  006FD8  1E32               	comf	??_TMR_ISR_lora,f,c
 38256  006FDA  1E33               	comf	??_TMR_ISR_lora+1,f,c
 38257  006FDC  4A32               	infsnz	??_TMR_ISR_lora,f,c
 38258  006FDE  2A33               	incf	??_TMR_ISR_lora+1,f,c
 38259  006FE0  C032  F0FD         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 38260  006FE4  C033  F0FE         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 38261                           
 38262                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38263  006FE8  C0FD  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38264  006FEC  C0FE  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38265  006FF0  ECE1  F039         	call	i2_TMR_SwapTimer	;wreg free
 38266  006FF4  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38267  006FF8  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38268  006FFC  6A42               	clrf	_ticksAdded+2,c	;volatile
 38269  006FFE  6A43               	clrf	_ticksAdded+3,c	;volatile
 38270  007000  0012               	return	
 38271  007002                     i2l1337:
 38272  007002  0012               	return		;funcret
 38273  007004                     __end_of_TMR_ISR_lora:
 38274                           	opt stack 0
 38275                           tosu	equ	0xFFF
 38276                           tosh	equ	0xFFE
 38277                           tosl	equ	0xFFD
 38278                           pclatu	equ	0xFFB
 38279                           pclath	equ	0xFFA
 38280                           tblptru	equ	0xFF8
 38281                           tblptrh	equ	0xFF7
 38282                           tblptrl	equ	0xFF6
 38283                           tablat	equ	0xFF5
 38284                           prodh	equ	0xFF4
 38285                           prodl	equ	0xFF3
 38286                           intcon	equ	0xFF2
 38287                           intcon2	equ	0xFF1
 38288                           intcon3	equ	0xFF0
 38289                           indf0	equ	0xFEF
 38290                           postinc0	equ	0xFEE
 38291                           plusw0	equ	0xFEB
 38292                           fsr0h	equ	0xFEA
 38293                           fsr0l	equ	0xFE9
 38294                           wreg	equ	0xFE8
 38295                           postinc1	equ	0xFE6
 38296                           postdec1	equ	0xFE5
 38297                           plusw1	equ	0xFE3
 38298                           fsr1h	equ	0xFE2
 38299                           fsr1l	equ	0xFE1
 38300                           indf2	equ	0xFDF
 38301                           postinc2	equ	0xFDE
 38302                           postdec2	equ	0xFDD
 38303                           plusw2	equ	0xFDB
 38304                           fsr2h	equ	0xFDA
 38305                           fsr2l	equ	0xFD9
 38306                           status	equ	0xFD8
 38307                           
 38308 ;; *************** function i2_TMR_SwapTimer *****************
 38309 ;; Defined at:
 38310 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38311 ;; Parameters:    Size  Location     Type
 38312 ;;  timerVal        2    8[COMRAM] unsigned int 
 38313 ;; Auto vars:     Size  Location     Type
 38314 ;;		None
 38315 ;; Return value:  Size  Location     Type
 38316 ;;                  2    8[COMRAM] unsigned int 
 38317 ;; Registers used:
 38318 ;;		wreg, status,2, status,0, cstack
 38319 ;; Tracked objects:
 38320 ;;		On entry : 0/0
 38321 ;;		On exit  : 0/0
 38322 ;;		Unchanged: 0/0
 38323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38328 ;;Total ram usage:        2 bytes
 38329 ;; Hardware stack levels used:    1
 38330 ;; Hardware stack levels required when called:    1
 38331 ;; This function calls:
 38332 ;;		i2_TMR1_ReadTimer
 38333 ;;		i2_TMR1_WriteTimer
 38334 ;; This function is called by:
 38335 ;;		_TMR_ISR_lora
 38336 ;; This function uses a non-reentrant model
 38337 ;;
 38338                           
 38339                           	psect	text196
 38340  0073C2                     __ptext196:
 38341                           	opt stack 0
 38342  0073C2                     i2_TMR_SwapTimer:
 38343                           	opt stack 13
 38344                           
 38345                           ;sw_timer.c: 114: static uint16_t oldVal;
 38346                           ;sw_timer.c: 115: static uint16_t retVal;
 38347                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38348                           
 38349                           ;incstack = 0
 38350  0073C2  EC8D  F03D         	call	i2_TMR1_ReadTimer	;wreg free
 38351  0073C6  C001  F16F         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38352  0073CA  C002  F170         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38353  0073CE                     
 38354                           ;sw_timer.c: 123: ;
 38355  0073CE  EC8D  F03D         	call	i2_TMR1_ReadTimer	;wreg free
 38356  0073D2  0101               	movlb	1	; () banked
 38357  0073D4  516F               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 38358  0073D6  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38359  0073D8  E104               	bnz	i2l10696
 38360  0073DA  5170               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 38361  0073DC  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38362  0073DE  B4D8               	btfsc	status,2,c
 38363  0073E0  D7F6               	goto	i2l238
 38364  0073E2                     i2l10696:
 38365                           
 38366                           ; BSR set to: 1
 38367                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38368  0073E2  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38369  0073E6  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38370  0073EA  ECFA  F03D         	call	i2_TMR1_WriteTimer	;wreg free
 38371                           
 38372                           ;sw_timer.c: 128: oldVal++;
 38373  0073EE  0101               	movlb	1	; () banked
 38374  0073F0  4B6F               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 38375  0073F2  2B70               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 38376                           
 38377                           ; BSR set to: 1
 38378                           ;sw_timer.c: 130: retVal = oldVal;
 38379  0073F4  C16F  F16D         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38380  0073F8  C170  F16E         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38381                           
 38382                           ; BSR set to: 1
 38383                           ;sw_timer.c: 132: return retVal;
 38384  0073FC  C16D  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38385  007400  C16E  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38386  007404  0012               	return	
 38387  007406                     __end_ofi2_TMR_SwapTimer:
 38388                           	opt stack 0
 38389                           tosu	equ	0xFFF
 38390                           tosh	equ	0xFFE
 38391                           tosl	equ	0xFFD
 38392                           pclatu	equ	0xFFB
 38393                           pclath	equ	0xFFA
 38394                           tblptru	equ	0xFF8
 38395                           tblptrh	equ	0xFF7
 38396                           tblptrl	equ	0xFF6
 38397                           tablat	equ	0xFF5
 38398                           prodh	equ	0xFF4
 38399                           prodl	equ	0xFF3
 38400                           intcon	equ	0xFF2
 38401                           intcon2	equ	0xFF1
 38402                           intcon3	equ	0xFF0
 38403                           indf0	equ	0xFEF
 38404                           postinc0	equ	0xFEE
 38405                           plusw0	equ	0xFEB
 38406                           fsr0h	equ	0xFEA
 38407                           fsr0l	equ	0xFE9
 38408                           wreg	equ	0xFE8
 38409                           postinc1	equ	0xFE6
 38410                           postdec1	equ	0xFE5
 38411                           plusw1	equ	0xFE3
 38412                           fsr1h	equ	0xFE2
 38413                           fsr1l	equ	0xFE1
 38414                           indf2	equ	0xFDF
 38415                           postinc2	equ	0xFDE
 38416                           postdec2	equ	0xFDD
 38417                           plusw2	equ	0xFDB
 38418                           fsr2h	equ	0xFDA
 38419                           fsr2l	equ	0xFD9
 38420                           status	equ	0xFD8
 38421                           
 38422 ;; *************** function i2_TMR1_WriteTimer *****************
 38423 ;; Defined at:
 38424 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 38425 ;; Parameters:    Size  Location     Type
 38426 ;;  timerVal        2    0[COMRAM] unsigned int 
 38427 ;; Auto vars:     Size  Location     Type
 38428 ;;		None
 38429 ;; Return value:  Size  Location     Type
 38430 ;;                  1    wreg      void 
 38431 ;; Registers used:
 38432 ;;		wreg, status,2
 38433 ;; Tracked objects:
 38434 ;;		On entry : 0/0
 38435 ;;		On exit  : 0/0
 38436 ;;		Unchanged: 0/0
 38437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38442 ;;Total ram usage:        2 bytes
 38443 ;; Hardware stack levels used:    1
 38444 ;; This function calls:
 38445 ;;		Nothing
 38446 ;; This function is called by:
 38447 ;;		_TMR1_ISR
 38448 ;;		i2_TMR_SwapTimer
 38449 ;; This function uses a non-reentrant model
 38450 ;;
 38451                           
 38452                           	psect	text197
 38453  007BF4                     __ptext197:
 38454                           	opt stack 0
 38455  007BF4                     i2_TMR1_WriteTimer:
 38456                           	opt stack 16
 38457                           
 38458                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 38459                           
 38460                           ; BSR set to: 1
 38461                           ;incstack = 0
 38462  007BF4  A4CD               	btfss	4045,2,c	;volatile
 38463  007BF6  D007               	goto	i2l2432
 38464                           
 38465                           ;tmr1.c: 124: {
 38466                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 38467  007BF8  90CD               	bcf	4045,0,c	;volatile
 38468                           
 38469                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 38470  007BFA  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 38471  007BFC  6ECF               	movwf	4047,c	;volatile
 38472                           
 38473                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 38474  007BFE  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38475                           
 38476                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 38477  007C02  80CD               	bsf	4045,0,c	;volatile
 38478                           
 38479                           ;tmr1.c: 134: }
 38480  007C04  0012               	return	
 38481  007C06                     i2l2432:
 38482                           
 38483                           ;tmr1.c: 135: else
 38484                           ;tmr1.c: 136: {
 38485                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 38486  007C06  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 38487  007C08  6ECF               	movwf	4047,c	;volatile
 38488                           
 38489                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 38490  007C0A  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38491  007C0E  0012               	return	
 38492  007C10                     __end_ofi2_TMR1_WriteTimer:
 38493                           	opt stack 0
 38494                           tosu	equ	0xFFF
 38495                           tosh	equ	0xFFE
 38496                           tosl	equ	0xFFD
 38497                           pclatu	equ	0xFFB
 38498                           pclath	equ	0xFFA
 38499                           tblptru	equ	0xFF8
 38500                           tblptrh	equ	0xFF7
 38501                           tblptrl	equ	0xFF6
 38502                           tablat	equ	0xFF5
 38503                           prodh	equ	0xFF4
 38504                           prodl	equ	0xFF3
 38505                           intcon	equ	0xFF2
 38506                           intcon2	equ	0xFF1
 38507                           intcon3	equ	0xFF0
 38508                           indf0	equ	0xFEF
 38509                           postinc0	equ	0xFEE
 38510                           plusw0	equ	0xFEB
 38511                           fsr0h	equ	0xFEA
 38512                           fsr0l	equ	0xFE9
 38513                           wreg	equ	0xFE8
 38514                           postinc1	equ	0xFE6
 38515                           postdec1	equ	0xFE5
 38516                           plusw1	equ	0xFE3
 38517                           fsr1h	equ	0xFE2
 38518                           fsr1l	equ	0xFE1
 38519                           indf2	equ	0xFDF
 38520                           postinc2	equ	0xFDE
 38521                           postdec2	equ	0xFDD
 38522                           plusw2	equ	0xFDB
 38523                           fsr2h	equ	0xFDA
 38524                           fsr2l	equ	0xFD9
 38525                           status	equ	0xFD8
 38526                           
 38527 ;; *************** function i2_SwTimersInterrupt *****************
 38528 ;; Defined at:
 38529 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38530 ;; Parameters:    Size  Location     Type
 38531 ;;		None
 38532 ;; Auto vars:     Size  Location     Type
 38533 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 38534 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 38535 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 38536 ;; Return value:  Size  Location     Type
 38537 ;;                  4   32[COMRAM] unsigned long 
 38538 ;; Registers used:
 38539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38540 ;; Tracked objects:
 38541 ;;		On entry : 0/0
 38542 ;;		On exit  : 0/0
 38543 ;;		Unchanged: 0/0
 38544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38546 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38547 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38548 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38549 ;;Total ram usage:       17 bytes
 38550 ;; Hardware stack levels used:    1
 38551 ;; Hardware stack levels required when called:    2
 38552 ;; This function calls:
 38553 ;;		i2_TMR_GetDeltaTime
 38554 ;; This function is called by:
 38555 ;;		_TMR_ISR_lora
 38556 ;; This function uses a non-reentrant model
 38557 ;;
 38558                           
 38559                           	psect	text198
 38560  004FBC                     __ptext198:
 38561                           	opt stack 0
 38562  004FBC                     i2_SwTimersInterrupt:
 38563                           	opt stack 12
 38564                           
 38565                           ;sw_timer.c: 289: uint8_t i;
 38566                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38567                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38568                           
 38569                           ;incstack = 0
 38570  004FBC  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38571  004FBE  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38572  004FC0  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38573  004FC2  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38574                           
 38575                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38576  004FC4  EC76  F020         	call	i2_TMR_GetDeltaTime	;wreg free
 38577  004FC8  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38578  004FCC  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38579  004FD0  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38580  004FD4  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38581                           
 38582                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38583  004FD8  0E00               	movlw	0
 38584  004FDA  6E31               	movwf	i2SwTimersInterrupt@i,c
 38585  004FDC  D061               	goto	i2l295
 38586  004FDE                     
 38587                           ;sw_timer.c: 298: {
 38588                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38589  004FDE  5031               	movf	i2SwTimersInterrupt@i,w,c
 38590  004FE0  0D08               	mullw	8
 38591  004FE2  0E04               	movlw	4
 38592  004FE4  26F3               	addwf	prodl,f,c
 38593  004FE6  0E00               	movlw	0
 38594  004FE8  22F4               	addwfc	prodh,f,c
 38595  004FEA  0E00               	movlw	low _swTimers
 38596  004FEC  24F3               	addwf	prodl,w,c
 38597  004FEE  6ED9               	movwf	fsr2l,c
 38598  004FF0  0E03               	movlw	high _swTimers
 38599  004FF2  20F4               	addwfc	prodh,w,c
 38600  004FF4  6EDA               	movwf	fsr2h,c
 38601  004FF6  04DE               	decf	postinc2,w,c
 38602  004FF8  A4D8               	btfss	status,2,c
 38603  004FFA  D051               	goto	i2l300
 38604                           
 38605                           ;sw_timer.c: 302: {
 38606                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38607  004FFC  5031               	movf	i2SwTimersInterrupt@i,w,c
 38608  004FFE  0D08               	mullw	8
 38609  005000  0E00               	movlw	low _swTimers
 38610  005002  24F3               	addwf	prodl,w,c
 38611  005004  6ED9               	movwf	fsr2l,c
 38612  005006  0E03               	movlw	high _swTimers
 38613  005008  20F4               	addwfc	prodh,w,c
 38614  00500A  6EDA               	movwf	fsr2h,c
 38615  00500C  50DE               	movf	postinc2,w,c
 38616  00500E  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38617  005010  50DE               	movf	postinc2,w,c
 38618  005012  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38619  005014  50DE               	movf	postinc2,w,c
 38620  005016  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38621  005018  50DE               	movf	postinc2,w,c
 38622  00501A  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38623  00501C  A0D8               	btfss	status,0,c
 38624  00501E  D00D               	goto	i2l298
 38625                           
 38626                           ;sw_timer.c: 304: {
 38627                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38628  005020  5031               	movf	i2SwTimersInterrupt@i,w,c
 38629  005022  0D08               	mullw	8
 38630  005024  0E00               	movlw	low _swTimers
 38631  005026  24F3               	addwf	prodl,w,c
 38632  005028  6ED9               	movwf	fsr2l,c
 38633  00502A  0E03               	movlw	high _swTimers
 38634  00502C  20F4               	addwfc	prodh,w,c
 38635  00502E  6EDA               	movwf	fsr2h,c
 38636  005030  6ADE               	clrf	postinc2,c
 38637  005032  6ADE               	clrf	postinc2,c
 38638  005034  6ADE               	clrf	postinc2,c
 38639  005036  6ADD               	clrf	postdec2,c
 38640                           
 38641                           ;sw_timer.c: 306: }
 38642  005038  D032               	goto	i2l300
 38643  00503A                     i2l298:
 38644                           
 38645                           ;sw_timer.c: 307: else
 38646                           ;sw_timer.c: 308: {
 38647                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38648  00503A  5031               	movf	i2SwTimersInterrupt@i,w,c
 38649  00503C  0D08               	mullw	8
 38650  00503E  0E00               	movlw	low _swTimers
 38651  005040  24F3               	addwf	prodl,w,c
 38652  005042  6ED9               	movwf	fsr2l,c
 38653  005044  0E03               	movlw	high _swTimers
 38654  005046  20F4               	addwfc	prodh,w,c
 38655  005048  6EDA               	movwf	fsr2h,c
 38656  00504A  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38657  00504C  5EDE               	subwf	postinc2,f,c
 38658  00504E  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38659  005050  5ADE               	subwfb	postinc2,f,c
 38660  005052  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38661  005054  5ADE               	subwfb	postinc2,f,c
 38662  005056  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38663  005058  5ADE               	subwfb	postinc2,f,c
 38664                           
 38665                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38666  00505A  5031               	movf	i2SwTimersInterrupt@i,w,c
 38667  00505C  0D08               	mullw	8
 38668  00505E  0E00               	movlw	low _swTimers
 38669  005060  24F3               	addwf	prodl,w,c
 38670  005062  6ED9               	movwf	fsr2l,c
 38671  005064  0E03               	movlw	high _swTimers
 38672  005066  20F4               	addwfc	prodh,w,c
 38673  005068  6EDA               	movwf	fsr2h,c
 38674  00506A  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38675  00506C  5CDE               	subwf	postinc2,w,c
 38676  00506E  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38677  005070  58DE               	subwfb	postinc2,w,c
 38678  005072  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38679  005074  58DE               	subwfb	postinc2,w,c
 38680  005076  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38681  005078  58DE               	subwfb	postinc2,w,c
 38682  00507A  B0D8               	btfsc	status,0,c
 38683  00507C  D010               	goto	i2l300
 38684                           
 38685                           ;sw_timer.c: 313: {
 38686                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38687  00507E  5031               	movf	i2SwTimersInterrupt@i,w,c
 38688  005080  0D08               	mullw	8
 38689  005082  0E00               	movlw	low _swTimers
 38690  005084  24F3               	addwf	prodl,w,c
 38691  005086  6ED9               	movwf	fsr2l,c
 38692  005088  0E03               	movlw	high _swTimers
 38693  00508A  20F4               	addwfc	prodh,w,c
 38694  00508C  6EDA               	movwf	fsr2h,c
 38695  00508E  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38696  005092  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38697  005096  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38698  00509A  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38699  00509E                     i2l300:
 38700  00509E  2A31               	incf	i2SwTimersInterrupt@i,f,c
 38701  0050A0                     i2l295:
 38702  0050A0  0100               	movlb	0	; () banked
 38703  0050A2  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38704  0050A4  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 38705  0050A6  A0D8               	btfss	status,0,c
 38706  0050A8  D79A               	goto	i2l296
 38707                           
 38708                           ; BSR set to: 0
 38709                           ;sw_timer.c: 315: }
 38710                           ;sw_timer.c: 316: }
 38711                           ;sw_timer.c: 317: }
 38712                           ;sw_timer.c: 318: }
 38713                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38714  0050AA  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38715  0050AE  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38716  0050B2  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38717  0050B6  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38718                           
 38719                           ; BSR set to: 0
 38720  0050BA  0012               	return		;funcret
 38721  0050BC                     __end_ofi2_SwTimersInterrupt:
 38722                           	opt stack 0
 38723                           tosu	equ	0xFFF
 38724                           tosh	equ	0xFFE
 38725                           tosl	equ	0xFFD
 38726                           pclatu	equ	0xFFB
 38727                           pclath	equ	0xFFA
 38728                           tblptru	equ	0xFF8
 38729                           tblptrh	equ	0xFF7
 38730                           tblptrl	equ	0xFF6
 38731                           tablat	equ	0xFF5
 38732                           prodh	equ	0xFF4
 38733                           prodl	equ	0xFF3
 38734                           intcon	equ	0xFF2
 38735                           intcon2	equ	0xFF1
 38736                           intcon3	equ	0xFF0
 38737                           indf0	equ	0xFEF
 38738                           postinc0	equ	0xFEE
 38739                           plusw0	equ	0xFEB
 38740                           fsr0h	equ	0xFEA
 38741                           fsr0l	equ	0xFE9
 38742                           wreg	equ	0xFE8
 38743                           postinc1	equ	0xFE6
 38744                           postdec1	equ	0xFE5
 38745                           plusw1	equ	0xFE3
 38746                           fsr1h	equ	0xFE2
 38747                           fsr1l	equ	0xFE1
 38748                           indf2	equ	0xFDF
 38749                           postinc2	equ	0xFDE
 38750                           postdec2	equ	0xFDD
 38751                           plusw2	equ	0xFDB
 38752                           fsr2h	equ	0xFDA
 38753                           fsr2l	equ	0xFD9
 38754                           status	equ	0xFD8
 38755                           
 38756 ;; *************** function i2_TMR_GetDeltaTime *****************
 38757 ;; Defined at:
 38758 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38759 ;; Parameters:    Size  Location     Type
 38760 ;;		None
 38761 ;; Auto vars:     Size  Location     Type
 38762 ;;		None
 38763 ;; Return value:  Size  Location     Type
 38764 ;;                  4    8[COMRAM] unsigned long 
 38765 ;; Registers used:
 38766 ;;		wreg, status,2, status,0, cstack
 38767 ;; Tracked objects:
 38768 ;;		On entry : 0/0
 38769 ;;		On exit  : 0/0
 38770 ;;		Unchanged: 0/0
 38771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38774 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38775 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38776 ;;Total ram usage:       24 bytes
 38777 ;; Hardware stack levels used:    1
 38778 ;; Hardware stack levels required when called:    1
 38779 ;; This function calls:
 38780 ;;		i2_TMR1_ReadTimer
 38781 ;; This function is called by:
 38782 ;;		i2_SwTimersInterrupt
 38783 ;; This function uses a non-reentrant model
 38784 ;;
 38785                           
 38786                           	psect	text199
 38787  0040EC                     __ptext199:
 38788                           	opt stack 0
 38789  0040EC                     i2_TMR_GetDeltaTime:
 38790                           	opt stack 12
 38791                           
 38792                           ;sw_timer.c: 90: static uint32_t retVal;
 38793                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38794                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38795                           
 38796                           ; BSR set to: 0
 38797                           ;incstack = 0
 38798  0040EC  EC8D  F03D         	call	i2_TMR1_ReadTimer	;wreg free
 38799  0040F0  C001  F044         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38800  0040F4  C002  F045         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38801                           
 38802                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38803  0040F8  0447               	decf	_timerOverflow,w,c	;volatile
 38804  0040FA  A4D8               	btfss	status,2,c
 38805  0040FC  D068               	goto	i2l228
 38806                           
 38807                           ;sw_timer.c: 96: {
 38808                           ;sw_timer.c: 97: timerOverflow = 0;
 38809  0040FE  0E00               	movlw	0
 38810  004100  6E47               	movwf	_timerOverflow,c	;volatile
 38811                           
 38812                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38813  004102  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 38814  004106  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 38815  00410A  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 38816  00410E  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 38817  004112  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 38818  004114  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 38819  004116  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 38820  004118  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 38821  00411A  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 38822  00411C  0E00               	movlw	0
 38823  00411E  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 38824  004120  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 38825  004122  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 38826  004124  0100               	movlb	0	; () banked
 38827  004126  51FD               	movf	_reloadVal& (0+255),w,b	;volatile
 38828  004128  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38829  00412A  51FE               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38830  00412C  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38831  00412E  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38832  004130  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38833  004132  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 38834  004134  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 38835  004136  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 38836  004138  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 38837  00413A  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 38838  00413C  0E00               	movlw	0
 38839  00413E  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 38840  004140  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 38841  004142  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 38842  004144  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 38843  004146  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38844  004148  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 38845  00414A  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 38846  00414C  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38847  00414E  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 38848  004150  0E00               	movlw	0
 38849  004152  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38850  004154  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 38851  004156  0E00               	movlw	0
 38852  004158  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38853  00415A  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 38854  00415C  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 38855  00415E  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 38856  004160  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 38857  004162  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 38858  004164  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 38859  004166  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 38860  004168  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 38861  00416A  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 38862  00416C  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 38863  00416E  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 38864  004170  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 38865  004172  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 38866  004174  5040               	movf	_ticksAdded,w,c	;volatile
 38867  004176  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 38868  004178  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 38869  00417A  5041               	movf	_ticksAdded+1,w,c	;volatile
 38870  00417C  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 38871  00417E  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 38872  004180  5042               	movf	_ticksAdded+2,w,c	;volatile
 38873  004182  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 38874  004184  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 38875  004186  5043               	movf	_ticksAdded+3,w,c	;volatile
 38876  004188  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 38877  00418A  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 38878  00418C  0E00               	movlw	0
 38879  00418E  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 38880  004190  0101               	movlb	1	; () banked
 38881  004192  6F69               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38882  004194  0E00               	movlw	0
 38883  004196  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 38884  004198  6F6A               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38885  00419A  0E01               	movlw	1
 38886  00419C  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 38887  00419E  6F6B               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38888  0041A0  0E00               	movlw	0
 38889  0041A2  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 38890  0041A4  6F6C               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38891                           
 38892                           ; BSR set to: 1
 38893                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38894  0041A6  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38895  0041AA  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38896  0041AE  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 38897  0041B0  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 38898                           
 38899                           ; BSR set to: 1
 38900                           ;sw_timer.c: 100: ticksAdded = 0;
 38901  0041B2  0E00               	movlw	0
 38902  0041B4  6E40               	movwf	_ticksAdded,c	;volatile
 38903  0041B6  0E00               	movlw	0
 38904  0041B8  6E41               	movwf	_ticksAdded+1,c	;volatile
 38905  0041BA  0E00               	movlw	0
 38906  0041BC  6E42               	movwf	_ticksAdded+2,c	;volatile
 38907  0041BE  0E00               	movlw	0
 38908  0041C0  6E43               	movwf	_ticksAdded+3,c	;volatile
 38909                           
 38910                           ; BSR set to: 1
 38911                           ;sw_timer.c: 101: reloadVal = 0;
 38912  0041C2  0E00               	movlw	0
 38913  0041C4  0100               	movlb	0	; () banked
 38914  0041C6  6FFE               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38915  0041C8  0E00               	movlw	0
 38916  0041CA  6FFD               	movwf	_reloadVal& (0+255),b	;volatile
 38917                           
 38918                           ;sw_timer.c: 102: }
 38919  0041CC  D03E               	goto	i2l229
 38920  0041CE                     i2l228:
 38921                           
 38922                           ;sw_timer.c: 103: else
 38923                           ;sw_timer.c: 104: {
 38924                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38925                           
 38926                           ; BSR set to: 0
 38927  0041CE  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 38928  0041D2  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 38929  0041D6  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 38930  0041DA  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 38931  0041DE  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 38932  0041E0  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 38933  0041E2  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 38934  0041E4  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 38935  0041E6  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 38936  0041E8  0E00               	movlw	0
 38937  0041EA  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 38938  0041EC  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 38939  0041EE  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 38940  0041F0  C0FD  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 38941  0041F4  C0FE  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 38942  0041F8  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 38943  0041FA  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 38944  0041FC  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 38945  0041FE  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 38946  004200  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 38947  004202  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 38948  004204  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 38949  004206  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 38950  004208  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 38951  00420A  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 38952  00420C  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38953  00420E  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 38954  004210  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 38955  004212  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38956  004214  0E00               	movlw	0
 38957  004216  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 38958  004218  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 38959  00421A  0E00               	movlw	0
 38960  00421C  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 38961  00421E  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 38962  004220  5040               	movf	_ticksAdded,w,c	;volatile
 38963  004222  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 38964  004224  0101               	movlb	1	; () banked
 38965  004226  6F69               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38966  004228  5041               	movf	_ticksAdded+1,w,c	;volatile
 38967  00422A  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38968  00422C  6F6A               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38969  00422E  5042               	movf	_ticksAdded+2,w,c	;volatile
 38970  004230  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 38971  004232  6F6B               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38972  004234  5043               	movf	_ticksAdded+3,w,c	;volatile
 38973  004236  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 38974  004238  6F6C               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38975                           
 38976                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38977  00423A  5169               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38978  00423C  263C               	addwf	_ticksAccounted,f,c	;volatile
 38979  00423E  516A               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38980  004240  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 38981  004242  516B               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38982  004244  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 38983  004246  516C               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38984  004248  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 38985  00424A                     i2l229:
 38986                           
 38987                           ;sw_timer.c: 107: }
 38988                           ;sw_timer.c: 109: return retVal;
 38989                           
 38990                           ; BSR set to: 1
 38991  00424A  C169  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 38992  00424E  C16A  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 38993  004252  C16B  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 38994  004256  C16C  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 38995  00425A  0012               	return	
 38996  00425C                     __end_ofi2_TMR_GetDeltaTime:
 38997                           	opt stack 0
 38998                           tosu	equ	0xFFF
 38999                           tosh	equ	0xFFE
 39000                           tosl	equ	0xFFD
 39001                           pclatu	equ	0xFFB
 39002                           pclath	equ	0xFFA
 39003                           tblptru	equ	0xFF8
 39004                           tblptrh	equ	0xFF7
 39005                           tblptrl	equ	0xFF6
 39006                           tablat	equ	0xFF5
 39007                           prodh	equ	0xFF4
 39008                           prodl	equ	0xFF3
 39009                           intcon	equ	0xFF2
 39010                           intcon2	equ	0xFF1
 39011                           intcon3	equ	0xFF0
 39012                           indf0	equ	0xFEF
 39013                           postinc0	equ	0xFEE
 39014                           plusw0	equ	0xFEB
 39015                           fsr0h	equ	0xFEA
 39016                           fsr0l	equ	0xFE9
 39017                           wreg	equ	0xFE8
 39018                           postinc1	equ	0xFE6
 39019                           postdec1	equ	0xFE5
 39020                           plusw1	equ	0xFE3
 39021                           fsr1h	equ	0xFE2
 39022                           fsr1l	equ	0xFE1
 39023                           indf2	equ	0xFDF
 39024                           postinc2	equ	0xFDE
 39025                           postdec2	equ	0xFDD
 39026                           plusw2	equ	0xFDB
 39027                           fsr2h	equ	0xFDA
 39028                           fsr2l	equ	0xFD9
 39029                           status	equ	0xFD8
 39030                           
 39031 ;; *************** function i2_TMR1_ReadTimer *****************
 39032 ;; Defined at:
 39033 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 39034 ;; Parameters:    Size  Location     Type
 39035 ;;		None
 39036 ;; Auto vars:     Size  Location     Type
 39037 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39038 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39039 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39040 ;; Return value:  Size  Location     Type
 39041 ;;                  2    0[COMRAM] unsigned int 
 39042 ;; Registers used:
 39043 ;;		wreg, status,2
 39044 ;; Tracked objects:
 39045 ;;		On entry : 0/0
 39046 ;;		On exit  : 0/0
 39047 ;;		Unchanged: 0/0
 39048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39050 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39052 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39053 ;;Total ram usage:        8 bytes
 39054 ;; Hardware stack levels used:    1
 39055 ;; This function calls:
 39056 ;;		Nothing
 39057 ;; This function is called by:
 39058 ;;		i2_TMR_GetDeltaTime
 39059 ;;		i2_TMR_SwapTimer
 39060 ;; This function uses a non-reentrant model
 39061 ;;
 39062                           
 39063                           	psect	text200
 39064  007B1A                     __ptext200:
 39065                           	opt stack 0
 39066  007B1A                     i2_TMR1_ReadTimer:
 39067                           	opt stack 13
 39068                           
 39069                           ;tmr1.c: 107: uint16_t readVal;
 39070                           ;tmr1.c: 108: uint8_t readValHigh;
 39071                           ;tmr1.c: 109: uint8_t readValLow;
 39072                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 39073                           
 39074                           ;incstack = 0
 39075  007B1A  82CD               	bsf	4045,1,c	;volatile
 39076                           
 39077                           ;tmr1.c: 113: readValLow = TMR1L;
 39078  007B1C  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39079                           
 39080                           ;tmr1.c: 114: readValHigh = TMR1H;
 39081  007B20  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39082                           
 39083                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39084  007B24  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39085  007B26  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39086  007B28  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39087  007B2A  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39088  007B2C  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39089                           
 39090                           ;tmr1.c: 118: return readVal;
 39091  007B30  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39092  007B34  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39093  007B38  0012               	return	
 39094  007B3A                     __end_ofi2_TMR1_ReadTimer:
 39095                           	opt stack 0
 39096                           tosu	equ	0xFFF
 39097                           tosh	equ	0xFFE
 39098                           tosl	equ	0xFFD
 39099                           pclatu	equ	0xFFB
 39100                           pclath	equ	0xFFA
 39101                           tblptru	equ	0xFF8
 39102                           tblptrh	equ	0xFF7
 39103                           tblptrl	equ	0xFF6
 39104                           tablat	equ	0xFF5
 39105                           prodh	equ	0xFF4
 39106                           prodl	equ	0xFF3
 39107                           intcon	equ	0xFF2
 39108                           intcon2	equ	0xFF1
 39109                           intcon3	equ	0xFF0
 39110                           indf0	equ	0xFEF
 39111                           postinc0	equ	0xFEE
 39112                           plusw0	equ	0xFEB
 39113                           fsr0h	equ	0xFEA
 39114                           fsr0l	equ	0xFE9
 39115                           wreg	equ	0xFE8
 39116                           postinc1	equ	0xFE6
 39117                           postdec1	equ	0xFE5
 39118                           plusw1	equ	0xFE3
 39119                           fsr1h	equ	0xFE2
 39120                           fsr1l	equ	0xFE1
 39121                           indf2	equ	0xFDF
 39122                           postinc2	equ	0xFDE
 39123                           postdec2	equ	0xFDD
 39124                           plusw2	equ	0xFDB
 39125                           fsr2h	equ	0xFDA
 39126                           fsr2l	equ	0xFD9
 39127                           status	equ	0xFD8
 39128                           
 39129 ;; *************** function _PIN_MANAGER_IOC *****************
 39130 ;; Defined at:
 39131 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
 39132 ;; Parameters:    Size  Location     Type
 39133 ;;		None
 39134 ;; Auto vars:     Size  Location     Type
 39135 ;;		None
 39136 ;; Return value:  Size  Location     Type
 39137 ;;                  1    wreg      void 
 39138 ;; Registers used:
 39139 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39140 ;; Tracked objects:
 39141 ;;		On entry : 0/0
 39142 ;;		On exit  : 0/0
 39143 ;;		Unchanged: 0/0
 39144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39149 ;;Total ram usage:        0 bytes
 39150 ;; Hardware stack levels used:    1
 39151 ;; Hardware stack levels required when called:    2
 39152 ;; This function calls:
 39153 ;;		_IOCB4_ISR
 39154 ;; This function is called by:
 39155 ;;		_INTERRUPT_InterruptManager
 39156 ;; This function uses a non-reentrant model
 39157 ;;
 39158                           
 39159                           	psect	text201
 39160  007E42                     __ptext201:
 39161                           	opt stack 0
 39162  007E42                     _PIN_MANAGER_IOC:
 39163                           	opt stack 15
 39164                           
 39165                           ;pin_manager.c: 116: if(IOCBbits.IOCB4 == 1)
 39166                           
 39167                           ;incstack = 0
 39168  007E42  B862               	btfsc	3938,4,c	;volatile
 39169                           
 39170                           ;pin_manager.c: 117: {
 39171                           ;pin_manager.c: 118: IOCB4_ISR();
 39172  007E44  EC9D  F03D         	call	_IOCB4_ISR	;wreg free
 39173                           
 39174                           ;pin_manager.c: 119: }
 39175                           ;pin_manager.c: 121: INTCONbits.RBIF = 0;
 39176  007E48  90F2               	bcf	intcon,0,c	;volatile
 39177  007E4A  0012               	return		;funcret
 39178  007E4C                     __end_of_PIN_MANAGER_IOC:
 39179                           	opt stack 0
 39180                           tosu	equ	0xFFF
 39181                           tosh	equ	0xFFE
 39182                           tosl	equ	0xFFD
 39183                           pclatu	equ	0xFFB
 39184                           pclath	equ	0xFFA
 39185                           tblptru	equ	0xFF8
 39186                           tblptrh	equ	0xFF7
 39187                           tblptrl	equ	0xFF6
 39188                           tablat	equ	0xFF5
 39189                           prodh	equ	0xFF4
 39190                           prodl	equ	0xFF3
 39191                           intcon	equ	0xFF2
 39192                           intcon2	equ	0xFF1
 39193                           intcon3	equ	0xFF0
 39194                           indf0	equ	0xFEF
 39195                           postinc0	equ	0xFEE
 39196                           plusw0	equ	0xFEB
 39197                           fsr0h	equ	0xFEA
 39198                           fsr0l	equ	0xFE9
 39199                           wreg	equ	0xFE8
 39200                           postinc1	equ	0xFE6
 39201                           postdec1	equ	0xFE5
 39202                           plusw1	equ	0xFE3
 39203                           fsr1h	equ	0xFE2
 39204                           fsr1l	equ	0xFE1
 39205                           indf2	equ	0xFDF
 39206                           postinc2	equ	0xFDE
 39207                           postdec2	equ	0xFDD
 39208                           plusw2	equ	0xFDB
 39209                           fsr2h	equ	0xFDA
 39210                           fsr2l	equ	0xFD9
 39211                           status	equ	0xFD8
 39212                           
 39213 ;; *************** function _IOCB4_ISR *****************
 39214 ;; Defined at:
 39215 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 39216 ;; Parameters:    Size  Location     Type
 39217 ;;		None
 39218 ;; Auto vars:     Size  Location     Type
 39219 ;;		None
 39220 ;; Return value:  Size  Location     Type
 39221 ;;                  1    wreg      void 
 39222 ;; Registers used:
 39223 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39224 ;; Tracked objects:
 39225 ;;		On entry : 0/0
 39226 ;;		On exit  : 0/0
 39227 ;;		Unchanged: 0/0
 39228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39233 ;;Total ram usage:        0 bytes
 39234 ;; Hardware stack levels used:    1
 39235 ;; Hardware stack levels required when called:    1
 39236 ;; This function calls:
 39237 ;;		Absolute function
 39238 ;;		_DIO2_ISR_Lora
 39239 ;;		_IOCB4_DefaultInterruptHandler
 39240 ;; This function is called by:
 39241 ;;		_PIN_MANAGER_IOC
 39242 ;; This function uses a non-reentrant model
 39243 ;;
 39244                           
 39245                           	psect	text202
 39246  007B3A                     __ptext202:
 39247                           	opt stack 0
 39248  007B3A                     _IOCB4_ISR:
 39249                           	opt stack 15
 39250                           
 39251                           ;pin_manager.c: 132: if(IOCB4_InterruptHandler)
 39252                           
 39253                           ;incstack = 0
 39254  007B3A  0101               	movlb	1	; () banked
 39255  007B3C  51F6               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39256  007B3E  11F7               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39257  007B40  B4D8               	btfsc	status,2,c
 39258  007B42  0012               	return	
 39259                           
 39260                           ; BSR set to: 1
 39261                           ;pin_manager.c: 133: {
 39262                           ;pin_manager.c: 134: IOCB4_InterruptHandler();
 39263  007B44  D801               	call	i2u1411_48
 39264  007B46  0012               	return	
 39265  007B48                     i2u1411_48:
 39266  007B48  0005               	push	
 39267  007B4A  6EFA               	movwf	pclath,c
 39268  007B4C  51F6               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39269  007B4E  6EFD               	movwf	tosl,c
 39270  007B50  51F7               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39271  007B52  6EFE               	movwf	tosh,c
 39272  007B54  6AFF               	clrf	tosu,c
 39273  007B56  50FA               	movf	pclath,w,c
 39274  007B58  0012               	return		;indir
 39275  007B5A                     __end_of_IOCB4_ISR:
 39276                           	opt stack 0
 39277                           tosu	equ	0xFFF
 39278                           tosh	equ	0xFFE
 39279                           tosl	equ	0xFFD
 39280                           pclatu	equ	0xFFB
 39281                           pclath	equ	0xFFA
 39282                           tblptru	equ	0xFF8
 39283                           tblptrh	equ	0xFF7
 39284                           tblptrl	equ	0xFF6
 39285                           tablat	equ	0xFF5
 39286                           prodh	equ	0xFF4
 39287                           prodl	equ	0xFF3
 39288                           intcon	equ	0xFF2
 39289                           intcon2	equ	0xFF1
 39290                           intcon3	equ	0xFF0
 39291                           indf0	equ	0xFEF
 39292                           postinc0	equ	0xFEE
 39293                           plusw0	equ	0xFEB
 39294                           fsr0h	equ	0xFEA
 39295                           fsr0l	equ	0xFE9
 39296                           wreg	equ	0xFE8
 39297                           postinc1	equ	0xFE6
 39298                           postdec1	equ	0xFE5
 39299                           plusw1	equ	0xFE3
 39300                           fsr1h	equ	0xFE2
 39301                           fsr1l	equ	0xFE1
 39302                           indf2	equ	0xFDF
 39303                           postinc2	equ	0xFDE
 39304                           postdec2	equ	0xFDD
 39305                           plusw2	equ	0xFDB
 39306                           fsr2h	equ	0xFDA
 39307                           fsr2l	equ	0xFD9
 39308                           status	equ	0xFD8
 39309                           
 39310 ;; *************** function _DIO2_ISR_Lora *****************
 39311 ;; Defined at:
 39312 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39313 ;; Parameters:    Size  Location     Type
 39314 ;;		None
 39315 ;; Auto vars:     Size  Location     Type
 39316 ;;		None
 39317 ;; Return value:  Size  Location     Type
 39318 ;;                  1    wreg      void 
 39319 ;; Registers used:
 39320 ;;		status,2, status,0
 39321 ;; Tracked objects:
 39322 ;;		On entry : 0/0
 39323 ;;		On exit  : 0/0
 39324 ;;		Unchanged: 0/0
 39325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39330 ;;Total ram usage:        0 bytes
 39331 ;; Hardware stack levels used:    1
 39332 ;; This function calls:
 39333 ;;		Nothing
 39334 ;; This function is called by:
 39335 ;;		_DIO2_ISR_Lora_Init
 39336 ;;		_IOCB4_ISR
 39337 ;; This function uses a non-reentrant model
 39338 ;;
 39339                           
 39340                           	psect	text203
 39341  007E76                     __ptext203:
 39342                           	opt stack 0
 39343  007E76                     _DIO2_ISR_Lora:
 39344                           	opt stack 15
 39345                           
 39346                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39347                           
 39348                           ;incstack = 0
 39349  007E76  0101               	movlb	1	; () banked
 39350  007E78  8573               	bsf	_dioStatus& (0+255),2,b	;volatile
 39351                           
 39352                           ; BSR set to: 1
 39353  007E7A  0012               	return		;funcret
 39354  007E7C                     __end_of_DIO2_ISR_Lora:
 39355                           	opt stack 0
 39356                           tosu	equ	0xFFF
 39357                           tosh	equ	0xFFE
 39358                           tosl	equ	0xFFD
 39359                           pclatu	equ	0xFFB
 39360                           pclath	equ	0xFFA
 39361                           tblptru	equ	0xFF8
 39362                           tblptrh	equ	0xFF7
 39363                           tblptrl	equ	0xFF6
 39364                           tablat	equ	0xFF5
 39365                           prodh	equ	0xFF4
 39366                           prodl	equ	0xFF3
 39367                           intcon	equ	0xFF2
 39368                           intcon2	equ	0xFF1
 39369                           intcon3	equ	0xFF0
 39370                           indf0	equ	0xFEF
 39371                           postinc0	equ	0xFEE
 39372                           plusw0	equ	0xFEB
 39373                           fsr0h	equ	0xFEA
 39374                           fsr0l	equ	0xFE9
 39375                           wreg	equ	0xFE8
 39376                           postinc1	equ	0xFE6
 39377                           postdec1	equ	0xFE5
 39378                           plusw1	equ	0xFE3
 39379                           fsr1h	equ	0xFE2
 39380                           fsr1l	equ	0xFE1
 39381                           indf2	equ	0xFDF
 39382                           postinc2	equ	0xFDE
 39383                           postdec2	equ	0xFDD
 39384                           plusw2	equ	0xFDB
 39385                           fsr2h	equ	0xFDA
 39386                           fsr2l	equ	0xFD9
 39387                           status	equ	0xFD8
 39388                           
 39389 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39390 ;; Defined at:
 39391 ;;		line 148 in file "mcc_generated_files/pin_manager.c"
 39392 ;; Parameters:    Size  Location     Type
 39393 ;;		None
 39394 ;; Auto vars:     Size  Location     Type
 39395 ;;		None
 39396 ;; Return value:  Size  Location     Type
 39397 ;;                  1    wreg      void 
 39398 ;; Registers used:
 39399 ;;		None
 39400 ;; Tracked objects:
 39401 ;;		On entry : 0/0
 39402 ;;		On exit  : 0/0
 39403 ;;		Unchanged: 0/0
 39404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39409 ;;Total ram usage:        0 bytes
 39410 ;; Hardware stack levels used:    1
 39411 ;; This function calls:
 39412 ;;		Nothing
 39413 ;; This function is called by:
 39414 ;;		_PIN_MANAGER_Initialize
 39415 ;;		_IOCB4_ISR
 39416 ;; This function uses a non-reentrant model
 39417 ;;
 39418                           
 39419                           	psect	text204
 39420  007EB0                     __ptext204:
 39421                           	opt stack 0
 39422  007EB0                     _IOCB4_DefaultInterruptHandler:
 39423                           	opt stack 15
 39424                           
 39425                           ; BSR set to: 1
 39426                           ;incstack = 0
 39427  007EB0  0012               	return		;funcret
 39428  007EB2                     __end_of_IOCB4_DefaultInterruptHandler:
 39429                           	opt stack 0
 39430                           tosu	equ	0xFFF
 39431                           tosh	equ	0xFFE
 39432                           tosl	equ	0xFFD
 39433                           pclatu	equ	0xFFB
 39434                           pclath	equ	0xFFA
 39435                           tblptru	equ	0xFF8
 39436                           tblptrh	equ	0xFF7
 39437                           tblptrl	equ	0xFF6
 39438                           tablat	equ	0xFF5
 39439                           prodh	equ	0xFF4
 39440                           prodl	equ	0xFF3
 39441                           intcon	equ	0xFF2
 39442                           intcon2	equ	0xFF1
 39443                           intcon3	equ	0xFF0
 39444                           indf0	equ	0xFEF
 39445                           postinc0	equ	0xFEE
 39446                           plusw0	equ	0xFEB
 39447                           fsr0h	equ	0xFEA
 39448                           fsr0l	equ	0xFE9
 39449                           wreg	equ	0xFE8
 39450                           postinc1	equ	0xFE6
 39451                           postdec1	equ	0xFE5
 39452                           plusw1	equ	0xFE3
 39453                           fsr1h	equ	0xFE2
 39454                           fsr1l	equ	0xFE1
 39455                           indf2	equ	0xFDF
 39456                           postinc2	equ	0xFDE
 39457                           postdec2	equ	0xFDD
 39458                           plusw2	equ	0xFDB
 39459                           fsr2h	equ	0xFDA
 39460                           fsr2l	equ	0xFD9
 39461                           status	equ	0xFD8
 39462                           
 39463 ;; *************** function _INT2_ISR *****************
 39464 ;; Defined at:
 39465 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 39466 ;; Parameters:    Size  Location     Type
 39467 ;;		None
 39468 ;; Auto vars:     Size  Location     Type
 39469 ;;		None
 39470 ;; Return value:  Size  Location     Type
 39471 ;;                  1    wreg      void 
 39472 ;; Registers used:
 39473 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39474 ;; Tracked objects:
 39475 ;;		On entry : 0/0
 39476 ;;		On exit  : 0/0
 39477 ;;		Unchanged: 0/0
 39478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39483 ;;Total ram usage:        0 bytes
 39484 ;; Hardware stack levels used:    1
 39485 ;; Hardware stack levels required when called:    2
 39486 ;; This function calls:
 39487 ;;		_INT2_CallBack
 39488 ;; This function is called by:
 39489 ;;		_INTERRUPT_InterruptManager
 39490 ;; This function uses a non-reentrant model
 39491 ;;
 39492                           
 39493                           	psect	text205
 39494  007E54                     __ptext205:
 39495                           	opt stack 0
 39496  007E54                     _INT2_ISR:
 39497                           	opt stack 15
 39498                           
 39499                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 39500                           
 39501                           ;incstack = 0
 39502  007E54  92F0               	bcf	intcon3,1,c	;volatile
 39503                           
 39504                           ;ext_int.c: 64: INT2_CallBack();
 39505  007E56  ECAD  F03D         	call	_INT2_CallBack	;wreg free
 39506  007E5A  0012               	return		;funcret
 39507  007E5C                     __end_of_INT2_ISR:
 39508                           	opt stack 0
 39509                           tosu	equ	0xFFF
 39510                           tosh	equ	0xFFE
 39511                           tosl	equ	0xFFD
 39512                           pclatu	equ	0xFFB
 39513                           pclath	equ	0xFFA
 39514                           tblptru	equ	0xFF8
 39515                           tblptrh	equ	0xFF7
 39516                           tblptrl	equ	0xFF6
 39517                           tablat	equ	0xFF5
 39518                           prodh	equ	0xFF4
 39519                           prodl	equ	0xFF3
 39520                           intcon	equ	0xFF2
 39521                           intcon2	equ	0xFF1
 39522                           intcon3	equ	0xFF0
 39523                           indf0	equ	0xFEF
 39524                           postinc0	equ	0xFEE
 39525                           plusw0	equ	0xFEB
 39526                           fsr0h	equ	0xFEA
 39527                           fsr0l	equ	0xFE9
 39528                           wreg	equ	0xFE8
 39529                           postinc1	equ	0xFE6
 39530                           postdec1	equ	0xFE5
 39531                           plusw1	equ	0xFE3
 39532                           fsr1h	equ	0xFE2
 39533                           fsr1l	equ	0xFE1
 39534                           indf2	equ	0xFDF
 39535                           postinc2	equ	0xFDE
 39536                           postdec2	equ	0xFDD
 39537                           plusw2	equ	0xFDB
 39538                           fsr2h	equ	0xFDA
 39539                           fsr2l	equ	0xFD9
 39540                           status	equ	0xFD8
 39541                           
 39542 ;; *************** function _INT2_CallBack *****************
 39543 ;; Defined at:
 39544 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 39545 ;; Parameters:    Size  Location     Type
 39546 ;;		None
 39547 ;; Auto vars:     Size  Location     Type
 39548 ;;		None
 39549 ;; Return value:  Size  Location     Type
 39550 ;;                  1    wreg      void 
 39551 ;; Registers used:
 39552 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39553 ;; Tracked objects:
 39554 ;;		On entry : 0/0
 39555 ;;		On exit  : 0/0
 39556 ;;		Unchanged: 0/0
 39557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39562 ;;Total ram usage:        0 bytes
 39563 ;; Hardware stack levels used:    1
 39564 ;; Hardware stack levels required when called:    1
 39565 ;; This function calls:
 39566 ;;		Absolute function
 39567 ;;		_DIO1_ISR_Lora
 39568 ;;		_INT2_DefaultInterruptHandler
 39569 ;; This function is called by:
 39570 ;;		_INT2_ISR
 39571 ;; This function uses a non-reentrant model
 39572 ;;
 39573                           
 39574                           	psect	text206
 39575  007B5A                     __ptext206:
 39576                           	opt stack 0
 39577  007B5A                     _INT2_CallBack:
 39578                           	opt stack 15
 39579                           
 39580                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 39581                           
 39582                           ;incstack = 0
 39583  007B5A  0101               	movlb	1	; () banked
 39584  007B5C  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39585  007B5E  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39586  007B60  B4D8               	btfsc	status,2,c
 39587  007B62  0012               	return	
 39588                           
 39589                           ; BSR set to: 1
 39590                           ;ext_int.c: 72: {
 39591                           ;ext_int.c: 73: INT2_InterruptHandler();
 39592  007B64  D801               	call	i2u1409_48
 39593  007B66  0012               	return	
 39594  007B68                     i2u1409_48:
 39595  007B68  0005               	push	
 39596  007B6A  6EFA               	movwf	pclath,c
 39597  007B6C  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39598  007B6E  6EFD               	movwf	tosl,c
 39599  007B70  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39600  007B72  6EFE               	movwf	tosh,c
 39601  007B74  6AFF               	clrf	tosu,c
 39602  007B76  50FA               	movf	pclath,w,c
 39603  007B78  0012               	return		;indir
 39604  007B7A                     __end_of_INT2_CallBack:
 39605                           	opt stack 0
 39606                           tosu	equ	0xFFF
 39607                           tosh	equ	0xFFE
 39608                           tosl	equ	0xFFD
 39609                           pclatu	equ	0xFFB
 39610                           pclath	equ	0xFFA
 39611                           tblptru	equ	0xFF8
 39612                           tblptrh	equ	0xFF7
 39613                           tblptrl	equ	0xFF6
 39614                           tablat	equ	0xFF5
 39615                           prodh	equ	0xFF4
 39616                           prodl	equ	0xFF3
 39617                           intcon	equ	0xFF2
 39618                           intcon2	equ	0xFF1
 39619                           intcon3	equ	0xFF0
 39620                           indf0	equ	0xFEF
 39621                           postinc0	equ	0xFEE
 39622                           plusw0	equ	0xFEB
 39623                           fsr0h	equ	0xFEA
 39624                           fsr0l	equ	0xFE9
 39625                           wreg	equ	0xFE8
 39626                           postinc1	equ	0xFE6
 39627                           postdec1	equ	0xFE5
 39628                           plusw1	equ	0xFE3
 39629                           fsr1h	equ	0xFE2
 39630                           fsr1l	equ	0xFE1
 39631                           indf2	equ	0xFDF
 39632                           postinc2	equ	0xFDE
 39633                           postdec2	equ	0xFDD
 39634                           plusw2	equ	0xFDB
 39635                           fsr2h	equ	0xFDA
 39636                           fsr2l	equ	0xFD9
 39637                           status	equ	0xFD8
 39638                           
 39639 ;; *************** function _DIO1_ISR_Lora *****************
 39640 ;; Defined at:
 39641 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39642 ;; Parameters:    Size  Location     Type
 39643 ;;		None
 39644 ;; Auto vars:     Size  Location     Type
 39645 ;;		None
 39646 ;; Return value:  Size  Location     Type
 39647 ;;                  1    wreg      void 
 39648 ;; Registers used:
 39649 ;;		status,2, status,0
 39650 ;; Tracked objects:
 39651 ;;		On entry : 0/0
 39652 ;;		On exit  : 0/0
 39653 ;;		Unchanged: 0/0
 39654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39659 ;;Total ram usage:        0 bytes
 39660 ;; Hardware stack levels used:    1
 39661 ;; This function calls:
 39662 ;;		Nothing
 39663 ;; This function is called by:
 39664 ;;		_DIO1_ISR_Lora_Init
 39665 ;;		_INT2_CallBack
 39666 ;; This function uses a non-reentrant model
 39667 ;;
 39668                           
 39669                           	psect	text207
 39670  007E7C                     __ptext207:
 39671                           	opt stack 0
 39672  007E7C                     _DIO1_ISR_Lora:
 39673                           	opt stack 15
 39674                           
 39675                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39676                           
 39677                           ;incstack = 0
 39678  007E7C  0101               	movlb	1	; () banked
 39679  007E7E  8373               	bsf	_dioStatus& (0+255),1,b	;volatile
 39680                           
 39681                           ; BSR set to: 1
 39682  007E80  0012               	return		;funcret
 39683  007E82                     __end_of_DIO1_ISR_Lora:
 39684                           	opt stack 0
 39685                           tosu	equ	0xFFF
 39686                           tosh	equ	0xFFE
 39687                           tosl	equ	0xFFD
 39688                           pclatu	equ	0xFFB
 39689                           pclath	equ	0xFFA
 39690                           tblptru	equ	0xFF8
 39691                           tblptrh	equ	0xFF7
 39692                           tblptrl	equ	0xFF6
 39693                           tablat	equ	0xFF5
 39694                           prodh	equ	0xFF4
 39695                           prodl	equ	0xFF3
 39696                           intcon	equ	0xFF2
 39697                           intcon2	equ	0xFF1
 39698                           intcon3	equ	0xFF0
 39699                           indf0	equ	0xFEF
 39700                           postinc0	equ	0xFEE
 39701                           plusw0	equ	0xFEB
 39702                           fsr0h	equ	0xFEA
 39703                           fsr0l	equ	0xFE9
 39704                           wreg	equ	0xFE8
 39705                           postinc1	equ	0xFE6
 39706                           postdec1	equ	0xFE5
 39707                           plusw1	equ	0xFE3
 39708                           fsr1h	equ	0xFE2
 39709                           fsr1l	equ	0xFE1
 39710                           indf2	equ	0xFDF
 39711                           postinc2	equ	0xFDE
 39712                           postdec2	equ	0xFDD
 39713                           plusw2	equ	0xFDB
 39714                           fsr2h	equ	0xFDA
 39715                           fsr2l	equ	0xFD9
 39716                           status	equ	0xFD8
 39717                           
 39718 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39719 ;; Defined at:
 39720 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 39721 ;; Parameters:    Size  Location     Type
 39722 ;;		None
 39723 ;; Auto vars:     Size  Location     Type
 39724 ;;		None
 39725 ;; Return value:  Size  Location     Type
 39726 ;;                  1    wreg      void 
 39727 ;; Registers used:
 39728 ;;		None
 39729 ;; Tracked objects:
 39730 ;;		On entry : 0/0
 39731 ;;		On exit  : 0/0
 39732 ;;		Unchanged: 0/0
 39733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39738 ;;Total ram usage:        0 bytes
 39739 ;; Hardware stack levels used:    1
 39740 ;; This function calls:
 39741 ;;		Nothing
 39742 ;; This function is called by:
 39743 ;;		_EXT_INT_Initialize
 39744 ;;		_INT2_CallBack
 39745 ;; This function uses a non-reentrant model
 39746 ;;
 39747                           
 39748                           	psect	text208
 39749  007EB2                     __ptext208:
 39750                           	opt stack 0
 39751  007EB2                     _INT2_DefaultInterruptHandler:
 39752                           	opt stack 15
 39753                           
 39754                           ; BSR set to: 1
 39755                           ;incstack = 0
 39756  007EB2  0012               	return		;funcret
 39757  007EB4                     __end_of_INT2_DefaultInterruptHandler:
 39758                           	opt stack 0
 39759                           tosu	equ	0xFFF
 39760                           tosh	equ	0xFFE
 39761                           tosl	equ	0xFFD
 39762                           pclatu	equ	0xFFB
 39763                           pclath	equ	0xFFA
 39764                           tblptru	equ	0xFF8
 39765                           tblptrh	equ	0xFF7
 39766                           tblptrl	equ	0xFF6
 39767                           tablat	equ	0xFF5
 39768                           prodh	equ	0xFF4
 39769                           prodl	equ	0xFF3
 39770                           intcon	equ	0xFF2
 39771                           intcon2	equ	0xFF1
 39772                           intcon3	equ	0xFF0
 39773                           indf0	equ	0xFEF
 39774                           postinc0	equ	0xFEE
 39775                           plusw0	equ	0xFEB
 39776                           fsr0h	equ	0xFEA
 39777                           fsr0l	equ	0xFE9
 39778                           wreg	equ	0xFE8
 39779                           postinc1	equ	0xFE6
 39780                           postdec1	equ	0xFE5
 39781                           plusw1	equ	0xFE3
 39782                           fsr1h	equ	0xFE2
 39783                           fsr1l	equ	0xFE1
 39784                           indf2	equ	0xFDF
 39785                           postinc2	equ	0xFDE
 39786                           postdec2	equ	0xFDD
 39787                           plusw2	equ	0xFDB
 39788                           fsr2h	equ	0xFDA
 39789                           fsr2l	equ	0xFD9
 39790                           status	equ	0xFD8
 39791                           
 39792 ;; *************** function _INT1_ISR *****************
 39793 ;; Defined at:
 39794 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 39795 ;; Parameters:    Size  Location     Type
 39796 ;;		None
 39797 ;; Auto vars:     Size  Location     Type
 39798 ;;		None
 39799 ;; Return value:  Size  Location     Type
 39800 ;;                  1    wreg      void 
 39801 ;; Registers used:
 39802 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39803 ;; Tracked objects:
 39804 ;;		On entry : 0/0
 39805 ;;		On exit  : 0/0
 39806 ;;		Unchanged: 0/0
 39807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39812 ;;Total ram usage:        0 bytes
 39813 ;; Hardware stack levels used:    1
 39814 ;; Hardware stack levels required when called:    2
 39815 ;; This function calls:
 39816 ;;		_INT1_CallBack
 39817 ;; This function is called by:
 39818 ;;		_INTERRUPT_InterruptManager
 39819 ;; This function uses a non-reentrant model
 39820 ;;
 39821                           
 39822                           	psect	text209
 39823  007E5C                     __ptext209:
 39824                           	opt stack 0
 39825  007E5C                     _INT1_ISR:
 39826                           	opt stack 15
 39827                           
 39828                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 39829                           
 39830                           ;incstack = 0
 39831  007E5C  90F0               	bcf	intcon3,0,c	;volatile
 39832                           
 39833                           ;ext_int.c: 38: INT1_CallBack();
 39834  007E5E  ECBD  F03D         	call	_INT1_CallBack	;wreg free
 39835  007E62  0012               	return		;funcret
 39836  007E64                     __end_of_INT1_ISR:
 39837                           	opt stack 0
 39838                           tosu	equ	0xFFF
 39839                           tosh	equ	0xFFE
 39840                           tosl	equ	0xFFD
 39841                           pclatu	equ	0xFFB
 39842                           pclath	equ	0xFFA
 39843                           tblptru	equ	0xFF8
 39844                           tblptrh	equ	0xFF7
 39845                           tblptrl	equ	0xFF6
 39846                           tablat	equ	0xFF5
 39847                           prodh	equ	0xFF4
 39848                           prodl	equ	0xFF3
 39849                           intcon	equ	0xFF2
 39850                           intcon2	equ	0xFF1
 39851                           intcon3	equ	0xFF0
 39852                           indf0	equ	0xFEF
 39853                           postinc0	equ	0xFEE
 39854                           plusw0	equ	0xFEB
 39855                           fsr0h	equ	0xFEA
 39856                           fsr0l	equ	0xFE9
 39857                           wreg	equ	0xFE8
 39858                           postinc1	equ	0xFE6
 39859                           postdec1	equ	0xFE5
 39860                           plusw1	equ	0xFE3
 39861                           fsr1h	equ	0xFE2
 39862                           fsr1l	equ	0xFE1
 39863                           indf2	equ	0xFDF
 39864                           postinc2	equ	0xFDE
 39865                           postdec2	equ	0xFDD
 39866                           plusw2	equ	0xFDB
 39867                           fsr2h	equ	0xFDA
 39868                           fsr2l	equ	0xFD9
 39869                           status	equ	0xFD8
 39870                           
 39871 ;; *************** function _INT1_CallBack *****************
 39872 ;; Defined at:
 39873 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 39874 ;; Parameters:    Size  Location     Type
 39875 ;;		None
 39876 ;; Auto vars:     Size  Location     Type
 39877 ;;		None
 39878 ;; Return value:  Size  Location     Type
 39879 ;;                  1    wreg      void 
 39880 ;; Registers used:
 39881 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39882 ;; Tracked objects:
 39883 ;;		On entry : 0/0
 39884 ;;		On exit  : 0/0
 39885 ;;		Unchanged: 0/0
 39886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39891 ;;Total ram usage:        0 bytes
 39892 ;; Hardware stack levels used:    1
 39893 ;; Hardware stack levels required when called:    1
 39894 ;; This function calls:
 39895 ;;		Absolute function
 39896 ;;		_DIO0_ISR_Lora
 39897 ;;		_INT1_DefaultInterruptHandler
 39898 ;; This function is called by:
 39899 ;;		_INT1_ISR
 39900 ;; This function uses a non-reentrant model
 39901 ;;
 39902                           
 39903                           	psect	text210
 39904  007B7A                     __ptext210:
 39905                           	opt stack 0
 39906  007B7A                     _INT1_CallBack:
 39907                           	opt stack 15
 39908                           
 39909                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 39910                           
 39911                           ;incstack = 0
 39912  007B7A  0101               	movlb	1	; () banked
 39913  007B7C  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
 39914  007B7E  11FB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39915  007B80  B4D8               	btfsc	status,2,c
 39916  007B82  0012               	return	
 39917                           
 39918                           ; BSR set to: 1
 39919                           ;ext_int.c: 46: {
 39920                           ;ext_int.c: 47: INT1_InterruptHandler();
 39921  007B84  D801               	call	i2u1407_48
 39922  007B86  0012               	return	
 39923  007B88                     i2u1407_48:
 39924  007B88  0005               	push	
 39925  007B8A  6EFA               	movwf	pclath,c
 39926  007B8C  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
 39927  007B8E  6EFD               	movwf	tosl,c
 39928  007B90  51FB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39929  007B92  6EFE               	movwf	tosh,c
 39930  007B94  6AFF               	clrf	tosu,c
 39931  007B96  50FA               	movf	pclath,w,c
 39932  007B98  0012               	return		;indir
 39933  007B9A                     __end_of_INT1_CallBack:
 39934                           	opt stack 0
 39935                           tosu	equ	0xFFF
 39936                           tosh	equ	0xFFE
 39937                           tosl	equ	0xFFD
 39938                           pclatu	equ	0xFFB
 39939                           pclath	equ	0xFFA
 39940                           tblptru	equ	0xFF8
 39941                           tblptrh	equ	0xFF7
 39942                           tblptrl	equ	0xFF6
 39943                           tablat	equ	0xFF5
 39944                           prodh	equ	0xFF4
 39945                           prodl	equ	0xFF3
 39946                           intcon	equ	0xFF2
 39947                           intcon2	equ	0xFF1
 39948                           intcon3	equ	0xFF0
 39949                           indf0	equ	0xFEF
 39950                           postinc0	equ	0xFEE
 39951                           plusw0	equ	0xFEB
 39952                           fsr0h	equ	0xFEA
 39953                           fsr0l	equ	0xFE9
 39954                           wreg	equ	0xFE8
 39955                           postinc1	equ	0xFE6
 39956                           postdec1	equ	0xFE5
 39957                           plusw1	equ	0xFE3
 39958                           fsr1h	equ	0xFE2
 39959                           fsr1l	equ	0xFE1
 39960                           indf2	equ	0xFDF
 39961                           postinc2	equ	0xFDE
 39962                           postdec2	equ	0xFDD
 39963                           plusw2	equ	0xFDB
 39964                           fsr2h	equ	0xFDA
 39965                           fsr2l	equ	0xFD9
 39966                           status	equ	0xFD8
 39967                           
 39968 ;; *************** function _DIO0_ISR_Lora *****************
 39969 ;; Defined at:
 39970 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39971 ;; Parameters:    Size  Location     Type
 39972 ;;		None
 39973 ;; Auto vars:     Size  Location     Type
 39974 ;;		None
 39975 ;; Return value:  Size  Location     Type
 39976 ;;                  1    wreg      void 
 39977 ;; Registers used:
 39978 ;;		status,2, status,0
 39979 ;; Tracked objects:
 39980 ;;		On entry : 0/0
 39981 ;;		On exit  : 0/0
 39982 ;;		Unchanged: 0/0
 39983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39988 ;;Total ram usage:        0 bytes
 39989 ;; Hardware stack levels used:    1
 39990 ;; This function calls:
 39991 ;;		Nothing
 39992 ;; This function is called by:
 39993 ;;		_DIO0_ISR_Lora_Init
 39994 ;;		_INT1_CallBack
 39995 ;; This function uses a non-reentrant model
 39996 ;;
 39997                           
 39998                           	psect	text211
 39999  007E82                     __ptext211:
 40000                           	opt stack 0
 40001  007E82                     _DIO0_ISR_Lora:
 40002                           	opt stack 15
 40003                           
 40004                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40005                           
 40006                           ;incstack = 0
 40007  007E82  0101               	movlb	1	; () banked
 40008  007E84  8173               	bsf	_dioStatus& (0+255),0,b	;volatile
 40009                           
 40010                           ; BSR set to: 1
 40011  007E86  0012               	return		;funcret
 40012  007E88                     __end_of_DIO0_ISR_Lora:
 40013                           	opt stack 0
 40014                           tosu	equ	0xFFF
 40015                           tosh	equ	0xFFE
 40016                           tosl	equ	0xFFD
 40017                           pclatu	equ	0xFFB
 40018                           pclath	equ	0xFFA
 40019                           tblptru	equ	0xFF8
 40020                           tblptrh	equ	0xFF7
 40021                           tblptrl	equ	0xFF6
 40022                           tablat	equ	0xFF5
 40023                           prodh	equ	0xFF4
 40024                           prodl	equ	0xFF3
 40025                           intcon	equ	0xFF2
 40026                           intcon2	equ	0xFF1
 40027                           intcon3	equ	0xFF0
 40028                           indf0	equ	0xFEF
 40029                           postinc0	equ	0xFEE
 40030                           plusw0	equ	0xFEB
 40031                           fsr0h	equ	0xFEA
 40032                           fsr0l	equ	0xFE9
 40033                           wreg	equ	0xFE8
 40034                           postinc1	equ	0xFE6
 40035                           postdec1	equ	0xFE5
 40036                           plusw1	equ	0xFE3
 40037                           fsr1h	equ	0xFE2
 40038                           fsr1l	equ	0xFE1
 40039                           indf2	equ	0xFDF
 40040                           postinc2	equ	0xFDE
 40041                           postdec2	equ	0xFDD
 40042                           plusw2	equ	0xFDB
 40043                           fsr2h	equ	0xFDA
 40044                           fsr2l	equ	0xFD9
 40045                           status	equ	0xFD8
 40046                           
 40047 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40048 ;; Defined at:
 40049 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 40050 ;; Parameters:    Size  Location     Type
 40051 ;;		None
 40052 ;; Auto vars:     Size  Location     Type
 40053 ;;		None
 40054 ;; Return value:  Size  Location     Type
 40055 ;;                  1    wreg      void 
 40056 ;; Registers used:
 40057 ;;		None
 40058 ;; Tracked objects:
 40059 ;;		On entry : 0/0
 40060 ;;		On exit  : 0/0
 40061 ;;		Unchanged: 0/0
 40062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40067 ;;Total ram usage:        0 bytes
 40068 ;; Hardware stack levels used:    1
 40069 ;; This function calls:
 40070 ;;		Nothing
 40071 ;; This function is called by:
 40072 ;;		_EXT_INT_Initialize
 40073 ;;		_INT1_CallBack
 40074 ;; This function uses a non-reentrant model
 40075 ;;
 40076                           
 40077                           	psect	text212
 40078  007EB4                     __ptext212:
 40079                           	opt stack 0
 40080  007EB4                     _INT1_DefaultInterruptHandler:
 40081                           	opt stack 15
 40082                           
 40083                           ; BSR set to: 1
 40084                           ;incstack = 0
 40085  007EB4  0012               	return		;funcret
 40086  007EB6                     __end_of_INT1_DefaultInterruptHandler:
 40087                           	opt stack 0
 40088                           tosu	equ	0xFFF
 40089                           tosh	equ	0xFFE
 40090                           tosl	equ	0xFFD
 40091                           pclatu	equ	0xFFB
 40092                           pclath	equ	0xFFA
 40093                           tblptru	equ	0xFF8
 40094                           tblptrh	equ	0xFF7
 40095                           tblptrl	equ	0xFF6
 40096                           tablat	equ	0xFF5
 40097                           prodh	equ	0xFF4
 40098                           prodl	equ	0xFF3
 40099                           intcon	equ	0xFF2
 40100                           intcon2	equ	0xFF1
 40101                           intcon3	equ	0xFF0
 40102                           indf0	equ	0xFEF
 40103                           postinc0	equ	0xFEE
 40104                           plusw0	equ	0xFEB
 40105                           fsr0h	equ	0xFEA
 40106                           fsr0l	equ	0xFE9
 40107                           wreg	equ	0xFE8
 40108                           postinc1	equ	0xFE6
 40109                           postdec1	equ	0xFE5
 40110                           plusw1	equ	0xFE3
 40111                           fsr1h	equ	0xFE2
 40112                           fsr1l	equ	0xFE1
 40113                           indf2	equ	0xFDF
 40114                           postinc2	equ	0xFDE
 40115                           postdec2	equ	0xFDD
 40116                           plusw2	equ	0xFDB
 40117                           fsr2h	equ	0xFDA
 40118                           fsr2l	equ	0xFD9
 40119                           status	equ	0xFD8
 40120                           tosu	equ	0xFFF
 40121                           tosh	equ	0xFFE
 40122                           tosl	equ	0xFFD
 40123                           pclatu	equ	0xFFB
 40124                           pclath	equ	0xFFA
 40125                           tblptru	equ	0xFF8
 40126                           tblptrh	equ	0xFF7
 40127                           tblptrl	equ	0xFF6
 40128                           tablat	equ	0xFF5
 40129                           prodh	equ	0xFF4
 40130                           prodl	equ	0xFF3
 40131                           intcon	equ	0xFF2
 40132                           intcon2	equ	0xFF1
 40133                           intcon3	equ	0xFF0
 40134                           indf0	equ	0xFEF
 40135                           postinc0	equ	0xFEE
 40136                           plusw0	equ	0xFEB
 40137                           fsr0h	equ	0xFEA
 40138                           fsr0l	equ	0xFE9
 40139                           wreg	equ	0xFE8
 40140                           postinc1	equ	0xFE6
 40141                           postdec1	equ	0xFE5
 40142                           plusw1	equ	0xFE3
 40143                           fsr1h	equ	0xFE2
 40144                           fsr1l	equ	0xFE1
 40145                           indf2	equ	0xFDF
 40146                           postinc2	equ	0xFDE
 40147                           postdec2	equ	0xFDD
 40148                           plusw2	equ	0xFDB
 40149                           fsr2h	equ	0xFDA
 40150                           fsr2l	equ	0xFD9
 40151                           status	equ	0xFD8
 40152                           
 40153                           	psect	text213
 40154  000000                     __ptext213:
 40155                           	opt stack 0
 40156                           tosu	equ	0xFFF
 40157                           tosh	equ	0xFFE
 40158                           tosl	equ	0xFFD
 40159                           pclatu	equ	0xFFB
 40160                           pclath	equ	0xFFA
 40161                           tblptru	equ	0xFF8
 40162                           tblptrh	equ	0xFF7
 40163                           tblptrl	equ	0xFF6
 40164                           tablat	equ	0xFF5
 40165                           prodh	equ	0xFF4
 40166                           prodl	equ	0xFF3
 40167                           intcon	equ	0xFF2
 40168                           intcon2	equ	0xFF1
 40169                           intcon3	equ	0xFF0
 40170                           indf0	equ	0xFEF
 40171                           postinc0	equ	0xFEE
 40172                           plusw0	equ	0xFEB
 40173                           fsr0h	equ	0xFEA
 40174                           fsr0l	equ	0xFE9
 40175                           wreg	equ	0xFE8
 40176                           postinc1	equ	0xFE6
 40177                           postdec1	equ	0xFE5
 40178                           plusw1	equ	0xFE3
 40179                           fsr1h	equ	0xFE2
 40180                           fsr1l	equ	0xFE1
 40181                           indf2	equ	0xFDF
 40182                           postinc2	equ	0xFDE
 40183                           postdec2	equ	0xFDD
 40184                           plusw2	equ	0xFDB
 40185                           fsr2h	equ	0xFDA
 40186                           fsr2l	equ	0xFD9
 40187                           status	equ	0xFD8
 40188                           
 40189                           	psect	rparam
 40190  0000                     tosu	equ	0xFFF
 40191                           tosh	equ	0xFFE
 40192                           tosl	equ	0xFFD
 40193                           pclatu	equ	0xFFB
 40194                           pclath	equ	0xFFA
 40195                           tblptru	equ	0xFF8
 40196                           tblptrh	equ	0xFF7
 40197                           tblptrl	equ	0xFF6
 40198                           tablat	equ	0xFF5
 40199                           prodh	equ	0xFF4
 40200                           prodl	equ	0xFF3
 40201                           intcon	equ	0xFF2
 40202                           intcon2	equ	0xFF1
 40203                           intcon3	equ	0xFF0
 40204                           indf0	equ	0xFEF
 40205                           postinc0	equ	0xFEE
 40206                           plusw0	equ	0xFEB
 40207                           fsr0h	equ	0xFEA
 40208                           fsr0l	equ	0xFE9
 40209                           wreg	equ	0xFE8
 40210                           postinc1	equ	0xFE6
 40211                           postdec1	equ	0xFE5
 40212                           plusw1	equ	0xFE3
 40213                           fsr1h	equ	0xFE2
 40214                           fsr1l	equ	0xFE1
 40215                           indf2	equ	0xFDF
 40216                           postinc2	equ	0xFDE
 40217                           postdec2	equ	0xFDD
 40218                           plusw2	equ	0xFDB
 40219                           fsr2h	equ	0xFDA
 40220                           fsr2l	equ	0xFD9
 40221                           status	equ	0xFD8
 40222                           
 40223                           	psect	temp
 40224  000048                     btemp:
 40225                           	opt stack 0
 40226  000048                     	ds	12
 40227  0000                     wtemp0	set	btemp
 40228  0000                     wtemp1	set	btemp+2
 40229  0000                     wtemp2	set	btemp+4
 40230  0000                     wtemp3	set	btemp+6
 40231  0000                     wtemp4	set	btemp+8
 40232  0000                     wtemp5	set	btemp+10
 40233  0000                     wtemp6	set	btemp+1
 40234  0000                     ttemp0	set	btemp
 40235  0000                     ttemp1	set	btemp+3
 40236  0000                     ttemp2	set	btemp+6
 40237  0000                     ttemp3	set	btemp+9
 40238  0000                     ltemp0	set	btemp
 40239  0000                     ltemp1	set	btemp+4
 40240  0000                     ltemp2	set	btemp+8
 40241                           tosu	equ	0xFFF
 40242                           tosh	equ	0xFFE
 40243                           tosl	equ	0xFFD
 40244                           pclatu	equ	0xFFB
 40245                           pclath	equ	0xFFA
 40246                           tblptru	equ	0xFF8
 40247                           tblptrh	equ	0xFF7
 40248                           tblptrl	equ	0xFF6
 40249                           tablat	equ	0xFF5
 40250                           prodh	equ	0xFF4
 40251                           prodl	equ	0xFF3
 40252                           intcon	equ	0xFF2
 40253                           intcon2	equ	0xFF1
 40254                           intcon3	equ	0xFF0
 40255                           indf0	equ	0xFEF
 40256                           postinc0	equ	0xFEE
 40257                           plusw0	equ	0xFEB
 40258                           fsr0h	equ	0xFEA
 40259                           fsr0l	equ	0xFE9
 40260                           wreg	equ	0xFE8
 40261                           postinc1	equ	0xFE6
 40262                           postdec1	equ	0xFE5
 40263                           plusw1	equ	0xFE3
 40264                           fsr1h	equ	0xFE2
 40265                           fsr1l	equ	0xFE1
 40266                           indf2	equ	0xFDF
 40267                           postinc2	equ	0xFDE
 40268                           postdec2	equ	0xFDD
 40269                           plusw2	equ	0xFDB
 40270                           fsr2h	equ	0xFDA
 40271                           fsr2l	equ	0xFD9
 40272                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    474
    Data        60
    BSS         1177
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    153     160
    BANK1           256    105     252
    BANK2           256      0     231
    BANK3           256      0     160
    BANK4           256      0     144
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    S1192$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[144]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[144]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), macBuffer(BIGRAM[271]), 
		 -> Channels(BANK4[144]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[231]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), macBuffer(BIGRAM[271]), 
		 -> Channels(BANK4[144]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[231]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> STR_1(CODE[5]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[231]), DefaultChannels915(CODE[144]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> STR_1(CODE[5]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[231]), DefaultChannels915(CODE[144]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> STR_1(CODE[5]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 5
		 -> STR_1(CODE[5]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1192$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1192$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S572$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S572$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TransmissionErrorCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S350$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TransmissionErrorCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TransmissionErrorCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), macBuffer(BIGRAM[271]), 
		 -> Channels(BANK4[144]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[231]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[144]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 231
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[231]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_SelectChannelForTransmission
    _TransmissionErrorCallback->_SelectChannelForTransmission
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _GetRx1Freq->_GenerateUSFrequencyReception
    _GenerateUSFrequencyReception->___lmul
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_SelectChannelForTransmission
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_TxDone->___lmul
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_Retransmissions
    _Retransmissions->_SelectChannelForTransmission
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetChannelFrequency
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ValidateFrequency->___llmod
    _ExecuteNewChannel->_GenerateUSFrequency2
    _LORAWAN_SetDataRange->_ValidateDataRange
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels2
    _EnableChannels2->_UpdateChannelIdStatus
    _UpdateChannelIdStatus->_UpdateMinMaxChDataRate
    _LORAWAN_Send->_AssemblePacket
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _RADIO_FSKPacketSent->___lmul
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_TxDone->_SwTimerStart
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _GenerateUSFrequency2->___lmul
    _GenerateUSFrequency1->___lmul
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault915Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 4033260
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   11490
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   11490
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 3413335
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 1317441
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
          _TransmissionErrorCallback *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  122187
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _TransmissionErrorCallback                            5     4      1  124791
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  159560
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  148900
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow2Callback                       1     0      1  240658
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  120356
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           5     1      4    4228
                                             79 BANK0      5     1      4
       _GenerateUSFrequencyReception
 ---------------------------------------------------------------------------------
 (5) _GenerateUSFrequencyReception                         9     5      4    4205
                                             70 BANK0      9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    6395
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  258737
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  129011
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    8478
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    8478
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    8478
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   29986
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  187159
                                            106 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  157152
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   21485
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 1853292
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    8387
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0   37198
                                             70 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0  826009
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     389
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0  952549
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    0     0      0  135317
                    _Retransmissions
                             _RxData *
                   _SetJoinFailState
 ---------------------------------------------------------------------------------
 (5) _Retransmissions                                      4     4      0  131093
                                            102 BANK0      4     4      0
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3  803537
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _UpdateRetransmissionAckTimeoutState                  4     4      0    6302
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    6326
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     199
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         3     1      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  124553
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_EnterContinuousReceive                       0     0      0  120329
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_ReceiveStart                                  10     8      2  101638
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadioRx                                     5     1      4    1019
                                              9 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadio                                       5     1      4     664
                                              4 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetModulation                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFrequencyHopPeriod                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   26851
                                             93 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     538
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0     381
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     337
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    5794
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
          _ValidateDataRateReception
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateFrequency                                    5     1      4     783
                                              9 BANK0      5     1      4
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRateReception                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     400
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   15441
                                             83 BANK0     10     8      2
               _GenerateUSFrequency1
               _GenerateUSFrequency2
         _LORAWAN_SetChannelIdStatus
               _LORAWAN_SetDataRange
                  _ValidateChannelId
                  _ValidateDataRange
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_SetDataRange                                 3     2      1     898
                                              7 BANK0      3     2      1
                    _UpdateDataRange
                  _ValidateDataRange
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    5     4      1     580
                                              2 BANK0      5     4      1
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (8) _UpdateDataRange                                      2     1      1     133
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_SetChannelIdStatus                           3     2      1     854
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     157
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      18    16      2    3912
                                             16 BANK0     18    16      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
            _ValidateChannelMaskCntl
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (8) _ValidateDataRate                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              4     2      2     157
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       5     2      3    2450
                                             11 BANK0      5     2      3
                    _EnableChannels2
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (8) _EnableChannels2                                      7     4      3    1336
                                              4 BANK0      7     4      3
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (8) _UpdateChannelIdStatus                                2     1      1     645
                                              2 BANK0      2     1      1
_UpdateCurrentDataRateAfterDataRange
             _UpdateMinMaxChDataRate
 ---------------------------------------------------------------------------------
 (9) _UpdateCurrentDataRateAfterDataRangeChanges           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     3     1      2     157
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  258737
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   13448
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     184
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  125869
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    1870
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     315
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   24    10     14   37271
                                             49 BANK0     24    10     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   16241
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     136
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   11982
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   31423
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   14925
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     221
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     177
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0   28946
                                             70 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _SwTimerReadValue                                     9     5      4     361
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      16    14      2   10795
                                             58 BANK0     12    10      2
                    _RADIO_GetStatus
                             _RxData *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4224
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  206826
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         9     9      0   15251
                                             93 BANK0      9     9      0
               _GenerateUSFrequency1
               _GenerateUSFrequency2
                 _RADIO_SetBandwidth
                       _RADIO_SetCRC
          _RADIO_SetChannelFrequency
                _RADIO_SetIQInverted
              _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
           _RADIO_SetSpreadingFactor
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              14    11      3    6036
                                             79 BANK0     14    11      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetSpreadingFactor                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetOutputPower                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetIQInverted                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetChannelFrequency                            4     0      4     332
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetCRC                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetBandwidth                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _GenerateUSFrequency2                                13     9      4    4205
                                             70 BANK0     13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _GenerateUSFrequency1                                 9     5      4    4205
                                             70 BANK0      9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  102712
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   73144
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0    8759
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   12267
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   12266
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0   86165
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    4697
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    4160
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     337
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   66868
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   54864
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   21292
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1270
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   16320
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    3397
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     709
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2     839
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  129671
                                             81 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   22531
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        0     0      0   66135
             _InitDefault915Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
                   _RADIO_SetPABoost
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (9) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      22
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetPABoost                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_SetLoRaSyncWord                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           8     2      6   38315
                                             25 BANK0      8     2      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   13448
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0      90
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   13029
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     515
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    8365
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     601
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     557
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   10709
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    4160
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    3722
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1201
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     773
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     572
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     329
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     316
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4      69
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2      69
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1379
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault915Channels                               0     0      0   14123
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    2766
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   11357
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault915Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _RADIO_SetPABoost
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _GenerateUSFrequency1
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _GenerateUSFrequency2
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_SetBandwidth
       _RADIO_SetCRC
       _RADIO_SetChannelFrequency
       _RADIO_SetIQInverted
       _RADIO_SetLoRaSyncWord
       _RADIO_SetOutputPower
       _RADIO_SetSpreadingFactor
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _RADIO_GetStatus
           _RxData *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels2
                   _UpdateChannelIdStatus
                     _UpdateCurrentDataRateAfterDataRangeChanges
                     _UpdateMinMaxChDataRate
                 _UpdateChannelIdStatus
                   _UpdateCurrentDataRateAfterDataRangeChanges
                   _UpdateMinMaxChDataRate
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMaskCntl
               _ValidateDataRate
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                   _UpdateCurrentDataRateAfterDataRangeChanges
                   _UpdateMinMaxChDataRate
                 _ValidateChannelId
               _LORAWAN_SetDataRange
                 _UpdateDataRange
                 _ValidateDataRange
                   _ValidateDataRate
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRateReception
               _ValidateFrequency
                 ___llmod
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
           _SwTimerStop *
           _UpdateCfList *
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _Retransmissions
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _RxData *
           _SetJoinFailState *
             _RxJoinResponse *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels2
                   _UpdateChannelIdStatus
                     _UpdateCurrentDataRateAfterDataRangeChanges
                     _UpdateMinMaxChDataRate
                 _UpdateChannelIdStatus
                   _UpdateCurrentDataRateAfterDataRangeChanges
                   _UpdateMinMaxChDataRate
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMaskCntl
               _ValidateDataRate
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                   _UpdateCurrentDataRateAfterDataRangeChanges
                   _UpdateMinMaxChDataRate
                 _ValidateChannelId
               _LORAWAN_SetDataRange
                 _UpdateDataRange
                 _ValidateDataRange
                   _ValidateDataRate
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRateReception
               _ValidateFrequency
                 ___llmod
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
           _SwTimerStop *
           _UpdateCfList *
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _RADIO_GetStatus
           _RxData *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _Retransmissions
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _RxData *
           _SetJoinFailState *
             _RxJoinResponse *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _GenerateUSFrequency1
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _GenerateUSFrequency2
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_SetBandwidth
           _RADIO_SetCRC
           _RADIO_SetChannelFrequency
           _RADIO_SetIQInverted
           _RADIO_SetLoRaSyncWord
           _RADIO_SetOutputPower
           _RADIO_SetSpreadingFactor
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _GenerateUSFrequency1
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _GenerateUSFrequency2
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_SetBandwidth
             _RADIO_SetCRC
             _RADIO_SetChannelFrequency
             _RADIO_SetIQInverted
             _RADIO_SetLoRaSyncWord
             _RADIO_SetOutputPower
             _RADIO_SetSpreadingFactor
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
           _GenerateUSFrequencyReception
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _Retransmissions
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _RxData *
           _SetJoinFailState *
             _RxJoinResponse *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _Retransmissions
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _GenerateUSFrequency1
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _GenerateUSFrequency2
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_SetBandwidth
               _RADIO_SetCRC
               _RADIO_SetChannelFrequency
               _RADIO_SetIQInverted
               _RADIO_SetLoRaSyncWord
               _RADIO_SetOutputPower
               _RADIO_SetSpreadingFactor
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _RxData *
           _SetJoinFailState *
             _RxJoinResponse *
         _LORAWAN_TxDone
           _RADIO_GetStatus
           _RxData *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _TransmissionErrorCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _GenerateUSFrequency1
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _GenerateUSFrequency2
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_SetBandwidth
           _RADIO_SetCRC
           _RADIO_SetChannelFrequency
           _RADIO_SetIQInverted
           _RADIO_SetLoRaSyncWord
           _RADIO_SetOutputPower
           _RADIO_SetSpreadingFactor
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _GenerateUSFrequency1
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _GenerateUSFrequency2
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_SetBandwidth
           _RADIO_SetCRC
           _RADIO_SetChannelFrequency
           _RADIO_SetIQInverted
           _RADIO_SetLoRaSyncWord
           _RADIO_SetOutputPower
           _RADIO_SetSpreadingFactor
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _GenerateUSFrequency1
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _GenerateUSFrequency2
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_SetBandwidth
       _RADIO_SetCRC
       _RADIO_SetChannelFrequency
       _RADIO_SetIQInverted
       _RADIO_SetLoRaSyncWord
       _RADIO_SetOutputPower
       _RADIO_SetSpreadingFactor
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      90      14       56.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       1       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3FE      12        0.0%
DATA                 0      0     61D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Oct 24 15:48:09 2018

                                        ??_LORAWAN_TxDone 009C  
                              __end_of_DIO3_ISR_Lora_Init 7EA6  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                               _ValidateDataRateReception 7BB8  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl 7ABA  
                                                      l41 1F42  
                                                      l50 2060  
                                                      l43 1FF0  
                                                      l52 2082  
                                                      l44 1FB6  
                                                      l61 2206  
                                                      l53 2096  
                                                      l45 1F6E  
                                                      l70 471C  
                                                      l54 20A6  
                                                      l80 6B6A  
                                                      l72 4770  
                                                      l56 21BE  
                                                      l48 202E  
                                                      l57 2112  
                                                      l74 4798  
                                                      l58 2120  
                                                      l68 46F4  
                                                      l79 6BB2  
                                            ___awdiv@sign 0065  
                         __size_of_UpdateJoinSuccessState 013E  
                              ValidateDataRange@channelId 0066  
                                     ___wmul@multiplicand 0062  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6FAE  
                                   __end_of_AESEncodeLoRa 75B2  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00CA  
                                                     l300 4FA0  
                                                     l321 233A  
                                                     l146 7C54  
                                                     l330 2440  
                                                     l315 229A  
                                                     l252 6304  
                                                     l228 3ED2  
                                                     l420 5174  
                                                     l332 2462  
                                                     l324 240A  
                                                     l229 3F5C  
                                                     l421 5166  
                                                     l413 50F2  
                                                     l238 71A2  
                                                     l246 772A  
                                                     l422 516A  
                                                     l342 2C9C  
                                                     l334 246C  
                                                     l326 2414  
                                                     l318 22D4  
                                                     l510 1078  
                                                     l247 770C  
                                                     l415 513A  
                                                     l335 2594  
                                                     l503 0EFC  
                                                     l256 6306  
                                                     l272 6124  
                                                     l424 51A2  
                                                     l416 511C  
                                                     l344 2CA6  
                                                     l328 2436  
                                                     l512 10C4  
                                                     l417 5128  
                                                     l409 50D8  
                                                     l521 11EC  
                                                     l513 10D0  
                                                     l505 0F78  
                                                     l450 52D8  
                                                     l522 11F8  
                                                     l514 10FA  
                                                     l602 5D34  
                                                     l290 564E  
                                                     l451 530A  
                                                     l515 1112  
                                                     l603 5D16  
                                                     l508 0F98  
                                                     l540 2E6C  
                                                     l517 1196  
                                                     l605 5D72  
                                                     l454 532A  
                                                     l518 11C8  
                                                     l606 5D6C  
                                                     l286 5652  
                                                     l295 4FA2  
                                                     l463 3998  
                                                     l455 5338  
                                                     l519 11A8  
                                                     l543 2EDA  
                                                     l623 4BFE  
                                                     l287 5582  
                                                     l296 4EE0  
                                                     l472 3A5E  
                                                     l464 39AE  
                                                     l448 531A  
                                                     l544 2EF2  
                                                     l560 3074  
                                                     l608 5D74  
                                                     l473 3A54  
                                                     l457 5346  
                                                     l449 52CA  
                                                     l553 3056  
                                                     l545 2F04  
                                                     l537 2E3A  
                                                     l609 5D8A  
                                                     l298 4F3C  
                                                     l474 3A5C  
                                                     l466 39E2  
                                                     l458 5372  
                                                     l490 0E98  
                                                     l546 2F30  
                                                     l634 49A0  
                                                     l562 308C  
                                                     l650 762E  
                                                     l459 537A  
                                                     l491 0E66  
                                                     l555 2FE0  
                                                     l547 2F16  
                                                     l539 2E52  
                                                     l571 3146  
                                                     l492 0DCA  
                                                     l572 31B8  
                                                     l493 0E7E  
                                                     l573 3288  
                                                     l565 30A4  
                                                     l661 6230  
                                             ?_RADIO_Init 0079  
                                                     l494 0DF2  
                                                     l566 30B0  
                                                     l662 621C  
                                                     l495 0E1A  
                                                     l575 3212  
                                                     l567 30DE  
                                                     l671 6264  
                                                     l496 0E52  
                                                     l568 310A  
                                                     l592 56E8  
                                                     l664 6222  
                                                     l656 747A  
                                                     l680 716A  
                                                     l744 7212  
                                                     l729 5E80  
                                                     l489 1120  
                                                     l497 0EAA  
                                                     l569 312C  
                                                     l593 56CA  
                                                     l665 6228  
                                                     l498 0EF8  
                                                     l674 626C  
                                                     l682 7170  
                                                     l595 571E  
                                                     l667 6274  
                                                     l683 7176  
                                                     l739 753E  
                                                     l747 7224  
                                                     l668 6242  
                                                     l589 571A  
                                                     l669 6254  
                                                     l685 7190  
                                                     l693 6F96  
                                                     l694 6F88  
                                                     l679 717E  
                                                     l698 6F8E  
                                         ??_UpdateTxPower 0060  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 388E  
                   __size_of_SelectChannelForTransmission 01F0  
                            _SelectChannelForTransmission 369E  
                                  _ExecuteRxParamSetupReq 3294  
                                      _RADIO_Transmit$891 00BC  
                                      _RADIO_Transmit$889 00B8  
                                      _DIO2_ISR_Lora_Init 7D2C  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01F4  
                                         ?_EncKeySchedule 0060  
      __end_of_UpdateCurrentDataRateAfterDataRangeChanges 7C2A  
     __size_of_UpdateCurrentDataRateAfterDataRangeChanges 001A  
             ?_UpdateCurrentDataRateAfterDataRangeChanges 0001  
            ??_UpdateCurrentDataRateAfterDataRangeChanges 0060  
              _UpdateCurrentDataRateAfterDataRangeChanges 7C10  
                                   _RADIO_SetLoRaSyncWord 7E38  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 2282  
                                 __end_of_SwTimersExecute 565E  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 58F8  
                     __end_of_RADIO_SetFrequencyHopPeriod 7DDE  
                             _RADIO_SetFrequencyHopPeriod 7DD4  
                                              _CheckFlags 6D3A  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 7B7A  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                      __size_of_IOCB4_ISR 0020  
                                                    l1100 1396  
                                                    l1110 140E  
                                                    l1015 6C34  
                                                    l1111 1454  
                                                    l1016 6C38  
                                                    l1120 16BC  
                                                    l1104 149E  
                                                    l2000 27C4  
                                                    l1113 14EE  
                                                    l1105 13B0  
                                                    l2001 27DA  
                                                    l1114 152E  
                                                    l1210 7C8A  
                                                    l2002 27F0  
                                                    l1107 13B6  
                                                    l1035 76FC  
                                                    l1131 360C  
                                                    l2003 2806  
                                                    l2020 1C92  
                                                    l1116 15EA  
                                                    l1108 13C2  
                                                    l1044 7816  
                                                    l1220 6522  
                                                    l1140 33E2  
                                                    l2004 2890  
                                                    l1053 2B22  
                                                    l2021 1C4A  
                                                    l1117 15EE  
                                                    l1133 3688  
                                                    l1141 349E  
                                                    l1150 4E5A  
                                                    l1054 2A08  
                                                    l1118 1618  
                                                    l1230 7BF0  
                                                    l1134 3694  
                                                    l1214 68E6  
                                                    l2023 1C8E  
                                                    l2103 7438  
                                                    l1063 6D0A  
                                                    l2040 3CAA  
                                                    l2032 1CD6  
                                                    l1240 5BEC  
                                                    l1128 35CA  
                                                    l1064 6CF6  
                                                    l1145 4DCC  
                                                    l1057 2B54  
                                                    l2033 1D42  
                                                    l2017 1BA4  
                                                    l1241 5B72  
                                                    l2042 3D00  
                                                    l1154 4E9A  
                                                    l2130 6628  
                                                    l2034 1DCC  
                                                    l2018 1BAE  
                                                    l1234 7AB6  
                                                    l1074 7CA2  
                                                    l1090 1466  
                                                    l1138 3362  
                                                    l1170 7A28  
                                                    l1066 6D00  
                                                    l1147 4DE2  
                                                    l2123 65E4  
                                                    l2027 1C94  
                                                    l1251 5BBA  
                                                    l1091 12CA  
                                                    l1139 33A2  
                                                    l1156 4EAA  
                                                    l1148 4E5E  
                                                    l1180 37AC  
                                                    l2116 6D50  
                                                    l2052 1AD0  
                                                    l2060 1924  
                                                    l2036 1E34  
                                                    l2028 1CA2  
                                                    l1084 797C  
                                                    l1252 5BC8  
                                                    l1149 4DE8  
                                                    l1181 3746  
                                                    l2117 6D66  
                                                    l2133 5B58  
                                                    l2061 196A  
                                                    l2053 1774  
                                                    l2029 1CC4  
                                                    l1182 3784  
                                                    l2118 6D7C  
                                                    l2134 5AAA  
                                                    l2142 523E  
                                                    l2070 1AA0  
                                                    l2062 196E  
                                                    l2054 17E2  
                                                    l1183 377E  
                                                    l2127 65FE  
                                                    l2047 1B0E  
                                                    l2071 1AAA  
                                                    l2063 19CA  
                                                    l2055 1828  
                                                    l1271 72A6  
                                                    l1095 13A6  
                                                    l1184 3888  
                                                    l2160 3BD6  
                                                    l2080 58B4  
                                                    l2048 16DE  
                                                    l1272 7278  
                                                    l1248 5B88  
                                                    l1088 1632  
                                                    l1096 12EC  
                                                    l1185 37FC  
                                                    l1505 5F50  
                                                    l2129 6614  
                                                    l2137 5B56  
                                                    l2153 3B82  
                                                    l2081 5842  
                                                    l2057 1B0C  
                                                    l1273 7288  
                                                    l1249 5B96  
                                                    l1097 1344  
                                                    l1178 370C  
                                                    l2154 3AA8  
                                                    l2082 58B2  
                                                    l2058 1870  
                                                    l1274 7294  
                                                    l1290 4B3E  
                                                    l1187 385E  
                                                    l2155 3AEE  
                                                    l2067 19EA  
                                                    l2059 18DE  
                                                    l1291 4B0A  
                                                    l1188 3864  
                                                    l2084 58D6  
                                                    l2068 1A58  
                                                    l2092 6692  
                                                    l1292 4ACC  
                                                    l1533 5A90  
                                                    l1525 59EC  
                                                    l1285 4A8C  
                                                    l1286 4A58  
                                                    l2159 3C42  
                                                    l2079 583C  
                                                    l1527 5A14  
                                                    l1279 7BD2  
                                                    l2432 7AEE  
                                                    l2088 58F2  
                                                    l1528 5A24  
                                                    l2520 6AA6  
                                                    l2521 6AB0  
                                                    l1801 5CD0  
                                                    l2259 7D14  
                                                    l2523 6AC6  
                                                    l2508 6EBC  
                                                    l2524 6AC0  
                                                    l1804 59B8  
                                                    l2509 6ED0  
                                                    l1813 59C8  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l1911 01A0  
                                                    l2527 6AE6  
                                                    l1904 0CAE  
                                                    l2528 6AEE  
                                                    l1921 069E  
                                                    l1905 025C  
                                                    l1930 0516  
                                                    l1922 02DE  
                                                    l1850 4DAC  
                                                    l1923 03EE  
                                                    l1907 00BC  
                                                    l1780 45BE  
                                                    l1940 06E4  
                                                    l1932 056A  
                                                    l1924 04A6  
                                                    l1916 01B2  
                                                    l1908 010A  
                                                    l1828 43BE  
                                                    l1781 45B0  
                                                    l1925 048E  
                                                    l1909 010E  
                                                    l2493 67EA  
                                                    l1782 457C  
                                                    l2910 72CA  
                                                    l1918 0CA8  
                                                    l1950 0914  
                                                    l1942 0800  
                                                    l1934 0586  
                                                    l1783 45AC  
                                                    l2911 72C2  
                                                    l2671 63FA  
                                                    l1951 0930  
                                                    l1880 556A  
                                                    l2672 6404  
                                                    l2664 63AC  
                                                    l1944 08D4  
                                                    l1936 0598  
                                                    l1881 54A0  
                                                    l2673 6412  
                                                    l2665 63BC  
                                                    l1961 0B30  
                                                    l1953 095C  
                                                    l1945 08BC  
                                                    l1937 0646  
                                                    l1929 04D6  
                                                    l2930 7756  
                                                    l1882 5506  
                                                    l2914 72E2  
                                                    l2931 7744  
                                                    l2851 658A  
                                                    l1883 5566  
                                                    l2915 72EC  
                                                    l2667 63DA  
                                                    l1963 0C04  
                                                    l1955 096E  
                                                    l2924 6CC8  
                                                    l2852 6598  
                                                    l1788 4612  
                                                    l2668 63D2  
                                                    l1964 0BFE  
                                                    l1956 09C4  
                                                    l2925 6C8E  
                                                    l2861 6A72  
                                                    l1957 09D2  
                                                    l2862 6A80  
                                                    l1958 0B36  
                                                    l2847 6556  
                                                    l1983 0CEA  
                                                    l1959 0AA0  
                                                    l1799 5C4C  
                                                    l2848 654A  
                                                    l2857 6A4A  
                                                    l1993 25DC  
                                                    l1977 0C8C  
                                                    l1969 0BF8  
                                                    l2858 6A3E  
                                                    l1994 2834  
                                                    l1978 0C90  
                                                    l1987 6BF0  
                                                    l1995 276C  
                                                    l1988 6C16  
                                                    l1996 2870  
                                                    l1997 2782  
                                                    l1998 2798  
                                                    l1999 27AE  
                                                    l8038 7744  
                                                    l8328 4714  
                                                    l7802 6C8E  
                                                    l8346 4790  
                                                    l9138 5B64  
                                                    l7820 71BC  
                                                    l9096 3AE6  
                                                    l7860 2292  
                                                    l8726 2026  
                                                    l8638 5262  
                                                    l7928 258C  
                                                    l7872 22CC  
                                                    l8762 2118  
                                                    l8746 209E  
                                                    l9394 13BA  
                                                    l8782 21FE  
                                                    l9910 5A14  
                                                    l7888 2332  
                                                    l8944 5B8E  
                                                    l9684 1C46  
                                                    l9686 1C4A  
                                                    l8958 5BC0  
                                                    STR_1 FFF9  
                                                    l9952 484C  
                                                    l9698 1C8C  
                                        _RADIO_WritePower 52AE  
                                                    l9958 48E8  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 3C54  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                                    u7000 616A  
                                                    u8020 209A  
                                                    u7310 635E  
                                                    u8040 20EC  
                                                    u7410 4748  
                                                    u7330 6384  
                                                    u6620 6CB0  
                                                    u7180 5196  
                                                    u8060 2186  
                                                    u8300 7AB2  
                                                    u8205 3224  
                                                    u6710 2318  
                                                    u7510 0EE2  
                                                    u6640 7D9E  
                                                    u7360 72CE  
                                                    u8320 5BA6  
                                                    u9040 1458  
                                                    u8240 68E2  
                                            ?_RADIO_Reset 0001  
                                                    u8090 224C  
                                                    u7530 0EF2  
                                                    u7290 6336  
                                                    u8410 4E8C  
                                                    u9050 1460  
                                                    u6627 6CA6  
                                                    u8340 5BD8  
                                                    u8260 7BCE  
                                                    u8180 31D8  
                                                    u7381 469A  
                                                    u8165 3166  
                                                    u6910 655A  
                                                    u8430 4EA0  
                                                    u7560 0F4A  
                                                    u7480 0E92  
                                                    u6770 257A  
                                                    u6690 22C6  
                                                    u8610 3C24  
                                                    u8530 58EA  
                                                    u9170 356C  
                                                    u8195 3200  
                                                    u6940 6A4E  
                                                    u9340 3792  
                                                    u7900 63DE  
                                                    u9500 1CB8  
                                                    u7820 651C  
                                                    u9180 358E  
                                                    u7485 0E88  
                                                    u6790 25C0  
                                                    u9190 359A  
                                                    u8640 5B18  
                                                    u7760 64F4  
                                                    u7585 0FB2  
                                                    u8617 3C1A  
                                                    u6970 6BAE  
                                                    u8650 5B64  
                                                    u8570 3B60  
                                                    u8490 58C0  
                                                    u6980 6BB0  
                                                    u8580 3B80  
                              __size_of_RADIO_ReceiveStop 0022  
                                                    u7950 1F54  
                                                    u9358 3796  
                                                    u7790 6508  
                                                    u7935 1F24  
                                                    u7960 1F56  
                                                    u8760 19B2  
                                                    u8680 1772  
                                                    u8905 2FF2  
                                                    u8577 3B56  
                                                    u9618 76C6  
                                                    u9395 6826  
                                                    u9708 4B2C  
                                                    u9900 4804  
                                                    u8790 1B1A  
                                                    u8880 2FA6  
                                                    u8960 1322  
                                                    u9728 4B60  
                                                    u9578 6710  
                                                    u9658 4A7A  
                                                    u9915 483C  
                                                    u9925 485E  
                                                    u8990 1374  
                                                    u8895 2FCE  
                                                    _TMR1 000FCE  
                                                    u9970 65E0  
                                                    u9948 48F6  
                                                    u9949 490A  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 7B5A  
                                ExecuteNewChannel@drRange 00B7  
                                      _PrepareSessionKeys 5D90  
                                                    _loRa 0200  
                                                    _main 6796  
                                                    _rand 6DF4  
                          __end_of_UpdateMinMaxChDataRate 5578  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 023A  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 6D3A  
                               __size_of_ConfigureRadioRx 002A  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 7056  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5B68  
                                   ExecuteLinkAdr@txPower 007A  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                              __end_of_RADIO_GetPacketSnr 7E70  
                                            ___param_bank 000000  
                                              _GetRx1Freq 75B2  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 70A8  
                                  ??_GenerateUSFrequency1 00AA  
                                  ??_GenerateUSFrequency2 00AA  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                   MacExecuteCommands@ptr 00C3  
                                   _RADIO_WriteFSKBitRate 69C2  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 7E64  
                                        __end_of_INT2_ISR 7E5C  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 007B  
                           __end_of_OSCILLATOR_Initialize 7D88  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l10312 04D6  
                                                   l11112 59C0  
                                                   l11104 59A2  
                                                   l11122 4272  
                                                   l11204 675E  
                                                   l11108 59B0  
                                                   l11036 605E  
                                                   l10334 056A  
                                                   l11046 608C  
                                                   l10088 281C  
                                                   l11072 5C4E  
                                                   l11144 4322  
                                                   l11128 4290  
                                                   l11138 42C4  
                                                   l10446 0914  
                                                   l11174 4D3C  
                                                   l11352 5E78  
                                                   l11184 4D6A  
                                                   l11178 4D42  
                                                   l11194 4DA8  
                                         __end_of___abdiv 6AF8  
                                                   l10572 0C86  
                                                   l10468 095C  
                                                   l11480 3CA2  
                                                   l11494 3CF8  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv 641C  
                                              _FillSubKey 6B5A  
                       __end_of_IOCB4_SetInterruptHandler 7DB6  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 65AA  
                                                   u10030 6648  
                                         RADIO_Transmit@i 00C1  
                                                   u10300 0278  
                                                   u11005 2928  
                                                   u10150 28B8  
                                                   u11110 6AD4  
                                                   u11015 29AC  
                                                   u10240 017E  
                                                   u11025 2A42  
                                                   u10321 02B6  
                                                   u11035 2AC6  
                                                   u11220 3A62  
                                                   u10068 667C  
                                                   u10069 668E  
                                                   u10350 03DE  
                                                   u10270 019A  
                                                   u11400 4976  
                                                   u10520 06C8  
                                                   u12105 75F2  
                                                   u11058 2B42  
                                                   u11410 49DE  
                                                   u12035 61FE  
                                                   u12140 5EB2  
                                                   u10540 07E4  
                                                   u11260 56A2  
                                                   u11340 4BBC  
                                         ___awdiv@divisor 0062  
                                                   u11405 496A  
                                                   u11078 2B72  
                                                   u10518 067C  
                                                   u10438 04F4  
                                                   u11350 4BD4  
                                                   u11415 49D2  
                                                   u10519 068E  
                                                   u10439 0506  
                                                   u11520 45D8  
                                                   u11360 4C3C  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6A92  
                                                   u12170 3CEE  
                                                   u10490 05D8  
                                                   u11355 4BC8  
                                                   u10468 0548  
                                                   u10469 055A  
                                                   u11365 4C30  
                                                   u12190 3D44  
                                                   u11390 495E  
                                                   u10398 046C  
                                                   u11535 4600  
                                                   u10399 047E  
                                                   u10680 0A06  
                                                   u11545 4624  
                                                   u10850 0C52  
                                                   u10818 0C30  
                                                   u11730 429E  
                                                   u10819 0C42  
                                                   u10908 0CD8  
                                                   u10780 0BC2  
                                                   u10748 0B9E  
                                                   u10749 0BB0  
                                       ??_EnableChannels2 0067  
                                                   u10918 0D00  
                                                   u10598 088E  
                                                   u10599 08A0  
                                                   _LATB3 007C53  
                                                   u14048 563A  
                                                   _LATC2 007C5A  
                                                   u14049 564C  
                                                   u11770 42DA  
                                    RxJoinResponse@status 0001  
                                                   u14307 7714  
                                                   _LATD3 007C63  
                                                   u11588 60AE  
                                                   u11589 60C0  
                                                   u11870 4D36  
                                                   u11688 5990  
                       __end_of_AckRetransmissionCallback 4DB2  
                  SearchAvailableChannel@randomNumberCopy 00B7  
                                                   u11785 4312  
                                                   u10978 6D28  
                                                   u11938 4D96  
                                                   u11795 4334  
                                                   u11978 6780  
                                                   u11898 4D64  
                                                   u11979 6792  
                                          __CFG_DEBUG$OFF 000000  
                                         __end_of___lwmod 72F6  
                                                   i2l300 509E  
                                                   i2l228 41CE  
                                                   i2l229 424A  
                                                   i2l238 73CE  
                                                   i2l295 50A0  
                                                   i2l296 4FDE  
                                                   i2l298 503A  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0064  
                             __size_of_RADIO_ReceiveStart 0232  
                     __size_of_LORAWAN_SetChannelIdStatus 002C  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                                   _WPUB3 007B0B  
                                __size_of_RADIO_RxTimeout 0030  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7EAA  
                          ??_GenerateUSFrequencyReception 00AA  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                        __end_of_TMR1_ISR 7CF8  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0048  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 7E4C  
                            ??_IncludeMacCommandsResponse 0065  
                           __end_of_RADIO_WatchdogTimeout 7228  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _randx 01CA  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0062  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 7D5C  
                                LORAWAN_RxDone@joinAccept 00EE  
                                  _UpdateJoinSuccessState 47D6  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 7DC0  
                                              _ComputeMic 6AF8  
                                 __end_of_TMR1_Initialize 77F2  
                                  UpdateCfList@joinAccept 0060  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0024  
                              PrepareSessionKeys@appNonce 006D  
                           __end_of_UpdateCurrentDataRate 7DF2  
                            __size_of_RADIO_FSKPacketSent 0130  
                           __end_of_UpdateChannelIdStatus 79CE  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 25CC  
                                          __CFG_HFOFST$ON 000000  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 7ADA  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 25CC  
                                ??_InitDefault915Channels 006B  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01EE  
                   SelectChannelForTransmission@frequency 00BE  
                        __end_of_RADIO_WriteConfiguration 1212  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                              EnableChannels2@channelMask 0065  
                                         __initialization 5F88  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00BD  
                                       _SPI2_Exchange8bit 7D0A  
                                            __end_of_main 6808  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand 6E50  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5EE4  
                                        _SetJoinFailState 76AA  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 7C2A  
                                    _ExecuteRxTimingSetup 789A  
                                       __end_of_IOCB4_ISR 7B5A  
                               __size_of_UpdateDLSettings 0022  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 7E10  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                __end_of_RADIO_SetPABoost 7E38  
                                  MacExecuteCommands@done 00C2  
                                                  ??_main 00F9  
                                                  ??_rand 00A8  
                                          ??_RADIO_RxDone 00F3  
                                          ??_RADIO_TxDone 00A6  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 7EAC  
                       __end_of_LORAWAN_LinkCheckCallback 43C8  
                          __end_of_SetReceptionNotOkState 66A8  
                             __end_of_UpdateReceiveDelays 7448  
                         __end_of_AssembleEncryptionBlock 52AE  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 0060  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      EncodeShiftRow@temp 0062  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 7196  
                                          _EnableChannels 5B68  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 7E94  
                                    ??_MacExecuteCommands 00C0  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 009A  
                                              _ExtractMic 6E50  
                         __size_of_SearchAvailableChannel 0108  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 7C44  
                                        ___llmod@dividend 0060  
                                        ___awdiv@dividend 0060  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 5CDA  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 5C22  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                       ValidateDataRateReception@dataRate 0061  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 0099  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 1212  
                                                  i2l2202 0038  
                                                  i2l2204 0044  
                                                  i2l2206 0050  
                                                  i2l1337 7002  
                                                  i2l2209 005C  
                  __end_of_LORAWAN_ReceiveWindow2Callback 59CC  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D4  
                          _LORAWAN_ReceiveWindow2Callback 58F8  
                                                  i2l2432 7C06  
                                          __CFG_WDTEN$OFF 000000  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                        __size_of_ValidateChannelMaskCntl 0020  
                                                  _TRISB3 007C9B  
                                                  _TRISC2 007CA2  
                                __size_of_Retransmissions 012E  
                                           ?_LORAWAN_Init 00B1  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                              __size_of_LORAWAN_RxTimeout 005E  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init 7D5C  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 0070  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE1F  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00A1  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 7D1C  
                                         _CheckMcastFlags 65AA  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random 7A56  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 7EAC  
                      SearchAvailableChannel@randomNumber 00BB  
                    __end_of_TMR1_DefaultInterruptHandler 7EB0  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 7EAE  
                                             ?_GetRx1Freq 00AF  
                           ValidateDataRange@dataRangeNew 0062  
                                 _RADIO_FHSSChangeChannel 7448  
                                               ??___abdiv 0061  
                                                  ___lmul 6EAA  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 78C2  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                   ?_ExecuteRxTimingSetup 0067  
                                               ??___awdiv 0064  
                      ValidateChannelMaskCntl@channelMask 0060  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5822  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                             ExecuteLinkAdr@startingIndex 0076  
                                               ??___lwmod 00AC  
                      RADIO_SetChannelFrequency@frequency 0060  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 017E  
                                                  _memcpy 6C7C  
                                                  _memset 773A  
                                                  clear_0 5FD0  
                                                  clear_1 5FE2  
                                                  clear_2 5FEE  
                                                  clear_3 5FFA  
                                                  clear_4 6006  
                                                  clear_5 6012  
                                                  clear_6 601E  
                                        ___awdiv@quotient 0066  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                       ?_ExecuteLinkCheck 0060  
                       __end_of_TransmissionErrorCallback 60C4  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels 5C22  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 7EB4  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7EB2  
                                            __pdataCOMRAM 0054  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert 7E98  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                      __size_of_ValidateDataRateReception 001E  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                                            __mediumconst FE1E  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 7986  
                                  __end_of_ExecuteLinkAdr 16C6  
                                      ??_ExecuteDutyCycle 0062  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                      __end_of_LORAWAN_SetChannelIdStatus 781E  
                              _LORAWAN_SetChannelIdStatus 77F2  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 7AFA  
                                   __end_of_SwTimerCreate 630C  
                          ??_SelectChannelForTransmission 00BD  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 7B1A  
                               ExecuteDutyCycle@maxDCycle 0062  
                                       ??_RADIO_RxTimeout 00CA  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 7B9A  
                        __size_of_CreateAllSoftwareTimers 0052  
                              LORAWAN_SetDataRange@result 0068  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B5  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B6  
                                              __accesstop 0060  
                                 __end_of__initialization 6024  
                           __end_of_RADIO_FSKPayloadReady 5D90  
                                          _RADIO_Transmit 2E28  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 006F  
                                        _ConfigureRadioRx 7848  
                                    __size_of_RADIO_Reset 0046  
                                     ExecuteDevStatus@ptr 0060  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FF3B  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0060  
                         __size_of_InitDefault915Channels 0044  
                               ExecuteLinkAdr@channelMask 0077  
                                  GetRx1Freq@channelIndex 00B3  
                                      __end_of_HALSPISend 7D96  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 0988  
                                  _SearchAvailableChannel 4DB2  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 7544  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 7EA4  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 0D12  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF1F  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 7EB2  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 7EB0  
                                __end_of_RADIO_WritePower 539E  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand 7D6C  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CA  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                                  _AutomaticReplyCallback 793A  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                                         ?_EnableChannels 006B  
                                 ??_TMR_OverrideRemaining 006E  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 7EA4  
                            __end_of_HALResetPinMakeInput 7EA0  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 7DC0  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 1B28  
                              _IncludeMacCommandsResponse 16C6  
                           ?_INT2_DefaultInterruptHandler 0001  
                                UpdateCfList@bufferLength 0001  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                         ?_ExecuteLinkAdr 0070  
                                        _ValidateDataRate 7C8E  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0032  
                               __end_of_SYSTEM_Initialize 7BB8  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                  __end_of_RADIO_Transmit 3062  
                           __size_of_LORAWAN_SetDataRange 0030  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3F6E  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00F9  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop 793A  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 662C  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF49  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 7E06  
                                    __end_of_RADIO_SetCRC 7E24  
                                  _RADIO_ReceiveStart$894 00B7  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0060  
                                    __end_of_RADIO_RxDone 5744  
                              __end_of_RADIO_RxFSKTimeout 7544  
                                    __end_of_RADIO_TxDone 4C9A  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 6280  
                                      __end_of_RADIO_DIO1 7196  
                                      __end_of_RADIO_DIO2 6FAE  
                                      __end_of_RADIO_DIO3 7A12  
                                      __end_of_RADIO_DIO4 7616  
                                      __end_of_RADIO_DIO5 789A  
                               ??_RADIO_FHSSChangeChannel 0079  
                             __size_of_SwTimerSetCallback 0044  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 3A7C  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 7B1A  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                         _EnableChannels2 726E  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0069  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 00C4  
                                       ??_Retransmissions 00C6  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 34A8  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 0060  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A7  
                                      EncryptFRMPayload@j 00A8  
                                      EncryptFRMPayload@k 00A6  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0060  
                                        _UpdateDLSettings 7A12  
                                        _ValidateRxOffset 7C76  
                               ExecuteLinkAdr@endingIndex 0074  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init 7D1C  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 4914  
                                                 _AESCmac 1ED8  
                                  ComputeMic@bufferLength 00CB  
                                 __end_of_UpdateDataRange 79AA  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l10696 73E2  
                                  _InitDefault915Channels 737E  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr 7E6A  
                                    EncryptFRMPayload@key 0099  
                                   __end_of_UpdateTxPower 7DE8  
                                     _RADIO_SetIQInverted 7E10  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 005C  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 0170  
                                     i2_SwTimersInterrupt 4FBC  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                __end_of_SetJoinFailState 76DA  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl 7A9A  
                                         ___abdiv@counter 0063  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                       __end_of_RADIO_SetChannelFrequency 6396  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 7DAC  
                       __end_of_SetCallbackSoftwareTimers 5822  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4C9A  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$519 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF2D  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0060  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers 7004  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv 6A92  
                                              AESEncode@i 007C  
                                               _AESEncode 2282  
                                  ValidateRxOffset@result 0061  
                    GenerateUSFrequency1@channelFrequency 00AA  
                               __end_of_TMR_ISR_Lora_Init 7D2C  
                                                 ___awdiv 6396  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                                 ___lldiv 6526  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod 6A2A  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 72B2  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                                 _devAddr 01CE  
                                                 __pcinit 5F88  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                                 _appSKey 01D2  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 3294  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                           __size_of_GenerateUSFrequency1 0050  
                                                 __ramtop 1000  
                           __size_of_GenerateUSFrequency2 006E  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 6796  
                                                 __ptext1 7B9A  
                                                 __ptext2 77C6  
                                                 __ptext3 7D6C  
                                                 __ptext4 6F02  
                                                 __ptext5 7D7A  
                                                 __ptext6 79CE  
                                                 __ptext7 7D1C  
                                                 __ptext8 7DA2  
                                                 __ptext9 7E4C  
                                    __end_of_LORAWAN_Init 6C7C  
                                    __end_of_LORAWAN_Join 5F88  
                                    __end_of_LORAWAN_Send 5A9E  
                                 RADIO_SetPABoost@paBoost 0060  
                                           _DIO0_ISR_Lora 7E82  
                                       ?_RADIO_SetPABoost 0001  
                          ??_TMR1_DefaultInterruptHandler 0001  
                                          _EncodeShiftRow 43C8  
                                               _IOCB4_ISR 7B3A  
                              ExecuteNewChannel@frequency 00B8  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00C3  
                                 __size_of_LORAWAN_RxDone 0C8C  
                                   _OSCILLATOR_Initialize 7D7A  
                          __end_of_UpdateJoinSuccessState 4914  
                                 __size_of_LORAWAN_TxDone 02C2  
                              __end_of_RADIO_SetBandwidth 7E2E  
                                         _RADIO_GetStatus 7E70  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF69  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                      ??_RADIO_SetPABoost 0060  
                                           _DIO1_ISR_Lora 7E7C  
                                             _SwTimerStop 7912  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 01E2  
                             IncludeMacCommandsResponse@i 006D  
                                           ?_UpdateCfList 0060  
                                       _ExecuteNewChannel 34A8  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                               __size_of_TMR_GetDeltaTime 018A  
                                           _DIO2_ISR_Lora 7E76  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 7798  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 776A  
                                      ?_ExecuteNewChannel 00B3  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 6024  
                                 _CreateAllSoftwareTimers 7056  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 7DB6  
                                   ??_RADIO_FSKPacketSent 00A6  
                                          _GenerateSubkey 468A  
                                   _RADIO_WatchdogTimeout 71E0  
                          ??_INT2_DefaultInterruptHandler 0001  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0066  
                                                 memcpy@n 0064  
                                                 memcpy@s 0068  
                                 __end_of_EnableChannels2 72B2  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 425C  
                                          ??_SwTimerStart 0091  
                                               i2u1411_48 7B48  
                                               i2u1413_48 7B08  
                                     ??_ExecuteNewChannel 00B5  
                                               i2u1407_48 7B88  
                                               i2u1409_48 7B68  
                                   _UpdateCurrentDataRate 7DE8  
                                   _UpdateChannelIdStatus 79AA  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 7D4C  
                                         ___lldiv@divisor 0064  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 007F  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 7E9C  
                                            ??_GetRx1Freq 00B3  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B3  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 7E06  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 7E4C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                           _AESEncode$514 0072  
                                           _AESEncode$515 0074  
                                           _AESEncode$516 0076  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop 74C8  
                                      LORAWAN_Join@result 00DC  
                                      __end_of_CheckFlags 6D98  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00BA  
                                  __end_of_EncodeShiftRow 452C  
                                      _DIO0_ISR_Lora_Init 7D4C  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01FA  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 757C  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 548E  
                              __end_of_RADIO_RegisterRead 7912  
                       __end_of_LORAWAN_GetMaxPayloadSize 6C1C  
                          __end_of_HALResetPinOutputValue 7C5E  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx 7872  
                                         _RADIO_RxTimeout 767A  
                          UpdateChannelIdStatus@channelId 0063  
                               __end_of_ExecuteNewChannel 369E  
                                        EnableChannels2@i 006A  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                           RADIO_Init@cnt 0080  
                                       _SwTimerSetTimeout 733A  
                                          _TMR1_ReadTimer 7A78  
                                          ??_UpdateCfList 0062  
                                              _txPower915 FF57  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0062  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00B3  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 47D6  
                            ExecuteLinkAdr@auxChannelMask 007D  
                                           RADIO_RxDone@i 00F4  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0171  
                         ValidateDataRateReception@result 0060  
                                      __end_of_GetRx1Freq 75E4  
                                   __size_of_RADIO_RxDone 00E6  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0128  
                                  ??_RADIO_SetOutputPower 0060  
                         EncryptFRMPayload@macBufferIndex 009B  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                              __end_of_ComputeSessionKeys 64A2  
                                     ??_SwTimerSetTimeout 0071  
                                ExecuteLinkAdr@txPowerNew 0075  
                               _TransmissionErrorCallback 602A  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 7CD0  
                                         _RADIO_WriteMode 50BC  
                              ??_RADIO_WriteConfiguration 00A8  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00B2  
                               __size_of_ExecuteDutyCycle 0026  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey 6BBC  
                                 _AssembleEncryptionBlock 51BA  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF1F  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random 7A78  
                                          __end_of_RxData 7EAE  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate 7CA6  
                            __end_of_INTERRUPT_Initialize 7E90  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
            GenerateUSFrequencyReception@channelFrequency 00AA  
                              __end_of_DIO5_ISR_Lora_Init 7EA2  
                                 __end_of_RADIO_GetStatus 7E76  
                                          __end_of___lmul 6F02  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006E  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 78EA  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 7E88  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                      __end_of_ComputeMic 6B5A  
                                               Random@max 00AD  
                                          __end_of_memcpy 6CDC  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 737E  
                                  __end_of_TMR1_ReadTimer 7A9A  
                                          __end_of_memset 776A  
                                         _SPI2_Initialize 7D6C  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 7E1A  
                                        ??_ExecuteLinkAdr 0072  
                                            _RADIO_RxDone 565E  
                                            _RADIO_TxDone 4B72  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 5F88  
                                          _ConfigureRadio 6D98  
                                      LORAWAN_RxDone@mhdr 00E1  
                                      LORAWAN_RxDone@temp 00E7  
                                      _DIO4_ISR_Lora_Init 7EA2  
                                __end_ofi2_TMR1_ReadTimer 7B3A  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 7ABA  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0056  
                           __end_of_TMR_OverrideRemaining 61F0  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack 7B9A  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                    _Retransmissions$1882 00C6  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 7C76  
                    GenerateUSFrequency2@channelFrequency 00AE  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00A5  
                                   LORAWAN_Init@RxPayload 00B1  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 7B7A  
                                           ??_RADIO_Reset 0065  
                                __end_of_UpdateDLSettings 7A34  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                                __end_of_ValidateRxOffset 7C8E  
                             ??_RADIO_SetChannelFrequency 0064  
                                         _Retransmissions 4A44  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 7DCA  
                           ExecuteNewChannel@channelIndex 00BC  
                          __end_of_SearchAvailableChannel 4EBA  
                                        ?_EnableChannels2 0064  
                                         i2_TMR_SwapTimer 73C2  
                                 __size_of_StartReTxTimer 0002  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0062  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00BF  
                                 _RADIO_FSKPacketSent$910 00AE  
                                 __end_of_SystemTimerInit 7E54  
                          UpdateChannelIdStatus@statusNew 0062  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 016F  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 016D  
                                   _RADIO_FSKPayloadReady 5CDA  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7E9C  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0095  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_AutomaticReplyCallback 7960  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF62  
                                                ??___lmul 00A2  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                   __size_of_LORAWAN_Init 0060  
                      __size_of_AckRetransmissionCallback 0118  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0064  
                                   __size_of_LORAWAN_Send 00D2  
                            __end_of_LORAWAN_SetDataRange 770A  
                                 __end_of_RADIO_RxTimeout 76AA  
                                MacExecuteCommands@buffer 00BD  
                                ??_SetReceptionNotOkState 00BB  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01BA  
                        LORAWAN_SetDataRange@dataRangeNew 0067  
                                       _ValidateDataRange 64A2  
                                      __end_of_ExtractMic 6EAA  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 7848  
                                       _ValidateChannelId 7BD6  
                                 ?_InitDefault915Channels 0001  
                                    ?_RADIO_SetModulation 0001  
                            ExecuteLinkAdr@auxMaxDataRate 007C  
                                _RADIO_SetSpreadingFactor 7DFC  
                                      _RADIO_RxFSKTimeout 7506  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0062  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 0169  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 6DF4  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0001  
                                  TMR_GetDeltaTime@tmrVal 0044  
                                          _LORAWAN_TxDone 28C2  
                              __size_of_ExecuteNewChannel 01F6  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                    __end_of_SwTimerStart 615A  
                  __end_of_LORAWAN_EnterContinuousReceive 6722  
                 __size_of_LORAWAN_EnterContinuousReceive 007A  
                          _LORAWAN_EnterContinuousReceive 66A8  
                                             __pbssBIGRAM 0490  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00CA  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                     SearchAvailableChannel@startingIndex 00B9  
                              __end_of_DefaultChannels915 FFF9  
                                        ??_RADIO_Transmit 00B4  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                     ??_ValidateDataRange 0063  
                                        _TMR_GetDeltaTime 3DE4  
                           EnableChannels@channelMaskCntl 006D  
                                 __end_of_RADIO_WriteMode 51BA  
                 __end_of_UnconfirmedTransmissionCallback 6796  
                __size_of_UnconfirmedTransmissionCallback 0074  
                         _UnconfirmedTransmissionCallback 6722  
                                 SearchAvailableChannel@i 00BC  
                                     ??_ValidateChannelId 0060  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00EA  
                            ExecuteLinkAdr@auxMinDataRate 0079  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                               _aesBuffer 01AA  
                              ?_ValidateDataRateReception 0001  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                             RADIO_SetBandwidth@bandwidth 0060  
                        GenerateUSFrequency1@channelIndex 00AE  
                              __end_of_SwTimerSetCallback 733A  
       __end_of_ResetParametersForUnconfirmedTransmission 7CD0  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission 7CBC  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 01F8  
                                      ??_SetJoinFailState 0060  
                                            _LORAWAN_Init 6C1C  
                                            _LORAWAN_Join 5EE4  
                                            _LORAWAN_Send 59CC  
                                  RADIO_FSKPayloadReady@i 00F4  
                                       _ValidateFrequency 687A  
                                               __pnvBANK1 01F2  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 539E  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 7E90  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 726E  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 6F02  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0069  
                                    __end_of_UpdateCfList 7EA8  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006B  
                                               _macBuffer 0490  
                                               _dioStatus 0173  
                               __end_of_ValidateDataRange 6526  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 4EBA  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                        __end_of_TMR1_SetInterruptHandler 7DAC  
                                           __pmediumconst FE1E  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize 7D7A  
                                                ?___awdiv 0060  
                                               __ptext100 1B28  
                                               __ptext101 16C6  
                                               __ptext110 5D90  
                                               __ptext102 7E6A  
                               __end_of_ValidateChannelId 7BF4  
                                               __ptext111 65AA  
                                               __ptext103 5822  
                                               __ptext200 7B1A  
                                               __ptext120 7C2A  
                                               __ptext112 6D3A  
                                               __ptext104 3A7C  
                                               __ptext201 7E42  
                                               __ptext121 369E  
                                               __ptext113 4914  
                                               __ptext105 6396  
                                               __ptext210 7B7A  
                                               __ptext202 7B3A  
                                               __ptext130 70F8  
                                               __ptext122 4DB2  
                                               __ptext114 7488  
                                               __ptext106 51BA  
                                               __ptext211 7E82  
                                               __ptext203 7E76  
                                               __ptext131 2E28  
                                               __ptext123 7DFC  
                                               __ptext115 28C2  
                                               __ptext107 5A9E  
                                               __ptext212 7EB4  
                                               __ptext204 7EB0  
                                               __ptext140 6AF8  
                                               __ptext132 0D12  
                                               __ptext124 7E06  
                                               __ptext116 7EAC  
                                               __ptext108 6E50  
                                               __ptext213 0000  
                                               __ptext205 7E54  
                                               __ptext141 1ED8  
                                               __ptext133 52AE  
                                               __ptext125 7E10  
                                               __ptext117 7E70  
                                               __ptext109 641C  
                                               __ptext206 7B5A  
                                               __ptext150 5744  
                                               __ptext142 468A  
                                               __ptext134 6958  
                                               __ptext126 630C  
                                               __ptext118 7CD0  
                                               __ptext207 7E7C  
                                               __ptext151 5E3C  
                                               __ptext143 6B5A  
                                               __ptext135 69C2  
                                               __ptext127 7E1A  
                                               __ptext119 5EE4  
                                               __ptext208 7EB2  
                                               __ptext160 78EA  
                                               __ptext152 3F6E  
                                               __ptext144 757C  
                                               __ptext136 3C54  
                                               __ptext128 7E24  
                                               __ptext209 7E5C  
                                               __ptext161 7D96  
                                               __ptext153 548E  
                                               __ptext145 2282  
                                               __ptext137 7A56  
                                               __ptext129 68EA  
                                               __ptext170 770A  
                                               __ptext162 539E  
                                               __ptext154 7004  
                                               __ptext146 43C8  
                                               __ptext138 6DF4  
                                               __ptext171 7C44  
                                               __ptext163 6A2A  
                                               __ptext155 7E2E  
                                               __ptext147 2B84  
                                               __ptext139 72B2  
                                               __ptext180 7196  
                                               __ptext172 7E98  
                                               __ptext164 7ABA  
                                               __ptext156 7E38  
                                               __ptext148 6C1C  
                                               __ptext181 7ADA  
                                               __ptext173 7E9C  
                                               __ptext165 7D88  
                                               __ptext157 388E  
                                               __ptext149 7D5C  
                                               __ptext190 6280  
                                               __ptext182 4EBA  
                                               __ptext174 452C  
                                               __ptext166 7D0A  
                                               __ptext158 72F6  
                                               __ptext183 3DE4  
                                               __ptext175 6EAA  
                                               __ptext167 7E90  
                                               __ptext159 50BC  
                                               __ptext192 7CE4  
                                               __ptext184 7A78  
                                               __ptext176 6526  
                                               __ptext168 7E94  
                                               __ptext193 7AFA  
                                               __ptext185 733A  
                                               __ptext177 7912  
                                               __ptext169 7228  
                                               __ptext194 7EAE  
                                               __ptext186 737E  
                                               __ptext178 60C4  
                                               __ptext195 6FAE  
                                               __ptext187 773A  
                                               __ptext179 615A  
                                               __ptext196 73C2  
                                               __ptext188 6C7C  
                                               __ptext197 7BF4  
                                               __ptext189 7056  
                                               __ptext198 4FBC  
                                               __ptext199 40EC  
                                       _EncryptFRMPayload 3A7C  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00AA  
                           __size_of_UpdateJoinInProgress 001A  
                          __end_of_InitDefault915Channels 73C2  
                                                ?___llmod 0060  
                           __size_of_ExecuteRxTimingSetup 0028  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00C5  
                         __end_of_PrepareJoinRequestFrame 3DE4  
                                                ?___lwmod 00A8  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 630C  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 5744  
                                      ConfigureRadio@freq 0064  
                                   ??_RADIO_SetModulation 0060  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0D12  
                                     ??_ValidateFrequency 006D  
                                  __end_of_LORAWAN_TxDone 2B84  
                                      ?_EncryptFRMPayload 0091  
                           LORAWAN_SetDataRange@channelId 0069  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 79F0  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 7DF2  
                           __end_of_RADIO_SetLoRaSyncWord 7E42  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 1B28  
                                         ?_ConfigureRadio 0064  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                              __end_ofi2_TMR_GetDeltaTime 425C  
                                     ??_SwTimersInterrupt 0084  
                                    RADIO_DIO0@dioMapping 00F7  
                                   __end_of_TMR_SwapTimer 71E0  
                                            ?_SwTimerStop 0001  
                                 __end_of_Retransmissions 4B72  
                                     ??_EncryptFRMPayload 009F  
                                 __end_ofi2_TMR_SwapTimer 7406  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A8  
                                ConfigureRadioRx@dataRate 006D  
                                      _RADIO_ReceiveStart 3062  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 7506  
                                    _INTERRUPT_Initialize 7E8C  
                                           _SwTimerCreate 6280  
                            __end_of_GenerateUSFrequency1 7148  
                            __end_of_GenerateUSFrequency2 6958  
                     IncludeMacCommandsResponse@macBuffer 0060  
                       __end_of_ValidateDataRateReception 7BD6  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0069  
                                           _TMR1_CallBack 7AFA  
                               __end_of_ValidateFrequency 68EA  
                               __size_of_RADIO_SetPABoost 000A  
                                        _ExecuteLinkCheck 7648  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 7E5C  
                                _LORAWAN_SetDeviceAddress 7C5E  
                                                _INT2_ISR 7E54  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 7E24  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF57  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00FD  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue 7488  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 7960  
                                         _HALDIO5PinValue 7D96  
                                    RADIO_DIO1@dioMapping 00CB  
                               __end_of_SwTimersInterrupt 4FBC  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 7D3C  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                    ConfigureRadioRx@freq 0069  
                               __end_of_EncryptFRMPayload 3C54  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0066  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 6A2A  
                             UpdateDataRange@dataRangeNew 0060  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 00F9  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 548E  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0063  
                                                _SSP2CON1 000F6C  
                      __size_of_TransmissionErrorCallback 009A  
                           __size_of_FindSmallestDataRate 00D6  
                                                _TMR1_ISR 7CE4  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 7406  
                         __size_of_SetReceptionNotOkState 007C  
                                         EnableChannels@i 006F  
                                  __end_of_AssemblePacket 1ED8  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 009A  
                                       ??_TMR1_Initialize 0062  
                                        ___abdiv@dividend 0066  
                                      _DIO1_ISR_Lora_Init 7D3C  
                                       ___wmul@multiplier 0060  
                               EnableChannels2@startIndex 0069  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 006D  
                              __end_of_PrepareSessionKeys 5E3C  
                                       ?_ConfigureRadioRx 0069  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 4A44  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 006D  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 5F9C  
                                               copy_data1 5FBC  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                    _LORAWAN_SetDataRange 76DA  
                             __end_of_RADIO_SetIQInverted 7E1A  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 7004  
                                             _RADIO_Reset 7228  
                                     ExecuteLinkCheck@ptr 0060  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 78EA  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 7EA8  
                             __end_ofi2_SwTimersInterrupt 50BC  
                               _LORAWAN_GetMaxPayloadSize 6BBC  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0095  
                        GenerateUSFrequency2@channelIndex 00B2  
                                      CheckMcastFlags@hdr 0060  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                                         ExecuteLinkAdr@i 0081  
                            __end_of_SystemBlockingWaitMs 773A  
                  ValidateChannelMaskCntl@channelMaskCntl 0063  
                                       i2_TMR1_WriteTimer 7BF4  
                                               memcpy@tmp 006A  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                GenerateUSFrequencyReception@channelIndex 00AE  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                __size_of_CheckMcastFlags 0082  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0084  
                               _ticksToScheduledInterrupt 0054  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0086  
                                      _ComputeSessionKeys 641C  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                        __size_of___lwmod 0044  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                   EnableChannels@channel 006E  
                                      ??_ValidateDataRate 0060  
                                _TMR1_SetInterruptHandler 7DA2  
                                  _IOCB4_InterruptHandler 01F6  
                                             _radioBuffer 059F  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 7D0A  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission 7CF8  
                                   _TMR1_InterruptHandler 01F2  
                                        ??_GenerateSubkey 0097  
                                        _CountfOptsLength 5A9E  
                                              _HALSPISend 7D88  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FF2D  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 28C2  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                        __end_of_RADIO_UnhandledInterrupt 7648  
                                        ?_Retransmissions 0001  
                                           _UpdateTxPower 7DDE  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel 7488  
                                         _allocatedTimers 00FF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 7CE4  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 7EA0  
                                                __ptext10 7EA0  
                                                __ptext11 7EA2  
                                                __ptext20 7DC0  
                                                __ptext12 7EA4  
                                                __ptext21 776A  
                                                __ptext13 7D2C  
                                              _T1GCONbits 000FCC  
                                                __ptext30 425C  
                                                __ptext22 7C5E  
                                                __ptext14 7DAC  
                                                __ptext31 58F8  
                                                __ptext23 7798  
                                                __ptext15 7D3C  
                                                __ptext40 79F0  
                                                __ptext32 5C22  
                                                __ptext24 74C8  
                                                __ptext16 7D4C  
                                                __ptext41 6F58  
                                                __ptext33 71E0  
                                                __ptext25 5578  
                                                __ptext17 7E8C  
                                                __ptext50 5CDA  
                                                __ptext42 7148  
                                                __ptext34 7506  
                                                __ptext26 602A  
                                                __ptext18 781E  
                                                __ptext51 6CDC  
                                                __ptext43 767A  
                                                __ptext35 6722  
                                                __ptext27 47D6  
                                                __ptext19 7DB6  
                                                __ptext60 7CBC  
                                                __ptext52 4A44  
                                                __ptext44 7448  
                                                __ptext36 75B2  
                                                __ptext28 793A  
                                                __ptext61 7CF8  
                                                __ptext53 0086  
                                                __ptext45 61F0  
                                                __ptext37 70A8  
                                                __ptext29 4C9A  
                                                __ptext70 25CC  
                                                __ptext62 7E64  
                                                __ptext54 6808  
                                                __ptext46 7616  
                                                __ptext38 7872  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 789A  
                                                __ptext63 3062  
                                                __ptext55 7A12  
                                                __ptext47 4B72  
                                                __ptext39 75E4  
                                                __ptext80 76DA  
                                                __ptext72 7406  
                                                __ptext64 7848  
                                                __ptext56 7EA6  
                                                __ptext48 565E  
                                                __ptext81 64A2  
                                                __ptext73 78C2  
                                                __ptext65 6D98  
                                                __ptext57 7EA8  
                                                __ptext49 6A92  
                                                __ptext90 7DE8  
                                                __ptext82 7986  
                                                __ptext74 3294  
                                                __ptext66 7DCA  
                                                __ptext58 662C  
                                                __ptext91 5B68  
                                                __ptext83 77F2  
                                                __ptext75 7C76  
                                                __ptext67 7DD4  
                                                __ptext59 66A8  
                                                __ptext92 726E  
                                                __ptext84 7BD6  
                                                __ptext76 687A  
                                                __ptext68 76AA  
                                                __ptext93 79AA  
                                                __ptext85 7648  
                                                __ptext77 7BB8  
                                                __ptext69 7EAA  
                                                __ptext94 7C10  
                                                __ptext86 1212  
                                                __ptext78 7CA6  
                                                __ptext95 7960  
                                                __ptext87 7C8E  
                                                __ptext79 34A8  
                                                __ptext96 7DF2  
                                                __ptext88 7A9A  
                                                __ptext97 59CC  
                                                __ptext89 7DDE  
                                                __ptext98 7A34  
                                                __ptext99 6BBC  
                                 ExecuteRxTimingSetup@ptr 0067  
                                   ??_UpdateReceiveDelays 0066  
                                   __end_of_LORAWAN_Reset 40EC  
                                  __end_of_StartReTxTimer 7EAA  
                                   ?_LORAWAN_SetDataRange 0067  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0063  
                                __size_of_UpdateDataRange 0024  
                                  _SetReceptionNotOkState 662C  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01BA  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 7DA2  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0068  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0070  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                   __size_of_UpdateCfList 0002  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 0072  
                                           __size_of_rand 005C  
                                       _RADIO_ReceiveStop 7A34  
                                      ??_UpdateDLSettings 0061  
                                    _LORAWAN_PlatformInit 79CE  
                                      ??_ValidateRxOffset 0060  
                               __end_ofi2_TMR1_WriteTimer 7C10  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                    ??_ComputeSessionKeys 0093  
                                           _timerOverflow 0047  
                                            _SwTimerStart 60C4  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00AA  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 01D8  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 3F6E  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                    __end_of_GenerateUSFrequencyReception 70F8  
                   __size_of_GenerateUSFrequencyReception 0050  
                            _GenerateUSFrequencyReception 70A8  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData 7E64  
                                       ??_TMR1_WriteTimer 0062  
                                    _GenerateUSFrequency1 70F8  
                                    _GenerateUSFrequency2 68EA  
                                              _RADIO_DIO0 61F0  
                                              _RADIO_DIO1 7148  
                                              _RADIO_DIO2 6F58  
                                              _RADIO_DIO3 79F0  
                                              _RADIO_DIO4 75E4  
                                              _RADIO_DIO5 7872  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 7EB6  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7EB4  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF3B  
                             i2TMR1_ReadTimer@readValHigh 0007  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                                              _RADIO_Init 388E  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                ?_ValidateChannelMaskCntl 0060  
                                           __roundCounter 0172  
                                              _INTCONbits 000FF2  
                                __end_of_HALSPICSDeassert 7E94  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 2B84  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 7EA6  
                                     ??_RADIO_ReleaseData 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 5E3C  
                                      _EXT_INT_Initialize 781E  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 615A  
                             ??_ValidateDataRateReception 0060  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop 7A56  
                                         _SwTimersExecute 5578  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        _RADIO_SetPABoost 7E2E  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus 7DFC  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels915 FF69  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                                  GenerateSubkey@const_Rb 0098  
                         __size_of_ExecuteRxParamSetupReq 0214  
                               UpdateJoinInProgress@state 0060  
                      __end_of_LORAWAN_LinkCheckConfigure 468A  
                               __end_of_RADIO_ReleaseData 7E6A  
                              _LORAWAN_LinkCheckConfigure 452C  
                                      __end_of_txPower915 FF62  
                                __size_of_EnableChannels2 0044  
                                   _HALResetPinMakeOutput 7E98  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0069  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                        ??_ConfigureRadio 0068  
                                      _SwTimerSetCallback 72F6  
             __end_of_UpdateRetransmissionAckTimeoutState 687A  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState 6808  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B8  
                                   ?_GenerateUSFrequency1 00A6  
                                   ?_GenerateUSFrequency2 00A6  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                           ?_GenerateUSFrequencyReception 00A6  
                                   __end_of_DIO0_ISR_Lora 7E88  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck 767A  
                SelectChannelForTransmission@lastDataRate 00C2  
                                   RADIO_WritePower@power 0066  
                                        _RADIO_TxDone$906 00AE  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                                            _rxWindowSize FF49  
                                  __end_of_EncKeySchedule 2E28  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 7E82  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue 74C8  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 7986  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters 7CBC  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 7CA6  
                                 UpdateTxPower@txPowerNew 0060  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$2509 00AC  
                        __end_of_INT1_SetInterruptHandler 7DCA  
                            FindSmallestDataRate@dataRate 0063  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 7E7C  
                                    _SystemBlockingWaitMs 770A  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                 __size_of_EnableChannels 00BA  
                                  ??_LORAWAN_SetDataRange 0068  
                            __end_of_UpdateJoinInProgress 7C44  
                            __end_of_ExecuteRxTimingSetup 78C2  
                                 __size_of_HALSPICSAssert 0004  
                __end_of_RADIO_WriteFSKFrequencyDeviation 69C2  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 6958  
                __end_of_LORAWAN_SetApplicationSessionKey 77C6  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 7798  
                                        ExtractMic@buffer 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0061  
                                _RADIO_UnhandledInterrupt 7616  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6F58  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 7ADA  
                                 __size_of_ExecuteLinkAdr 04B4  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 40EC  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 7E42  
                                     RADIO_WritePower@ocp 0064  
                                      ??_LORAWAN_Mainloop 00F9  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                       ??_UpdateDataRange 0061  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 77C6  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0174  
                                 EnableChannels2@endIndex 0064  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 6CDC  
                             __end_of_RADIO_SetModulation 7DD4  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003E  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
